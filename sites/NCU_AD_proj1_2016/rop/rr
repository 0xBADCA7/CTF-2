Gadgets information
============================================================
0x000000000041f32f : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041f399 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004259b5 : adc al, 0x13 ; jmp rdx
0x0000000000423fa5 : adc al, 0x16 ; sub eax, edx ; ret
0x0000000000436f78 : adc al, 0x18 ; add byte ptr [rax], al ; ret
0x000000000048f1b8 : adc al, 0x1a ; call 0x421e99
0x0000000000434bfa : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x0000000000433fad : adc al, 0x24 ; add rsp, 0x18 ; mov rax, rdx ; ret
0x000000000048ef8a : adc al, 0x24 ; mov edi, 1 ; call rax
0x0000000000410ffd : adc al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000430b70 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x14] ; ret
0x0000000000415d22 : adc al, 0x77 ; sub ecx, dword ptr [rcx - 0x7d] ; ret
0x0000000000470efb : adc al, 0x83 ; ret 0x8308
0x0000000000434323 : adc al, 0x89 ; ret 0xdaf7
0x000000000045ee88 : adc al, 0x8a ; add eax, dword ptr [rsi + rdx] ; ret
0x00000000004593ee : adc al, 0x8a ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000004207c0 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000041eeee : adc al, 0x91 ; sub eax, edx ; ret
0x00000000004259b1 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000004bb774 : adc al, 0x94 ; add byte ptr [rax], al ; sub rdi, rdx ; call qword ptr [rdx]
0x00000000004bbc74 : adc al, 0x99 ; add byte ptr [rax], al ; cwde ; cli ; jmp rsp
0x0000000000417177 : adc al, 0xa ; jmp r10
0x0000000000424113 : adc al, 0xa ; sub eax, edx ; ret
0x0000000000452f96 : adc al, 0xc5 ; sal byte ptr [rbp + 0x4a], 0 ; jmp rdx
0x0000000000452b8d : adc al, 0xc5 ; sal byte ptr [rdi + 0x4a], 0 ; jmp rdx
0x0000000000450ccd : adc al, 0xc5 ; sal byte ptr [rsi + 0x4a], 0 ; jmp rdx
0x0000000000452b4b : adc al, 0xc5 ; sar byte ptr [rax + 0x4a], 0 ; jmp rdx
0x0000000000452aef : adc al, 0xc5 ; sar byte ptr [rcx + 0x4a], 0 ; jmp rdx
0x0000000000451ecd : adc al, 0xc5 ; sar byte ptr [rdx + 0x4a], 0 ; jmp rdx
0x00000000004b3074 : adc al, 0xd ; add byte ptr [rax], al ; pop rax ; cmc ; call qword ptr [rax]
0x00000000004001c8 : adc al, 0xd7 ; and ch, ah ; int1 ; pop rdx ; ret 0xb50f
0x0000000000418651 : adc al, 0xe ; sub eax, edx ; ret
0x0000000000404aba : adc al, 0xe9 ; clc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000048f30c : adc al, 0xf7 ; add rsp, 8 ; ret
0x000000000049610d : adc al, 0xf8 ; jmp qword ptr [rax]
0x00000000004965b1 : adc al, 0xf9 ; jmp rax
0x000000000041f4d7 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041f541 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000450eee : adc al, byte ptr [rbx - 0x110f43] ; call qword ptr [rax]
0x000000000044733a : adc al, byte ptr [rbx - 0x54f43] ; call qword ptr [rax]
0x00000000004069a7 : adc al, ch ; ret
0x0000000000496105 : adc bh, al ; jmp qword ptr [rax - 0x1f0007ed]
0x0000000000438592 : adc bh, byte ptr [rdx - 0x3f7affd8] ; je 0x4385a8 ; ret
0x00000000004965ad : adc bh, cl ; call qword ptr [rax]
0x00000000004964a9 : adc bh, cl ; jmp rax
0x0000000000496489 : adc bh, cl ; push rax ; adc edi, ecx ; call rax
0x000000000041c975 : adc bl, ch ; call 0xffffffffc41252ca
0x00000000004193f5 : adc bl, ch ; call 0xffffffffc43a1d4a
0x000000000046be82 : adc bl, ch ; jno 0x46bed8 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000041c345 : adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x00000000004304a6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000430517 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000430477 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000004304a5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000467fa0 : adc byte ptr [r11 + 0x5d], r11b ; pop r12 ; ret
0x0000000000458a81 : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3948
0x000000000040a433 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3948
0x000000000045e618 : adc byte ptr [r8 + r9*4 + 0x63], al ; adc cl, byte ptr [rax + 1] ; ret
0x0000000000465e63 : adc byte ptr [r8 - 0x77], r9b ; ret 0x23e8
0x000000000046592e : adc byte ptr [r8 - 0x77], r9b ; ret 0x58e8
0x0000000000445439 : adc byte ptr [rax + 0x39], cl ; ret
0x0000000000412b9c : adc byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000040af04 : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000046c4ae : adc byte ptr [rax + 1], cl ; ret
0x000000000045e619 : adc byte ptr [rax + rcx*4 + 0x63], al ; adc cl, byte ptr [rax + 1] ; ret
0x00000000004960e0 : adc byte ptr [rax + rdi*8], ch ; jmp rax
0x000000000045ee85 : adc byte ptr [rax - 0x73], cl ; adc al, 0x8a ; add eax, dword ptr [rsi + rdx] ; ret
0x0000000000421f04 : adc byte ptr [rax - 0x73], cl ; jg 0x421f21 ; jne 0x421ef8 ; ret
0x000000000045ee84 : adc byte ptr [rax - 0x73], r9b ; adc al, 0x8a ; add eax, dword ptr [rsi + rdx] ; ret
0x000000000048faaa : adc byte ptr [rax - 0x75], cl ; jne 0x48fab5 ; call r14
0x0000000000478916 : adc byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x000000000042231a : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x0000000000458277 : adc byte ptr [rax - 0x77], cl ; jo 0x458295 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000458237 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000483b68 : adc byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x000000000045823b : adc byte ptr [rax - 0x77], cl ; ret
0x0000000000465e64 : adc byte ptr [rax - 0x77], cl ; ret 0x23e8
0x000000000046592f : adc byte ptr [rax - 0x77], cl ; ret 0x58e8
0x0000000000413a6a : adc byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000042d217 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x000000000042d253 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000401187 : adc byte ptr [rax - 0x7d], cl ; ret
0x000000000040fd33 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000415c03 : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000422786 : adc byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000492b47 : adc byte ptr [rax - 0x7f], cl ; jmp qword ptr [rax]
0x000000000040c3e4 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000420d8c : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041f6e1 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000450c83 : adc byte ptr [rax], al ; add byte ptr [rax], al ; jmp rdx
0x0000000000471a72 : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr fs:[rdx], eax ; jmp 0x46dcf1
0x0000000000433170 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004135c5 : adc byte ptr [rbp + 0x31], al ; in al, -0x18 ; ret 0xffcb
0x0000000000461f21 : adc byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x77], cl ; ret
0x000000000041c478 : adc byte ptr [rbp - 0x1b], dh ; mov rax, rdi ; ret
0x0000000000421f08 : adc byte ptr [rbp - 0x1b], dh ; ret
0x0000000000447341 : adc byte ptr [rbp - 0x6bf001bf], cl ; ret 0xd284
0x0000000000435107 : adc byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x000000000045afd9 : adc byte ptr [rbp - 0xc0d8a2e], al ; ret
0x0000000000437223 : adc byte ptr [rbx + 0x5d], bl ; and eax, 0xc ; pop r12 ; ret
0x00000000004564fc : adc byte ptr [rbx + 0x5d], bl ; mov rax, r12 ; pop r12 ; ret
0x0000000000413b8b : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004055c3 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004beeab : adc byte ptr [rbx + 0xa4a0202], al ; ret
0x00000000004bb723 : adc byte ptr [rbx + 0xa530202], al ; ret
0x00000000004bb753 : adc byte ptr [rbx + 0xa5f0202], al ; ret
0x000000000040e772 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000475ab7 : adc byte ptr [rbx - 0x3f7a8fb9], cl ; js 0x475ad1 ; ret
0x0000000000496260 : adc byte ptr [rbx - 8], bh ; jmp qword ptr [rax]
0x0000000000496a64 : adc byte ptr [rbx], bh ; stc ; call qword ptr [rax + 0x10fff93a]
0x000000000047b421 : adc byte ptr [rbx], cl ; xor eax, eax ; call 0x467727
0x000000000046ba59 : adc byte ptr [rcx + 0x29], cl ; ret
0x0000000000456132 : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000496a5c : adc byte ptr [rcx + rdi*8], bh ; call qword ptr [rax + 0x10fff93b]
0x00000000004965b0 : adc byte ptr [rcx + rdi*8], dl ; jmp rax
0x0000000000447da3 : adc byte ptr [rcx - 0x73], al ; dec byte ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000491e57 : adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00000000004186d3 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000486a47 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000433614 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040e775 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000048dee2 : adc byte ptr [rdi + rcx + 0x44], cl ; ret
0x00000000004336ff : adc byte ptr [rdi + rdx*8 + 0x48], dh ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000430d83 : adc byte ptr [rdi], cl ; test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000489ebb : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004889bf : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000489bbf : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004892bf : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004895bf : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000488cb7 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000488f64 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000489b64 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000489e64 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000489564 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000489264 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000488c5c : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000487ced : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000487b0d : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004884e5 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000487405 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000488305 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000040a434 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x0000000000444dfd : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x0000000000458c5e : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x0000000000444dfc : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3949
0x0000000000425ea9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000407e33 : adc byte ptr [rdx + rdx*8 + 0x394ce875], al ; ret
0x000000000043432b : adc byte ptr [rdx], al ; cmove eax, edx ; jmp 0x4342ef
0x0000000000424e0b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000496488 : adc byte ptr [rdx], dl ; stc ; push rax ; adc edi, ecx ; call rax
0x0000000000496a54 : adc byte ptr [rip + 0x3c90fff9], bh ; stc ; call qword ptr [rax]
0x0000000000475e6d : adc byte ptr [rsi + 0x47], bl ; add byte ptr [rdi + 0x6c3640], bh ; call rax
0x0000000000424cba : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x00000000004242b5 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004172c5 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000041cdfb : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000496a4c : adc byte ptr [rsi], bh ; stc ; call qword ptr [rax + 0x10fff93d]
0x00000000004b3801 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf56d
0x00000000004ba549 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf9cc
0x000000000048cb9f : adc byte ptr [rsp - 4], al ; ret
0x000000000048cbe5 : adc byte ptr [rsp - 8], al ; ret
0x0000000000488f67 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496368 : adc ch, ah ; clc ; call qword ptr [rdx]
0x0000000000496485 : adc cl, bh ; call qword ptr [rax]
0x00000000004964a5 : adc cl, bh ; inc dword ptr [rax] ; adc bh, cl ; jmp rax
0x00000000004965a9 : adc cl, bh ; jmp qword ptr [rax]
0x00000000004964c5 : adc cl, bh ; jmp rax
0x000000000045e61d : adc cl, byte ptr [rax + 1] ; ret
0x000000000046c344 : adc cl, byte ptr [rax + 1] ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00000000004193e5 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x000000000043eda3 : adc cl, byte ptr [rbp - 0x77] ; ret
0x000000000041b348 : adc cl, ch ; ret 0xfffd
0x00000000004965a8 : adc cl, dil ; jmp qword ptr [rax]
0x000000000041c3e4 : adc dh, bh ; ret
0x00000000004ba9c0 : adc dl, 0xf9 ; call rsp
0x00000000004b2288 : adc dl, bl ; std ; push qword ptr [rax - 0x26] ; std ; jmp rax
0x0000000000413980 : adc dword ptr [rax + 0x29], ecx ; ret 0x3948
0x000000000041ae9b : adc dword ptr [rax + 0x39], ecx ; ret
0x000000000046b6e1 : adc dword ptr [rax + rax + 0x48], ebp ; add esp, 8 ; jmp rax
0x0000000000464a74 : adc dword ptr [rax + rax + 0x5b], ebp ; pop rbp ; jmp rax
0x0000000000469ffd : adc dword ptr [rax + rax - 1], ebp ; loopne 0x46a064 ; ret
0x000000000041071e : adc dword ptr [rax - 0x77], ecx ; ret 0x8348
0x000000000046983a : adc dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x0000000000420d8b : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x000000000041f677 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000420c8f : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004b6066 : adc dword ptr [rax], ecx ; idiv bh ; sbb al, 0xd ; jbe 0x4b6070 ; cmc ; jmp qword ptr [rdx]
0x000000000044277b : adc dword ptr [rip - 0xc6f0003], esp ; ret
0x000000000041f676 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496491 : adc eax, 0x17d0fff9 ; stc ; call rax
0x00000000004965b5 : adc eax, 0x17e0fff9 ; stc ; jmp rax
0x00000000004385b7 : adc eax, 0x2879dc ; pop rbx ; ret
0x0000000000464edd : adc eax, 0x4000003 ; add rsp, 8 ; ret
0x0000000000464e19 : adc eax, 0x4000003 ; xor eax, eax ; ret
0x0000000000400d08 : adc eax, 0x5b000001 ; pop rbp ; pop r12 ; ret
0x000000000046f4cb : adc eax, 0x83480000 ; ret
0x000000000041f201 : adc eax, 0x83480000 ; ret 0xe910
0x00000000004bb3cf : adc eax, 0xd1cfffa ; jbe 0x4bb3f1 ; cli ; jmp qword ptr [rdx]
0x00000000004bb387 : adc eax, 0xd1cfffa ; jge 0x4bb3a9 ; cli ; jmp qword ptr [rdx]
0x00000000004bb33f : adc eax, 0xd1cfffa ; stosb byte ptr [rdi], al ; or al, 0xfa ; jmp qword ptr [rdx]
0x000000000045a82a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000046fda2 : adc eax, dword ptr [eax] ; add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000046fda3 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000420aee : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000487229 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000488c5f : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046cf09 : adc eax, eax ; ret
0x000000000046d046 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x0000000000441efe : adc ebp, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x7b73
0x00000000004ad2a5 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x0000000000467eac : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000408f0d : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000047b930 : adc ecx, dword ptr [rax - 0x73] ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000040e71c : adc ecx, dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000045a91c : adc ecx, dword ptr [rax - 0x7d] ; in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000479b29 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000402bc3 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4901
0x0000000000441a74 : adc ecx, dword ptr [rcx + 0x29d231f3] ; ret
0x00000000004bd2c6 : adc ecx, dword ptr [rcx + 0xd1cfffb] ; ret
0x0000000000490367 : adc ecx, dword ptr [rcx - 0x77] ; ret
0x0000000000496529 : adc ecx, edi ; inc dword ptr [rax + 0x13] ; stc ; jmp qword ptr [rax]
0x0000000000496549 : adc ecx, edi ; inc dword ptr [rax] ; adc edi, ecx ; jmp rax
0x000000000047b4e4 : adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000047b598 : adc edi, dword ptr [rcx] ; ret 0x850f
0x0000000000496109 : adc edi, eax ; jmp rax
0x000000000049648d : adc edi, ecx ; call rax
0x000000000049652d : adc edi, ecx ; jmp qword ptr [rax]
0x000000000049654d : adc edi, ecx ; jmp rax
0x00000000004bb38d : adc edi, edx ; jmp qword ptr [rdx]
0x00000000004ae7be : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x000000000040cba1 : adc esi, esi ; ret 0xf02
0x0000000000488e42 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041c344 : adc r11b, r14b ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000487390 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046d045 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000041c3e3 : adc sil, r15b ; ret
0x00000000004b9343 : add ah, ah ; outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; pop rax ; mov dh, 0xf8 ; jmp qword ptr [rsi]
0x00000000004bdc23 : add ah, al ; mov eax, 0xdc880000 ; sti ; call qword ptr [rdx]
0x00000000004330fe : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000433121 : add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000004331bf : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000004330dd : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004b693b : add ah, bl ; add byte ptr [r8], r8b ; push rax ; jrcxz 0x4b6940 ; jmp rbx
0x00000000004b2f3b : add ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax], dh ; cmc ; call qword ptr [rbx]
0x00000000004b513b : add ah, bl ; sub eax, 0xa3c00000 ; cmc ; call qword ptr [rdx]
0x000000000046b4df : add ah, byte ptr [rax + 0x48006c1b] ; add esp, 0x58 ; ret
0x00000000004bb24b : add ah, ch ; mov es, word ptr [rax] ; add byte ptr [rax - 3], dh ; stc ; jmp qword ptr [rdx]
0x00000000004ba84b : add ah, ch ; test byte ptr [rax], al ; add byte ptr [rax - 0x30], dh ; stc ; jmp rbx
0x00000000004be72b : add ah, cl ; ret
0x00000000004bef53 : add ah, dh ; retf ; add byte ptr [rax], al ; clc ; and bh, ch ; call qword ptr [rbx]
0x00000000004bd533 : add ah, dl ; mov cl, 0 ; add byte ptr [rax - 0x74], cl ; sti ; jmp qword ptr [rdx]
0x00000000004be333 : add ah, dl ; mov edi, 0xbc880000 ; cld ; call qword ptr [rax]
0x000000000043d30f : add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x8b49
0x0000000000467018 : add al, 0 ; add byte ptr [rax + 0x63], cl ; ret
0x000000000046092d : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000418e0d : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004219af : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000418e31 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000048fbd1 : add al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000435aec : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x000000000045a8b3 : add al, 0 ; add byte ptr [rax], al ; ret
0x000000000046a9cb : add al, 0 ; add byte ptr [rcx - 0x73], al ; pop rsi ; dec dword ptr [rax + 0x63] ; ret
0x000000000045c24b : add al, 0 ; add byte ptr [rdi + rcx - 0x49], al ; ret 0x8d42
0x00000000004806e9 : add al, 0 ; add byte ptr [rdi], cl ; ret 0xc801
0x000000000043314d : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000045ee8b : add al, 0x16 ; ret
0x0000000000423fa1 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000041850a : add al, 0x17 ; sub eax, ecx ; ret
0x0000000000475ed0 : add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043a389 : add al, 0x24 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000046a098 : add al, 0x24 ; add rsp, 0x48 ; jmp r11
0x000000000043d57d : add al, 0x24 ; call qword ptr [rbx]
0x00000000004396a6 : add al, 0x24 ; call rbx
0x000000000044486a : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000407511 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000459ace : add al, 0x31 ; ret
0x00000000004599ca : add al, 0x37 ; ret
0x000000000040e1af : add al, 0x3a ; ret
0x0000000000432dd3 : add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000464ee1 : add al, 0x48 ; add esp, 8 ; ret
0x0000000000467f42 : add al, 0x48 ; cmp ecx, dword ptr [rsi + rdi] ; jae 0x467f0a ; xor eax, eax ; ret
0x0000000000467895 : add al, 0x48 ; cmp edx, ecx ; jne 0x467851 ; mov eax, dword ptr [rdx] ; ret
0x00000000004309db : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x000000000042fee9 : add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000042fefb : add al, 0x48 ; lea eax, dword ptr [rdx + 5] ; ret
0x00000000004587c3 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000045871e : add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000042aa1a : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00000000004585b4 : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000042e729 : add al, 0x48 ; mov eax, edi ; ret
0x00000000004596c4 : add al, 0x48 ; xor eax, eax ; ret
0x000000000042fef7 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x000000000042e737 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x0000000000412a31 : add al, 0x74 ; cmp al, 0x89 ; ret 0xb48b
0x0000000000441a72 : add al, 0x77 ; adc ecx, dword ptr [rcx + 0x29d231f3] ; ret
0x0000000000415f05 : add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret
0x000000000049164c : add al, 0x81 ; add r9, rax ; jmp r9
0x000000000048daa5 : add al, 0x81 ; add rcx, rax ; jmp rcx
0x000000000048c555 : add al, 0x81 ; je 0x48c535 ; ret
0x000000000041eeeb : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000048c551 : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0x48c539 ; ret
0x00000000004207c3 : add al, 0x81 ; sub eax, edx ; ret
0x000000000043327a : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x433268 ; ret
0x000000000041ec47 : add al, 0x82 ; sub eax, ecx ; ret
0x000000000048d9a4 : add al, 0x83 ; add rax, r11 ; jmp rax
0x000000000043e4a7 : add al, 0x83 ; cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4806
0x000000000048e4f4 : add al, 0x86 ; add r8, r14 ; jmp r8
0x000000000048ea01 : add al, 0x87 ; add rax, r15 ; jmp rax
0x000000000042fee6 : add al, 0x88 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000042e726 : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x000000000043327d : add al, 0x8a ; je 0x433265 ; ret
0x000000000045afd7 : add al, 0x8b ; adc byte ptr [rbp - 0xc0d8a2e], al ; ret
0x000000000045686b : add al, 0x8b ; cmp byte ptr [rax - 0x77], cl ; ret 0xef83
0x00000000004504f0 : add al, 0x8b ; or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x00000000004569a1 : add al, 0x8b ; xor byte ptr [rax - 0x77], cl ; ret 0xee83
0x000000000048fc34 : add al, 0xb8 ; add r8, rax ; jmp r8
0x00000000004b56dc : add al, 0xbd ; cmc ; jmp qword ptr [rdx]
0x000000000046cf9d : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x46cff9
0x000000000047b78d : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x47b7e9
0x00000000004375e7 : add al, 0xe8 ; ret
0x00000000004760b1 : add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041864d : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000045b2aa : add al, 0xf ; xchg eax, ebp ; ret 0xd7e9
0x000000000045b116 : add al, 0xf ; xchg eax, ebp ; ret 0xf883
0x0000000000493758 : add al, 0xf1 ; and al, byte ptr [rax] ; jne 0x493783 ; ret
0x000000000042ad83 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000467a71 : add al, 0xf6 ; ret 0x7402
0x000000000041c439 : add al, 0xf6 ; ret 0x7408
0x00000000004507d4 : add al, 0xff ; or dh, byte ptr [rbp + 2] ; ret
0x00000000004bbc4d : add al, 2 ; in al, 0xa ; ret
0x0000000000425517 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000046da69 : add al, 6 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x0000000000416edd : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x0000000000422a98 : add al, 7 ; ret
0x000000000042410f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000004b896f : add al, ah ; clc ; call qword ptr [rax]
0x00000000004b490f : add al, ah ; mov ebp, esi ; jmp qword ptr [rcx]
0x00000000004be72f : add al, ah ; or ch, bh ; jmp rsp
0x00000000004b852f : add al, al ; cwde ; std ; call rsp
0x00000000004ba6af : add al, al ; retf ; stc ; jmp rsi
0x0000000000476165 : add al, al ; sbb ebp, dword ptr [rax + rax + 0x48] ; add esp, 8 ; ret
0x00000000004bef57 : add al, bh ; and bh, ch ; call qword ptr [rbx]
0x00000000004bb187 : add al, bh ; clc ; stc ; call rax
0x00000000004bcab7 : add al, bh ; in eax, -6 ; jmp qword ptr [rdx]
0x00000000004b89d7 : add al, bl ; xor bh, al ; jmp rax
0x00000000004555e7 : add al, bpl ; ret
0x0000000000489d42 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004193e1 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x000000000040eb05 : add al, byte ptr [rax] ; add bl, dh ; ret
0x000000000043ece4 : add al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000041b9f3 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000004803bd : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x000000000048f4ca : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000045db67 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000405686 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000418fad : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000420581 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000418fd1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000048fbe1 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000435f5c : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000435ccf : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000435b9b : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000435b13 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x000000000045a893 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000045e1f4 : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000432384 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x000000000045e7da : add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], al ; ror dword ptr [rdi], -0x7c ; ret 1
0x000000000048f4d7 : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0xc3 ; nop ; ret
0x0000000000402cfc : add al, byte ptr [rax] ; add byte ptr [rdi + 0x6c32a0], bh ; call rax
0x0000000000441de4 : add al, byte ptr [rax] ; mov rdi, rbx ; call r12
0x000000000048e2a0 : add al, byte ptr [rax] ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x0000000000411cc3 : add al, byte ptr [rax] ; nop dword ptr [rax] ; ret
0x000000000040b565 : add al, byte ptr [rax] ; pop rdx ; cdqe ; ret
0x00000000004385ca : add al, byte ptr [rax] ; xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x4385be
0x000000000043707e : add al, byte ptr [rcx + 0x39] ; ret
0x00000000004b3770 : add al, byte ptr [rcx + 0xa] ; ret
0x00000000004385c9 : add al, byte ptr fs:[rax] ; xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x4385bf
0x000000000045db66 : add al, byte ptr ss:[rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043ee05 : add al, ch ; and eax, 0x89fffc2b ; ret 0xe283
0x000000000045e866 : add al, ch ; hlt ; add ebx, edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000046821f : add al, ch ; jmp 0x4681e9
0x000000000047e3a2 : add al, ch ; mov byte ptr [rip - 0x76b70008], dh ; ret
0x000000000044d0f2 : add al, ch ; pop rax ; ret
0x00000000004be307 : add al, ch ; pop rsp ; cld ; call qword ptr [rax]
0x0000000000406af7 : add al, ch ; ret
0x000000000045cff8 : add al, ch ; ret 0x18d
0x0000000000408c88 : add al, ch ; ret 0x19d
0x0000000000404958 : add al, ch ; ret 0x326
0x00000000004732b8 : add al, ch ; ret 0xfe77
0x00000000004bbee7 : add al, cl ; pop rdx ; cli ; jmp rdi
0x00000000004145eb : add al, dh ; cmp eax, dword ptr [rcx] ; ret
0x00000000004ba8bf : add al, dh ; sar cl, 1 ; call rcx
0x00000000004b9d0f : add al, dh ; stc ; call qword ptr [rsi]
0x00000000004b709f : add al, dl ; jnp 0x4b709d ; call qword ptr [rax]
0x00000000004be97f : add al, dl ; or al, 0xfd ; call rsp
0x00000000004b793f : add al, dl ; sal bh, cl ; call qword ptr [rdi]
0x00000000004bf176 : add bh, bh ; inc dword ptr [rcx] ; or ebp, edx ; add dword ptr [rbx], eax ; ret
0x0000000000469fff : add bh, bh ; loopne 0x46a062 ; ret
0x0000000000476030 : add bh, bh ; loopne 0x476093 ; ret
0x0000000000401184 : add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000402778 : add bh, bh ; sar dword ptr [rdi + 0x6c20c0], cl ; call rbx
0x000000000040bd6d : add bh, bh ; xchg eax, ecx ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000045e832 : add bh, bl ; dec dword ptr [rax - 0x77] ; ret
0x000000000046d164 : add bh, byte ptr [rax + 1] ; ret
0x0000000000434273 : add bh, byte ptr [rax - 1] ; ret
0x0000000000432752 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x0000000000496625 : add bh, cl ; call qword ptr [rax]
0x0000000000463ec6 : add bh, dh ; ret 0x804
0x000000000041bce4 : add bl, al ; lea rax, qword ptr [rip + 0x15313] ; ret
0x000000000043857a : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000045afb5 : add bl, al ; ret
0x00000000004bb756 : add bl, byte ptr [rdi + 0xa] ; ret
0x0000000000434360 : add bl, ch ; mov byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000046028a : add bl, ch ; mov cs, word ptr [rax - 0x7d] ; ret
0x0000000000464a81 : add bl, ch ; mov eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x000000000043c575 : add bl, ch ; ret 0x8b48
0x00000000004bc9da : add bl, cl ; ret
0x0000000000408558 : add bl, dh ; ret
0x00000000004129fc : add bl, dl ; loopne 0x41298d ; rol byte ptr [rcx + 0xf], 0x94 ; ret
0x00000000004100ad : add byte ptr [eax], al ; ret
0x00000000004074f1 : add byte ptr [r10 - 0x10], sil ; mov edi, ebx ; call 0x433748
0x000000000047abe2 : add byte ptr [r13 + r9*4 + 0x6d], cl ; mov al, 0xe8 ; ret
0x000000000043a36d : add byte ptr [r15 + 0x6c3220], dil ; call rax
0x0000000000475e6f : add byte ptr [r15 + 0x6c3640], r15b ; call rax
0x000000000040037c : add byte ptr [r15], cl ; xchg eax, esp ; ret
0x000000000043316d : add byte ptr [r8 + 0x10], dil ; pop rbx ; ret
0x0000000000467f81 : add byte ptr [r8 + 0x39], r9b ; ret
0x0000000000410113 : add byte ptr [r8 + 0x39], r9b ; ret 0xd575
0x0000000000437e3b : add byte ptr [r8 + 0xf], cl ; ret
0x000000000041b93d : add byte ptr [r8 + 0xf], cl ; ret 0x8348
0x00000000004085f4 : add byte ptr [r8 + 0xf], cl ; ret 0x8948
0x000000000040b096 : add byte ptr [r8 + 0xf], cl ; ret 0x8b48
0x000000000047bac0 : add byte ptr [r8 + 1], cl ; ret 0x8b48
0x000000000043796d : add byte ptr [r8 + 9], cl ; ret 0x8948
0x000000000047a619 : add byte ptr [r8 - 0x77], cl ; ret
0x000000000040182e : add byte ptr [r8 - 0x7b], cl ; fisttp dword ptr [rax - 0x77] ; ret 0x894c
0x000000000047d2a4 : add byte ptr [r8 - 0x7d], cl ; ret
0x0000000000472ae0 : add byte ptr [r8 - 0x7d], r9b ; ret
0x000000000043fca3 : add byte ptr [r8 - 0x7d], r9b ; ret 0x4901
0x0000000000434419 : add byte ptr [r8], al ; ret
0x00000000004b68f5 : add byte ptr [r8], r8b ; js 0x4b68e1 ; cmc ; call qword ptr [rcx]
0x00000000004b693d : add byte ptr [r8], r8b ; push rax ; jrcxz 0x4b693e ; jmp rbx
0x00000000004b709d : add byte ptr [r8], r8b ; sar byte ptr [rbx - 0xa], 1 ; call qword ptr [rax]
0x00000000004b7115 : add byte ptr [r8], r8b ; sub byte ptr [rcx - 0xa], bl ; jmp qword ptr [rsi]
0x00000000004b70fd : add byte ptr [r8], r8b ; xor byte ptr [rcx - 0xa], bl ; call qword ptr [rax]
0x000000000040aeff : add byte ptr [r9 + rcx*4 + 0x6b], cl ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000047b422 : add byte ptr [r9], sil ; shr al, 0xf5 ; ret 0xfffe
0x000000000043316e : add byte ptr [rax + 0x10], bh ; pop rbx ; ret
0x00000000004b86d7 : add byte ptr [rax + 0x1c], bh ; clc ; call rdx
0x00000000004b2a47 : add byte ptr [rax + 0x1f], cl ; cmc ; call qword ptr [rax]
0x000000000040af5f : add byte ptr [rax + 0x29], cl ; ret
0x000000000048dca5 : add byte ptr [rax + 0x29], cl ; ret 0x2948
0x000000000044e3b6 : add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000043d311 : add byte ptr [rax + 0x29], cl ; ret 0x8b49
0x000000000040f7a5 : add byte ptr [rax + 0x29], cl ; ret 0x8d49
0x00000000004bb777 : add byte ptr [rax + 0x2b], cl ; cli ; call qword ptr [rdx]
0x00000000004b8a27 : add byte ptr [rax + 0x38], ch ; clc ; jmp qword ptr [rdx]
0x000000000040a409 : add byte ptr [rax + 0x39], cl ; fmul dword ptr [rax + 0xf] ; ret
0x000000000041205f : add byte ptr [rax + 0x39], cl ; ret
0x0000000000441f00 : add byte ptr [rax + 0x39], cl ; ret 0x7b73
0x000000000040a9ef : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000040fc06 : add byte ptr [rax + 0x39], cl ; ret 0xb76
0x0000000000410114 : add byte ptr [rax + 0x39], cl ; ret 0xd575
0x00000000004371f0 : add byte ptr [rax + 0x39], cl ; ret 0xda75
0x0000000000478fae : add byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004b3077 : add byte ptr [rax + 0x47], bl ; cmc ; call qword ptr [rax]
0x00000000004b308f : add byte ptr [rax + 0x47], dl ; cmc ; call qword ptr [rdx]
0x0000000000475e40 : add byte ptr [rax + 0x48006c36], al ; add esp, 8 ; ret
0x00000000004b38a7 : add byte ptr [rax + 0x57], bh ; cmc ; jmp rsp
0x000000000048e2a1 : add byte ptr [rax + 0x63], cl ; or al, 0x8a ; add rdx, rcx ; jmp rdx
0x000000000046701a : add byte ptr [rax + 0x63], cl ; ret
0x0000000000482276 : add byte ptr [rax + 0x63], cl ; ret 0x8b44
0x0000000000469483 : add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x00000000004b9e6f : add byte ptr [rax + 0x65], al ; stc ; call rdi
0x000000000045e9df : add byte ptr [rax + 0x66], bh ; syscall ; ret
0x00000000004ba18f : add byte ptr [rax + 0x66], dh ; stc ; call rdx
0x000000000045e9ff : add byte ptr [rax + 0x68], bh ; syscall ; ret
0x000000000045e9ef : add byte ptr [rax + 0x6b], bh ; syscall ; ret
0x00000000004106a7 : add byte ptr [rax + 0x6c0860], bh ; ret
0x000000000045ea0f : add byte ptr [rax + 0x6c], bh ; syscall ; ret
0x00000000004193df : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x000000000043097f : add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000045b35f : add byte ptr [rax + 0xc9], bh ; syscall ; ret
0x000000000040c5c3 : add byte ptr [rax + 0xf], al ; mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000469367 : add byte ptr [rax + 0xf], al ; test dword ptr [rax], eax ; or al, 0 ; add bl, dh ; ret
0x0000000000459935 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x0000000000437e3c : add byte ptr [rax + 0xf], cl ; ret
0x000000000041b93e : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x00000000004085f5 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000040b097 : add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x000000000045cac0 : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x000000000040164f : add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000441d1f : add byte ptr [rax + 1], bh ; ret
0x000000000041b9f5 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000047a527 : add byte ptr [rax + 1], cl ; ret
0x0000000000477409 : add byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000477e19 : add byte ptr [rax + 1], cl ; ret 0x894c
0x000000000047bac1 : add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000476a77 : add byte ptr [rax + 1], cl ; ret 0x8d48
0x000000000043796e : add byte ptr [rax + 9], cl ; ret 0x8948
0x00000000004b641b : add byte ptr [rax + rax*2 - 0x61b00000], bh ; cmc ; call rcx
0x00000000004b3383 : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; test al, 0x4d ; cmc ; call qword ptr [rax]
0x00000000004be727 : add byte ptr [rax + rax], cl ; add ah, cl ; ret
0x000000000046936b : add byte ptr [rax + rax], cl ; add bl, dh ; ret
0x00000000004139f1 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000413ba1 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004be69f : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; ret
0x00000000004bcc13 : add byte ptr [rax + rbp*4 + 0x69a80000], dh ; std ; jmp qword ptr [rdi]
0x00000000004bcbab : add byte ptr [rax + rbp*4], cl ; add byte ptr [rax], dh ; std ; call rcx
0x0000000000464ee0 : add byte ptr [rax + rcx*2], al ; add esp, 8 ; ret
0x00000000004bdc0b : add byte ptr [rax + rdi*4 - 0x23700000], ch ; sti ; call qword ptr [rax]
0x00000000004bdbf3 : add byte ptr [rax + rdi*4 - 0x23780000], dl ; sti ; call qword ptr [rdx]
0x000000000045b572 : add byte ptr [rax - 0x178b7f80], 0x89 ; ret 0x8b48
0x0000000000402e2e : add byte ptr [rax - 0x178b7f80], 0x89 ; ret 0x8b4c
0x00000000004b693f : add byte ptr [rax - 0x1d], dl ; cmc ; jmp rbx
0x00000000004b68f7 : add byte ptr [rax - 0x1f], bh ; cmc ; call qword ptr [rcx]
0x00000000004ba84f : add byte ptr [rax - 0x30], dh ; stc ; jmp rbx
0x00000000004b9adf : add byte ptr [rax - 0x31], dh ; clc ; call rax
0x000000000047d5e3 : add byte ptr [rax - 0x39], cl ; ret
0x000000000040a33f : add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000044c058 : add byte ptr [rax - 0x39], cl ; ret 0xffe8
0x0000000000433fa0 : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000045a89f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000045a87f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000045a8df : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x000000000045a88f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000045a8cf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x0000000000441dfd : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000047c304 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000004b9347 : add byte ptr [rax - 0x4a], bl ; clc ; jmp qword ptr [rsi]
0x00000000004b641f : add byte ptr [rax - 0x62], dl ; cmc ; call rcx
0x0000000000496b88 : add byte ptr [rax - 0x67ef0007], bl ; stc ; jmp qword ptr [rax]
0x00000000004b8f17 : add byte ptr [rax - 0x68], bl ; clc ; call qword ptr [rdx]
0x000000000048d8af : add byte ptr [rax - 0x73], cl ; je 0x48d8e0 ; cmp byte ptr [rax - 0x7d], cl ; ret
0x000000000043528f : add byte ptr [rax - 0x73], cl ; push rbx ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000004bc27f : add byte ptr [rax - 0x73], dh ; cli ; call rdx
0x00000000004bd537 : add byte ptr [rax - 0x74], cl ; sti ; jmp qword ptr [rdx]
0x0000000000452f93 : add byte ptr [rax - 0x75], cl ; adc al, 0xc5 ; sal byte ptr [rbp + 0x4a], 0 ; jmp rdx
0x0000000000452b8a : add byte ptr [rax - 0x75], cl ; adc al, 0xc5 ; sal byte ptr [rdi + 0x4a], 0 ; jmp rdx
0x0000000000450cca : add byte ptr [rax - 0x75], cl ; adc al, 0xc5 ; sal byte ptr [rsi + 0x4a], 0 ; jmp rdx
0x0000000000452b48 : add byte ptr [rax - 0x75], cl ; adc al, 0xc5 ; sar byte ptr [rax + 0x4a], 0 ; jmp rdx
0x0000000000452aec : add byte ptr [rax - 0x75], cl ; adc al, 0xc5 ; sar byte ptr [rcx + 0x4a], 0 ; jmp rdx
0x0000000000451eca : add byte ptr [rax - 0x75], cl ; adc al, 0xc5 ; sar byte ptr [rdx + 0x4a], 0 ; jmp rdx
0x000000000040fd2f : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045cebf : add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000441e2f : add byte ptr [rax - 0x75], cl ; add eax, 0x281439 ; ret
0x000000000043982f : add byte ptr [rax - 0x75], cl ; add eax, 0x28a7d1 ; ret
0x000000000040ea3f : add byte ptr [rax - 0x75], cl ; add eax, 0x2b1659 ; ret
0x000000000040d8b6 : add byte ptr [rax - 0x75], cl ; jmp rax
0x00000000004397c8 : add byte ptr [rax - 0x75], cl ; jnp 0x4397ea ; call rax
0x00000000004594e6 : add byte ptr [rax - 0x75], cl ; js 0x459531 ; jmp 0x4594b6
0x0000000000464106 : add byte ptr [rax - 0x75], cl ; mov r9b, r13b ; ret
0x00000000004578af : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000467bd2 : add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000412847 : add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0x7404
0x000000000040f277 : add byte ptr [rax - 0x75], cl ; push rbx ; or byte ptr [rax + 0x29], cl ; ret 0x148
0x00000000004272df : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043d57a : add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call qword ptr [rbx]
0x000000000040ea6f : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000046cdcc : add byte ptr [rax - 0x77], cl ; dec byte ptr [rax - 0x77] ; ret 0x8948
0x000000000045afa7 : add byte ptr [rax - 0x77], cl ; enter 0x31c3, -0x40 ; nop ; ret
0x00000000004086e7 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000048f4cc : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000414a61 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x000000000040d372 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000040d4f2 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000408551 : add byte ptr [rax - 0x77], cl ; mov al, byte ptr [rax + 1] ; add byte ptr [rax], al ; ret
0x0000000000491a27 : add byte ptr [rax - 0x77], cl ; out 0x41, eax ; call rsp
0x0000000000435f6b : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x0000000000414b77 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x0000000000402f40 : add byte ptr [rax - 0x77], cl ; ret
0x0000000000474751 : add byte ptr [rax - 0x77], cl ; ret 0x26e8
0x0000000000469e15 : add byte ptr [rax - 0x77], cl ; ret 0x2b49
0x0000000000475c9c : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x0000000000490504 : add byte ptr [rax - 0x77], cl ; ret 0x3948
0x000000000041311c : add byte ptr [rax - 0x77], cl ; ret 0x58b
0x0000000000433c1c : add byte ptr [rax - 0x77], cl ; ret 0x6b8
0x0000000000404f0f : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000041010a : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004089bf : add byte ptr [rax - 0x77], cl ; ret 0x8949
0x000000000044440f : add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000040f691 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000045115b : add byte ptr [rax - 0x77], cl ; ret 0xb848
0x000000000041b8c0 : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000044eb9f : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000040bd73 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000046fda5 : add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000440a91 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; fimul word ptr [rax - 0x77] ; ret 0x8948
0x00000000004596bf : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000040182f : add byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rax - 0x77] ; ret 0x894c
0x0000000000458fda : add byte ptr [rax - 0x7b], cl ; push qword ptr [rsi + rsi*4 - 0xa] ; ret 0x7508
0x00000000004089e7 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rcx - 0x77], 4 ; and al, 0x74 ; ret 0x8b4c
0x000000000047c0de : add byte ptr [rax - 0x7c], al ; test byte ptr [rdi], 0x84 ; ret 0x15
0x0000000000414a89 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000048cdc6 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x00000000004018d1 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004133c9 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x0000000000449046 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x0000000000448d77 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000408ae2 : add byte ptr [rax - 0x7d], cl ; in al, dx ; xor byte ptr [rcx - 0x77], cl ; ret 0xb941
0x000000000040175e : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000412b0f : add byte ptr [rax - 0x7d], cl ; ret 0x110
0x000000000043284f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000043c9c7 : add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x0000000000437fd3 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000458ee6 : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000004697a7 : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004932bf : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000043fca4 : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000045dddf : add byte ptr [rax - 0x7d], cl ; ret 0x4909
0x00000000004186cf : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f0df : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000040f74c : add byte ptr [rax - 0x7d], cl ; ret 0x4d07
0x000000000041bbef : add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000041bb7f : add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00000000004830a7 : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000463baf : add byte ptr [rax - 0x7d], cl ; ret 0x8304
0x000000000043b3fc : add byte ptr [rax - 0x7d], cl ; ret 0x8801
0x000000000041b1a2 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000041f063 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000471847 : add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x00000000004186f3 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000046705f : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000458aac : add byte ptr [rax - 0x7d], cl ; ret 0xf301
0x000000000042404f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000044198e : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x0000000000442ed7 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x8301
0x000000000049175a : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x4c ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000004802a7 : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x4801
0x0000000000408380 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000404951 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x326
0x000000000042856b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004b477f : add byte ptr [rax - 0x7f], dh ; cmc ; jmp rbx
0x00000000004bcf9f : add byte ptr [rax - 0xa], ah ; cli ; jmp rbx
0x00000000004b2977 : add byte ptr [rax - 0xe], ch ; std ; call rdi
0x0000000000458697 : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000040e9ef : add byte ptr [rax - 1], bh ; ret
0x000000000040edee : add byte ptr [rax - 1], dil ; ret
0x00000000004bb24f : add byte ptr [rax - 3], dh ; stc ; jmp qword ptr [rdx]
0x0000000000408384 : add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000404955 : add byte ptr [rax], 0 ; add al, ch ; ret 0x326
0x0000000000477e16 : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0x894c
0x000000000040bd70 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000042ad8b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000046b70b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x00000000004368fb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040f93b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x0000000000422a3b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000424531 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000408390 : add byte ptr [rax], 0 ; add cl, ch ; ret
0x0000000000416c87 : add byte ptr [rax], 0 ; add cl, ch ; ret 0xffdf
0x0000000000402fb2 : add byte ptr [rax], 0 ; add cl, ch ; ret 0xffed
0x00000000004bb772 : add byte ptr [rax], al ; adc al, 0x94 ; add byte ptr [rax], al ; sub rdi, rdx ; call qword ptr [rdx]
0x00000000004bbc72 : add byte ptr [rax], al ; adc al, 0x99 ; add byte ptr [rax], al ; cwde ; cli ; jmp rsp
0x00000000004b3072 : add byte ptr [rax], al ; adc al, 0xd ; add byte ptr [rax], al ; pop rax ; cmc ; call qword ptr [rax]
0x00000000004ba9be : add byte ptr [rax], al ; adc dl, 0xf9 ; call rsp
0x00000000004be729 : add byte ptr [rax], al ; add ah, cl ; ret
0x0000000000464edf : add byte ptr [rax], al ; add al, 0x48 ; add esp, 8 ; ret
0x0000000000406af5 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000045cff6 : add byte ptr [rax], al ; add al, ch ; ret 0x18d
0x0000000000408c86 : add byte ptr [rax], al ; add al, ch ; ret 0x19d
0x0000000000404956 : add byte ptr [rax], al ; add al, ch ; ret 0x326
0x00000000004732b6 : add byte ptr [rax], al ; add al, ch ; ret 0xfe77
0x000000000045afb3 : add byte ptr [rax], al ; add bl, al ; ret
0x000000000043435e : add byte ptr [rax], al ; add bl, ch ; mov byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000043c573 : add byte ptr [rax], al ; add bl, ch ; ret 0x8b48
0x000000000040df0e : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000467f6d : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000048dca3 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x000000000044e3b4 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000040f7a3 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8d49
0x000000000040a407 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; fmul dword ptr [rax + 0xf] ; ret
0x000000000043d3c1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000040a9ed : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000043097d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000040164d : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000000000441d1d : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000047a525 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x0000000000477407 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000477e17 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x894c
0x00000000004be69d : add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; ret
0x000000000044f4b5 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffe8
0x0000000000441dfb : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000040fd2d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040d8b4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x00000000004594e4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; js 0x459533 ; jmp 0x4594b8
0x0000000000412845 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0x7404
0x000000000043d578 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call qword ptr [rbx]
0x000000000040ea6d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000491a25 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out 0x41, eax ; call rsp
0x0000000000435f69 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x0000000000408591 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047474f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x26e8
0x0000000000469e13 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2b49
0x0000000000490502 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x3948
0x0000000000478a77 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000041b8be : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000040bd71 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000041569f : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043284d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000004396bc : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000479dcd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004932bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000004206b7 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f0dd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000041bbed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000041bb7d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x0000000000420721 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000471845 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x000000000046705d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000042404d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000442ed5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x8301
0x0000000000482b95 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x4801
0x0000000000429d78 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000040e9ed : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000040ea2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000467f6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000040a9eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000040ea6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000045b6ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047474d : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x26e8
0x00000000004430fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043284b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000004812fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004932bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000041bbeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000041bb7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000046705b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000040de5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a23e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a28d2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x0000000000415d4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret
0x0000000000432a8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000047a38b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000410a8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000004186ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000041727b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000044c1eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, bl ; fmul dword ptr [rax - 0x39] ; ret 0xffe8
0x000000000045a85c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000046b08f : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000466ef7 : add byte ptr [rax], al ; add byte ptr [rax], al ; call r12
0x00000000004a440c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004a35bc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x0000000000430fac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000430fbc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000430fcc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000430fdc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000430fec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000430f2c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000430f3c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000430f4c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000430f5c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000430f6c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000430f7c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000430f8c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000430f9c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000430f1c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000043097c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000043035c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000040e9ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000441d1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000042ad8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000046b70c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000040ea5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000040ea6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000042aedc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000004986c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret 0x43
0x000000000040dc6b : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040d2dd : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000040de5d : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a33dc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004a3b74 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004a23e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a28d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00000000004636c6 : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x4636da ; call rax
0x00000000004330ac : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000040e05c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000422a3c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004be726 : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, cl ; ret
0x000000000040a910 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x0000000000436ef8 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbaf02e], al ; ret
0x0000000000415d4d : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret
0x000000000043311c : add byte ptr [rax], al ; add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000004373e6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000042a66d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00000000004089d6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000040dc6c : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004003cb : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040bd0d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; xor eax, eax ; pop r12 ; ret
0x0000000000450f87 : add byte ptr [rax], al ; add byte ptr [rbx - 0x110f43], al ; call qword ptr [rax]
0x0000000000451773 : add byte ptr [rax], al ; add byte ptr [rbx - 0x116343], al ; call qword ptr [rax]
0x0000000000408822 : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; call 0xffffffffc39cc992
0x0000000000480a15 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; ret
0x000000000045054f : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; ret
0x0000000000450481 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; ret
0x0000000000461f9c : add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; ret
0x0000000000432a8d : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x0000000000471a73 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 2], ah ; jmp 0x46dcf0
0x0000000000436535 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000435cdf : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000409a1e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbx ; call rax
0x0000000000435b14 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000435b23 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x000000000044fa3b : add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret 0xffe0
0x000000000048efc5 : add byte ptr [rax], al ; add byte ptr [rcx - 0x3f], cl ; call 0xffffffffc2723c17
0x000000000047a38d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000454ca6 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x22e9
0x000000000047d9da : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x000000000041b4e1 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x0000000000453e27 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0xa1e9
0x0000000000482fcf : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00000000004614c5 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; call 0xffffffffc2c95cd9
0x0000000000410a8d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000004186ad : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000041727d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000041bd10 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x000000000041bd36 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x000000000047ffa1 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; imul al ; push rbp ; ret
0x000000000040772a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004595cb : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ret
0x000000000043c168 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x000000000045e79b : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rcx - 0x7f], cl ; ret 0x2d0
0x000000000048f062 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call r14
0x000000000048f08a : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x000000000042ae6d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000042aedd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000043d916 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x48 ; dec dword ptr [rcx - 0x7d] ; ret
0x000000000043d960 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4101
0x0000000000456afd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000041bc2d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000433075 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xea81
0x000000000045ffde : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x000000000048f2a5 : add byte ptr [rax], al ; add byte ptr [rdx + rbp*8 + 0x48], dh ; add esp, 8 ; ret
0x0000000000424532 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041bb42 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000435aed : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x00000000004b3e6e : add byte ptr [rax], al ; add byte ptr [rsi - 0xb], dh ; jmp rax
0x000000000044c1ed : add byte ptr [rax], al ; add ch, bl ; fmul dword ptr [rax - 0x39] ; ret 0xffe8
0x0000000000408391 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000047253e : add byte ptr [rax], al ; add cl, ch ; ret 0xffb2
0x0000000000416c88 : add byte ptr [rax], al ; add cl, ch ; ret 0xffdf
0x0000000000402fb3 : add byte ptr [rax], al ; add cl, ch ; ret 0xffed
0x000000000048d590 : add byte ptr [rax], al ; add cl, ch ; ret 0xfff7
0x0000000000412160 : add byte ptr [rax], al ; add dh, dh ; ret
0x00000000004321e1 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000004b38a2 : add byte ptr [rax], al ; add eax, 0x57780000 ; cmc ; jmp rsp
0x000000000043cf67 : add byte ptr [rax], al ; add qword ptr [rdi], 1 ; jmp 0x43cf39
0x000000000046b517 : add byte ptr [rax], al ; add rax, -0x10 ; ret
0x000000000045a85e : add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000041b9f4 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x0000000000475f50 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043331e : add byte ptr [rax], al ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x0000000000433687 : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004342e9 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbx ; ret
0x0000000000444c46 : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x0000000000407fd5 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x000000000040b515 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045c7a8 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004b3382 : add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; test al, 0x4d ; cmc ; call qword ptr [rax]
0x00000000004bb182 : add byte ptr [rax], al ; and al, 0x8e ; add byte ptr [rax], al ; clc ; clc ; stc ; call rax
0x00000000004bb582 : add byte ptr [rax], al ; and al, 0x92 ; add byte ptr [rax], al ; test al, 0xa ; cli ; jmp rbx
0x000000000041bc2e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000459767 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000459934 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x00000000004be306 : add byte ptr [rax], al ; call 0x114bdf6e
0x0000000000406c91 : add byte ptr [rax], al ; call 0x4449d9
0x0000000000401183 : add byte ptr [rax], al ; call qword ptr [rbx + 0x10]
0x00000000004a18a2 : add byte ptr [rax], al ; call qword ptr [rcx]
0x0000000000466ef9 : add byte ptr [rax], al ; call r12
0x000000000048f068 : add byte ptr [rax], al ; call r14
0x000000000040181a : add byte ptr [rax], al ; call rax
0x0000000000435af3 : add byte ptr [rax], al ; call rbx
0x00000000004a440e : add byte ptr [rax], al ; call rdi
0x00000000004a35be : add byte ptr [rax], al ; call rsp
0x00000000004bef56 : add byte ptr [rax], al ; clc ; and bh, ch ; call qword ptr [rbx]
0x00000000004bb186 : add byte ptr [rax], al ; clc ; clc ; stc ; call rax
0x00000000004bcab6 : add byte ptr [rax], al ; clc ; in eax, -6 ; jmp qword ptr [rdx]
0x00000000004b709a : add byte ptr [rax], al ; cmp al, 0x4d ; add byte ptr [rax], al ; sar byte ptr [rbx - 0xa], 1 ; call qword ptr [rax]
0x0000000000409e67 : add byte ptr [rax], al ; cmp eax, 0xff ; jne 0x409e78 ; pop rbx ; ret
0x00000000004bbc76 : add byte ptr [rax], al ; cwde ; cli ; jmp rsp
0x00000000004b6a06 : add byte ptr [rax], al ; cwde ; out 0xf5, al ; call rdx
0x00000000004ba306 : add byte ptr [rax], al ; cwde ; ret
0x00000000004b693a : add byte ptr [rax], al ; fadd qword ptr [rbp] ; add byte ptr [rax - 0x1d], dl ; cmc ; jmp rbx
0x00000000004b793a : add byte ptr [rax], al ; fcom qword ptr [rbp] ; add al, dl ; sal bh, cl ; call qword ptr [rdi]
0x00000000004b89d6 : add byte ptr [rax], al ; fdiv dword ptr [rdx] ; clc ; jmp rax
0x00000000004b2f3a : add byte ptr [rax], al ; fmul qword ptr [rbx] ; add byte ptr [rax], al ; xor byte ptr [rsi - 0xb], al ; call qword ptr [rbx]
0x00000000004b513a : add byte ptr [rax], al ; fsubr qword ptr [rip - 0x5c400000] ; cmc ; call qword ptr [rdx]
0x00000000004bef52 : add byte ptr [rax], al ; hlt ; retf ; add byte ptr [rax], al ; clc ; and bh, ch ; call qword ptr [rbx]
0x00000000004b9342 : add byte ptr [rax], al ; in al, 0x6f ; add byte ptr [rax], al ; pop rax ; mov dh, 0xf8 ; jmp qword ptr [rsi]
0x00000000004bb24a : add byte ptr [rax], al ; in al, dx ; mov es, word ptr [rax] ; add byte ptr [rax - 3], dh ; stc ; jmp qword ptr [rdx]
0x00000000004ba84a : add byte ptr [rax], al ; in al, dx ; test byte ptr [rax], al ; add byte ptr [rax - 0x30], dh ; stc ; jmp rbx
0x00000000004b92ca : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; mov al, 0xb5 ; clc ; call qword ptr [rcx]
0x00000000004ba6aa : add byte ptr [rax], al ; jae 0x4ba6b8 ; add al, al ; retf ; stc ; jmp rsi
0x00000000004b3e6f : add byte ptr [rax], al ; jbe 0x4b3e6c ; jmp rax
0x000000000040f83c : add byte ptr [rax], al ; je 0x40f84e ; xor eax, eax ; ret
0x000000000041665a : add byte ptr [rax], al ; je 0x416664 ; ret
0x000000000048f2a6 : add byte ptr [rax], al ; je 0x48f29c ; add rsp, 8 ; ret
0x00000000004b86d2 : add byte ptr [rax], al ; je 0x4b8742 ; add byte ptr [rax], al ; js 0x4b86ff ; clc ; call rdx
0x00000000004b89d2 : add byte ptr [rax], al ; je 0x4b8a45 ; add byte ptr [rax], al ; fdiv dword ptr [rdx] ; clc ; jmp rax
0x00000000004b76da : add byte ptr [rax], al ; jl 0x4b773a ; add byte ptr [rax], al ; rol al, 0xf7 ; jmp rax
0x00000000004b9ada : add byte ptr [rax], al ; jl 0x4b9b5e ; add byte ptr [rax], al ; jo 0x4b9aba ; clc ; call rax
0x00000000004bdbda : add byte ptr [rax], al ; jl 0x4bdb9f ; add byte ptr [rax], al ; nop ; fdiv st(3), st(0) ; call qword ptr [rax]
0x000000000043435f : add byte ptr [rax], al ; jmp 0x4342f1
0x000000000043c574 : add byte ptr [rax], al ; jmp 0x43c53d
0x0000000000460289 : add byte ptr [rax], al ; jmp 0x460221
0x000000000046fa19 : add byte ptr [rax], al ; jmp 0x46f912
0x00000000004733b7 : add byte ptr [rax], al ; jmp 0x472839
0x000000000048f8ef : add byte ptr [rax], al ; jmp rax
0x0000000000450c85 : add byte ptr [rax], al ; jmp rdx
0x00000000004b477e : add byte ptr [rax], al ; jo 0x4b4708 ; cmc ; jmp rbx
0x00000000004b9ade : add byte ptr [rax], al ; jo 0x4b9ab6 ; clc ; call rax
0x00000000004ba18e : add byte ptr [rax], al ; jo 0x4ba1fd ; stc ; call rdx
0x00000000004ba84e : add byte ptr [rax], al ; jo 0x4ba827 ; stc ; jmp rbx
0x00000000004bb24e : add byte ptr [rax], al ; jo 0x4bb254 ; stc ; jmp qword ptr [rdx]
0x00000000004bc27e : add byte ptr [rax], al ; jo 0x4bc214 ; cli ; call rdx
0x00000000004b38a6 : add byte ptr [rax], al ; js 0x4b3906 ; cmc ; jmp rsp
0x00000000004b68f6 : add byte ptr [rax], al ; js 0x4b68e0 ; cmc ; call qword ptr [rcx]
0x00000000004b86d6 : add byte ptr [rax], al ; js 0x4b86fb ; clc ; call rdx
0x0000000000430fae : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000430fbe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000430fce : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000430fde : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000430fee : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000430f0d : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000430f2e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000430f3e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000430f4e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000430f5e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000430f6e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000430f7e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000430eba : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000430f8e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000430f9e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000430f1e : add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x00000000004b490a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; and eax, 0x89e00000 ; cmc ; jmp qword ptr [rcx]
0x00000000004b9d0a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; jns 0x4b9d18 ; add al, dh ; stc ; call qword ptr [rsi]
0x00000000004bdc0a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; mov eax, 0xdc900000 ; sti ; call qword ptr [rax]
0x00000000004b920a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; nop ; mov al, 0xf8 ; call qword ptr [rcx]
0x00000000004b490e : add byte ptr [rax], al ; loopne 0x4b48a0 ; cmc ; jmp qword ptr [rcx]
0x00000000004b896e : add byte ptr [rax], al ; loopne 0x4b89a5 ; clc ; call qword ptr [rax]
0x00000000004b896d : add byte ptr [rax], al ; loopne 0x4b89a6 ; clc ; call qword ptr [rax]
0x00000000004be72e : add byte ptr [rax], al ; loopne 0x4be73f ; std ; jmp rsp
0x00000000004b7112 : add byte ptr [rax], al ; mov ah, 0x4d ; add byte ptr [rax], al ; sub byte ptr [rcx - 0xa], bl ; jmp qword ptr [rsi]
0x00000000004b8f12 : add byte ptr [rax], al ; mov ah, 0x6b ; add byte ptr [rax], al ; pop rax ; cwde ; clc ; call qword ptr [rdx]
0x00000000004bcc12 : add byte ptr [rax], al ; mov ah, 0xa8 ; add byte ptr [rax], al ; test al, 0x69 ; std ; jmp qword ptr [rdi]
0x00000000004bdbc6 : add byte ptr [rax], al ; mov ah, bl ; sti ; call qword ptr [rdx]
0x00000000004baa26 : add byte ptr [rax], al ; mov ah, dl ; stc ; call rcx
0x00000000004b92ce : add byte ptr [rax], al ; mov al, 0xb5 ; clc ; call qword ptr [rcx]
0x00000000004b97ee : add byte ptr [rax], al ; mov al, 0xca ; clc ; call qword ptr [rbx]
0x00000000004b981e : add byte ptr [rax], al ; mov al, 0xca ; clc ; call qword ptr [rdx]
0x000000000042fe8e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x000000000042e6de : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000004baf36 : add byte ptr [rax], al ; mov bh, ah ; stc ; jmp qword ptr [rax]
0x000000000043097e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000043035e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000046d0b4 : add byte ptr [rax], al ; mov dword ptr [rdx], ecx ; ret
0x0000000000471a74 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], eax ; jmp 0x46dcef
0x000000000043036e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000045e9de : add byte ptr [rax], al ; mov eax, 0x66 ; syscall ; ret
0x000000000045e9fe : add byte ptr [rax], al ; mov eax, 0x68 ; syscall ; ret
0x000000000045e9ee : add byte ptr [rax], al ; mov eax, 0x6b ; syscall ; ret
0x000000000045ea0e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall ; ret
0x00000000004106a6 : add byte ptr [rax], al ; mov eax, 0x6c0860 ; ret
0x000000000045b35e : add byte ptr [rax], al ; mov eax, 0xc9 ; syscall ; ret
0x00000000004bdbc2 : add byte ptr [rax], al ; mov eax, 0xdc880000 ; sti ; call qword ptr [rdx]
0x0000000000458696 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040e9ee : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000441d1e : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000040e73e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000049137e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x491399 ; ret
0x000000000048c7be : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x237792] ; ret
0x0000000000466ea6 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000046a6f9 : add byte ptr [rax], al ; mov eax, edx ; ret
0x0000000000477f88 : add byte ptr [rax], al ; mov eax, esi ; ret
0x000000000043039e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000402cfd : add byte ptr [rax], al ; mov edi, 0x6c32a0 ; call rax
0x00000000004be2a2 : add byte ptr [rax], al ; mov edi, 0x83980000 ; cld ; call qword ptr [rax]
0x000000000048f063 : add byte ptr [rax], al ; mov edi, 1 ; call r14
0x000000000048f08b : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000042a66e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042ad8e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000435aee : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x00000000004b641a : add byte ptr [rax], al ; mov esp, 0x50000040 ; sahf ; cmc ; call rcx
0x0000000000476258 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000483d82 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000483e06 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000048f316 : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; add rsp, 8 ; ret
0x00000000004649c5 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x300], rax ; ret
0x0000000000422656 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000048f34e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000040f7c8 : add byte ptr [rax], al ; mov qword ptr [rsi], rax ; mov rax, r8 ; ret
0x000000000043d579 : add byte ptr [rax], al ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x0000000000444910 : add byte ptr [rax], al ; mov qword ptr fs:[rax], rdx ; ret
0x000000000040e9fe : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000045a87e : add byte ptr [rax], al ; mov rax, 1 ; ret
0x000000000045a88e : add byte ptr [rax], al ; mov rax, 2 ; ret
0x000000000045a89e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x000000000045a8ae : add byte ptr [rax], al ; mov rax, 4 ; ret
0x000000000045a8be : add byte ptr [rax], al ; mov rax, 5 ; ret
0x000000000045a8ce : add byte ptr [rax], al ; mov rax, 6 ; ret
0x000000000045a8de : add byte ptr [rax], al ; mov rax, 7 ; ret
0x0000000000465781 : add byte ptr [rax], al ; mov rax, qword ptr [r14 + 0x10] ; add rax, qword ptr [r15] ; call rax
0x0000000000465cff : add byte ptr [rax], al ; mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000040d309 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000409e80 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040d8b5 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000046b70e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x00000000004578ae : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000040ea5e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000048f2be : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000048f35e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000048f3be : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000048f3ae : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000048f36e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000043982e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x28a7d1] ; ret
0x000000000040ea3e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2b1659] ; ret
0x000000000048fe9e : add byte ptr [rax], al ; mov rax, qword ptr [rsi] ; add rsp, 8 ; ret
0x00000000004680bf : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004086e6 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048f4cb : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000414a60 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x000000000045afa6 : add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000040ea6e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000414b76 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000475cf3 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x00000000004bd536 : add byte ptr [rax], al ; mov rbx, dr1 ; jmp qword ptr [rdx]
0x00000000004594e5 : add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x40] ; jmp 0x4594b7
0x00000000004397c7 : add byte ptr [rax], al ; mov rdi, qword ptr [rbx + 0x18] ; call rax
0x00000000004637ae : add byte ptr [rax], al ; mov rdi, qword ptr [rsp + 0x30] ; call rax
0x0000000000435ce0 : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000436536 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000435b24 : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000435b15 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000435f6a : add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x0000000000456dad : add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x00000000004565a2 : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000491a26 : add byte ptr [rax], al ; mov rdi, rsp ; call r12
0x000000000042abce : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000409a1f : add byte ptr [rax], al ; mov rdx, r14 ; mov rdi, rbx ; call rax
0x000000000048f93e : add byte ptr [rax], al ; mov rsi, r14 ; mov rdi, rbx ; call r15
0x0000000000400cd4 : add byte ptr [rax], al ; mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400ce7 ; ret
0x00000000004b97ea : add byte ptr [rax], al ; mov word ptr [rax + rax], dr0 ; mov al, 0xca ; clc ; call qword ptr [rbx]
0x00000000004be0ea : add byte ptr [rax], al ; mov word ptr [rbp + 0x58900000], dr1 ; cld ; call rbx
0x00000000004bd4ea : add byte ptr [rax], al ; mov word ptr [rcx + 0x37d00000], dr0 ; hlt ; jmp qword ptr [rsi]
0x00000000004b6a02 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], r8b ; cwde ; out 0xf5, al ; call rdx
0x00000000004be302 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; mov edi, 0x5ce80000 ; cld ; call qword ptr [rax]
0x000000000048cd31 : add byte ptr [rax], al ; movsxd rcx, dword ptr [r15 + rcx*4] ; add rcx, r15 ; jmp rcx
0x000000000042a7fe : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042aede : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000042ae6e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004bdbae : add byte ptr [rax], al ; nop ; fdiv st(3), st(0) ; call qword ptr [rax]
0x00000000004b920e : add byte ptr [rax], al ; nop ; mov al, 0xf8 ; call qword ptr [rcx]
0x00000000004be0ee : add byte ptr [rax], al ; nop ; pop rax ; cld ; call rbx
0x00000000004986c6 : add byte ptr [rax], al ; nop ; ret 0x43
0x00000000004b3e6a : add byte ptr [rax], al ; or al, 0x1b ; add byte ptr [rax], al ; add byte ptr [rsi - 0xb], dh ; jmp rax
0x00000000004b896a : add byte ptr [rax], al ; or al, 0x66 ; add byte ptr [rax], al ; loopne 0x4b89a9 ; clc ; call qword ptr [rax]
0x00000000004b9e6a : add byte ptr [rax], al ; or al, 0x7b ; add byte ptr [rax], al ; stc ; call rdi
0x000000000040f4d9 : add byte ptr [rax], al ; or dword ptr [rbx], 8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040a83e : add byte ptr [rax], al ; or eax, 0x20 ; jmp 0x40a80d
0x0000000000444c89 : add byte ptr [rax], al ; or eax, 0xffffffff ; ret
0x0000000000450550 : add byte ptr [rax], al ; pop r13 ; ret
0x0000000000450482 : add byte ptr [rax], al ; pop r14 ; ret
0x0000000000461f9d : add byte ptr [rax], al ; pop r15 ; ret
0x00000000004b3076 : add byte ptr [rax], al ; pop rax ; cmc ; call qword ptr [rax]
0x00000000004b8f16 : add byte ptr [rax], al ; pop rax ; cwde ; clc ; call qword ptr [rdx]
0x00000000004b9346 : add byte ptr [rax], al ; pop rax ; mov dh, 0xf8 ; jmp qword ptr [rsi]
0x000000000043311d : add byte ptr [rax], al ; pop rbx ; and eax, 0x3fc00 ; ret
0x0000000000432e27 : add byte ptr [rax], al ; pop rbx ; lea rax, qword ptr [r9 + 1] ; pop rbp ; ret
0x0000000000408283 : add byte ptr [rax], al ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x00000000004373e7 : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000004089d7 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040048f : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004003cc : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000406066 : add byte ptr [rax], al ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000040a63b : add byte ptr [rax], al ; pop rbx ; ret
0x00000000004ba8ba : add byte ptr [rax], al ; pop rsp ; test dword ptr [rax], eax ; add al, dh ; sar cl, 1 ; call rcx
0x00000000004b308e : add byte ptr [rax], al ; push rax ; cmc ; call qword ptr [rdx]
0x00000000004b693e : add byte ptr [rax], al ; push rax ; jrcxz 0x4b693d ; jmp rbx
0x00000000004b641e : add byte ptr [rax], al ; push rax ; sahf ; cmc ; call rcx
0x00000000004bcab2 : add byte ptr [rax], al ; push rsp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; clc ; in eax, -6 ; jmp qword ptr [rdx]
0x00000000004b92b2 : add byte ptr [rax], al ; push rsp ; outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; test al, 0xb5 ; clc ; call qword ptr [rcx]
0x00000000004b70fa : add byte ptr [rax], al ; pushfq ; add byte ptr [r8], r8b ; xor byte ptr [rcx - 0xa], bl ; call qword ptr [rax]
0x0000000000407f4b : add byte ptr [rax], al ; ret
0x000000000049a766 : add byte ptr [rax], al ; ret 0
0x00000000004a19a6 : add byte ptr [rax], al ; ret 0x12
0x00000000004a33de : add byte ptr [rax], al ; ret 0x1d4
0x00000000004a3b76 : add byte ptr [rax], al ; ret 0x1d5
0x00000000004a23e6 : add byte ptr [rax], al ; ret 0x24
0x00000000004a28d6 : add byte ptr [rax], al ; ret 0x33
0x00000000004a11a6 : add byte ptr [rax], al ; ret 0xc
0x00000000004a15a6 : add byte ptr [rax], al ; ret 0xf
0x00000000004a47a2 : add byte ptr [rax], al ; ret 1
0x00000000004a49a2 : add byte ptr [rax], al ; ret 2
0x00000000004a4ba2 : add byte ptr [rax], al ; ret 3
0x00000000004a4da2 : add byte ptr [rax], al ; ret 4
0x00000000004a09ce : add byte ptr [rax], al ; ret 5
0x00000000004a51a2 : add byte ptr [rax], al ; ret 6
0x00000000004a53a2 : add byte ptr [rax], al ; ret 7
0x00000000004a55a2 : add byte ptr [rax], al ; ret 8
0x00000000004a0da6 : add byte ptr [rax], al ; ret 9
0x00000000004b76de : add byte ptr [rax], al ; rol al, 0xf7 ; jmp rax
0x00000000004a4d9e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000004ba6ae : add byte ptr [rax], al ; ror bl, 0xf9 ; jmp rsi
0x00000000004bd4ee : add byte ptr [rax], al ; sal byte ptr [rdi], 1 ; hlt ; jmp qword ptr [rsi]
0x00000000004b709e : add byte ptr [rax], al ; sar byte ptr [rbx - 0xa], 1 ; call qword ptr [rax]
0x00000000004b477a : add byte ptr [rax], al ; sbb al, 0x24 ; add byte ptr [rax], al ; jo 0x4b470c ; cmc ; jmp rbx
0x00000000004bc27a : add byte ptr [rax], al ; sbb al, 0x9f ; add byte ptr [rax], al ; jo 0x4bc218 ; cli ; call rdx
0x00000000004b9e6e : add byte ptr [rax], al ; stc ; call rdi
0x00000000004ba18a : add byte ptr [rax], al ; sub al, 0x7e ; add byte ptr [rax], al ; jo 0x4ba201 ; stc ; call rdx
0x00000000004bcc8a : add byte ptr [rax], al ; sub al, 0xa9 ; add byte ptr [rax], al ; sub al, 0xfa ; call qword ptr [rax]
0x00000000004b308a : add byte ptr [rax], al ; sub al, 0xd ; add byte ptr [rax], al ; push rax ; cmc ; call qword ptr [rdx]
0x00000000004bcc8e : add byte ptr [rax], al ; sub al, 0xfa ; call qword ptr [rax]
0x00000000004b7116 : add byte ptr [rax], al ; sub byte ptr [rcx - 0xa], bl ; jmp qword ptr [rsi]
0x0000000000424f7c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x000000000046b90d : add byte ptr [rax], al ; sub eax, edx ; sar eax, 0x10 ; ret
0x000000000040e1b6 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x00000000004bb776 : add byte ptr [rax], al ; sub rdi, rdx ; call qword ptr [rdx]
0x0000000000437065 : add byte ptr [rax], al ; syscall ; pop rdx ; pop rsi ; ret
0x000000000045b363 : add byte ptr [rax], al ; syscall ; ret
0x00000000004bcbaa : add byte ptr [rax], al ; test al, 0 ; add byte ptr [rax], dh ; std ; call rcx
0x00000000004b2b56 : add byte ptr [rax], al ; test al, 0x29 ; cmc ; call qword ptr [rcx]
0x00000000004b3386 : add byte ptr [rax], al ; test al, 0x4d ; cmc ; call qword ptr [rax]
0x00000000004bcc16 : add byte ptr [rax], al ; test al, 0x69 ; std ; jmp qword ptr [rdi]
0x00000000004bb586 : add byte ptr [rax], al ; test al, 0xa ; cli ; jmp rbx
0x00000000004b92b6 : add byte ptr [rax], al ; test al, 0xb5 ; clc ; call qword ptr [rcx]
0x00000000004bbee2 : add byte ptr [rax], al ; test byte ptr [rbx + 0x5ac80000], bl ; cli ; jmp rdi
0x0000000000436ef9 : add byte ptr [rax], al ; test edx, edx ; cmovne eax, edx ; ret
0x00000000004636c8 : add byte ptr [rax], al ; test rax, rax ; je 0x4636d8 ; call rax
0x00000000004b68f2 : add byte ptr [rax], al ; xchg eax, esp ; add byte ptr [r8], r8b ; js 0x4b68e4 ; cmc ; call qword ptr [rcx]
0x00000000004bdbf2 : add byte ptr [rax], al ; xchg eax, esp ; mov eax, 0xdc880000 ; sti ; call qword ptr [rdx]
0x00000000004b4ef2 : add byte ptr [rax], al ; xchg eax, esp ; sub eax, dword ptr [rax] ; add byte ptr [rax], bl ; pushfq ; cmc ; jmp qword ptr [rax]
0x00000000004be69e : add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; ret
0x00000000004b70fe : add byte ptr [rax], al ; xor byte ptr [rcx - 0xa], bl ; call qword ptr [rax]
0x00000000004b2f3e : add byte ptr [rax], al ; xor byte ptr [rsi - 0xb], al ; call qword ptr [rbx]
0x00000000004bcbae : add byte ptr [rax], al ; xor byte ptr [rsi - 3], ah ; call rcx
0x00000000004160ac : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x18 ; ret
0x00000000004153ce : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x000000000040772b : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048f4d8 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004139f4 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000408f36 : add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000483f31 : add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000403567 : add byte ptr [rax], al ; xor esi, esi ; call rax
0x0000000000435a60 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000435a85 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000435aa9 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000435ac9 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000435a3b : add byte ptr [rax], al ; xor esi, esi ; mov rdi, rbp ; call rbx
0x000000000041bbdd : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004b4ef7 : add byte ptr [rax], bl ; pushfq ; cmc ; jmp qword ptr [rax]
0x00000000004b4ac7 : add byte ptr [rax], bl ; xchg eax, ecx ; cmc ; call qword ptr [rdi]
0x00000000004960cc : add byte ptr [rax], ch ; clc ; call rax
0x00000000004b8847 : add byte ptr [rax], ch ; lahf ; std ; jmp qword ptr [rdx]
0x000000000048d70e : add byte ptr [rax], cl ; mov byte ptr [rip + 0x236169], 8 ; ret
0x000000000048d715 : add byte ptr [rax], cl ; ret
0x00000000004b4af7 : add byte ptr [rax], cl ; xchg eax, edx ; cmc ; call qword ptr [rcx]
0x00000000004b2f3f : add byte ptr [rax], dh ; cmc ; call qword ptr [rbx]
0x00000000004bc5af : add byte ptr [rax], dh ; mov ch, 0xfa ; call qword ptr [rbx]
0x00000000004bcbaf : add byte ptr [rax], dh ; std ; call rcx
0x000000000040f83a : add byte ptr [rax], dl ; add byte ptr [rax], al ; je 0x40f850 ; xor eax, eax ; ret
0x00000000004964c4 : add byte ptr [rax], dl ; stc ; jmp rax
0x00000000004be728 : add byte ptr [rax], r8b ; add ah, cl ; ret
0x00000000004b6a05 : add byte ptr [rax], r8b ; cwde ; out 0xf5, al ; call rdx
0x0000000000458695 : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000043038d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000422655 : add byte ptr [rax], r8b ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000045afa5 : add byte ptr [rax], r8b ; mov rax, rcx ; ret
0x00000000004303cd : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000040a83d : add byte ptr [rax], r8b ; or eax, 0x20 ; jmp 0x40a80e
0x0000000000406065 : add byte ptr [rax], r8b ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x0000000000434099 : add byte ptr [rax], r8b ; ret
0x000000000048fbed : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000408f35 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x000000000046b3ac : add byte ptr [rbp + 0x11], dh ; xor eax, eax ; add rsp, 0x78 ; ret
0x000000000049375b : add byte ptr [rbp + 0x1e], dh ; ret
0x000000000040a912 : add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x0000000000450615 : add byte ptr [rbp + 0x5c], dh ; mov eax, edx ; pop rbx ; ret
0x000000000046b2d3 : add byte ptr [rbp + 0xa], dh ; xor eax, eax ; add rsp, 0x58 ; ret
0x000000000046b232 : add byte ptr [rbp + 0xb], dh ; add rsp, 0x48 ; ret
0x000000000046bfef : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x000000000046bedf : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004b68f3 : add byte ptr [rbp + rax*2 - 0x1e880000], dl ; cmc ; call qword ptr [rcx]
0x00000000004ba8bb : add byte ptr [rbp + rax*4], bl ; add al, dh ; sar cl, 1 ; call rcx
0x00000000004b38a3 : add byte ptr [rbp + rax], al ; add byte ptr [rax + 0x57], bh ; cmc ; jmp rsp
0x0000000000432d0f : add byte ptr [rbp + rcx*4 + 0x40], cl ; add dword ptr [rbp + 0x39], ecx ; ret
0x000000000047abe3 : add byte ptr [rbp + rcx*4 + 0x6d], cl ; mov al, 0xe8 ; ret
0x00000000004be0eb : add byte ptr [rbp + rdi*4 + 0x58900000], cl ; cld ; call rbx
0x000000000045c152 : add byte ptr [rbp - 0x1f3eadfc], cl ; add ch, byte ptr [rcx] ; ret
0x0000000000491d18 : add byte ptr [rbp - 0x3b], dh ; add rsp, 8 ; ret
0x0000000000436efa : add byte ptr [rbp - 0x3dbaf02e], al ; ret
0x00000000004b490b : add byte ptr [rbp - 0x76200000], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000415d17 : add byte ptr [rbp - 0x77], cl ; ret
0x0000000000407d87 : add byte ptr [rbp - 0x77], cl ; ret 0xf41
0x000000000040aa6f : add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x95 ; ret 0x8445
0x000000000041eee9 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x000000000040ad3f : add byte ptr [rbx + 0x18e9707f], cl ; ret 2
0x000000000048c57d : add byte ptr [rbx + 0x23729c0d], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000468295 : add byte ptr [rbx + 0x258f730d], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000043311e : add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x0000000000463ec0 : add byte ptr [rbx + 0x26002915], cl ; add bh, dh ; ret 0x804
0x0000000000409e68 : add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x000000000040f618 : add byte ptr [rbx + 0x2b31a005], al ; add byte ptr [rcx], al ; ret
0x000000000040eac5 : add byte ptr [rbx + 0x2b3c3705], al ; add byte ptr [rcx], al ; ret
0x00000000004373e8 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000043039f : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000042fecf : add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x0000000000432e28 : add byte ptr [rbx + 0x49], bl ; lea eax, dword ptr [rcx + 1] ; pop rbp ; ret
0x000000000042a66f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x000000000040f4da : add byte ptr [rbx + 0x5d5b080b], al ; pop r12 ; ret
0x0000000000464a76 : add byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000043a8d5 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004089d8 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000400490 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004003cd : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000406067 : add byte ptr [rbx + 0x5d], bl ; xor eax, eax ; pop r12 ; ret
0x000000000049137f : add byte ptr [rbx + 0x75c08507], cl ; or dh, bl ; ret
0x00000000004beea8 : add byte ptr [rbx + 0xe], bl ; adc byte ptr [rbx + 0xa4a0202], al ; ret
0x000000000044480a : add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004b4ef3 : add byte ptr [rbx + rbp - 0x63e80000], dl ; cmc ; jmp qword ptr [rax]
0x00000000004b8f13 : add byte ptr [rbx + rbp*2 - 0x67a80000], dh ; clc ; call qword ptr [rdx]
0x00000000004bbee3 : add byte ptr [rbx + rbx*4 + 0x5ac80000], al ; cli ; jmp rdi
0x00000000004b3e6b : add byte ptr [rbx + rbx], cl ; add byte ptr [rax], al ; add byte ptr [rsi - 0xb], dh ; jmp rax
0x0000000000458f72 : add byte ptr [rbx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x000000000046d037 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000047b827 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004b9e6b : add byte ptr [rbx + rdi*2], cl ; add byte ptr [rax], al ; stc ; call rdi
0x00000000004ba6ab : add byte ptr [rbx + rsi*2], cl ; add al, al ; retf ; stc ; jmp rsi
0x00000000004bd703 : add byte ptr [rbx + rsi*4 - 0x70480000], ah ; sti ; call qword ptr [rax]
0x0000000000450f89 : add byte ptr [rbx - 0x110f43], al ; call qword ptr [rax]
0x0000000000451775 : add byte ptr [rbx - 0x116343], al ; call qword ptr [rax]
0x0000000000477f57 : add byte ptr [rbx - 0x2f76ff06], al ; jle 0x477f6a ; ret
0x0000000000444497 : add byte ptr [rbx - 0x387cfe40], al ; add dword ptr [rax - 0x7d], ecx ; ret 0x8310
0x0000000000409de7 : add byte ptr [rbx - 0x3b7cb7fe], cl ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000043318f : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x0000000000433188 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x0000000000433181 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x000000000043317a : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x0000000000433173 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x0000000000433196 : add byte ptr [rbx - 0x3d], bl ; mov eax, 8 ; pop rbx ; ret
0x00000000004427dd : add byte ptr [rbx - 0x3d], bl ; test esi, esi ; je 0x4427b1 ; pop rbx ; ret
0x000000000043889c : add byte ptr [rbx - 0x76bef019], al ; ret 0xb8
0x0000000000408284 : add byte ptr [rbx - 0x77], bl ; call 0xffffffffc39cc3f0
0x0000000000408824 : add byte ptr [rbx - 0x77], bl ; call 0xffffffffc39cc990
0x00000000004558a7 : add byte ptr [rbx - 0x7af0fe40], al ; ret 0xffdc
0x0000000000432386 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x000000000046658f : add byte ptr [rbx - 0x7cb7fbbd], cl ; ret 0x4803
0x000000000040c1ef : add byte ptr [rbx - 0x7cb7fe3f], al ; ret 0xc601
0x0000000000496874 : add byte ptr [rbx - 7], al ; call qword ptr [rax + 0x20fff942]
0x00000000004649ca : add byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x000000000046af6f : add byte ptr [rbx], al ; add eax, dword ptr [rax] ; add byte ptr [rcx + rdi*2 - 0x7d], dh ; ret
0x000000000046afba : add byte ptr [rbx], al ; add eax, dword ptr [rax] ; add byte ptr [rdx + rbp*2 - 0x7d], dh ; ret
0x00000000004b86d3 : add byte ptr [rbx], dh ; add byte ptr [rax + 0x1c], bh ; clc ; call rdx
0x000000000049654c : add byte ptr [rbx], dl ; stc ; jmp rax
0x000000000045d604 : add byte ptr [rcx + 0x29], cl ; ret
0x000000000045e7dc : add byte ptr [rcx + 0x39], al ; ror dword ptr [rdi], -0x7c ; ret 1
0x000000000041c576 : add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x0000000000455df9 : add byte ptr [rcx + 0x415d5bc8], cl ; pop rsp ; pop r13 ; ret
0x00000000004b308b : add byte ptr [rcx + 0x47500000], ch ; cmc ; call qword ptr [rdx]
0x00000000004b3073 : add byte ptr [rcx + 0x47580000], dl ; cmc ; call qword ptr [rax]
0x000000000040dd06 : add byte ptr [rcx + 0x48d231d1], cl ; mov eax, dword ptr [rax + 0x48] ; jmp rax
0x00000000004129e4 : add byte ptr [rcx + 0x548d48cf], cl ; ret
0x0000000000400e10 : add byte ptr [rcx + 0x5c], al ; ret
0x0000000000450551 : add byte ptr [rcx + 0x5d], al ; ret
0x0000000000450483 : add byte ptr [rcx + 0x5e], al ; ret
0x0000000000461f9e : add byte ptr [rcx + 0x5f], al ; ret
0x00000000004259ae : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000048cd32 : add byte ptr [rcx + 0x63], cl ; or al, 0x8f ; add rcx, r15 ; jmp rcx
0x000000000042422c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x0000000000430218 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000040f7f9 : add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x8348
0x0000000000432a8f : add byte ptr [rcx + 1], cl ; ret
0x000000000044e351 : add byte ptr [rcx + r9*4 - 1], cl ; call 0x45a5c7
0x00000000004bcc8b : add byte ptr [rcx + rbp*4], ch ; add byte ptr [rax], al ; sub al, 0xfa ; call qword ptr [rax]
0x00000000004bbc73 : add byte ptr [rcx + rbx*4], dl ; add byte ptr [rax], al ; cwde ; cli ; jmp rsp
0x00000000004a0d9f : add byte ptr [rcx + rcx + 0x9bf0000], bh ; add byte ptr [rax], al ; ret 9
0x0000000000422657 : add byte ptr [rcx + rcx*4 + 0x4f], cl ; cmp bl, dh ; ret
0x000000000040af00 : add byte ptr [rcx + rcx*4 + 0x6b], cl ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000471a75 : add byte ptr [rcx + rcx*4 + 2], ah ; jmp 0x46dcee
0x000000000049167a : add byte ptr [rcx + rcx*4 + 3], cl ; pop rbx ; ret
0x0000000000438840 : add byte ptr [rcx + rcx*4 + 5], al ; js 0x438806 ; sub byte ptr [rax], al ; pop rbx ; ret
0x0000000000408a03 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x414c96
0x0000000000436537 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000479b1f : add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x0000000000435ce1 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000048f93f : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, rbx ; call r15
0x0000000000409a20 : add byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbx ; call rax
0x000000000044e352 : add byte ptr [rcx + rcx*4 - 1], cl ; call 0x45a5c6
0x0000000000435b16 : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000435b25 : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x000000000043a02c : add byte ptr [rcx + rcx*4 - 9], cl ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x00000000004b9d0b : add byte ptr [rcx + rdi*2 + 0x49f00000], ch ; stc ; call qword ptr [rsi]
0x000000000046af73 : add byte ptr [rcx + rdi*2 - 0x7d], dh ; ret
0x00000000004bd4eb : add byte ptr [rcx + rsi*4 + 0x37d00000], cl ; hlt ; jmp qword ptr [rsi]
0x000000000044fa3d : add byte ptr [rcx - 0x39], cl ; ret 0xffe0
0x00000000004679f2 : add byte ptr [rcx - 0x3e3fce2f], cl ; jmp 0x5097009
0x000000000048d759 : add byte ptr [rcx - 0x3e3fce2f], cl ; jmp 0x50bcd70
0x000000000048efc7 : add byte ptr [rcx - 0x3f], cl ; call 0xffffffffc2723c15
0x0000000000450c80 : add byte ptr [rcx - 0x42], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; jmp rdx
0x00000000004828dd : add byte ptr [rcx - 0x43], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004051c5 : add byte ptr [rcx - 0x55551e], al ; call rcx
0x000000000046a9cd : add byte ptr [rcx - 0x73], al ; pop rsi ; dec dword ptr [rax + 0x63] ; ret
0x000000000047b4e1 : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000047b595 : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x850f
0x000000000040747f : add byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x0000000000437077 : add byte ptr [rcx - 0x77], al ; ret
0x00000000004629d7 : add byte ptr [rcx - 0x77], al ; ret 0x8b44
0x0000000000471a42 : add byte ptr [rcx - 0x77], cl ; fmul dword ptr [rcx - 0x77] ; ret
0x000000000044ebeb : add byte ptr [rcx - 0x77], cl ; ret
0x0000000000454ca8 : add byte ptr [rcx - 0x77], cl ; ret 0x22e9
0x0000000000404d47 : add byte ptr [rcx - 0x77], cl ; ret 0x75e9
0x000000000047d9dc : add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x0000000000406141 : add byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x0000000000453e29 : add byte ptr [rcx - 0x77], cl ; ret 0xa1e9
0x000000000044da5f : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xe5e8
0x0000000000482fd1 : add byte ptr [rcx - 0x7d], al ; ret
0x000000000040c417 : add byte ptr [rcx - 0x7d], al ; ret 0x4101
0x00000000004614c7 : add byte ptr [rcx - 0x7d], cl ; call 0xffffffffc2c95cd7
0x0000000000415d60 : add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000410a8f : add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000004186af : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000041727f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000412e0a : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000477f5a : add byte ptr [rcx - 0xcfd8130], cl ; ret
0x000000000049625c : add byte ptr [rcx - 8], bh ; call qword ptr [rax]
0x000000000041bd12 : add byte ptr [rcx - 9], cl ; ret 1
0x000000000041bd38 : add byte ptr [rcx - 9], cl ; ret 2
0x00000000004b37fe : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf56d
0x00000000004ba546 : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf9cc
0x000000000043435c : add byte ptr [rcx], al ; add byte ptr [rax], al ; add bl, ch ; mov byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000040164b : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret
0x000000000046829b : add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000401019 : add byte ptr [rcx], al ; ret
0x00000000004385ac : add byte ptr [rcx], bh ; ret
0x00000000004134a7 : add byte ptr [rcx], bh ; ret 0xa7e
0x000000000045c3c5 : add byte ptr [rcx], bh ; ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x0000000000496a74 : add byte ptr [rcx], bh ; stc ; push qword ptr [rax + 0x38] ; stc ; jmp rax
0x00000000004595d4 : add byte ptr [rcx], ch ; ret
0x0000000000490b69 : add byte ptr [rcx], cl ; ret 0x5389
0x00000000004834e0 : add byte ptr [rcx], cl ; ret 0x840f
0x000000000046b8bc : add byte ptr [rcx], cl ; ret 0xd089
0x000000000047ffa3 : add byte ptr [rcx], dh ; imul al ; push rbp ; ret
0x000000000040772c : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000048f4d9 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0xc3 ; nop ; ret
0x00000000004595cd : add byte ptr [rcx], dh ; ret
0x000000000045ecdd : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd6 ; ja 0x45ecf9 ; ret
0x000000000043c16a : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x0000000000415ef1 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000475b56 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000483f32 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000045e79d : add byte ptr [rcx], dh ; ror byte ptr [rcx - 0x7f], cl ; ret 0x2d0
0x00000000004385cb : add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x000000000047b423 : add byte ptr [rcx], dh ; shr al, 0xf5 ; ret 0xfffe
0x0000000000435a3c : add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xef ; call rbx
0x0000000000428475 : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000043a36e : add byte ptr [rdi + 0x6c3220], bh ; call rax
0x0000000000402cfe : add byte ptr [rdi + 0x6c32a0], bh ; call rax
0x0000000000475e70 : add byte ptr [rdi + 0x6c3640], bh ; call rax
0x000000000048f064 : add byte ptr [rdi + 1], bh ; call r14
0x000000000048f08c : add byte ptr [rdi + 1], bh ; call rax
0x00000000004b92e3 : add byte ptr [rdi + rbp*2 - 0x4a480000], al ; clc ; call qword ptr [rcx]
0x00000000004bc27b : add byte ptr [rdi + rbx*4], bl ; add byte ptr [rax], al ; jo 0x4bc217 ; cli ; call rdx
0x00000000004a159f : add byte ptr [rdi + rcx + 0xfbf0000], bh ; add byte ptr [rax], al ; ret 0xf
0x000000000045c24d : add byte ptr [rdi + rcx - 0x49], al ; ret 0x8d42
0x000000000045c516 : add byte ptr [rdi + rcx - 0x49], al ; ret 0x8d43
0x00000000004be303 : add byte ptr [rdi + rdi*4 + 0x5ce80000], ah ; cld ; call qword ptr [rax]
0x00000000004b9adb : add byte ptr [rdi + rsi*2], bh ; add byte ptr [rax - 0x31], dh ; clc ; call rax
0x00000000004b4af3 : add byte ptr [rdi - 0x6df80000], dl ; cmc ; call qword ptr [rcx]
0x00000000004b4ac3 : add byte ptr [rdi], ah ; add byte ptr [rax], bl ; xchg eax, ecx ; cmc ; call qword ptr [rdi]
0x0000000000429e0a : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000042ae6f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000042aedf : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000043d918 : add byte ptr [rdi], cl ; mov dh, 0x48 ; dec dword ptr [rcx - 0x7d] ; ret
0x000000000043d962 : add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4101
0x0000000000404ad8 : add byte ptr [rdi], cl ; mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000456aff : add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000041851f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042423f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000041bdbf : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000004229ff : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000041bc4f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000041bc3f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000041bc2f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000433077 : add byte ptr [rdi], cl ; popfq ; ret 0xea81
0x0000000000402e4b : add byte ptr [rdi], cl ; ret 0x8d49
0x00000000004806eb : add byte ptr [rdi], cl ; ret 0xc801
0x0000000000432f02 : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x8341
0x0000000000496564 : add byte ptr [rdi], cl ; stc ; jmp rax
0x00000000004100a9 : add byte ptr [rdi], cl ; test dword ptr [rdx + 0x67], edi ; add byte ptr [rax], al ; ret
0x000000000040eb01 : add byte ptr [rdi], cl ; test dword ptr [rdx + rax], ebp ; add bl, dh ; ret
0x000000000040c8e6 : add byte ptr [rdi], cl ; test dword ptr [rsi + 0x22], ebx ; add byte ptr [rax], al ; ret
0x0000000000474f61 : add byte ptr [rdi], cl ; xchg dword ptr [rbx], esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000046e62e : add byte ptr [rdi], cl ; xchg dword ptr [rcx], ebx ; xor al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000412929 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x0000000000413efb : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x948
0x000000000045b6a0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc031
0x000000000045baf9 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x000000000040037d : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000463328 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5385
0x000000000045ffe1 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x000000000045024c : add byte ptr [rdi], cl ; xchg ebp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004bcab3 : add byte ptr [rdi], dl ; add al, bh ; in eax, -6 ; jmp qword ptr [rdx]
0x000000000042fe8f : add byte ptr [rdx + 0x48028801], cl ; lea eax, dword ptr [rdx] ; ret
0x000000000042e6df : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x000000000040b566 : add byte ptr [rdx + 0x48], bl ; cwde ; ret
0x00000000004bb720 : add byte ptr [rdx + 0xe], cl ; adc byte ptr [rbx + 0xa530202], al ; ret
0x00000000004bb750 : add byte ptr [rdx + 0xe], cl ; adc byte ptr [rbx + 0xa5f0202], al ; ret
0x000000000046afbe : add byte ptr [rdx + rbp*2 - 0x7d], dh ; ret
0x000000000048f2a7 : add byte ptr [rdx + rbp*8 + 0x48], dh ; add esp, 8 ; ret
0x00000000004a199f : add byte ptr [rdx + rdx + 0x12bf0000], bh ; add byte ptr [rax], al ; ret 0x12
0x00000000004bb583 : add byte ptr [rdx + rdx*4], ah ; add byte ptr [rax], al ; test al, 0xa ; cli ; jmp rbx
0x00000000004074f2 : add byte ptr [rdx - 0x10], dh ; mov edi, ebx ; call 0x433747
0x0000000000406af3 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000044490e : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov qword ptr fs:[rax], rdx ; ret
0x00000000004b7f00 : add byte ptr [rdx], al ; imul ecx, dword ptr [rsi], 0x10 ; add dword ptr [rdx], 0x59 ; ret
0x00000000004bc5ab : add byte ptr [rdx], cl ; add byte ptr [rax], dh ; mov ch, 0xfa ; call qword ptr [rbx]
0x00000000004964a8 : add byte ptr [rdx], dl ; stc ; jmp rax
0x0000000000475cf0 : add byte ptr [rip + 0x48000000], al ; mov eax, edx ; pop rbx ; ret
0x0000000000424534 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041bb44 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000435aef : add byte ptr [rsi + 1], bh ; call rbx
0x0000000000435cdc : add byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rbx
0x0000000000435ba8 : add byte ptr [rsi + 1], bh ; mov rdi, r13 ; call rbx
0x0000000000435b20 : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x0000000000435f5a : add byte ptr [rsi + 2], bh ; mov rdi, r12 ; call rbx
0x0000000000435ccd : add byte ptr [rsi + 2], bh ; mov rdi, r13 ; call rbx
0x0000000000435b99 : add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x0000000000435b11 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x00000000004b6a03 : add byte ptr [rsi + rax*2 - 0x19680000], ah ; cmc ; call rdx
0x00000000004b920b : add byte ptr [rsi + rbp*2 - 0x4f700000], ch ; clc ; call qword ptr [rcx]
0x00000000004b820b : add byte ptr [rsi + rbx*2 + 0x5900000], ch ; clc ; call rcx
0x00000000004b81f3 : add byte ptr [rsi + rbx*2 + 0x5980000], dl ; clc ; call qword ptr [rax]
0x00000000004bb183 : add byte ptr [rsi + rcx*4], ah ; add byte ptr [rax], al ; clc ; clc ; stc ; call rax
0x00000000004ba18b : add byte ptr [rsi + rdi*2], ch ; add byte ptr [rax], al ; jo 0x4ba200 ; stc ; call rdx
0x0000000000496c1c : add byte ptr [rsi - 0x61ef0007], bl ; stc ; jmp qword ptr [rax]
0x000000000045bf3d : add byte ptr [rsi - 0x70], ah ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045885d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000045557a : add byte ptr [rsi - 0x77], ah ; or cl, ch ; push rbp ; ret
0x00000000004b3e70 : add byte ptr [rsi - 0xb], dh ; jmp rax
0x000000000049665c : add byte ptr [rsi - 7], al ; call qword ptr [rax + 0x20fff945]
0x00000000004bd2c3 : add byte ptr [rsi], 0xd ; adc ecx, dword ptr [rcx + 0xd1cfffb] ; ret
0x00000000004b6213 : add byte ptr [rsi], 0xd ; jae 0x4b6227 ; idiv bh ; sbb al, 0xd ; ret
0x00000000004b3803 : add byte ptr [rsi], 0xd ; ret 0xf56d
0x00000000004ba54b : add byte ptr [rsi], 0xd ; ret 0xf9cc
0x0000000000463ec4 : add byte ptr [rsi], ah ; add bh, dh ; ret 0x804
0x000000000040048d : add byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b896b : add byte ptr [rsi], cl ; add byte ptr [rax], al ; loopne 0x4b89a8 ; clc ; call qword ptr [rax]
0x00000000004b89d3 : add byte ptr [rsi], dh ; add al, bl ; xor bh, al ; jmp rax
0x00000000004a119f : add byte ptr [rsp + rcx + 0xcbf0000], bh ; add byte ptr [rax], al ; ret 0xc
0x00000000004bb773 : add byte ptr [rsp + rdx*4], dl ; add byte ptr [rax], al ; sub rdi, rdx ; call qword ptr [rdx]
0x00000000004b9803 : add byte ptr [rsp + rsi*2 - 0x35480000], ah ; clc ; call qword ptr [rax]
0x00000000004b981b : add byte ptr [rsp + rsi*2 - 0x35500000], bh ; clc ; call qword ptr [rdx]
0x00000000004b97eb : add byte ptr [rsp + rsi*2 - 0x35500000], cl ; clc ; call qword ptr [rbx]
0x00000000004b477b : add byte ptr [rsp], bl ; add byte ptr [rax], al ; jo 0x4b470b ; cmc ; jmp rbx
0x000000000045dc35 : add byte ptr es:[rax - 0x7d], cl ; ret
0x000000000045d603 : add byte ptr es:[rcx + 0x29], cl ; ret
0x000000000045b69f : add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xc031
0x000000000045baf8 : add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xf748
0x0000000000436ef7 : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbaf02e], al ; ret
0x000000000040bcf0 : add byte ptr gs:[rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000044c1ef : add ch, bl ; fmul dword ptr [rax - 0x39] ; ret 0xffe8
0x00000000004af2fc : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004af2fd : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x000000000044c1c2 : add ch, byte ptr [rbx] ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000045c158 : add ch, byte ptr [rcx] ; ret
0x000000000045c202 : add ch, byte ptr [rcx] ; ret 0x48d
0x000000000045938a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00000000004062ea : add ch, cl ; ret 0xfffd
0x0000000000473a9a : add ch, cl ; xchg eax, esi ; sar edi, cl ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x000000000042e707 : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x0000000000476911 : add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000047c35f : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000040a52d : add cl, byte ptr [rax + 0x39] ; ret
0x0000000000457ffa : add cl, byte ptr [rax + 0x39] ; ret 0x5877
0x00000000004637e0 : add cl, byte ptr [rax + 0x39] ; ret 0x860f
0x00000000004423c7 : add cl, byte ptr [rax + 1] ; ret 0x3b48
0x000000000044d127 : add cl, byte ptr [rax + 1] ; ret 0x8348
0x00000000004127b1 : add cl, byte ptr [rax - 0x73] ; push rsp ; ret
0x000000000042e708 : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x000000000042e675 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000044ec21 : add cl, byte ptr [rax - 0x77] ; ret 0xf748
0x000000000040e722 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000045f18d : add cl, byte ptr [rax - 0x7d] ; mov dword ptr [rcx], 0x8348c889 ; ret 0x8401
0x000000000043dbe5 : add cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000419370 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000400a7e : add cl, byte ptr [rax - 0x7d] ; ret 0x8304
0x000000000045645a : add cl, byte ptr [rax - 0x7d] ; ret 0xe902
0x00000000004193d3 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x0000000000496708 : add cl, byte ptr [rax - 7] ; call qword ptr [rdx + 0x22fff947]
0x000000000042acb2 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000047c339 : add cl, byte ptr [rcx + 0x29] ; ret
0x000000000045d622 : add cl, byte ptr [rcx + 0x39] ; ret
0x0000000000407ce8 : add cl, byte ptr [rcx + rcx*4 - 0x3e] ; jmp 0x407d04
0x000000000043432c : add cl, byte ptr [rdi] ; ret 0xb9eb
0x000000000043421c : add cl, byte ptr [rdi] ; ret 0xfc3
0x0000000000456ce7 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x5389
0x00000000004beeae : add cl, byte ptr [rdx + 0xa] ; ret
0x000000000046fa1a : add cl, ch ; jmp 0x4946fa27
0x00000000004068d2 : add cl, ch ; ret
0x0000000000472540 : add cl, ch ; ret 0xffb2
0x0000000000416c8a : add cl, ch ; ret 0xffdf
0x0000000000402fb5 : add cl, ch ; ret 0xffed
0x000000000040457b : add cl, ch ; ret 0xfff1
0x000000000048d592 : add cl, ch ; ret 0xfff7
0x00000000004010a8 : add cl, cl ; ret
0x000000000046da67 : add dh, al ; add al, 6 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000004a4407 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000042ae63 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000434bbb : add dh, bl ; ret
0x0000000000411d5c : add dh, dh ; ret
0x000000000041c428 : add dh, dh ; ret 0x7404
0x0000000000408f17 : add dh, dh ; ret 0x7420
0x0000000000430db7 : add dh, dh ; ret 0x7501
0x0000000000430dc4 : add dh, dh ; ret 0x7502
0x0000000000430dd1 : add dh, dh ; ret 0x7504
0x0000000000430d89 : add dh, dh ; ret 0x7510
0x0000000000430d96 : add dh, dh ; ret 0x7520
0x0000000000430da3 : add dh, dh ; ret 0x7540
0x000000000046472b : add dh, dh ; ret 0xf08
0x00000000004bb726 : add dl, byte ptr [rbx + 0xa] ; ret
0x00000000004b7144 : add dword ptr [r14], 3 ; mov byte ptr [rcx], al ; ret
0x000000000048dd20 : add dword ptr [r8 - 0x7d], ecx ; ret
0x000000000043b960 : add dword ptr [r8 - 0x7d], r9d ; ret 0x4d02
0x000000000043e4aa : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4806
0x000000000042fe91 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x00000000004113eb : add dword ptr [rax + 0x39], ecx ; ret
0x0000000000459fde : add dword ptr [rax + 0x39], ecx ; ret 0x860f
0x0000000000459e1d : add dword ptr [rax + 0x39], ecx ; ret 0x870f
0x000000000046c8ad : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x0000000000407b9f : add dword ptr [rax + 0x39], ecx ; ret 0xeb75
0x000000000048fb36 : add dword ptr [rax + 0x63], ecx ; ret
0x0000000000472eff : add dword ptr [rax + 1], ecx ; ret
0x00000000004748ee : add dword ptr [rax + 1], ecx ; ret 0x148
0x00000000004069d6 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000004023d3 : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x000000000042e6e1 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x0000000000467f9d : add dword ptr [rax - 0x77], ecx ; adc byte ptr [r11 + 0x5d], r11b ; pop r12 ; ret
0x000000000042e672 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000040d5a3 : add dword ptr [rax - 0x77], ecx ; or byte ptr [r15], cl ; mov dh, 2 ; pop rbx ; ret
0x000000000040d76a : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000459501 : add dword ptr [rax - 0x77], ecx ; ret
0x0000000000442266 : add dword ptr [rax - 0x77], ecx ; ret 0xf41
0x0000000000414d32 : add dword ptr [rax - 0x7b], ecx ; ret 0x2875
0x00000000004144fc : add dword ptr [rax - 0x7b], ecx ; ret 0x6a75
0x0000000000411fbb : add dword ptr [rax - 0x7b], ecx ; ret 0x850f
0x0000000000404adc : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000467222 : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000004614cb : add dword ptr [rax - 0x7d], ecx ; ret 0x4502
0x00000000004453f9 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000437a0d : add dword ptr [rax - 0x7d], ecx ; ret 0x4838
0x000000000045a32b : add dword ptr [rax - 0x7d], ecx ; ret 0x4901
0x0000000000445927 : add dword ptr [rax - 0x7d], ecx ; ret 0x4c01
0x000000000043b961 : add dword ptr [rax - 0x7d], ecx ; ret 0x4d02
0x00000000004431a7 : add dword ptr [rax - 0x7d], ecx ; ret 0x8308
0x000000000044449d : add dword ptr [rax - 0x7d], ecx ; ret 0x8310
0x000000000045636c : add dword ptr [rax - 0x7d], ecx ; ret 0x8502
0x0000000000456bfb : add dword ptr [rax - 0x7d], ecx ; ret 0x8508
0x000000000040c1d2 : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x000000000040c1f2 : add dword ptr [rax - 0x7d], ecx ; ret 0xc601
0x000000000046da6b : add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000048d5d6 : add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rbx], 0xeb ; ret
0x000000000043418b : add dword ptr [rax], 0x46 ; add byte ptr [rax], al ; ret
0x0000000000472254 : add dword ptr [rax], 0x83480000 ; ret
0x000000000046821d : add dword ptr [rax], eax ; add al, ch ; jmp 0x4681eb
0x0000000000401182 : add dword ptr [rax], eax ; add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000408556 : add dword ptr [rax], eax ; add bl, dh ; ret
0x0000000000483606 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x000000000046717a : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000469481 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x000000000044c056 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffe8
0x0000000000463756 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000048d0e2 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000044440d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000048eed5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000458fd8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rsi + rsi*4 - 0xa] ; ret 0x7508
0x0000000000414a87 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000048cdc4 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x0000000000404abd : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000046140d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x0000000000437fd1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041914d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000040f74a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4d07
0x000000000041b1a0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000421c4f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004190a1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044198c : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00000000004a440a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004a35ba : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004a33e2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a33da : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004a3b72 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x000000000048f066 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x0000000000401818 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x0000000000435af1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x000000000043435d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x4342f3
0x000000000048f8ed : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x000000000046d0b2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov dword ptr [rdx], ecx ; ret
0x000000000046a6f7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000048f558 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000435cde : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000435baa : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000435b22 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000435f68 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x0000000000456dab : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x00000000004565a0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000045054e : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r13 ; ret
0x0000000000450480 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r14 ; ret
0x0000000000461f9b : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r15 ; ret
0x000000000040dd73 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043371c : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004682a0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000043424d : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000048ee65 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000400d09 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000438663 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000044ebe9 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000415d5e : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000045c3c3 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x000000000045c514 : add dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x49], al ; ret 0x8d43
0x00000000004068d0 : add dword ptr [rax], eax ; add cl, ch ; ret
0x000000000048ecc9 : add dword ptr [rax], eax ; add dh, dh ; ret
0x0000000000430db5 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x0000000000430dc2 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x0000000000430dcf : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000430d87 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000430d94 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000430da1 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x0000000000408a02 : add dword ptr [rax], eax ; mov rdi, r13 ; call 0x414c97
0x0000000000414d53 : add dword ptr [rax], eax ; nop dword ptr [rax] ; ret
0x0000000000416e86 : add dword ptr [rax], eax ; ret
0x0000000000467179 : add dword ptr [rax], r8d ; add byte ptr [rax + 0x63], cl ; ret
0x000000000041b6e5 : add dword ptr [rax], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000432d13 : add dword ptr [rbp + 0x39], ecx ; ret
0x0000000000479b15 : add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x000000000040f877 : add dword ptr [rbp - 0x77], ecx ; ret
0x000000000042ad22 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000004134a1 : add dword ptr [rbx + 0x2ad38805], ecx ; add byte ptr [rcx], bh ; ret 0xa7e
0x0000000000405542 : add dword ptr [rbx + 0xf450afa], eax ; ret 0x8348
0x000000000046829c : add dword ptr [rbx - 0x3d], ebx ; mov eax, 1 ; pop rbx ; ret
0x00000000004529d0 : add dword ptr [rbx - 0x7bf0fe40], eax ; ret
0x000000000044449a : add dword ptr [rbx - 0x7cb7fe39], eax ; ret 0x8310
0x00000000004bf17c : add dword ptr [rbx], eax ; ret
0x000000000047e406 : add dword ptr [rcx + 1], ecx ; ret
0x0000000000466a03 : add dword ptr [rcx + rax + 0x4a], ecx ; or byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000043ecd7 : add dword ptr [rcx + rcx*4 + 0x55], eax ; add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x000000000045c1c5 : add dword ptr [rcx - 0x73], eax ; push rax ; add eax, dword ptr [rdi + rcx + 0x48] ; ret 0x93ba
0x000000000044059b : add dword ptr [rcx - 0x75], eax ; or ecx, dword ptr [rax - 0x77] ; ret 0xc889
0x000000000042e711 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x0000000000475325 : add dword ptr [rcx - 0x77], ecx ; ret 0x12e9
0x0000000000440772 : add dword ptr [rcx - 0x7d], ecx ; ret
0x000000000047896d : add dword ptr [rcx], edi ; ret
0x00000000004789fc : add dword ptr [rcx], edi ; ret 0xdf75
0x000000000040f6b7 : add dword ptr [rcx], esi ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000422cec : add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004bc9c5 : add dword ptr [rdi], 0x48 ; or eax, 0x3520303 ; ret
0x000000000043cf6a : add dword ptr [rdi], 1 ; jmp 0x43cf36
0x000000000044abc3 : add dword ptr [rdi], ecx ; test dword ptr [rdi - 0x16000004], ebp ; scasd eax, dword ptr [rdi] ; ret
0x000000000048c552 : add dword ptr [rdx + 0x2b], 0xd7748104 ; ret
0x000000000048c5bb : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000004bb7bc : add dword ptr [rdx], 0x4a ; ret
0x00000000004b6ca4 : add dword ptr [rdx], 0x51 ; ret
0x00000000004b7f05 : add dword ptr [rdx], 0x59 ; ret
0x00000000004b6cad : add dword ptr [rdx], 0x65 ; ret
0x00000000004b8240 : add dword ptr [rdx], ecx ; ret
0x000000000040f619 : add dword ptr [rip + 0x2b31a0], 1 ; ret
0x000000000040eac6 : add dword ptr [rip + 0x2b3c37], 1 ; ret
0x0000000000479c67 : add dword ptr [rsi - 0x73], ecx ; jl 0x479c6c ; or byte ptr [rax - 0x77], cl ; ret
0x000000000042e6f2 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000004b66f8 : add dword ptr [rsi], 2 ; fimul word ptr [rdx] ; ret
0x00000000004b7145 : add dword ptr [rsi], 3 ; mov byte ptr [rcx], al ; ret
0x00000000004b37ff : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf56d
0x00000000004ba547 : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf9cc
0x0000000000489e67 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041c896 : add eax, 0x11f55 ; ret
0x0000000000419316 : add eax, 0x13d25 ; ret
0x000000000041bce8 : add eax, 0x15313 ; ret
0x0000000000416e83 : add eax, 0x19e58 ; ret
0x000000000041bccc : add eax, 0x1f ; ret
0x000000000048c7c1 : add eax, 0x237792 ; ret
0x000000000046798c : add eax, 0x25c0f7 ; mov qword ptr [rsi], rax ; ret
0x00000000004678ba : add eax, 0x25c1d1 ; add rsp, 8 ; ret
0x0000000000464ef2 : add eax, 0x25c341 ; add rsp, 8 ; jmp rax
0x000000000045c020 : add eax, 0x268093 ; add rsp, 8 ; ret
0x0000000000444806 : add eax, 0x27d2ed ; je 0x444818 ; ret
0x0000000000441e32 : add eax, 0x281439 ; ret
0x0000000000439832 : add eax, 0x28a7d1 ; ret
0x0000000000438843 : add eax, 0x28b778 ; pop rbx ; ret
0x0000000000438591 : add eax, 0x28ba12 ; test eax, eax ; je 0x4385a9 ; ret
0x0000000000434248 : add eax, 0x28e63f ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004145f9 : add eax, 0x2ae18e ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040ea42 : add eax, 0x2b1659 ; ret
0x000000000040f61a : add eax, 0x2b31a0 ; add ebx, esi ; ret
0x000000000040eb26 : add eax, 0x2b3bd9 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004016fb : add eax, 0x2be970 ; xor eax, eax ; ret
0x0000000000400e0c : add eax, 0x2c031f ; pop r12 ; ret
0x0000000000401015 : add eax, 0x2c0c25 ; add ebx, esi ; ret
0x00000000004b7143 : add eax, 0x3068345 ; mov byte ptr [rcx], al ; ret
0x00000000004340cb : add eax, 0x46 ; add byte ptr [rax], al ; ret
0x0000000000475cf1 : add eax, 0x48000000 ; mov eax, edx ; pop rbx ; ret
0x000000000042ff28 : add eax, 0x48054289 ; lea eax, dword ptr [rdx + 8] ; ret
0x000000000042e758 : add eax, 0x48054289 ; mov eax, edi ; ret
0x0000000000430426 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x000000000042ffa9 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000042e799 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x00000000004b38a5 : add eax, 0x57780000 ; cmc ; jmp rsp
0x00000000004a09c9 : add eax, 0x5bd0000 ; add byte ptr [rax], al ; ret 5
0x00000000004a4f9d : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x0000000000476393 : add eax, 0x5c415d5b ; ret
0x000000000041c9c2 : add eax, 0x79 ; ret
0x0000000000418d3d : add eax, 0x83480000 ; ret 0x4910
0x0000000000420241 : add eax, 0x83480000 ; ret 0xe910
0x0000000000418c91 : add eax, 0x83480000 ; ret 0xeb10
0x000000000042ff2b : add eax, 0x8428d48 ; ret
0x000000000041bce0 : add eax, 0x852b ; ret
0x000000000045c0e7 : add eax, 0x89d02944 ; ret
0x000000000042526a : add eax, 0xc0310000 ; ret
0x000000000042ffad : add eax, 0xc428d48 ; ret
0x0000000000430a8d : add eax, 0xc478d48 ; ret
0x0000000000435f8c : add eax, 0xf6310000 ; mov rdi, r12 ; call rbx
0x0000000000435fb1 : add eax, 0xf6310000 ; mov rdi, r13 ; call rbx
0x00000000004360fa : add eax, 0xf6310000 ; mov rdi, r14 ; call rbx
0x0000000000436193 : add eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x000000000042ad13 : add eax, 0xf7f0ff3 ; ret
0x000000000045c2ce : add eax, 0xfd02944 ; scasd eax, dword ptr [rdi] ; ret
0x000000000046721d : add eax, 0xfffffbd8 ; add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x000000000046b51a : add eax, 0xfffffff0 ; ret
0x000000000045a851 : add eax, 1 ; ret
0x00000000004396a2 : add eax, 2 ; mov dword ptr [rsp], eax ; call rbx
0x000000000045a848 : add eax, 2 ; ret
0x000000000048d5d8 : add eax, 3 ; jmp 0x48d5a4
0x000000000045a861 : add eax, 3 ; ret
0x00000000004170e6 : add eax, 5 ; ret
0x000000000041ca25 : add eax, 6 ; ret
0x000000000049175c : add eax, 8 ; mov qword ptr [rbx], r8 ; pop rbx ; ret
0x0000000000444869 : add eax, dword ptr [0] ; ret
0x0000000000464ede : add eax, dword ptr [rax] ; add byte ptr [rax + rcx*2], al ; add esp, 8 ; ret
0x0000000000472cef : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000418edd : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004203e1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000418f01 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043a2e3 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004364bd : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000436514 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000436594 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000436694 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x000000000045a8a3 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000046af71 : add eax, dword ptr [rax] ; add byte ptr [rcx + rdi*2 - 0x7d], dh ; ret
0x0000000000437075 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000463de3 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x0000000000432f00 : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x8341
0x000000000046afbc : add eax, dword ptr [rax] ; add byte ptr [rdx + rbp*2 - 0x7d], dh ; ret
0x0000000000468399 : add eax, dword ptr [rax] ; add dh, dh ; ret 0x7510
0x0000000000464729 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf08
0x000000000041677f : add eax, dword ptr [rax] ; add rsp, 0x70 ; xor eax, eax ; pop rbx ; ret
0x0000000000407f44 : add eax, dword ptr [rax] ; add rsp, 0xd8 ; ret
0x0000000000480b4a : add eax, dword ptr [rax] ; jmp 0x480b00
0x00000000004010a7 : add eax, dword ptr [rax] ; leave ; ret
0x000000000043a02b : add eax, dword ptr [rax] ; mov rdi, r14 ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x000000000043a739 : add eax, dword ptr [rax] ; mov rdi, rbx ; call r14
0x00000000004399a7 : add eax, dword ptr [rax] ; mov rdi, rbx ; call r15
0x0000000000433100 : add eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000433123 : add eax, dword ptr [rax] ; ret
0x00000000004bdb5b : add eax, dword ptr [rbp + 0xe] ; and byte ptr [rbx + 0x1c80304], al ; ret
0x000000000045c1dd : add eax, dword ptr [rbp - 0x7b] ; rol byte ptr [rcx + 0xf], cl ; ret 0xf741
0x000000000043ecec : add eax, dword ptr [rbx + 0x394807e0] ; ret
0x00000000004bbc4b : add eax, dword ptr [rbx + 0xae40204] ; ret
0x00000000004054be : add eax, dword ptr [rbx - 0x6bf0fc08] ; ret 0x70e9
0x0000000000400ab0 : add eax, dword ptr [rbx - 0x7cb70038] ; ret 0xeb04
0x0000000000465e39 : add eax, dword ptr [rbx] ; call rax
0x00000000004658f6 : add eax, dword ptr [rbx] ; mov qword ptr [rbp - 0xe0], r11 ; call rax
0x0000000000478476 : add eax, dword ptr [rcx + 0x5f] ; ret
0x000000000045c1c9 : add eax, dword ptr [rdi + rcx + 0x48] ; ret 0x93ba
0x00000000004652df : add eax, dword ptr [rdi] ; call rax
0x000000000046b2c2 : add eax, dword ptr [rdx + 8] ; add rsp, 0x58 ; ret
0x00000000004696ec : add eax, dword ptr [rdx + 8] ; call rax
0x000000000045ee8a : add eax, dword ptr [rsi + rdx] ; ret
0x0000000000465d06 : add eax, dword ptr [rsi] ; call rax
0x00000000004331ac : add eax, eax ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000048fc37 : add eax, eax ; jmp r8
0x000000000044e5b0 : add eax, eax ; mov eax, r8d ; ret
0x000000000048d9a7 : add eax, ebx ; jmp rax
0x000000000041b9fa : add eax, ecx ; ret
0x000000000041b9f7 : add eax, edi ; add rax, rcx ; ret
0x000000000048ea04 : add eax, edi ; jmp rax
0x000000000041bc34 : add eax, edi ; ret
0x0000000000400fcb : add eax, edx ; sar rax, 1 ; jne 0x400fdc ; pop rbp ; ret
0x00000000004195fe : add eax, edx ; sub rax, rdi ; ret
0x000000000048e4f7 : add eax, esi ; jmp r8
0x000000000045b3a1 : add eax, esi ; ret
0x000000000044be2f : add ebp, 0x30 ; pop rbx ; mov eax, ebp ; pop rbp ; ret
0x0000000000400e0e : add ebp, dword ptr [rax + rax] ; pop r12 ; ret
0x0000000000477cc7 : add ebp, dword ptr [rcx] ; ret 0x294c
0x0000000000476c4b : add ebp, dword ptr [rcx] ; ret 0x48d
0x000000000048d5da : add ebp, ebx ; ret
0x000000000040d703 : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000438680 : add ebx, dword ptr [rbx - 0x2d] ; loopne 0x4386e7 ; ret
0x00000000004799f1 : add ebx, dword ptr [rdx] ; and eax, 0xf ; cmp al, 0xa ; jne 0x4799ae ; call rbx
0x000000000046b9a1 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000043cf6c : add ebx, ebp ; ret
0x000000000046ef77 : add ebx, ebp ; ret 0x9d8b
0x000000000045e871 : add ebx, edi ; dec dword ptr [rax + 0x39] ; ret
0x000000000045e869 : add ebx, edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000042aed3 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000040101a : add ebx, esi ; ret
0x000000000041c3b8 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x41c3a9 ; ret
0x000000000042e745 : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x0000000000410a14 : add ecx, dword ptr [rax + 0x29] ; ret
0x000000000047ad9f : add ecx, dword ptr [rax - 0x46] ; ret
0x000000000042e749 : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x00000000004793b5 : add ecx, dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000436a0b : add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x48 ; ret 0xc148
0x000000000045766a : add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000445465 : add ecx, dword ptr [rax - 0x7d] ; ret 0xf301
0x0000000000491af6 : add ecx, dword ptr [rax - 0x7f] ; call rax
0x0000000000435d01 : add ecx, dword ptr [rax] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000491677 : add ecx, dword ptr [rbp - 0x75] ; add byte ptr [rcx + rcx*4 + 3], cl ; pop rbx ; ret
0x000000000042ac42 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004303c4 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x0000000000440786 : add ecx, dword ptr [rcx + 0x39] ; ret
0x000000000048e9fe : add ecx, dword ptr [rcx + 0x63] ; add al, 0x87 ; add rax, r15 ; jmp rax
0x0000000000479ae2 : add ecx, dword ptr [rcx + rcx*4 - 0x16] ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000042e746 : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x000000000046e5eb : add ecx, dword ptr [rcx - 0x7d] ; ret 0x4101
0x000000000045f865 : add ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xe74
0x00000000004054c1 : add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x70e9
0x000000000049164f : add ecx, eax ; jmp r9
0x000000000048daa8 : add ecx, eax ; jmp rcx
0x000000000040e7c3 : add ecx, eax ; xor eax, eax ; mov qword ptr [rdx + 8], rcx ; ret
0x0000000000407e78 : add ecx, ebp ; ret
0x000000000045f2a3 : add ecx, ebp ; ret 0xfffe
0x000000000042588e : add ecx, ebx ; jmp r9
0x0000000000424232 : add ecx, ebx ; jmp rcx
0x0000000000496621 : add ecx, edi ; inc eax ; add bh, cl ; call qword ptr [rax]
0x000000000048cd38 : add ecx, edi ; jmp rcx
0x0000000000466311 : add ecx, esi ; call rcx
0x000000000042588b : add edi, edx ; add r9, r11 ; jmp r9
0x00000000004390da : add edi, esi ; dec dword ptr [rax - 0x73] ; and qword ptr [rax - 0x77], rcx ; ret 0x894c
0x0000000000434e89 : add edi, esi ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004bc9ca : add edx, dword ptr [rdx + 3] ; ret
0x000000000046c4f2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x000000000048e0b2 : add edx, ebp ; jmp rdx
0x000000000044951e : add edx, ebx ; call qword ptr [r11 + rax*8]
0x000000000040055d : add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x400537
0x000000000048e2a7 : add edx, ecx ; jmp rdx
0x0000000000453221 : add edx, esp ; call qword ptr [r11 + rax*8]
0x000000000044e3bb : add esi, 0x10 ; sar rdx, 2 ; call 0x45a5d9
0x000000000042adf3 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000044480c : add esi, ebx ; ret
0x00000000004331c2 : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x0000000000425888 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000041c200 : add esi, esi ; ret
0x00000000004679f9 : add esi, esi ; ret 0xf304
0x00000000004839e7 : add esp, 0x10 ; pop rbx ; jmp rax
0x00000000004055c1 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046b11c : add esp, 0x10 ; pop rbx ; ret
0x0000000000466ea2 : add esp, 0x140 ; mov eax, ebx ; pop rbx ; ret
0x00000000004652db : add esp, 0x18 ; add rax, qword ptr [r15] ; call rax
0x0000000000434bfd : add esp, 0x18 ; mov eax, edx ; ret
0x0000000000433fb0 : add esp, 0x18 ; mov rax, rdx ; ret
0x000000000040f1d8 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040d663 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004160b1 : add esp, 0x18 ; ret
0x0000000000438660 : add esp, 0x1d8 ; pop rbx ; pop rbp ; ret
0x0000000000446903 : add esp, 0x20 ; mov rax, r9 ; pop rbx ; ret
0x0000000000483ddc : add esp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x0000000000408fa1 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000433339 : add esp, 0x20 ; pop rbx ; ret
0x0000000000433321 : add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x0000000000436b4f : add esp, 0x2018 ; pop rbx ; pop rbp ; ret
0x00000000004762a9 : add esp, 0x28 ; movzx eax, al ; neg eax ; ret
0x0000000000406969 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000409deb : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000045ed9b : add esp, 0x28 ; ret
0x000000000046a413 : add esp, 0x30 ; jmp r11
0x00000000004339a1 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046b196 : add esp, 0x30 ; pop rbx ; ret
0x000000000046a4f3 : add esp, 0x30 ; ret
0x0000000000476376 : add esp, 0x38 ; ret
0x0000000000483e86 : add esp, 0x40 ; mov rax, rbx ; pop rbx ; ret
0x000000000046b80c : add esp, 0x48 ; jmp qword ptr [rax]
0x000000000046a09b : add esp, 0x48 ; jmp r11
0x000000000045ec02 : add esp, 0x48 ; movzx eax, al ; ret
0x000000000046b236 : add esp, 0x48 ; ret
0x000000000046b79a : add esp, 0x50 ; jmp qword ptr [rax]
0x000000000046b2c6 : add esp, 0x58 ; ret
0x00000000004166c4 : add esp, 0x70 ; pop rbx ; ret
0x0000000000416782 : add esp, 0x70 ; xor eax, eax ; pop rbx ; ret
0x000000000046b3b2 : add esp, 0x78 ; ret
0x000000000045e6a9 : add esp, 0x90 ; pop rbx ; ret
0x00000000004003c8 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000444b6b : add esp, 0xd0 ; ret
0x0000000000407f47 : add esp, 0xd8 ; ret
0x000000000046ef75 : add esp, 1 ; jmp 0x46ef40
0x0000000000464ef8 : add esp, 8 ; jmp rax
0x000000000044bdb2 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000415535 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000434b5a : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000041032b : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000416e54 : add esp, 8 ; mov rax, rdx ; ret
0x0000000000407696 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000483d67 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x00000000004585f0 : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000040afac : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000401b83 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004002c6 : add esp, 8 ; ret
0x0000000000419439 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000467821 : add esp, 8 ; xor edx, edx ; pop rbx ; mov eax, edx ; pop rbp ; ret
0x00000000004b84fc : add esp, dword ptr [rdx] ; clc ; jmp qword ptr [rdx]
0x0000000000466a02 : add qword ptr [r9 + r8 + 0x4a], rcx ; or byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000437fd0 : add qword ptr [rax], r8 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045a29d : add qword ptr [rax], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043cf69 : add qword ptr [rdi], 1 ; jmp 0x43cf37
0x000000000042aed2 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004652da : add r12, 0x18 ; add rax, qword ptr [r15] ; call rax
0x000000000046ef74 : add r12, 1 ; jmp 0x46ef41
0x000000000042ae62 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x000000000042adf2 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000488290 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000048e4f6 : add r8, r14 ; jmp r8
0x000000000048fc36 : add r8, rax ; jmp r8
0x000000000043ee04 : add r8b, bpl ; and eax, 0x89fffc2b ; ret 0xe283
0x000000000047e3a1 : add r8b, bpl ; mov byte ptr [rip - 0x76b70008], dh ; ret
0x0000000000405685 : add r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044e5af : add r8d, eax ; mov eax, r8d ; ret
0x000000000042588d : add r9, r11 ; jmp r9
0x000000000049164e : add r9, rax ; jmp r9
0x000000000040457a : add r9b, bpl ; ret 0xfff1
0x0000000000407ce7 : add r9b, byte ptr [r9 + rcx*4 - 0x3e] ; jmp 0x407d05
0x000000000046b519 : add rax, -0x10 ; ret
0x0000000000489a42 : add rax, -0x7cb80000 ; ret 0xe910
0x00000000004360f9 : add rax, -0x9cf0000 ; mov rdi, r14 ; call rbx
0x000000000045a850 : add rax, 1 ; ret
0x000000000045a847 : add rax, 2 ; ret
0x000000000048d5d7 : add rax, 3 ; jmp 0x48d5a5
0x000000000045a860 : add rax, 3 ; ret
0x000000000049175b : add rax, 8 ; mov qword ptr [rbx], r8 ; pop rbx ; ret
0x0000000000444868 : add rax, qword ptr [0] ; ret
0x0000000000465d05 : add rax, qword ptr [r14] ; call rax
0x00000000004652de : add rax, qword ptr [r15] ; call rax
0x0000000000465e38 : add rax, qword ptr [rbx] ; call rax
0x000000000046b2c1 : add rax, qword ptr [rdx + 8] ; add rsp, 0x58 ; ret
0x00000000004696eb : add rax, qword ptr [rdx + 8] ; call rax
0x0000000000444867 : add rax, qword ptr fs:[0] ; ret
0x000000000048d9a6 : add rax, r11 ; jmp rax
0x000000000048ea03 : add rax, r15 ; jmp rax
0x000000000041b9f9 : add rax, rcx ; ret
0x000000000041b9f6 : add rax, rdi ; add rax, rcx ; ret
0x000000000041bc33 : add rax, rdi ; ret
0x0000000000400fca : add rax, rdx ; sar rax, 1 ; jne 0x400fdd ; pop rbp ; ret
0x00000000004195fd : add rax, rdx ; sub rax, rdi ; ret
0x0000000000440785 : add rcx, qword ptr [r9 + 0x39] ; ret
0x0000000000424231 : add rcx, r11 ; jmp rcx
0x000000000048cd37 : add rcx, r15 ; jmp rcx
0x000000000048daa7 : add rcx, rax ; jmp rcx
0x000000000048ce8c : add rcx, rdi ; jmp rcx
0x0000000000466310 : add rcx, rsi ; call rcx
0x000000000042588a : add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000453220 : add rdx, r12 ; call qword ptr [r11 + rax*8]
0x000000000046c4f1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000048e0b1 : add rdx, rbp ; jmp rdx
0x000000000044951d : add rdx, rbx ; call qword ptr [r11 + rax*8]
0x000000000048e2a6 : add rdx, rcx ; jmp rdx
0x00000000004839e6 : add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004055c0 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046b11b : add rsp, 0x10 ; pop rbx ; ret
0x0000000000434bfc : add rsp, 0x18 ; mov eax, edx ; ret
0x0000000000433faf : add rsp, 0x18 ; mov rax, rdx ; ret
0x000000000040d662 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004160b0 : add rsp, 0x18 ; ret
0x000000000043865f : add rsp, 0x1d8 ; pop rbx ; pop rbp ; ret
0x0000000000446902 : add rsp, 0x20 ; mov rax, r9 ; pop rbx ; ret
0x0000000000483ddb : add rsp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x0000000000408fa0 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000433338 : add rsp, 0x20 ; pop rbx ; ret
0x0000000000433320 : add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x0000000000436b4e : add rsp, 0x2018 ; pop rbx ; pop rbp ; ret
0x00000000004762a8 : add rsp, 0x28 ; movzx eax, al ; neg eax ; ret
0x0000000000409dea : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000045ed9a : add rsp, 0x28 ; ret
0x000000000046a412 : add rsp, 0x30 ; jmp r11
0x00000000004339a0 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046b195 : add rsp, 0x30 ; pop rbx ; ret
0x000000000046a4f2 : add rsp, 0x30 ; ret
0x0000000000476375 : add rsp, 0x38 ; ret
0x0000000000483e85 : add rsp, 0x40 ; mov rax, rbx ; pop rbx ; ret
0x000000000046b80b : add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000046a09a : add rsp, 0x48 ; jmp r11
0x000000000045ec01 : add rsp, 0x48 ; movzx eax, al ; ret
0x000000000046b235 : add rsp, 0x48 ; ret
0x000000000046b799 : add rsp, 0x50 ; jmp qword ptr [rax]
0x000000000046b2c5 : add rsp, 0x58 ; ret
0x00000000004166c3 : add rsp, 0x70 ; pop rbx ; ret
0x0000000000416781 : add rsp, 0x70 ; xor eax, eax ; pop rbx ; ret
0x000000000046b3b1 : add rsp, 0x78 ; ret
0x000000000045e6a8 : add rsp, 0x90 ; pop rbx ; ret
0x00000000004003c7 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000444b6a : add rsp, 0xd0 ; ret
0x0000000000407f46 : add rsp, 0xd8 ; ret
0x0000000000464ef7 : add rsp, 8 ; jmp rax
0x000000000044bdb1 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000415534 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000434b59 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000041032a : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000416e53 : add rsp, 8 ; mov rax, rdx ; ret
0x0000000000407695 : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000483d66 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x00000000004585ef : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000401b82 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004002c5 : add rsp, 8 ; ret
0x0000000000419438 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000421ebe : add sil, sil ; ret 0x7404
0x000000000048c5ba : add word ptr [rdx + rax*2], 1 ; ret
0x00000000004b477d : and al, 0 ; add byte ptr [rax - 0x7f], dh ; cmc ; jmp rbx
0x00000000004396ba : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004b3384 : and al, 0 ; add byte ptr [rax], al ; test al, 0x4d ; cmc ; call qword ptr [rax]
0x0000000000476119 : and al, 0 ; call rax
0x000000000047602f : and al, 0 ; jmp rax
0x000000000043432a : and al, 0x10 ; add cl, byte ptr [rdi] ; ret 0xb9eb
0x00000000004652d8 : and al, 0x10 ; add r12, 0x18 ; add rax, qword ptr [r15] ; call rax
0x0000000000465e36 : and al, 0x10 ; add rax, qword ptr [rbx] ; call rax
0x0000000000433336 : and al, 0x10 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048f398 : and al, 0x10 ; add rsp, 0x28 ; ret
0x0000000000441be2 : and al, 0x10 ; call r12
0x0000000000441cbf : and al, 0x10 ; call r15
0x00000000004352cc : and al, 0x10 ; call rax
0x0000000000413333 : and al, 0x10 ; call rdx
0x0000000000438284 : and al, 0x10 ; je 0x438298 ; mov edi, 0x6c11e0 ; call rax
0x0000000000483d2b : and al, 0x10 ; mov rax, rdx ; add rsp, 0x28 ; ret
0x000000000048faa9 : and al, 0x10 ; mov rsi, qword ptr [rbp] ; call r14
0x00000000004595d2 : and al, 0x14 ; add byte ptr [rcx], ch ; ret
0x0000000000401288 : and al, 0x18 ; call rax
0x0000000000439606 : and al, 0x18 ; call rbx
0x000000000046b55d : and al, 0x18 ; mov edi, 0x6c11e0 ; call rax
0x0000000000476370 : and al, 0x18 ; mov rax, rdx ; add rsp, 0x38 ; ret
0x0000000000441bdd : and al, 0x18 ; mov rdi, qword ptr [rsp + 0x10] ; call r12
0x0000000000441cba : and al, 0x18 ; mov rdi, qword ptr [rsp + 0x10] ; call r15
0x000000000041473d : and al, 0x18 ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x0000000000468344 : and al, 0x18 ; shl rdi, 3 ; call 0x414618
0x0000000000483e51 : and al, 0x20 ; je 0x483e65 ; mov edi, 0x6c11e0 ; call rax
0x000000000041332e : and al, 0x20 ; mov qword ptr [rsp + 0x10], rcx ; call rdx
0x000000000043fa9b : and al, 0x24 ; jmp 0x43fa64
0x000000000043fa9a : and al, 0x24 ; jmp 0x43fa65
0x00000000004ad444 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x000000000041314c : and al, 0x28 ; call rax
0x000000000045ab45 : and al, 0x28 ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000415311 : and al, 0x28 ; mov rdi, r12 ; call rax
0x000000000044ebe7 : and al, 0x2c ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000440bd3 : and al, 0x2c ; jmp 0x440b9c
0x0000000000440bd2 : and al, 0x2c ; jmp 0x440b9d
0x000000000046b230 : and al, 0x30 ; add byte ptr [rbp + 0xb], dh ; add rsp, 0x48 ; ret
0x0000000000466e6f : and al, 0x30 ; call r9
0x00000000004637b3 : and al, 0x30 ; call rax
0x000000000045eb52 : and al, 0x30 ; jmp 0x45eb08
0x000000000045eb51 : and al, 0x30 ; jmp 0x45eb09
0x0000000000413147 : and al, 0x30 ; mov dword ptr [rsp + 0x28], r11d ; call rax
0x000000000043cfb2 : and al, 0x30 ; mov qword ptr [rax], rbx ; jmp 0x43cf81
0x000000000043cfb1 : and al, 0x30 ; mov qword ptr [rax], rbx ; jmp 0x43cf82
0x000000000045ad45 : and al, 0x30 ; mov rdi, r12 ; call rbx
0x0000000000411a17 : and al, 0x30 ; xor cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x1589
0x0000000000408a23 : and al, 0x38 ; call 0x414c94
0x000000000043bbcd : and al, 0x38 ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000043c4ec : and al, 0x38 ; mov dword ptr [rsp + 8], eax ; call r15
0x000000000043bad4 : and al, 0x38 ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000466e6a : and al, 0x38 ; mov r9, qword ptr [rsp + 0x30] ; call r9
0x000000000046a6c4 : and al, 0x38 ; ret 0x2875
0x000000000046b809 : and al, 0x40 ; add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000046b797 : and al, 0x40 ; add rsp, 0x50 ; jmp qword ptr [rax]
0x000000000045ab4a : and al, 0x40 ; call rbx
0x000000000045abd3 : and al, 0x40 ; lea rcx, qword ptr [rax + 4] ; call rbx
0x0000000000476579 : and al, 0x40 ; mov rdi, qword ptr [r13] ; call r12
0x0000000000434bfb : and al, 0x48 ; add esp, 0x18 ; mov eax, edx ; ret
0x0000000000433fae : and al, 0x48 ; add esp, 0x18 ; mov rax, rdx ; ret
0x0000000000475ed1 : and al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000048fc65 : and al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043a38a : and al, 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000046a411 : and al, 0x48 ; add esp, 0x30 ; jmp r11
0x000000000046a4f1 : and al, 0x48 ; add esp, 0x30 ; ret
0x000000000046a099 : and al, 0x48 ; add esp, 0x48 ; jmp r11
0x000000000046b3ed : and al, 0x48 ; add rsp, 0x78 ; ret
0x000000000045aa36 : and al, 0x48 ; lea ecx, dword ptr [rax + 1] ; call rbx
0x0000000000405ffa : and al, 0x48 ; mov dword ptr [rax + 8], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043ea2d : and al, 0x48 ; mov dword ptr [rsp + 8], eax ; call r12
0x000000000043c20c : and al, 0x48 ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000043f3de : and al, 0x48 ; mov dword ptr [rsp + 8], eax ; call r15
0x000000000043bf21 : and al, 0x48 ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000043fd3c : and al, 0x50 ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000043d766 : and al, 0x50 ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000048cdc2 : and al, 0x58 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x000000000043de0c : and al, 0x58 ; call rax
0x00000000004166bf : and al, 0x60 ; je 0x4166d9 ; add rsp, 0x70 ; pop rbx ; ret
0x000000000048163d : and al, 0x73 ; ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000004089ee : and al, 0x74 ; ret 0x8b4c
0x0000000000406993 : and al, 0x74 ; ret 0x8d48
0x0000000000477e15 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x894c
0x00000000004834dc : and al, 0x84 ; sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x00000000004b4314 : and al, 0x8b ; cmc ; jmp qword ptr [rdx]
0x00000000004bb184 : and al, 0x8e ; add byte ptr [rax], al ; clc ; clc ; stc ; call rax
0x0000000000477405 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000482fcd : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00000000004bb584 : and al, 0x92 ; add byte ptr [rax], al ; test al, 0xa ; cli ; jmp rbx
0x000000000043421a : and al, 0x98 ; add cl, byte ptr [rdi] ; ret 0xfc3
0x000000000043d3bf : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000043d576 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call qword ptr [rbx]
0x000000000048defb : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047daa4 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000048ef8b : and al, 0xbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x000000000046b25f : and al, 0xc ; add rsp, 0x48 ; ret
0x00000000004343b8 : and al, 0xc ; jmp 0x4342f4
0x0000000000401283 : and al, 0xc ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000477cf4 : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004772c2 : and al, 0xe8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000048cc2c : and al, 0xe8 ; ret
0x000000000045eca2 : and al, 0xeb ; mov byte ptr [r8 + 0x23], cl ; ret
0x000000000043fa9c : and al, 0xeb ; ret 0x8948
0x000000000048cc28 : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x000000000048ff2b : and al, 0xf ; ret 0x8348
0x00000000004663f5 : and al, 0xf ; xchg eax, esp ; ret 0xc031
0x00000000004b29e5 : and al, 0xf5 ; jmp qword ptr [rdx]
0x00000000004b87e5 : and al, 0xf8 ; jmp qword ptr [rdx]
0x0000000000421fc6 : and al, 0xf8 ; jne 0x421ea2 ; ret
0x000000000048cbe1 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000048cbe7 : and al, 0xf8 ; ret
0x0000000000496add : and al, 0xf9 ; call rax
0x000000000048cb9b : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000048cba1 : and al, 0xfc ; ret
0x0000000000444937 : and al, 0xfe ; fldcw word ptr [rsp - 2] ; ret
0x000000000044493b : and al, 0xfe ; ret
0x000000000043698d : and al, 0xff ; jmp 0x436957
0x000000000043698c : and al, 0xff ; jmp 0x436958
0x000000000045ed98 : and al, 8 ; add rsp, 0x28 ; ret
0x000000000041448f : and al, 8 ; call 0x4106f4
0x000000000043ea31 : and al, 8 ; call r12
0x000000000043bbd1 : and al, 8 ; call r14
0x000000000043c4f0 : and al, 8 ; call r15
0x00000000004351a8 : and al, 8 ; call rbx
0x0000000000483da9 : and al, 8 ; je 0x483dbd ; mov edi, 0x6c11e0 ; call rax
0x00000000004352c7 : and al, 8 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000043de07 : and al, 8 ; mov rsi, qword ptr [rsp + 0x58] ; call rax
0x00000000004a7528 : and al, byte ptr [r13] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040c8ea : and al, byte ptr [rax] ; add bl, dh ; ret
0x000000000049375a : and al, byte ptr [rax] ; jne 0x493781 ; ret
0x00000000004a7529 : and al, byte ptr [rbp] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000402f3e : and al, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004193ea : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x000000000044e797 : and al, ch ; ret
0x000000000044c1c0 : and bh, al ; add ch, byte ptr [rbx] ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004b84fd : and bh, al ; jmp qword ptr [rdx]
0x00000000004bef59 : and bh, ch ; call qword ptr [rbx]
0x00000000004b99b5 : and bh, cl ; jmp qword ptr [rdx]
0x00000000004b2604 : and bh, dl ; hlt ; jmp qword ptr [rdx]
0x000000000040a842 : and bl, ch ; ret 0x1f0f
0x0000000000411310 : and byte ptr [r8 + 0x39], r9b ; ret
0x000000000040d254 : and byte ptr [r9 + 0x5bc03113], cl ; ret
0x0000000000411311 : and byte ptr [rax + 0x39], cl ; ret
0x000000000040fe43 : and byte ptr [rax + 1], cl ; ret
0x000000000041130d : and byte ptr [rax - 0x73], cl ; and byte ptr [r8 + 0x39], r9b ; ret
0x000000000046a43c : and byte ptr [rax - 0x75], cl ; jg 0x46a46f ; call r11
0x000000000046a5aa : and byte ptr [rax - 0x75], cl ; jg 0x46a5dd ; call r11
0x0000000000412863 : and byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf04
0x0000000000490a0a : and byte ptr [rax - 0x75], cl ; push rsp ; ret 0x4910
0x000000000041332f : and byte ptr [rax - 0x77], cl ; and al, 0x10 ; call rdx
0x0000000000481e0b : and byte ptr [rax - 0x77], cl ; ret
0x0000000000412896 : and byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000444244 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x444258 ; call rax
0x000000000043a8be : and byte ptr [rax - 0x7d], cl ; ret
0x000000000048f479 : and byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040ada2 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000048f44a : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000433193 : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000436b52 : and byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004960f4 : and byte ptr [rax], dh ; clc ; push rax ; xor al, bh ; call qword ptr [rax]
0x00000000004964a4 : and byte ptr [rax], dl ; stc ; inc dword ptr [rax] ; adc bh, cl ; jmp rax
0x00000000004bdb5e : and byte ptr [rbx + 0x1c80304], al ; ret
0x00000000004056f8 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000408fa3 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004b376d : and byte ptr [rbx + 0xa410204], al ; ret
0x000000000040d255 : and byte ptr [rcx + 0x5bc03113], cl ; ret
0x0000000000446905 : and byte ptr [rcx + rcx*4 - 0x38], cl ; pop rbx ; ret
0x000000000048cc25 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x0000000000496548 : and byte ptr [rcx], dl ; stc ; inc dword ptr [rax] ; adc edi, ecx ; jmp rax
0x0000000000496a44 : and byte ptr [rdi], bh ; stc ; jmp qword ptr [rax + 0x10fff93e]
0x000000000048e59d : and byte ptr [rdi], cl ; lea ebp, dword ptr [rbx + rdi*8 + 0x2948ffff] ; ret 0x8941
0x000000000046f3cf : and byte ptr [rdi], cl ; test al, dl ; jmp 0x46f3d7
0x0000000000430d90 : and byte ptr [rdi], cl ; test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000040f801 : and byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8441
0x00000000004085f2 : and byte ptr [rdx + 0x49], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004965ac : and byte ptr [rdx], dl ; stc ; call qword ptr [rax]
0x00000000004242ca : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b9e05 : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x000000000045c022 : and byte ptr [rsi], 0 ; add rsp, 8 ; ret
0x00000000004964e0 : and byte ptr [rsi], cl ; stc ; jmp rax
0x000000000045a842 : and ch, 0xf ; je 0x45a869 ; add rax, 2 ; ret
0x00000000004001ca : and ch, ah ; int1 ; pop rdx ; ret 0xb50f
0x000000000045a82d : and cl, 0xf ; je 0x45a855 ; ret
0x0000000000477ce0 : and cl, al ; call 0x4909a60b
0x0000000000496b11 : and cl, bh ; call rax
0x000000000041375e : and cl, bpl ; ret 0xfff4
0x000000000046d47f : and cl, byte ptr [rax - 0x39] ; ret 0xfffe
0x000000000041bdcd : and cl, byte ptr [rcx - 0x77] ; ret
0x0000000000444409 : and cl, byte ptr [rdi] ; xchg al, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000045aa54 : and cl, ch ; ret
0x000000000041375f : and cl, ch ; ret 0xfff4
0x0000000000490b6e : and cl, ch ; ret 0xfffb
0x000000000041c3cb : and dh, dh ; ret 0x7504
0x000000000047b593 : and dword ptr [rax + rax], 0x39138b41 ; ret 0x850f
0x00000000004390e0 : and dword ptr [rax - 0x77], ecx ; ret 0x894c
0x00000000004644d5 : and dword ptr [rax - 0x7d], ecx ; ret 0x4c08
0x000000000044bc99 : and dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004aef62 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x000000000047277a : and dword ptr [rbp - 0x1f0], 0xfffffff0 ; jmp 0x46e9d9
0x000000000040e126 : and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000435f8b : and dword ptr [rip - 0x9cf0000], eax ; mov rdi, r12 ; call rbx
0x00000000004ac019 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004aef61 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000044486b : and eax, 0 ; ret
0x0000000000401016 : and eax, 0x1002c0c ; ret
0x0000000000436fab : and eax, 0x17 ; add byte ptr [rax], al ; ret
0x0000000000496ae1 : and eax, 0x2750fff9 ; stc ; call rax
0x0000000000477f85 : and eax, 0x2d0 ; mov eax, esi ; ret
0x0000000000407512 : and eax, 0x30 ; call rax
0x00000000004330fd : and eax, 0x3fc00 ; pop rbx ; ret
0x0000000000433120 : and eax, 0x3fc00 ; ret
0x00000000004330dc : and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000048fe5a : and eax, 0x48028b48 ; add esp, 8 ; ret
0x0000000000464e30 : and eax, 0x48c03100 ; add esp, 8 ; ret
0x000000000045a45e : and eax, 0x5c415d5b ; pop r13 ; pop r14 ; ret
0x000000000046798f : and eax, 0x6894800 ; ret
0x0000000000433150 : and eax, 0x7ff80000 ; ret
0x00000000004b490d : and eax, 0x89e00000 ; cmc ; jmp qword ptr [rcx]
0x000000000043ee07 : and eax, 0x89fffc2b ; ret 0xe283
0x00000000004370f7 : and eax, 0xc ; cmp eax, 4 ; je 0x437108 ; ret
0x0000000000437226 : and eax, 0xc ; pop r12 ; ret
0x00000000004b29df : and eax, 0xd1cfff5 ; xchg eax, edx ; and al, 0xf5 ; jmp qword ptr [rdx]
0x0000000000408c85 : and eax, 0xe8000000 ; ret 0x19d
0x00000000004799f3 : and eax, 0xf ; cmp al, 0xa ; jne 0x4799ac ; call rbx
0x000000000044277c : and eax, 0xf390fffd ; ret
0x0000000000438796 : and eax, 0xffffffc0 ; or rax, 0xffffffffffffffff ; ret
0x000000000046b99c : and eax, 2 ; sub eax, 1 ; ret
0x000000000048fe6c : and eax, dword ptr [rax - 0x80] ; call qword ptr [rax]
0x00000000004931d8 : and eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000048c5b8 : and eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x0000000000491d17 : and eax, dword ptr [rax] ; jne 0x491ce9 ; add rsp, 8 ; ret
0x0000000000491156 : and eax, dword ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; pop rbx ; ret
0x000000000048c7c4 : and eax, dword ptr [rax] ; ret
0x000000000046b852 : and eax, ecx ; ret
0x00000000004b834d : and eax, edi ; jmp qword ptr [rdx]
0x000000000046b8d1 : and eax, edx ; ret
0x000000000040e127 : and ebp, edi ; pop rbx ; ret
0x0000000000437092 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x4370a5 ; ret
0x0000000000425845 : and ecx, 0xff ; sub eax, ecx ; ret
0x0000000000424f78 : and ecx, 0xffff ; sub eax, ecx ; ret
0x000000000040100e : and ecx, dword ptr [rbx] ; call rax
0x00000000004074f0 : and ecx, dword ptr [rbx] ; jb 0x4074ee ; mov edi, ebx ; call 0x433749
0x000000000040edcc : and ecx, dword ptr [rdi] ; mov dh, 0 ; ret
0x0000000000463752 : and ecx, dword ptr [rdi] ; xchg byte ptr [rdi], bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000496ad5 : and ecx, edi ; call rax
0x0000000000496b19 : and edi, ecx ; call rax
0x00000000004390df : and qword ptr [rax - 0x77], rcx ; ret 0x894c
0x000000000042289a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x000000000041bc30 : bsf eax, eax ; add rax, rdi ; ret
0x000000000041bc40 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000041bc50 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000041bc20 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000041bb6f : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000422a93 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000041948d : bsf eax, edx ; ret
0x00000000004195fa : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x0000000000422bb0 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x00000000004194da : bsf rax, rdx ; ret
0x0000000000459937 : bsr eax, eax ; add rax, rdi ; ret
0x0000000000459bbb : bsr eax, esi ; add rax, rdi ; ret
0x0000000000459ac9 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x00000000004599c5 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x0000000000459936 : bsr rax, rax ; add rax, rdi ; ret
0x0000000000459bba : bsr rax, rsi ; add rax, rdi ; ret
0x0000000000459ac8 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x00000000004599c4 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x00000000004ba64c : bswap esi ; stc ; jmp qword ptr [rdx]
0x000000000040ee6f : call 0x100327bf
0x0000000000468f2c : call 0x1008c87c
0x0000000000466a10 : call 0x1108ed60
0x00000000004be308 : call 0x114bdf6c
0x000000000044076e : call 0x2068abe
0x000000000044076e : call 0x2068ac2
0x000000000044180e : call 0x2069b5e
0x000000000044180e : call 0x2069b62
0x00000000004221d4 : call 0x24b6ad2d
0x0000000000471251 : call 0x40d4a2
0x0000000000414491 : call 0x4106f2
0x000000000046834a : call 0x414612
0x0000000000408a07 : call 0x414c92
0x000000000045280c : call 0x414c96
0x00000000004601e9 : call 0x41c402
0x0000000000445c63 : call 0x421e92
0x000000000048f1ba : call 0x421e97
0x0000000000400e33 : call 0x433066
0x00000000004074f7 : call 0x433742
0x0000000000433f9c : call 0x434b07
0x0000000000406c93 : call 0x4449d7
0x000000000047a54f : call 0x4467b2
0x000000000044e356 : call 0x45a5c2
0x000000000044e3c2 : call 0x45a5d2
0x000000000047b426 : call 0x467722
0x000000000046c559 : call 0x47b757
0x00000000004726d9 : call 0x484726f0
0x00000000004121eb : call 0x4906233f
0x0000000000476d9d : call 0x490996c4
0x00000000004772b0 : call 0x49099bd7
0x00000000004777cf : call 0x4909a0f6
0x0000000000477ce2 : call 0x4909a609
0x000000000042a45a : call 0x4fc1b458
0x000000000042a459 : call 0x4fc1b459
0x000000000047dff5 : call 0xffffffff8994b12c
0x0000000000476c59 : call 0xffffffff8a099580
0x000000000047768f : call 0xffffffff8a099fb6
0x0000000000402e33 : call 0xffffffff8b8cf0c3
0x000000000045b577 : call 0xffffffff8b8e7807
0x00000000004aca83 : call 0xffffffffaf0d68f9
0x0000000000476858 : call 0xffffffffc270b1a0
0x000000000048efca : call 0xffffffffc2723c12
0x0000000000411fba : call 0xffffffffc2c667c4
0x0000000000414f4e : call 0xffffffffc2c69758
0x00000000004614ca : call 0xffffffffc2c95cd4
0x0000000000413a69 : call 0xffffffffc2ca8282
0x000000000044ec20 : call 0xffffffffc2ce342b
0x000000000047e405 : call 0xffffffffc3492d0f
0x0000000000408287 : call 0xffffffffc39cc3ed
0x0000000000408827 : call 0xffffffffc39cc98d
0x000000000045abfb : call 0xffffffffc3a1ed61
0x0000000000468141 : call 0xffffffffc3a2c2a7
0x0000000000444d7c : call 0xffffffffc3f35ccd
0x000000000041c977 : call 0xffffffffc41252c8
0x00000000004193f7 : call 0xffffffffc43a1d48
0x0000000000401e31 : call 0xffffffffec02a781
0x0000000000449520 : call qword ptr [r11 + rax*8]
0x0000000000496a67 : call qword ptr [rax + 0x10fff93a]
0x0000000000496a5f : call qword ptr [rax + 0x10fff93b]
0x0000000000496a57 : call qword ptr [rax + 0x10fff93c]
0x0000000000496a4f : call qword ptr [rax + 0x10fff93d]
0x0000000000496237 : call qword ptr [rax + 0x20fff8ba]
0x00000000004964db : call qword ptr [rax + 0x20fff91b]
0x0000000000496877 : call qword ptr [rax + 0x20fff942]
0x000000000049665f : call qword ptr [rax + 0x20fff945]
0x00000000004396ee : call qword ptr [rax + 0x48e9c289]
0x00000000004755ae : call qword ptr [rax + 0x8c28348]
0x00000000004965f3 : call qword ptr [rax - 0x1f0006f9]
0x0000000000496607 : call qword ptr [rax - 0x1f000707]
0x0000000000496aff : call qword ptr [rax - 0x2f0006e6]
0x00000000004965bf : call qword ptr [rax - 0x2f00070d]
0x000000000040e9de : call qword ptr [rax - 0x3f38b8]
0x00000000004960fb : call qword ptr [rax]
0x0000000000401185 : call qword ptr [rbx + 0x10]
0x00000000004b1e1f : call qword ptr [rbx + rax*8 - 0x3c830003]
0x00000000004b204f : call qword ptr [rbx + rax*8 - 3]
0x0000000000449521 : call qword ptr [rbx + rax*8]
0x0000000000401758 : call qword ptr [rbx*8 + 0x6bfed0]
0x0000000000479b28 : call qword ptr [rbx]
0x0000000000465a0d : call qword ptr [rcx]
0x00000000004b4acb : call qword ptr [rdi]
0x000000000049670b : call qword ptr [rdx + 0x22fff947]
0x000000000047b2bd : call qword ptr [rdx]
0x00000000004966a7 : call qword ptr [rsi + 0x26fff944]
0x00000000004525dd : call qword ptr [rsi]
0x000000000046a441 : call r11
0x00000000004368dc : call r12
0x000000000043a73e : call r14
0x00000000004399ac : call r15
0x0000000000456db2 : call r8
0x0000000000466e71 : call r9
0x0000000000496617 : call rax
0x000000000043653b : call rbx
0x00000000004051cb : call rcx
0x00000000004399ad : call rdi
0x00000000004107aa : call rdx
0x000000000043a73f : call rsi
0x00000000004368dd : call rsp
0x00000000004bbc75 : cdq ; add byte ptr [rax], al ; cwde ; cli ; jmp rsp
0x00000000004b2fcc : cdq ; cmc ; jmp qword ptr [rdx]
0x00000000004ae7c0 : cdq ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000046bbb9 : cdq ; pop r14 ; idiv r9 ; pop r15 ; ret
0x0000000000464f93 : cdq ; ret 0x25
0x0000000000496be9 : cdq ; stc ; call qword ptr [rax]
0x0000000000496be1 : cdq ; stc ; call rax
0x0000000000496bc9 : cdq ; stc ; jmp qword ptr [rax]
0x0000000000496be5 : cdq ; stc ; push rax ; cdq ; stc ; call qword ptr [rax]
0x00000000004350f3 : cdq ; sti ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000040b568 : cdqe ; ret
0x0000000000412a30 : clc ; add al, 0x74 ; cmp al, 0x89 ; ret 0xb48b
0x000000000045b2a9 : clc ; add al, 0xf ; xchg eax, ebp ; ret 0xd7e9
0x000000000045b115 : clc ; add al, 0xf ; xchg eax, ebp ; ret 0xf883
0x000000000044ca38 : clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000040a52c : clc ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000457ff9 : clc ; add cl, byte ptr [rax + 0x39] ; ret 0x5877
0x0000000000404abc : clc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000422ceb : clc ; add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045c0e6 : clc ; add eax, 0x89d02944 ; ret
0x000000000045c2cd : clc ; add eax, 0xfd02944 ; scasd eax, dword ptr [rdi] ; ret
0x0000000000478475 : clc ; add eax, dword ptr [rcx + 0x5f] ; ret
0x00000000004054c0 : clc ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x70e9
0x000000000041b9f8 : clc ; add rax, rcx ; ret
0x00000000004bef58 : clc ; and bh, ch ; call qword ptr [rbx]
0x000000000040f800 : clc ; and byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8441
0x0000000000496236 : clc ; call qword ptr [rax + 0x20fff8ba]
0x0000000000496606 : clc ; call qword ptr [rax - 0x1f000707]
0x00000000004960fa : clc ; call qword ptr [rax]
0x00000000004b97f2 : clc ; call qword ptr [rbx]
0x00000000004963a6 : clc ; call qword ptr [rcx]
0x00000000004b92a2 : clc ; call qword ptr [rdi]
0x0000000000496366 : clc ; call qword ptr [rdx]
0x00000000004963c2 : clc ; call qword ptr [rsi]
0x0000000000496616 : clc ; call rax
0x00000000004b8212 : clc ; call rcx
0x00000000004b86da : clc ; call rdx
0x0000000000496605 : clc ; clc ; call qword ptr [rax - 0x1f000707]
0x00000000004bb188 : clc ; clc ; stc ; call rax
0x00000000004153ae : clc ; cmovne rax, rcx ; add rsp, 8 ; ret
0x00000000004257e9 : clc ; cmp rcx, rax ; jne 0x42581b ; xor eax, eax ; ret
0x00000000004257e8 : clc ; cmp rcx, rax ; jne 0x42581c ; xor eax, eax ; ret
0x0000000000491bc3 : clc ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret
0x00000000004018d4 : clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004133cc : clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000045717f : clc ; dec dword ptr [rax - 0x77] ; ret 0xf40
0x0000000000449049 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x0000000000448d7a : clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000475b5b : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000004bcab8 : clc ; in eax, -6 ; jmp qword ptr [rdx]
0x00000000004960c6 : clc ; inc dword ptr [rax + 0x27] ; clc ; inc dword ptr [rax] ; sub al, bh ; call rax
0x00000000004960da : clc ; inc dword ptr [rax + 0x2b] ; clc ; call qword ptr [rax]
0x000000000049613a : clc ; inc dword ptr [rax + 0x50fff810] ; clc ; call rax
0x0000000000496202 : clc ; inc dword ptr [rax - 0x2f000757] ; stosb byte ptr [rdi], al ; clc ; jmp qword ptr [rax]
0x0000000000496232 : clc ; inc dword ptr [rax - 0x47] ; clc ; call qword ptr [rax + 0x20fff8ba]
0x00000000004961de : clc ; inc dword ptr [rax - 0x66] ; clc ; jmp rax
0x0000000000496602 : clc ; inc dword ptr [rax - 8] ; clc ; call qword ptr [rax - 0x1f000707]
0x000000000049625a : clc ; inc dword ptr [rax] ; jns 0x49625c ; call qword ptr [rax]
0x00000000004961f6 : clc ; inc dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; clc ; call rax
0x00000000004960ca : clc ; inc dword ptr [rax] ; sub al, bh ; call rax
0x00000000004627a3 : clc ; inc dword ptr [rcx - 0x77] ; ret 0x5b74
0x00000000004624d9 : clc ; inc dword ptr [rcx - 0x77] ; ret 0x840f
0x00000000004628f9 : clc ; inc dword ptr [rcx - 0x77] ; ret 0x850f
0x00000000004625ec : clc ; inc dword ptr [rcx - 0x77] ; ret 0x940f
0x0000000000496362 : clc ; inc dword ptr [rdx - 0x15] ; clc ; call qword ptr [rdx]
0x00000000004963f6 : clc ; inc dword ptr [rsi - 0xd] ; clc ; jmp rsi
0x000000000049624a : clc ; inc eax ; jo 0x49624c ; call rax
0x0000000000496212 : clc ; inc eax ; scasb al, byte ptr [rdi] ; clc ; call qword ptr [rax]
0x00000000004965ce : clc ; inc eax ; sti ; clc ; call qword ptr [rax]
0x00000000004961da : clc ; jmp qword ptr [rax + 0x40fff898]
0x0000000000496126 : clc ; jmp qword ptr [rax - 0x1f0007e3]
0x0000000000496116 : clc ; jmp qword ptr [rax - 0x1f0007e8]
0x0000000000496106 : clc ; jmp qword ptr [rax - 0x1f0007ed]
0x00000000004960f2 : clc ; jmp qword ptr [rax]
0x00000000004b834e : clc ; jmp qword ptr [rdx]
0x0000000000492788 : clc ; jmp qword ptr [rsi + 0xf]
0x00000000004b934a : clc ; jmp qword ptr [rsi]
0x000000000049612a : clc ; jmp rax
0x00000000004963c6 : clc ; jmp rsi
0x0000000000400fcf : clc ; jne 0x400fd8 ; pop rbp ; ret
0x0000000000421fc7 : clc ; jne 0x421ea1 ; ret
0x000000000048f5a0 : clc ; leave ; ret
0x000000000049647e : clc ; ljmp ptr [rax + 0xe] ; stc ; push qword ptr [rax] ; adc cl, bh ; call qword ptr [rax]
0x00000000004ad422 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004272c7 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000427c37 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042a1e7 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000427e37 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042a157 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000428037 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042a0c7 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004272e3 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000048f63b : clc ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048cbe2 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000045ee91 : clc ; nop word ptr [rax + rax] ; ret
0x0000000000479c6b : clc ; or byte ptr [rax - 0x77], cl ; ret
0x000000000040fc19 : clc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004960d6 : clc ; push qword ptr [rax + 0x2a] ; clc ; inc dword ptr [rax + 0x2b] ; clc ; call qword ptr [rax]
0x000000000040142f : clc ; push qword ptr [rax + 0x48] ; add esp, 8 ; ret
0x0000000000496246 : clc ; push qword ptr [rax - 0x3f000792] ; jo 0x496250 ; call rax
0x000000000049620e : clc ; push qword ptr [rax - 0x53] ; clc ; inc eax ; scasb al, byte ptr [rdi] ; clc ; call qword ptr [rax]
0x0000000000496276 : clc ; push qword ptr [rax - 0x79] ; clc ; call qword ptr [rax]
0x0000000000496472 : clc ; push qword ptr [rax - 0xe] ; clc ; call qword ptr [rax]
0x00000000004965ca : clc ; push qword ptr [rax - 6] ; clc ; inc eax ; sti ; clc ; call qword ptr [rax]
0x0000000000409e6a : clc ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x000000000040e170 : clc ; push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x000000000043743b : clc ; push qword ptr [rbp - 7] ; nop ; xor eax, eax ; leave ; ret
0x000000000040e122 : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x000000000045e68c : clc ; push qword ptr [rdi + rbp - 0x77] ; ret 0xe283
0x0000000000496256 : clc ; push rax ; jbe 0x49625c ; inc dword ptr [rax] ; jns 0x496260 ; call qword ptr [rax]
0x0000000000496316 : clc ; push rax ; sar eax, 1 ; call qword ptr [rax]
0x00000000004960f6 : clc ; push rax ; xor al, bh ; call qword ptr [rax]
0x0000000000493198 : clc ; push rbx ; ret
0x000000000040ea72 : clc ; ret
0x000000000046bf2a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000004bb189 : clc ; stc ; call rax
0x000000000046b06d : clc ; std ; jbe 0x46b07c ; ret
0x00000000004330ff : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000433122 : cld ; add eax, dword ptr [rax] ; ret
0x00000000004be2aa : cld ; call qword ptr [rax]
0x00000000004be0f2 : cld ; call rbx
0x0000000000464fc7 : cld ; cld ; inc dword ptr [rbp + 0x5b0278c0] ; ret
0x00000000004b60fd : cld ; cmc ; jmp qword ptr [rdx]
0x0000000000464fc8 : cld ; inc dword ptr [rbp + 0x5b0278c0] ; ret
0x00000000004331c0 : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000004330de : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004be1b2 : cld ; jmp qword ptr [rax]
0x00000000004be046 : cld ; jmp qword ptr [rdx]
0x0000000000427a52 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427c55 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000427e55 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000428055 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000427686 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042a376 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000427866 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042a2f6 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000427a46 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042a276 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004274a6 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042a3f6 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000048cb9c : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000041c3ec : cld ; ret
0x0000000000434fcd : cld ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000435060 : cld ; std ; dec dword ptr [rcx - 0x75] ; jge 0x43506e ; call rbx
0x00000000004b52ec : cld ; stosb byte ptr [rdi], al ; cmc ; jmp qword ptr [rdx]
0x00000000004ac8d6 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000048dee1 : cli ; adc byte ptr [rdi + rcx + 0x44], cl ; ret
0x0000000000477f59 : cli ; add byte ptr [rcx - 0xcfd8130], cl ; ret
0x000000000045c201 : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x000000000047c35e : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000043e4a9 : cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4806
0x0000000000477cc6 : cli ; add ebp, dword ptr [rcx] ; ret 0x294c
0x0000000000476c4a : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000004bcc92 : cli ; call qword ptr [rax]
0x00000000004bc5b2 : cli ; call qword ptr [rbx]
0x00000000004bb77a : cli ; call qword ptr [rdx]
0x00000000004bc282 : cli ; call rdx
0x00000000004bc69a : cli ; call rsi
0x00000000004965cd : cli ; clc ; inc eax ; sti ; clc ; call qword ptr [rax]
0x0000000000461f35 : cli ; cmp cl, byte ptr [rdi + rcx + 0x44] ; ror dword ptr [rcx - 0x7d], 1 ; ret
0x000000000045f0e3 : cli ; cmp dh, byte ptr [rcx + rdi*4 - 0xd] ; ret
0x0000000000467f0d : cli ; dec dword ptr [rax + 0xf] ; ret 0x48c3
0x000000000040aed9 : cli ; dec dword ptr [rax + 0xf] ; ret 0xe0ba
0x0000000000474fa4 : cli ; dec dword ptr [rcx - 0x77] ; ret 0x92e9
0x0000000000403b19 : cli ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x00000000004b2605 : cli ; hlt ; jmp qword ptr [rdx]
0x00000000004bb2fe : cli ; jmp qword ptr [rdx]
0x00000000004927c0 : cli ; jmp qword ptr [rsi + 0xf]
0x00000000004bb58a : cli ; jmp rbx
0x00000000004bbeea : cli ; jmp rdi
0x00000000004bbc7a : cli ; jmp rsp
0x0000000000427e58 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000041bde8 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000405544 : cli ; or al, byte ptr [rbp + 0xf] ; ret 0x8348
0x000000000043f4f5 : cli ; or byte ptr [rdi], 0x94 ; ret 0xb60f
0x000000000047674d : cli ; or cl, byte ptr [rax + 0x29] ; ret 0x5589
0x00000000004aed41 : cli ; push 0x6e ; ja 0x4aecce ; ret 0x48f
0x0000000000475cd2 : cli ; push qword ptr [rdx + rcx + 0x48] ; mov eax, edx ; pop rbx ; ret
0x00000000004ad7e5 : cli ; ret 0xac65
0x000000000043701b : cli ; setae al ; ret
0x00000000004351de : cli ; std ; dec dword ptr [rax - 0x75] ; jge 0x4351ec ; call rbx
0x00000000004351c3 : cli ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004351ec : cli ; std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x00000000004351d0 : cli ; std ; dec dword ptr [rcx - 0x75] ; jge 0x4351de ; call rbx
0x0000000000419530 : cli ; test rdx, rdx ; je 0x419549 ; bsf rax, rdx ; ret
0x00000000004597cf : cli ; test rdx, rdx ; je 0x4597f9 ; bsf rax, rdx ; ret
0x00000000004ac42a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x000000000045024f : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004884e8 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004b2a4a : cmc ; call qword ptr [rax]
0x00000000004b2f42 : cmc ; call qword ptr [rbx]
0x00000000004b2b5a : cmc ; call qword ptr [rcx]
0x00000000004b4aca : cmc ; call qword ptr [rdi]
0x00000000004b3092 : cmc ; call qword ptr [rdx]
0x00000000004b505a : cmc ; call qword ptr [rsi]
0x00000000004b6422 : cmc ; call rcx
0x00000000004b6a0a : cmc ; call rdx
0x00000000004b4efa : cmc ; jmp qword ptr [rax]
0x00000000004b4912 : cmc ; jmp qword ptr [rcx]
0x00000000004b28e6 : cmc ; jmp qword ptr [rdx]
0x00000000004b3e72 : cmc ; jmp rax
0x00000000004b4782 : cmc ; jmp rbx
0x00000000004b38aa : cmc ; jmp rsp
0x00000000004af169 : cmc ; mov ch, 0xab ; ret
0x000000000042a2fa : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004276de : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x000000000048fc31 : cmc ; movsxd rax, dword ptr [r8 + rdi*4] ; add r8, rax ; jmp r8
0x0000000000432273 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000457156 : cmc ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000475e01 : cmc ; pop rbp ; pop r12 ; ret
0x00000000004ac017 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000047b427 : cmc ; ret 0xfffe
0x00000000004b96de : cmc ; retf -8 ; sbb al, 0xd ; fmul st(1), st(0) ; clc ; jmp qword ptr [rdx]
0x0000000000432277 : cmc ; sub eax, edx ; ret
0x00000000004ae7a5 : cmc ; xlatb ; ret 0x4e27
0x000000000045b39b : cmova esi, eax ; imul esi, edx ; add eax, esi ; ret
0x000000000045b39a : cmova esi, r8d ; imul esi, edx ; add eax, esi ; ret
0x000000000040f509 : cmovae eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000040f508 : cmovae rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000048fa07 : cmovbe eax, ecx ; ret
0x000000000045f131 : cmove eax, ecx ; ret
0x000000000041b940 : cmove eax, edx ; add rsp, 8 ; ret
0x000000000043432d : cmove eax, edx ; jmp 0x4342ed
0x000000000043421d : cmove eax, edx ; ret
0x000000000040bf35 : cmove eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040bf34 : cmove eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000444a25 : cmove ecx, esi ; jmp 0x444a00
0x000000000045f130 : cmove rax, r9 ; ret
0x000000000041b93f : cmove rax, rdx ; add rsp, 8 ; ret
0x0000000000483f37 : cmove rax, rdx ; ret
0x000000000040d1ab : cmovg eax, ecx ; test rdx, rdx ; jne 0x40d1a9 ; ret
0x00000000004581fb : cmovg eax, ecx ; test rdx, rdx ; jne 0x4581f9 ; ret
0x0000000000400561 : cmovge eax, edx ; jmp 0x400533
0x00000000004153b0 : cmovne eax, ecx ; add rsp, 8 ; ret
0x0000000000457891 : cmovne eax, ecx ; ret
0x0000000000416ee3 : cmovne eax, edx ; ret
0x0000000000457890 : cmovne r8, rcx ; ret
0x00000000004153af : cmovne rax, rcx ; add rsp, 8 ; ret
0x0000000000416ee2 : cmovne rax, rdx ; ret
0x000000000043b85c : cmovns eax, edx ; ret
0x000000000048f8e8 : cmovs ecx, dword ptr [rcx + 0x1bffe] ; add byte ptr [rax], al ; jmp rax
0x000000000040e1a8 : cmovs edi, dword ptr [rcx] ; int1 ; jne 0x40e1a9 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004139ce : cmp al, 0x1e ; mov rax, rsi ; pop rbx ; ret
0x00000000004351f1 : cmp al, 0x24 ; call rbx
0x000000000045aa35 : cmp al, 0x24 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000040eac9 : cmp al, 0x2b ; add byte ptr [rcx], al ; ret
0x00000000004bb7fc : cmp al, 0x2c ; cli ; jmp qword ptr [rdx]
0x00000000004ad420 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004b709c : cmp al, 0x4d ; add byte ptr [rax], al ; sar byte ptr [rbx - 0xa], 1 ; call qword ptr [rax]
0x0000000000412a33 : cmp al, 0x89 ; ret 0xb48b
0x00000000004799f6 : cmp al, 0xa ; jne 0x4799a9 ; call rbx
0x0000000000446794 : cmp al, 0xb2 ; jle 0x446756 ; jmp 0x446763
0x000000000048fa55 : cmp al, 0xcc ; mov rsi, qword ptr [r15] ; call r14
0x00000000004b2d65 : cmp al, 0xf5 ; jmp qword ptr [rdx]
0x0000000000496151 : cmp al, 0xf8 ; call rax
0x0000000000496a5d : cmp al, 0xf9 ; call qword ptr [rax + 0x10fff93b]
0x0000000000496a59 : cmp al, 0xf9 ; call qword ptr [rax]
0x00000000004b8a29 : cmp al, bh ; jmp qword ptr [rdx]
0x0000000000432736 : cmp al, byte ptr [rsi - 1] ; jne 0x43275c ; xor eax, eax ; ret
0x0000000000465a0b : cmp al, ch ; call qword ptr [rcx]
0x0000000000408a24 : cmp al, ch ; ret 0
0x000000000041bc26 : cmp al, dh ; ret
0x000000000041bc25 : cmp al, r14b ; ret
0x0000000000435052 : cmp bh, ah ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000496a69 : cmp bh, cl ; call qword ptr [rax]
0x000000000042265b : cmp bl, dh ; ret
0x00000000004094c3 : cmp byte ptr [r8 - 0x77], cl ; ret 0x348
0x000000000041c7af : cmp byte ptr [rax + 0xf], cl ; ret
0x000000000041bc67 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x00000000004351a4 : cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x0000000000466ee6 : cmp byte ptr [rax - 0x77], cl ; ret
0x00000000004094c4 : cmp byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000456053 : cmp byte ptr [rax - 0x77], cl ; ret 0xef83
0x000000000045717c : cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf40
0x000000000048d8b4 : cmp byte ptr [rax - 0x7d], cl ; ret
0x000000000041bc56 : cmp byte ptr [rax], ah ; ret
0x0000000000416ee0 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x000000000041bc46 : cmp byte ptr [rax], dl ; ret
0x000000000041bc45 : cmp byte ptr [rax], r10b ; ret
0x000000000041bc55 : cmp byte ptr [rax], r12b ; ret
0x0000000000416edf : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x0000000000466e6b : cmp byte ptr [rbx + rcx*4 + 0x4c], cl ; and al, 0x30 ; call r9
0x00000000004777f3 : cmp byte ptr [rcx + 0x29], cl ; ret
0x000000000043c4ed : cmp byte ptr [rcx + 0x41082444], cl ; call rdi
0x000000000043bbce : cmp byte ptr [rcx + 0x41082444], cl ; call rsi
0x0000000000458fa0 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000046a41c : cmp byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x0000000000414cc9 : cmp byte ptr [rcx], dh ; shr cl, cl ; ret
0x0000000000424cbd : cmp byte ptr [rdi], dl ; ret
0x00000000004257d0 : cmp byte ptr [rdi], dl ; ret 0x2373
0x00000000004257b9 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x00000000004257a2 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042425e : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000045f12c : cmp byte ptr [rsi - 2], 0x3a ; cmove rax, r9 ; ret
0x0000000000496614 : cmp ch, 0xf8 ; call rax
0x0000000000496939 : cmp cl, bh ; call qword ptr [rdx]
0x0000000000496ab9 : cmp cl, bh ; call rax
0x0000000000496a79 : cmp cl, bh ; jmp rax
0x0000000000415cb1 : cmp cl, byte ptr [rbx + rcx*4 + 0x47] ; or byte ptr [rbp - 0x77], cl ; ret
0x00000000004b5d06 : cmp cl, byte ptr [rbx] ; idiv bh ; sbb al, 0xd ; jmp 0x4b5d0e
0x0000000000435e6a : cmp cl, byte ptr [rcx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000461f36 : cmp cl, byte ptr [rdi + rcx + 0x44] ; ror dword ptr [rcx - 0x7d], 1 ; ret
0x000000000045f0e4 : cmp dh, byte ptr [rcx + rdi*4 - 0xd] ; ret
0x000000000046cae9 : cmp dh, dh ; ret 0x7401
0x000000000045f0e2 : cmp dl, 0x3a ; je 0x45f0a6 ; ret
0x000000000040fc03 : cmp dword ptr [rbx + rbp], ecx ; add byte ptr [rax + 0x39], cl ; ret 0xb76
0x0000000000429e0c : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000478fab : cmp dword ptr [rdi + 0x39480024], ebp ; ret 0xf48
0x0000000000446792 : cmp dword ptr [rdx + r14*4], 0x40 ; jle 0x446758 ; jmp 0x446765
0x0000000000437430 : cmp dword ptr [rdx + rcx*8 - 8], 1 ; sbb eax, 0 ; leave ; ret
0x0000000000446793 : cmp dword ptr [rdx + rsi*4], 0x40 ; jle 0x446757 ; jmp 0x446764
0x00000000004b35bc : cmp dword ptr [rdx - 0xb], edx ; jmp qword ptr [rdx]
0x000000000048fa04 : cmp dword ptr [rsi + 8], edi ; cmovbe eax, ecx ; ret
0x0000000000434328 : cmp dword ptr [rsp + 0x10], 2 ; cmove eax, edx ; jmp 0x4342f2
0x0000000000434218 : cmp dword ptr [rsp - 0x68], 2 ; cmove eax, edx ; ret
0x000000000040f839 : cmp eax, 0x1000 ; je 0x40f851 ; xor eax, eax ; ret
0x0000000000476116 : cmp eax, 0x24d535 ; call rax
0x000000000047602c : cmp eax, 0x24d61f ; jmp rax
0x0000000000438c1c : cmp eax, 0x28b39f ; pop rbx ; ret
0x0000000000496a55 : cmp eax, 0x3c90fff9 ; stc ; call qword ptr [rax]
0x0000000000496155 : cmp eax, 0x3f50fff8 ; clc ; call rax
0x0000000000400f8d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x400fa0 ; pop rbp ; ret
0x000000000046b06c : cmp eax, 0xfd ; jbe 0x46b07d ; ret
0x000000000040142e : cmp eax, 0xff ; je 0x40145c ; add rsp, 8 ; ret
0x000000000040e121 : cmp eax, 0xff ; je 0x40e132 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000004591ba : cmp eax, 0xff ; je 0x4591cb ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000004591fe : cmp eax, 0xff ; je 0x45920f ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000409e69 : cmp eax, 0xff ; jne 0x409e76 ; pop rbx ; ret
0x000000000040e16f : cmp eax, 0xff ; jne 0x40e160 ; pop rbx ; ret
0x000000000043743a : cmp eax, 0xff ; jne 0x437441 ; nop ; xor eax, eax ; leave ; ret
0x0000000000433ff6 : cmp eax, 0xfffff000 ; ja 0x43401c ; ret
0x0000000000434045 : cmp eax, 0xfffff000 ; ja 0x43406c ; ret
0x00000000004341da : cmp eax, 0xfffff000 ; ja 0x43425a ; ret
0x0000000000444a0a : cmp eax, 0xfffff000 ; ja 0x444a32 ; ret
0x0000000000444ca1 : cmp eax, 0xfffff000 ; ja 0x444cb2 ; ret
0x000000000045ea36 : cmp eax, 0xfffff000 ; ja 0x45ea5c ; ret
0x000000000045ea8b : cmp eax, 0xfffff000 ; ja 0x45eab4 ; ret
0x000000000045ead1 : cmp eax, 0xfffff000 ; ja 0x45eae2 ; ret
0x000000000045ed38 : cmp eax, 0xfffff000 ; ja 0x45ed47 ; ret
0x0000000000422cea : cmp eax, 1 ; ja 0x422cd1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004370fa : cmp eax, 4 ; je 0x437105 ; ret
0x00000000004972c1 : cmp eax, dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004145ed : cmp eax, dword ptr [rcx] ; ret
0x000000000045788e : cmp eax, dword ptr [rdx + 0x4c] ; cmovne eax, ecx ; ret
0x000000000040edc9 : cmp eax, ecx ; jae 0x40edf7 ; movzx eax, byte ptr [rax] ; ret
0x0000000000432753 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000496149 : cmp eax, edi ; call rax
0x000000000046b6b4 : cmp eax, esi ; je 0x46b6c4 ; ret
0x0000000000437096 : cmp ebx, 0xa ; je 0x4370a1 ; ret
0x00000000004385ce : cmp ebx, eax ; setne dl ; jmp 0x4385ba
0x0000000000467f44 : cmp ecx, dword ptr [rsi + rdi] ; jae 0x467f08 ; xor eax, eax ; ret
0x00000000004257eb : cmp ecx, eax ; jne 0x425819 ; xor eax, eax ; ret
0x00000000004968b5 : cmp ecx, edi ; call rax
0x000000000040f912 : cmp ecx, edi ; je 0x40f756 ; ret
0x0000000000496935 : cmp ecx, edi ; jmp qword ptr [rdx + 0x12fff938]
0x0000000000496a75 : cmp ecx, edi ; push qword ptr [rax + 0x38] ; stc ; jmp rax
0x000000000040e1aa : cmp ecx, esi ; jne 0x40e1a7 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000496a65 : cmp edi, ecx ; call qword ptr [rax + 0x10fff93a]
0x0000000000496a61 : cmp edi, ecx ; call qword ptr [rax]
0x000000000044e595 : cmp edi, ecx ; ja 0x44e57f ; mov eax, r8d ; ret
0x0000000000477f58 : cmp edx, 0 ; mov eax, edx ; jle 0x477f69 ; ret
0x0000000000467f0c : cmp edx, 0xff ; cmovne rax, rdx ; ret
0x0000000000475cd1 : cmp edx, 0xff ; je 0x475ce9 ; mov rax, rdx ; pop rbx ; ret
0x00000000004372a2 : cmp edx, eax ; jne 0x437285 ; ret
0x000000000041c3bc : cmp edx, ecx ; jne 0x41c3a5 ; ret
0x0000000000467897 : cmp edx, ecx ; jne 0x46784f ; mov eax, dword ptr [rdx] ; ret
0x000000000043701a : cmp edx, edi ; setae al ; ret
0x00000000004ae7a4 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x000000000040055f : cmp esi, ecx ; cmovge eax, edx ; jmp 0x400535
0x000000000045925a : cmp esi, ecx ; jb 0x459257 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004b7339 : cmp esi, edi ; call qword ptr [rax]
0x000000000045ece1 : cmp esi, edx ; ja 0x45ecf5 ; ret
0x000000000048fa03 : cmp qword ptr [rsi + 8], rdi ; cmovbe eax, ecx ; ret
0x000000000045f0e1 : cmp r10b, 0x3a ; je 0x45f0a7 ; ret
0x000000000042265a : cmp r11b, r14b ; ret
0x0000000000437095 : cmp r11d, 0xa ; je 0x4370a2 ; ret
0x0000000000433ff5 : cmp rax, -0x1000 ; ja 0x43401d ; ret
0x0000000000434044 : cmp rax, -0x1000 ; ja 0x43406d ; ret
0x00000000004341d9 : cmp rax, -0x1000 ; ja 0x43425b ; ret
0x0000000000444a09 : cmp rax, -0x1000 ; ja 0x444a33 ; ret
0x0000000000444ca0 : cmp rax, -0x1000 ; ja 0x444cb3 ; ret
0x000000000045ea35 : cmp rax, -0x1000 ; ja 0x45ea5d ; ret
0x000000000045ea8a : cmp rax, -0x1000 ; ja 0x45eab5 ; ret
0x000000000045ead0 : cmp rax, -0x1000 ; ja 0x45eae3 ; ret
0x000000000045ed37 : cmp rax, -0x1000 ; ja 0x45ed48 ; ret
0x000000000046b06b : cmp rax, 0xfd ; jbe 0x46b07e ; ret
0x000000000045788d : cmp rax, qword ptr [rdx + 0x4c] ; cmovne eax, ecx ; ret
0x000000000040edc8 : cmp rax, rcx ; jae 0x40edf8 ; movzx eax, byte ptr [rax] ; ret
0x000000000046b6b3 : cmp rax, rsi ; je 0x46b6c5 ; ret
0x0000000000467f43 : cmp rcx, qword ptr [rsi + rdi] ; jae 0x467f09 ; xor eax, eax ; ret
0x00000000004257ea : cmp rcx, rax ; jne 0x42581a ; xor eax, eax ; ret
0x000000000040e1a9 : cmp rcx, rsi ; jne 0x40e1a8 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000467f0b : cmp rdx, 0xff ; cmovne rax, rdx ; ret
0x00000000004372a1 : cmp rdx, rax ; jne 0x437286 ; ret
0x000000000041c3bb : cmp rdx, rcx ; jne 0x41c3a6 ; ret
0x000000000041c3ba : cmp rdx, rcx ; jne 0x41c3a7 ; ret
0x0000000000467896 : cmp rdx, rcx ; jne 0x467850 ; mov eax, dword ptr [rdx] ; ret
0x0000000000437019 : cmp rdx, rdi ; setae al ; ret
0x0000000000459259 : cmp rsi, rcx ; jb 0x459258 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000045ece0 : cmp rsi, rdx ; ja 0x45ecf6 ; ret
0x0000000000488ae7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000488de7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000489ce7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041569e : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044fa3a : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret 0xffe0
0x00000000004899e7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x0000000000425269 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00000000004963f4 : cmpsb byte ptr [rsi], byte ptr [rdi] ; clc ; inc dword ptr [rsi - 0xd] ; clc ; jmp rsi
0x0000000000400cda : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400ce1 ; ret
0x000000000041fcf6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004896e7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004893e7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004b5b5c : cmpsb byte ptr [rsi], byte ptr [rdi] ; out -0xb, eax ; jmp qword ptr [rdx]
0x00000000004bcab5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; clc ; in eax, -6 ; jmp qword ptr [rdx]
0x0000000000439834 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sub byte ptr [rax], al ; ret
0x000000000046bbb8 : cqo ; pop r14 ; idiv r9 ; pop r15 ; ret
0x00000000004003ca : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000043421b : cwde ; add cl, byte ptr [rdi] ; ret 0xfc3
0x000000000043907b : cwde ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000046821c : cwde ; add dword ptr [rax], eax ; add al, ch ; jmp 0x4681ec
0x000000000048ecc8 : cwde ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000000000043949b : cwde ; call rcx
0x00000000004b8f19 : cwde ; clc ; call qword ptr [rdx]
0x00000000004961dd : cwde ; clc ; inc dword ptr [rax - 0x66] ; clc ; jmp rax
0x00000000004bbc78 : cwde ; cli ; jmp rsp
0x0000000000436d34 : cwde ; mov rdx, rax ; jmp 0x436d65
0x0000000000436d33 : cwde ; mov rdx, rax ; jmp 0x436d66
0x0000000000436dd2 : cwde ; mov rdx, rax ; jmp 0x436e07
0x0000000000436dd1 : cwde ; mov rdx, rax ; jmp 0x436e08
0x000000000040d3bc : cwde ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x00000000004b6a08 : cwde ; out 0xf5, al ; call rdx
0x000000000040b569 : cwde ; ret
0x0000000000496b89 : cwde ; stc ; call qword ptr [rax]
0x0000000000496bb9 : cwde ; stc ; call rax
0x0000000000496bb5 : cwde ; stc ; inc eax ; cwde ; stc ; call rax
0x0000000000496b8d : cwde ; stc ; jmp qword ptr [rax]
0x0000000000496bbd : cwde ; stc ; jmp rax
0x0000000000496bc1 : cwde ; stc ; push rax ; cwde ; stc ; call qword ptr [rax]
0x00000000004b8531 : cwde ; std ; call rsp
0x0000000000447343 : dec byte ptr [r15] ; xchg eax, esp ; ret 0xd284
0x000000000042e451 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x000000000042e452 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000047705e : dec byte ptr [rax + 0xf] ; ret 0x3949
0x00000000004568fa : dec byte ptr [rax + 0xf] ; ret 0x894c
0x00000000004125ad : dec byte ptr [rax - 0x73] ; ret
0x00000000004636f8 : dec byte ptr [rax - 0x77] ; ret
0x000000000046cdcf : dec byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000447344 : dec byte ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000046b069 : dec dword ptr [r8 - 0x7d] ; clc ; std ; jbe 0x46b080 ; ret
0x000000000048104f : dec dword ptr [rax + 0x21] ; ret 0x948
0x000000000042e592 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x00000000004674a4 : dec dword ptr [rax + 0x29] ; ret 0x35e9
0x000000000048e5a3 : dec dword ptr [rax + 0x29] ; ret 0x8941
0x000000000046bd11 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000482fbe : dec dword ptr [rax + 0x29] ; ret 0x894c
0x000000000043df4b : dec dword ptr [rax + 0x39] ; ret
0x000000000040a915 : dec dword ptr [rax + 0x39] ; ret 0x830f
0x0000000000467456 : dec dword ptr [rax + 0x63] ; ret
0x000000000047d4ea : dec dword ptr [rax + 0x63] ; ret 0x40e9
0x0000000000480230 : dec dword ptr [rax + 0x63] ; ret 0xfae9
0x0000000000468756 : dec dword ptr [rax + 0x69] ; ret
0x0000000000459bb9 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x0000000000476e68 : dec dword ptr [rax + 0xf] ; ret 0x3949
0x0000000000467f0e : dec dword ptr [rax + 0xf] ; ret 0x48c3
0x00000000004079c4 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000040aeda : dec dword ptr [rax + 0xf] ; ret 0xe0ba
0x000000000046630f : dec dword ptr [rax + 1] ; int1 ; call rcx
0x0000000000472b4c : dec dword ptr [rax + 1] ; ret
0x0000000000459fef : dec dword ptr [rax - 0x39] ; ret
0x00000000004343be : dec dword ptr [rax - 0x39] ; ret 0xffc0
0x0000000000483bc6 : dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000004390dc : dec dword ptr [rax - 0x73] ; and qword ptr [rax - 0x77], rcx ; ret 0x894c
0x0000000000402127 : dec dword ptr [rax - 0x73] ; mov ebx, 0x80 ; call rax
0x0000000000455577 : dec dword ptr [rax - 0x75] ; add byte ptr [rsi - 0x77], ah ; or cl, ch ; push rbp ; ret
0x00000000004094c0 : dec dword ptr [rax - 0x75] ; cmp byte ptr [r8 - 0x77], cl ; ret 0x348
0x000000000041530d : dec dword ptr [rax - 0x75] ; je 0x41533f ; sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x0000000000434f2d : dec dword ptr [rax - 0x75] ; jge 0x434f37 ; call rbx
0x00000000004351e0 : dec dword ptr [rax - 0x75] ; jge 0x4351ea ; call rbx
0x00000000004368d7 : dec dword ptr [rax - 0x75] ; jge 0x4368e2 ; call r12
0x0000000000439493 : dec dword ptr [rax - 0x75] ; js 0x4394b9 ; mov qword ptr [rbp - 0x68], rax ; call rcx
0x000000000041c528 : dec dword ptr [rax - 0x77] ; clc ; ret
0x0000000000491bc4 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret
0x000000000041448b : dec dword ptr [rax - 0x77] ; push rsp ; and al, 8 ; call 0x4106f8
0x00000000004018d5 : dec dword ptr [rax - 0x77] ; ret
0x000000000045ecd1 : dec dword ptr [rax - 0x77] ; ret 0x2d77
0x000000000044e0e3 : dec dword ptr [rax - 0x77] ; ret 0x3ae9
0x000000000041470d : dec dword ptr [rax - 0x77] ; ret 0x3d83
0x000000000045ec2e : dec dword ptr [rax - 0x77] ; ret 0x7577
0x00000000004133cd : dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000044d822 : dec dword ptr [rax - 0x77] ; ret 0x858b
0x0000000000444b5c : dec dword ptr [rax - 0x77] ; ret 0x870f
0x0000000000475ded : dec dword ptr [rax - 0x77] ; ret 0x894c
0x0000000000449a77 : dec dword ptr [rax - 0x77] ; ret 0x8d48
0x000000000045dd9f : dec dword ptr [rax - 0x77] ; ret 0xa8e9
0x0000000000416691 : dec dword ptr [rax - 0x77] ; ret 0xcb8
0x000000000045f2dd : dec dword ptr [rax - 0x77] ; ret 0xe75
0x0000000000457180 : dec dword ptr [rax - 0x77] ; ret 0xf40
0x000000000044d63d : dec dword ptr [rax - 0x77] ; ret 0xf4a
0x000000000047d32d : dec dword ptr [rax - 0x77] ; xor cl, ch ; ret 0xfff0
0x0000000000416671 : dec dword ptr [rax - 0x7b] ; xlatb ; je 0x416688 ; pop rbx ; ret
0x000000000046b06a : dec dword ptr [rax - 0x7d] ; clc ; std ; jbe 0x46b07f ; ret
0x0000000000403c3a : dec dword ptr [rax - 0x7d] ; ret
0x000000000043cad9 : dec dword ptr [rax - 0x7d] ; ret 0x4101
0x0000000000449c2e : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000464718 : dec dword ptr [rax - 0x7d] ; ret 0x4808
0x0000000000479f39 : dec dword ptr [rax - 0x7d] ; ret 0x4908
0x000000000045630d : dec dword ptr [rax - 0x7d] ; ret 0xeb02
0x0000000000400ab3 : dec dword ptr [rax - 0x7d] ; ret 0xeb04
0x0000000000470886 : dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x000000000046710f : dec dword ptr [rax - 0x7d] ; ret 0xf01
0x000000000044490a : dec dword ptr [rax - 0x7f] ; ret 0x200
0x0000000000429e10 : dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000045cd78 : dec dword ptr [rbp - 0x77] ; ret 0xc149
0x000000000046b25c : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x48 ; ret
0x000000000045e57e : dec dword ptr [rbx + 4] ; jne 0x45e5a4 ; pop rbx ; ret
0x00000000004b1e13 : dec dword ptr [rbx + rax*8 - 3] ; inc esp ; ret
0x000000000045aa50 : dec dword ptr [rbx - 0x16dfdbbc] ; ret
0x000000000046f810 : dec dword ptr [rbx - 0x1d77b] ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x00000000004b1cbb : dec dword ptr [rbx - 0x4e] ; std ; dec eax ; mov dl, 0xfd ; call qword ptr [rax]
0x000000000044a077 : dec dword ptr [rbx - 0x54773] ; dec dword ptr [rcx + 0x39] ; ret 0x850f
0x000000000045d62b : dec dword ptr [rcx + 0x29] ; ret
0x000000000044707c : dec dword ptr [rcx + 0x39] ; ret 0x6275
0x0000000000448bcb : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x0000000000465e5f : dec dword ptr [rcx + 0xf] ; adc byte ptr [r8 - 0x77], r9b ; ret 0x23e8
0x000000000040f8e1 : dec dword ptr [rcx + rcx*4 - 0x40] ; nop dword ptr [rax] ; ret
0x000000000047124d : dec dword ptr [rcx + rcx*4 - 1] ; call 0x40d4a6
0x000000000044d4d6 : dec dword ptr [rcx - 0x39] ; ret
0x000000000046a6ed : dec dword ptr [rcx - 0x3dd63c30] ; mov eax, edx ; ret
0x0000000000465e32 : dec dword ptr [rcx - 0x75] ; and al, 0x10 ; add rax, qword ptr [rbx] ; call rax
0x0000000000434d65 : dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004351ee : dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000434df8 : dec dword ptr [rcx - 0x75] ; jge 0x434e02 ; call rbx
0x0000000000434f1f : dec dword ptr [rcx - 0x75] ; jge 0x434f29 ; call rbx
0x0000000000435062 : dec dword ptr [rcx - 0x75] ; jge 0x43506c ; call rbx
0x00000000004351d2 : dec dword ptr [rcx - 0x75] ; jge 0x4351dc ; call rbx
0x000000000048e9a1 : dec dword ptr [rcx - 0x77] ; ret
0x000000000046fde2 : dec dword ptr [rcx - 0x77] ; ret 0x6e9
0x000000000044904a : dec dword ptr [rcx - 0x77] ; ret 0x840f
0x0000000000448aee : dec dword ptr [rcx - 0x77] ; ret 0x85c7
0x000000000046f0d7 : dec dword ptr [rcx - 0x77] ; ret 0x8b48
0x0000000000448d7b : dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000474fa5 : dec dword ptr [rcx - 0x77] ; ret 0x92e9
0x000000000043d91c : dec dword ptr [rcx - 0x7d] ; ret
0x0000000000434189 : dec dword ptr [rdi] ; add dword ptr [rax], 0x46 ; add byte ptr [rax], al ; ret
0x00000000004340c9 : dec dword ptr [rdi] ; add eax, 0x46 ; add byte ptr [rax], al ; ret
0x0000000000436fa9 : dec dword ptr [rdi] ; and eax, 0x17 ; add byte ptr [rax], al ; ret
0x0000000000456532 : dec dword ptr [rdi] ; mov dh, 0x53 ; or al, 0xf6 ; ret 0x7404
0x000000000043b85b : dec dword ptr [rdi] ; ret 0x41c3
0x000000000040f488 : dec dword ptr [rdi] ; ret 0x4855
0x000000000044c052 : dec dword ptr [rdi] ; test ah, bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffe8
0x0000000000474938 : dec dword ptr [rdi] ; test byte ptr [rsi], bl ; ret 0xffff
0x000000000047546f : dec dword ptr [rdi] ; test dword ptr [rcx], ebp ; ret
0x000000000047350c : dec dword ptr [rdi] ; test dword ptr [rdx], ebp ; mov ah, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x00000000004325e0 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000473c5c : dec dword ptr [rdi] ; xchg dword ptr [rbx - 0x77000000], esp ; ret 0x348
0x0000000000473a7f : dec dword ptr [rdi] ; xchg dword ptr [rdi - 0x77000000], esp ; ret 0x348
0x0000000000403e94 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x81e9
0x0000000000403b1a : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x000000000046458e : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xdaf7
0x000000000045b719 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xf748
0x0000000000411c77 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xa0e9
0x00000000004013ab : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xc031
0x0000000000475b5c : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000434415 : dec dword ptr [rdi] ; xor dword ptr [rbx + rax*2], 0 ; ret
0x0000000000434095 : dec dword ptr [rdi] ; xor esp, 0x46 ; add byte ptr [rax], al ; ret
0x00000000004507d5 : dec dword ptr [rdx] ; jne 0x4507e0 ; ret
0x0000000000493756 : dec dword ptr [rip + 0x22f104] ; jne 0x493785 ; ret
0x00000000004b22bf : dec dword ptr [rsp + rsi*8 - 3] ; inc esp ; std ; jmp rax
0x00000000004b1cbf : dec eax ; mov dl, 0xfd ; call qword ptr [rax]
0x000000000046ce6d : dec ecx ; ret
0x000000000042e591 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x000000000043d965 : dec qword ptr [rax - 0x7d] ; ret 0x4101
0x000000000043d91b : dec qword ptr [rcx - 0x7d] ; ret
0x000000000048dedd : div byte ptr [rax + rbx - 0x80] ; cli ; adc byte ptr [rdi + rcx + 0x44], cl ; ret
0x00000000004596c2 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x00000000004427e1 : div byte ptr [rbp + rax*8 + 0x5b] ; ret
0x00000000004b6025 : div ch ; jmp qword ptr [rdx]
0x0000000000457155 : div ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000475e00 : div ebp ; pop rbp ; pop r12 ; ret
0x000000000044e5ad : div ecx ; add r8d, eax ; mov eax, r8d ; ret
0x00000000004331ae : div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000004b25bd : div esp ; jmp qword ptr [rdx]
0x0000000000457154 : div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000475dff : div rbp ; pop rbp ; pop r12 ; ret
0x0000000000400567 : enter -0x1401, -0x3a ; ret
0x0000000000432754 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000042e44e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000042e58e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000469cc5 : enter -0x74b2, 4 ; ret 0xf641
0x00000000004b5b56 : enter -0x9f4, -1 ; sbb al, 0xd ; cmpsb byte ptr [rsi], byte ptr [rdi] ; out -0xb, eax ; jmp qword ptr [rdx]
0x00000000004601e5 : enter -2, -1 ; call 0x41c406
0x0000000000434e44 : enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x00000000004b225d : enter -3, -0x20 ; fscale ; jmp qword ptr [rax]
0x0000000000475321 : enter -3, -1 ; add dword ptr [rcx - 0x77], ecx ; ret 0x12e9
0x000000000040edca : enter 0x2373, 0xf ; mov dh, 0 ; ret
0x000000000045afaa : enter 0x31c3, -0x40 ; nop ; ret
0x000000000041850d : enter 0x31c3, -0x40 ; ret
0x0000000000400ab2 : enter 0x48ff, -0x7d ; ret 0xeb04
0x0000000000478929 : enter 0x4c20, 0x39 ; ret 0x8188
0x00000000004019ea : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; ret
0x00000000004aef5c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000425316 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000416f31 : enter 0xf66, -0x15 ; ret
0x000000000040d307 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000040d8b3 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000407f49 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000437436 : fadd dword ptr [rax] ; leave ; ret
0x000000000040bdeb : fadd dword ptr [rcx + 0x5d] ; ret
0x0000000000438662 : fadd dword ptr [rcx] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000475c9a : fadd qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x00000000004b693c : fadd qword ptr [rbp] ; add byte ptr [rax - 0x1d], dl ; cmc ; jmp rbx
0x000000000045e870 : fadd qword ptr [rcx] ; sti ; dec dword ptr [rax + 0x39] ; ret
0x0000000000476c57 : fadd st(1) ; call 0xffffffff8a099582
0x000000000047768d : fadd st(1) ; call 0xffffffff8a099fb8
0x00000000004b1e10 : fadd st(3), st(0) ; std ; dec dword ptr [rbx + rax*8 - 3] ; inc esp ; ret
0x0000000000424e61 : fbld dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004ae598 : fcmovb st(0), st(3) ; ret
0x00000000004b793c : fcom qword ptr [rbp] ; add al, dl ; sal bh, cl ; call qword ptr [rdi]
0x000000000040d885 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000408615 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000004086ea : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000434b5f : fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000414a64 : fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00000000004af319 : fcomp dword ptr [rdx + 0x21] ; ret
0x00000000004ad580 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x0000000000433280 : fcompi st(3) ; ret
0x00000000004b59f5 : fcompi st(5) ; jmp qword ptr [rdx]
0x000000000047200d : fcos ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x0000000000471311 : fcos ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x00000000004b89d8 : fdiv dword ptr [rdx] ; clc ; jmp rax
0x00000000004bdbb1 : fdiv st(3), st(0) ; call qword ptr [rax]
0x00000000004bdbc9 : fdiv st(3), st(0) ; call qword ptr [rdx]
0x0000000000496331 : fdivr st(0) ; call rax
0x00000000004ac8d5 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000432758 : fdivr st(7) ; ret
0x00000000004079c2 : fiadd dword ptr [rbp + 0x450f48ff] ; ret 0x8348
0x0000000000434327 : fiadd dword ptr [rbx + 0x210247c] ; cmove eax, edx ; jmp 0x4342f3
0x0000000000434217 : fiadd dword ptr [rbx + 0x298247c] ; cmove eax, edx ; ret
0x0000000000435559 : ficomp word ptr [rbx + 0x5d] ; xor eax, eax ; pop r12 ; ret
0x00000000004af166 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x0000000000438575 : fidivr dword ptr [rax + 1] ; ret
0x000000000041311a : fild qword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x58b
0x000000000044e598 : fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x000000000040fbd9 : fimul dword ptr [rax + 0x29] ; ret 0x8348
0x000000000047d9a5 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x000000000041c552 : fimul dword ptr [rax - 9] ; ret 0xfff8
0x000000000046b8ff : fimul dword ptr [rcx] ; ret 0xb70f
0x0000000000481e96 : fimul word ptr [rax - 0x77] ; ret
0x0000000000440a97 : fimul word ptr [rax - 0x77] ; ret 0x8948
0x000000000044e007 : fimul word ptr [rax - 0x7d] ; ret
0x000000000046cf9e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x46cff8
0x000000000047b78e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x47b7e8
0x00000000004b66fb : fimul word ptr [rdx] ; ret
0x000000000040d375 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000040d4f5 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x000000000045cd08 : fisttp dword ptr [rax + 0x39] ; ret 0x5c89
0x0000000000407ce4 : fisttp dword ptr [rax - 0x73] ; add r9b, byte ptr [r9 + rcx*4 - 0x3e] ; jmp 0x407d08
0x0000000000491331 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000046c451 : fisttp dword ptr [rax - 0x77] ; ret
0x0000000000401832 : fisttp dword ptr [rax - 0x77] ; ret 0x894c
0x000000000043d952 : fisttp dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000483450 : fisttp dword ptr [rcx - 0x77] ; fld dword ptr [rcx - 0x77] ; ret
0x000000000046c46b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x000000000047357f : fisttp dword ptr [rdi] ; test byte ptr [rax + rax - 0x76b40000], ah ; ret 0x894c
0x000000000047c6b6 : fisttp qword ptr [rax - 0x77] ; ret
0x00000000004728ce : fisttp qword ptr [rcx - 0x7c09ce35] ; ret
0x00000000004bb2fc : fisttp qword ptr [rdx + rdi*8] ; jmp qword ptr [rdx]
0x0000000000435aa7 : fisttp qword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000434809 : fisttp word ptr [rax - 0x77] ; ret 0x14c
0x0000000000468fe7 : fisttp word ptr [rax - 0x77] ; ret 0x8948
0x000000000046c4ef : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000435c65 : fisttp word ptr [rbx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000046592a : fisttp word ptr [rcx + 0xf] ; adc byte ptr [r8 - 0x77], r9b ; ret 0x58e8
0x000000000042102d : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000045ecb1 : fisub dword ptr [rcx + rcx*4 + 0x10] ; or eax, 0xffffffff ; ret
0x00000000004753da : fisub dword ptr [rdi - 0x38b70001] ; ret 0xffc0
0x0000000000425231 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000424f31 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000483453 : fld dword ptr [rcx - 0x77] ; ret
0x0000000000467017 : fld qword ptr [rax + rax] ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000478a75 : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004ad5c1 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x000000000048cc2a : fld xword ptr [rsp - 0x18] ; ret
0x0000000000444939 : fldcw word ptr [rsp - 2] ; ret
0x000000000041bb59 : fldenv dword ptr [rsi + 0xf] ; je 0x41bbb6 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000004229d7 : fldenv dword ptr [rsi + 0xf] ; je 0x422a34 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000004252b1 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041ba51 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000046d044 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000407d65 : fmul dword ptr [rax + 0x39] ; ret
0x000000000040a40c : fmul dword ptr [rax + 0xf] ; ret
0x0000000000410110 : fmul dword ptr [rax + 3] ; add byte ptr [r8 + 0x39], r9b ; ret 0xd575
0x000000000044c1f1 : fmul dword ptr [rax - 0x39] ; ret 0xffe8
0x0000000000466718 : fmul dword ptr [rax - 0x7d] ; ret
0x000000000045d5f4 : fmul dword ptr [rcx + 0x39] ; ret
0x0000000000471a45 : fmul dword ptr [rcx - 0x77] ; ret
0x00000000004b57f6 : fmul dword ptr [rdi] ; idiv bh ; sbb al, 0xd ; jmp 0x234b4dcc
0x000000000046ba8a : fmul qword ptr [rax + 0xf] ; ret 0x8948
0x000000000046a4ed : fmul qword ptr [rax - 0x75] ; sbb al, 0x24 ; add rsp, 0x30 ; ret
0x00000000004b2f3c : fmul qword ptr [rbx] ; add byte ptr [rax], al ; xor byte ptr [rsi - 0xb], al ; call qword ptr [rbx]
0x00000000004172c9 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000041cdff : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000004b96e4 : fmul st(1), st(0) ; clc ; jmp qword ptr [rdx]
0x0000000000481458 : fmulp st(1) ; ret
0x000000000040eb27 : fnstcw word ptr [rbx] ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004069f5 : fpatan ; ret
0x0000000000425031 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b2261 : fscale ; jmp qword ptr [rax]
0x00000000004ad2a7 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x0000000000422cee : fstp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004ad620 : fstp st(0) ; ret 0xde5d
0x0000000000434270 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x000000000043401c : fsub dword ptr [rcx + rcx*4 + 2] ; or rax, 0xffffffffffffffff ; ret
0x0000000000425331 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042d2c4 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000432b6b : fsub qword ptr [rsi + 0xf] ; jmp 0x432b37
0x0000000000425131 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041704c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000471112 : fsub st(1), st(0) ; int1 ; ret 0xffff
0x0000000000434e42 : fsubp st(0) ; enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x00000000004b513c : fsubr qword ptr [rip - 0x5c400000] ; cmc ; call qword ptr [rdx]
0x00000000004af2f8 : fucom st(5) ; loop 0x4af351 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000040be96 : fucompi st(0) ; hlt ; ret
0x0000000000491bc7 : fucompi st(0) ; ret
0x0000000000468748 : fucompi st(0) ; ret 0xffe4
0x00000000004074f6 : fucompi st(0) ; ret 2
0x0000000000434098 : hlt ; add byte ptr [rax], r8b ; ret
0x000000000045e868 : hlt ; add ebx, edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000004963c1 : hlt ; clc ; call qword ptr [rsi]
0x0000000000496441 : hlt ; clc ; jmp rax
0x00000000004ad6a8 : hlt ; jmp 0x4ad67d
0x00000000004b25be : hlt ; jmp qword ptr [rdx]
0x00000000004bd4f2 : hlt ; jmp qword ptr [rsi]
0x000000000042a27a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004278ce : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000432263 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000400fa0 : hlt ; pop rbp ; mov edi, 0x6c1c30 ; jmp rax
0x000000000040be98 : hlt ; ret
0x00000000004bef54 : hlt ; retf ; add byte ptr [rax], al ; clc ; and bh, ch ; call qword ptr [rbx]
0x00000000004b22c1 : hlt ; std ; inc esp ; std ; jmp rax
0x00000000004ad7e3 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000432267 : hlt ; sub eax, edx ; ret
0x000000000045d629 : idiv bh ; dec dword ptr [rcx + 0x29] ; ret
0x000000000048e99f : idiv bh ; dec dword ptr [rcx - 0x77] ; ret
0x000000000046ce72 : idiv bh ; dec ecx ; ret
0x00000000004b56d8 : idiv bh ; sbb al, 0xd ; add al, 0xbd ; cmc ; jmp qword ptr [rdx]
0x00000000004b52e8 : idiv bh ; sbb al, 0xd ; cld ; stosb byte ptr [rdi], al ; cmc ; jmp qword ptr [rdx]
0x00000000004b5b58 : idiv bh ; sbb al, 0xd ; cmpsb byte ptr [rsi], byte ptr [rdi] ; out -0xb, eax ; jmp qword ptr [rdx]
0x00000000004b54e0 : idiv bh ; sbb al, 0xd ; insd dword ptr [rdi], dx ; scasd eax, dword ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x00000000004b5768 : idiv bh ; sbb al, 0xd ; jbe 0x4b5737 ; cmc ; jmp qword ptr [rdx]
0x00000000004b6068 : idiv bh ; sbb al, 0xd ; jbe 0x4b606e ; cmc ; jmp qword ptr [rdx]
0x00000000004b5378 : idiv bh ; sbb al, 0xd ; je 0x4b5331 ; cmc ; jmp qword ptr [rdx]
0x00000000004b5690 : idiv bh ; sbb al, 0xd ; jg 0x4b5659 ; cmc ; jmp qword ptr [rdx]
0x00000000004b57f8 : idiv bh ; sbb al, 0xd ; jmp 0x234b4dca
0x00000000004b5f48 : idiv bh ; sbb al, 0xd ; jmp 0x234b5546
0x00000000004b5d08 : idiv bh ; sbb al, 0xd ; jmp 0x4b5d0c
0x00000000004b5ba0 : idiv bh ; sbb al, 0xd ; jne 0x4b5b94 ; cmc ; jmp qword ptr [rdx]
0x00000000004b5fd8 : idiv bh ; sbb al, 0xd ; js 0x4b5fd5 ; cmc ; jmp qword ptr [rdx]
0x00000000004b5be8 : idiv bh ; sbb al, 0xd ; mov cl, 0xe7 ; cmc ; jmp qword ptr [rdx]
0x00000000004b61d0 : idiv bh ; sbb al, 0xd ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; cmc ; jmp qword ptr [rdx]
0x00000000004b60f8 : idiv bh ; sbb al, 0xd ; or ah, bh ; cmc ; jmp qword ptr [rdx]
0x00000000004b5600 : idiv bh ; sbb al, 0xd ; or al, 0xaf ; cmc ; jmp qword ptr [rdx]
0x00000000004b59a8 : idiv bh ; sbb al, 0xd ; or al, 0xe0 ; cmc ; jmp qword ptr [rdx]
0x00000000004b57b0 : idiv bh ; sbb al, 0xd ; pop rax ; ret 0xfff5
0x00000000004b60b0 : idiv bh ; sbb al, 0xd ; push rax ; sti ; cmc ; jmp qword ptr [rdx]
0x00000000004b5450 : idiv bh ; sbb al, 0xd ; ret
0x00000000004b5d50 : idiv bh ; sbb al, 0xd ; retf -0xa17 ; jmp qword ptr [rdx]
0x00000000004b5a38 : idiv bh ; sbb al, 0xd ; shl esp, -0xb ; jmp qword ptr [rdx]
0x00000000004b5eb8 : idiv bh ; sbb al, 0xd ; shr ch, cl ; cmc ; jmp qword ptr [rdx]
0x00000000004b5f00 : idiv bh ; sbb al, 0xd ; stc ; in eax, dx ; cmc ; jmp qword ptr [rdx]
0x00000000004b5408 : idiv bh ; sbb al, 0xd ; stc ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rdx]
0x00000000004b6188 : idiv bh ; sbb al, 0xd ; std ; cld ; cmc ; jmp qword ptr [rdx]
0x00000000004b6140 : idiv bh ; sbb al, 0xd ; std ; cmc ; jmp qword ptr [rdx]
0x00000000004b5cc0 : idiv bh ; sbb al, 0xd ; sub al, ch ; cmc ; jmp qword ptr [rdx]
0x00000000004b5b10 : idiv bh ; sbb al, 0xd ; test al, 0xe4 ; cmc ; jmp qword ptr [rdx]
0x00000000004b5ac8 : idiv bh ; sbb al, 0xd ; wait ; in al, -0xb ; jmp qword ptr [rdx]
0x00000000004b5a80 : idiv bh ; sbb al, 0xd ; xchg eax, ebp ; in al, -0xb ; jmp qword ptr [rdx]
0x00000000004b5c78 : idiv bh ; sbb al, 0xd ; xchg edi, esp ; cmc ; jmp qword ptr [rdx]
0x000000000043b856 : idiv byte ptr [rax - 1] ; cmovns eax, edx ; ret
0x0000000000401816 : idiv byte ptr [rdi + 1] ; call rax
0x00000000004bcfa1 : idiv dl ; jmp rbx
0x00000000004965c5 : idiv eax ; jmp qword ptr [rax]
0x000000000046bbbd : idiv ecx ; pop r15 ; ret
0x000000000046ce6b : idiv edi ; dec ecx ; ret
0x000000000046bbbc : idiv r9 ; pop r15 ; ret
0x000000000047ffa5 : imul al ; push rbp ; ret
0x000000000046c7e7 : imul eax ; ret
0x000000000043c1e8 : imul eax ; ret 0x2ee
0x000000000044b448 : imul eax ; ret 0xfc91
0x0000000000451156 : imul eax ; test dword ptr fs:[rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb848
0x00000000004b8f15 : imul eax, dword ptr [rax], 0 ; pop rax ; cwde ; clc ; call qword ptr [rdx]
0x0000000000430dc1 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x000000000040fa55 : imul ebx, dword ptr [rax], 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004555e6 : imul ecx, dword ptr [rdx], -0x18 ; ret
0x00000000004b7f02 : imul ecx, dword ptr [rsi], 0x10 ; add dword ptr [rdx], 0x59 ; ret
0x000000000045b39e : imul esi, edx ; add eax, esi ; ret
0x00000000004b83dc : imul esp, dword ptr [rcx], -8 ; jmp qword ptr [rdx]
0x000000000043023c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x00000000004135c8 : in al, -0x18 ; ret 0xffcb
0x000000000048e35b : in al, -0x7d ; call qword ptr [rcx]
0x00000000004b5a3d : in al, -0xb ; jmp qword ptr [rdx]
0x000000000042a25a : in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004368d5 : in al, -1 ; dec dword ptr [rax - 0x75] ; jge 0x4368e4 ; call r12
0x00000000004b5215 : in al, -3 ; jmp qword ptr [rdx]
0x00000000004001c6 : in al, 0x61 ; adc al, 0xd7 ; and ch, ah ; int1 ; pop rdx ; ret 0xb50f
0x00000000004b9344 : in al, 0x6f ; add byte ptr [rax], al ; pop rax ; mov dh, 0xf8 ; jmp qword ptr [rsi]
0x00000000004193ec : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x00000000004bbc4f : in al, 0xa ; ret
0x0000000000435b40 : in al, 0xc ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000408383 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000404954 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x326
0x0000000000418c90 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000496369 : in al, dx ; clc ; call qword ptr [rdx]
0x00000000004963cd : in al, dx ; clc ; jmp rsi
0x000000000046cae8 : in al, dx ; cmp dh, dh ; ret 0x7401
0x000000000048ecc7 : in al, dx ; cwde ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000000000048cc29 : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x000000000045eaf6 : in al, dx ; jo 0x45eaf2 ; ret 0x4840
0x00000000004bb24c : in al, dx ; mov es, word ptr [rax] ; add byte ptr [rax - 3], dh ; stc ; jmp qword ptr [rdx]
0x00000000004278ca : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042a65a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004594f7 : in al, dx ; or al, ch ; ret 1
0x00000000004150ba : in al, dx ; or byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000413bfa : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000045abf6 : in al, dx ; sbb byte ptr [rbx + 0x48], 0x29 ; call 0xffffffffc3a1ed66
0x000000000045a91f : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004b87de : in al, dx ; sub eax, 0xd1cfff8 ; and al, 0xf8 ; jmp qword ptr [rdx]
0x00000000004ba84c : in al, dx ; test byte ptr [rax], al ; add byte ptr [rax - 0x30], dh ; stc ; jmp rbx
0x00000000004aed3e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4aecd1 ; ret 0x48f
0x00000000004aed3d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4aecd2 ; ret 0x48f
0x0000000000408ae5 : in al, dx ; xor byte ptr [rcx - 0x77], cl ; ret 0xb941
0x00000000004af2f9 : in eax, -0x1e ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000042a2da : in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000421f0a : in eax, -0xd ; ret
0x00000000004001cb : in eax, -0xf ; pop rdx ; ret 0xb50f
0x000000000046f2a9 : in eax, -1 ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x0000000000470884 : in eax, -1 ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x00000000004ae7c1 : in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004b264c : in eax, -6 ; hlt ; jmp qword ptr [rdx]
0x00000000004bcab9 : in eax, -6 ; jmp qword ptr [rdx]
0x000000000040c3e2 : in eax, 0 ; adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b56d6 : in eax, 0x10 ; idiv bh ; sbb al, 0xd ; add al, 0xbd ; cmc ; jmp qword ptr [rdx]
0x00000000004ad443 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000041c47a : in eax, 0x48 ; mov eax, edi ; ret
0x00000000004467f2 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000004b3574 : in eax, 0x51 ; cmc ; jmp qword ptr [rdx]
0x00000000004ac6d9 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x000000000045a843 : in eax, 0xf ; je 0x45a868 ; add rax, 2 ; ret
0x00000000004b5ebd : in eax, dx ; cmc ; jmp qword ptr [rdx]
0x0000000000491bcf : in eax, dx ; jne 0x491bb1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000432a82 : in eax, dx ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000004276da : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042a6da : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000487cf0 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000479b32 : in eax, dx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000491db2 : in eax, dx ; pop rbx ; ret
0x000000000040d1b2 : in eax, dx ; ret
0x0000000000444807 : in eax, dx ; shl byte ptr [rdi], cl ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x0000000000432bd2 : in eax, dx ; sub rax, 1 ; ret
0x000000000041c3e5 : inc bl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00000000004965a7 : inc dword ptr [rax + 0x10] ; stc ; jmp qword ptr [rax]
0x000000000049652b : inc dword ptr [rax + 0x13] ; stc ; jmp qword ptr [rax]
0x00000000004960c7 : inc dword ptr [rax + 0x27] ; clc ; inc dword ptr [rax] ; sub al, bh ; call rax
0x00000000004960db : inc dword ptr [rax + 0x2b] ; clc ; call qword ptr [rax]
0x000000000049666b : inc dword ptr [rax + 0x44] ; stc ; call rax
0x0000000000496843 : inc dword ptr [rax + 0x48] ; stc ; call rax
0x000000000049613b : inc dword ptr [rax + 0x50fff810] ; clc ; call rax
0x00000000004964bf : inc dword ptr [rax + 0xe] ; stc ; inc dword ptr [rax] ; adc cl, bh ; jmp rax
0x0000000000496543 : inc dword ptr [rax + 0xf] ; stc ; jmp qword ptr [rax]
0x00000000004965ef : inc dword ptr [rax + 6] ; stc ; call qword ptr [rax - 0x1f0006f9]
0x0000000000451706 : inc dword ptr [rax - 0x10b143] ; jmp qword ptr [rax]
0x0000000000496203 : inc dword ptr [rax - 0x2f000757] ; stosb byte ptr [rdi], al ; clc ; jmp qword ptr [rax]
0x0000000000496233 : inc dword ptr [rax - 0x47] ; clc ; call qword ptr [rax + 0x20fff8ba]
0x0000000000447361 : inc dword ptr [rax - 0x4dd43] ; jmp qword ptr [rax]
0x0000000000447dc6 : inc dword ptr [rax - 0x4df43] ; jmp qword ptr [rax]
0x00000000004961df : inc dword ptr [rax - 0x66] ; clc ; jmp rax
0x0000000000496603 : inc dword ptr [rax - 8] ; clc ; call qword ptr [rax - 0x1f000707]
0x00000000004964a7 : inc dword ptr [rax] ; adc bh, cl ; jmp rax
0x00000000004964c3 : inc dword ptr [rax] ; adc cl, bh ; jmp rax
0x000000000049654b : inc dword ptr [rax] ; adc edi, ecx ; jmp rax
0x00000000004732b4 : inc dword ptr [rax] ; add byte ptr [rax], al ; add al, ch ; ret 0xfe77
0x0000000000454ca4 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x22e9
0x0000000000453e25 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0xa1e9
0x0000000000425847 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000496a73 : inc dword ptr [rax] ; cmp ecx, edi ; push qword ptr [rax + 0x38] ; stc ; jmp rax
0x0000000000496b87 : inc dword ptr [rax] ; cwde ; stc ; call qword ptr [rax]
0x0000000000471528 : inc dword ptr [rax] ; jmp 0x46d80c
0x000000000049625b : inc dword ptr [rax] ; jns 0x49625b ; call qword ptr [rax]
0x0000000000496c43 : inc dword ptr [rax] ; lahf ; stc ; jmp qword ptr [rax]
0x00000000004961f7 : inc dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; clc ; call rax
0x0000000000496c1b : inc dword ptr [rax] ; sahf ; stc ; call qword ptr [rax]
0x0000000000496873 : inc dword ptr [rax] ; stc ; call qword ptr [rax + 0x20fff942]
0x000000000049665b : inc dword ptr [rax] ; stc ; call qword ptr [rax + 0x20fff945]
0x00000000004960cb : inc dword ptr [rax] ; sub al, bh ; call rax
0x0000000000464fc9 : inc dword ptr [rbp + 0x5b0278c0] ; ret
0x00000000004967df : inc dword ptr [rbp + rax*2 - 7] ; call rsp
0x0000000000403e90 : inc dword ptr [rbx + 0xfff0878] ; xchg eax, ebp ; ret 0x81e9
0x0000000000450f15 : inc dword ptr [rbx - 0x110b43] ; jmp qword ptr [rax]
0x0000000000412b8e : inc dword ptr [rbx - 0x73] ; sub eax, 0x448d48fe ; ret
0x00000000004627a1 : inc dword ptr [rbx - 0x76be0008] ; ret 0x5b74
0x00000000004624d7 : inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x00000000004628f7 : inc dword ptr [rbx - 0x76be0008] ; ret 0x850f
0x00000000004625ea : inc dword ptr [rbx - 0x76be0008] ; ret 0x940f
0x0000000000456667 : inc dword ptr [rbx - 0x7bf09608] ; ret 0xfffe
0x000000000044b17c : inc dword ptr [rbx - 0x7bf0fe40] ; pop rdi ; ret
0x00000000004431a4 : inc dword ptr [rbx - 0x7cb7fe40] ; ret 0x8308
0x00000000004331c1 : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000004330df : inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004527ef : inc dword ptr [rcx + 0x29] ; ret 0x3945
0x000000000045125d : inc dword ptr [rcx + 0x39] ; ret
0x0000000000409359 : inc dword ptr [rcx + 0x5f] ; ret
0x000000000040bf33 : inc dword ptr [rcx + 0xf] ; les r11d, ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000046a6b0 : inc dword ptr [rcx + rcx*4 - 0x3e] ; sub edx, ecx ; mov eax, edx ; ret
0x0000000000469cc2 : inc dword ptr [rcx - 0x77] ; enter -0x74b2, 4 ; ret 0xf641
0x0000000000462862 : inc dword ptr [rcx - 0x77] ; ret 0x3e9
0x00000000004627a4 : inc dword ptr [rcx - 0x77] ; ret 0x5b74
0x00000000004624da : inc dword ptr [rcx - 0x77] ; ret 0x840f
0x00000000004628fa : inc dword ptr [rcx - 0x77] ; ret 0x850f
0x00000000004625ed : inc dword ptr [rcx - 0x77] ; ret 0x940f
0x000000000044cc1f : inc dword ptr [rcx - 0x77] ; sahf ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000440782 : inc dword ptr [rcx - 0x78] ; add rcx, qword ptr [r9 + 0x39] ; ret
0x00000000004bf178 : inc dword ptr [rcx] ; or ebp, edx ; add dword ptr [rbx], eax ; ret
0x000000000046265a : inc dword ptr [rdi + rcx - 0x4a] ; je 0x46268d ; sub byte ptr [rcx - 0x77], al ; ret 0x8341
0x000000000047b656 : inc dword ptr [rdx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000496717 : inc dword ptr [rdx + 0x46] ; stc ; call rdx
0x0000000000496363 : inc dword ptr [rdx - 0x15] ; clc ; call qword ptr [rdx]
0x0000000000496707 : inc dword ptr [rdx] ; stc ; call qword ptr [rdx + 0x22fff947]
0x000000000042180d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000004966b3 : inc dword ptr [rsi + 0x43] ; stc ; call rsi
0x00000000004963f7 : inc dword ptr [rsi - 0xd] ; clc ; jmp rsi
0x00000000004966a3 : inc dword ptr [rsi] ; stc ; call qword ptr [rsi + 0x26fff944]
0x0000000000496623 : inc eax ; add bh, cl ; call qword ptr [rax]
0x0000000000496bb7 : inc eax ; cwde ; stc ; call rax
0x00000000004b225b : inc eax ; enter -3, -0x20 ; fscale ; jmp qword ptr [rax]
0x000000000049624b : inc eax ; jo 0x49624b ; call rax
0x0000000000496c5b : inc eax ; lahf ; stc ; jmp rax
0x0000000000496c0f : inc eax ; popfq ; stc ; call rax
0x0000000000496c37 : inc eax ; sahf ; stc ; jmp rax
0x0000000000496213 : inc eax ; scasb al, byte ptr [rdi] ; clc ; call qword ptr [rax]
0x00000000004965cf : inc eax ; sti ; clc ; call qword ptr [rax]
0x000000000045789c : inc ebx ; nop ; xor eax, eax ; ret
0x0000000000432759 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004b1e17 : inc esp ; ret
0x00000000004b22c3 : inc esp ; std ; jmp rax
0x0000000000469cc1 : inc qword ptr [rcx - 0x77] ; enter -0x74b2, 4 ; ret 0xf641
0x0000000000440781 : inc qword ptr [rcx - 0x78] ; add rcx, qword ptr [r9 + 0x39] ; ret
0x000000000040eb04 : insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; add bl, dh ; ret
0x0000000000469ffe : insb byte ptr [rdi], dx ; add bh, bh ; loopne 0x46a063 ; ret
0x0000000000402777 : insb byte ptr [rdi], dx ; add bh, bh ; sar dword ptr [rdi + 0x6c20c0], cl ; call rbx
0x0000000000464a75 : insb byte ptr [rdi], dx ; add byte ptr [rbx + 0x5d], bl ; jmp rax
0x0000000000412928 : insb byte ptr [rdi], dx ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x0000000000413efa : insb byte ptr [rdi], dx ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x948
0x000000000048cc2b : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x000000000044493a : insb byte ptr [rdi], dx ; and al, 0xfe ; ret
0x00000000004b3bd5 : insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rdx]
0x00000000004af2fe : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004b92cc : insb byte ptr [rdi], dx ; outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; mov al, 0xb5 ; clc ; call qword ptr [rcx]
0x00000000004b1e28 : insb byte ptr [rdi], dx ; ret
0x00000000004b9f7c : insb byte ptr [rdi], dx ; stc ; jmp qword ptr [rdx]
0x0000000000487570 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043316c : insd dword ptr [rdi], dx ; add byte ptr [r8 + 0x10], dil ; pop rbx ; ret
0x0000000000488470 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045a285 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000047abe6 : insd dword ptr [rdi], dx ; mov al, 0xe8 ; ret
0x00000000004af2ff : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004ad6ad : insd dword ptr [rdi], dx ; ret 0xb9b9
0x00000000004b54e4 : insd dword ptr [rdi], dx ; scasd eax, dword ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x00000000004ae5bf : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004ae787 : int 0x80
0x000000000046b96d : int 0xff
0x00000000004bb33e : int1 ; adc eax, 0xd1cfffa ; stosb byte ptr [rdi], al ; or al, 0xfa ; jmp qword ptr [rdx]
0x000000000044e5ae : int1 ; add r8d, eax ; mov eax, r8d ; ret
0x000000000041c24e : int1 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000493759 : int1 ; and al, byte ptr [rax] ; jne 0x493782 ; ret
0x0000000000466312 : int1 ; call rcx
0x00000000004963ed : int1 ; clc ; call qword ptr [rsi]
0x000000000049646d : int1 ; clc ; jmp rax
0x0000000000496471 : int1 ; clc ; push qword ptr [rax - 0xe] ; clc ; call qword ptr [rax]
0x000000000040e1ab : int1 ; jne 0x40e1a6 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000045ae6b : int1 ; lea rsi, qword ptr [rsp + 0x30] ; mov rdi, r12 ; call rbx
0x0000000000416656 : int1 ; mov eax, 0x16 ; je 0x416668 ; ret
0x000000000042a0cb : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000427e9f : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000432233 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000004331af : int1 ; pop rbx ; mov eax, eax ; ret
0x0000000000437042 : int1 ; pop rdx ; pop r10 ; ret
0x00000000004001cc : int1 ; pop rdx ; ret 0xb50f
0x00000000004aecd6 : int1 ; ret 0x5803
0x0000000000471114 : int1 ; ret 0xffff
0x0000000000432237 : int1 ; sub eax, edx ; ret
0x00000000004b41ac : int1 ; xchg ch, dh ; jmp qword ptr [rdx]
0x00000000004b29de : iretd ; and eax, 0xd1cfff5 ; xchg eax, edx ; and al, 0xf5 ; jmp qword ptr [rdx]
0x0000000000496311 : iretd ; clc ; call rax
0x0000000000400f93 : ja 0x400f9a ; pop rbp ; ret
0x000000000041c338 : ja 0x41c343 ; ret
0x0000000000421e98 : ja 0x421e92 ; ret 0x7401
0x0000000000422ced : ja 0x422cce ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000430387 : ja 0x43038d ; ret
0x00000000004303a3 : ja 0x4303ad ; mov dword ptr [rdi], ecx ; ret
0x00000000004303e4 : ja 0x4303f3 ; mov qword ptr [rdi], rcx ; ret
0x0000000000430469 : ja 0x43047d ; ret
0x00000000004304bf : ja 0x4304d7 ; ret
0x0000000000430541 : ja 0x43055d ; ret
0x00000000004309a7 : ja 0x4309b1 ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000004309c3 : ja 0x4309d1 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000430a14 : ja 0x430a27 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000430af9 : ja 0x430b11 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000430b6f : ja 0x430b8b ; lea rax, qword ptr [rdi + 0x14] ; ret
0x0000000000430bf1 : ja 0x430c11 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x0000000000433ffb : ja 0x434017 ; ret
0x000000000043404a : ja 0x434067 ; ret
0x00000000004341df : ja 0x434255 ; ret
0x0000000000444a0f : ja 0x444a2d ; ret
0x0000000000444ca6 : ja 0x444cad ; ret
0x0000000000444ca6 : ja 0x444cb0 ; ret
0x000000000044e597 : ja 0x44e57d ; mov eax, r8d ; ret
0x0000000000456fe2 : ja 0x457046 ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x000000000045ea3b : ja 0x45ea57 ; ret
0x000000000045ea90 : ja 0x45eaaf ; ret
0x000000000045ead6 : ja 0x45eadd ; ret
0x000000000045ead6 : ja 0x45eae0 ; ret
0x000000000045eb1f : ja 0x45eb5d ; add rsp, 0x70 ; pop rbx ; ret
0x000000000045ece3 : ja 0x45ecf3 ; ret
0x000000000045ed3d : ja 0x45ed42 ; ret
0x000000000045ed3d : ja 0x45ed45 ; ret
0x000000000046a43b : ja 0x46a464 ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x000000000046a5a9 : ja 0x46a5d2 ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x000000000046bf8e : ja 0x46bfe0 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004aed44 : ja 0x4aeccb ; ret 0x48f
0x00000000004b9add : ja 0x4b9ae5 ; add byte ptr [rax - 0x31], dh ; clc ; call rax
0x000000000040edcb : jae 0x40edf5 ; movzx eax, byte ptr [rax] ; ret
0x0000000000438574 : jae 0x438557 ; mov eax, 1 ; ret
0x0000000000433f7d : jae 0x438796 ; ret
0x00000000004588e1 : jae 0x45883b ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000467f47 : jae 0x467f05 ; xor eax, eax ; ret
0x0000000000467f46 : jae 0x467f06 ; xor eax, eax ; ret
0x00000000004ad302 : jae 0x4ad2e4 ; jo 0x4ad380 ; mov ebp, 0xfb67d10d ; ret
0x00000000004ae19e : jae 0x4ae179 ; push rsi ; pop rdx ; je 0x4ae16e ; ret 0xacfc
0x00000000004b6216 : jae 0x4b6224 ; idiv bh ; sbb al, 0xd ; ret
0x00000000004ba6ad : jae 0x4ba6b5 ; add al, al ; retf ; stc ; jmp rsi
0x00000000004ba6ac : jae 0x4ba6b6 ; add al, al ; retf ; stc ; jmp rsi
0x00000000004074f3 : jb 0x4074eb ; mov edi, ebx ; call 0x433746
0x0000000000425eaa : jb 0x425eba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000425ffa : jb 0x42600a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042614a : jb 0x42615a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042629a : jb 0x4262aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004263ea : jb 0x4263fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042653a : jb 0x42654a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042668a : jb 0x42669a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004267da : jb 0x4267ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042692a : jb 0x42693a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426a7a : jb 0x426a8a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426bca : jb 0x426bda ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426d1a : jb 0x426d2a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426e6a : jb 0x426e7a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426fba : jb 0x426fca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042710a : jb 0x42711a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000045925c : jb 0x459255 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000048c581 : jb 0x48c5ab ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004931d6 : jb 0x4931e3 ; and eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000496251 : jb 0x49624d ; jmp rax
0x00000000004b2dac : jb 0x4b2dee ; cmc ; jmp qword ptr [rdx]
0x00000000004ba554 : jb 0x4ba525 ; stc ; jmp qword ptr [rdx]
0x00000000004ba694 : jb 0x4ba667 ; stc ; jmp qword ptr [rdx]
0x000000000040d3bb : jbe 0x40d35b ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x00000000004194d9 : jbe 0x419528 ; bsf eax, edx ; ret
0x000000000041bc66 : jbe 0x41bca5 ; add rax, rdi ; ret
0x000000000041bc76 : jbe 0x41bca7 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000041bc86 : jbe 0x41bca7 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000041bc96 : jbe 0x41bca7 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000421f03 : jbe 0x421f1e ; lea rdi, qword ptr [rdi + 0x10] ; jne 0x421ef9 ; ret
0x000000000046b06f : jbe 0x46b07a ; ret
0x0000000000496259 : jbe 0x496259 ; inc dword ptr [rax] ; jns 0x49625d ; call qword ptr [rax]
0x00000000004b3e71 : jbe 0x4b3e6a ; jmp rax
0x00000000004b576c : jbe 0x4b5733 ; cmc ; jmp qword ptr [rdx]
0x00000000004b606c : jbe 0x4b606a ; cmc ; jmp qword ptr [rdx]
0x00000000004bb3d4 : jbe 0x4bb3ec ; cli ; jmp qword ptr [rdx]
0x0000000000400f9f : je 0x400f9d ; pop rbp ; mov edi, 0x6c1c30 ; jmp rax
0x000000000040100a : je 0x40101a ; mov edi, 0x4b2360 ; call rax
0x000000000040104f : je 0x40105f ; mov edi, 0x6bfef0 ; call rax
0x0000000000401431 : je 0x401459 ; add rsp, 8 ; ret
0x0000000000401813 : je 0x401827 ; xor esi, esi ; mov edi, 1 ; call rax
0x0000000000401e09 : je 0x401e1d ; lea rdi, qword ptr [rbx + 0x80] ; call rax
0x0000000000401e73 : je 0x401e87 ; lea rdi, qword ptr [rbx + 0x80] ; call rax
0x000000000040209b : je 0x4020af ; lea rdi, qword ptr [rbx + 0x80] ; call rax
0x00000000004026ae : je 0x4026c2 ; lea rdi, qword ptr [rbx + 0x80] ; call rax
0x0000000000402772 : je 0x402789 ; mov edi, 0x6c32a0 ; call rbx
0x0000000000402829 : je 0x402839 ; mov edi, 0x6c2140 ; call rax
0x0000000000402f53 : je 0x402f6a ; mov edi, 0x6c2140 ; call rax
0x000000000040308c : je 0x40309c ; mov edi, 0x6c21a0 ; call rax
0x0000000000403203 : je 0x403213 ; mov edi, 0x6c21a0 ; call rax
0x000000000040c80b : je 0x40c7b1 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040d383 : je 0x40d340 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040d503 : je 0x40d4c0 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040d6ac : je 0x40d6be ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040e124 : je 0x40e12f ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000040f914 : je 0x40f754 ; ret
0x000000000040f83e : je 0x40f84c ; xor eax, eax ; ret
0x00000000004107a8 : je 0x4107ae ; call rdx
0x0000000000410fd2 : je 0x410fe3 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041473c : je 0x414768 ; sbb byte ptr [rdx + 0x5b], bl ; pop rbp ; jmp rax
0x0000000000415310 : je 0x41533c ; sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000004156c6 : je 0x4156cc ; call rax
0x000000000041665c : je 0x416662 ; ret
0x0000000000416675 : je 0x416684 ; pop rbx ; ret
0x00000000004166c1 : je 0x4166d7 ; add rsp, 0x70 ; pop rbx ; ret
0x0000000000416e7f : je 0x416e91 ; lea rax, qword ptr [rip + 0x19e58] ; ret
0x00000000004185c3 : je 0x41858d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000419295 : je 0x41929d ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000419312 : je 0x419324 ; lea rax, qword ptr [rip + 0x13d25] ; ret
0x000000000041948b : je 0x419495 ; bsf eax, edx ; ret
0x000000000041948b : je 0x419496 ; bsf eax, edx ; ret
0x0000000000419534 : je 0x419545 ; bsf rax, rdx ; ret
0x0000000000419534 : je 0x419546 ; bsf rax, rdx ; ret
0x00000000004194d8 : je 0x419556 ; bsf rax, rdx ; ret
0x000000000041bb5c : je 0x41bbb3 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000041bcdc : je 0x41bcef ; lea rax, qword ptr [rip + 0x852b] ; ret
0x000000000041c892 : je 0x41c8a4 ; lea rax, qword ptr [rip + 0x11f55] ; ret
0x000000000041ed83 : je 0x41ed4d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000420913 : je 0x4208dd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004229da : je 0x422a31 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000422a91 : je 0x422aa9 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x00000000004255a7 : je 0x4255b1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004330ed : je 0x4330b6 ; movzx eax, dl ; pop rbx ; ret
0x00000000004330c5 : je 0x4330b8 ; movzx eax, cl ; pop rbx ; ret
0x00000000004330ed : je 0x4330b8 ; movzx eax, dl ; pop rbx ; ret
0x0000000000433206 : je 0x433230 ; xor eax, eax ; add rsp, 0x18 ; ret
0x000000000043327f : je 0x433263 ; ret
0x0000000000433368 : je 0x433378 ; mov edi, 0x6c32a0 ; call rax
0x0000000000433494 : je 0x4334a4 ; mov edi, 0x6c32a0 ; call rax
0x0000000000433700 : je 0x4336e1 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000434418 : je 0x434461 ; add byte ptr [rax], al ; ret
0x0000000000434bba : je 0x434bc1 ; ret
0x0000000000435fb0 : je 0x435fc0 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000436988 : je 0x436999 ; lea rax, qword ptr [r12 - 1] ; jmp 0x43695c
0x0000000000437099 : je 0x43709e ; ret
0x00000000004370fd : je 0x437102 ; ret
0x0000000000438286 : je 0x438296 ; mov edi, 0x6c11e0 ; call rax
0x0000000000438403 : je 0x438413 ; mov edi, 0x6c11e0 ; call rax
0x0000000000438598 : je 0x4385a2 ; ret
0x00000000004385b4 : je 0x4385c9 ; mov dword ptr [rip + 0x2879dc], edx ; pop rbx ; ret
0x0000000000438a88 : je 0x438a97 ; mov eax, 0x6c3fc0 ; ret
0x000000000043de06 : je 0x43de34 ; or byte ptr [rax - 0x75], cl ; je 0x43de39 ; pop rax ; call rax
0x000000000043de0b : je 0x43de34 ; pop rax ; call rax
0x00000000004427e2 : je 0x4427ac ; pop rbx ; ret
0x0000000000442d21 : je 0x442d31 ; mov edi, 0x6c32a0 ; call rax
0x0000000000442d46 : je 0x442d56 ; mov edi, 0x6c32a0 ; call rax
0x0000000000442e52 : je 0x442e58 ; call rax
0x0000000000442eb1 : je 0x442ec1 ; mov edi, 0x6c32a0 ; call rax
0x0000000000442fb8 : je 0x442fc8 ; mov edi, 0x6c32a0 ; call rax
0x0000000000443132 : je 0x443138 ; call rax
0x00000000004431be : je 0x4431ce ; mov edi, 0x6c32a0 ; call rax
0x000000000044329d : je 0x4432b4 ; mov edi, 0x6c32a0 ; call rax
0x000000000044424b : je 0x444251 ; call rax
0x000000000044480b : je 0x444813 ; ret
0x000000000044e350 : je 0x44e3a4 ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0x45a5c8
0x00000000004582d0 : je 0x458321 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004582cf : je 0x458322 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000458f73 : je 0x458f86 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000458fa3 : je 0x459005 ; pop rbp ; pop r12 ; ret
0x00000000004591bd : je 0x4591c8 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000459201 : je 0x45920c ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000004597d3 : je 0x4597f5 ; bsf rax, rdx ; ret
0x00000000004597d3 : je 0x4597f6 ; bsf rax, rdx ; ret
0x0000000000459763 : je 0x459809 ; bsf rax, rdx ; ret
0x000000000045a829 : je 0x45a849 ; mov cl, dl ; and cl, 0xf ; je 0x45a859 ; ret
0x000000000045a830 : je 0x45a852 ; ret
0x000000000045a845 : je 0x45a866 ; add rax, 2 ; ret
0x000000000045ab49 : je 0x45ab72 ; call rbx
0x000000000045abd2 : je 0x45abff ; lea rcx, qword ptr [rax + 4] ; call rbx
0x000000000045ad44 : je 0x45ad70 ; xor byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000045ae6e : je 0x45ae9a ; xor byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000045e74e : je 0x45e754 ; call rax
0x000000000045e8d3 : je 0x45e8dd ; call rdx
0x000000000045e953 : je 0x45e95d ; call rax
0x000000000045f0e5 : je 0x45f0a3 ; ret
0x000000000045f0df : je 0x45f0b1 ; cmp r10b, 0x3a ; je 0x45f0a9 ; ret
0x000000000046265e : je 0x462689 ; sub byte ptr [rcx - 0x77], al ; ret 0x8341
0x0000000000463912 : je 0x463671 ; call rax
0x00000000004636cd : je 0x4636d3 ; call rax
0x0000000000463d06 : je 0x463d16 ; mov rdi, qword ptr [rsp + 0x30] ; call rax
0x0000000000464a04 : je 0x464a14 ; mov edi, 0x6c11a0 ; call rax
0x000000000046864e : je 0x46865e ; mov edi, 0x6c11e0 ; call rax
0x00000000004686d2 : je 0x4686e2 ; mov edi, 0x6c11e0 ; call rax
0x0000000000468797 : je 0x4687a7 ; mov edi, 0x6c11e0 ; call rax
0x0000000000469adc : je 0x469aec ; mov edi, 0x6c11a0 ; call rax
0x0000000000469fdf : je 0x469fef ; mov edi, 0x6c11e0 ; call rax
0x0000000000469ff8 : je 0x46a00a ; pop rbx ; mov edi, 0x6c11e0 ; jmp rax
0x000000000046aa38 : je 0x46aa63 ; sub byte ptr [rax + 0x63], cl ; ret
0x000000000046b57b : je 0x46b54c ; mov edi, 0x6c11e0 ; call rax
0x000000000046b55c : je 0x46b58a ; sbb byte ptr [rdi + 0x6c11e0], bh ; call rax
0x000000000046b6b6 : je 0x46b6c2 ; ret
0x000000000046b6cc : je 0x46b6dc ; mov edi, 0x6c11e0 ; call rax
0x0000000000475cd4 : je 0x475ce6 ; mov rax, rdx ; pop rbx ; ret
0x0000000000476392 : je 0x47639f ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000476578 : je 0x4765a6 ; mov rdi, qword ptr [r13] ; call r12
0x0000000000479f9f : je 0x479faf ; mov edi, 0x6c11e0 ; call rax
0x000000000047a1b5 : je 0x47a1c5 ; mov edi, 0x6c11e0 ; call rax
0x000000000047a25d : je 0x47a271 ; mov rax, qword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x0000000000483dab : je 0x483dbb ; mov edi, 0x6c11e0 ; call rax
0x0000000000483dd2 : je 0x483de2 ; mov edi, 0x6c11e0 ; call rax
0x0000000000483e53 : je 0x483e63 ; mov edi, 0x6c11e0 ; call rax
0x0000000000483e7c : je 0x483e8c ; mov edi, 0x6c11e0 ; call rax
0x0000000000486773 : je 0x48673d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000488723 : je 0x4886ed ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000048c557 : je 0x48c533 ; ret
0x000000000048d8b2 : je 0x48d8dd ; cmp byte ptr [rax - 0x7d], cl ; ret
0x000000000048f2a8 : je 0x48f29a ; add rsp, 8 ; ret
0x000000000049130d : je 0x491367 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004919fa : je 0x491a0a ; mov edi, 0x6c11a0 ; call rax
0x0000000000491abb : je 0x491acb ; mov edi, 0x6c11a0 ; call rax
0x000000000049304f : je 0x49305a ; call rdx
0x00000000004ad468 : je 0x4ad433 ; xor al, 0xd8 ; ret
0x00000000004ad6a7 : je 0x4ad6a4 ; jmp 0x4ad67e
0x00000000004ae1a2 : je 0x4ae16a ; ret 0xacfc
0x00000000004b334c : je 0x4b33a0 ; cmc ; jmp qword ptr [rdx]
0x00000000004b537c : je 0x4b532d ; cmc ; jmp qword ptr [rdx]
0x00000000004b86d4 : je 0x4b8740 ; add byte ptr [rax], al ; js 0x4b86fd ; clc ; call rdx
0x00000000004b89d4 : je 0x4b8a43 ; add byte ptr [rax], al ; fdiv dword ptr [rdx] ; clc ; jmp rax
0x0000000000400a7c : jg 0x400a0e ; add cl, byte ptr [rax - 0x7d] ; ret 0x8304
0x000000000040ad41 : jg 0x40adb7 ; jmp 0x436f64
0x000000000041c477 : jg 0x41c490 ; jne 0x41c467 ; mov rax, rdi ; ret
0x0000000000421f07 : jg 0x421f1e ; jne 0x421ef5 ; ret
0x0000000000427a89 : jg 0x427adc ; ret
0x0000000000427b0f : jg 0x427b5a ; ret
0x0000000000427c89 : jg 0x427cdc ; ret 0x894c
0x0000000000427d0f : jg 0x427d5a ; ret 0x894c
0x000000000042a0a8 : jg 0x42a0f9 ; loope 0x42a0a7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042a11f : jg 0x42a16a ; ret 0xff2
0x000000000042a138 : jg 0x42a189 ; loop 0x42a137 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042a1af : jg 0x42a1fa ; ret
0x000000000042a1c8 : jg 0x42a219 ; jrcxz 0x42a1c7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042a258 : jg 0x42a2a9 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042a2d8 : jg 0x42a329 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042a358 : jg 0x42a3a9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042a3d8 : jg 0x42a429 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042a458 : jg 0x42a4a9 ; call 0x4fc1b45a
0x000000000042a4d8 : jg 0x42a529 ; jmp 0x4fc1b4da
0x000000000042a658 : jg 0x42a6a9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a6d8 : jg 0x42a729 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a768 : jg 0x42a7b9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a7e8 : jg 0x42a839 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a85c : jg 0x42a867 ; ret
0x000000000042a8b6 : jg 0x42a8c9 ; ret
0x000000000042a8b1 : jg 0x42a901 ; psllq mm1, qword ptr [rdi] ; jg 0x42a8ce ; ret
0x000000000042a926 : jg 0x42a939 ; ret
0x000000000042a996 : jg 0x42a9a9 ; ret
0x000000000042a991 : jg 0x42a9e1 ; or eax, 0xf7f0ff3 ; ret
0x000000000042aa06 : jg 0x42aa19 ; ret
0x000000000042aa01 : jg 0x42aa51 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000042aa76 : jg 0x42aa89 ; ret
0x000000000042aa71 : jg 0x42aac1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000042aae6 : jg 0x42aaf9 ; ret
0x000000000042aae1 : jg 0x42ab31 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000042ab56 : jg 0x42ab69 ; ret
0x000000000042ab51 : jg 0x42aba1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000042abc6 : jg 0x42abd9 ; ret
0x000000000042abc1 : jg 0x42ac11 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000042ac36 : jg 0x42ac49 ; ret
0x000000000042aca6 : jg 0x42acb9 ; ret
0x000000000042ad16 : jg 0x42ad29 ; ret
0x000000000042ad11 : jg 0x42ad61 ; add eax, 0xf7f0ff3 ; ret
0x000000000042ad86 : jg 0x42ad99 ; ret
0x000000000042ad81 : jg 0x42add1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000042adf6 : jg 0x42ae09 ; ret
0x000000000042adf1 : jg 0x42ae41 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000042ae66 : jg 0x42ae79 ; ret
0x000000000042ae61 : jg 0x42aeb1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000042aed6 : jg 0x42aee9 ; ret
0x000000000042aed1 : jg 0x42af21 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000430456 : jg 0x430461 ; ret
0x0000000000430466 : jg 0x430474 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043047a : jg 0x430489 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000430499 : jg 0x4304a7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000004304a9 : jg 0x4304b7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000004304b9 : jg 0x4304ca ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000004304da : jg 0x4304e9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000004304fa : jg 0x430509 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043051a : jg 0x430529 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043053a : jg 0x43054c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043057d : jg 0x43058f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043059d : jg 0x4305af ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000004305bb : jg 0x4305cb ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000004305db : jg 0x4305eb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000004305fb : jg 0x43060b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043061b : jg 0x43062b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000430ae6 : jg 0x430af5 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000430af6 : jg 0x430b08 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000430b29 : jg 0x430b3b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x0000000000430b49 : jg 0x430b5b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x0000000000430c6f : jg 0x430ccf ; or eax, 0x1c478d48 ; ret
0x0000000000433080 : jg 0x4330bd ; ret 0x2b77
0x000000000046a43f : jg 0x46a46c ; call r11
0x000000000046a5ad : jg 0x46a5da ; call r11
0x000000000046b8ba : jg 0x46b8c0 ; add byte ptr [rcx], cl ; ret 0xd089
0x000000000046b87b : jg 0x46b8cd ; sub eax, edx ; shr rax, 0x3f ; ret
0x00000000004b5694 : jg 0x4b5655 ; cmc ; jmp qword ptr [rdx]
0x0000000000434b0f : jge 0x434b51 ; add byte ptr [rax], al ; ret
0x0000000000434dfb : jge 0x434dff ; call rbx
0x0000000000434f0f : jge 0x434f15 ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000434f22 : jge 0x434f26 ; call rbx
0x0000000000434f30 : jge 0x434f34 ; call rbx
0x0000000000435065 : jge 0x435069 ; call rbx
0x00000000004351d5 : jge 0x4351d9 ; call rbx
0x00000000004351e3 : jge 0x4351e7 ; call rbx
0x00000000004355ef : jge 0x4355ba ; mov r15d, r14d ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000004368da : jge 0x4368df ; call r12
0x000000000043796c : jge 0x4379bc ; add byte ptr [rax + 9], cl ; ret 0x8948
0x000000000043796b : jge 0x4379bd ; add byte ptr [rax + 9], cl ; ret 0x8948
0x0000000000438fb4 : jge 0x438f7d ; mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x000000000045bd26 : jge 0x45bccf ; movzx esi, word ptr [rbp - 0x70] ; jmp 0x45bcf8
0x0000000000463326 : jge 0x463333 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5385
0x000000000047657d : jge 0x476582 ; call r12
0x000000000048f59f : jge 0x48f59c ; leave ; ret
0x000000000048f63a : jge 0x48f63d ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048f6cb : jge 0x48f6c8 ; leave ; ret
0x000000000048f71a : jge 0x48f71d ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048f7e7 : jge 0x48f7ea ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048f87f : jge 0x48f87c ; leave ; ret
0x000000000048f8d3 : jge 0x48f8d6 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004b3274 : jge 0x4b32c8 ; cmc ; jmp qword ptr [rdx]
0x00000000004bb38c : jge 0x4bb3a4 ; cli ; jmp qword ptr [rdx]
0x0000000000401282 : jl 0x4012b0 ; or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000408a22 : jl 0x408a4d ; cmp al, ch ; ret 0
0x000000000041aec7 : jl 0x41aef2 ; or byte ptr [rax + 0x39], cl ; ret
0x0000000000434219 : jl 0x434245 ; cwde ; add cl, byte ptr [rdi] ; ret 0xfc3
0x0000000000434329 : jl 0x434355 ; adc byte ptr [rdx], al ; cmove eax, edx ; jmp 0x4342f1
0x00000000004352c6 : jl 0x4352f4 ; or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000437e59 : jl 0x437ee0 ; add byte ptr [r8 + 0xf], cl ; ret
0x000000000043bbcc : jl 0x43bbfa ; cmp byte ptr [rcx + 0x41082444], cl ; call rsi
0x000000000043bf20 : jl 0x43bf4d ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000043c20b : jl 0x43c239 ; mov qword ptr [rsp + 8], rax ; call r14
0x000000000043c4eb : jl 0x43c519 ; cmp byte ptr [rcx + 0x41082444], cl ; call rdi
0x000000000043c5dd : jl 0x43c60b ; cmp byte ptr [rcx + 0x41082444], cl ; call rsi
0x000000000043c940 : jl 0x43c96d ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000043cb89 : jl 0x43cbb7 ; mov qword ptr [rsp + 8], rax ; call r14
0x000000000043ce90 : jl 0x43cebe ; mov qword ptr [rsp + 8], rax ; call r14
0x000000000043d09b : jl 0x43d0c9 ; mov qword ptr [rsp + 8], rax ; call r14
0x000000000043d765 : jl 0x43d792 ; push rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000043e3f2 : jl 0x43e41f ; push rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000043ea2c : jl 0x43ea5a ; mov qword ptr [rsp + 8], rax ; call r12
0x000000000043f3dd : jl 0x43f40b ; mov qword ptr [rsp + 8], rax ; call r15
0x000000000043fd3b : jl 0x43fd69 ; push rax ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000440201 : jl 0x44022e ; push rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x00000000004404f9 : jl 0x440526 ; push rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000440dfc : jl 0x440e2a ; push rax ; mov dword ptr [rsp + 8], eax ; call r14
0x00000000004412a9 : jl 0x4412d6 ; push rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000441599 : jl 0x4415c6 ; push rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000445566 : jl 0x445594 ; sbb byte ptr [rax - 0x77], cl ; pop rax ; or cl, ch ; ret
0x000000000044ca36 : jl 0x44ca00 ; clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000466e69 : jl 0x466e98 ; cmp byte ptr [rbx + rcx*4 + 0x4c], cl ; and al, 0x30 ; call r9
0x0000000000468343 : jl 0x468372 ; sbb byte ptr [rax - 0x3f], cl ; out 3, eax ; call 0x414619
0x00000000004777e1 : jl 0x47780c ; sbb byte ptr [rcx + 0x29], cl ; ret 0x6348
0x0000000000479c6a : jl 0x479c69 ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000481cda : jl 0x481d05 ; xor byte ptr [rax + 0x29], cl ; ret 0x2948
0x00000000004b2694 : jl 0x4b2697 ; hlt ; jmp qword ptr [rdx]
0x00000000004b76dc : jl 0x4b7738 ; add byte ptr [rax], al ; rol al, 0xf7 ; jmp rax
0x00000000004b9adc : jl 0x4b9b5c ; add byte ptr [rax], al ; jo 0x4b9ab8 ; clc ; call rax
0x00000000004bdbdc : jl 0x4bdb9d ; add byte ptr [rax], al ; nop ; fdiv st(3), st(0) ; call qword ptr [rax]
0x0000000000437e3a : jle 0x437e8b ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000437e5a : jle 0x437eab ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000437e7a : jle 0x437ecb ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004427f2 : jle 0x442805 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000446797 : jle 0x446753 ; jmp 0x446760
0x0000000000446796 : jle 0x446754 ; jmp 0x446761
0x000000000045b69e : jle 0x45b6cb ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc031
0x0000000000477f5d : jle 0x477f64 ; ret
0x000000000048fa05 : jle 0x48fa14 ; cmovbe eax, ecx ; ret
0x00000000004963c0 : jle 0x4963b9 ; clc ; call qword ptr [rsi]
0x00000000004ba18d : jle 0x4ba195 ; add byte ptr [rax + 0x66], dh ; stc ; call rdx
0x00000000004b42cc : jmp 0x234b385e
0x00000000004b447c : jmp 0x234b3a0f
0x00000000004b57fc : jmp 0x234b4dc6
0x00000000004b5f4c : jmp 0x234b5542
0x0000000000400ed3 : jmp 0x400e98
0x0000000000404abb : jmp 0x404cbf
0x0000000000407a7d : jmp 0x4079aa
0x000000000040a843 : jmp 0x40a808
0x000000000040c3c9 : jmp 0x40c3d0
0x000000000040ed31 : jmp 0x40e594
0x00000000004123e3 : jmp 0x412029
0x0000000000416a91 : jmp 0x413923
0x0000000000416f34 : jmp 0x416efa
0x0000000000417088 : jmp 0x41704d
0x0000000000422aec : jmp 0x422ab2
0x0000000000422c38 : jmp 0x422bfd
0x0000000000432a2e : jmp 0x4329f4
0x0000000000432aff : jmp 0x432ac5
0x0000000000432b6e : jmp 0x432b34
0x0000000000434361 : jmp 0x4342ef
0x00000000004343ba : jmp 0x4342f2
0x000000000043698f : jmp 0x436955
0x000000000040ad43 : jmp 0x436f62
0x00000000004393b2 : jmp 0x4393a7
0x000000000043a90d : jmp 0x43a8d3
0x000000000043c576 : jmp 0x43c53b
0x000000000043cf6d : jmp 0x43cf33
0x000000000043cfb7 : jmp 0x43cf7c
0x000000000043fa9d : jmp 0x43fa62
0x0000000000440bd5 : jmp 0x440b9a
0x0000000000444a28 : jmp 0x4449fd
0x00000000004465b6 : jmp 0x44649a
0x0000000000446799 : jmp 0x44675e
0x0000000000454b10 : jmp 0x450d9f
0x00000000004555f6 : jmp 0x4518e3
0x00000000004594eb : jmp 0x4594b1
0x00000000004594ea : jmp 0x4594b2
0x0000000000459feb : jmp 0x459e49
0x000000000045bd2c : jmp 0x45bcf2
0x000000000045e4a0 : jmp 0x45e466
0x000000000045eb54 : jmp 0x45eb06
0x000000000046028b : jmp 0x46021f
0x0000000000468221 : jmp 0x4681e7
0x000000000046aa73 : jmp 0x46aa84
0x000000000046ab41 : jmp 0x46ab52
0x000000000046acba : jmp 0x46accf
0x000000000046ad64 : jmp 0x46ad79
0x000000000046cfa2 : jmp 0x46cff4
0x0000000000471113 : jmp 0x46d40b
0x000000000047152a : jmp 0x46d80a
0x000000000046f2a7 : jmp 0x46d80f
0x0000000000471a79 : jmp 0x46dcea
0x0000000000471a5e : jmp 0x46e5b4
0x0000000000472781 : jmp 0x46e9d2
0x000000000046ef78 : jmp 0x46ef3d
0x000000000046fa1b : jmp 0x46f910
0x000000000047494f : jmp 0x470b5f
0x00000000004733b9 : jmp 0x472837
0x0000000000474a27 : jmp 0x4743ab
0x0000000000474995 : jmp 0x4746dc
0x0000000000474e3e : jmp 0x474c57
0x0000000000478969 : jmp 0x478979
0x000000000047b792 : jmp 0x47b7e4
0x0000000000480b4c : jmp 0x480afe
0x000000000048d5db : jmp 0x48d5a1
0x000000000048d656 : jmp 0x48d5a7
0x000000000048dfe5 : jmp 0x48da8c
0x000000000046fa1c : jmp 0x4946fa25
0x00000000004ac96a : jmp 0x4ac9a9
0x00000000004ad6a9 : jmp 0x4ad67c
0x00000000004ae6a0 : jmp 0x4ae634
0x00000000004ae69f : jmp 0x4ae635
0x00000000004b5d0c : jmp 0x4b5d08
0x000000000042a4da : jmp 0x4fc1b4d8
0x000000000042a4d9 : jmp 0x4fc1b4d9
0x00000000004679f8 : jmp 0x5097003
0x0000000000467d98 : jmp 0x50973a3
0x000000000048d75f : jmp 0x50bcd6a
0x000000000046bf91 : jmp 0xffffffffc35648e6
0x000000000040f876 : jmp 0xffffffffc3ca4580
0x0000000000483fd3 : jmp 0xfffffffff748403e
0x0000000000496a47 : jmp qword ptr [rax + 0x10fff93e]
0x00000000004961db : jmp qword ptr [rax + 0x40fff898]
0x0000000000496127 : jmp qword ptr [rax - 0x1f0007e3]
0x0000000000496117 : jmp qword ptr [rax - 0x1f0007e8]
0x0000000000496107 : jmp qword ptr [rax - 0x1f0007ed]
0x0000000000446da5 : jmp qword ptr [rax]
0x0000000000483fda : jmp qword ptr [rbx]
0x00000000004b4913 : jmp qword ptr [rcx]
0x00000000004aef64 : jmp qword ptr [rdi]
0x0000000000496937 : jmp qword ptr [rdx + 0x12fff938]
0x000000000049670f : jmp qword ptr [rdx]
0x0000000000442c39 : jmp qword ptr [rsi + 0xf]
0x00000000004966ab : jmp qword ptr [rsi]
0x0000000000417179 : jmp r10
0x000000000046a09e : jmp r11
0x000000000048e4f9 : jmp r8
0x0000000000425890 : jmp r9
0x000000000049612b : jmp rax
0x000000000046a09f : jmp rbx
0x0000000000424234 : jmp rcx
0x00000000004bbeeb : jmp rdi
0x0000000000400fe7 : jmp rdx
0x00000000004963c7 : jmp rsi
0x00000000004967bf : jmp rsp
0x0000000000400cdb : jne 0x400ce0 ; ret
0x0000000000400fd0 : jne 0x400fd7 ; pop rbp ; ret
0x0000000000404ab9 : jne 0x404ad8 ; jmp 0x404cc1
0x00000000004069f4 : jne 0x4069d2 ; ret
0x0000000000407ce3 : jne 0x407cc8 ; lea rax, qword ptr [rbp + 2] ; mov rdx, r8 ; jmp 0x407d09
0x000000000040847a : jne 0x4084f5 ; nop dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000409e6c : jne 0x409e73 ; pop rbx ; ret
0x000000000040d1b1 : jne 0x40d1a3 ; ret
0x000000000040e172 : jne 0x40e15d ; pop rbx ; ret
0x000000000040e1ac : jne 0x40e1a5 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000040e726 : jne 0x40e71b ; ret
0x000000000040c8e7 : jne 0x40eb52 ; ret
0x000000000040eb02 : jne 0x40ed7b ; ret
0x000000000040fc15 : jne 0x40fc09 ; mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004100aa : jne 0x416831 ; ret
0x00000000004170e2 : jne 0x4170f4 ; lea rax, qword ptr [rip + 5] ; ret
0x000000000041bc19 : jne 0x41bc75 ; xor rax, rax ; ret
0x000000000041bbd9 : jne 0x41bc99 ; xor rax, rax ; ret
0x000000000041bcc8 : jne 0x41bcdb ; lea rax, qword ptr [rip + 0x1f] ; ret
0x000000000041c3be : jne 0x41c3a3 ; ret
0x000000000041c523 : jne 0x41c40f ; mov rax, rdi ; ret
0x000000000041c479 : jne 0x41c465 ; mov rax, rdi ; ret
0x000000000041c9be : jne 0x41c9d0 ; lea rax, qword ptr [rip + 0x79] ; ret
0x000000000041ca21 : jne 0x41ca33 ; lea rax, qword ptr [rip + 6] ; ret
0x0000000000421fc8 : jne 0x421ea0 ; ret
0x0000000000421f09 : jne 0x421ef3 ; ret
0x0000000000422c96 : jne 0x422c81 ; pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x00000000004241fc : jne 0x4241e6 ; xor eax, eax ; sub eax, ecx ; ret
0x00000000004257ed : jne 0x425817 ; xor eax, eax ; ret
0x0000000000424de1 : jne 0x42581b ; xor eax, eax ; ret
0x0000000000424e09 : jne 0x425827 ; xor eax, eax ; ret
0x0000000000430dd5 : jne 0x430d66 ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000430da7 : jne 0x430d66 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000430da6 : jne 0x430d67 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000432534 : jne 0x432748 ; xor eax, eax ; ret
0x0000000000432739 : jne 0x432759 ; xor eax, eax ; ret
0x00000000004325e1 : jne 0x43275d ; xor eax, eax ; ret
0x0000000000432751 : jne 0x43275e ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000432861 : jne 0x432852 ; ret
0x0000000000432911 : jne 0x432902 ; ret
0x0000000000432a81 : jne 0x432a76 ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000432bd1 : jne 0x432bc6 ; sub rax, 1 ; ret
0x0000000000435558 : jne 0x435540 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x0000000000436d2f : jne 0x436ce9 ; mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0x436d6a
0x0000000000436dcd : jne 0x436d87 ; mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0x436e0c
0x0000000000437041 : jne 0x437039 ; pop rdx ; pop r10 ; ret
0x00000000004372a4 : jne 0x437283 ; ret
0x000000000043743d : jne 0x43743e ; nop ; xor eax, eax ; leave ; ret
0x000000000043a737 : jne 0x43a74a ; add eax, dword ptr [rax] ; mov rdi, rbx ; call r14
0x000000000043a90b : jne 0x43a8e3 ; jmp 0x43a8d5
0x00000000004467f1 : jne 0x4467dd ; mov rax, rsi ; ret
0x0000000000446875 : jne 0x446855 ; mov rax, rsi ; ret
0x0000000000450616 : jne 0x450679 ; mov eax, edx ; pop rbx ; ret
0x00000000004507d7 : jne 0x4507de ; ret
0x0000000000454b0a : jne 0x452356 ; jmp 0x450da5
0x0000000000456fe1 : jne 0x457062 ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x0000000000458201 : jne 0x4581f3 ; ret
0x00000000004596c3 : jne 0x4596ce ; xor rax, rax ; ret
0x000000000045a634 : jne 0x45a63f ; mov dword ptr [rcx + 8], esi ; ret
0x000000000045af9b : jne 0x45af56 ; nop dword ptr [rax] ; ret
0x000000000045afdc : jne 0x45afd3 ; ret
0x000000000045bd2a : jne 0x45bcbf ; jmp 0x45bcf4
0x000000000045e581 : jne 0x45e5a1 ; pop rbx ; ret
0x000000000045f0a3 : jne 0x45f10a ; mov rax, r9 ; ret
0x0000000000460286 : jne 0x460213 ; mov byte ptr [rax], 0 ; jmp 0x460224
0x0000000000466455 : jne 0x46578c ; add rcx, rsi ; call rcx
0x000000000046630a : jne 0x465d0a ; add rcx, rsi ; call rcx
0x0000000000467899 : jne 0x46784d ; mov eax, dword ptr [rdx] ; ret
0x0000000000469369 : jne 0x469f76 ; ret
0x0000000000469368 : jne 0x469f77 ; ret
0x000000000046b233 : jne 0x46b246 ; add rsp, 0x48 ; ret
0x000000000046b2d4 : jne 0x46b2e8 ; xor eax, eax ; add rsp, 0x58 ; ret
0x000000000046b3ad : jne 0x46b3c8 ; xor eax, eax ; add rsp, 0x78 ; ret
0x000000000046b464 : jne 0x46b478 ; xor eax, eax ; add rsp, 0x58 ; ret
0x0000000000475dd6 : jne 0x475de6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004799f8 : jne 0x4799a7 ; call rbx
0x0000000000483f7e : jne 0x483f90 ; lea rax, qword ptr [rip + 0x79] ; ret
0x0000000000483fe1 : jne 0x483ff3 ; lea rax, qword ptr [rip + 6] ; ret
0x000000000048f59b : jne 0x48f594 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048f6c7 : jne 0x48f6c0 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048f87b : jne 0x48f874 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048faad : jne 0x48fab2 ; call r14
0x000000000048fe59 : jne 0x48fe89 ; mov rax, qword ptr [rdx] ; add rsp, 8 ; ret
0x0000000000490bd9 : jne 0x490c09 ; mov rax, qword ptr [rdx] ; add rsp, 8 ; ret
0x0000000000491178 : jne 0x491183 ; pop rbx ; ret
0x0000000000491384 : jne 0x491393 ; ret
0x0000000000491b85 : jne 0x491b73 ; pop rbx ; ret
0x0000000000491bd0 : jne 0x491bb0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000491d19 : jne 0x491ce7 ; add rsp, 8 ; ret
0x0000000000491db1 : jne 0x491da4 ; pop rbx ; ret
0x000000000049375c : jne 0x49377f ; ret
0x00000000004b5ba4 : jne 0x4b5b90 ; cmc ; jmp qword ptr [rdx]
0x00000000004b99fc : jne 0x4b9a23 ; stc ; jmp qword ptr [rdx]
0x00000000004ba15c : jne 0x4ba11d ; stc ; jmp qword ptr [rdx]
0x00000000004bb72e : jne 0x4bb73c ; ret
0x00000000004bb72e : jne 0x4bb742 ; ret
0x00000000004bb75e : jne 0x4bb76c ; ret
0x00000000004bb75e : jne 0x4bb772 ; ret
0x000000000042509e : jno 0x4250ad ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004341e0 : jno 0x4341d7 ; ret
0x000000000045a632 : jno 0x45a640 ; jne 0x45a641 ; mov dword ptr [rcx + 8], esi ; ret
0x000000000045a637 : jno 0x45a644 ; ret
0x000000000046be84 : jno 0x46bed6 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004b3d79 : jno 0x4b3d72 ; call qword ptr [rax]
0x00000000004b46bc : jno 0x4b465e ; cmc ; jmp qword ptr [rdx]
0x00000000004397cb : jnp 0x4397e7 ; call rax
0x0000000000496261 : jnp 0x49625d ; jmp qword ptr [rax]
0x00000000004ad185 : jnp 0x4ad142 ; ret
0x00000000004b5cbe : jnp 0x4b5cd4 ; idiv bh ; sbb al, 0xd ; sub al, ch ; cmc ; jmp qword ptr [rdx]
0x00000000004b70a1 : jnp 0x4b709b ; call qword ptr [rax]
0x00000000004b9e6d : jnp 0x4b9e75 ; add byte ptr [rax + 0x65], al ; stc ; call rdi
0x0000000000400ecd : jns 0x400db0 ; jmp 0x400e9e
0x000000000041c9c3 : jns 0x41c9c9 ; add byte ptr [rax], al ; ret
0x0000000000444b68 : jns 0x444b81 ; add rsp, 0xd0 ; ret
0x000000000045baf7 : jns 0x45bb24 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x000000000046af75 : jns 0x46aefc ; ret
0x0000000000483f83 : jns 0x483f89 ; add byte ptr [rax], al ; ret
0x0000000000491676 : jns 0x491684 ; mov r8, qword ptr [r8] ; mov qword ptr [rbx], r8 ; pop rbx ; ret
0x000000000049625d : jns 0x496259 ; call qword ptr [rax]
0x00000000004ac28e : jns 0x4ac224 ; ret 0xf869
0x00000000004ac28d : jns 0x4ac225 ; ret 0xf869
0x00000000004ae69e : jns 0x4ae6f5 ; jmp 0x4ae636
0x00000000004b9d0d : jns 0x4b9d15 ; add al, dh ; stc ; call qword ptr [rsi]
0x00000000004016fc : jo 0x4016ed ; sub eax, dword ptr [rax] ; xor eax, eax ; ret
0x000000000040bbe4 : jo 0x40bc35 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004166c6 : jo 0x416725 ; ret
0x00000000004342ee : jo 0x43434d ; ret
0x0000000000434f1c : jo 0x434f23 ; std ; dec dword ptr [rcx - 0x75] ; jge 0x434f2c ; call rbx
0x0000000000437e39 : jo 0x437ec0 ; add byte ptr [r8 + 0xf], cl ; ret
0x000000000043a36b : jo 0x43a326 ; add byte ptr [r15 + 0x6c3220], dil ; call rax
0x000000000043a45c : jo 0x43a417 ; add byte ptr [r15 + 0x6c3220], dil ; call rax
0x000000000045260c : jo 0x452613 ; add byte ptr [rax - 0x77], cl ; ret 0xb848
0x000000000045827a : jo 0x458292 ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000045eaf7 : jo 0x45eaf1 ; ret 0x4840
0x000000000045eb24 : jo 0x45eb83 ; ret
0x0000000000475aba : jo 0x475a47 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000475ab9 : jo 0x475a48 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x000000000048d5d5 : jo 0x48d5df ; add rax, 3 ; jmp 0x48d5a7
0x00000000004960d8 : jo 0x49610b ; clc ; inc dword ptr [rax + 0x2b] ; clc ; call qword ptr [rax]
0x0000000000496210 : jo 0x4961c6 ; clc ; inc eax ; scasb al, byte ptr [rdi] ; clc ; call qword ptr [rax]
0x0000000000496278 : jo 0x496204 ; clc ; call qword ptr [rax]
0x000000000049624d : jo 0x496249 ; call rax
0x0000000000496474 : jo 0x49646b ; clc ; call qword ptr [rax]
0x00000000004965a4 : jo 0x4965bb ; stc ; inc dword ptr [rax + 0x10] ; stc ; jmp qword ptr [rax]
0x00000000004965cc : jo 0x4965cf ; clc ; inc eax ; sti ; clc ; call qword ptr [rax]
0x0000000000496620 : jo 0x49662a ; stc ; inc eax ; add bh, cl ; call qword ptr [rax]
0x0000000000496a78 : jo 0x496ab5 ; stc ; jmp rax
0x0000000000496a80 : jo 0x496abc ; stc ; call qword ptr [rax]
0x00000000004ad304 : jo 0x4ad37e ; mov ebp, 0xfb67d10d ; ret
0x00000000004b228c : jo 0x4b226b ; std ; jmp rax
0x00000000004b4780 : jo 0x4b4706 ; cmc ; jmp rbx
0x00000000004b9ae0 : jo 0x4b9ab4 ; clc ; call rax
0x00000000004ba190 : jo 0x4ba1fb ; stc ; call rdx
0x00000000004ba850 : jo 0x4ba825 ; stc ; jmp rbx
0x00000000004bb250 : jo 0x4bb252 ; stc ; jmp qword ptr [rdx]
0x00000000004bc280 : jo 0x4bc212 ; cli ; call rdx
0x00000000004100ac : jp 0x41011a ; add byte ptr [rax], al ; ret
0x0000000000416670 : jp 0x41667a ; test rdx, rdi ; je 0x416689 ; pop rbx ; ret
0x000000000041c405 : jp 0x41c3ff ; ret 0x7401
0x0000000000450c7e : jp 0x450cd3 ; add byte ptr [rcx - 0x42], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; jmp rdx
0x0000000000475deb : jp 0x475deb ; dec dword ptr [rax - 0x77] ; ret 0x894c
0x0000000000496a40 : jp 0x496a7c ; stc ; jmp qword ptr [rax]
0x000000000041668f : jrcxz 0x416695 ; dec dword ptr [rax - 0x77] ; ret 0xcb8
0x000000000042a1ca : jrcxz 0x42a1c5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042a1c9 : jrcxz 0x42a1c6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437093 : jrcxz 0x437058 ; cmp r11d, 0xa ; je 0x4370a4 ; ret
0x000000000045b8b1 : jrcxz 0x45b843 ; or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004ac0e5 : jrcxz 0x4ac13f ; ret
0x00000000004b6941 : jrcxz 0x4b693a ; jmp rbx
0x0000000000403e92 : js 0x403ea1 ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x81e9
0x0000000000435bec : js 0x435c03 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000438844 : js 0x438802 ; sub byte ptr [rax], al ; pop rbx ; ret
0x0000000000439496 : js 0x4394b6 ; mov qword ptr [rbp - 0x68], rax ; call rcx
0x0000000000446791 : js 0x4467de ; cmp dword ptr [rdx + rsi*4], 0x40 ; jle 0x446759 ; jmp 0x446766
0x0000000000458f70 : js 0x458fab ; add byte ptr [rbx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x00000000004594e9 : js 0x45952e ; jmp 0x4594b3
0x0000000000464fcc : js 0x464fd3 ; pop rbx ; ret
0x0000000000475abd : js 0x475acb ; ret
0x000000000048d654 : js 0x48d642 ; jmp 0x48d5a9
0x000000000048f4c9 : js 0x48f4d6 ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000048f4d6 : js 0x48f4e2 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004b38a8 : js 0x4b3904 ; cmc ; jmp rsp
0x00000000004b5fdc : js 0x4b5fd1 ; cmc ; jmp qword ptr [rdx]
0x00000000004b68f8 : js 0x4b68de ; cmc ; call qword ptr [rcx]
0x00000000004b86d8 : js 0x4b86f9 ; clc ; call rdx
0x000000000041b8bd : lahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000004bc27d : lahf ; add byte ptr [rax], al ; jo 0x4bc215 ; cli ; call rdx
0x00000000004ae7c3 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000042156d : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000435332 : lahf ; ret
0x0000000000435339 : lahf ; ret 0x3845
0x00000000004ac01d : lahf ; ret 0x871e
0x00000000004701a8 : lahf ; ret 0x9529
0x0000000000496c59 : lahf ; stc ; inc eax ; lahf ; stc ; jmp rax
0x0000000000496c45 : lahf ; stc ; jmp qword ptr [rax]
0x0000000000496c5d : lahf ; stc ; jmp rax
0x00000000004b7e05 : lahf ; std ; jmp qword ptr [rdx]
0x0000000000421bfd : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046813d : lcall ptr [rbx + 0x48] ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x0000000000414c61 : lcall ptr [rbx + 0x5d] ; pop r12 ; jmp rax
0x000000000045f030 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000446106 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000441f7b : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000040a0d8 : lcall ptr [rbx + 0x5d] ; ret
0x00000000004682ac : lcall ptr [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x0000000000496837 : lcall ptr [rdx + 0x2afff942] ; stc ; call rax
0x000000000042a856 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000040e1bb : lea eax, dword ptr [r8 - 1] ; ret
0x000000000041bc44 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x000000000041bc54 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x000000000041bc24 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x0000000000401e2e : lea eax, dword ptr [rax + rdx*8 - 0x18] ; mov rdx, rax ; jmp 0x401e53
0x000000000040e1bc : lea eax, dword ptr [rax - 1] ; ret
0x0000000000407ce6 : lea eax, dword ptr [rbp + 2] ; mov rdx, r8 ; jmp 0x407d06
0x0000000000432e2b : lea eax, dword ptr [rcx + 1] ; pop rbp ; ret
0x0000000000459acd : lea eax, dword ptr [rcx + rsi] ; ret
0x0000000000432a84 : lea eax, dword ptr [rcx - 1] ; ret
0x000000000045cffb : lea eax, dword ptr [rcx] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000430afc : lea eax, dword ptr [rdi + 0x10] ; ret
0x0000000000430b11 : lea eax, dword ptr [rdi + 0x11] ; ret
0x0000000000430b2f : lea eax, dword ptr [rdi + 0x12] ; ret
0x0000000000430b4f : lea eax, dword ptr [rdi + 0x13] ; ret
0x0000000000430b72 : lea eax, dword ptr [rdi + 0x14] ; ret
0x0000000000430b91 : lea eax, dword ptr [rdi + 0x15] ; ret
0x0000000000430bb1 : lea eax, dword ptr [rdi + 0x16] ; ret
0x0000000000430bd1 : lea eax, dword ptr [rdi + 0x17] ; ret
0x0000000000430bf4 : lea eax, dword ptr [rdi + 0x18] ; ret
0x0000000000430c19 : lea eax, dword ptr [rdi + 0x19] ; ret
0x0000000000430c37 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x0000000000430c57 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x0000000000430c73 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x0000000000430c93 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x0000000000430cb3 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x0000000000430cd3 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x0000000000430a4d : lea eax, dword ptr [rdi + 0xa] ; ret
0x0000000000430a6d : lea eax, dword ptr [rdi + 0xb] ; ret
0x0000000000430a8f : lea eax, dword ptr [rdi + 0xc] ; ret
0x0000000000430aaf : lea eax, dword ptr [rdi + 0xd] ; ret
0x0000000000430acf : lea eax, dword ptr [rdi + 0xe] ; ret
0x0000000000430ae9 : lea eax, dword ptr [rdi + 0xf] ; ret
0x0000000000430997 : lea eax, dword ptr [rdi + 1] ; ret
0x00000000004309aa : lea eax, dword ptr [rdi + 2] ; ret
0x00000000004309b5 : lea eax, dword ptr [rdi + 3] ; ret
0x00000000004309c8 : lea eax, dword ptr [rdi + 4] ; ret
0x00000000004309dd : lea eax, dword ptr [rdi + 5] ; ret
0x00000000004309fb : lea eax, dword ptr [rdi + 6] ; ret
0x0000000000430a07 : lea eax, dword ptr [rdi + 7] ; ret
0x0000000000430a1a : lea eax, dword ptr [rdi + 8] ; ret
0x0000000000430a2f : lea eax, dword ptr [rdi + 9] ; ret
0x000000000041bc79 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x000000000041bc89 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x000000000041bb73 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x0000000000416ffa : lea eax, dword ptr [rdi + rax] ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x0000000000422a97 : lea eax, dword ptr [rdi + rax] ; ret
0x00000000004599c9 : lea eax, dword ptr [rdi + rsi] ; ret
0x000000000046b068 : lea eax, dword ptr [rdi - 1] ; cmp rax, 0xfd ; jbe 0x46b081 ; ret
0x0000000000430983 : lea eax, dword ptr [rdi] ; ret
0x000000000042ff6d : lea eax, dword ptr [rdx + 0xa] ; ret
0x000000000042ff8d : lea eax, dword ptr [rdx + 0xb] ; ret
0x000000000042ffaf : lea eax, dword ptr [rdx + 0xc] ; ret
0x000000000042ffcf : lea eax, dword ptr [rdx + 0xd] ; ret
0x000000000042ffef : lea eax, dword ptr [rdx + 0xe] ; ret
0x000000000042fe7f : lea eax, dword ptr [rdx + 0xf] ; ret
0x000000000042fea7 : lea eax, dword ptr [rdx + 1] ; ret
0x000000000042febd : lea eax, dword ptr [rdx + 2] ; ret
0x000000000042fed5 : lea eax, dword ptr [rdx + 3] ; ret
0x000000000042feeb : lea eax, dword ptr [rdx + 4] ; ret
0x000000000042fefd : lea eax, dword ptr [rdx + 5] ; ret
0x000000000042ff1b : lea eax, dword ptr [rdx + 6] ; ret
0x000000000042fe27 : lea eax, dword ptr [rdx + 7] ; ret
0x000000000042ff2d : lea eax, dword ptr [rdx + 8] ; ret
0x000000000042ff4d : lea eax, dword ptr [rdx + 9] ; ret
0x000000000040e1ae : lea eax, dword ptr [rdx + rdi] ; ret
0x000000000043314c : lea eax, dword ptr [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004153c1 : lea eax, dword ptr [rdx - 0x10] ; add rsp, 8 ; ret
0x0000000000402cfb : lea eax, dword ptr [rdx] ; add byte ptr [rax], al ; mov edi, 0x6c32a0 ; call rax
0x0000000000436377 : lea eax, dword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x000000000042fe95 : lea eax, dword ptr [rdx] ; ret
0x000000000041c895 : lea eax, dword ptr [rip + 0x11f55] ; ret
0x0000000000419315 : lea eax, dword ptr [rip + 0x13d25] ; ret
0x000000000041bce7 : lea eax, dword ptr [rip + 0x15313] ; ret
0x0000000000416e82 : lea eax, dword ptr [rip + 0x19e58] ; ret
0x000000000041bccb : lea eax, dword ptr [rip + 0x1f] ; ret
0x000000000041c9c1 : lea eax, dword ptr [rip + 0x79] ; ret
0x000000000041bcdf : lea eax, dword ptr [rip + 0x852b] ; ret
0x00000000004170e5 : lea eax, dword ptr [rip + 5] ; ret
0x000000000041ca24 : lea eax, dword ptr [rip + 6] ; ret
0x000000000043698b : lea eax, dword ptr [rsp - 1] ; jmp 0x436959
0x000000000048e59f : lea ebp, dword ptr [rbx + rdi*8 + 0x2948ffff] ; ret 0x8941
0x000000000047a54c : lea ebx, dword ptr [rbp - 0x60] ; call 0x4467b5
0x000000000044e0df : lea ebx, dword ptr [rdi + rdi*8 - 1] ; dec dword ptr [rax - 0x77] ; ret 0x3ae9
0x000000000044d81e : lea ebx, dword ptr [rdi + rdi*8 - 1] ; dec dword ptr [rax - 0x77] ; ret 0x858b
0x00000000004ac8d1 : lea ebx, dword ptr [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000045aa38 : lea ecx, dword ptr [rax + 1] ; call rbx
0x000000000045abd6 : lea ecx, dword ptr [rax + 4] ; call rbx
0x00000000004258e7 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x000000000043021e : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000004587c1 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000046cfa0 : lea ecx, dword ptr [rdx] ; jmp 0x46cff6
0x000000000047b790 : lea ecx, dword ptr [rdx] ; jmp 0x47b7e6
0x000000000045321d : lea ecx, dword ptr [rsi + rdx] ; add rdx, r12 ; call qword ptr [r11 + rax*8]
0x000000000044951a : lea ecx, dword ptr [rsi + rdx] ; add rdx, rbx ; call qword ptr [r11 + rax*8]
0x000000000045ab43 : lea ecx, dword ptr [rsp + 0x28] ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000403563 : lea edi, dword ptr [rbp + 0x80] ; xor esi, esi ; call rax
0x0000000000438fb3 : lea edi, dword ptr [rbp - 0x40] ; mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x0000000000401e0c : lea edi, dword ptr [rbx + 0x80] ; call rax
0x000000000041c476 : lea edi, dword ptr [rdi + 0x10] ; jne 0x41c468 ; mov rax, rdi ; ret
0x0000000000421f06 : lea edi, dword ptr [rdi + 0x10] ; jne 0x421ef6 ; ret
0x0000000000477124 : lea edi, dword ptr [rsp + 0x90] ; call r12
0x000000000048fa54 : lea edi, dword ptr [rsp + rcx*8] ; mov rsi, qword ptr [r15] ; call r14
0x00000000004259b4 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000045ee87 : lea edx, dword ptr [rdx + rcx*4] ; add eax, dword ptr [rsi + rdx] ; ret
0x00000000004593ed : lea edx, dword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000417176 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x0000000000425da8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x000000000045871c : lea edx, dword ptr [rsi + 4] ; mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000436d2e : lea esi, dword ptr [rbp - 0x50] ; mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0x436d6b
0x0000000000436dcc : lea esi, dword ptr [rbp - 0x50] ; mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0x436e0d
0x000000000045db65 : lea esi, dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000045ad43 : lea esi, dword ptr [rsp + 0x30] ; mov rdi, r12 ; call rbx
0x000000000045ab48 : lea esi, dword ptr [rsp + 0x40] ; call rbx
0x000000000045abd1 : lea esi, dword ptr [rsp + 0x40] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x0000000000476577 : lea esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [r13] ; call r12
0x000000000045f240 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000004080e0 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000417175 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000048fa53 : lea r15, qword ptr [r12 + rcx*8] ; mov rsi, qword ptr [r15] ; call r14
0x00000000004258e6 : lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000046cf9f : lea r9, qword ptr [rdx] ; jmp 0x46cff7
0x000000000047b78f : lea r9, qword ptr [rdx] ; jmp 0x47b7e7
0x000000000043698a : lea rax, qword ptr [r12 - 1] ; jmp 0x43695a
0x0000000000432e2a : lea rax, qword ptr [r9 + 1] ; pop rbp ; ret
0x000000000041bc43 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000041bc53 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000041bc23 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x0000000000401e2d : lea rax, qword ptr [rax + rdx*8 - 0x18] ; mov rdx, rax ; jmp 0x401e54
0x0000000000407ce5 : lea rax, qword ptr [rbp + 2] ; mov rdx, r8 ; jmp 0x407d07
0x0000000000459acc : lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000432a83 : lea rax, qword ptr [rcx - 1] ; ret
0x0000000000430afb : lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000430b10 : lea rax, qword ptr [rdi + 0x11] ; ret
0x0000000000430b2e : lea rax, qword ptr [rdi + 0x12] ; ret
0x0000000000430b4e : lea rax, qword ptr [rdi + 0x13] ; ret
0x0000000000430b71 : lea rax, qword ptr [rdi + 0x14] ; ret
0x0000000000430b90 : lea rax, qword ptr [rdi + 0x15] ; ret
0x0000000000430bb0 : lea rax, qword ptr [rdi + 0x16] ; ret
0x0000000000430bd0 : lea rax, qword ptr [rdi + 0x17] ; ret
0x0000000000430bf3 : lea rax, qword ptr [rdi + 0x18] ; ret
0x0000000000430c18 : lea rax, qword ptr [rdi + 0x19] ; ret
0x0000000000430c36 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x0000000000430c56 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x0000000000430c72 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x0000000000430c92 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x0000000000430cb2 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x0000000000430cd2 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x0000000000430a4c : lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000430a6c : lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000430a8e : lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000430aae : lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000430ace : lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000430ae8 : lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000430996 : lea rax, qword ptr [rdi + 1] ; ret
0x00000000004309a9 : lea rax, qword ptr [rdi + 2] ; ret
0x00000000004309b4 : lea rax, qword ptr [rdi + 3] ; ret
0x00000000004309c7 : lea rax, qword ptr [rdi + 4] ; ret
0x00000000004309dc : lea rax, qword ptr [rdi + 5] ; ret
0x00000000004309fa : lea rax, qword ptr [rdi + 6] ; ret
0x0000000000430a06 : lea rax, qword ptr [rdi + 7] ; ret
0x0000000000430a19 : lea rax, qword ptr [rdi + 8] ; ret
0x0000000000430a2e : lea rax, qword ptr [rdi + 9] ; ret
0x000000000041bc78 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000041bc88 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000041bb72 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000422a96 : lea rax, qword ptr [rdi + rax] ; ret
0x00000000004599c8 : lea rax, qword ptr [rdi + rsi] ; ret
0x0000000000430982 : lea rax, qword ptr [rdi] ; ret
0x000000000042ff6c : lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000042ff8c : lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000042ffae : lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000042ffce : lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000042ffee : lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000042fe7e : lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000042fea6 : lea rax, qword ptr [rdx + 1] ; ret
0x000000000042febc : lea rax, qword ptr [rdx + 2] ; ret
0x000000000042fed4 : lea rax, qword ptr [rdx + 3] ; ret
0x000000000042feea : lea rax, qword ptr [rdx + 4] ; ret
0x000000000042fefc : lea rax, qword ptr [rdx + 5] ; ret
0x000000000042ff1a : lea rax, qword ptr [rdx + 6] ; ret
0x000000000042fe26 : lea rax, qword ptr [rdx + 7] ; ret
0x000000000042ff2c : lea rax, qword ptr [rdx + 8] ; ret
0x000000000042ff4c : lea rax, qword ptr [rdx + 9] ; ret
0x00000000004153c0 : lea rax, qword ptr [rdx - 0x10] ; add rsp, 8 ; ret
0x000000000042fe94 : lea rax, qword ptr [rdx] ; ret
0x000000000041c894 : lea rax, qword ptr [rip + 0x11f55] ; ret
0x0000000000419314 : lea rax, qword ptr [rip + 0x13d25] ; ret
0x000000000041bce6 : lea rax, qword ptr [rip + 0x15313] ; ret
0x0000000000416e81 : lea rax, qword ptr [rip + 0x19e58] ; ret
0x000000000041bcca : lea rax, qword ptr [rip + 0x1f] ; ret
0x000000000041c9c0 : lea rax, qword ptr [rip + 0x79] ; ret
0x000000000041bcde : lea rax, qword ptr [rip + 0x852b] ; ret
0x00000000004170e4 : lea rax, qword ptr [rip + 5] ; ret
0x000000000041ca23 : lea rax, qword ptr [rip + 6] ; ret
0x000000000047a54b : lea rbx, qword ptr [rbp - 0x60] ; call 0x4467b6
0x000000000043021d : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000045aa37 : lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000045abd5 : lea rcx, qword ptr [rax + 4] ; call rbx
0x0000000000403562 : lea rdi, qword ptr [r13 + 0x80] ; xor esi, esi ; call rax
0x0000000000438fb2 : lea rdi, qword ptr [rbp - 0x40] ; mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x0000000000401e0b : lea rdi, qword ptr [rbx + 0x80] ; call rax
0x000000000041c475 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x41c469 ; mov rax, rdi ; ret
0x0000000000421f05 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x421ef7 ; ret
0x0000000000477123 : lea rdi, qword ptr [rsp + 0x90] ; call r12
0x00000000004259b3 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000045ee86 : lea rdx, qword ptr [rdx + rcx*4] ; add eax, dword ptr [rsi + rdx] ; ret
0x0000000000425da7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x000000000045ad42 : lea rsi, qword ptr [rsp + 0x30] ; mov rdi, r12 ; call rbx
0x000000000045ab47 : lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x000000000045abd0 : lea rsi, qword ptr [rsp + 0x40] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x000000000045f23f : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000004113ea : leave ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000004b846c : leave ; and eax, edi ; jmp qword ptr [rdx]
0x00000000004b960d : leave ; clc ; jmp qword ptr [rdx]
0x0000000000483f36 : leave ; cmove rax, rdx ; ret
0x000000000048fa02 : leave ; cmp qword ptr [rsi + 8], rdi ; cmovbe eax, ecx ; ret
0x000000000045e49f : leave ; jmp 0x45e467
0x0000000000432860 : leave ; jne 0x432853 ; ret
0x0000000000432910 : leave ; jne 0x432903 ; ret
0x0000000000432bd0 : leave ; jne 0x432bc7 ; sub rax, 1 ; ret
0x000000000048ce87 : leave ; movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x00000000004010a9 : leave ; ret
0x00000000004b41f4 : leave ; xchg ch, dh ; jmp qword ptr [rdx]
0x000000000040bf36 : les r11d, ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000049647f : ljmp ptr [rax + 0xe] ; stc ; push qword ptr [rax] ; adc cl, bh ; call qword ptr [rax]
0x000000000040055a : ljmp ptr [rcx] ; salc ; add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x40053a
0x00000000004968ff : ljmp ptr [rdi + rsi + 0x3f52fff9] ; stc ; call rdx
0x000000000049683b : ljmp ptr [rdx] ; stc ; call rax
0x00000000004967b7 : ljmp ptr [rsi + 0x3efff942] ; stc ; jmp rsp
0x0000000000408590 : lock add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000457875 : lock add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004245ee : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047b655 : lock inc dword ptr [rdx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000468565 : lodsb al, byte ptr [rsi] ; add al, bpl ; ret
0x0000000000418fd0 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004321e0 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000004b490c : lodsb al, byte ptr [rsi] ; and eax, 0x89e00000 ; cmc ; jmp qword ptr [rcx]
0x00000000004b5335 : lodsb al, byte ptr [rsi] ; cmc ; jmp qword ptr [rdx]
0x00000000004b9d0c : lodsb al, byte ptr [rsi] ; jns 0x4b9d16 ; add al, dh ; stc ; call qword ptr [rsi]
0x00000000004bdc0c : lodsb al, byte ptr [rsi] ; mov eax, 0xdc900000 ; sti ; call qword ptr [rax]
0x0000000000408a1f : lodsb al, byte ptr [rsi] ; mov rdi, qword ptr [rsp + 0x38] ; call 0x414c98
0x00000000004aef5d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004b920c : lodsb al, byte ptr [rsi] ; outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; nop ; mov al, 0xf8 ; call qword ptr [rcx]
0x00000000004b1e1c : lodsb al, byte ptr [rsi] ; ret
0x000000000047b934 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000496211 : lodsd eax, dword ptr [rsi] ; clc ; inc eax ; scasb al, byte ptr [rdi] ; clc ; call qword ptr [rax]
0x00000000004b540d : lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rdx]
0x0000000000487930 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046bff2 : lodsd eax, dword ptr [rsi] ; ret
0x0000000000404578 : loop 0x4045b8 ; add r9b, bpl ; ret 0xfff1
0x00000000004241fd : loop 0x424235 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000042a13a : loop 0x42a135 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042a139 : loop 0x42a136 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000445c5f : loop 0x445cb3 ; mov edi, esi ; call 0x421e96
0x0000000000453222 : loop 0x453269 ; call qword ptr [rbx + rax*8]
0x000000000048cc8f : loop 0x48cce1 ; or eax, edx ; mov qword ptr [rsi], r8 ; ret
0x000000000048f9df : loop 0x48fa31 ; or eax, edx ; mov qword ptr [rsi], r8 ; ret
0x00000000004af2fa : loop 0x4af34f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000042a0aa : loope 0x42a0a5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042a0a9 : loope 0x42a0a6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000430f0b : loope 0x430f15 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000432efe : loope 0x432f06 ; add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x8341
0x000000000043867f : loope 0x43868a ; pop rbx ; shl eax, cl ; pop rbp ; ret
0x00000000004395ff : loope 0x439652 ; mov edx, ebp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000045a82e : loope 0x45a843 ; je 0x45a854 ; ret
0x000000000045e69c : loope 0x45e629 ; ret 0xf631
0x000000000046be87 : loope 0x46bed9 ; mov dword ptr [rdi], ecx ; ret
0x000000000046beb8 : loope 0x46bf0b ; mov dword ptr [rdi - 8], ecx ; ret
0x000000000046bf2d : loope 0x46bf80 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000047d6e7 : loope 0x47d6ed ; dec dword ptr [rax - 0x77] ; ret
0x00000000004930de : loope 0x493144 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004b68f9 : loope 0x4b68f2 ; call qword ptr [rcx]
0x000000000040b37a : loopne 0x40b3c4 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040b428 : loopne 0x40b472 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040cc6d : loopne 0x40ccd1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004129fe : loopne 0x41298b ; rol byte ptr [rcx + 0xf], 0x94 ; ret
0x000000000041643f : loopne 0x4164a1 ; pop rbp ; pop r12 ; ret
0x000000000041c3bf : loopne 0x41c3b6 ; ret
0x0000000000422c9c : loopne 0x422ce2 ; pop rsp ; ret
0x0000000000422c97 : loopne 0x422cfc ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x0000000000425e01 : loopne 0x425e18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000425e00 : loopne 0x425e19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000425f51 : loopne 0x425f68 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000425f50 : loopne 0x425f69 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004260a1 : loopne 0x4260b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004260a0 : loopne 0x4260b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004261f1 : loopne 0x426208 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004261f0 : loopne 0x426209 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426341 : loopne 0x426358 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426340 : loopne 0x426359 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426491 : loopne 0x4264a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426490 : loopne 0x4264a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004265e1 : loopne 0x4265f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004265e0 : loopne 0x4265f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042672f : loopne 0x426746 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042672e : loopne 0x426747 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426881 : loopne 0x426898 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426880 : loopne 0x426899 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004269d1 : loopne 0x4269e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004269d0 : loopne 0x4269e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426b21 : loopne 0x426b38 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426b20 : loopne 0x426b39 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426c71 : loopne 0x426c88 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426c70 : loopne 0x426c89 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426dc1 : loopne 0x426dd8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426dc0 : loopne 0x426dd9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426f11 : loopne 0x426f28 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426f10 : loopne 0x426f29 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000427061 : loopne 0x427078 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000427060 : loopne 0x427079 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000436fac : loopne 0x436fc9 ; add byte ptr [rax], al ; ret
0x00000000004370f8 : loopne 0x43710d ; cmp eax, 4 ; je 0x437107 ; ret
0x0000000000437227 : loopne 0x437239 ; pop r12 ; ret
0x0000000000438683 : loopne 0x4386e4 ; ret
0x000000000044bc7a : loopne 0x44bcde ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000456135 : loopne 0x456197 ; pop rbp ; pop r12 ; ret
0x0000000000456501 : loopne 0x456547 ; pop rsp ; ret
0x0000000000456ba9 : loopne 0x456c0b ; pop rbp ; pop r12 ; ret
0x0000000000456bc9 : loopne 0x456c0f ; pop rsp ; ret
0x000000000045b44c : loopne 0x45b496 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000045b438 : loopne 0x45b49e ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000045c7a6 : loopne 0x45c7b1 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000469ffc : loopne 0x46a016 ; insb byte ptr [rdi], dx ; add bh, bh ; loopne 0x46a065 ; ret
0x000000000046a001 : loopne 0x46a060 ; ret
0x000000000046b6e9 : loopne 0x46b745 ; ret
0x000000000046b99d : loopne 0x46b9a6 ; sub eax, 1 ; ret
0x000000000046bcc6 : loopne 0x46bd12 ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000476032 : loopne 0x476091 ; ret
0x00000000004799f4 : loopne 0x479a0b ; cmp al, 0xa ; jne 0x4799ab ; call rbx
0x000000000049610c : loopne 0x496125 ; clc ; jmp qword ptr [rax]
0x000000000049611c : loopne 0x49613a ; clc ; jmp qword ptr [rax]
0x000000000049612c : loopne 0x49614f ; clc ; jmp qword ptr [rax]
0x0000000000496470 : loopne 0x49646a ; clc ; push qword ptr [rax - 0xe] ; clc ; call qword ptr [rax]
0x00000000004965b4 : loopne 0x4965ce ; stc ; jmp rax
0x00000000004965b4 : loopne 0x4965d2 ; stc ; jmp rax
0x00000000004965b8 : loopne 0x4965d4 ; stc ; jmp rax
0x00000000004965bc : loopne 0x4965de ; stc ; call qword ptr [rax - 0x2f00070d]
0x0000000000496a7c : loopne 0x496abc ; stc ; push qword ptr [rax + 0x37] ; stc ; call qword ptr [rax]
0x0000000000496bc0 : loopne 0x496b61 ; stc ; push rax ; cwde ; stc ; call qword ptr [rax]
0x00000000004ac8d4 : loopne 0x4ac8b4 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004b2260 : loopne 0x4b223e ; std ; jmp qword ptr [rax]
0x00000000004b4910 : loopne 0x4b489e ; cmc ; jmp qword ptr [rcx]
0x00000000004b59ad : loopne 0x4b59a6 ; jmp qword ptr [rdx]
0x00000000004b8970 : loopne 0x4b89a3 ; clc ; call qword ptr [rax]
0x00000000004be730 : loopne 0x4be73d ; std ; jmp rsp
0x00000000004ac2ea : mov ah, 0x13 ; ret
0x000000000048cdc1 : mov ah, 0x24 ; pop rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x00000000004967dc : mov ah, 0x45 ; stc ; inc dword ptr [rbp + rax*2 - 7] ; call rsp
0x00000000004b7114 : mov ah, 0x4d ; add byte ptr [rax], al ; sub byte ptr [rcx - 0xa], bl ; jmp qword ptr [rsi]
0x00000000004b8f14 : mov ah, 0x6b ; add byte ptr [rax], al ; pop rax ; cwde ; clc ; call qword ptr [rdx]
0x00000000004ac790 : mov ah, 0xa5 ; ret
0x00000000004bcc14 : mov ah, 0xa8 ; add byte ptr [rax], al ; test al, 0x69 ; std ; jmp qword ptr [rdi]
0x0000000000473510 : mov ah, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x0000000000436410 : mov ah, 2 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000004ac0e4 : mov ah, bl ; push rsi ; ret
0x00000000004bdbc8 : mov ah, bl ; sti ; call qword ptr [rdx]
0x00000000004baa28 : mov ah, dl ; stc ; call rcx
0x000000000048f3b3 : mov al, 0 ; add byte ptr [rax], al ; ret
0x000000000043a36c : mov al, 0x43 ; add byte ptr [rdi + 0x6c3220], bh ; call rax
0x0000000000496668 : mov al, 0x44 ; stc ; inc dword ptr [rax + 0x44] ; stc ; call rax
0x0000000000436d30 : mov al, 0x48 ; mov dword ptr [rbp - 0x68], eax ; mov rdx, rax ; jmp 0x436d69
0x0000000000436dce : mov al, 0x48 ; mov dword ptr [rbp - 0x68], eax ; mov rdx, rax ; jmp 0x436e0b
0x0000000000496248 : mov al, 0x6e ; clc ; inc eax ; jo 0x49624e ; call rax
0x0000000000496bb4 : mov al, 0x98 ; stc ; inc eax ; cwde ; stc ; call rax
0x0000000000496be0 : mov al, 0x99 ; stc ; call rax
0x0000000000496c0c : mov al, 0x9d ; stc ; inc eax ; popfq ; stc ; call rax
0x00000000004b92d0 : mov al, 0xb5 ; clc ; call qword ptr [rcx]
0x00000000004b97f0 : mov al, 0xca ; clc ; call qword ptr [rbx]
0x00000000004b9820 : mov al, 0xca ; clc ; call qword ptr [rdx]
0x0000000000496310 : mov al, 0xcf ; clc ; call rax
0x0000000000496330 : mov al, 0xd8 ; clc ; call rax
0x000000000047abe7 : mov al, 0xe8 ; ret
0x00000000004ae596 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x00000000004b9211 : mov al, 0xf8 ; call qword ptr [rcx]
0x00000000004755ac : mov al, 0xff ; call qword ptr [rax + 0x8c28348]
0x0000000000473848 : mov al, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x0000000000435ff4 : mov al, 6 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000408554 : mov al, byte ptr [rax + 1] ; add byte ptr [rax], al ; ret
0x000000000045ee89 : mov al, byte ptr [rbx] ; add al, 0x16 ; ret
0x000000000042e706 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000042e724 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000042fe90 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x000000000042e6e0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000040858f : mov al, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042e6f0 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000042ae71 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004b84b4 : mov bh, 0x21 ; clc ; jmp qword ptr [rdx]
0x000000000043889a : mov bh, 0x28 ; add byte ptr [rbx - 0x76bef019], al ; ret 0xb8
0x0000000000406af1 : mov bh, 0x2b ; add byte ptr [rdx], al ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000045e617 : mov bh, 0x43 ; adc byte ptr [rax + rcx*4 + 0x63], al ; adc cl, byte ptr [rax + 1] ; ret
0x0000000000430da8 : mov bh, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x000000000045bd29 : mov bh, 0x75 ; nop ; jmp 0x45bcf5
0x00000000004ad5c4 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00000000004ba3fc : mov bh, 0xcb ; stc ; jmp qword ptr [rdx]
0x0000000000446798 : mov bh, 0xeb ; ret 0x1f0f
0x00000000004b1cfd : mov bh, 0xfd ; call rax
0x00000000004aecd3 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004baf38 : mov bh, ah ; stc ; jmp qword ptr [rax]
0x000000000043269e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041b93c : mov bl, 0x41 ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x00000000004ae6a3 : mov bl, 0x8e ; ret 0xdcd9
0x00000000004b4554 : mov bl, 0x9c ; cmc ; jmp qword ptr [rdx]
0x0000000000435a39 : mov bl, 0xa ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, rbp ; call rbx
0x00000000004b1cd1 : mov bl, 0xfd ; jmp qword ptr [rax]
0x00000000004bd23d : mov bl, bh ; jmp qword ptr [rdx]
0x000000000045eca4 : mov byte ptr [r8 + 0x23], cl ; ret
0x000000000045eca5 : mov byte ptr [rax + 0x23], cl ; ret
0x0000000000444745 : mov byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000414874 : mov byte ptr [rax + rbx], dh ; pop rbx ; ret
0x0000000000414873 : mov byte ptr [rax + rbx], sil ; pop rbx ; ret
0x0000000000471525 : mov byte ptr [rax + rdi - 1], 0 ; jmp 0x46d80f
0x0000000000434362 : mov byte ptr [rax - 0x39], cl ; ret 0xffc0
0x0000000000460288 : mov byte ptr [rax], 0 ; jmp 0x460222
0x00000000004b7018 : mov byte ptr [rcx], al ; ret
0x0000000000430af8 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000430468 : mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000430b6e : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000004304be : mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000430bf0 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x0000000000430540 : mov byte ptr [rdi + 0x18], dh ; ret
0x00000000004309a6 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000430386 : mov byte ptr [rdi + 2], dh ; ret
0x00000000004309c2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000004303a2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000004303e3 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000042742b : mov byte ptr [rdi - 1], dl ; ret
0x000000000040051e : mov byte ptr [rdi], 0 ; ret
0x0000000000430980 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x0000000000430360 : mov byte ptr [rdi], dh ; ret
0x000000000042aee3 : mov byte ptr [rdi], dl ; ret
0x000000000042feb9 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x000000000042e709 : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000042fee7 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x000000000042e727 : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000042fe92 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x000000000042e6e2 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000048d710 : mov byte ptr [rip + 0x236169], 8 ; ret
0x0000000000401014 : mov byte ptr [rip + 0x2c0c25], 1 ; ret
0x000000000047e3a4 : mov byte ptr [rip - 0x76b70008], dh ; ret
0x0000000000475949 : mov byte ptr [rsi + 0x1f0fffff], dl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x00000000004139cd : mov byte ptr [rsi + rbx], bh ; mov rax, rsi ; pop rbx ; ret
0x00000000004139cc : mov byte ptr [rsi + rbx], dil ; mov rax, rsi ; pop rbx ; ret
0x0000000000496694 : mov byte ptr [rsi - 7], 0xff ; push rsi ; stc ; jmp rsi
0x0000000000446873 : mov byte ptr [rsi], al ; jne 0x446857 ; mov rax, rsi ; ret
0x00000000004467ef : mov byte ptr [rsi], dl ; jne 0x4467df ; mov rax, rsi ; ret
0x00000000004ac0e2 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x00000000004ad423 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004b3bd4 : mov ch, 0x6c ; cmc ; jmp qword ptr [rdx]
0x000000000045b28a : mov ch, 0x89 ; ret 0xe283
0x00000000004b43a4 : mov ch, 0x8b ; cmc ; jmp qword ptr [rdx]
0x00000000004ae7bf : mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004af16a : mov ch, 0xab ; ret
0x00000000004b92b9 : mov ch, 0xf8 ; call qword ptr [rcx]
0x00000000004b92a1 : mov ch, 0xf8 ; call qword ptr [rdi]
0x00000000004bc5b1 : mov ch, 0xfa ; call qword ptr [rbx]
0x0000000000425166 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004bd535 : mov cl, 0 ; add byte ptr [rax - 0x74], cl ; sti ; jmp qword ptr [rdx]
0x000000000041bbdb : mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004b5bec : mov cl, 0xe7 ; cmc ; jmp qword ptr [rdx]
0x000000000041ec45 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x0000000000417174 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000004ae592 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000046410a : mov cl, ch ; ret
0x000000000045a82b : mov cl, dl ; and cl, 0xf ; je 0x45a857 ; ret
0x000000000043ecf4 : mov cs, ebx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004ae84c : mov cs, edi ; ret 0x8b36
0x000000000046028c : mov cs, word ptr [rax - 0x7d] ; ret
0x000000000044312c : mov cs, word ptr [rcx] ; test rax, rax ; je 0x44313e ; call rax
0x000000000042107e : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x000000000043d30d : mov cs, word ptr [rsp + rax + 0x29480000] ; ret 0x8b49
0x0000000000430380 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000048fe01 : mov dh, 0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040a7e6 : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040d770 : mov dh, 0 ; pop rbx ; ret
0x000000000040edce : mov dh, 0 ; ret
0x00000000004b54de : mov dh, 0x12 ; idiv bh ; sbb al, 0xd ; insd dword ptr [rdi], dx ; scasd eax, dword ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x000000000042aee1 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000041bdc4 : mov dh, 0x16 ; sub eax, edx ; ret
0x00000000004069f0 : mov dh, 0x17 ; test dl, dl ; jne 0x4069d6 ; ret
0x000000000046ef72 : mov dh, 0x30 ; add r12, 1 ; jmp 0x46ef43
0x000000000048dd1f : mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000004966b0 : mov dh, 0x43 ; stc ; inc dword ptr [rsi + 0x43] ; stc ; call rsi
0x0000000000472adf : mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004478b4 : mov dh, 0x46 ; or al, 0x89 ; ret 0xeac0
0x0000000000432271 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000432261 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000432231 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000432251 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000432241 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000043d91a : mov dh, 0x48 ; dec dword ptr [rcx - 0x7d] ; ret
0x000000000043d964 : mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4101
0x0000000000440780 : mov dh, 0x4a ; inc dword ptr [rcx - 0x78] ; add rcx, qword ptr [r9 + 0x39] ; ret
0x000000000045eca0 : mov dh, 0x4c ; and al, 0xeb ; mov byte ptr [r8 + 0x23], cl ; ret
0x00000000004ad582 : mov dh, 0x4e ; ret 0x474c
0x0000000000404ada : mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000456534 : mov dh, 0x53 ; or al, 0xf6 ; ret 0x7404
0x0000000000456b01 : mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x0000000000432275 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x0000000000432265 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x0000000000432235 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x0000000000432245 : mov dh, 0x56 ; sub eax, edx ; ret
0x00000000004353f1 : mov dh, 0x57 ; sbb byte ptr [rcx - 0xa], al ; ret 0x7401
0x000000000047c0dc : mov dh, 0x75 ; add byte ptr [rax - 0x7c], al ; test byte ptr [rdi], 0x84 ; ret 0x15
0x000000000045baf6 : mov dh, 0x79 ; add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xf748
0x00000000004b1cf4 : mov dh, 0xb6 ; std ; jmp rsp
0x00000000004449bd : mov dh, 0xc0 ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000048d9a0 : mov dh, 0xc0 ; movsxd rax, dword ptr [r11 + rax*4] ; add rax, r11 ; jmp rax
0x000000000048daa1 : mov dh, 0xc0 ; movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x00000000004762ad : mov dh, 0xc0 ; neg eax ; ret
0x00000000004760b3 : mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045ec06 : mov dh, 0xc0 ; ret
0x0000000000477cc4 : mov dh, 0xc1 ; cli ; add ebp, dword ptr [rcx] ; ret 0x294c
0x00000000004330c8 : mov dh, 0xc1 ; pop rbx ; ret
0x00000000004330f0 : mov dh, 0xc2 ; pop rbx ; ret
0x000000000040c5c6 : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004ae7c4 : mov dh, 0xc7 ; ret 0xe71f
0x000000000048ce86 : mov dh, 0xc9 ; movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x000000000041bdea : mov dh, 0xd2 ; sub eax, edx ; ret
0x0000000000418521 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000424244 : mov dh, 0xe ; sub eax, ecx ; ret
0x0000000000458fdf : mov dh, 0xf6 ; ret 0x7508
0x00000000004b9349 : mov dh, 0xf8 ; jmp qword ptr [rsi]
0x00000000004b1cf5 : mov dh, 0xfd ; jmp rsp
0x00000000004725ff : mov dh, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x000000000040a7f1 : mov dh, 2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040d3be : mov dh, 2 ; pop rbx ; ret
0x0000000000424241 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000041bdc1 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000418524 : mov dh, 7 ; sub eax, ecx ; ret
0x000000000043327e : mov dh, byte ptr [rdi + rbx*8 - 0xd] ; ret
0x00000000004b423d : mov dh, ch ; jmp qword ptr [rdx]
0x0000000000446795 : mov dl, 0x40 ; jle 0x446755 ; jmp 0x446762
0x0000000000496714 : mov dl, 0x46 ; stc ; inc dword ptr [rdx + 0x46] ; stc ; call rdx
0x00000000004b7189 : mov dl, 0xf6 ; jmp qword ptr [rsi]
0x00000000004b1cc1 : mov dl, 0xfd ; call qword ptr [rax]
0x00000000004b1cbd : mov dl, 0xfd ; dec eax ; mov dl, 0xfd ; call qword ptr [rax]
0x0000000000401181 : mov dl, 1 ; add byte ptr [rax], al ; call qword ptr [rbx + 0x10]
0x0000000000436272 : mov dl, 4 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000436192 : mov dl, 5 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000004274b0 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000477f83 : mov dword ptr [0x2d0], esi ; mov eax, esi ; ret
0x0000000000458239 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000458279 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000004590d9 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000045e1a5 : mov dword ptr [rax + 0x28], 0 ; pop rbx ; ret
0x000000000045823d : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000459177 : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000040df0a : mov dword ptr [rax + 8], 0 ; ret
0x0000000000405ffc : mov dword ptr [rax + 8], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000466f76 : mov dword ptr [rax + 8], edx ; ret
0x000000000041c3e2 : mov dword ptr [rax + rdx - 2], ecx ; ret
0x0000000000466ef5 : mov dword ptr [rax], 0 ; call r12
0x0000000000444c85 : mov dword ptr [rax], 0x16 ; or eax, 0xffffffff ; ret
0x00000000004139f0 : mov dword ptr [rax], 0xc ; xor eax, eax ; pop rbx ; ret
0x0000000000413ba0 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x000000000045e1f2 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x000000000043cfb5 : mov dword ptr [rax], ebx ; jmp 0x43cf7e
0x000000000043fa97 : mov dword ptr [rax], ebx ; mov eax, dword ptr [rsp + 0x24] ; jmp 0x43fa68
0x0000000000440bcf : mov dword ptr [rax], ebx ; mov eax, dword ptr [rsp + 0x2c] ; jmp 0x440ba0
0x000000000043c56f : mov dword ptr [rax], ecx ; mov eax, 7 ; jmp 0x43c542
0x00000000004587c5 : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000476205 : mov dword ptr [rax], edi ; pop rbx ; ret
0x0000000000458720 : mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000045ecb3 : mov dword ptr [rax], edx ; or eax, 0xffffffff ; ret
0x00000000004761f9 : mov dword ptr [rax], edx ; pop rbx ; ret
0x000000000044482f : mov dword ptr [rax], edx ; ret
0x000000000045e1e0 : mov dword ptr [rax], edx ; xor eax, eax ; pop rbx ; ret
0x00000000004593f1 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x0000000000467f9f : mov dword ptr [rbp + 0x10], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004663c9 : mov dword ptr [rbp - 0x100], eax ; call rsi
0x00000000004601e3 : mov dword ptr [rbp - 0x138], ecx ; call 0x41c408
0x0000000000439499 : mov dword ptr [rbp - 0x68], eax ; call rcx
0x0000000000436d32 : mov dword ptr [rbp - 0x68], eax ; mov rdx, rax ; jmp 0x436d67
0x0000000000436dd0 : mov dword ptr [rbp - 0x68], eax ; mov rdx, rax ; jmp 0x436e09
0x000000000044d79e : mov dword ptr [rbp - 0xb0], eax ; mov rdi, rbx ; call rax
0x00000000004658f9 : mov dword ptr [rbp - 0xe0], ebx ; call rax
0x0000000000466021 : mov dword ptr [rbp - 0xe0], ebx ; call rsi
0x00000000004427d7 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x000000000046b1de : mov dword ptr [rbx + 0x10], eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000046b192 : mov dword ptr [rbx + 0x10], eax ; add rsp, 0x30 ; pop rbx ; ret
0x000000000040a687 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x000000000045e498 : mov dword ptr [rbx + 0x10], eax ; mov rdx, rbp ; xor ecx, ecx ; jmp 0x45e46e
0x000000000040ad89 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000410ffb : mov dword ptr [rbx + 0x14], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000046b118 : mov dword ptr [rbx + 0x18], eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000483d85 : mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x000000000040d253 : mov dword ptr [rbx + 0x20], eax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x0000000000477fc3 : mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x00000000004449bf : mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000040d6ff : mov dword ptr [rbx + 0x40], esp ; mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040d2da : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x000000000040e671 : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040bbe2 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004582ce : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000458fa1 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040a637 : mov dword ptr [rbx + 0x90], eax ; pop rbx ; ret
0x000000000040d5a5 : mov dword ptr [rbx + 8], eax ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x00000000004427f7 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000040d76c : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000048c806 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004797d1 : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000040d702 : mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049167c : mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000004590dc : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000040d660 : mov dword ptr [rbx], edx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000408f0c : mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040d256 : mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000045a631 : mov dword ptr [rcx + 4], esi ; jne 0x45a642 ; mov dword ptr [rcx + 8], esi ; ret
0x000000000045a636 : mov dword ptr [rcx + 8], esi ; ret
0x000000000045f0e0 : mov dword ptr [rcx - 0x80], 0xb9743afa ; ret
0x00000000004b9c64 : mov dword ptr [rcx - 7], ecx ; jmp qword ptr [rdx]
0x000000000045f190 : mov dword ptr [rcx], 0x8348c889 ; ret 0x8401
0x000000000048f319 : mov dword ptr [rcx], edx ; add rsp, 8 ; ret
0x0000000000430b0d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x0000000000430b4b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x0000000000430bcd : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000004304bb : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043053d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043047d : mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000430580 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000004305a0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000430561 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000430c33 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x0000000000430583 : mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000040d1e3 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000042276a : mov dword ptr [rdi + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000430c15 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x0000000000430c53 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x0000000000430565 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000004649c8 : mov dword ptr [rdi + 0x300], eax ; ret
0x000000000046499c : mov dword ptr [rdi + 0x308], eax ; ret
0x0000000000422659 : mov dword ptr [rdi + 0x38], ecx ; ret
0x000000000040d213 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000048f351 : mov dword ptr [rdi + 0x98], esi ; ret
0x0000000000430b8d : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000004304dd : mov dword ptr [rdi + 0xe], ecx ; ret
0x0000000000430b2b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x0000000000430bad : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000043049b : mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000042ad25 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000042ab68 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000042ae08 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x000000000042acb5 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000042aaf8 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004309f7 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000042ac45 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000042aa88 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004303c7 : mov dword ptr [rdi + 3], edx ; ret
0x00000000004309d9 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000042aa18 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004303b9 : mov dword ptr [rdi + 4], edx ; ret
0x0000000000430a8b : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000042a9a8 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043042b : mov dword ptr [rdi + 5], edx ; ret
0x0000000000430aab : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000042a938 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043043b : mov dword ptr [rdi + 6], edx ; ret
0x0000000000430a49 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000430acb : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000042a8c8 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000430409 : mov dword ptr [rdi + 7], edx ; ret
0x000000000040d1e7 : mov dword ptr [rdi + 8], eax ; ret
0x000000000046bfc4 : mov dword ptr [rdi + 8], ecx ; ret
0x0000000000430a69 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000430a2b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000046cf04 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x00000000004303fb : mov dword ptr [rdi + 8], edx ; ret
0x000000000041c3e9 : mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000041c3f2 : mov dword ptr [rdi + rdx - 8], ecx ; ret
0x000000000048f30b : mov dword ptr [rdi + rsi*8], edx ; add rsp, 8 ; ret
0x0000000000427175 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004271b3 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000046bf2f : mov dword ptr [rdi - 0x10], ecx ; ret
0x00000000004274fc : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042a378 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004276dc : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042a2f8 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004278cc : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042a278 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000427a9d : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042a1e9 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000427c9d : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042a159 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000427e9d : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042a0c9 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042787d : mov dword ptr [rdi - 2], ecx ; ret
0x0000000000427695 : mov dword ptr [rdi - 2], edx ; ret
0x0000000000427879 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000427c59 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000042732f : mov dword ptr [rdi - 4], edx ; ret
0x0000000000427c56 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000427e56 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000428056 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000427179 : mov dword ptr [rdi - 8], ecx ; ret
0x00000000004271b7 : mov dword ptr [rdi - 8], edx ; ret
0x000000000042732c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427428 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000427374 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042a3f8 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000046d0ce : mov dword ptr [rdi], eax ; mov eax, 1 ; ret
0x00000000004224aa : mov dword ptr [rdi], eax ; pop rbx ; pop rbp ; ret
0x000000000046beb4 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000046bfbe : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000450536 : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004309c5 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000430a17 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000004309a4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000430384 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000004309f5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000004303c5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000430a47 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000430407 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000430a67 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000430417 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000041c3e7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000430428 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000430438 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000430448 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000041c3ef : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00000000004303b6 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000004303f8 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000422429 : mov dword ptr [rdi], ecx ; ret
0x0000000000430994 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000004309b2 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000430a04 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000400abb : mov dword ptr [rdi], edx ; ret
0x000000000046d0af : mov dword ptr [rdi], esi ; mov eax, 1 ; mov dword ptr [rdx], ecx ; ret
0x0000000000408553 : mov dword ptr [rdx + 0x140], ecx ; ret
0x000000000043b795 : mov dword ptr [rdx + 0x50], ecx ; mov dword ptr [rdx + 0x54], eax ; ret
0x000000000043b798 : mov dword ptr [rdx + 0x54], eax ; ret
0x000000000042ff17 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x000000000042e747 : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000042fef9 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x000000000042e739 : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000042ffab : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000042ff29 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x000000000042e759 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000042ffcb : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000042ff49 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x000000000042e769 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000042ff69 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000042ffeb : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000042e779 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000042ff89 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000042fe7b : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000042e6cb : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000040e7c8 : mov dword ptr [rdx + 8], ecx ; ret
0x0000000000471a77 : mov dword ptr [rdx], eax ; jmp 0x46dcec
0x000000000042fea4 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x000000000042fed2 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x000000000042fe24 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000434272 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000046d163 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000042e674 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000043401e : mov dword ptr [rdx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000004761e5 : mov dword ptr [rdx], eax ; pop rbx ; ret
0x00000000004585b6 : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000040e734 : mov dword ptr [rdx], ecx ; ret
0x00000000004106a4 : mov dword ptr [rdx], esp ; add byte ptr [rax + 0x6c0860], bh ; ret
0x0000000000444805 : mov dword ptr [rip + 0x27d2ed], eax ; je 0x444819 ; ret
0x00000000004385b6 : mov dword ptr [rip + 0x2879dc], edx ; pop rbx ; ret
0x0000000000438c1b : mov dword ptr [rip + 0x28b39f], edi ; pop rbx ; ret
0x0000000000438842 : mov dword ptr [rip + 0x28b778], eax ; pop rbx ; ret
0x0000000000438841 : mov dword ptr [rip + 0x28b778], r8d ; pop rbx ; ret
0x00000000004016fa : mov dword ptr [rip + 0x2be970], eax ; xor eax, eax ; ret
0x0000000000400e0b : mov dword ptr [rip + 0x2c031f], eax ; pop r12 ; ret
0x000000000045c5b0 : mov dword ptr [rsi + 0x28], eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000491159 : mov dword ptr [rsi + 0x28], eax ; pop rbx ; ret
0x000000000048f33b : mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000040f7cb : mov dword ptr [rsi], eax ; mov rax, r8 ; ret
0x0000000000467992 : mov dword ptr [rsi], eax ; ret
0x0000000000413331 : mov dword ptr [rsp + 0x10], ecx ; call rdx
0x000000000048faa7 : mov dword ptr [rsp + 0x10], ecx ; mov rsi, qword ptr [rbp] ; call r14
0x000000000046b55b : mov dword ptr [rsp + 0x18], esi ; mov edi, 0x6c11e0 ; call rax
0x000000000041332c : mov dword ptr [rsp + 0x20], eax ; mov qword ptr [rsp + 0x10], rcx ; call rdx
0x000000000041314a : mov dword ptr [rsp + 0x28], ebx ; call rax
0x0000000000413149 : mov dword ptr [rsp + 0x28], r11d ; call rax
0x000000000045eb50 : mov dword ptr [rsp + 0x30], eax ; jmp 0x45eb0a
0x0000000000413145 : mov dword ptr [rsp + 0x30], edx ; mov dword ptr [rsp + 0x28], r11d ; call rax
0x000000000047741b : mov dword ptr [rsp + 0x90], ebx ; call r12
0x000000000043ea2f : mov dword ptr [rsp + 8], eax ; call r12
0x000000000043bbcf : mov dword ptr [rsp + 8], eax ; call r14
0x000000000043c4ee : mov dword ptr [rsp + 8], eax ; call r15
0x00000000004351a6 : mov dword ptr [rsp + 8], eax ; call rbx
0x000000000041448d : mov dword ptr [rsp + 8], edx ; call 0x4106f6
0x000000000043de05 : mov dword ptr [rsp + 8], esi ; mov rsi, qword ptr [rsp + 0x58] ; call rax
0x000000000048cc26 : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000444935 : mov dword ptr [rsp - 2], edi ; fldcw word ptr [rsp - 2] ; ret
0x000000000043d57c : mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x00000000004396a5 : mov dword ptr [rsp], eax ; call rbx
0x0000000000413b9f : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x000000000045e1f1 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x000000000045ecb2 : mov dword ptr fs:[rax], edx ; or eax, 0xffffffff ; ret
0x000000000045e1df : mov dword ptr fs:[rax], edx ; xor eax, eax ; pop rbx ; ret
0x000000000045ed18 : mov dword ptr fs:[rax], edx ; xor eax, eax ; ret
0x0000000000471a76 : mov dword ptr fs:[rdx], eax ; jmp 0x46dced
0x0000000000434271 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000043401d : mov dword ptr fs:[rdx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000427690 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000430370 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000043316f : mov eax, 0x10 ; pop rbx ; ret
0x0000000000416657 : mov eax, 0x16 ; je 0x416667 ; ret
0x0000000000433192 : mov eax, 0x20 ; pop rbx ; ret
0x000000000043318b : mov eax, 0x30 ; pop rbx ; ret
0x0000000000433184 : mov eax, 0x40 ; pop rbx ; ret
0x000000000048fc35 : mov eax, 0x41c00149 ; jmp rax
0x00000000004ac6db : mov eax, 0x45155e93 ; ret 0x591c
0x000000000041c84a : mov eax, 0x48fffffb ; mov eax, edi ; ret
0x000000000043317d : mov eax, 0x60 ; pop rbx ; ret
0x0000000000436ef6 : mov eax, 0x64 ; test edx, edx ; cmovne eax, edx ; ret
0x000000000045e9e0 : mov eax, 0x66 ; syscall ; ret
0x000000000045ea00 : mov eax, 0x68 ; syscall ; ret
0x000000000045e9f0 : mov eax, 0x6b ; syscall ; ret
0x000000000045ea10 : mov eax, 0x6c ; syscall ; ret
0x00000000004106a8 : mov eax, 0x6c0860 ; ret
0x0000000000438a8a : mov eax, 0x6c3fc0 ; ret
0x0000000000433176 : mov eax, 0x80 ; pop rbx ; ret
0x00000000004628f4 : mov eax, 0x83ffffd4 ; clc ; inc dword ptr [rcx - 0x77] ; ret 0x850f
0x00000000004341c6 : mov eax, 0x894c1f74 ; ret 0x6348
0x00000000004672f5 : mov eax, 0x89fffffb ; ret 0xc083
0x0000000000464a83 : mov eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x000000000045b360 : mov eax, 0xc9 ; syscall ; ret
0x0000000000437062 : mov eax, 0xca ; syscall ; pop rdx ; pop rsi ; ret
0x00000000004bdbc5 : mov eax, 0xdc880000 ; sti ; call qword ptr [rdx]
0x00000000004bdbad : mov eax, 0xdc900000 ; sti ; call qword ptr [rax]
0x000000000043b857 : mov eax, 0xffffffff ; cmovns eax, edx ; ret
0x0000000000409355 : mov eax, 0xffffffff ; pop r15 ; ret
0x0000000000409ddd : mov eax, 0xffffffff ; pop rbp ; ret
0x0000000000441f77 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040a0d4 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000040a641 : mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040d740 : mov eax, 0xffffffff ; ret
0x000000000046d0b1 : mov eax, 1 ; mov dword ptr [rdx], ecx ; ret
0x000000000045054d : mov eax, 1 ; pop r13 ; ret
0x000000000045047f : mov eax, 1 ; pop r14 ; ret
0x0000000000461f9a : mov eax, 1 ; pop r15 ; ret
0x000000000040dd72 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043371b : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000046829f : mov eax, 1 ; pop rbx ; ret
0x0000000000438576 : mov eax, 1 ; ret
0x000000000048fbe0 : mov eax, 2 ; add rsp, 8 ; ret
0x000000000045a891 : mov eax, 2 ; ret
0x000000000045a8a1 : mov eax, 3 ; ret
0x000000000048fbd0 : mov eax, 4 ; add rsp, 8 ; ret
0x000000000045a8b1 : mov eax, 4 ; ret
0x000000000045a8c1 : mov eax, 5 ; ret
0x000000000045a8d1 : mov eax, 6 ; ret
0x000000000043c571 : mov eax, 7 ; jmp 0x43c540
0x000000000045a8e1 : mov eax, 7 ; ret
0x000000000048fbb2 : mov eax, 8 ; add rsp, 8 ; ret
0x0000000000433199 : mov eax, 8 ; pop rbx ; ret
0x00000000004585ec : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000040d30c : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x0000000000409e83 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000040d4f8 : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x000000000040d8b8 : mov eax, dword ptr [rax + 0x40] ; jmp rax
0x00000000004839e3 : mov eax, dword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000040dd0c : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x00000000004578b4 : mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000047a260 : mov eax, dword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x000000000046b711 : mov eax, dword ptr [rax + 8] ; ret
0x000000000044484f : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000048f2b1 : mov eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000471523 : mov eax, dword ptr [rax] ; mov byte ptr [rax + rdi - 1], 0 ; jmp 0x46d811
0x0000000000491679 : mov eax, dword ptr [rax] ; mov qword ptr [rbx], r8 ; pop rbx ; ret
0x00000000004682af : mov eax, dword ptr [rax] ; ret
0x00000000004355f5 : mov eax, dword ptr [rbp - 0x48] ; call rax
0x000000000043a031 : mov eax, dword ptr [rbp - 0x60] ; call rax
0x00000000004696e8 : mov eax, dword ptr [rbp] ; add rax, qword ptr [rdx + 8] ; call rax
0x0000000000476201 : mov eax, dword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x000000000045e748 : mov eax, dword ptr [rbx + 8] ; test rax, rax ; je 0x45e75a ; call rax
0x000000000048e9fd : mov eax, dword ptr [rbx] ; movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x000000000045e94d : mov eax, dword ptr [rcx + 0x10] ; test rax, rax ; je 0x45e963 ; call rax
0x000000000042e744 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000432dd1 : mov eax, dword ptr [rcx + 4] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042e756 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000042e766 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000042e776 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000042e786 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000041eeea : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000004207c2 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000042fed0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x000000000042e710 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000042fe21 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x000000000042e671 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000042fea1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x000000000042e6f1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000465d02 : mov eax, dword ptr [rdi + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000045936f : mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x000000000040e740 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000040e768 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004578b1 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000040ea61 : mov eax, dword ptr [rdi + 0x68] ; ret
0x0000000000475ab8 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x475ad0 ; ret
0x000000000048f2c1 : mov eax, dword ptr [rdi + 0x90] ; ret
0x000000000048f321 : mov eax, dword ptr [rdi + 0x98] ; ret
0x000000000048f361 : mov eax, dword ptr [rdi + 0xa0] ; ret
0x000000000048f3c1 : mov eax, dword ptr [rdi + 0xa8] ; ret
0x000000000048f3b1 : mov eax, dword ptr [rdi + 0xb0] ; ret
0x000000000048f371 : mov eax, dword ptr [rdi + 0xb8] ; ret
0x000000000046b6b1 : mov eax, dword ptr [rdi] ; cmp rax, rsi ; je 0x46b6c7 ; ret
0x0000000000491380 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x491397 ; ret
0x000000000045788b : mov eax, dword ptr [rdx + 0x48] ; cmp eax, dword ptr [rdx + 0x4c] ; cmovne eax, ecx ; ret
0x0000000000433279 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x433269 ; ret
0x000000000041ec46 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000040b564 : mov eax, dword ptr [rdx] ; add byte ptr [rdx + 0x48], bl ; cwde ; ret
0x0000000000409de8 : mov eax, dword ptr [rdx] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000048fe5c : mov eax, dword ptr [rdx] ; add rsp, 8 ; ret
0x00000000004587c7 : mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000046789b : mov eax, dword ptr [rdx] ; ret
0x000000000040e721 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x40e720 ; ret
0x000000000048c7c0 : mov eax, dword ptr [rip + 0x237792] ; ret
0x000000000046798b : mov eax, dword ptr [rip + 0x25c0f7] ; mov qword ptr [rsi], rax ; ret
0x0000000000441e31 : mov eax, dword ptr [rip + 0x281439] ; ret
0x0000000000439831 : mov eax, dword ptr [rip + 0x28a7d1] ; ret
0x000000000040ea41 : mov eax, dword ptr [rip + 0x2b1659] ; ret
0x0000000000465784 : mov eax, dword ptr [rsi + 0x10] ; add rax, qword ptr [r15] ; call rax
0x000000000048fea1 : mov eax, dword ptr [rsi] ; add rsp, 8 ; ret
0x0000000000458722 : mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000465e34 : mov eax, dword ptr [rsp + 0x10] ; add rax, qword ptr [rbx] ; call rax
0x0000000000433334 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048f396 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x00000000004352ca : mov eax, dword ptr [rsp + 0x10] ; call rax
0x0000000000401286 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000043fa99 : mov eax, dword ptr [rsp + 0x24] ; jmp 0x43fa66
0x0000000000440bd1 : mov eax, dword ptr [rsp + 0x2c] ; jmp 0x440b9e
0x000000000043cfb0 : mov eax, dword ptr [rsp + 0x30] ; mov qword ptr [rax], rbx ; jmp 0x43cf83
0x000000000046b3eb : mov eax, dword ptr [rsp + 0x48] ; add rsp, 0x78 ; ret
0x000000000046b25d : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x48 ; ret
0x000000000045ed96 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x28 ; ret
0x0000000000475ecf : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043a388 : mov eax, dword ptr [rsp] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000046a097 : mov eax, dword ptr [rsp] ; add rsp, 0x48 ; jmp r11
0x00000000004682ae : mov eax, dword ptr fs:[rax] ; ret
0x000000000044e648 : mov eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000413d42 : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004123e1 : mov eax, eax ; jmp 0x41202b
0x0000000000474e3c : mov eax, eax ; jmp 0x474c59
0x000000000040f8e3 : mov eax, eax ; nop dword ptr [rax] ; ret
0x000000000040f7ce : mov eax, eax ; ret
0x000000000040b4ea : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000408f0a : mov eax, ebp ; mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004577f9 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000408286 : mov eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000044be33 : mov eax, ebp ; pop rbp ; ret
0x000000000045e8fb : mov eax, ebp ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000434cf0 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000040f1a5 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004680c2 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044bdb5 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000046d043 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000468548 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000408614 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004086e9 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000434b5e : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000040a68b : mov eax, ebx ; pop rbx ; ret
0x000000000046cf07 : mov eax, ecx ; adc eax, eax ; ret
0x0000000000459fe9 : mov eax, ecx ; jmp 0x459e4b
0x0000000000401a63 : mov eax, ecx ; pop r13 ; ret
0x00000000004019e9 : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000446907 : mov eax, ecx ; pop rbx ; ret
0x000000000045afa9 : mov eax, ecx ; ret
0x000000000045ee90 : mov eax, edi ; nop word ptr [rax + rax] ; ret
0x000000000040fc18 : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040ea71 : mov eax, edi ; ret
0x0000000000483d2e : mov eax, edx ; add rsp, 0x28 ; ret
0x0000000000476373 : mov eax, edx ; add rsp, 0x38 ; ret
0x0000000000477f5b : mov eax, edx ; jle 0x477f66 ; ret
0x0000000000456fe5 : mov eax, edx ; pop r12 ; ret
0x000000000045a5ac : mov eax, edx ; pop r14 ; ret
0x0000000000467827 : mov eax, edx ; pop rbp ; ret
0x000000000045033b : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000414b79 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041032f : mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000408480 : mov eax, edx ; pop rbx ; ret
0x0000000000416e58 : mov eax, edx ; ret
0x000000000046b966 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x000000000045e62d : mov eax, esi ; pop r14 ; ret
0x000000000040769a : mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000004139d1 : mov eax, esi ; pop rbx ; ret
0x00000000004467f4 : mov eax, esi ; ret
0x000000000045b44b : mov eax, esp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000422c9b : mov eax, esp ; pop r12 ; ret
0x000000000040cc6c : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041643e : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040cc6b : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000045e8fa : mov eax, r13d ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000044e647 : mov eax, r8d ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000044e599 : mov eax, r8d ; ret
0x00000000004351cf : mov ebp, 0x49fffdfa ; mov edi, dword ptr [rbp] ; call rbx
0x00000000004be0ed : mov ebp, 0x58900000 ; cld ; call rbx
0x0000000000403564 : mov ebp, 0x80 ; xor esi, esi ; call rax
0x000000000040613f : mov ebp, 0x89490001 ; ret 0x8d48
0x000000000044da5d : mov ebp, 0x8949004a ; ror byte ptr [rax - 0x77], 1 ; ret 0xe5e8
0x00000000004a687d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x00000000004ba07f : mov ebp, 0xd1cfff9 ; test byte ptr [rcx - 7], ch ; jmp qword ptr [rdx]
0x0000000000459938 : mov ebp, 0xf80148c0 ; ret
0x0000000000459bbc : mov ebp, 0xf80148c6 ; ret
0x00000000004ad306 : mov ebp, 0xfb67d10d ; ret
0x0000000000478963 : mov ebp, dword ptr [rbp - 0xa8] ; jmp 0x47897f
0x000000000048f63d : mov ebp, dword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000046b96c : mov ebp, ecx ; jmp rdx
0x00000000004621f3 : mov ebp, edx ; mov r9, rdx ; mov r10, rax ; jmp 0x462189
0x00000000004b4911 : mov ebp, esi ; jmp qword ptr [rcx]
0x0000000000400f91 : mov ebp, esp ; ja 0x400f9c ; pop rbp ; ret
0x0000000000414a5e : mov ebx, 0x48000021 ; mov eax, ebx ; pop rbx ; ret
0x0000000000401e0d : mov ebx, 0x80 ; call rax
0x0000000000437094 : mov ebx, 0xafb8341 ; je 0x4370a3 ; ret
0x00000000004a687b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x00000000004bd539 : mov ebx, dr1 ; jmp qword ptr [rdx]
0x000000000043a905 : mov ebx, dword ptr [rbx + 0x28] ; test rbx, rbx ; jne 0x43a8e9 ; jmp 0x43a8db
0x000000000046a40f : mov ebx, dword ptr [rsp] ; add rsp, 0x30 ; jmp r11
0x000000000046a4ef : mov ebx, dword ptr [rsp] ; add rsp, 0x30 ; ret
0x000000000040d6aa : mov ebx, edi ; je 0x40d6c0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004bd345 : mov ebx, edi ; jmp qword ptr [rdx]
0x0000000000491174 : mov ebx, edi ; test eax, eax ; jne 0x491187 ; pop rbx ; ret
0x0000000000444246 : mov ebx, edi ; test rax, rax ; je 0x444256 ; call rax
0x000000000047bb39 : mov ecx, 0x1b8 ; add byte ptr [rax + 1], cl ; ret
0x0000000000496235 : mov ecx, 0xba90fff8 ; clc ; jmp qword ptr [rax]
0x00000000004a6879 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x00000000004258e5 : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x000000000040e731 : mov ecx, dword ptr [rdi] ; mov qword ptr [rdx], rcx ; ret
0x000000000041ec43 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000427c53 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000427e53 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000428053 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004303a0 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000004303e1 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000042ad23 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000042acb3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000042ac43 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000042ab65 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000042aaf5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000042aa85 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000042aa15 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000042a9a5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000042a935 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000042a8c5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000042ae05 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000430381 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000466e6d : mov ecx, dword ptr [rsp + 0x30] ; call r9
0x000000000046b807 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000046b795 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x50 ; jmp qword ptr [rax]
0x00000000004465b4 : mov ecx, eax ; jmp 0x44649c
0x0000000000407a7b : mov ecx, edx ; jmp 0x4079ac
0x00000000004621f6 : mov ecx, edx ; mov r10, rax ; jmp 0x462186
0x000000000040dd07 : mov ecx, edx ; xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000416655 : mov ecx, esi ; mov eax, 0x16 ; je 0x416669 ; ret
0x000000000040100c : mov edi, 0x4b2360 ; call rax
0x00000000004be305 : mov edi, 0x5ce80000 ; cld ; call qword ptr [rax]
0x0000000000401051 : mov edi, 0x6bfef0 ; call rax
0x0000000000464a06 : mov edi, 0x6c11a0 ; call rax
0x0000000000464a72 : mov edi, 0x6c11a0 ; pop rbx ; pop rbp ; jmp rax
0x000000000046b6df : mov edi, 0x6c11e0 ; add rsp, 8 ; jmp rax
0x0000000000438288 : mov edi, 0x6c11e0 ; call rax
0x0000000000469ffb : mov edi, 0x6c11e0 ; jmp rax
0x0000000000400fa2 : mov edi, 0x6c1c30 ; jmp rax
0x0000000000400fe2 : mov edi, 0x6c1c30 ; jmp rdx
0x000000000040277b : mov edi, 0x6c20c0 ; call rbx
0x000000000040282b : mov edi, 0x6c2140 ; call rax
0x000000000040308e : mov edi, 0x6c21a0 ; call rax
0x000000000043a36f : mov edi, 0x6c3220 ; call rax
0x0000000000402b2f : mov edi, 0x6c32a0 ; call rax
0x0000000000402774 : mov edi, 0x6c32a0 ; call rbx
0x0000000000475e71 : mov edi, 0x6c3640 ; call rax
0x000000000048d5d4 : mov edi, 0x83480170 ; rol byte ptr [rbx], 0xeb ; ret
0x00000000004be2a5 : mov edi, 0x83980000 ; cld ; call qword ptr [rax]
0x0000000000445f41 : mov edi, 0x8948fffd ; ret
0x00000000004be2d5 : mov edi, 0xa3380000 ; cld ; call qword ptr [rax]
0x00000000004be335 : mov edi, 0xbc880000 ; cld ; call qword ptr [rax]
0x000000000040cee8 : mov edi, 0xc48348ff ; sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000433074 : mov edi, 0xf000000 ; popfq ; ret 0xea81
0x000000000048f065 : mov edi, 1 ; call r14
0x0000000000401817 : mov edi, 1 ; call rax
0x000000000048f8ec : mov edi, 1 ; jmp rax
0x00000000004b7399 : mov edi, dr0 ; jmp qword ptr [rbx]
0x0000000000439495 : mov edi, dword ptr [rax + 0x18] ; mov qword ptr [rbp - 0x68], rax ; call rcx
0x00000000004594e8 : mov edi, dword ptr [rax + 0x40] ; jmp 0x4594b4
0x00000000004351a3 : mov edi, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000048f59e : mov edi, dword ptr [rbp - 8] ; leave ; ret
0x00000000004368d9 : mov edi, dword ptr [rbp] ; call r12
0x0000000000434dfa : mov edi, dword ptr [rbp] ; call rbx
0x00000000004397ca : mov edi, dword ptr [rbx + 0x18] ; call rax
0x00000000004368e8 : mov edi, dword ptr [rbx] ; call r12
0x000000000046a43e : mov edi, dword ptr [rdi + 0x28] ; call r11
0x000000000040ad40 : mov edi, dword ptr [rdi + 0x70] ; jmp 0x436f65
0x0000000000434da8 : mov edi, dword ptr [rdi] ; call rbx
0x00000000004ad5c6 : mov edi, dword ptr [rdx] ; ret
0x0000000000476115 : mov edi, dword ptr [rip + 0x24d535] ; call rax
0x000000000047602b : mov edi, dword ptr [rip + 0x24d61f] ; jmp rax
0x0000000000434d67 : mov edi, dword ptr [rsi] ; call rbx
0x0000000000441be0 : mov edi, dword ptr [rsp + 0x10] ; call r12
0x0000000000441cbd : mov edi, dword ptr [rsp + 0x10] ; call r15
0x00000000004637b1 : mov edi, dword ptr [rsp + 0x30] ; call rax
0x0000000000408a21 : mov edi, dword ptr [rsp + 0x38] ; call 0x414c96
0x000000000043bbcb : mov edi, dword ptr [rsp + 0x38] ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000043c4ea : mov edi, dword ptr [rsp + 0x38] ; mov dword ptr [rsp + 8], eax ; call r15
0x000000000043bad2 : mov edi, dword ptr [rsp + 0x38] ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000043ea2b : mov edi, dword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call r12
0x000000000043c20a : mov edi, dword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000043f3dc : mov edi, dword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call r15
0x000000000043bf1f : mov edi, dword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000043fd3a : mov edi, dword ptr [rsp + 0x50] ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000043d764 : mov edi, dword ptr [rsp + 0x50] ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000401281 : mov edi, dword ptr [rsp + 0xc] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000004352c5 : mov edi, dword ptr [rsp + 8] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000004351f0 : mov edi, dword ptr [rsp] ; call rbx
0x000000000045aa34 : mov edi, dword ptr [rsp] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000004467ed : mov edi, eax ; mov byte ptr [rsi], dl ; jne 0x4467e1 ; mov rax, rsi ; ret
0x0000000000408a05 : mov edi, ebp ; call 0x414c94
0x000000000046c557 : mov edi, ebp ; call 0x47b759
0x0000000000479b26 : mov edi, ebp ; call qword ptr [rbx]
0x0000000000479ae9 : mov edi, ebp ; call rax
0x0000000000436539 : mov edi, ebp ; call rbx
0x0000000000457c14 : mov edi, ebp ; xor r8d, r8d ; call r12
0x00000000004074f5 : mov edi, ebx ; call 0x433744
0x0000000000441de7 : mov edi, ebx ; call r12
0x000000000043a73c : mov edi, ebx ; call r14
0x00000000004399aa : mov edi, ebx ; call r15
0x0000000000456db0 : mov edi, ebx ; call r8
0x0000000000409a25 : mov edi, ebx ; call rax
0x0000000000434ced : mov edi, ebx ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000040d374 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040d4f4 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000047124f : mov edi, edi ; call 0x40d4a4
0x000000000044e354 : mov edi, edi ; call 0x45a5c4
0x0000000000435ace : mov edi, edi ; call rbx
0x0000000000446871 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x446859 ; mov rax, rsi ; ret
0x000000000045280a : mov edi, esi ; call 0x414c98
0x0000000000445c61 : mov edi, esi ; call 0x421e94
0x0000000000435aae : mov edi, esi ; call rbx
0x00000000004355f2 : mov edi, esi ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000043a02e : mov edi, esi ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x0000000000491a29 : mov edi, esp ; call r12
0x0000000000415314 : mov edi, esp ; call rax
0x0000000000435a65 : mov edi, esp ; call rbx
0x0000000000466dbb : mov edi, esp ; pop r12 ; pop r13 ; jmp rax
0x0000000000466dba : mov edi, r12d ; pop r12 ; pop r13 ; jmp rax
0x000000000045e82e : mov edx, 0x20be8ff ; sti ; dec dword ptr [rax - 0x77] ; ret
0x0000000000438593 : mov edx, 0xc0850028 ; je 0x4385a7 ; ret
0x00000000004aca7e : mov edx, 0xcac982a4 ; call 0xffffffffaf0d68fe
0x000000000046a6e9 : mov edx, 0xffffffff ; mov eax, edx ; ret
0x000000000046a6f6 : mov edx, 1 ; mov eax, edx ; ret
0x000000000045e8cd : mov edx, dword ptr [rax + 0x18] ; test rdx, rdx ; je 0x45e8e3 ; call rdx
0x0000000000447b1b : mov edx, dword ptr [rax*8 + 0x4a6ba0] ; jmp rdx
0x000000000044b370 : mov edx, dword ptr [rax*8 + 0x4a6ca0] ; jmp rdx
0x000000000044b24c : mov edx, dword ptr [rax*8 + 0x4a6da0] ; jmp rdx
0x000000000044b162 : mov edx, dword ptr [rax*8 + 0x4a6ea0] ; jmp rdx
0x000000000044b114 : mov edx, dword ptr [rax*8 + 0x4a6fa0] ; jmp rdx
0x000000000044af2d : mov edx, dword ptr [rax*8 + 0x4a70a0] ; jmp rdx
0x0000000000446dbd : mov edx, dword ptr [rax*8 + 0x4a71a0] ; jmp rdx
0x0000000000452f95 : mov edx, dword ptr [rax*8 + 0x4a75c0] ; jmp rdx
0x0000000000450ccc : mov edx, dword ptr [rax*8 + 0x4a76c0] ; jmp rdx
0x0000000000452b8c : mov edx, dword ptr [rax*8 + 0x4a77c0] ; jmp rdx
0x0000000000452b4a : mov edx, dword ptr [rax*8 + 0x4a78c0] ; jmp rdx
0x0000000000452aee : mov edx, dword ptr [rax*8 + 0x4a79c0] ; jmp rdx
0x0000000000451ecc : mov edx, dword ptr [rax*8 + 0x4a7ac0] ; jmp rdx
0x00000000004585b8 : mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000045afd8 : mov edx, dword ptr [rax] ; test edx, edx ; jne 0x45afd7 ; ret
0x00000000004761e1 : mov edx, dword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000040ac4e : mov edx, dword ptr [rbx + 0x40] ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000004207bf : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000041eeed : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000493049 : mov edx, dword ptr [rdi + 0x20] ; test rdx, rdx ; je 0x493060 ; call rdx
0x00000000004761f5 : mov edx, dword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x00000000004303c2 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000004303b3 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000430403 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000430413 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000427691 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000427a50 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004272e1 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004309b0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000042ad90 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000430a01 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000042abd1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000430991 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000430371 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000048ef89 : mov edx, dword ptr [rsp] ; mov edi, 1 ; call rax
0x0000000000401e33 : mov edx, eax ; jmp 0x401e4e
0x0000000000407cea : mov edx, eax ; jmp 0x407d02
0x0000000000436d36 : mov edx, eax ; jmp 0x436d63
0x0000000000436dd4 : mov edx, eax ; jmp 0x436e05
0x00000000004621f9 : mov edx, eax ; jmp 0x462183
0x000000000046a6b2 : mov edx, eax ; sub edx, ecx ; mov eax, edx ; ret
0x0000000000439601 : mov edx, ebp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x0000000000479b21 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x0000000000479ae4 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000045e49c : mov edx, ebp ; xor ecx, ecx ; jmp 0x45e46a
0x0000000000409a22 : mov edx, esi ; mov rdi, rbx ; call rax
0x0000000000445c5e : mov edx, esp ; mov rdi, r14 ; call 0x421e97
0x000000000046a6b1 : mov edx, r8d ; sub edx, ecx ; mov eax, edx ; ret
0x0000000000458a49 : mov es, edx ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004bb185 : mov es, word ptr [rax] ; add al, bh ; clc ; stc ; call rax
0x00000000004bb24d : mov es, word ptr [rax] ; add byte ptr [rax - 3], dh ; stc ; jmp qword ptr [rdx]
0x0000000000450c82 : mov esi, 0x10 ; jmp rdx
0x0000000000491a23 : mov esi, 0x40 ; mov rdi, rsp ; call r12
0x000000000047b92f : mov esi, 0x448d4813 ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043b792 : mov esi, 0x4a890b40 ; push rax ; mov dword ptr [rdx + 0x54], eax ; ret
0x000000000047b41f : mov esi, 0x4b1058 ; xor eax, eax ; call 0x467729
0x00000000004be1ad : mov esi, 0x5ba00000 ; cld ; jmp qword ptr [rax]
0x000000000044e593 : mov esi, 0x77cf390e ; fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x000000000047e40c : mov esi, 0x8349016b ; ret
0x0000000000467bd0 : mov esi, 0x8b480025 ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000041535a : mov esi, 0xba00494a ; ret 0xc
0x00000000004a687e : mov esi, 0xc2c1c0bf ; ret
0x0000000000435af0 : mov esi, 1 ; call rbx
0x0000000000435cdd : mov esi, 1 ; mov rdi, r12 ; call rbx
0x0000000000435ba9 : mov esi, 1 ; mov rdi, r13 ; call rbx
0x0000000000435b21 : mov esi, 1 ; mov rdi, r14 ; call rbx
0x0000000000435f67 : mov esi, 1 ; mov rdi, rbp ; call rbx
0x0000000000456daa : mov esi, 1 ; mov rdi, rbx ; call r8
0x000000000045659f : mov esi, 1 ; mov rdi, rbx ; call rax
0x0000000000435f5b : mov esi, 2 ; mov rdi, r12 ; call rbx
0x0000000000435cce : mov esi, 2 ; mov rdi, r13 ; call rbx
0x0000000000435b9a : mov esi, 2 ; mov rdi, r14 ; call rbx
0x0000000000435b12 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x00000000004364bc : mov esi, 3 ; mov rdi, r12 ; call rbx
0x0000000000436513 : mov esi, 3 ; mov rdi, r13 ; call rbx
0x0000000000436593 : mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000436693 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x000000000048f59a : mov esi, dword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048faac : mov esi, dword ptr [rbp] ; call r14
0x000000000046a43a : mov esi, dword ptr [rdi + 0x20] ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x000000000048fa58 : mov esi, dword ptr [rdi] ; call r14
0x0000000000438fb7 : mov esi, dword ptr [rdx + rbx + 0x20] ; call rax
0x0000000000439604 : mov esi, dword ptr [rsp + 0x18] ; call rbx
0x000000000041473b : mov esi, dword ptr [rsp + 0x18] ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x000000000041530f : mov esi, dword ptr [rsp + 0x28] ; mov rdi, r12 ; call rax
0x000000000043de0a : mov esi, dword ptr [rsp + 0x58] ; call rax
0x0000000000414d5b : mov esi, dword ptr [rsp] ; jmp rax
0x0000000000400fe0 : mov esi, eax ; mov edi, 0x6c1c30 ; jmp rdx
0x000000000047110e : mov esi, eax ; mov r12, rbx ; jmp 0x46d410
0x0000000000400cd7 : mov esi, eax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400ce4 ; ret
0x00000000004b4315 : mov esi, ebp ; jmp qword ptr [rdx]
0x0000000000476113 : mov esi, ebx ; mov edi, dword ptr [rip + 0x24d535] ; call rax
0x000000000040d3b9 : mov esi, ecx ; jbe 0x40d35d ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000048f8ea : mov esi, edi ; mov edi, 1 ; jmp rax
0x000000000048f941 : mov esi, esi ; mov rdi, rbx ; call r15
0x0000000000433f9a : mov esi, esp ; call 0x434b09
0x0000000000479b24 : mov esi, esp ; mov edi, ebp ; call qword ptr [rbx]
0x0000000000479ae7 : mov esi, esp ; mov edi, ebp ; call rax
0x000000000041bc21 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000041bc51 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000041bc41 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000004b1e04 : mov esp, 0x4cfffdc2 ; ret
0x00000000004b641c : mov esp, 0x50000040 ; sahf ; cmc ; call rcx
0x0000000000477e14 : mov esp, 0x8024 ; add byte ptr [rax + 1], cl ; ret 0x894c
0x000000000046edbe : mov esp, 0x8300001a ; ret 0x8308
0x0000000000477404 : mov esp, 0x9024 ; add byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004b1e30 : mov esp, 0xbcfffdc2 ; ret 0xfffd
0x00000000004a15a0 : mov esp, 0xbf00000f ; sldt word ptr [rax] ; ret 0xf
0x00000000004195fb : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x00000000004ba157 : mov esp, 0xd1cfff9 ; jne 0x4ba122 ; stc ; jmp qword ptr [rdx]
0x00000000004b1e70 : mov esp, 0xdcfffdc6 ; ret
0x000000000040037a : mov esp, 0xf004938 ; xchg eax, esp ; ret
0x000000000042289b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x000000000041bc31 : mov esp, 0xf80148c0 ; ret
0x000000000044c9c0 : mov esp, 0xfc239c1 ; ret 0xb841
0x0000000000400e31 : mov esp, eax ; call 0x433068
0x000000000046b969 : mov esp, eax ; mov rbp, r9 ; jmp rdx
0x0000000000471111 : mov esp, ebx ; jmp 0x46d40d
0x000000000048f641 : mov esp, ecx ; ret
0x000000000044110e : mov fs, ebp ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x8b49
0x00000000004145fa : mov fs, ecx ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000044006a : mov gs, ecx ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x8b49
0x0000000000458238 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000458278 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000004590d8 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000045823c : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000459176 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000040df09 : mov qword ptr [rax + 8], 0 ; ret
0x0000000000405ffb : mov qword ptr [rax + 8], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000466f75 : mov qword ptr [rax + 8], rdx ; ret
0x0000000000466ef4 : mov qword ptr [rax], 0 ; call r12
0x000000000043cfb4 : mov qword ptr [rax], rbx ; jmp 0x43cf7f
0x000000000043fa96 : mov qword ptr [rax], rbx ; mov eax, dword ptr [rsp + 0x24] ; jmp 0x43fa69
0x0000000000440bce : mov qword ptr [rax], rbx ; mov eax, dword ptr [rsp + 0x2c] ; jmp 0x440ba1
0x00000000004587c4 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000476204 : mov qword ptr [rax], rdi ; pop rbx ; ret
0x000000000045871f : mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00000000004761f8 : mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000044482e : mov qword ptr [rax], rdx ; ret
0x00000000004593f0 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000467f9e : mov qword ptr [rbp + 0x10], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004663c8 : mov qword ptr [rbp - 0x100], r8 ; call rsi
0x00000000004601e2 : mov qword ptr [rbp - 0x138], r9 ; call 0x41c409
0x0000000000439498 : mov qword ptr [rbp - 0x68], rax ; call rcx
0x0000000000436d31 : mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0x436d68
0x0000000000436dcf : mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0x436e0a
0x00000000004658f8 : mov qword ptr [rbp - 0xe0], r11 ; call rax
0x0000000000466020 : mov qword ptr [rbp - 0xe0], r11 ; call rsi
0x00000000004427d6 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x000000000046b1dd : mov qword ptr [rbx + 0x10], rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000046b191 : mov qword ptr [rbx + 0x10], rax ; add rsp, 0x30 ; pop rbx ; ret
0x000000000040a686 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x000000000040ad88 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x000000000046b117 : mov qword ptr [rbx + 0x18], rax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000483d84 : mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x000000000040d252 : mov qword ptr [rbx + 0x20], rax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x0000000000477fc2 : mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000040d2d9 : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x000000000040a636 : mov qword ptr [rbx + 0x90], rax ; pop rbx ; ret
0x000000000040d5a4 : mov qword ptr [rbx + 8], rax ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000040d76b : mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000049167b : mov qword ptr [rbx], r8 ; pop rbx ; ret
0x000000000048c805 : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004797d0 : mov qword ptr [rbx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048f318 : mov qword ptr [rcx], rdx ; add rsp, 8 ; ret
0x000000000046c03e : mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000430bcc : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000043053c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043051c : mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043057f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043059f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000430560 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000040d1e2 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x00000000004649c7 : mov qword ptr [rdi + 0x300], rax ; ret
0x000000000046499b : mov qword ptr [rdi + 0x308], rax ; ret
0x0000000000422658 : mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000040d212 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000048f350 : mov qword ptr [rdi + 0x98], rsi ; ret
0x0000000000430b8c : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000004304dc : mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000430bac : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000004304fc : mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000042ab67 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000042aaf7 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000042aa87 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000042aa17 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000430a8a : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000042a9a7 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043042a : mov qword ptr [rdi + 5], rdx ; ret
0x0000000000430aaa : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000042a937 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043043a : mov qword ptr [rdi + 6], rdx ; ret
0x0000000000430aca : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000042a8c7 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043044a : mov qword ptr [rdi + 7], rdx ; ret
0x000000000046cf03 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x000000000046bfc3 : mov qword ptr [rdi + 8], r9 ; ret
0x000000000040d1e6 : mov qword ptr [rdi + 8], rax ; ret
0x000000000041c3f1 : mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000048f30a : mov qword ptr [rdi + rsi*8], rdx ; add rsp, 8 ; ret
0x0000000000427174 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004271b2 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000046bf2e : mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000004274fb : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042a377 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004276db : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042a2f7 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004278cb : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042a277 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000427a9c : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042a1e8 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000427c9c : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042a158 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000427e9c : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042a0c8 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000046beb9 : mov qword ptr [rdi - 8], r9 ; ret
0x0000000000427178 : mov qword ptr [rdi - 8], rcx ; ret
0x00000000004271b6 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000042732b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427427 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000427373 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042a3f7 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000450535 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046be88 : mov qword ptr [rdi], r9 ; ret
0x000000000046d0cd : mov qword ptr [rdi], rax ; mov eax, 1 ; ret
0x00000000004224a9 : mov qword ptr [rdi], rax ; pop rbx ; pop rbp ; ret
0x0000000000430a16 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000430406 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000430416 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000430427 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000430437 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000430447 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000041c3ee : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00000000004303f7 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000422428 : mov qword ptr [rdi], rcx ; ret
0x0000000000430a03 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000400aba : mov qword ptr [rdi], rdx ; ret
0x0000000000408552 : mov qword ptr [rdx + 0x140], rcx ; ret
0x000000000042ffaa : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000042e79a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000042ffca : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000042e7ba : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000042ffea : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000042e7da : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000042fe7a : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000042e6ca : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x000000000040e7c7 : mov qword ptr [rdx + 8], rcx ; ret
0x000000000042fe23 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x000000000042e673 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000004761e4 : mov qword ptr [rdx], rax ; pop rbx ; ret
0x00000000004585b5 : mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000040e733 : mov qword ptr [rdx], rcx ; ret
0x00000000004016f9 : mov qword ptr [rip + 0x2be970], rax ; xor eax, eax ; ret
0x0000000000400e0a : mov qword ptr [rip + 0x2c031f], rax ; pop r12 ; ret
0x0000000000491158 : mov qword ptr [rsi + 0x28], rax ; pop rbx ; ret
0x000000000048cc93 : mov qword ptr [rsi], r8 ; ret
0x000000000040f7ca : mov qword ptr [rsi], rax ; mov rax, r8 ; ret
0x0000000000467991 : mov qword ptr [rsi], rax ; ret
0x0000000000413330 : mov qword ptr [rsp + 0x10], rcx ; call rdx
0x000000000045eb4f : mov qword ptr [rsp + 0x30], rax ; jmp 0x45eb0b
0x000000000047741a : mov qword ptr [rsp + 0x90], rbx ; call r12
0x000000000043ea2e : mov qword ptr [rsp + 8], rax ; call r12
0x000000000043c20d : mov qword ptr [rsp + 8], rax ; call r14
0x000000000043f3df : mov qword ptr [rsp + 8], rax ; call r15
0x00000000004351a5 : mov qword ptr [rsp + 8], rax ; call rbx
0x000000000041448c : mov qword ptr [rsp + 8], rdx ; call 0x4106f7
0x000000000043d57b : mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x000000000044482d : mov qword ptr fs:[rax], rdx ; ret
0x00000000004621f8 : mov r10, rax ; jmp 0x462184
0x00000000004b1cbc : mov r10b, 0xfd ; dec eax ; mov dl, 0xfd ; call qword ptr [rax]
0x00000000004aca7d : mov r10d, 0xcac982a4 ; call 0xffffffffaf0d68ff
0x0000000000400e30 : mov r12, rax ; call 0x433069
0x0000000000471110 : mov r12, rbx ; jmp 0x46d40e
0x00000000004621f2 : mov r13, r10 ; mov r9, rdx ; mov r10, rax ; jmp 0x46218a
0x000000000048f599 : mov r14, qword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x00000000004725fe : mov r14b, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x0000000000450c81 : mov r14d, 0x10 ; jmp rdx
0x000000000047110d : mov r14d, eax ; mov r12, rbx ; jmp 0x46d411
0x000000000048f59d : mov r15, qword ptr [rbp - 8] ; leave ; ret
0x00000000004355f1 : mov r15d, r14d ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000491678 : mov r8, qword ptr [r8] ; mov qword ptr [rbx], r8 ; pop rbx ; ret
0x0000000000466e6c : mov r9, qword ptr [rsp + 0x30] ; call r9
0x00000000004621f5 : mov r9, rdx ; mov r10, rax ; jmp 0x462187
0x0000000000464109 : mov r9b, r13b ; ret
0x000000000040a640 : mov rax, -1 ; pop rbx ; ret
0x000000000040e0f0 : mov rax, -1 ; ret
0x000000000045a880 : mov rax, 1 ; ret
0x000000000045a890 : mov rax, 2 ; ret
0x000000000045a8a0 : mov rax, 3 ; ret
0x000000000045a8b0 : mov rax, 4 ; ret
0x000000000045a8c0 : mov rax, 5 ; ret
0x000000000045a8d0 : mov rax, 6 ; ret
0x000000000045a8e0 : mov rax, 7 ; ret
0x00000000004b8394 : mov rax, dr7 ; jmp qword ptr [rdx]
0x0000000000465e33 : mov rax, qword ptr [r12 + 0x10] ; add rax, qword ptr [rbx] ; call rax
0x00000000004696e7 : mov rax, qword ptr [r13] ; add rax, qword ptr [rdx + 8] ; call rax
0x0000000000465783 : mov rax, qword ptr [r14 + 0x10] ; add rax, qword ptr [r15] ; call rax
0x0000000000465d01 : mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000040d30b : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000409e82 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040d4f7 : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000040d8b7 : mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00000000004839e2 : mov rax, qword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000040dd0b : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000004578b3 : mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000047a25f : mov rax, qword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x000000000046b710 : mov rax, qword ptr [rax + 8] ; ret
0x000000000044484e : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000048f2b0 : mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x00000000004355f4 : mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000043a030 : mov rax, qword ptr [rbp - 0x60] ; call rax
0x0000000000476200 : mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x000000000045e747 : mov rax, qword ptr [rbx + 8] ; test rax, rax ; je 0x45e75b ; call rax
0x000000000045e94c : mov rax, qword ptr [rcx + 0x10] ; test rax, rax ; je 0x45e964 ; call rax
0x000000000042e670 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000004578b0 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000040ea60 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000048f2c0 : mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000048f320 : mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000048f360 : mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000048f3c0 : mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000048f3b0 : mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000048f370 : mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000046b6b0 : mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x46b6c8 ; ret
0x000000000048fe5b : mov rax, qword ptr [rdx] ; add rsp, 8 ; ret
0x000000000040e720 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x40e721 ; ret
0x0000000000441e30 : mov rax, qword ptr [rip + 0x281439] ; ret
0x0000000000439830 : mov rax, qword ptr [rip + 0x28a7d1] ; ret
0x000000000040ea40 : mov rax, qword ptr [rip + 0x2b1659] ; ret
0x000000000048fea0 : mov rax, qword ptr [rsi] ; add rsp, 8 ; ret
0x000000000048f395 : mov rax, qword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x00000000004352c9 : mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000401285 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000043cfaf : mov rax, qword ptr [rsp + 0x30] ; mov qword ptr [rax], rbx ; jmp 0x43cf84
0x000000000046b3ea : mov rax, qword ptr [rsp + 0x48] ; add rsp, 0x78 ; ret
0x000000000045ed95 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x28 ; ret
0x000000000046a096 : mov rax, qword ptr [rsp] ; add rsp, 0x48 ; jmp r11
0x000000000045b44a : mov rax, r12 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000422c9a : mov rax, r12 ; pop r12 ; ret
0x000000000041643d : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004571a4 : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000045e62c : mov rax, r14 ; pop r14 ; ret
0x0000000000413d41 : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040f8e2 : mov rax, r8 ; nop dword ptr [rax] ; ret
0x000000000040f7cd : mov rax, r8 ; ret
0x0000000000446906 : mov rax, r9 ; pop rbx ; ret
0x000000000045f0a5 : mov rax, r9 ; ret
0x000000000040b4e9 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000408f09 : mov rax, rbp ; mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004577f8 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046813f : mov rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000434cef : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000040f1a4 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004680c1 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000468547 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000408613 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004086e8 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000434b5d : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000040a68a : mov rax, rbx ; pop rbx ; ret
0x0000000000401a62 : mov rax, rcx ; pop r13 ; ret
0x00000000004019e8 : mov rax, rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000045afa8 : mov rax, rcx ; ret
0x000000000040fc17 : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040ea70 : mov rax, rdi ; ret
0x0000000000483d2d : mov rax, rdx ; add rsp, 0x28 ; ret
0x0000000000476372 : mov rax, rdx ; add rsp, 0x38 ; ret
0x000000000045e4d2 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000414b78 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041032e : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000046c4f4 : mov rax, rdx ; pop rbx ; ret
0x0000000000416e57 : mov rax, rdx ; ret
0x0000000000407699 : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000004139d0 : mov rax, rsi ; pop rbx ; ret
0x00000000004467f3 : mov rax, rsi ; ret
0x000000000048f63c : mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000046b96b : mov rbp, r9 ; jmp rdx
0x0000000000400f90 : mov rbp, rsp ; ja 0x400f9d ; pop rbp ; ret
0x00000000004bd538 : mov rbx, dr1 ; jmp qword ptr [rdx]
0x000000000046a40e : mov rbx, qword ptr [rsp] ; add rsp, 0x30 ; jmp r11
0x000000000046a4ee : mov rbx, qword ptr [rsp] ; add rsp, 0x30 ; ret
0x00000000004bd3d4 : mov rbx, r15 ; jmp qword ptr [rdx]
0x000000000040d6a9 : mov rbx, rdi ; je 0x40d6c1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000491173 : mov rbx, rdi ; test eax, eax ; jne 0x491188 ; pop rbx ; ret
0x0000000000444245 : mov rbx, rdi ; test rax, rax ; je 0x444257 ; call rax
0x000000000040e730 : mov rcx, qword ptr [rdi] ; mov qword ptr [rdx], rcx ; ret
0x00000000004303e0 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000046b806 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000046b794 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x50 ; jmp qword ptr [rax]
0x0000000000407a7a : mov rcx, r10 ; jmp 0x4079ad
0x00000000004465b3 : mov rcx, rax ; jmp 0x44649d
0x00000000004351ef : mov rdi, qword ptr [r12] ; call rbx
0x000000000045aa33 : mov rdi, qword ptr [r12] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000047657b : mov rdi, qword ptr [r13] ; call r12
0x0000000000434df9 : mov rdi, qword ptr [r13] ; call rbx
0x0000000000434d66 : mov rdi, qword ptr [r14] ; call rbx
0x0000000000434da7 : mov rdi, qword ptr [r15] ; call rbx
0x0000000000439494 : mov rdi, qword ptr [rax + 0x18] ; mov qword ptr [rbp - 0x68], rax ; call rcx
0x00000000004594e7 : mov rdi, qword ptr [rax + 0x40] ; jmp 0x4594b5
0x00000000004351a2 : mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x00000000004368d8 : mov rdi, qword ptr [rbp] ; call r12
0x0000000000434f2e : mov rdi, qword ptr [rbp] ; call rbx
0x00000000004397c9 : mov rdi, qword ptr [rbx + 0x18] ; call rax
0x00000000004368e7 : mov rdi, qword ptr [rbx] ; call r12
0x000000000046a43d : mov rdi, qword ptr [rdi + 0x28] ; call r11
0x0000000000441bdf : mov rdi, qword ptr [rsp + 0x10] ; call r12
0x0000000000441cbc : mov rdi, qword ptr [rsp + 0x10] ; call r15
0x00000000004637b0 : mov rdi, qword ptr [rsp + 0x30] ; call rax
0x0000000000408a20 : mov rdi, qword ptr [rsp + 0x38] ; call 0x414c97
0x000000000043bad1 : mov rdi, qword ptr [rsp + 0x38] ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000043bf1e : mov rdi, qword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000043d763 : mov rdi, qword ptr [rsp + 0x50] ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000415313 : mov rdi, r12 ; call rax
0x0000000000435a64 : mov rdi, r12 ; call rbx
0x0000000000408a04 : mov rdi, r13 ; call 0x414c95
0x0000000000436538 : mov rdi, r13 ; call rbx
0x0000000000457c13 : mov rdi, r13 ; xor r8d, r8d ; call r12
0x0000000000452809 : mov rdi, r14 ; call 0x414c99
0x0000000000445c60 : mov rdi, r14 ; call 0x421e95
0x0000000000435aad : mov rdi, r14 ; call rbx
0x000000000043a02d : mov rdi, r14 ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x000000000047124e : mov rdi, r15 ; call 0x40d4a5
0x000000000044e353 : mov rdi, r15 ; call 0x45a5c5
0x0000000000435acd : mov rdi, r15 ; call rbx
0x0000000000435a3f : mov rdi, rbp ; call rbx
0x0000000000441de6 : mov rdi, rbx ; call r12
0x000000000043a73b : mov rdi, rbx ; call r14
0x00000000004399a9 : mov rdi, rbx ; call r15
0x0000000000456daf : mov rdi, rbx ; call r8
0x0000000000409a24 : mov rdi, rbx ; call rax
0x000000000040d373 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040d4f3 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000491a28 : mov rdi, rsp ; call r12
0x000000000048ef88 : mov rdx, qword ptr [r12] ; mov edi, 1 ; call rax
0x000000000045e8cc : mov rdx, qword ptr [rax + 0x18] ; test rdx, rdx ; je 0x45e8e4 ; call rdx
0x0000000000447b1a : mov rdx, qword ptr [rax*8 + 0x4a6ba0] ; jmp rdx
0x000000000044b36f : mov rdx, qword ptr [rax*8 + 0x4a6ca0] ; jmp rdx
0x000000000044b24b : mov rdx, qword ptr [rax*8 + 0x4a6da0] ; jmp rdx
0x000000000044b161 : mov rdx, qword ptr [rax*8 + 0x4a6ea0] ; jmp rdx
0x000000000044b113 : mov rdx, qword ptr [rax*8 + 0x4a6fa0] ; jmp rdx
0x000000000044af2c : mov rdx, qword ptr [rax*8 + 0x4a70a0] ; jmp rdx
0x0000000000446dbc : mov rdx, qword ptr [rax*8 + 0x4a71a0] ; jmp rdx
0x0000000000452f94 : mov rdx, qword ptr [rax*8 + 0x4a75c0] ; jmp rdx
0x0000000000450ccb : mov rdx, qword ptr [rax*8 + 0x4a76c0] ; jmp rdx
0x0000000000452b8b : mov rdx, qword ptr [rax*8 + 0x4a77c0] ; jmp rdx
0x0000000000452b49 : mov rdx, qword ptr [rax*8 + 0x4a78c0] ; jmp rdx
0x0000000000452aed : mov rdx, qword ptr [rax*8 + 0x4a79c0] ; jmp rdx
0x0000000000451ecb : mov rdx, qword ptr [rax*8 + 0x4a7ac0] ; jmp rdx
0x00000000004761e0 : mov rdx, qword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x0000000000493048 : mov rdx, qword ptr [rdi + 0x20] ; test rdx, rdx ; je 0x493061 ; call rdx
0x00000000004761f4 : mov rdx, qword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x00000000004272e0 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042abd0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000445c5d : mov rdx, r12 ; mov rdi, r14 ; call 0x421e98
0x0000000000479b20 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x0000000000479ae3 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000409a21 : mov rdx, r14 ; mov rdi, rbx ; call rax
0x0000000000407ce9 : mov rdx, r8 ; jmp 0x407d03
0x0000000000401e32 : mov rdx, rax ; jmp 0x401e4f
0x0000000000436d35 : mov rdx, rax ; jmp 0x436d64
0x0000000000436dd3 : mov rdx, rax ; jmp 0x436e06
0x0000000000439600 : mov rdx, rbp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000045e49b : mov rdx, rbp ; xor ecx, ecx ; jmp 0x45e46b
0x000000000048fa57 : mov rsi, qword ptr [r15] ; call r14
0x000000000048faab : mov rsi, qword ptr [rbp] ; call r14
0x000000000046a439 : mov rsi, qword ptr [rdi + 0x20] ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x0000000000438fb6 : mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x0000000000439603 : mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000041473a : mov rsi, qword ptr [rsp + 0x18] ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x000000000041530e : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, r12 ; call rax
0x000000000043de09 : mov rsi, qword ptr [rsp + 0x58] ; call rax
0x0000000000414d5a : mov rsi, qword ptr [rsp] ; jmp rax
0x0000000000479b23 : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x0000000000479ae6 : mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000048f940 : mov rsi, r14 ; mov rdi, rbx ; call r15
0x0000000000400fdf : mov rsi, rax ; mov edi, 0x6c1c30 ; jmp rdx
0x0000000000400cd6 : mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400ce5 ; ret
0x0000000000476112 : mov rsi, rbx ; mov edi, dword ptr [rip + 0x24d535] ; call rax
0x000000000040d3b8 : mov rsi, rcx ; jbe 0x40d35e ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000048f8e9 : mov rsi, rdi ; mov edi, 1 ; jmp rax
0x000000000046b968 : mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x000000000048f640 : mov rsp, rcx ; ret
0x00000000004b97ec : mov word ptr [rax + rax], dr0 ; mov al, 0xca ; clc ; call qword ptr [rbx]
0x000000000043d30e : mov word ptr [rax + rax], es ; add byte ptr [rax + 0x29], cl ; ret 0x8b49
0x0000000000437610 : mov word ptr [rax + rcx*4], gs ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041c3e1 : mov word ptr [rax + rdx - 2], cx ; ret
0x000000000048defa : mov word ptr [rax], fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004be0ec : mov word ptr [rbp + 0x58900000], dr1 ; cld ; call rbx
0x00000000004bd4ec : mov word ptr [rcx + 0x37d00000], dr0 ; hlt ; jmp qword ptr [rsi]
0x0000000000408a00 : mov word ptr [rcx + rax - 0x1076b400], ss ; call 0x414c99
0x0000000000430b0c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000043047c : mov word ptr [rdi + 0x10], cx ; ret
0x0000000000430c14 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x0000000000430564 : mov word ptr [rdi + 0x18], cx ; ret
0x000000000042ae07 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000004309d8 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000004303b8 : mov word ptr [rdi + 4], dx ; ret
0x0000000000430a2a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000004303fa : mov word ptr [rdi + 8], dx ; ret
0x000000000042787c : mov word ptr [rdi - 2], cx ; ret
0x0000000000427694 : mov word ptr [rdi - 2], dx ; ret
0x0000000000427878 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000430383 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000042ae0b : mov word ptr [rdi], cx ; ret
0x0000000000430993 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000042ae73 : mov word ptr [rdi], dx ; ret
0x000000000042fef8 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x000000000042e738 : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x000000000042fea3 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x000000000042e6f3 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000004b7142 : mov word ptr [rip + 0x3068345], es ; mov byte ptr [rcx], al ; ret
0x0000000000437e79 : mov word ptr [rsi + 0x49], dr1 ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000444934 : mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x000000000044af30 : movabs al, byte ptr [0x83d089e2ff004a70] ; ret 0x4908
0x000000000047dc16 : movabs al, byte ptr [0xc748c03145000000] ; ret
0x00000000004594e3 : movabs al, byte ptr [0xeb40788b48000000] ; ret
0x00000000004bd236 : movabs al, byte ptr [0xfb88dc0d1cfffb89] ; jmp qword ptr [rdx]
0x0000000000436f4c : movabs byte ptr [0x5d5b08c483480028], al ; ret
0x000000000046b6af : movabs byte ptr [0x874f03948078b48], al ; ret
0x00000000004b44be : movabs byte ptr [0xf59c520d1cfff5a6], al ; jmp qword ptr [rdx]
0x000000000040c411 : movabs dword ptr [0x8341001f0ffffffc], eax ; ret 0x4101
0x0000000000466712 : movabs dword ptr [0x8348d889482673ce], eax ; ret
0x0000000000411d2b : movabs eax, dword ptr [0x8948c08548ffffd9] ; ret
0x00000000004b571e : movabs eax, dword ptr [0xf5c1cf0d1cfff610] ; jmp qword ptr [rdx]
0x0000000000435ee3 : movabs eax, dword ptr [0xff894cf631000008] ; call rbx
0x0000000000425e02 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000425dfe : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000425eac : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000045b69d : movd dword ptr [rsi], mm4 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc031
0x0000000000430450 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000430ccd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000043061d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000042aadf : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042aa6f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042a9ff : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042a98f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000430c6d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000004305bd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000042a91f : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000430c8d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000004305dd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000042a8af : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000430cad : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000004305fd : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000042aecf : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042ae5f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042adef : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042ad7f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042ad0f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042ac9f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042ac2f : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042abbf : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042ab4f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000041c346 : movdqu xmmword ptr [rdi + rdx - 0x20], xmm8 ; ret
0x000000000042a03b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000042a0ab : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000430ae4 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000430464 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000004304a7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000430497 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000430518 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000004304d8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000004304f8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000430478 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000430619 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004305b9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000004305d9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000004305f9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000042a85a : movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000042a8b4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000430451 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000430cce : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000043061e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x000000000042aae0 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042aa70 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042aa00 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042a990 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000430c6e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000004305be : movq qword ptr [rdi + 0xd], mm2 ; ret
0x000000000042a920 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000430c8e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000004305de : movq qword ptr [rdi + 0xe], mm2 ; ret
0x000000000042a8b0 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000430cae : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000004305fe : movq qword ptr [rdi + 0xf], mm2 ; ret
0x000000000042aed0 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042ae60 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042adf0 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042ad80 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042ad10 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042aca0 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042ac30 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042abc0 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042ab50 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000041c333 : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x41c348 ; ret
0x000000000041c332 : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x41c349 ; ret
0x000000000041c348 : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000042a03c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x000000000042a0ac : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042a7e7 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a767 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a6d7 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a657 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a5d7 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a557 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a4d7 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a457 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a3d7 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a357 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a2d7 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a257 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a1c7 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a137 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042a0a7 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000430ae5 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000430465 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000004304b8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000004304a8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000430498 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000430519 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000004304d9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000004304f9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000430479 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043061a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004305ba : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000004305da : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000004305fa : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000042a85b : movq qword ptr [rdi], mm0 ; ret
0x000000000042a8b5 : movq qword ptr [rdi], mm1 ; ret
0x00000000004b6a04 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], r8b ; cwde ; out 0xf5, al ; call rdx
0x00000000004961f9 : movsb byte ptr [rdi], byte ptr [rsi] ; clc ; call rax
0x00000000004ad442 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004ae69d : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x4ae6f6 ; jmp 0x4ae637
0x0000000000468564 : movsb byte ptr [rdi], byte ptr [rsi] ; lodsb al, byte ptr [rsi] ; add al, bpl ; ret
0x00000000004be304 : movsb byte ptr [rdi], byte ptr [rsi] ; mov edi, 0x5ce80000 ; cld ; call qword ptr [rax]
0x00000000004aecd5 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004ae591 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000046bee2 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004b61d4 : movsd dword ptr [rdi], dword ptr [rsi] ; std ; cmc ; jmp qword ptr [rdx]
0x000000000048cbe3 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000048cb9d : movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000046a6e1 : movsx edx, al ; neg edx ; mov eax, edx ; ret
0x000000000048d5d3 : movsx esi, word ptr [rax + 1] ; add rax, 3 ; jmp 0x48d5a9
0x000000000048e4f2 : movsxd r8, dword ptr [r14 + r8*4] ; add r8, r14 ; jmp r8
0x0000000000417171 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000428476 : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x00000000004258e2 : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000048d9a2 : movsxd rax, dword ptr [r11 + rax*4] ; add rax, r11 ; jmp rax
0x000000000048e9ff : movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x000000000048fc32 : movsxd rax, dword ptr [r8 + rdi*4] ; add r8, rax ; jmp r8
0x000000000049164a : movsxd rax, dword ptr [r9 + r8*4] ; add r9, rax ; jmp r9
0x000000000048daa3 : movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x000000000042422d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000430219 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000048cd33 : movsxd rcx, dword ptr [r15 + rcx*4] ; add rcx, r15 ; jmp rcx
0x000000000048ce88 : movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x000000000048e2a2 : movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x00000000004259af : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000048e0ac : movsxd rdx, dword ptr [rbp + rdx*4] ; add rdx, rbp ; jmp rdx
0x00000000004321fc : movsxd rsi, esi ; ret 0x7520
0x000000000048cb9e : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x000000000048cbe4 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x00000000004449bc : movzx eax, al ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00000000004762ac : movzx eax, al ; neg eax ; ret
0x00000000004760b2 : movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045ec05 : movzx eax, al ; ret
0x000000000040c5c4 : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040e156 : movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000048fe00 : movzx eax, byte ptr [rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040a7e5 : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040d76f : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000040edcd : movzx eax, byte ptr [rax] ; ret
0x0000000000418508 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000424240 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000041bdc0 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000418523 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000040a7f0 : movzx eax, byte ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040d3bd : movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000040c5c5 : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004330c7 : movzx eax, cl ; pop rbx ; ret
0x00000000004330ef : movzx eax, dl ; pop rbx ; ret
0x000000000043285a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x432859 ; ret
0x000000000043290a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x432909 ; ret
0x00000000004250e4 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x0000000000418520 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000424243 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000045ec9f : movzx ecx, byte ptr [rsp - 0x15] ; mov byte ptr [r8 + 0x23], cl ; ret
0x000000000045bd24 : movzx edi, word ptr [rbp - 0x60] ; movzx esi, word ptr [rbp - 0x70] ; jmp 0x45bcfa
0x00000000004069ef : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x4069d7 ; ret
0x0000000000424111 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000041864f : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000423fa3 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000432224 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x0000000000432284 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x0000000000432274 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000432264 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000432254 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000432244 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000432234 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000042a800 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000424e97 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000043220b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x000000000042aee0 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000041bdc3 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000041bde9 : movzx edx, dl ; sub eax, edx ; ret
0x000000000042a780 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000042ae70 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000046ef71 : movzx esi, byte ptr [rax] ; add r12, 1 ; jmp 0x46ef44
0x000000000045bd28 : movzx esi, word ptr [rbp - 0x70] ; jmp 0x45bcf6
0x000000000046ef70 : movzx r14d, byte ptr [rax] ; add r12, 1 ; jmp 0x46ef45
0x000000000045ec04 : movzx rax, al ; ret
0x0000000000459a07 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000047bdad : mulps xmm0, xmm0 ; pop r15 ; ret
0x000000000047eb9c : mulsd xmm0, xmm0 ; pop r15 ; ret
0x000000000047bdac : mulss xmm0, xmm0 ; pop r15 ; ret
0x0000000000493196 : neg byte ptr [rdx] ; clc ; push rbx ; ret
0x000000000043401b : neg eax ; mov dword ptr fs:[rdx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000040bdea : neg eax ; pop r13 ; ret
0x00000000004762af : neg eax ; ret
0x0000000000434326 : neg edx ; cmp dword ptr [rsp + 0x10], 2 ; cmove eax, edx ; jmp 0x4342f4
0x0000000000434216 : neg edx ; cmp dword ptr [rsp - 0x68], 2 ; cmove eax, edx ; ret
0x000000000045ecb0 : neg edx ; mov dword ptr fs:[rax], edx ; or eax, 0xffffffff ; ret
0x000000000046a6e4 : neg edx ; mov eax, edx ; ret
0x0000000000477406 : nop ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000429f2b : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000441f38 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000482fce : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000042454c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000045c3c2 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x000000000043333f : nop ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x000000000043981f : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041bc1f : nop ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000048c94f : nop ; call rax
0x00000000004965c0 : nop ; clc ; call rax
0x00000000004961c9 : nop ; clc ; jmp qword ptr [rax]
0x00000000004b3304 : nop ; cmc ; jmp qword ptr [rdx]
0x0000000000496a58 : nop ; cmp al, 0xf9 ; call qword ptr [rax]
0x0000000000496a68 : nop ; cmp bh, cl ; call qword ptr [rax]
0x0000000000496a60 : nop ; cmp edi, ecx ; call qword ptr [rax]
0x00000000004bdbb0 : nop ; fdiv st(3), st(0) ; call qword ptr [rax]
0x000000000045bd2b : nop ; jmp 0x45bcf3
0x00000000004b9210 : nop ; mov al, 0xf8 ; call qword ptr [rcx]
0x00000000004274af : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042768f : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000045885f : nop ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040d73f : nop ; mov eax, 0xffffffff ; ret
0x0000000000427a4f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004309af : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000040a63f : nop ; mov rax, -1 ; pop rbx ; ret
0x000000000040e9df : nop ; mov rax, -1 ; ret
0x000000000048f2af : nop ; mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x000000000040e72f : nop ; mov rcx, qword ptr [rdi] ; mov qword ptr [rdx], rcx ; ret
0x000000000043044f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004be0f0 : nop ; pop rax ; cld ; call rbx
0x0000000000432bef : nop ; ret
0x00000000004986c8 : nop ; ret 0x43
0x0000000000496b00 : nop ; sbb bh, cl ; call rax
0x00000000004964d8 : nop ; sbb ecx, edi ; call qword ptr [rax + 0x20fff91b]
0x00000000004964dc : nop ; sbb edi, ecx ; jmp qword ptr [rax]
0x0000000000496608 : nop ; stc ; clc ; jmp rax
0x0000000000496660 : nop ; stc ; jmp qword ptr [rax]
0x000000000040e76f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000045cabd : nop ; xchg eax, ebx ; add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x000000000043743f : nop ; xor eax, eax ; leave ; ret
0x000000000041bdef : nop ; xor eax, eax ; ret
0x000000000041bc9f : nop ; xor rax, rax ; ret
0x000000000043038b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000045afa3 : nop dword ptr [rax + rax] ; mov rax, rcx ; ret
0x000000000040a83b : nop dword ptr [rax + rax] ; or eax, 0x20 ; jmp 0x40a810
0x000000000040ea28 : nop dword ptr [rax + rax] ; ret
0x0000000000408f33 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000045a84c : nop dword ptr [rax] ; add rax, 1 ; ret
0x000000000040edec : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x000000000040847c : nop dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000040ad3d : nop dword ptr [rax] ; mov edi, dword ptr [rdi + 0x70] ; jmp 0x436f68
0x0000000000422424 : nop dword ptr [rax] ; mov qword ptr [rdi], rcx ; ret
0x00000000004332dc : nop dword ptr [rax] ; pop rbx ; ret
0x000000000040f8e5 : nop dword ptr [rax] ; ret
0x000000000043857c : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000045afa2 : nop word ptr [rax + rax] ; mov rax, rcx ; ret
0x000000000045ee92 : nop word ptr [rax + rax] ; ret
0x000000000046b850 : not eax ; and eax, ecx ; ret
0x000000000046b8cf : not eax ; and eax, edx ; ret
0x000000000046acb8 : not ecx ; jmp 0x46acd1
0x000000000046ad62 : not ecx ; jmp 0x46ad7b
0x000000000046aa71 : not edx ; jmp 0x46aa86
0x000000000046ab3f : not edx ; jmp 0x46ab54
0x000000000046acb7 : not r9 ; jmp 0x46acd2
0x000000000046ad61 : not r9 ; jmp 0x46ad7c
0x000000000046aa70 : not rdx ; jmp 0x46aa87
0x000000000046ab3e : not rdx ; jmp 0x46ab55
0x00000000004b60fc : or ah, bh ; cmc ; jmp qword ptr [rdx]
0x000000000046936c : or al, 0 ; add bl, dh ; ret
0x00000000004726da : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041fb57 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004211cf : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000045ecfa : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000004139f2 : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000413ba2 : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000045321e : or al, 0x16 ; add rdx, r12 ; call qword ptr [r11 + rax*8]
0x000000000044951b : or al, 0x16 ; add rdx, rbx ; call qword ptr [r11 + rax*8]
0x0000000000418506 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x00000000004b3e6c : or al, 0x1b ; add byte ptr [rax], al ; add byte ptr [rsi - 0xb], dh ; jmp rax
0x000000000040fc04 : or al, 0x2b ; add byte ptr [rax + 0x39], cl ; ret 0xb76
0x0000000000401017 : or al, 0x2c ; add byte ptr [rcx], al ; ret
0x0000000000467f45 : or al, 0x3e ; jae 0x467f07 ; xor eax, eax ; ret
0x0000000000437228 : or al, 0x41 ; pop rsp ; ret
0x000000000046b260 : or al, 0x48 ; add esp, 0x48 ; ret
0x0000000000401284 : or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000476ab7 : or al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004b896c : or al, 0x66 ; add byte ptr [rax], al ; loopne 0x4b89a7 ; clc ; call qword ptr [rax]
0x00000000004b9e6c : or al, 0x7b ; add byte ptr [rax], al ; stc ; call rdi
0x000000000045623a : or al, 0x7e ; ret
0x000000000046aa74 : or al, 0x83 ; ret
0x0000000000432ef5 : or al, 0x83 ; rol byte ptr [rcx], 0x83 ; ret 0x4101
0x000000000044cf52 : or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x00000000004478b6 : or al, 0x89 ; ret 0xeac0
0x000000000048e2a4 : or al, 0x8a ; add rdx, rcx ; jmp rdx
0x0000000000417173 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000041ec44 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000428478 : or al, 0x8b ; add r9, r11 ; jmp r9
0x00000000004258e4 : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000048cd35 : or al, 0x8f ; add rcx, r15 ; jmp rcx
0x000000000048ce8a : or al, 0x8f ; add rcx, rdi ; jmp rcx
0x000000000042422f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000043021b : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000004b5604 : or al, 0xaf ; cmc ; jmp qword ptr [rdx]
0x00000000004258e8 : or al, 0xb ; jmp r9
0x000000000043021f : or al, 0xb ; jmp rcx
0x00000000004b59ac : or al, 0xe0 ; cmc ; jmp qword ptr [rdx]
0x000000000042aa03 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000456536 : or al, 0xf6 ; ret 0x7404
0x0000000000456b03 : or al, 0xf6 ; ret 0xf04
0x00000000004bb2fd : or al, 0xfa ; jmp qword ptr [rdx]
0x00000000004be981 : or al, 0xfd ; call rsp
0x000000000041879d : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041fd61 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004187c1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000048f089 : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000435a3a : or al, byte ptr [rax] ; add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xef ; call rbx
0x0000000000405545 : or al, byte ptr [rbp + 0xf] ; ret 0x8348
0x000000000044a235 : or al, byte ptr [rcx] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000489567 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041b8bb : or al, ch ; lahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000414490 : or al, ch ; pop rdx ; ret 0xffff
0x00000000004594f8 : or al, ch ; ret 1
0x000000000046b6e7 : or bh, bh ; loopne 0x46b747 ; ret
0x00000000004bb589 : or bh, dl ; jmp rbx
0x000000000048f31e : or bl, al ; mov rax, qword ptr [rdi + 0x98] ; ret
0x0000000000466f78 : or bl, al ; nop word ptr [rax + rax] ; ret
0x000000000040d6ad : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004507d2 : or bl, ch ; add al, 0xff ; or dh, byte ptr [rbp + 2] ; ret
0x000000000042abc3 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000040e7ca : or bl, dh ; ret
0x000000000040e7c9 : or bl, sil ; ret
0x0000000000415cb4 : or byte ptr [r13 - 0x77], r9b ; ret
0x000000000040d5a6 : or byte ptr [r15], cl ; mov dh, 2 ; pop rbx ; ret
0x000000000042e6c8 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000407482 : or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x000000000045f332 : or byte ptr [r8 - 0x7b], cl ; sal byte ptr [rdi + 0x48], 0x89 ; ret
0x0000000000489742 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042e787 : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x000000000040f27b : or byte ptr [rax + 0x29], cl ; ret 0x148
0x000000000041015b : or byte ptr [rax + 0x29], cl ; ret 0x8e74
0x000000000040edc7 : or byte ptr [rax + 0x39], cl ; enter 0x2373, 0xf ; mov dh, 0 ; ret
0x000000000041aec9 : or byte ptr [rax + 0x39], cl ; ret
0x00000000004150bb : or byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000045b8fd : or byte ptr [rax + 0x39], r9b ; ret
0x00000000004692c8 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x00000000004039b3 : or byte ptr [rax + 1], cl ; ret
0x0000000000467c1a : or byte ptr [rax + 4], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043c570 : or byte ptr [rax + 7], bh ; jmp 0x43c541
0x0000000000412927 : or byte ptr [rax + rax + 0xf], ch ; xchg eax, ebp ; ret 0x8348
0x0000000000413ef9 : or byte ptr [rax + rax + 0xf], ch ; xchg eax, ebp ; ret 0x948
0x000000000047690d : or byte ptr [rax - 0x3f], 0xe0 ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x0000000000401e2c : or byte ptr [rax - 0x73], 0x44 ; shr al, 1 ; mov rdx, rax ; jmp 0x401e55
0x000000000041bcc9 : or byte ptr [rax - 0x73], cl ; add eax, 0x1f ; ret
0x000000000041bcdd : or byte ptr [rax - 0x73], cl ; add eax, 0x852b ; ret
0x000000000046c341 : or byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rax + 1] ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000491af3 : or byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax - 0x7f] ; call rax
0x00000000004352c8 : or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x00000000004351a1 : or byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x000000000043de08 : or byte ptr [rax - 0x75], cl ; je 0x43de37 ; pop rax ; call rax
0x000000000042e6cd : or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000467a38 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000434b5c : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000042e6c9 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000041032d : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000479c6c : or byte ptr [rax - 0x77], cl ; ret
0x0000000000407483 : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000045f333 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rdi + 0x48], 0x89 ; ret
0x0000000000413bfb : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000435293 : or byte ptr [rax - 0x7d], cl ; ret
0x00000000004224b6 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042253e : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000466a07 : or byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000040374a : or byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x0000000000450423 : or byte ptr [rax - 0x7d], cl ; ret 0x8404
0x00000000004504f2 : or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x000000000040a0d3 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00000000004189fc : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000040f68f : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000004189fd : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041ff01 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000418a21 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000040df0c : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000048fbb3 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000043319a : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000412e08 : or byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000004215be : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000047992a : or byte ptr [rbp + 0x440f4cd2], al ; ret
0x00000000004beeb3 : or byte ptr [rbp + 0xb], al ; push rbx ; ret
0x000000000048fa52 : or byte ptr [rbp - 0x73], cl ; cmp al, 0xcc ; mov rsi, qword ptr [r15] ; call r14
0x000000000043e887 : or byte ptr [rbp - 0x77], al ; ret 0x8948
0x0000000000415cb5 : or byte ptr [rbp - 0x77], cl ; ret
0x00000000004555e5 : or byte ptr [rbx + 0x4a], ch ; add al, ch ; ret
0x00000000004585f2 : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000040bde5 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; neg eax ; pop r13 ; ret
0x000000000040afae : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000405ffe : or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000401b85 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000048fb33 : or byte ptr [rbx + 0x634801eb], al ; ret
0x00000000004bb72b : or byte ptr [rbx + 0xb], al ; jne 0x4bb73f ; ret
0x000000000046499e : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x000000000046d03b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000045033a : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x000000000047acc9 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x00000000004bb732 : or byte ptr [rcx + 0xb], al ; ret
0x000000000047b82b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000046c4f0 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x000000000049175e : or byte ptr [rcx + rcx*4 + 3], cl ; pop rbx ; ret
0x000000000046d042 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000042e788 : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x000000000044b90b : or byte ptr [rcx - 0x77], cl ; push rdi ; or cl, ch ; ret 0xfffb
0x00000000004373be : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x00000000004460bc : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000004aef5e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000464e17 : or byte ptr [rdi + 0x315], 4 ; xor eax, eax ; ret
0x0000000000464a71 : or byte ptr [rdi + 0x6c11a0], bh ; pop rbx ; pop rbp ; jmp rax
0x00000000004bb75b : or byte ptr [rdi + 0xb], al ; jne 0x4bb76f ; ret
0x0000000000472de6 : or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rax - 0x7d], cl ; ret
0x000000000046e8f7 : or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x000000000046dcae : or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rcx - 0x7d], cl ; ret 0x4401
0x000000000046e557 : or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rcx - 0x7d], cl ; ret 0xe901
0x000000000043f4f6 : or byte ptr [rdi], 0x94 ; ret 0xb60f
0x000000000040d76e : or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000483d69 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000040d5a7 : or byte ptr [rdi], cl ; mov dh, 2 ; pop rbx ; ret
0x0000000000425eab : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000041b19c : or byte ptr [rdi], cl ; test byte ptr [rcx + rax - 0x7cb80000], dl ; ret 0xe901
0x0000000000496540 : or byte ptr [rip + 0xf40fff9], 0xf9 ; jmp qword ptr [rax]
0x00000000004be731 : or ch, bh ; jmp rsp
0x000000000047674e : or cl, byte ptr [rax + 0x29] ; ret 0x5589
0x00000000004091a0 : or cl, byte ptr [rax + 1] ; ret 0x8948
0x000000000044ec1d : or cl, byte ptr [rax - 0x3f] ; call 0xffffffffc2ce342e
0x000000000047f65c : or cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp + rdx + 0x4c], 0x39 ; ret 0x1075
0x000000000045ce92 : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000478919 : or cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x00000000004585b7 : or cl, byte ptr [rbx + 0x5bd08910] ; ret
0x000000000045557d : or cl, ch ; push rbp ; ret
0x000000000044556c : or cl, ch ; ret
0x000000000044b90f : or cl, ch ; ret 0xfffb
0x0000000000483f35 : or cl, cl ; cmove rax, rdx ; ret
0x000000000042aae3 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000491385 : or dh, bl ; ret
0x00000000004507d6 : or dh, byte ptr [rbp + 2] ; ret
0x00000000004799f7 : or dh, byte ptr [rbp - 0x55] ; call rbx
0x000000000046b2d5 : or dh, byte ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x00000000004b28e5 : or dh, ch ; jmp qword ptr [rdx]
0x000000000041284b : or dh, dh ; ret 0x7404
0x0000000000413b21 : or dh, dh ; ret 0x7502
0x0000000000411daa : or dh, dh ; ret 0xf01
0x0000000000412867 : or dh, dh ; ret 0xf04
0x000000000040235f : or dh, dh ; ret 0xfdf
0x0000000000401e0a : or dword ptr [rax - 0x73], ecx ; mov ebx, 0x80 ; call rax
0x00000000004193ee : or dword ptr [rax - 1], ecx ; ret 0xc148
0x0000000000482274 : or dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x8b44
0x00000000004492a2 : or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041892d : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042146f : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000418887 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000475ad2 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000004679d0 : or dword ptr [rax], eax ; add dh, dh ; ret
0x0000000000425666 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000416676 : or dword ptr [rbx - 0xd], ebx ; ret
0x000000000040ada0 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040f4db : or dword ptr [rbx], 8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000415f07 : or dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000415d1e : or dword ptr [rcx - 0x7d], ecx ; sti ; adc al, 0x77 ; sub ecx, dword ptr [rcx - 0x7d] ; ret
0x000000000044a317 : or dword ptr [rcx], eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x0000000000408ae0 : or dword ptr [rcx], eax ; add byte ptr [rax - 0x7d], cl ; in al, dx ; xor byte ptr [rcx - 0x77], cl ; ret 0xb941
0x0000000000401814 : or dword ptr [rcx], esi ; idiv byte ptr [rdi + 1] ; call rax
0x0000000000468296 : or dword ptr [rip + 0x258f73], 1 ; pop rbx ; ret
0x00000000004b5b9e : or dword ptr [rsi + rsi*8], 0xffffffff ; sbb al, 0xd ; jne 0x4b5b96 ; cmc ; jmp qword ptr [rdx]
0x0000000000430c71 : or eax, 0x1c478d48 ; ret
0x000000000040a840 : or eax, 0x20 ; jmp 0x40a80b
0x0000000000493757 : or eax, 0x22f104 ; jne 0x493784 ; ret
0x00000000004bc9c8 : or eax, 0x3520303 ; ret
0x00000000004b308d : or eax, 0x47500000 ; cmc ; call qword ptr [rdx]
0x00000000004b3075 : or eax, 0x47580000 ; cmc ; call qword ptr [rax]
0x0000000000422a92 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x00000000004166c2 : or eax, 0x70c48348 ; pop rbx ; ret
0x000000000041f9b7 : or eax, 0x83480000 ; ret 0x4910
0x000000000041fa21 : or eax, 0x83480000 ; ret 0xe910
0x000000000049355d : or eax, 0x83489066 ; ret 0x4810
0x0000000000443223 : or eax, 0x83489074 ; ret
0x000000000047f636 : or eax, 0x894c0000 ; ret
0x00000000004b5a37 : or eax, 0xd1cfff6 ; shl esp, -0xb ; jmp qword ptr [rdx]
0x00000000004b5b0f : or eax, 0xd1cfff6 ; test al, 0xe4 ; cmc ; jmp qword ptr [rdx]
0x00000000004b5ac7 : or eax, 0xd1cfff6 ; wait ; in al, -0xb ; jmp qword ptr [rdx]
0x00000000004b5a7f : or eax, 0xd1cfff6 ; xchg eax, ebp ; in al, -0xb ; jmp qword ptr [rdx]
0x00000000004ae593 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x0000000000496561 : or eax, 0xf00fff9 ; stc ; jmp rax
0x0000000000496541 : or eax, 0xf40fff9 ; stc ; jmp qword ptr [rax]
0x000000000042a993 : or eax, 0xf7f0ff3 ; ret
0x00000000004b6215 : or eax, 0xfff60673 ; sbb al, 0xd ; ret
0x00000000004b5c2d : or eax, 0xfff60bfd ; sbb al, 0xd ; ret
0x00000000004b57ad : or eax, 0xfff61019 ; sbb al, 0xd ; pop rax ; ret 0xfff5
0x00000000004b544d : or eax, 0xfff61340 ; sbb al, 0xd ; ret
0x00000000004bd2c5 : or eax, 0xfffb8913 ; sbb al, 0xd ; ret
0x0000000000434021 : or eax, 0xffffffff ; ret
0x00000000004be724 : or eax, dword ptr [r8] ; add byte ptr [rax + rax], cl ; add ah, cl ; ret
0x00000000004be725 : or eax, dword ptr [rax] ; add byte ptr [rax + rax], cl ; add ah, cl ; ret
0x0000000000433f9e : or eax, dword ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000004186cd : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041fbc1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004186f1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004be69c : or eax, dword ptr [rax] ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; ret
0x00000000004b2f3d : or eax, dword ptr [rax] ; add byte ptr [rax], dh ; cmc ; call qword ptr [rbx]
0x0000000000490b63 : or eax, dword ptr [rcx + 0x7ffe2] ; add byte ptr [rcx], cl ; ret 0x5389
0x000000000045e831 : or eax, dword ptr [rdx] ; sti ; dec dword ptr [rax - 0x77] ; ret
0x00000000004224a7 : or eax, edx ; mov qword ptr [rdi], rax ; pop rbx ; pop rbp ; ret
0x000000000048cc91 : or eax, edx ; mov qword ptr [rsi], r8 ; ret
0x000000000040e764 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004bf17a : or ebp, edx ; add dword ptr [rbx], eax ; ret
0x0000000000458f74 : or ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000045d601 : or ebx, dword ptr [rdi + 0x26] ; add byte ptr [rcx + 0x29], cl ; ret
0x00000000004bd18d : or ebx, edi ; jmp qword ptr [rdx]
0x000000000042ab53 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000475abe : or ebx, esi ; ret
0x00000000004154da : or ecx, dword ptr [rax + 0x63] ; ret
0x000000000040af9f : or ecx, dword ptr [rax + 1] ; ret 0x8949
0x000000000044059e : or ecx, dword ptr [rax - 0x77] ; ret 0xc889
0x000000000045b8b3 : or ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040f4dc : or ecx, dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043b794 : or ecx, dword ptr [rcx + 0x4289504a] ; push rsp ; ret
0x0000000000445c5c : or ecx, dword ptr [rcx + rcx*4 - 0x1e] ; mov rdi, r14 ; call 0x421e99
0x000000000040fe3f : or ecx, dword ptr [rcx - 0x7d] ; ret
0x000000000046acb5 : or ecx, eax ; not r9 ; jmp 0x46acd4
0x000000000046ad5f : or ecx, eax ; not r9 ; jmp 0x46ad7e
0x000000000048d091 : or ecx, ebp ; ret
0x000000000046aa6e : or edx, eax ; not rdx ; jmp 0x46aa89
0x000000000046ab3c : or edx, eax ; not rdx ; jmp 0x46ab57
0x00000000004bb72c : or esi, dword ptr [r13 + 0xa] ; ret
0x00000000004bb72d : or esi, dword ptr [rbp + 0xa] ; ret
0x0000000000414870 : or esi, dword ptr [rcx] ; salc ; mov byte ptr [rax + rbx], sil ; pop rbx ; ret
0x000000000042aa73 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000045ece4 : or esi, ebx ; ret
0x000000000040ada1 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000042abc2 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x000000000042ab52 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x000000000042aae2 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000004bb75c : or r14d, dword ptr [r13 + 0xa] ; ret
0x000000000042aa72 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000048cc90 : or r8, rdx ; mov qword ptr [rsi], r8 ; ret
0x000000000046acb4 : or r9, rax ; not r9 ; jmp 0x46acd5
0x000000000046ad5e : or r9, rax ; not r9 ; jmp 0x46ad7f
0x00000000004bc9c7 : or rax, 0x3520303 ; ret
0x00000000004b5ac6 : or rax, 0xd1cfff6 ; wait ; in al, -0xb ; jmp qword ptr [rdx]
0x0000000000434020 : or rax, 0xffffffffffffffff ; ret
0x0000000000489442 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004224a6 : or rax, r10 ; mov qword ptr [rdi], rax ; pop rbx ; pop rbp ; ret
0x000000000046aa6d : or rdx, rax ; not rdx ; jmp 0x46aa8a
0x000000000046ab3b : or rdx, rax ; not rdx ; jmp 0x46ab58
0x00000000004ad440 : out -0x31, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004b5b5d : out -0xb, eax ; jmp qword ptr [rdx]
0x00000000004af168 : out -0xb, eax ; mov ch, 0xab ; ret
0x000000000042a3da : out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004baf39 : out -7, eax ; jmp qword ptr [rax]
0x0000000000491a2a : out 0x41, eax ; call rsp
0x0000000000466dbc : out 0x41, eax ; pop rsp ; pop r13 ; jmp rax
0x0000000000469279 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000048f309 : out 0x48, al ; mov dword ptr [rdi + rsi*8], edx ; add rsp, 8 ; ret
0x000000000040e173 : out 0x5b, al ; ret
0x0000000000479b25 : out 0x89, al ; out dx, eax ; call qword ptr [rbx]
0x0000000000479ae8 : out 0x89, al ; out dx, eax ; call rax
0x0000000000433f9b : out 0xe8, al ; pop rdi ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000004963c8 : out 0xeb, al ; clc ; jmp rsi
0x00000000004963cc : out 0xec, al ; clc ; jmp rsi
0x000000000042a35a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004b6a09 : out 0xf5, al ; call rdx
0x0000000000482a0c : out 0xff, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000468348 : out 3, eax ; call 0x414614
0x0000000000422319 : out dx, al ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00000000004963d5 : out dx, al ; clc ; jmp rsi
0x00000000004b5f4d : out dx, al ; cmc ; jmp qword ptr [rdx]
0x00000000004ae597 : out dx, al ; fcmovb st(0), st(3) ; ret
0x00000000004274fa : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042a76a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042131e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004963dc : out dx, ax ; clc ; jmp rsi
0x0000000000422785 : out dx, eax ; adc byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000479c66 : out dx, eax ; add dword ptr [rsi - 0x73], ecx ; jl 0x479c6d ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000407e77 : out dx, eax ; add ecx, ebp ; ret
0x000000000041c19e : out dx, eax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000408a06 : out dx, eax ; call 0x414c93
0x000000000046c558 : out dx, eax ; call 0x47b758
0x0000000000479b27 : out dx, eax ; call qword ptr [rbx]
0x0000000000479aea : out dx, eax ; call rax
0x000000000043653a : out dx, eax ; call rbx
0x00000000004963dd : out dx, eax ; clc ; jmp rsi
0x0000000000483fd9 : out dx, eax ; jmp qword ptr [rbx]
0x00000000004b1cd0 : out dx, eax ; mov bl, 0xfd ; jmp qword ptr [rax]
0x00000000004ba156 : out dx, eax ; mov esp, 0xd1cfff9 ; jne 0x4ba123 ; stc ; jmp qword ptr [rdx]
0x0000000000466ef3 : out dx, eax ; mov qword ptr [rax], 0 ; call r12
0x000000000042732a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427426 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000427372 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042a7ea : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042141d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000040e128 : out dx, eax ; pop rbx ; ret
0x00000000004242b3 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004242c8 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004242dd : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043eec3 : out dx, eax ; ret 0
0x00000000004329a3 : out dx, eax ; ret 0xf66
0x00000000004257cc : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x00000000004257b5 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042579e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042425a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000457c15 : out dx, eax ; xor r8d, r8d ; call r12
0x000000000041f32e : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004b920d : outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; nop ; mov al, 0xf8 ; call qword ptr [rcx]
0x0000000000430dce : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000496249 : outsb dx, byte ptr [rsi] ; clc ; inc eax ; jo 0x49624d ; call rax
0x00000000004aed43 : outsb dx, byte ptr [rsi] ; ja 0x4aeccc ; ret 0x48f
0x00000000004aca84 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x000000000041c7aa : outsb dx, byte ptr [rsi] ; xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x00000000004bb3ce : outsd dx, dword ptr [rsi] ; adc eax, 0xd1cfffa ; jbe 0x4bb3f2 ; cli ; jmp qword ptr [rdx]
0x00000000004b92cd : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; mov al, 0xb5 ; clc ; call qword ptr [rcx]
0x00000000004b9345 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; pop rax ; mov dh, 0xf8 ; jmp qword ptr [rsi]
0x00000000004b92b5 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; test al, 0xb5 ; clc ; call qword ptr [rcx]
0x00000000004172c8 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000041cdfe : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000004255cd : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000042566d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000459a0a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000004255d2 : outsd dx, dword ptr [rsi] ; ret
0x00000000004ad446 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000427c67 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x0000000000425672 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x0000000000459a5a : outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000004ad445 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004185c2 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000045a844 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x000000000045a82f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x00000000004185c1 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004ae845 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004ae846 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x0000000000419486 : pmovmskb edx, mm4 ; test edx, edx ; je 0x41949a ; bsf eax, edx ; ret
0x000000000043cbfd : pop qword ptr [rdx + 0x31000000] ; ror byte ptr [rax + 0x39], cl ; ret
0x0000000000437044 : pop r10 ; ret
0x00000000004aeccf : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000414c64 : pop r12 ; jmp rax
0x000000000045054b : pop r12 ; mov eax, 1 ; pop r13 ; ret
0x0000000000401a60 : pop r12 ; mov rax, rcx ; pop r13 ; ret
0x000000000040bde8 : pop r12 ; neg eax ; pop r13 ; ret
0x0000000000466dbd : pop r12 ; pop r13 ; jmp rax
0x000000000045a5a8 : pop r12 ; pop r13 ; mov eax, edx ; pop r14 ; ret
0x000000000045e628 : pop r12 ; pop r13 ; mov rax, r14 ; pop r14 ; ret
0x000000000041502f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000400656 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040168c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004017a2 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004080e4 : pop r12 ; pop r13 ; pop rbp ; ret
0x00000000004019ed : pop r12 ; pop r13 ; ret
0x000000000043a7a9 : pop r12 ; pop r13 ; xor eax, eax ; pop r14 ; ret
0x000000000045f244 : pop r12 ; pop rbp ; ret
0x0000000000400493 : pop r12 ; ret
0x000000000040da6e : pop r12 ; sub rax, r13 ; pop r13 ; pop r14 ; ret
0x0000000000466dbf : pop r13 ; jmp rax
0x000000000045047d : pop r13 ; mov eax, 1 ; pop r14 ; ret
0x000000000045a5aa : pop r13 ; mov eax, edx ; pop r14 ; ret
0x000000000045e62a : pop r13 ; mov rax, r14 ; pop r14 ; ret
0x0000000000481452 : pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x0000000000415031 : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000400658 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040168e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004017a4 : pop r13 ; pop r14 ; ret
0x00000000004080e6 : pop r13 ; pop rbp ; ret
0x00000000004019ef : pop r13 ; ret
0x0000000000458d8b : pop r13 ; sub rax, r14 ; pop r14 ; pop r15 ; ret
0x000000000043a7ab : pop r13 ; xor eax, eax ; pop r14 ; ret
0x000000000046bbba : pop r14 ; idiv r9 ; pop r15 ; ret
0x0000000000409353 : pop r14 ; mov eax, 0xffffffff ; pop r15 ; ret
0x0000000000461f98 : pop r14 ; mov eax, 1 ; pop r15 ; ret
0x000000000047eb9a : pop r14 ; mulsd xmm0, xmm0 ; pop r15 ; ret
0x000000000047bdaa : pop r14 ; mulss xmm0, xmm0 ; pop r15 ; ret
0x0000000000481454 : pop r14 ; pop r15 ; fmulp st(1) ; ret
0x0000000000415033 : pop r14 ; pop r15 ; jmp rax
0x000000000040065a : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401690 : pop r14 ; pop r15 ; ret
0x00000000004017a6 : pop r14 ; ret
0x0000000000478471 : pop r14 ; sar rax, 3 ; pop r15 ; ret
0x0000000000481456 : pop r15 ; fmulp st(1) ; ret
0x0000000000415035 : pop r15 ; jmp rax
0x000000000040065c : pop r15 ; pop rbp ; ret
0x0000000000401692 : pop r15 ; ret
0x000000000045dc33 : pop r9 ; add byte ptr es:[rax - 0x7d], cl ; ret
0x000000000047b420 : pop rax ; adc byte ptr [rbx], cl ; xor eax, eax ; call 0x467728
0x000000000041c2aa : pop rax ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x000000000048cdc3 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x00000000004b8424 : pop rax ; and eax, edi ; jmp qword ptr [rdx]
0x000000000043de0d : pop rax ; call rax
0x00000000004be0f1 : pop rax ; cld ; call rbx
0x00000000004b3078 : pop rax ; cmc ; call qword ptr [rax]
0x00000000004b32bc : pop rax ; cmc ; jmp qword ptr [rdx]
0x00000000004b8f18 : pop rax ; cwde ; clc ; call qword ptr [rdx]
0x00000000004b9348 : pop rax ; mov dh, 0xf8 ; jmp qword ptr [rsi]
0x000000000044556b : pop rax ; or cl, ch ; ret
0x00000000004be044 : pop rax ; pop rdx ; cld ; jmp qword ptr [rdx]
0x000000000044d0f4 : pop rax ; ret
0x00000000004b57b4 : pop rax ; ret 0xfff5
0x0000000000416e84 : pop rax ; sahf ; add dword ptr [rax], eax ; ret
0x0000000000479d92 : pop rax ; sub byte ptr [rax + 0x39], cl ; ret
0x0000000000437225 : pop rbp ; and eax, 0xc ; pop r12 ; ret
0x00000000004b3855 : pop rbp ; cmc ; jmp qword ptr [rdx]
0x0000000000414741 : pop rbp ; jmp rax
0x0000000000401013 : pop rbp ; mov byte ptr [rip + 0x2c0c25], 1 ; ret
0x000000000045047e : pop rbp ; mov eax, 1 ; pop r14 ; ret
0x0000000000456fe4 : pop rbp ; mov eax, edx ; pop r12 ; ret
0x000000000045a5ab : pop rbp ; mov eax, edx ; pop r14 ; ret
0x0000000000400fa1 : pop rbp ; mov edi, 0x6c1c30 ; jmp rax
0x0000000000466db9 : pop rbp ; mov edi, r12d ; pop r12 ; pop r13 ; jmp rax
0x0000000000422c99 : pop rbp ; mov rax, r12 ; pop r12 ; ret
0x000000000045e62b : pop rbp ; mov rax, r14 ; pop r14 ; ret
0x0000000000400fde : pop rbp ; mov rsi, rax ; mov edi, 0x6c1c30 ; jmp rdx
0x0000000000401e2b : pop rbp ; or byte ptr [rax - 0x73], 0x44 ; shr al, 1 ; mov rdx, rax ; jmp 0x401e56
0x0000000000414c63 : pop rbp ; pop r12 ; jmp rax
0x0000000000401a5f : pop rbp ; pop r12 ; mov rax, rcx ; pop r13 ; ret
0x000000000040bde7 : pop rbp ; pop r12 ; neg eax ; pop r13 ; ret
0x000000000045a5a7 : pop rbp ; pop r12 ; pop r13 ; mov eax, edx ; pop r14 ; ret
0x000000000041502e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000040168b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004017a1 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004019ec : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000043a7a8 : pop rbp ; pop r12 ; pop r13 ; xor eax, eax ; pop r14 ; ret
0x0000000000400492 : pop rbp ; pop r12 ; ret
0x000000000047eb99 : pop rbp ; pop r14 ; mulsd xmm0, xmm0 ; pop r15 ; ret
0x000000000047bda9 : pop rbp ; pop r14 ; mulss xmm0, xmm0 ; pop r15 ; ret
0x0000000000481453 : pop rbp ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x0000000000415032 : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x0000000000400659 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040168f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004017a5 : pop rbp ; pop r14 ; ret
0x0000000000478470 : pop rbp ; pop r14 ; sar rax, 3 ; pop r15 ; ret
0x00000000004080e7 : pop rbp ; pop rbp ; ret
0x000000000046d048 : pop rbp ; pop rbx ; ret
0x00000000004003cf : pop rbp ; ret
0x0000000000457c28 : pop rbp ; sub rax, r14 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000458d8c : pop rbp ; sub rax, r14 ; pop r14 ; pop r15 ; ret
0x0000000000406069 : pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000043a7ac : pop rbp ; xor eax, eax ; pop r14 ; ret
0x00000000004ac018 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000043311f : pop rbx ; and eax, 0x3fc00 ; ret
0x000000000043314f : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004be1b1 : pop rbx ; cld ; jmp qword ptr [rax]
0x00000000004b380d : pop rbx ; cmc ; jmp qword ptr [rdx]
0x00000000004ac016 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000457153 : pop rbx ; div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000475dfe : pop rbx ; div rbp ; pop rbp ; pop r12 ; ret
0x00000000004839ea : pop rbx ; jmp rax
0x0000000000432e29 : pop rbx ; lea rax, qword ptr [r9 + 1] ; pop rbp ; ret
0x0000000000409ddc : pop rbx ; mov eax, 0xffffffff ; pop rbp ; ret
0x00000000004682ad : pop rbx ; mov eax, dword ptr fs:[rax] ; ret
0x00000000004331b0 : pop rbx ; mov eax, eax ; ret
0x0000000000408285 : pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000044be32 : pop rbx ; mov eax, ebp ; pop rbp ; ret
0x0000000000467826 : pop rbx ; mov eax, edx ; pop rbp ; ret
0x0000000000469ffa : pop rbx ; mov edi, 0x6c11e0 ; jmp rax
0x000000000040d376 : pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040d4f6 : pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00000000004577f7 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046813e : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000004080e3 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000045f243 : pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000437224 : pop rbx ; pop rbp ; and eax, 0xc ; pop r12 ; ret
0x0000000000414740 : pop rbx ; pop rbp ; jmp rax
0x0000000000456fe3 : pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x0000000000466db8 : pop rbx ; pop rbp ; mov edi, r12d ; pop r12 ; pop r13 ; jmp rax
0x0000000000422c98 : pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x0000000000414c62 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000401a5e : pop rbx ; pop rbp ; pop r12 ; mov rax, rcx ; pop r13 ; ret
0x000000000040bde6 : pop rbx ; pop rbp ; pop r12 ; neg eax ; pop r13 ; ret
0x00000000004017a0 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004019eb : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000400491 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004003ce : pop rbx ; pop rbp ; ret
0x0000000000406068 : pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x0000000000408482 : pop rbx ; ret
0x00000000004af300 : pop rbx ; ret 0x6f9
0x0000000000438681 : pop rbx ; shl eax, cl ; pop rbp ; ret
0x000000000045abf8 : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000476028 : pop rbx ; xor esi, esi ; mov edi, dword ptr [rip + 0x24d61f] ; jmp rax
0x000000000045dc34 : pop rcx ; add byte ptr es:[rax - 0x7d], cl ; ret
0x00000000004b37c5 : pop rcx ; cmc ; jmp qword ptr [rdx]
0x00000000004b7f07 : pop rcx ; ret
0x0000000000425ea8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000441efd : pop rdi ; adc ebp, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x7b73
0x000000000045d602 : pop rdi ; add byte ptr es:[rcx + 0x29], cl ; ret
0x0000000000469480 : pop rdi ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x0000000000421aad : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000481457 : pop rdi ; fmulp st(1) ; ret
0x00000000004278c9 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004276d9 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004ae5be : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000415036 : pop rdi ; jmp rax
0x00000000004ad581 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x000000000045f0a4 : pop rdi ; mov rax, r9 ; ret
0x0000000000433f9d : pop rdi ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000004274f9 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427329 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427425 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000427371 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000040065d : pop rdi ; pop rbp ; ret
0x0000000000401693 : pop rdi ; ret
0x00000000004bb8cc : pop rdi ; sub al, 0xfa ; jmp qword ptr [rdx]
0x000000000040b567 : pop rdx ; cdqe ; ret
0x00000000004be045 : pop rdx ; cld ; jmp qword ptr [rdx]
0x00000000004bbee9 : pop rdx ; cli ; jmp rdi
0x00000000004ae1a1 : pop rdx ; je 0x4ae16b ; ret 0xacfc
0x00000000004af167 : pop rdx ; out -0xb, eax ; mov ch, 0xab ; ret
0x0000000000437043 : pop rdx ; pop r10 ; ret
0x000000000041473f : pop rdx ; pop rbx ; pop rbp ; jmp rax
0x0000000000437069 : pop rdx ; pop rsi ; ret
0x0000000000437045 : pop rdx ; ret
0x00000000004001cd : pop rdx ; ret 0xb50f
0x0000000000414492 : pop rdx ; ret 0xffff
0x00000000004aecd0 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004bb844 : pop rdx ; sub al, 0xfa ; jmp qword ptr [rdx]
0x00000000004219ae : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000475e6e : pop rsi ; add byte ptr [r15 + 0x6c3640], r15b ; call rax
0x000000000040c8e9 : pop rsi ; and al, byte ptr [rax] ; add bl, dh ; ret
0x000000000046a9d0 : pop rsi ; dec dword ptr [rax + 0x63] ; ret
0x000000000046bbbb : pop rsi ; idiv r9 ; pop r15 ; ret
0x0000000000409354 : pop rsi ; mov eax, 0xffffffff ; pop r15 ; ret
0x0000000000461f99 : pop rsi ; mov eax, 1 ; pop r15 ; ret
0x000000000047eb9b : pop rsi ; mulsd xmm0, xmm0 ; pop r15 ; ret
0x000000000047bdab : pop rsi ; mulss xmm0, xmm0 ; pop r15 ; ret
0x00000000004224b5 : pop rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000481455 : pop rsi ; pop r15 ; fmulp st(1) ; ret
0x0000000000415034 : pop rsi ; pop r15 ; jmp rax
0x000000000040065b : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000401691 : pop rsi ; pop r15 ; ret
0x00000000004017a7 : pop rsi ; ret
0x0000000000478472 : pop rsi ; sar rax, 3 ; pop r15 ; ret
0x000000000041f540 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004803bc : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000420240 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x000000000041314b : pop rsp ; and al, 0x28 ; call rax
0x00000000004be309 : pop rsp ; cld ; call qword ptr [rax]
0x000000000046f2a8 : pop rsp ; in eax, -1 ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x0000000000414c65 : pop rsp ; jmp rax
0x000000000045054c : pop rsp ; mov eax, 1 ; pop r13 ; ret
0x0000000000450617 : pop rsp ; mov eax, edx ; pop rbx ; ret
0x0000000000401a61 : pop rsp ; mov rax, rcx ; pop r13 ; ret
0x000000000040bde9 : pop rsp ; neg eax ; pop r13 ; ret
0x0000000000418a20 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000466dbe : pop rsp ; pop r13 ; jmp rax
0x000000000045a5a9 : pop rsp ; pop r13 ; mov eax, edx ; pop r14 ; ret
0x000000000045e629 : pop rsp ; pop r13 ; mov rax, r14 ; pop r14 ; ret
0x0000000000481451 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x0000000000415030 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000400657 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040168d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004017a3 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000004080e5 : pop rsp ; pop r13 ; pop rbp ; ret
0x00000000004019ee : pop rsp ; pop r13 ; ret
0x000000000043a7aa : pop rsp ; pop r13 ; xor eax, eax ; pop r14 ; ret
0x000000000045f245 : pop rsp ; pop rbp ; ret
0x0000000000400494 : pop rsp ; ret
0x000000000047a550 : pop rsp ; ret 0xfffc
0x000000000040da6f : pop rsp ; sub rax, r13 ; pop r13 ; pop r14 ; ret
0x00000000004ba8bc : pop rsp ; test dword ptr [rax], eax ; add al, dh ; sar cl, 1 ; call rcx
0x00000000004961e9 : popfq ; clc ; jmp qword ptr [rax]
0x00000000004b45e5 : popfq ; cmc ; jmp qword ptr [rdx]
0x0000000000433079 : popfq ; ret 0xea81
0x0000000000486a40 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496c11 : popfq ; stc ; call rax
0x0000000000496c19 : popfq ; stc ; inc dword ptr [rax] ; sahf ; stc ; call qword ptr [rax]
0x0000000000496c0d : popfq ; stc ; inc eax ; popfq ; stc ; call rax
0x00000000004ba024 : popfq ; stc ; jmp qword ptr [rdx]
0x00000000004b57f7 : psadbw mm7, mm7 ; sbb al, 0xd ; jmp 0x234b4dcb
0x000000000042a8b2 : psllq mm1, qword ptr [r15] ; jg 0x42a8cd ; ret
0x000000000042a8b3 : psllq mm1, qword ptr [rdi] ; jg 0x42a8cc ; ret
0x0000000000430496 : psllq mm1, qword ptr [rdi] ; jg 0x4304aa ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000430495 : psllq mm1, qword ptr [rdi] ; jg 0x4304ab ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000004304f7 : psllq mm1, qword ptr [rdi] ; jg 0x43050c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000430db4 : push -0x9ffffff ; ret 0x7501
0x000000000046f3ca : push 0x15044f6 ; and byte ptr [rdi], cl ; test al, dl ; jmp 0x46f3dc
0x000000000046f3c9 : push 0x15044f6 ; and byte ptr [rdi], cl ; test al, dl ; jmp 0x46f3dd
0x0000000000406af0 : push 0x2002bb7 ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000496480 : push 0x30fff90e ; adc cl, bh ; call qword ptr [rax]
0x0000000000434c22 : push 0x3b ; add byte ptr [rax], al ; ret
0x00000000004aed42 : push 0x6e ; ja 0x4aeccd ; ret 0x48f
0x000000000046afc0 : push 0x83 ; ret
0x00000000004960d7 : push qword ptr [rax + 0x2a] ; clc ; inc dword ptr [rax + 0x2b] ; clc ; call qword ptr [rax]
0x0000000000496a7f : push qword ptr [rax + 0x37] ; stc ; call qword ptr [rax]
0x0000000000496a77 : push qword ptr [rax + 0x38] ; stc ; jmp rax
0x0000000000496667 : push qword ptr [rax + 0x40fff944] ; stc ; call rax
0x0000000000401430 : push qword ptr [rax + 0x48] ; add esp, 8 ; ret
0x00000000004965a3 : push qword ptr [rax + 0xe] ; stc ; inc dword ptr [rax + 0x10] ; stc ; jmp qword ptr [rax]
0x000000000049661f : push qword ptr [rax + 1] ; stc ; inc eax ; add bh, cl ; call qword ptr [rax]
0x00000000004b228b : push qword ptr [rax - 0x26] ; std ; jmp rax
0x0000000000496c0b : push qword ptr [rax - 0x3f000663] ; popfq ; stc ; call rax
0x0000000000496bb3 : push qword ptr [rax - 0x3f000668] ; cwde ; stc ; call rax
0x0000000000496247 : push qword ptr [rax - 0x3f000792] ; jo 0x49624f ; call rax
0x000000000049620f : push qword ptr [rax - 0x53] ; clc ; inc eax ; scasb al, byte ptr [rdi] ; clc ; call qword ptr [rax]
0x0000000000496277 : push qword ptr [rax - 0x79] ; clc ; call qword ptr [rax]
0x0000000000496473 : push qword ptr [rax - 0xe] ; clc ; call qword ptr [rax]
0x00000000004965cb : push qword ptr [rax - 6] ; clc ; inc eax ; sti ; clc ; call qword ptr [rax]
0x0000000000496483 : push qword ptr [rax] ; adc cl, bh ; call qword ptr [rax]
0x0000000000432738 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x0000000000409e6b : push qword ptr [rbp + 2] ; pop rbx ; ret
0x00000000004967db : push qword ptr [rbp + rax*2 + 0x4544fff9] ; stc ; call rsp
0x000000000040e171 : push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x000000000043743c : push qword ptr [rbp - 7] ; nop ; xor eax, eax ; leave ; ret
0x000000000040e123 : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x000000000040a2c4 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004701a1 : push qword ptr [rcx] ; rol byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x9f ; ret 0x9529
0x0000000000473ddb : push qword ptr [rcx] ; rol byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], cl ; lahf ; ret 0x9529
0x00000000004146e2 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000433ffa : push qword ptr [rdi + 0x17] ; ret
0x0000000000434049 : push qword ptr [rdi + 0x18] ; ret
0x0000000000444a0e : push qword ptr [rdi + 0x19] ; ret
0x000000000045ea8f : push qword ptr [rdi + 0x1a] ; ret
0x000000000045eb1e : push qword ptr [rdi + 0x35] ; add rsp, 0x70 ; pop rbx ; ret
0x00000000004341de : push qword ptr [rdi + 0x71] ; ret
0x000000000045ed3c : push qword ptr [rdi + 1] ; ret
0x0000000000444ca5 : push qword ptr [rdi + 2] ; ret
0x000000000045e68d : push qword ptr [rdi + rbp - 0x77] ; ret 0xe283
0x0000000000492706 : push qword ptr [rdi + rbx - 0x18] ; ret 0xfff7
0x0000000000496713 : push qword ptr [rdx + 0x42fff946] ; stc ; call rdx
0x0000000000475cd3 : push qword ptr [rdx + rcx + 0x48] ; mov eax, edx ; pop rbx ; ret
0x0000000000496933 : push qword ptr [rdx] ; cmp ecx, edi ; jmp qword ptr [rdx + 0x12fff938]
0x00000000004966af : push qword ptr [rsi + 0x46fff943] ; stc ; call rsi
0x0000000000458fdd : push qword ptr [rsi + rsi*4 - 0xa] ; ret 0x7508
0x00000000004b3604 : push r10 ; cmc ; jmp qword ptr [rdx]
0x000000000040d2db : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000412b9b : push rax ; adc byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000045823a : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000040e771 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000049648b : push rax ; adc edi, ecx ; call rax
0x0000000000467894 : push rax ; add al, 0x48 ; cmp edx, ecx ; jne 0x467852 ; mov eax, dword ptr [rdx] ; ret
0x000000000040d2dc : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000045c1c8 : push rax ; add eax, dword ptr [rdi + rcx + 0x48] ; ret 0x93ba
0x0000000000436a0a : push rax ; add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x48 ; ret 0xc148
0x0000000000496adc : push rax ; and al, 0xf9 ; call rax
0x0000000000496b10 : push rax ; and cl, bh ; call rax
0x0000000000496ad4 : push rax ; and ecx, edi ; call rax
0x0000000000496b18 : push rax ; and edi, ecx ; call rax
0x0000000000496be7 : push rax ; cdq ; stc ; call qword ptr [rax]
0x0000000000496140 : push rax ; clc ; call rax
0x00000000004b3090 : push rax ; cmc ; call qword ptr [rdx]
0x00000000004b33ed : push rax ; cmc ; jmp qword ptr [rdx]
0x0000000000496150 : push rax ; cmp al, 0xf8 ; call rax
0x000000000045717b : push rax ; cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf40
0x0000000000496148 : push rax ; cmp eax, edi ; call rax
0x0000000000496bc3 : push rax ; cwde ; stc ; call qword ptr [rax]
0x0000000000471310 : push rax ; fcos ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x0000000000496440 : push rax ; hlt ; clc ; jmp rax
0x000000000049646c : push rax ; int1 ; clc ; jmp rax
0x0000000000496257 : push rax ; jbe 0x49625b ; inc dword ptr [rax] ; jns 0x49625f ; call qword ptr [rax]
0x000000000047277f : push rax ; jmp 0x46e9d4
0x000000000046b79c : push rax ; jmp qword ptr [rax]
0x00000000004b6940 : push rax ; jrcxz 0x4b693b ; jmp rbx
0x000000000043b797 : push rax ; mov dword ptr [rdx + 0x54], eax ; ret
0x000000000043fd3d : push rax ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000043d767 : push rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000479929 : push rax ; or byte ptr [rbp + 0x440f4cd2], al ; ret
0x0000000000405ffd : push rax ; or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000044b90a : push rax ; or byte ptr [rcx - 0x77], cl ; push rdi ; or cl, ch ; ret 0xfffb
0x000000000041284a : push rax ; or dh, dh ; ret 0x7404
0x0000000000412866 : push rax ; or dh, dh ; ret 0xf04
0x000000000041892c : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496c17 : push rax ; popfq ; stc ; inc dword ptr [rax] ; sahf ; stc ; call qword ptr [rax]
0x00000000004b6420 : push rax ; sahf ; cmc ; call rcx
0x0000000000496c3f : push rax ; sahf ; stc ; inc dword ptr [rax] ; lahf ; stc ; jmp qword ptr [rax]
0x0000000000496317 : push rax ; sar eax, 1 ; call qword ptr [rax]
0x000000000040e766 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004590da : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x0000000000496ac4 : push rax ; sbb edi, ecx ; call rax
0x0000000000496b20 : push rax ; stc ; call rax
0x0000000000496650 : push rax ; stc ; jmp rax
0x00000000004b60b4 : push rax ; sti ; cmc ; jmp qword ptr [rdx]
0x0000000000496b30 : push rax ; sub al, 0xf9 ; call rax
0x0000000000496aec : push rax ; sub bh, cl ; call rax
0x0000000000496b28 : push rax ; sub ecx, edi ; call rax
0x0000000000496b83 : push rax ; xchg eax, edi ; stc ; inc dword ptr [rax] ; cwde ; stc ; call qword ptr [rax]
0x00000000004960f7 : push rax ; xor al, bh ; call qword ptr [rax]
0x000000000040e16d : push rax ; xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x0000000000496afc : push rax ; xor cl, bh ; call qword ptr [rax - 0x2f0006e6]
0x0000000000491e56 : push rbp ; adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000043ecda : push rbp ; add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x0000000000487b88 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000413b20 : push rbp ; or dh, dh ; ret 0x7502
0x000000000045557f : push rbp ; ret
0x0000000000457c11 : push rbp ; ror byte ptr [rcx + rcx*4 - 0x11], 0x45 ; xor eax, eax ; call r12
0x000000000041bc1a : push rbp ; xor rax, rax ; ret
0x0000000000401186 : push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000004760b0 : push rbx ; add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b76dd : push rbx ; add byte ptr [rax], al ; rol al, 0xf7 ; jmp rax
0x0000000000404adb : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000041bcea : push rbx ; add dword ptr [rax], eax ; ret
0x0000000000490b6d : push rbx ; and cl, ch ; ret 0xfffb
0x0000000000458fa2 : push rbx ; je 0x459006 ; pop rbp ; pop r12 ; ret
0x0000000000456535 : push rbx ; or al, 0xf6 ; ret 0x7404
0x0000000000456b02 : push rbx ; or al, 0xf6 ; ret 0xf04
0x000000000040f27a : push rbx ; or byte ptr [rax + 0x29], cl ; ret 0x148
0x0000000000467a37 : push rbx ; or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000435292 : push rbx ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000040d76d : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x000000000040f919 : push rbx ; ret
0x0000000000460894 : push rbx ; sub dh, dh ; ret 0xf04
0x000000000040ac4f : push rbx ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000004ae19c : push rbx ; xchg eax, edx ; jae 0x4ae17b ; push rsi ; pop rdx ; je 0x4ae170 ; ret 0xacfc
0x000000000041b6cd : push rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004ad425 : push rcx ; call qword ptr [rsi]
0x00000000004b3575 : push rcx ; cmc ; jmp qword ptr [rdx]
0x00000000004b6ca6 : push rcx ; ret
0x00000000004309da : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x000000000042aa19 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000430a8c : push rdi ; add eax, 0xc478d48 ; ret
0x00000000004271b8 : push rdi ; clc ; ret
0x0000000000427330 : push rdi ; cld ; ret
0x0000000000427e57 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004b38a9 : push rdi ; cmc ; jmp rsp
0x000000000042a2f9 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000045ecaf : push rdi ; fisub dword ptr [rcx + rcx*4 + 0x10] ; or eax, 0xffffffff ; ret
0x000000000042a279 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042a0ca : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000040d214 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000042a15a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000046d03a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000047b82a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000046d041 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x0000000000472de5 : push rdi ; or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rax - 0x7d], cl ; ret
0x000000000046e8f6 : push rdi ; or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x000000000046dcad : push rdi ; or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rcx - 0x7d], cl ; ret 0x4401
0x000000000046e556 : push rdi ; or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rcx - 0x7d], cl ; ret 0xe901
0x000000000044b90e : push rdi ; or cl, ch ; ret 0xfffb
0x00000000004b292c : push rdi ; or dh, ch ; jmp qword ptr [rdx]
0x0000000000430c70 : push rdi ; or eax, 0x1c478d48 ; ret
0x00000000004255ce : push rdi ; ret
0x000000000042566e : push rdi ; ret 0xff3
0x0000000000407a81 : push rdi ; ret 0xffef
0x00000000004353f2 : push rdi ; sbb byte ptr [rcx - 0xa], al ; ret 0x7401
0x0000000000428057 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042787a : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000427c57 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000459a0b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000004b35bd : push rdx ; cmc ; jmp qword ptr [rdx]
0x00000000004bd18c : push rdx ; or ebx, edi ; jmp qword ptr [rdx]
0x00000000004b44c4 : push rdx ; pushfq ; cmc ; jmp qword ptr [rdx]
0x00000000004242b4 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000045871d : push rsi ; add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000042acb1 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000042ad21 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000430425 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x000000000042ac41 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004303c3 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x00000000004242c9 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004272e2 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000427a51 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427685 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427865 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427a45 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004274a5 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004aed40 : push rsi ; cli ; push 0x6e ; ja 0x4aeccf ; ret 0x48f
0x0000000000432276 : push rsi ; cmc ; sub eax, edx ; ret
0x0000000000432266 : push rsi ; hlt ; sub eax, edx ; ret
0x0000000000432236 : push rsi ; int1 ; sub eax, edx ; ret
0x000000000042253d : push rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000004ae1a0 : push rsi ; pop rdx ; je 0x4ae16c ; ret 0xacfc
0x00000000004ac0e6 : push rsi ; ret
0x000000000046091d : push rsi ; ret 0xf02
0x0000000000496698 : push rsi ; stc ; jmp rsi
0x0000000000432246 : push rsi ; sub eax, edx ; ret
0x00000000004242de : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000413146 : push rsp ; and al, 0x30 ; mov dword ptr [rsp + 0x28], r11d ; call rax
0x000000000048cbe0 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000048cb9a : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000041448e : push rsp ; and al, 8 ; call 0x4106f5
0x00000000004bcab4 : push rsp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; clc ; in eax, -6 ; jmp qword ptr [rdx]
0x00000000004b26dd : push rsp ; jmp qword ptr [rdx]
0x00000000004b92b4 : push rsp ; outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; test al, 0xb5 ; clc ; call qword ptr [rcx]
0x00000000004127b4 : push rsp ; ret
0x0000000000490a0d : push rsp ; ret 0x4910
0x00000000004967c4 : push rsp ; stc ; jmp rsp
0x000000000041f200 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x00000000004bb464 : pushfq ; adc edi, edx ; jmp qword ptr [rdx]
0x00000000004b70fc : pushfq ; add byte ptr [r8], r8b ; xor byte ptr [rcx - 0xa], bl ; call qword ptr [rax]
0x0000000000482fcc : pushfq ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00000000004b4ef9 : pushfq ; cmc ; jmp qword ptr [rax]
0x00000000004b44c5 : pushfq ; cmc ; jmp qword ptr [rdx]
0x000000000048c580 : pushfq ; jb 0x48c5ac ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000040c80c : pushfq ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000041ff00 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496314 : rcl al, 1 ; clc ; push rax ; sar eax, 1 ; call qword ptr [rax]
0x000000000045c3c1 : rcl byte ptr [rax + 0x39000001], cl ; ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x0000000000496494 : rcl byte ptr [rdi], 1 ; stc ; call rax
0x0000000000496490 : rcl byte ptr [rip + 0x17d0fff9], 1 ; stc ; call rax
0x0000000000413499 : rcl dword ptr [rip + 0x2ad389], -0x7d ; ret 0x8b01
0x00000000004ae19f : rcl dword ptr [rsi + 0x5a], cl ; je 0x4ae16d ; ret 0xacfc
0x00000000004ae19b : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x4ae171 ; ret 0xacfc
0x0000000000496bb8 : rcr byte ptr [rax - 0x672f0007], 0xf9 ; jmp rax
0x000000000046d047 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x00000000004373c0 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x0000000000475dfd : rcr byte ptr [rbx + 0x48], cl ; div ebp ; pop rbp ; pop r12 ; ret
0x0000000000410835 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000004460be : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000040772e : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000048f4db : rcr byte ptr [rbx + 0x5d], 0xc3 ; nop ; ret
0x000000000045033c : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x0000000000414b7a : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x0000000000410330 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000496be4 : rcr byte ptr [rcx - 0x660f0007], 1 ; stc ; call qword ptr [rax]
0x0000000000496498 : rcr byte ptr [rcx], 1 ; stc ; call rax
0x00000000004ae5bd : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x000000000047babe : rcr byte ptr [rdx], 0x4b ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x00000000004b380c : rcr dword ptr [rbx - 0xb], 1 ; jmp qword ptr [rdx]
0x000000000046b999 : rcr dword ptr [rcx], -0x40 ; and eax, 2 ; sub eax, 1 ; ret
0x0000000000400cd9 : repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400ce2 ; ret
0x00000000004002c9 : ret
0x0000000000400d35 : ret 0
0x0000000000444388 : ret 0x101
0x0000000000456b5f : ret 0x107
0x000000000047f664 : ret 0x1075
0x000000000047075c : ret 0x11
0x0000000000412b12 : ret 0x110
0x000000000046d01c : ret 0x114d
0x00000000004a19a8 : ret 0x12
0x000000000040953a : ret 0x12e
0x0000000000475328 : ret 0x12e9
0x00000000004340b7 : ret 0x13e8
0x0000000000407ceb : ret 0x13eb
0x000000000040f27e : ret 0x148
0x000000000040e182 : ret 0x149
0x000000000045cacf : ret 0x14be
0x000000000043480c : ret 0x14c
0x000000000047c0e4 : ret 0x15
0x0000000000411a1c : ret 0x1589
0x000000000044667f : ret 0x1676
0x0000000000401e34 : ret 0x16eb
0x000000000041966a : ret 0x17
0x000000000041bc85 : ret 0x1876
0x000000000045cffa : ret 0x18d
0x0000000000408c8a : ret 0x19d
0x00000000004906e1 : ret 0x19e8
0x00000000004aeb1a : ret 0x1ad4
0x00000000004ad2ad : ret 0x1b49
0x000000000044d946 : ret 0x1b8
0x000000000041c9da : ret 0x1bd
0x0000000000401444 : ret 0x1be
0x00000000004a33e0 : ret 0x1d4
0x00000000004a3b78 : ret 0x1d5
0x000000000040a844 : ret 0x1f0f
0x000000000044490d : ret 0x200
0x000000000046b86e : ret 0x2148
0x000000000046144c : ret 0x2175
0x0000000000452c8d : ret 0x22
0x00000000004193e8 : ret 0x2288
0x0000000000454cab : ret 0x22e9
0x00000000004257d2 : ret 0x2373
0x0000000000465e67 : ret 0x23e8
0x00000000004a23e8 : ret 0x24
0x0000000000464f94 : ret 0x25
0x0000000000468d72 : ret 0x2584
0x000000000045b802 : ret 0x267c
0x0000000000474754 : ret 0x26e8
0x0000000000450315 : ret 0x273b
0x0000000000459806 : ret 0x2774
0x0000000000426f86 : ret 0x280f
0x0000000000414d35 : ret 0x2875
0x000000000041bc75 : ret 0x2876
0x0000000000436d37 : ret 0x28eb
0x000000000047ada7 : ret 0x28f5
0x000000000045c51e : ret 0x2944
0x000000000040f865 : ret 0x2948
0x000000000045ae80 : ret 0x294c
0x0000000000414528 : ret 0x2a
0x000000000041ca06 : ret 0x2a75
0x00000000004123ea : ret 0x2ae3
0x000000000041327a : ret 0x2af4
0x00000000004121f2 : ret 0x2b1d
0x00000000004103aa : ret 0x2b23
0x000000000045b612 : ret 0x2b3c
0x000000000043af0e : ret 0x2b49
0x00000000004090aa : ret 0x2b76
0x0000000000433082 : ret 0x2b77
0x0000000000406c9a : ret 0x2bb5
0x0000000000436dd5 : ret 0x2ceb
0x000000000045e7a2 : ret 0x2d0
0x000000000045ecd4 : ret 0x2d77
0x000000000043c1ea : ret 0x2ee
0x000000000048250a : ret 0x2f0
0x0000000000480b52 : ret 0x30c
0x0000000000441cf9 : ret 0x3104
0x0000000000464706 : ret 0x3110
0x000000000040495a : ret 0x326
0x00000000004a28d8 : ret 0x33
0x0000000000436f97 : ret 0x33e8
0x00000000004094c7 : ret 0x348
0x00000000004674a7 : ret 0x35e9
0x00000000004ae3fa : ret 0x3827
0x000000000043533a : ret 0x3845
0x000000000041bc65 : ret 0x3876
0x00000000004aca86 : ret 0x38ae
0x0000000000475c9f : ret 0x38b
0x00000000004789fb : ret 0x3901
0x00000000004527f2 : ret 0x3945
0x000000000040a437 : ret 0x3948
0x000000000044475b : ret 0x3949
0x000000000045efbf : ret 0x394c
0x000000000043a4ac : ret 0x3974
0x0000000000432852 : ret 0x3a01
0x00000000004257bb : ret 0x3a73
0x000000000044e0e6 : ret 0x3ae9
0x00000000004373b1 : ret 0x3b01
0x00000000004423ca : ret 0x3b48
0x0000000000401371 : ret 0x3b8
0x0000000000414710 : ret 0x3d83
0x0000000000462865 : ret 0x3e9
0x0000000000483b2b : ret 0x3f7
0x000000000047d4ed : ret 0x40e9
0x0000000000400279 : ret 0x41
0x000000000040c41a : ret 0x4101
0x000000000044701a : ret 0x4108
0x00000000004488a9 : ret 0x4110
0x000000000046738a : ret 0x4118
0x00000000004194b0 : ret 0x4166
0x000000000043b85e : ret 0x41c3
0x000000000042414a : ret 0x4266
0x00000000004986c9 : ret 0x43
0x000000000046dcb5 : ret 0x4401
0x000000000043fd93 : ret 0x44c7
0x000000000043aa09 : ret 0x44f6
0x000000000044d55e : ret 0x4501
0x00000000004614ce : ret 0x4502
0x00000000004ad584 : ret 0x474c
0x000000000043d955 : ret 0x4801
0x0000000000422321 : ret 0x4802
0x00000000004223fd : ret 0x4803
0x00000000004223e5 : ret 0x4804
0x00000000004223cd : ret 0x4805
0x00000000004223b5 : ret 0x4806
0x0000000000419373 : ret 0x4808
0x000000000041491d : ret 0x4810
0x0000000000441e00 : ret 0x4811
0x0000000000413a0e : ret 0x4817
0x0000000000437a10 : ret 0x4838
0x0000000000424056 : ret 0x4840
0x000000000040f48b : ret 0x4855
0x000000000045e810 : ret 0x4864
0x000000000041948f : ret 0x48c3
0x000000000045c204 : ret 0x48d
0x00000000004396f1 : ret 0x48e9
0x00000000004aed46 : ret 0x48f
0x000000000040fbed : ret 0x48f0
0x0000000000440771 : ret 0x4901
0x0000000000422821 : ret 0x4902
0x000000000043bfb1 : ret 0x4904
0x0000000000410a92 : ret 0x4908
0x000000000045dde2 : ret 0x4909
0x00000000004186d2 : ret 0x4910
0x00000000004136d2 : ret 0x4948
0x0000000000422789 : ret 0x4c01
0x0000000000422581 : ret 0x4c02
0x000000000040374d : ret 0x4c08
0x000000000044cf3f : ret 0x4c30
0x000000000043b964 : ret 0x4d02
0x000000000040f74f : ret 0x4d07
0x000000000047d8f3 : ret 0x4d09
0x000000000040fe49 : ret 0x4d10
0x000000000044fa48 : ret 0x4d64
0x000000000044c9c3 : ret 0x4e0f
0x00000000004ae7a7 : ret 0x4e27
0x00000000004257a4 : ret 0x5173
0x000000000046332b : ret 0x5385
0x0000000000456cea : ret 0x5389
0x0000000000434177 : ret 0x53e8
0x0000000000477142 : ret 0x543a
0x0000000000407d34 : ret 0x5474
0x000000000048cb98 : ret 0x5489
0x00000000004aca0c : ret 0x5508
0x0000000000476751 : ret 0x5589
0x000000000045a3ca : ret 0x56e9
0x00000000004aecd8 : ret 0x5803
0x0000000000457ffd : ret 0x5877
0x000000000041311f : ret 0x58b
0x0000000000465932 : ret 0x58e8
0x00000000004ac6e0 : ret 0x591c
0x00000000004ad447 : ret 0x5ae4
0x00000000004627a7 : ret 0x5b74
0x0000000000461957 : ret 0x5c41
0x000000000047708b : ret 0x5c88
0x000000000045cd0b : ret 0x5c89
0x000000000047158f : ret 0x5ce9
0x000000000040a334 : ret 0x60e9
0x000000000044707f : ret 0x6275
0x00000000004af172 : ret 0x62c1
0x00000000004341cb : ret 0x6348
0x0000000000450434 : ret 0x6349
0x000000000041bbf2 : ret 0x6620
0x0000000000417003 : ret 0x66c3
0x00000000004ac6ff : ret 0x67b2
0x000000000045c197 : ret 0x67ba
0x00000000004144ff : ret 0x6a75
0x0000000000433c1f : ret 0x6b8
0x000000000046fde5 : ret 0x6e9
0x00000000004af301 : ret 0x6f9
0x00000000004054c4 : ret 0x70e9
0x000000000042477a : ret 0x71b
0x000000000041c3d2 : ret 0x7401
0x0000000000413b01 : ret 0x7402
0x000000000041284d : ret 0x7404
0x000000000041c43b : ret 0x7408
0x0000000000408f19 : ret 0x7420
0x000000000044cf58 : ret 0x7450
0x0000000000430db9 : ret 0x7501
0x0000000000413b23 : ret 0x7502
0x000000000041c3cd : ret 0x7504
0x00000000004321f4 : ret 0x7508
0x0000000000430d8b : ret 0x7510
0x000000000041c3c8 : ret 0x7518
0x0000000000430d98 : ret 0x7520
0x0000000000430da5 : ret 0x7540
0x000000000045ec31 : ret 0x7577
0x0000000000404d4a : ret 0x75e9
0x0000000000424692 : ret 0x7677
0x000000000043af02 : ret 0x774
0x000000000045c266 : ret 0x77e
0x0000000000456a29 : ret 0x7a8b
0x0000000000441f03 : ret 0x7b73
0x0000000000414672 : ret 0x7b74
0x000000000045fb6e : ret 0x7d77
0x000000000041bb82 : ret 0x7e20
0x00000000004172cc : ret 0x7f10
0x000000000042856e : ret 0x80
0x00000000004184a9 : ret 0x8000
0x0000000000404f3c : ret 0x8001
0x000000000045e113 : ret 0x8010
0x0000000000463ec8 : ret 0x804
0x000000000046055f : ret 0x8116
0x00000000004806e4 : ret 0x8136
0x000000000048301b : ret 0x8141
0x000000000044ec38 : ret 0x8166
0x000000000047892d : ret 0x8188
0x0000000000403e97 : ret 0x81e9
0x000000000040ee72 : ret 0x820f
0x0000000000442edd : ret 0x8301
0x0000000000400a81 : ret 0x8304
0x00000000004431aa : ret 0x8308
0x000000000040a918 : ret 0x830f
0x00000000004444a0 : ret 0x8310
0x000000000044f2e9 : ret 0x832d
0x00000000004004f5 : ret 0x8341
0x000000000041b942 : ret 0x8348
0x000000000044e3b9 : ret 0x8349
0x000000000045f196 : ret 0x8401
0x0000000000450426 : ret 0x8404
0x0000000000400d82 : ret 0x840f
0x000000000048e2ce : ret 0x8440
0x000000000040f804 : ret 0x8441
0x000000000040aa75 : ret 0x8445
0x000000000045636f : ret 0x8502
0x00000000004504f5 : ret 0x8504
0x0000000000456bfe : ret 0x8508
0x000000000040a9f2 : ret 0x850f
0x000000000045c479 : ret 0x8545
0x000000000045658d : ret 0x8548
0x000000000044d825 : ret 0x858b
0x0000000000448af1 : ret 0x85c7
0x00000000004621fa : ret 0x85eb
0x00000000004013d5 : ret 0x860f
0x00000000004150be : ret 0x870f
0x00000000004ac01e : ret 0x871e
0x0000000000461469 : ret 0x874
0x000000000041bc95 : ret 0x876
0x000000000040c1d5 : ret 0x8801
0x00000000004436e3 : ret 0x8901
0x0000000000408d01 : ret 0x8908
0x00000000004496b5 : ret 0x8910
0x000000000048e5a6 : ret 0x8941
0x000000000045c191 : ret 0x8944
0x00000000004085f9 : ret 0x8948
0x00000000004089c2 : ret 0x8949
0x0000000000401835 : ret 0x894c
0x000000000040f753 : ret 0x894d
0x000000000046c4eb : ret 0x894e
0x00000000004134a0 : ret 0x8b01
0x000000000045ee63 : ret 0x8b05
0x00000000004ae84e : ret 0x8b36
0x0000000000444412 : ret 0x8b41
0x00000000004629da : ret 0x8b44
0x00000000004055f9 : ret 0x8b48
0x000000000043d314 : ret 0x8b49
0x000000000046c46e : ret 0x8b4a
0x0000000000402e35 : ret 0x8b4c
0x000000000044dc9b : ret 0x8d0f
0x000000000045c251 : ret 0x8d42
0x000000000045c51a : ret 0x8d43
0x0000000000406144 : ret 0x8d48
0x0000000000402e4e : ret 0x8d49
0x000000000040a575 : ret 0x8d4a
0x000000000043ad5b : ret 0x8d4c
0x0000000000447900 : ret 0x8d89
0x000000000043d30b : ret 0x8e0f
0x000000000041015e : ret 0x8e74
0x000000000040166b : ret 0x900
0x0000000000416ee5 : ret 0x90c3
0x0000000000474fa8 : ret 0x92e9
0x000000000045c1cd : ret 0x93ba
0x0000000000434437 : ret 0x93e8
0x00000000004625f0 : ret 0x940f
0x0000000000413efe : ret 0x948
0x0000000000459aa8 : ret 0x94c
0x00000000004760ab : ret 0x950f
0x00000000004701a9 : ret 0x9529
0x0000000000403466 : ret 0x953d
0x00000000004ad673 : ret 0x9576
0x0000000000436df1 : ret 0x970f
0x000000000040f3fc : ret 0x9848
0x000000000043422f : ret 0x9be
0x000000000046ef79 : ret 0x9d8b
0x0000000000476f25 : ret 0x9e0f
0x0000000000411c7a : ret 0xa0e9
0x0000000000453e2c : ret 0xa1e9
0x00000000004ad363 : ret 0xa514
0x000000000047f65a : ret 0xa77
0x00000000004134a9 : ret 0xa7e
0x000000000048dca1 : ret 0xa8
0x000000000045dda2 : ret 0xa8e9
0x000000000046225d : ret 0xaa75
0x0000000000407c24 : ret 0xaba
0x00000000004ad7e7 : ret 0xac65
0x00000000004ae1a4 : ret 0xacfc
0x0000000000434117 : ret 0xb3e8
0x0000000000412a1c : ret 0xb48b
0x00000000004001ce : ret 0xb50f
0x00000000004023d9 : ret 0xb60f
0x000000000043f895 : ret 0xb70f
0x000000000040fc09 : ret 0xb76
0x00000000004339d0 : ret 0xb8
0x000000000044c9c6 : ret 0xb841
0x000000000045115e : ret 0xb848
0x0000000000408ae9 : ret 0xb941
0x00000000004ad6ae : ret 0xb9b9
0x000000000043432f : ret 0xb9eb
0x000000000048eb56 : ret 0xbc80
0x000000000044ee5b : ret 0xbe07
0x000000000044eef4 : ret 0xbe48
0x00000000004ad404 : ret 0xbe57
0x000000000041535f : ret 0xc
0x00000000004497f0 : ret 0xc0
0x0000000000418369 : ret 0xc000
0x00000000004013ae : ret 0xc031
0x0000000000408bc3 : ret 0xc083
0x000000000041ba40 : ret 0xc085
0x000000000043f04a : ret 0xc101
0x0000000000438ad5 : ret 0xc141
0x0000000000400fc5 : ret 0xc148
0x000000000045cd7b : ret 0xc149
0x000000000045c210 : ret 0xc229
0x000000000045ffe4 : ret 0xc283
0x0000000000425674 : ret 0xc2b2
0x00000000004330f1 : ret 0xc35b
0x00000000004a6882 : ret 0xc4c3
0x00000000004acfb8 : ret 0xc4ff
0x000000000044c865 : ret 0xc5e8
0x000000000040c1f5 : ret 0xc601
0x000000000042d290 : ret 0xc748
0x0000000000412c70 : ret 0xc789
0x00000000004806ee : ret 0xc801
0x000000000041c249 : ret 0xc88
0x000000000040d650 : ret 0xc883
0x00000000004405a1 : ret 0xc889
0x000000000048cad1 : ret 0xc984
0x0000000000419341 : ret 0xc9ff
0x000000000046a6b3 : ret 0xca29
0x0000000000416694 : ret 0xcb8
0x0000000000400563 : ret 0xcbeb
0x00000000004aca4a : ret 0xcca7
0x00000000004aeb2d : ret 0xcd11
0x0000000000404a0f : ret 0xce80
0x000000000043782e : ret 0xd009
0x0000000000437321 : ret 0xd029
0x000000000046a6f2 : ret 0xd089
0x0000000000476eb5 : ret 0xd138
0x00000000004746d0 : ret 0xd189
0x0000000000403b1d : ret 0xd284
0x000000000047beb0 : ret 0xd349
0x000000000047a9e7 : ret 0xd3e8
0x0000000000410117 : ret 0xd575
0x000000000045b2ad : ret 0xd7e9
0x0000000000476f0a : ret 0xd889
0x00000000004ae5c5 : ret 0xd8f
0x00000000004371f3 : ret 0xda75
0x0000000000402eb0 : ret 0xdae8
0x0000000000408448 : ret 0xdaf7
0x00000000004ae6a6 : ret 0xdcd9
0x00000000004ad622 : ret 0xde5d
0x00000000004ac3b1 : ret 0xde9e
0x00000000004789fe : ret 0xdf75
0x0000000000441fea : ret 0xdf89
0x0000000000418229 : ret 0xe000
0x0000000000430d49 : ret 0xe074
0x000000000041396a : ret 0xe083
0x00000000004b904b : ret 0xe0a
0x000000000040aede : ret 0xe0ba
0x000000000046e9f6 : ret 0xe181
0x00000000004478bf : ret 0xe183
0x00000000004385d2 : ret 0xe1eb
0x0000000000409e05 : ret 0xe274
0x00000000004069dc : ret 0xe281
0x0000000000432d56 : ret 0xe283
0x000000000044da65 : ret 0xe5e8
0x00000000004ae7c6 : ret 0xe71f
0x000000000045f868 : ret 0xe74
0x000000000045f2e0 : ret 0xe75
0x0000000000438991 : ret 0xe783
0x000000000046af81 : ret 0xe7e9
0x0000000000400ed4 : ret 0xe8c1
0x000000000040c42b : ret 0xe901
0x000000000045645d : ret 0xe902
0x00000000004193d6 : ret 0xe908
0x000000000041f066 : ret 0xe910
0x00000000004acb27 : ret 0xe970
0x0000000000476f28 : ret 0xe9c1
0x00000000004446a1 : ret 0xe9e8
0x000000000043307a : ret 0xea81
0x000000000045c258 : ret 0xea83
0x00000000004478b8 : ret 0xeac0
0x0000000000400d79 : ret 0xeac1
0x0000000000456310 : ret 0xeb02
0x0000000000400ab6 : ret 0xeb04
0x0000000000470889 : ret 0xeb08
0x00000000004186f6 : ret 0xeb10
0x0000000000407ba2 : ret 0xeb75
0x00000000004af2d8 : ret 0xec2
0x000000000047ad69 : ret 0xec75
0x0000000000456224 : ret 0xee83
0x00000000004aef7a : ret 0xef32
0x0000000000456056 : ret 0xef83
0x0000000000438985 : ret 0xefc1
0x00000000004a15a8 : ret 0xf
0x00000000004180e9 : ret 0xf000
0x000000000040238f : ret 0xf01
0x000000000040cba3 : ret 0xf02
0x000000000047482c : ret 0xf039
0x0000000000412869 : ret 0xf04
0x000000000046472d : ret 0xf08
0x0000000000417282 : ret 0xf10
0x000000000040a470 : ret 0xf189
0x000000000047a6f6 : ret 0xf201
0x000000000040a45f : ret 0xf301
0x00000000004679fb : ret 0xf304
0x000000000044c306 : ret 0xf3f
0x0000000000457183 : ret 0xf40
0x0000000000407d8a : ret 0xf41
0x00000000004333d7 : ret 0xf44
0x000000000043c40f : ret 0xf48
0x000000000044d640 : ret 0xf4a
0x00000000004b3806 : ret 0xf56d
0x000000000045e69e : ret 0xf631
0x000000000043b1c4 : ret 0xf641
0x0000000000417089 : ret 0xf66
0x0000000000432c38 : ret 0xf685
0x000000000045c1e4 : ret 0xf741
0x00000000004079bf : ret 0xf748
0x0000000000417fa9 : ret 0xf800
0x00000000004ac290 : ret 0xf869
0x000000000045b119 : ret 0xf883
0x0000000000403d31 : ret 0xf889
0x0000000000496930 : ret 0xf939
0x0000000000496928 : ret 0xf93a
0x0000000000496920 : ret 0xf93b
0x0000000000496918 : ret 0xf93c
0x0000000000496910 : ret 0xf93d
0x0000000000496738 : ret 0xf942
0x0000000000475dea : ret 0xf97a
0x00000000004ba54e : ret 0xf9cc
0x000000000044c2a4 : ret 0xfac1
0x0000000000480233 : ret 0xfae9
0x000000000046728a : ret 0xfb21
0x0000000000417e69 : ret 0xfc00
0x0000000000419539 : ret 0xfc3
0x000000000044b44a : ret 0xfc91
0x0000000000442a8a : ret 0xfd69
0x0000000000458bca : ret 0xfda6
0x00000000004715ee : ret 0xfde9
0x0000000000402361 : ret 0xfdf
0x0000000000417d29 : ret 0xfe00
0x00000000004732ba : ret 0xfe77
0x000000000046b909 : ret 0xfeb8
0x0000000000417be9 : ret 0xff00
0x000000000042a121 : ret 0xff2
0x000000000042407a : ret 0xff3
0x00000000004007da : ret 0xff49
0x000000000041221a : ret 0xff69
0x0000000000417aa9 : ret 0xff80
0x0000000000475773 : ret 0xffa5
0x0000000000472542 : ret 0xffb2
0x0000000000409dfe : ret 0xffb8
0x00000000004813d8 : ret 0xffbf
0x000000000040a342 : ret 0xffc0
0x0000000000480263 : ret 0xffc1
0x00000000004135ca : ret 0xffcb
0x000000000040f553 : ret 0xffd0
0x00000000004448ed : ret 0xffd8
0x00000000004558ad : ret 0xffdc
0x0000000000416c8c : ret 0xffdf
0x0000000000417829 : ret 0xffe0
0x000000000046874a : ret 0xffe4
0x00000000004448d4 : ret 0xffe8
0x000000000046f3d2 : ret 0xffeb
0x0000000000402fb7 : ret 0xffed
0x0000000000407a83 : ret 0xffef
0x00000000004176e9 : ret 0xfff0
0x000000000040457d : ret 0xfff1
0x000000000040437d : ret 0xfff3
0x0000000000413761 : ret 0xfff4
0x00000000004b576d : ret 0xfff5
0x000000000048d594 : ret 0xfff7
0x00000000004175a9 : ret 0xfff8
0x0000000000440515 : ret 0xfff9
0x000000000046834c : ret 0xfffa
0x000000000044b911 : ret 0xfffb
0x0000000000417469 : ret 0xfffc
0x00000000004062ec : ret 0xfffd
0x0000000000401b1e : ret 0xfffe
0x0000000000414493 : ret 0xffff
0x0000000000407c7b : ret 1
0x00000000004074f9 : ret 2
0x0000000000425432 : ret 3
0x000000000041bd59 : ret 4
0x00000000004a09d0 : ret 5
0x00000000004a51a4 : ret 6
0x00000000004a53a4 : ret 7
0x000000000041bd75 : ret 8
0x0000000000402652 : ret 9
0x00000000004351c2 : retf -0x206 ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000040055e : retf -0x31c7 ; cmovge eax, edx ; jmp 0x400536
0x0000000000484ecf : retf -0x7af1 ; call qword ptr [rsi]
0x00000000004b5d54 : retf -0xa17 ; jmp qword ptr [rdx]
0x00000000004b96df : retf -8 ; sbb al, 0xd ; fmul st(1), st(0) ; clc ; jmp qword ptr [rdx]
0x00000000004bef55 : retf ; add byte ptr [rax], al ; clc ; and bh, ch ; call qword ptr [rbx]
0x00000000004ba3b5 : retf ; stc ; jmp qword ptr [rdx]
0x00000000004ba6b1 : retf ; stc ; jmp rsi
0x00000000004b76e0 : rol al, 0xf7 ; jmp rax
0x00000000004089bc : rol bl, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x8949
0x0000000000432915 : rol bl, 0x48 ; mov eax, edi ; ret
0x000000000040e777 : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000046a6e7 : rol bl, 1 ; mov edx, 0xffffffff ; mov eax, edx ; ret
0x000000000046a6f4 : rol bl, 1 ; mov edx, 1 ; mov eax, edx ; ret
0x000000000041bded : rol bl, 1 ; nop ; xor eax, eax ; ret
0x000000000046a6ef : rol bl, 1 ; sub edx, eax ; mov eax, edx ; ret
0x0000000000424052 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000459802 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000004a4da0 : rol byte ptr [rax + rax], 0 ; ret 4
0x000000000042459d : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041215f : rol byte ptr [rax], 0 ; add dh, dh ; ret
0x0000000000444b6d : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x00000000004229c2 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000459829 : rol byte ptr [rbp - 0x149d8a2e], 1 ; ror byte ptr [rcx + 0x39], 1 ; ret
0x00000000004355f0 : rol byte ptr [rbp - 0x77], 0xf7 ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000004701a3 : rol byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x9f ; ret 0x9529
0x0000000000473ddd : rol byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], cl ; lahf ; ret 0x9529
0x000000000045afd6 : rol byte ptr [rbx + rcx*4], 0x10 ; test edx, edx ; jne 0x45afd9 ; ret
0x000000000046b99b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x0000000000437326 : rol byte ptr [rbx - 0x24e6fe08], 0x83 ; ret
0x000000000043de0f : rol byte ptr [rbx - 0x76befb08], 1 ; ret
0x00000000004054bb : rol byte ptr [rbx - 0x77cfc20], cl ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x70e9
0x000000000045a8a2 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000048d5d9 : rol byte ptr [rbx], 0xeb ; ret
0x0000000000436252 : rol byte ptr [rbx], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x000000000045134f : rol byte ptr [rcx + 0x39], 1 ; ret
0x0000000000456fe6 : rol byte ptr [rcx + 0x5c], 1 ; ret
0x000000000045a5ad : rol byte ptr [rcx + 0x5e], 1 ; ret
0x0000000000433071 : rol byte ptr [rcx + 0xbfff], cl ; add byte ptr [rdi], cl ; popfq ; ret 0xea81
0x0000000000412a00 : rol byte ptr [rcx + 0xf], 0x94 ; ret
0x000000000045c1e0 : rol byte ptr [rcx + 0xf], cl ; ret 0xf741
0x0000000000441991 : rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x0000000000496864 : rol byte ptr [rcx + rdi*8 - 1], 0x50 ; stc ; jmp rax
0x0000000000496840 : rol byte ptr [rcx - 7], 1 ; inc dword ptr [rax + 0x48] ; stc ; call rax
0x000000000045a882 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x0000000000432ef7 : rol byte ptr [rcx], 0x83 ; ret 0x4101
0x0000000000442eda : rol byte ptr [rcx], 0x83 ; ret 0x8301
0x0000000000469c01 : rol byte ptr [rcx], 0x89 ; ret 0x8348
0x00000000004641a5 : rol byte ptr [rcx], 0x89 ; ret 0x8b48
0x000000000049664c : rol byte ptr [rdi - 7], 0xff ; push rax ; stc ; jmp rax
0x000000000045a8e2 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x000000000045a892 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000004396a3 : rol byte ptr [rdx], 0x89 ; add al, 0x24 ; call rbx
0x0000000000496624 : rol byte ptr [rdx], 0xf9 ; call qword ptr [rax]
0x0000000000477f86 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; mov eax, esi ; ret
0x000000000045a8d2 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000004340cc : rol byte ptr [rsi], 0 ; ret
0x00000000004a6880 : rol cl, 0xc2 ; ret
0x00000000004679f6 : rol cl, 0xe9 ; add esi, esi ; ret 0xf304
0x000000000045c0e4 : rol cl, 1 ; clc ; add eax, 0x89d02944 ; ret
0x000000000045c2cb : rol cl, 1 ; clc ; add eax, 0xfd02944 ; scasd eax, dword ptr [rdi] ; ret
0x000000000045a82c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x000000000045197d : rol dword ptr [rcx + 0xf], -0x4a ; or al, 0x89 ; ret 0xeac0
0x0000000000405541 : rol dword ptr [rcx], -0x7d ; cli ; or al, byte ptr [rbp + 0xf] ; ret 0x8348
0x000000000043867d : rol ecx, -0x1f ; add ebx, dword ptr [rbx - 0x2d] ; loopne 0x4386ea ; ret
0x00000000004b225c : ror al, 0xfd ; jmp rax
0x00000000004ba6b0 : ror bl, 0xf9 ; jmp rsi
0x000000000041bc62 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x41bca9 ; add rax, rdi ; ret
0x00000000004195ff : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000004673d9 : ror byte ptr [rax + 0x29], cl ; ret 0x394c
0x000000000045ecdf : ror byte ptr [rax + 0x39], 0xd6 ; ja 0x45ecf7 ; ret
0x0000000000437018 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000046c82f : ror byte ptr [rax + 0x39], 1 ; ret 0x8948
0x000000000046c347 : ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000476f22 : ror byte ptr [rax + 0x39], 1 ; ret 0x9e0f
0x000000000043c16c : ror byte ptr [rax + 0x39], cl ; ret
0x0000000000436a0e : ror byte ptr [rax + 0xf], 0x48 ; ret 0xc148
0x00000000004672a3 : ror byte ptr [rax + 0xf], 1 ; ret 0x8948
0x000000000045aa92 : ror byte ptr [rax + 0xf], cl ; ret 0x8548
0x000000000042289c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x000000000041bc32 : ror byte ptr [rax + 1], 0xf8 ; ret
0x00000000004195fc : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000046d951 : ror byte ptr [rax + 3], 1 ; test dword ptr [rax - 0x7c000002], eax ; ret 0x8908
0x000000000044963c : ror byte ptr [rax + 3], 1 ; test dword ptr [rax - 0x7c000005], esi ; ret 0x8908
0x00000000004496ac : ror byte ptr [rax + 3], 1 ; test dword ptr [rax - 0x7c000005], esi ; ret 0x8910
0x000000000041bde5 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000400fcc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x400fdb ; pop rbp ; ret
0x0000000000476855 : ror byte ptr [rax - 0x3f], 1 ; call 0xffffffffc270b1a3
0x0000000000476a73 : ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x000000000041bc22 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x000000000041bc52 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x000000000041bc42 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x0000000000438fb5 : ror byte ptr [rax - 0x75], 0x74 ; sbb ah, byte ptr [rax] ; call rax
0x000000000040dd0a : ror byte ptr [rax - 0x75], cl ; jmp rax
0x000000000040e7c6 : ror byte ptr [rax - 0x77], 0x4a ; or bl, dh ; ret
0x000000000040b325 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x000000000045dd55 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x0000000000453b8f : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x00000000004069d9 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000044da62 : ror byte ptr [rax - 0x77], 1 ; ret 0xe5e8
0x00000000004760a5 : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000408f9f : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000045ec00 : ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x0000000000413d43 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000046b2d7 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x000000000044e649 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000467f0a : ror byte ptr [rax - 0x7d], 0xfa ; dec dword ptr [rax + 0xf] ; ret 0x48c3
0x0000000000413a66 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2ca8285
0x00000000004605ea : ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000043ca15 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4101
0x0000000000407650 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000475b58 : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x000000000045eaf3 : ror byte ptr [rax - 0x7d], cl ; in al, dx ; jo 0x45eaf5 ; ret 0x4840
0x0000000000463fdd : ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000043f4fc : ror byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000043e4ad : ror byte ptr [rax - 0x7d], cl ; ret 0x4806
0x00000000004697d5 : ror byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000049175d : ror byte ptr [rax], 0x4c ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000004802aa : ror byte ptr [rax], 0x83 ; ret 0x4801
0x0000000000483f34 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000045982f : ror byte ptr [rcx + 0x39], 1 ; ret
0x000000000048cc92 : ror byte ptr [rcx + rcx*4 + 6], 1 ; ret
0x0000000000457c12 : ror byte ptr [rcx + rcx*4 - 0x11], 0x45 ; xor eax, eax ; call r12
0x000000000040d65f : ror byte ptr [rcx - 0x3b7cb7ed], 1 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000004449be : ror byte ptr [rcx - 0x3fcebfbd], 0x5b ; ret
0x0000000000476b58 : ror byte ptr [rcx - 0x77], 1 ; ret 0x8948
0x00000000004089ea : ror byte ptr [rcx - 0x77], 4 ; and al, 0x74 ; ret 0x8b4c
0x0000000000461f24 : ror byte ptr [rcx - 0x77], cl ; ret
0x00000000004663f1 : ror byte ptr [rcx - 0x7d], cl ; std ; and al, 0xf ; xchg eax, esp ; ret 0xc031
0x000000000045e79f : ror byte ptr [rcx - 0x7f], cl ; ret 0x2d0
0x000000000047992c : ror byte ptr [rdi + rcx + 0x44], cl ; ret
0x000000000041c579 : ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000040f8e4 : ror byte ptr [rdi], 0x1f ; add bl, dh ; ret
0x0000000000460466 : ror byte ptr [rdi], 0x84 ; or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046a7f7 : ror byte ptr [rdi], 0x84 ; ret 1
0x0000000000469e0f : ror byte ptr [rdi], 0x84 ; test dword ptr [rax], 0x89480000 ; ret 0x2b49
0x000000000042d21a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x000000000042d256 : ror byte ptr [rdi], 0x85 ; ret
0x0000000000491452 : ror byte ptr [rdi], 0x85 ; ret 0
0x000000000043731e : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x0000000000477083 : ror byte ptr [rdi], 0x94 ; ret
0x000000000047713f : ror byte ptr [rdi], 0x94 ; ret 0x543a
0x0000000000477088 : ror byte ptr [rdi], 0x94 ; ret 0x5c88
0x00000000004760a8 : ror byte ptr [rdi], 0x94 ; ret 0x950f
0x00000000004746cd : ror byte ptr [rdi], 0x94 ; ret 0xd189
0x0000000000400737 : ror byte ptr [rdi], 0x95 ; ret
0x000000000040a331 : ror byte ptr [rdi], 0x95 ; ret 0x60e9
0x000000000040a296 : ror byte ptr [rdi], 0x95 ; ret 0xd284
0x0000000000408445 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x00000000004701a6 : ror byte ptr [rdi], 0x9f ; ret 0x9529
0x00000000004069ee : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x4069d8 ; ret
0x000000000045c2d1 : ror byte ptr [rdi], 1 ; scasd eax, dword ptr [rdi] ; ret
0x000000000045c194 : ror byte ptr [rdi], 1 ; scasd eax, dword ptr [rdi] ; ret 0x67ba
0x0000000000473de0 : ror byte ptr [rdi], cl ; lahf ; ret 0x9529
0x0000000000436efc : ror byte ptr [rdi], cl ; ret 0x66c3
0x000000000040f3f9 : ror byte ptr [rdi], cl ; ret 0x9848
0x0000000000477209 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000476eb2 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd138
0x00000000004b5a36 : ror byte ptr [rip + 0xd1cfff6], 1 ; shl esp, -0xb ; jmp qword ptr [rdx]
0x000000000044312b : ror byte ptr [rsi - 0x7ab7ffb7], 0xc0 ; je 0x44313f ; call rax
0x000000000043696c : ror dword ptr [rax + 0xf], cl ; ret
0x0000000000476f04 : ror dword ptr [rax + 1], cl ; ret 0x3948
0x0000000000458a7e : ror dword ptr [rax - 0x73], 0x41 ; adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x0000000000440a94 : ror dword ptr [rax - 0x77], 1 ; fimul word ptr [rax - 0x77] ; ret 0x8948
0x000000000043f892 : ror dword ptr [rax - 0x77], 1 ; ret 0xb70f
0x00000000004799fb : ror dword ptr [rax - 0x77], cl ; ret
0x000000000040d1ad : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x40d1a7 ; ret
0x00000000004581fd : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x4581f7 ; ret
0x000000000046cae5 : ror dword ptr [rax - 0x7d], cl ; in al, dx ; cmp dh, dh ; ret 0x7401
0x000000000043c56e : ror dword ptr [rcx + 0x7b808], 1 ; add byte ptr [rax], al ; jmp 0x43c543
0x000000000047c335 : ror dword ptr [rcx - 0x3f], cl ; sti ; add cl, byte ptr [rcx + 0x29] ; ret
0x00000000004621f7 : ror dword ptr [rcx - 0x77], 1 ; ret 0x85eb
0x0000000000461f3a : ror dword ptr [rcx - 0x7d], 1 ; ret
0x000000000046acb6 : ror dword ptr [rcx - 9], -0x2f ; jmp 0x46acd3
0x000000000046ad60 : ror dword ptr [rcx - 9], -0x2f ; jmp 0x46ad7d
0x0000000000430d47 : ror dword ptr [rcx], cl ; ret 0xe074
0x000000000048dd1d : ror dword ptr [rdi], -0x4a ; add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000004478b2 : ror dword ptr [rdi], -0x4a ; or al, 0x89 ; ret 0xeac0
0x000000000047bead : ror dword ptr [rdi], -0x6b ; ret 0xd349
0x0000000000424e08 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000425514 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004252e6 : ror dword ptr [rdi], -0x7b ; add eax, 0xc0310000 ; ret
0x0000000000425266 : ror dword ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00000000004255a4 : ror dword ptr [rdi], -0x7b ; je 0x4255b4 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042509b : ror dword ptr [rdi], -0x7b ; jno 0x4250b0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000425163 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000424de0 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000045e7df : ror dword ptr [rdi], -0x7c ; ret 1
0x000000000045c3c7 : ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x0000000000411d56 : ror dword ptr [rdi], cl ; xchg dword ptr [rbx - 0x9fffffb], ebp ; ret
0x000000000040d1ac : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x40d1a8 ; ret
0x00000000004581fc : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x4581f8 ; ret
0x00000000004535a8 : sahf ; add byte ptr [rax], al ; add byte ptr [rbx - 0x110f43], al ; call qword ptr [rax]
0x00000000004538d0 : sahf ; add byte ptr [rax], al ; add byte ptr [rbx - 0x116343], al ; call qword ptr [rax]
0x0000000000416e85 : sahf ; add dword ptr [rax], eax ; ret
0x00000000004b6421 : sahf ; cmc ; call rcx
0x000000000048e99e : sahf ; idiv bh ; dec dword ptr [rcx - 0x77] ; ret
0x000000000044cc23 : sahf ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000042146e : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004aca85 : sahf ; ret 0x38ae
0x0000000000476f27 : sahf ; ret 0xe9c1
0x0000000000496c1d : sahf ; stc ; call qword ptr [rax]
0x0000000000496c41 : sahf ; stc ; inc dword ptr [rax] ; lahf ; stc ; jmp qword ptr [rax]
0x0000000000496c35 : sahf ; stc ; inc eax ; sahf ; stc ; jmp rax
0x0000000000496c21 : sahf ; stc ; jmp qword ptr [rax]
0x0000000000496c39 : sahf ; stc ; jmp rax
0x00000000004762ae : sal bh, 0xd8 ; ret
0x00000000004331ad : sal bh, 0xf1 ; pop rbx ; mov eax, eax ; ret
0x00000000004965c4 : sal bh, 1 ; clc ; jmp qword ptr [rax]
0x00000000004184a7 : sal bh, 1 ; ret 0x8000
0x0000000000418367 : sal bh, 1 ; ret 0xc000
0x0000000000418227 : sal bh, 1 ; ret 0xe000
0x00000000004180e7 : sal bh, 1 ; ret 0xf000
0x0000000000417fa7 : sal bh, 1 ; ret 0xf800
0x0000000000417e67 : sal bh, 1 ; ret 0xfc00
0x0000000000417d27 : sal bh, 1 ; ret 0xfe00
0x0000000000417be7 : sal bh, 1 ; ret 0xff00
0x0000000000417aa7 : sal bh, 1 ; ret 0xff80
0x0000000000417967 : sal bh, 1 ; ret 0xffc0
0x0000000000417827 : sal bh, 1 ; ret 0xffe0
0x00000000004176e7 : sal bh, 1 ; ret 0xfff0
0x00000000004175a7 : sal bh, 1 ; ret 0xfff8
0x0000000000417467 : sal bh, 1 ; ret 0xfffc
0x0000000000417327 : sal bh, 1 ; ret 0xfffe
0x00000000004b7941 : sal bh, cl ; call qword ptr [rdi]
0x000000000044e5ac : sal bh, cl ; int1 ; add r8d, eax ; mov eax, r8d ; ret
0x00000000004b7929 : sal bh, cl ; jmp qword ptr [rbx]
0x0000000000479b10 : sal byte ptr [rax - 0x7d], 0xe8 ; add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x000000000049624c : sal byte ptr [rax - 8], 0xff ; sal byte ptr [rdx - 8], 1 ; jmp rax
0x0000000000452f98 : sal byte ptr [rbp + 0x4a], 0 ; jmp rdx
0x000000000041bc18 : sal byte ptr [rbp + 0x55], 0x48 ; xor eax, eax ; ret
0x000000000045f0a2 : sal byte ptr [rbp + 0x5f], 0x4c ; mov eax, ecx ; ret
0x0000000000491383 : sal byte ptr [rbp + 0xa], 0xf3 ; ret
0x000000000044cf54 : sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x0000000000491177 : sal byte ptr [rbp + 6], 0x5b ; ret
0x0000000000476391 : sal byte ptr [rbp + rax + 0x5b], 0x5d ; pop r12 ; ret
0x000000000047f65f : sal byte ptr [rbp + rdx + 0x4c], 0x39 ; ret 0x1075
0x000000000040e725 : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x0000000000432a80 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000040d1b0 : sal byte ptr [rbp - 0x13], cl ; ret
0x00000000004241fb : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x00000000004069f3 : sal byte ptr [rbp - 0x27], cl ; ret
0x000000000045afdb : sal byte ptr [rbp - 0xe], cl ; ret
0x0000000000437040 : sal byte ptr [rbp - 0xf], 0x5a ; pop r10 ; ret
0x00000000004597d2 : sal byte ptr [rbx + rbx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000402bc1 : sal byte ptr [rbx + rdx + 0x48], 0x83 ; ret 0x4901
0x0000000000437016 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000045f336 : sal byte ptr [rdi + 0x48], 0x89 ; ret
0x0000000000452b8f : sal byte ptr [rdi + 0x4a], 0 ; jmp rdx
0x0000000000401009 : sal byte ptr [rdi + rax - 0x41], 0x60 ; and ecx, dword ptr [rbx] ; call rax
0x00000000004bd4f0 : sal byte ptr [rdi], 1 ; hlt ; jmp qword ptr [rsi]
0x0000000000419533 : sal byte ptr [rdx + rcx + 0x48], cl ; bsf eax, edx ; ret
0x00000000004193e3 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x0000000000455ad9 : sal byte ptr [rdx - 0x7cb70001], 0x7c ; ret 0xc0
0x0000000000496250 : sal byte ptr [rdx - 8], 1 ; jmp rax
0x0000000000450ccf : sal byte ptr [rsi + 0x4a], 0 ; jmp rdx
0x00000000004194d7 : sal byte ptr [rsi + rsi*2 + 0x48], cl ; bsf eax, edx ; ret
0x0000000000480cf0 : sal dword ptr [rcx + 0x48], 0x39 ; ret
0x000000000040e7c4 : sal dword ptr [rcx], -0x40 ; mov qword ptr [rdx + 8], rcx ; ret
0x0000000000459680 : sal dword ptr [rcx], 1 ; ret
0x00000000004679f4 : sal dword ptr [rcx], 1 ; rol cl, 0xe9 ; add esi, esi ; ret 0xf304
0x000000000040dd08 : sal dword ptr [rcx], 1 ; ror byte ptr [rax - 0x75], cl ; jmp rax
0x00000000004b25bc : sal edi, -0xc ; jmp qword ptr [rdx]
0x0000000000430d86 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000040055c : salc ; add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x400538
0x0000000000425889 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000491bd1 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047602e : salc ; and al, 0 ; jmp rax
0x000000000045ece2 : salc ; ja 0x45ecf4 ; ret
0x00000000004b960c : salc ; leave ; clc ; jmp qword ptr [rdx]
0x0000000000414872 : salc ; mov byte ptr [rax + rbx], sil ; pop rbx ; ret
0x0000000000434fcc : sar ah, 0xfd ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000496315 : sar al, 1 ; push rax ; sar eax, 1 ; call qword ptr [rax]
0x00000000004b9925 : sar al, cl ; jmp qword ptr [rdx]
0x000000000045b1d7 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret
0x0000000000483bc3 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000004682a9 : sar bh, 0xff ; lcall ptr [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x00000000004965d0 : sar bl, 0xf8 ; call qword ptr [rax]
0x0000000000452b4d : sar byte ptr [rax + 0x4a], 0 ; jmp rdx
0x0000000000464fcb : sar byte ptr [rax + 2], 0x5b ; ret
0x0000000000475abc : sar byte ptr [rax + 9], 0xf3 ; ret
0x00000000004b70a0 : sar byte ptr [rbx - 0xa], 1 ; call qword ptr [rax]
0x0000000000452af1 : sar byte ptr [rcx + 0x4a], 0 ; jmp rdx
0x00000000004385cd : sar byte ptr [rcx], cl ; ret
0x00000000004688d4 : sar byte ptr [rdi + 0x4b0a4a], 0x83 ; ret
0x0000000000451ecf : sar byte ptr [rdx + 0x4a], 0 ; jmp rdx
0x0000000000496154 : sar byte ptr [rip + 0x3f50fff8], 1 ; clc ; call rax
0x0000000000435f66 : sar byte ptr [rsi + 1], cl ; mov rdi, rbp ; call rbx
0x0000000000477f5c : sar byte ptr [rsi + 2], 1 ; ret
0x00000000004ad41f : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000046f744 : sar ch, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004ba8c1 : sar cl, 1 ; call rcx
0x00000000004ba851 : sar cl, 1 ; jmp rbx
0x00000000004ba9c1 : sar cl, cl ; call rsp
0x0000000000496618 : sar dh, 1 ; clc ; jmp qword ptr [rax]
0x000000000040277a : sar dword ptr [rdi + 0x6c20c0], cl ; call rbx
0x000000000046b911 : sar eax, 0x10 ; ret
0x000000000046b8ca : sar eax, 0x1f ; sub edx, ecx ; not eax ; and eax, edx ; ret
0x000000000046b84d : sar eax, 0x3f ; not eax ; and eax, ecx ; ret
0x0000000000496319 : sar eax, 1 ; call qword ptr [rax]
0x0000000000400fce : sar eax, 1 ; jne 0x400fd9 ; pop rbp ; ret
0x000000000045926c : sar eax, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000478474 : sar eax, 3 ; pop r15 ; ret
0x00000000004b1e01 : sar ebp, -1 ; mov esp, 0x4cfffdc2 ; ret
0x00000000004ad183 : sar ecx, 1 ; jnp 0x4ad144 ; ret
0x00000000004738bf : sar edi, 1 ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x000000000046279f : sar edi, 1 ; inc dword ptr [rbx - 0x76be0008] ; ret 0x5b74
0x0000000000473a9d : sar edi, cl ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x000000000044e3bf : sar edx, 2 ; call 0x45a5d5
0x000000000041bde7 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x000000000045926b : sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000046b84c : sar rax, 0x3f ; not eax ; and eax, ecx ; ret
0x0000000000400fcd : sar rax, 1 ; jne 0x400fda ; pop rbp ; ret
0x0000000000478473 : sar rax, 3 ; pop r15 ; ret
0x000000000044e3be : sar rdx, 2 ; call 0x45a5d6
0x000000000041bde6 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000438fb9 : sbb ah, byte ptr [rax] ; call rax
0x00000000004b99b4 : sbb al, 0x22 ; stc ; jmp qword ptr [rdx]
0x00000000004b477c : sbb al, 0x24 ; add byte ptr [rax], al ; jo 0x4b470a ; cmc ; jmp rbx
0x000000000046a410 : sbb al, 0x24 ; add rsp, 0x30 ; jmp r11
0x000000000046a4f0 : sbb al, 0x24 ; add rsp, 0x30 ; ret
0x00000000004bc27c : sbb al, 0x9f ; add byte ptr [rax], al ; jo 0x4bc216 ; cli ; call rdx
0x00000000004b56da : sbb al, 0xd ; add al, 0xbd ; cmc ; jmp qword ptr [rdx]
0x00000000004b84fa : sbb al, 0xd ; add esp, dword ptr [rdx] ; clc ; jmp qword ptr [rdx]
0x00000000004b4312 : sbb al, 0xd ; and al, 0x8b ; cmc ; jmp qword ptr [rdx]
0x00000000004b87e2 : sbb al, 0xd ; and al, 0xf8 ; jmp qword ptr [rdx]
0x00000000004b2602 : sbb al, 0xd ; and bh, dl ; hlt ; jmp qword ptr [rdx]
0x00000000004ba64a : sbb al, 0xd ; bswap esi ; stc ; jmp qword ptr [rdx]
0x00000000004b2fca : sbb al, 0xd ; cdq ; cmc ; jmp qword ptr [rdx]
0x00000000004b52ea : sbb al, 0xd ; cld ; stosb byte ptr [rdi], al ; cmc ; jmp qword ptr [rdx]
0x00000000004b322a : sbb al, 0xd ; cmc ; jmp qword ptr [rdx]
0x00000000004bb7fa : sbb al, 0xd ; cmp al, 0x2c ; cli ; jmp qword ptr [rdx]
0x00000000004b35ba : sbb al, 0xd ; cmp dword ptr [rdx - 0xb], edx ; jmp qword ptr [rdx]
0x00000000004b5b5a : sbb al, 0xd ; cmpsb byte ptr [rsi], byte ptr [rdi] ; out -0xb, eax ; jmp qword ptr [rdx]
0x00000000004bb2fa : sbb al, 0xd ; fisttp qword ptr [rdx + rdi*8] ; jmp qword ptr [rdx]
0x00000000004b96e2 : sbb al, 0xd ; fmul st(1), st(0) ; clc ; jmp qword ptr [rdx]
0x00000000004b83da : sbb al, 0xd ; imul esp, dword ptr [rcx], -8 ; jmp qword ptr [rdx]
0x00000000004b264a : sbb al, 0xd ; in eax, -6 ; hlt ; jmp qword ptr [rdx]
0x00000000004b3572 : sbb al, 0xd ; in eax, 0x51 ; cmc ; jmp qword ptr [rdx]
0x00000000004b9f7a : sbb al, 0xd ; insb byte ptr [rdi], dx ; stc ; jmp qword ptr [rdx]
0x00000000004b54e2 : sbb al, 0xd ; insd dword ptr [rdi], dx ; scasd eax, dword ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x00000000004b41aa : sbb al, 0xd ; int1 ; xchg ch, dh ; jmp qword ptr [rdx]
0x00000000004b2daa : sbb al, 0xd ; jb 0x4b2df0 ; cmc ; jmp qword ptr [rdx]
0x00000000004ba552 : sbb al, 0xd ; jb 0x4ba527 ; stc ; jmp qword ptr [rdx]
0x00000000004ba692 : sbb al, 0xd ; jb 0x4ba669 ; stc ; jmp qword ptr [rdx]
0x00000000004b576a : sbb al, 0xd ; jbe 0x4b5735 ; cmc ; jmp qword ptr [rdx]
0x00000000004b606a : sbb al, 0xd ; jbe 0x4b606c ; cmc ; jmp qword ptr [rdx]
0x00000000004bb3d2 : sbb al, 0xd ; jbe 0x4bb3ee ; cli ; jmp qword ptr [rdx]
0x00000000004b334a : sbb al, 0xd ; je 0x4b33a2 ; cmc ; jmp qword ptr [rdx]
0x00000000004b537a : sbb al, 0xd ; je 0x4b532f ; cmc ; jmp qword ptr [rdx]
0x00000000004b5692 : sbb al, 0xd ; jg 0x4b5657 ; cmc ; jmp qword ptr [rdx]
0x00000000004b3272 : sbb al, 0xd ; jge 0x4b32ca ; cmc ; jmp qword ptr [rdx]
0x00000000004bb38a : sbb al, 0xd ; jge 0x4bb3a6 ; cli ; jmp qword ptr [rdx]
0x00000000004b2692 : sbb al, 0xd ; jl 0x4b2699 ; hlt ; jmp qword ptr [rdx]
0x00000000004b42ca : sbb al, 0xd ; jmp 0x234b3860
0x00000000004b447a : sbb al, 0xd ; jmp 0x234b3a11
0x00000000004b57fa : sbb al, 0xd ; jmp 0x234b4dc8
0x00000000004b5f4a : sbb al, 0xd ; jmp 0x234b5544
0x00000000004b5d0a : sbb al, 0xd ; jmp 0x4b5d0a
0x00000000004b5ba2 : sbb al, 0xd ; jne 0x4b5b92 ; cmc ; jmp qword ptr [rdx]
0x00000000004b99fa : sbb al, 0xd ; jne 0x4b9a25 ; stc ; jmp qword ptr [rdx]
0x00000000004ba15a : sbb al, 0xd ; jne 0x4ba11f ; stc ; jmp qword ptr [rdx]
0x00000000004b46ba : sbb al, 0xd ; jno 0x4b4660 ; cmc ; jmp qword ptr [rdx]
0x00000000004b5fda : sbb al, 0xd ; js 0x4b5fd3 ; cmc ; jmp qword ptr [rdx]
0x00000000004b846a : sbb al, 0xd ; leave ; and eax, edi ; jmp qword ptr [rdx]
0x00000000004b41f2 : sbb al, 0xd ; leave ; xchg ch, dh ; jmp qword ptr [rdx]
0x00000000004b84b2 : sbb al, 0xd ; mov bh, 0x21 ; clc ; jmp qword ptr [rdx]
0x00000000004ba3fa : sbb al, 0xd ; mov bh, 0xcb ; stc ; jmp qword ptr [rdx]
0x00000000004b4552 : sbb al, 0xd ; mov bl, 0x9c ; cmc ; jmp qword ptr [rdx]
0x00000000004b3bd2 : sbb al, 0xd ; mov ch, 0x6c ; cmc ; jmp qword ptr [rdx]
0x00000000004b43a2 : sbb al, 0xd ; mov ch, 0x8b ; cmc ; jmp qword ptr [rdx]
0x00000000004b5bea : sbb al, 0xd ; mov cl, 0xe7 ; cmc ; jmp qword ptr [rdx]
0x00000000004b9c62 : sbb al, 0xd ; mov dword ptr [rcx - 7], ecx ; jmp qword ptr [rdx]
0x00000000004b8392 : sbb al, 0xd ; mov rax, dr7 ; jmp qword ptr [rdx]
0x00000000004bd3d2 : sbb al, 0xd ; mov rbx, r15 ; jmp qword ptr [rdx]
0x00000000004b61d2 : sbb al, 0xd ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; cmc ; jmp qword ptr [rdx]
0x00000000004b3302 : sbb al, 0xd ; nop ; cmc ; jmp qword ptr [rdx]
0x00000000004b60fa : sbb al, 0xd ; or ah, bh ; cmc ; jmp qword ptr [rdx]
0x00000000004b5602 : sbb al, 0xd ; or al, 0xaf ; cmc ; jmp qword ptr [rdx]
0x00000000004b59aa : sbb al, 0xd ; or al, 0xe0 ; cmc ; jmp qword ptr [rdx]
0x00000000004b8422 : sbb al, 0xd ; pop rax ; and eax, edi ; jmp qword ptr [rdx]
0x00000000004b32ba : sbb al, 0xd ; pop rax ; cmc ; jmp qword ptr [rdx]
0x00000000004be042 : sbb al, 0xd ; pop rax ; pop rdx ; cld ; jmp qword ptr [rdx]
0x00000000004b57b2 : sbb al, 0xd ; pop rax ; ret 0xfff5
0x00000000004bb8ca : sbb al, 0xd ; pop rdi ; sub al, 0xfa ; jmp qword ptr [rdx]
0x00000000004bb842 : sbb al, 0xd ; pop rdx ; sub al, 0xfa ; jmp qword ptr [rdx]
0x00000000004b462a : sbb al, 0xd ; popfq ; cmc ; jmp qword ptr [rdx]
0x00000000004ba022 : sbb al, 0xd ; popfq ; stc ; jmp qword ptr [rdx]
0x00000000004b3602 : sbb al, 0xd ; push r10 ; cmc ; jmp qword ptr [rdx]
0x00000000004b60b2 : sbb al, 0xd ; push rax ; sti ; cmc ; jmp qword ptr [rdx]
0x00000000004b292a : sbb al, 0xd ; push rdi ; or dh, ch ; jmp qword ptr [rdx]
0x00000000004bd18a : sbb al, 0xd ; push rdx ; or ebx, edi ; jmp qword ptr [rdx]
0x00000000004b44c2 : sbb al, 0xd ; push rdx ; pushfq ; cmc ; jmp qword ptr [rdx]
0x00000000004bb462 : sbb al, 0xd ; pushfq ; adc edi, edx ; jmp qword ptr [rdx]
0x00000000004b380a : sbb al, 0xd ; rcr dword ptr [rbx - 0xb], 1 ; jmp qword ptr [rdx]
0x00000000004b5452 : sbb al, 0xd ; ret
0x00000000004b5d52 : sbb al, 0xd ; retf -0xa17 ; jmp qword ptr [rdx]
0x00000000004b25ba : sbb al, 0xd ; sal edi, -0xc ; jmp qword ptr [rdx]
0x00000000004b960a : sbb al, 0xd ; salc ; leave ; clc ; jmp qword ptr [rdx]
0x00000000004b99b2 : sbb al, 0xd ; sbb al, 0x22 ; stc ; jmp qword ptr [rdx]
0x00000000004b3432 : sbb al, 0xd ; sbb byte ptr [rax - 0xb], dl ; jmp qword ptr [rdx]
0x00000000004b33ea : sbb al, 0xd ; sbb edx, dword ptr [rax - 0xb] ; jmp qword ptr [rdx]
0x00000000004b5a3a : sbb al, 0xd ; shl esp, -0xb ; jmp qword ptr [rdx]
0x00000000004b5212 : sbb al, 0xd ; shl esp, 1 ; std ; jmp qword ptr [rdx]
0x00000000004b5eba : sbb al, 0xd ; shr ch, cl ; cmc ; jmp qword ptr [rdx]
0x00000000004b5f02 : sbb al, 0xd ; stc ; in eax, dx ; cmc ; jmp qword ptr [rdx]
0x00000000004b540a : sbb al, 0xd ; stc ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rdx]
0x00000000004b618a : sbb al, 0xd ; std ; cld ; cmc ; jmp qword ptr [rdx]
0x00000000004b6142 : sbb al, 0xd ; std ; cmc ; jmp qword ptr [rdx]
0x00000000004b969a : sbb al, 0xd ; std ; leave ; clc ; jmp qword ptr [rdx]
0x00000000004b459a : sbb al, 0xd ; sti ; pushfq ; cmc ; jmp qword ptr [rdx]
0x00000000004bb342 : sbb al, 0xd ; stosb byte ptr [rdi], al ; or al, 0xfa ; jmp qword ptr [rdx]
0x00000000004ba442 : sbb al, 0xd ; stosd dword ptr [rdi], eax ; retf ; stc ; jmp qword ptr [rdx]
0x00000000004b2f82 : sbb al, 0xd ; sub al, byte ptr [rsi - 0xb] ; jmp qword ptr [rdx]
0x00000000004b5cc2 : sbb al, 0xd ; sub al, ch ; cmc ; jmp qword ptr [rdx]
0x00000000004b26da : sbb al, 0xd ; sub edi, edi ; hlt ; jmp qword ptr [rdx]
0x00000000004b5b12 : sbb al, 0xd ; test al, 0xe4 ; cmc ; jmp qword ptr [rdx]
0x00000000004ba082 : sbb al, 0xd ; test byte ptr [rcx - 7], ch ; jmp qword ptr [rdx]
0x00000000004b9f32 : sbb al, 0xd ; test dword ptr [rsi - 7], esp ; jmp qword ptr [rdx]
0x00000000004b5aca : sbb al, 0xd ; wait ; in al, -0xb ; jmp qword ptr [rdx]
0x00000000004b5a82 : sbb al, 0xd ; xchg eax, ebp ; in al, -0xb ; jmp qword ptr [rdx]
0x00000000004b29e2 : sbb al, 0xd ; xchg eax, edx ; and al, 0xf5 ; jmp qword ptr [rdx]
0x00000000004b5c7a : sbb al, 0xd ; xchg edi, esp ; cmc ; jmp qword ptr [rdx]
0x00000000004b834a : sbb al, 0xd ; xor byte ptr [rcx], ah ; clc ; jmp qword ptr [rdx]
0x00000000004b9dd2 : sbb al, 0xd ; xor esp, dword ptr [rbp - 7] ; jmp qword ptr [rdx]
0x00000000004b86d9 : sbb al, 0xf8 ; call rdx
0x0000000000496125 : sbb al, 0xf8 ; jmp qword ptr [rax - 0x1f0007e3]
0x0000000000449044 : sbb al, 1 ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x0000000000496119 : sbb al, bh ; jmp rax
0x00000000004799f2 : sbb al, byte ptr [rbx + 0xa3c0fe0] ; jne 0x4799ad ; call rbx
0x0000000000493197 : sbb bh, al ; push rbx ; ret
0x0000000000496b01 : sbb bh, cl ; call rax
0x00000000004abf05 : sbb bl, byte ptr [rsi] ; ret
0x000000000043cfb6 : sbb bl, ch ; ret 0x1f0f
0x000000000043404b : sbb bl, dh ; ret
0x000000000042276b : sbb byte ptr [r11 + 0x5d], r11b ; pop r12 ; pop r13 ; ret
0x0000000000491e5a : sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00000000004760a2 : sbb byte ptr [r9], sil ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000048dedf : sbb byte ptr [rax + 0xf4c10fa], al ; ret
0x0000000000468345 : sbb byte ptr [rax - 0x3f], cl ; out 3, eax ; call 0x414617
0x0000000000439497 : sbb byte ptr [rax - 0x77], cl ; cwde ; call rcx
0x000000000040fa56 : sbb byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000445568 : sbb byte ptr [rax - 0x77], cl ; pop rax ; or cl, ch ; ret
0x000000000040d211 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000450431 : sbb byte ptr [rax - 0x77], cl ; ret 0x6349
0x0000000000414917 : sbb byte ptr [rax - 0x77], cl ; xor dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x000000000040aed6 : sbb byte ptr [rax - 0x7d], cl ; cli ; dec dword ptr [rax + 0xf] ; ret 0xe0ba
0x0000000000491e5b : sbb byte ptr [rax - 0x7d], cl ; ret
0x000000000042231e : sbb byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000000000042231d : sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00000000004b3434 : sbb byte ptr [rax - 0xb], dl ; jmp qword ptr [rdx]
0x0000000000436b51 : sbb byte ptr [rax], ah ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040dc6a : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000045abf7 : sbb byte ptr [rbx + 0x48], 0x29 ; call 0xffffffffc3a1ed65
0x000000000045a920 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000040f1da : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000040d665 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000440bd0 : sbb byte ptr [rbx - 0x14d3dbbc], cl ; ret 0x8948
0x000000000043fa98 : sbb byte ptr [rbx - 0x14dbdbbc], cl ; ret 0x8948
0x000000000040e767 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000414876 : sbb byte ptr [rbx - 0x3d], bl ; xor eax, eax ; pop rbx ; ret
0x000000000043420f : sbb byte ptr [rbx - 0x7663dbbc], cl ; ret 0xdaf7
0x000000000043431f : sbb byte ptr [rbx - 0x76ebdbbc], cl ; ret 0xdaf7
0x00000000004777e3 : sbb byte ptr [rcx + 0x29], cl ; ret 0x6348
0x0000000000465276 : sbb byte ptr [rcx + 0x39], cl ; ret
0x00000000004590db : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000004353f3 : sbb byte ptr [rcx - 0xa], al ; ret 0x7401
0x0000000000491154 : sbb byte ptr [rcx], ch ; and eax, dword ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; pop rbx ; ret
0x00000000004760a3 : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000463fdb : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000046b55e : sbb byte ptr [rdi + 0x6c11e0], bh ; call rax
0x000000000041473e : sbb byte ptr [rdx + 0x5b], bl ; pop rbp ; jmp rax
0x000000000044e34f : sbb byte ptr [rdx + rcx*2], dh ; mov rdi, r15 ; call 0x45a5c9
0x00000000004133c7 : sbb byte ptr [rdx], al ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x0000000000435bcc : sbb byte ptr [rdx], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000004b454e : sbb byte ptr [rsi + 0xd1cfff5], ah ; mov bl, 0x9c ; cmc ; jmp qword ptr [rdx]
0x000000000048f1b9 : sbb ch, al ; shr dword ptr [rcx + rdi*8], 1 ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000442e4c : sbb ch, byte ptr [rax + rax + 0x48] ; test eax, eax ; je 0x442e5e ; call rax
0x000000000041909d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041fbbd : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000418c8d : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000418799 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000418fa9 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042180a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000042102a : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000042141a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000420c3a : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042071d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041fefd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x0000000000418a1d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041f6dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x0000000000418d5d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000419079 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000420dd9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000419149 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042023d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041fa1d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041f1fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x00000000004203dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x0000000000418efd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004186ed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x0000000000418aed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x00000000004212ca : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000420aea : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000421bfa : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000418fcd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000004187bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000041f53d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041885f : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000418bbd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x000000000041f673 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000420373 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041fe93 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004211cb : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000421afb : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000418e2d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004206b3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041f9b3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000041f4d3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004201d3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000042131b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000420b3b : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000418883 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000440513 : sbb cl, ch ; ret 0xfff9
0x000000000045ea91 : sbb dh, bl ; ret
0x00000000004b2284 : sbb dl, 0xfd ; call qword ptr [rax]
0x0000000000486c98 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000486c21 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000486c99 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000409e66 : sbb dword ptr [rax], eax ; add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x00000000004b57ae : sbb dword ptr [rax], edx ; idiv bh ; sbb al, 0xd ; pop rax ; ret 0xfff5
0x00000000004ae7bd : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000432757 : sbb eax, -1 ; ret
0x0000000000437435 : sbb eax, 0 ; leave ; ret
0x0000000000496129 : sbb eax, 0x1ee0fff8 ; clc ; jmp qword ptr [rax]
0x0000000000486a41 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000486ab9 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004b3e6d : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; jbe 0x4b3e6e ; jmp rax
0x00000000004834de : sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x000000000046b99a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x0000000000432755 : sbb eax, eax ; sbb eax, -1 ; ret
0x000000000049611d : sbb eax, edi ; jmp qword ptr [rax]
0x000000000046b4e1 : sbb ebp, dword ptr [rax + rax + 0x48] ; add esp, 0x58 ; ret
0x0000000000476167 : sbb ebp, dword ptr [rax + rax + 0x48] ; add esp, 8 ; ret
0x0000000000444a10 : sbb ebx, esi ; ret
0x0000000000450500 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x6348
0x000000000048fa01 : sbb ecx, ecx ; cmp qword ptr [rsi + 8], rdi ; cmovbe eax, ecx ; ret
0x00000000004964d9 : sbb ecx, edi ; call qword ptr [rax + 0x20fff91b]
0x00000000004965bd : sbb ecx, edi ; call qword ptr [rax - 0x2f00070d]
0x0000000000496499 : sbb ecx, edi ; call rax
0x0000000000496ac5 : sbb edi, ecx ; call rax
0x00000000004964dd : sbb edi, ecx ; jmp qword ptr [rax]
0x00000000004b33ec : sbb edx, dword ptr [rax - 0xb] ; jmp qword ptr [rdx]
0x000000000042185e : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x0000000000496215 : scasb al, byte ptr [rdi] ; clc ; call qword ptr [rax]
0x00000000004b53c5 : scasb al, byte ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x000000000046789a : scasb al, byte ptr [rdi] ; mov eax, dword ptr [rdx] ; ret
0x000000000046279e : scasb al, byte ptr [rdi] ; sar edi, 1 ; inc dword ptr [rbx - 0x76be0008] ; ret 0x5b74
0x000000000042195d : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045b39f : scasd eax, dword ptr [rdi] ; add eax, esi ; ret
0x00000000004351dd : scasd eax, dword ptr [rdi] ; cli ; std ; dec dword ptr [rax - 0x75] ; jge 0x4351ed ; call rbx
0x00000000004b54e5 : scasd eax, dword ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x000000000048cdc0 : scasd eax, dword ptr [rdi] ; mov ah, 0x24 ; pop rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x0000000000401568 : scasd eax, dword ptr [rdi] ; ret
0x000000000045c196 : scasd eax, dword ptr [rdi] ; ret 0x67ba
0x0000000000432f04 : scasd eax, dword ptr [rdi] ; ret 0x8341
0x000000000047babb : scasd eax, dword ptr [rdi] ; sub al, 0xd5 ; rcr byte ptr [rdx], 0x4b ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x000000000043701c : setae al ; ret
0x00000000004385d0 : setne dl ; jmp 0x4385b8
0x0000000000444808 : shl byte ptr [rdi], cl ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x0000000000496ae0 : shl byte ptr [rip + 0x2750fff9], 1 ; stc ; call rax
0x000000000043299f : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x0000000000430d43 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000417085 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000042579b : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x00000000004257b2 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000459a46 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000459a57 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000425691 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000045afad : shl byte ptr [rsi - 0x70], 0xc3 ; mov eax, 1 ; ret
0x0000000000463323 : shl byte ptr [rsi - 0x7d], cl ; jge 0x463336 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5385
0x00000000004a23e0 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004ad308 : shl dword ptr [rdi - 5], 1 ; ret
0x00000000004678bc : shl dword ptr [rip - 0x3b7cb800], 8 ; ret
0x0000000000425716 : shl dword ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004327fb : shl dword ptr [rsi + 0xf], -0x26 ; ret
0x0000000000459a42 : shl dword ptr [rsi + 0xf], -0x29 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000004257cd : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x00000000004257b6 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042579f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042425b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000425731 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041ba3c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x00000000004255f1 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000438682 : shl eax, cl ; pop rbp ; ret
0x000000000043867e : shl ecx, 3 ; pop rbx ; shl eax, cl ; pop rbp ; ret
0x000000000046bf2c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000046beb7 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000046be86 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000468347 : shl edi, 3 ; call 0x414615
0x000000000048cc8e : shl edx, cl ; or r8, rdx ; mov qword ptr [rsi], r8 ; ret
0x00000000004b5a3c : shl esp, -0xb ; jmp qword ptr [rdx]
0x00000000004b5214 : shl esp, 1 ; std ; jmp qword ptr [rdx]
0x000000000046bf2b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000046beb6 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000046be85 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000468346 : shl rdi, 3 ; call 0x414616
0x000000000048cc8d : shl rdx, cl ; or r8, rdx ; mov qword ptr [rsi], r8 ; ret
0x000000000047b425 : shr al, 0xf5 ; ret 0xfffe
0x0000000000401e30 : shr al, 1 ; mov rdx, rax ; jmp 0x401e51
0x0000000000401e2f : shr al, 1 ; mov rdx, rax ; jmp 0x401e52
0x000000000046aa72 : shr bl, cl ; or al, 0x83 ; ret
0x00000000004241ff : shr byte ptr [rcx], 0xc8 ; ret
0x0000000000441a78 : shr byte ptr [rcx], cl ; ret
0x000000000041bdeb : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x0000000000496b34 : shr byte ptr [rip + 0x2f50fff9], 1 ; stc ; call rax
0x0000000000450612 : shr byte ptr [rip + 0x5c750027], cl ; mov eax, edx ; pop rbx ; ret
0x00000000004b5ebc : shr ch, cl ; cmc ; jmp qword ptr [rdx]
0x0000000000414ccb : shr cl, cl ; ret
0x00000000004526d5 : shr dh, 0xff ; dec dword ptr [rcx + 0x39] ; ret 0x850f
0x000000000048f1bb : shr dword ptr [rcx + rdi*8], 1 ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004134a5 : shr dword ptr [rdx], cl ; add byte ptr [rcx], bh ; ret 0xa7e
0x000000000046b880 : shr eax, 0x3f ; ret
0x00000000004330fa : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x00000000004330d9 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000043a90c : shr ebx, cl ; ret
0x000000000046c03c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000046bfc1 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000046bf90 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000043653c : shr ecx, cl ; ret
0x0000000000459373 : shr edx, 2 ; sub eax, edx ; ret
0x000000000046c03b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000046bfc0 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000046bf8f : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000046b87f : shr rax, 0x3f ; ret
0x0000000000459372 : shr rdx, 2 ; sub eax, edx ; ret
0x0000000000432e26 : sldt word ptr [rax] ; pop rbx ; lea rax, qword ptr [r9 + 1] ; pop rbp ; ret
0x00000000004a15a5 : sldt word ptr [rax] ; ret 0xf
0x0000000000496a66 : stc ; call qword ptr [rax + 0x10fff93a]
0x0000000000496a5e : stc ; call qword ptr [rax + 0x10fff93b]
0x0000000000496a56 : stc ; call qword ptr [rax + 0x10fff93c]
0x0000000000496a4e : stc ; call qword ptr [rax + 0x10fff93d]
0x00000000004964da : stc ; call qword ptr [rax + 0x20fff91b]
0x0000000000496876 : stc ; call qword ptr [rax + 0x20fff942]
0x000000000049665e : stc ; call qword ptr [rax + 0x20fff945]
0x00000000004965f2 : stc ; call qword ptr [rax - 0x1f0006f9]
0x0000000000496afe : stc ; call qword ptr [rax - 0x2f0006e6]
0x00000000004965be : stc ; call qword ptr [rax - 0x2f00070d]
0x0000000000496486 : stc ; call qword ptr [rax]
0x000000000049670a : stc ; call qword ptr [rdx + 0x22fff947]
0x000000000049672a : stc ; call qword ptr [rdx]
0x00000000004966a6 : stc ; call qword ptr [rsi + 0x26fff944]
0x000000000049667e : stc ; call qword ptr [rsi]
0x000000000049648e : stc ; call rax
0x00000000004ba8c2 : stc ; call rcx
0x00000000004b9e72 : stc ; call rdi
0x000000000049671a : stc ; call rdx
0x00000000004966b6 : stc ; call rsi
0x00000000004967e2 : stc ; call rsp
0x0000000000496609 : stc ; clc ; jmp rax
0x00000000004b606d : stc ; cmc ; jmp qword ptr [rdx]
0x0000000000475dec : stc ; dec dword ptr [rax - 0x77] ; ret 0x894c
0x000000000048f1bd : stc ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004b5f04 : stc ; in eax, dx ; cmc ; jmp qword ptr [rdx]
0x00000000004965a6 : stc ; inc dword ptr [rax + 0x10] ; stc ; jmp qword ptr [rax]
0x000000000049652a : stc ; inc dword ptr [rax + 0x13] ; stc ; jmp qword ptr [rax]
0x000000000049666a : stc ; inc dword ptr [rax + 0x44] ; stc ; call rax
0x0000000000496842 : stc ; inc dword ptr [rax + 0x48] ; stc ; call rax
0x00000000004964be : stc ; inc dword ptr [rax + 0xe] ; stc ; inc dword ptr [rax] ; adc cl, bh ; jmp rax
0x0000000000496542 : stc ; inc dword ptr [rax + 0xf] ; stc ; jmp qword ptr [rax]
0x00000000004965ee : stc ; inc dword ptr [rax + 6] ; stc ; call qword ptr [rax - 0x1f0006f9]
0x00000000004964a6 : stc ; inc dword ptr [rax] ; adc bh, cl ; jmp rax
0x00000000004964c2 : stc ; inc dword ptr [rax] ; adc cl, bh ; jmp rax
0x000000000049654a : stc ; inc dword ptr [rax] ; adc edi, ecx ; jmp rax
0x0000000000496a72 : stc ; inc dword ptr [rax] ; cmp ecx, edi ; push qword ptr [rax + 0x38] ; stc ; jmp rax
0x0000000000496b86 : stc ; inc dword ptr [rax] ; cwde ; stc ; call qword ptr [rax]
0x0000000000496c42 : stc ; inc dword ptr [rax] ; lahf ; stc ; jmp qword ptr [rax]
0x0000000000496c1a : stc ; inc dword ptr [rax] ; sahf ; stc ; call qword ptr [rax]
0x0000000000496872 : stc ; inc dword ptr [rax] ; stc ; call qword ptr [rax + 0x20fff942]
0x000000000049665a : stc ; inc dword ptr [rax] ; stc ; call qword ptr [rax + 0x20fff945]
0x00000000004967de : stc ; inc dword ptr [rbp + rax*2 - 7] ; call rsp
0x0000000000496716 : stc ; inc dword ptr [rdx + 0x46] ; stc ; call rdx
0x0000000000496706 : stc ; inc dword ptr [rdx] ; stc ; call qword ptr [rdx + 0x22fff947]
0x00000000004966b2 : stc ; inc dword ptr [rsi + 0x43] ; stc ; call rsi
0x00000000004966a2 : stc ; inc dword ptr [rsi] ; stc ; call qword ptr [rsi + 0x26fff944]
0x0000000000496622 : stc ; inc eax ; add bh, cl ; call qword ptr [rax]
0x0000000000496bb6 : stc ; inc eax ; cwde ; stc ; call rax
0x0000000000496c5a : stc ; inc eax ; lahf ; stc ; jmp rax
0x0000000000496c0e : stc ; inc eax ; popfq ; stc ; call rax
0x0000000000496c36 : stc ; inc eax ; sahf ; stc ; jmp rax
0x000000000040f913 : stc ; je 0x40f755 ; ret
0x0000000000420912 : stc ; je 0x4208de ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000488722 : stc ; je 0x4886ee ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000496a46 : stc ; jmp qword ptr [rax + 0x10fff93e]
0x00000000004964a2 : stc ; jmp qword ptr [rax]
0x0000000000496936 : stc ; jmp qword ptr [rdx + 0x12fff938]
0x000000000049670e : stc ; jmp qword ptr [rdx]
0x00000000004966aa : stc ; jmp qword ptr [rsi]
0x00000000004964aa : stc ; jmp rax
0x00000000004ba852 : stc ; jmp rbx
0x000000000048cd39 : stc ; jmp rcx
0x00000000004baf52 : stc ; jmp rdx
0x000000000049669a : stc ; jmp rsi
0x00000000004967be : stc ; jmp rsp
0x00000000004ad184 : stc ; jnp 0x4ad143 ; ret
0x0000000000496836 : stc ; lcall ptr [rdx + 0x2afff942] ; stc ; call rax
0x00000000004968fe : stc ; ljmp ptr [rdi + rsi + 0x3f52fff9] ; stc ; call rdx
0x000000000049683a : stc ; ljmp ptr [rdx] ; stc ; call rax
0x00000000004967b6 : stc ; ljmp ptr [rsi + 0x3efff942] ; stc ; jmp rsp
0x00000000004b540c : stc ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rdx]
0x00000000004755ab : stc ; mov al, 0xff ; call qword ptr [rax + 0x8c28348]
0x0000000000428058 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043743e : stc ; nop ; xor eax, eax ; leave ; ret
0x000000000046bbbe : stc ; pop r15 ; ret
0x0000000000496a7e : stc ; push qword ptr [rax + 0x37] ; stc ; call qword ptr [rax]
0x0000000000496a76 : stc ; push qword ptr [rax + 0x38] ; stc ; jmp rax
0x0000000000496666 : stc ; push qword ptr [rax + 0x40fff944] ; stc ; call rax
0x00000000004965a2 : stc ; push qword ptr [rax + 0xe] ; stc ; inc dword ptr [rax + 0x10] ; stc ; jmp qword ptr [rax]
0x000000000049661e : stc ; push qword ptr [rax + 1] ; stc ; inc eax ; add bh, cl ; call qword ptr [rax]
0x0000000000496c0a : stc ; push qword ptr [rax - 0x3f000663] ; popfq ; stc ; call rax
0x0000000000496bb2 : stc ; push qword ptr [rax - 0x3f000668] ; cwde ; stc ; call rax
0x0000000000496482 : stc ; push qword ptr [rax] ; adc cl, bh ; call qword ptr [rax]
0x00000000004967da : stc ; push qword ptr [rbp + rax*2 + 0x4544fff9] ; stc ; call rsp
0x0000000000496712 : stc ; push qword ptr [rdx + 0x42fff946] ; stc ; call rdx
0x0000000000496932 : stc ; push qword ptr [rdx] ; cmp ecx, edi ; jmp qword ptr [rdx + 0x12fff938]
0x00000000004966ae : stc ; push qword ptr [rsi + 0x46fff943] ; stc ; call rsi
0x000000000049648a : stc ; push rax ; adc edi, ecx ; call rax
0x0000000000496be6 : stc ; push rax ; cdq ; stc ; call qword ptr [rax]
0x0000000000496bc2 : stc ; push rax ; cwde ; stc ; call qword ptr [rax]
0x0000000000496c16 : stc ; push rax ; popfq ; stc ; inc dword ptr [rax] ; sahf ; stc ; call qword ptr [rax]
0x0000000000496c3e : stc ; push rax ; sahf ; stc ; inc dword ptr [rax] ; lahf ; stc ; jmp qword ptr [rax]
0x0000000000496b82 : stc ; push rax ; xchg eax, edi ; stc ; inc dword ptr [rax] ; cwde ; stc ; call qword ptr [rax]
0x00000000004663f4 : std ; and al, 0xf ; xchg eax, esp ; ret 0xc031
0x00000000004b2286 : std ; call qword ptr [rax]
0x00000000004b1e1e : std ; call qword ptr [rbx + rax*8 - 0x3c830003]
0x00000000004b204e : std ; call qword ptr [rbx + rax*8 - 3]
0x00000000004bef5a : std ; call qword ptr [rbx]
0x00000000004b1cfe : std ; call rax
0x00000000004bcbb2 : std ; call rcx
0x00000000004b297a : std ; call rdi
0x00000000004b8532 : std ; call rsp
0x0000000000496615 : std ; clc ; call rax
0x00000000004b618c : std ; cld ; cmc ; jmp qword ptr [rdx]
0x00000000004b6145 : std ; cmc ; jmp qword ptr [rdx]
0x0000000000434f2c : std ; dec dword ptr [rax - 0x75] ; jge 0x434f38 ; call rbx
0x00000000004351df : std ; dec dword ptr [rax - 0x75] ; jge 0x4351eb ; call rbx
0x0000000000445f42 : std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004b1e12 : std ; dec dword ptr [rbx + rax*8 - 3] ; inc esp ; ret
0x00000000004b1cba : std ; dec dword ptr [rbx - 0x4e] ; std ; dec eax ; mov dl, 0xfd ; call qword ptr [rax]
0x0000000000434dea : std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004351ed : std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000434df7 : std ; dec dword ptr [rcx - 0x75] ; jge 0x434e03 ; call rbx
0x0000000000434f1e : std ; dec dword ptr [rcx - 0x75] ; jge 0x434f2a ; call rbx
0x0000000000435061 : std ; dec dword ptr [rcx - 0x75] ; jge 0x43506d ; call rbx
0x00000000004351d1 : std ; dec dword ptr [rcx - 0x75] ; jge 0x4351dd ; call rbx
0x00000000004b22be : std ; dec dword ptr [rsp + rsi*8 - 3] ; inc esp ; std ; jmp rax
0x00000000004b1cbe : std ; dec eax ; mov dl, 0xfd ; call qword ptr [rax]
0x00000000004b225a : std ; inc eax ; enter -3, -0x20 ; fscale ; jmp qword ptr [rax]
0x00000000004b1e16 : std ; inc esp ; ret
0x00000000004b22c2 : std ; inc esp ; std ; jmp rax
0x000000000046b06e : std ; jbe 0x46b07b ; ret
0x00000000004b1cd2 : std ; jmp qword ptr [rax]
0x00000000004bcc1a : std ; jmp qword ptr [rdi]
0x00000000004b5216 : std ; jmp qword ptr [rdx]
0x00000000004b225e : std ; jmp rax
0x00000000004b1cf6 : std ; jmp rsp
0x00000000004b969c : std ; leave ; clc ; jmp qword ptr [rdx]
0x000000000042787b : std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000443222 : std ; or eax, 0x83489074 ; ret
0x00000000004b228a : std ; push qword ptr [rax - 0x26] ; std ; jmp rax
0x00000000004bb251 : std ; stc ; jmp qword ptr [rdx]
0x0000000000434f2b : std ; std ; dec dword ptr [rax - 0x75] ; jge 0x434f39 ; call rbx
0x0000000000434f10 : std ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000434f1d : std ; std ; dec dword ptr [rcx - 0x75] ; jge 0x434f2b ; call rbx
0x0000000000415d21 : sti ; adc al, 0x77 ; sub ecx, dword ptr [rcx - 0x7d] ; ret
0x0000000000415f04 : sti ; add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000490501 : sti ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x3948
0x000000000047c338 : sti ; add cl, byte ptr [rcx + 0x29] ; ret
0x00000000004bd70a : sti ; call qword ptr [rax]
0x00000000004bdbca : sti ; call qword ptr [rdx]
0x00000000004965d1 : sti ; clc ; call qword ptr [rax]
0x00000000004b60b5 : sti ; cmc ; jmp qword ptr [rdx]
0x000000000045e872 : sti ; dec dword ptr [rax + 0x39] ; ret
0x000000000045e833 : sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000040d6ab : sti ; je 0x40d6bf ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004bd146 : sti ; jmp qword ptr [rdx]
0x0000000000427c58 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004b459c : sti ; pushfq ; cmc ; jmp qword ptr [rdx]
0x00000000004ad30a : sti ; ret
0x00000000004813d7 : sti ; ret 0xffbf
0x00000000004350f4 : sti ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000491175 : sti ; test eax, eax ; jne 0x491186 ; pop rbx ; ret
0x0000000000444247 : sti ; test rax, rax ; je 0x444255 ; call rax
0x0000000000496209 : stosb byte ptr [rdi], al ; clc ; jmp qword ptr [rax]
0x00000000004ad7e4 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00000000004b52ed : stosb byte ptr [rdi], al ; cmc ; jmp qword ptr [rdx]
0x00000000004bb344 : stosb byte ptr [rdi], al ; or al, 0xfa ; jmp qword ptr [rdx]
0x00000000004799f9 : stosd dword ptr [rdi], eax ; call rbx
0x0000000000414739 : stosd dword ptr [rdi], eax ; mov rsi, qword ptr [rsp + 0x18] ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x00000000004ae8ec : stosd dword ptr [rdi], eax ; ret
0x00000000004ba444 : stosd dword ptr [rdi], eax ; retf ; stc ; jmp qword ptr [rdx]
0x00000000004aecd1 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000401018 : sub al, 0 ; add ebx, esi ; ret
0x0000000000400e0f : sub al, 0 ; pop r12 ; ret
0x00000000004ba18c : sub al, 0x7e ; add byte ptr [rax], al ; jo 0x4ba1ff ; stc ; call rdx
0x0000000000437611 : sub al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000424de3 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004bcc8c : sub al, 0xa9 ; add byte ptr [rax], al ; sub al, 0xfa ; call qword ptr [rax]
0x00000000004b308c : sub al, 0xd ; add byte ptr [rax], al ; push rax ; cmc ; call qword ptr [rdx]
0x000000000047babc : sub al, 0xd5 ; rcr byte ptr [rdx], 0x4b ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000440bd4 : sub al, 0xeb ; ret 0x8948
0x00000000004960e1 : sub al, 0xf8 ; jmp rax
0x0000000000496b31 : sub al, 0xf9 ; call rax
0x000000000048f1bc : sub al, 0xf9 ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004bcc90 : sub al, 0xfa ; call qword ptr [rax]
0x00000000004bb7fd : sub al, 0xfa ; jmp qword ptr [rdx]
0x000000000047eb55 : sub al, 3 ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x00000000004960cd : sub al, bh ; call rax
0x00000000004145fc : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004156c1 : sub al, byte ptr [rax] ; test rax, rax ; je 0x4156d1 ; call rax
0x000000000046dd3a : sub al, byte ptr [rbx - 0x1df43] ; call qword ptr [rax]
0x000000000049683c : sub al, byte ptr [rdx - 7] ; call rax
0x00000000004b2f84 : sub al, byte ptr [rsi - 0xb] ; jmp qword ptr [rdx]
0x00000000004b5cc4 : sub al, ch ; cmc ; jmp qword ptr [rdx]
0x000000000046cdd7 : sub al, ch ; ret
0x00000000004960d9 : sub bh, al ; inc dword ptr [rax + 0x2b] ; clc ; call qword ptr [rax]
0x0000000000496aed : sub bh, cl ; call rax
0x0000000000479d93 : sub byte ptr [rax + 0x39], cl ; ret
0x000000000046aa3a : sub byte ptr [rax + 0x63], cl ; ret
0x000000000043371a : sub byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x000000000045ab46 : sub byte ptr [rax - 0x73], cl ; je 0x45ab75 ; call rbx
0x000000000041375b : sub byte ptr [rax - 0x77], cl ; and cl, bpl ; ret 0xfff4
0x000000000043424b : sub byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000436f4d : sub byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000043729f : sub byte ptr [rax], al ; cmp rdx, rax ; jne 0x437288 ; ret
0x00000000004385ba : sub byte ptr [rax], al ; pop rbx ; ret
0x0000000000439835 : sub byte ptr [rax], al ; ret
0x0000000000438594 : sub byte ptr [rax], al ; test eax, eax ; je 0x4385a6 ; ret
0x0000000000434bb5 : sub byte ptr [rax], al ; test rax, rax ; je 0x434bc6 ; ret
0x000000000040696b : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000409ded : sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000045c5b1 : sub byte ptr [rbx + 0x5d], r11b ; pop r12 ; pop r13 ; ret
0x0000000000438573 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x0000000000438572 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x0000000000412892 : sub byte ptr [rcx + rcx*4 + 0x62], cl ; and byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000415312 : sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000046b965 : sub byte ptr [rcx - 0x3b76b310], cl ; mov rbp, r9 ; jmp rdx
0x0000000000496204 : sub byte ptr [rcx - 0x552f0008], 0xf8 ; jmp qword ptr [rax]
0x0000000000462660 : sub byte ptr [rcx - 0x77], al ; ret 0x8341
0x00000000004b7118 : sub byte ptr [rcx - 0xa], bl ; jmp qword ptr [rsi]
0x0000000000457a77 : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000004762ab : sub byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x00000000004772ae : sub cl, al ; call 0x49099bd9
0x00000000004777cd : sub cl, al ; call 0x4909a0f8
0x0000000000460895 : sub dh, dh ; ret 0xf04
0x000000000045e699 : sub dword ptr [rax - 0x77], ecx ; loope 0x45e62c ; ret 0xf631
0x0000000000463ec3 : sub dword ptr [rax], eax ; add bh, dh ; ret 0x804
0x00000000004b568e : sub dword ptr [rcx], edx ; idiv bh ; sbb al, 0xd ; jg 0x4b565b ; cmc ; jmp qword ptr [rdx]
0x0000000000425ea7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x425ebd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000425ff7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42600d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426147 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42615d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426297 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4262ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004263e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4263fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426537 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42654d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426687 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42669d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004267d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4267ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426927 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42693d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426a77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x426a8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426bc7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x426bdd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426d17 : sub dword ptr [rdi + 0x10], ebx ; jb 0x426d2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426e67 : sub dword ptr [rdi + 0x10], ebx ; jb 0x426e7d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426fb7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x426fcd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000427107 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42711d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000425e03 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000425dff : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000425ead : sub dword ptr [rdi], esp ; jmp r9
0x00000000004255c6 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x0000000000496b35 : sub eax, 0x2f50fff9 ; stc ; call rax
0x0000000000412b92 : sub eax, 0x448d48fe ; ret
0x000000000043505f : sub eax, 0x49fffdfc ; mov edi, dword ptr [rbp] ; call rbx
0x0000000000450613 : sub eax, 0x5c750027 ; mov eax, edx ; pop rbx ; ret
0x00000000004b513d : sub eax, 0xa3c00000 ; cmc ; call qword ptr [rdx]
0x00000000004b87df : sub eax, 0xd1cfff8 ; and al, 0xf8 ; jmp qword ptr [rdx]
0x00000000004427f4 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000432bd4 : sub eax, 1 ; ret
0x000000000046b726 : sub eax, dword ptr [0] ; ret
0x000000000040eb29 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004b4ef5 : sub eax, dword ptr [rax] ; add byte ptr [rax], bl ; pushfq ; cmc ; jmp qword ptr [rax]
0x000000000040eac4 : sub eax, dword ptr [rax] ; add dword ptr [rip + 0x2b3c37], 1 ; ret
0x000000000040f61d : sub eax, dword ptr [rax] ; add ebx, esi ; ret
0x000000000040c8e5 : sub eax, dword ptr [rax] ; jne 0x40eb54 ; ret
0x000000000040eb00 : sub eax, dword ptr [rax] ; jne 0x40ed7d ; ret
0x00000000004100a8 : sub eax, dword ptr [rax] ; jne 0x416833 ; ret
0x000000000040ea45 : sub eax, dword ptr [rax] ; ret
0x00000000004107a3 : sub eax, dword ptr [rax] ; test rdx, rdx ; je 0x4107b3 ; call rdx
0x00000000004016fe : sub eax, dword ptr [rax] ; xor eax, eax ; ret
0x0000000000401b7f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000048c553 : sub eax, dword ptr [rcx + r8*4] ; je 0x48c537 ; ret
0x000000000048c554 : sub eax, dword ptr [rcx + rax*4] ; je 0x48c536 ; ret
0x000000000040f50e : sub eax, dword ptr [rdi + 0x18] ; ret
0x000000000043327c : sub eax, dword ptr [rdx + rcx*4] ; je 0x433266 ; ret
0x000000000040e743 : sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000046d161 : sub eax, eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000040da71 : sub eax, ebp ; pop r13 ; pop r14 ; ret
0x000000000047660b : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000045abfa : sub eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000040e1b9 : sub eax, ecx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000041850c : sub eax, ecx ; ret
0x0000000000419601 : sub eax, edi ; ret
0x0000000000464999 : sub eax, edx ; mov qword ptr [rdi + 0x308], rax ; ret
0x000000000040e76b : sub eax, edx ; ret
0x000000000046b90f : sub eax, edx ; sar eax, 0x10 ; ret
0x000000000046b87d : sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000457c2a : sub eax, esi ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000458d8e : sub eax, esi ; pop r14 ; pop r15 ; ret
0x000000000040b379 : sub eax, esp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004ad57e : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000004b2b59 : sub ebp, esi ; call qword ptr [rcx]
0x00000000004ac015 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000411177 : sub ecx, dword ptr [rax + 0x39] ; ret
0x0000000000415d24 : sub ecx, dword ptr [rcx - 0x7d] ; ret
0x000000000043867c : sub ecx, eax ; shl ecx, 3 ; pop rbx ; shl eax, cl ; pop rbp ; ret
0x0000000000496b29 : sub ecx, edi ; call rax
0x00000000004960dd : sub edi, eax ; call qword ptr [rax]
0x00000000004b26dc : sub edi, edi ; hlt ; jmp qword ptr [rdx]
0x00000000004bb779 : sub edi, edx ; call qword ptr [rdx]
0x000000000040e770 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000040e765 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000041bc64 : sub edx, eax ; jbe 0x41bca7 ; add rax, rdi ; ret
0x000000000041bc74 : sub edx, eax ; jbe 0x41bca9 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000041bc84 : sub edx, eax ; jbe 0x41bca9 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000041bc94 : sub edx, eax ; jbe 0x41bca9 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000046a6f1 : sub edx, eax ; mov eax, edx ; ret
0x000000000046a6b4 : sub edx, ecx ; mov eax, edx ; ret
0x000000000046b8cd : sub edx, ecx ; not eax ; and eax, edx ; ret
0x000000000040ac52 : sub edx, esi ; mov rdi, rbx ; call rax
0x000000000040055b : sub esi, edx ; add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x400539
0x000000000045a91e : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000493799 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040e1b8 : sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000432bd3 : sub rax, 1 ; ret
0x000000000046b725 : sub rax, qword ptr [0] ; ret
0x000000000040f50d : sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000046b724 : sub rax, qword ptr fs:[0] ; ret
0x000000000040b378 : sub rax, r12 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040da70 : sub rax, r13 ; pop r13 ; pop r14 ; ret
0x0000000000457c29 : sub rax, r14 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000458d8d : sub rax, r14 ; pop r14 ; pop r15 ; ret
0x000000000045abf9 : sub rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000419600 : sub rax, rdi ; ret
0x000000000046b87c : sub rax, rdx ; shr rax, 0x3f ; ret
0x00000000004bb778 : sub rdi, rdx ; call qword ptr [rdx]
0x000000000041bc63 : sub rdx, rax ; jbe 0x41bca8 ; add rax, rdi ; ret
0x000000000040ac51 : sub rdx, rsi ; mov rdi, rbx ; call rax
0x000000000045a91d : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000493798 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000437067 : syscall ; pop rdx ; pop rsi ; ret
0x000000000045b365 : syscall ; ret
0x000000000044c054 : test ah, bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffe8
0x000000000040de59 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000048f3c3 : test al, 0 ; add byte ptr [rax], al ; ret
0x00000000004bcbad : test al, 0 ; add byte ptr [rax], dh ; std ; call rcx
0x00000000004b2b58 : test al, 0x29 ; cmc ; call qword ptr [rcx]
0x00000000004b3388 : test al, 0x4d ; cmc ; call qword ptr [rax]
0x00000000004bcc18 : test al, 0x69 ; std ; jmp qword ptr [rdi]
0x00000000004ac8d7 : test al, 0x97 ; xchg eax, esp ; ret
0x00000000004bb588 : test al, 0xa ; cli ; jmp rbx
0x00000000004b92b8 : test al, 0xb5 ; clc ; call qword ptr [rcx]
0x00000000004b5b14 : test al, 0xe4 ; cmc ; jmp qword ptr [rdx]
0x000000000041215e : test al, al ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000004241fa : test al, al ; jne 0x4241e8 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000046f3d1 : test al, dl ; jmp 0x46f3d5
0x0000000000473581 : test byte ptr [rax + rax - 0x76b40000], ah ; ret 0x894c
0x00000000004772c1 : test byte ptr [rax + rbp*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000477cf3 : test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000043a340 : test byte ptr [rax - 0x39], cl ; ret
0x000000000048f942 : test byte ptr [rax - 0x77], 0xdf ; call r15
0x0000000000435a3e : test byte ptr [rax - 0x77], 0xef ; call rbx
0x00000000004ba84d : test byte ptr [rax], al ; add byte ptr [rax - 0x30], dh ; stc ; jmp rbx
0x0000000000430f1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000043035a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000040ea6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000040ea2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004330aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000040e05a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000430d5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000046140b : test byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000043a225 : test byte ptr [rbp + rcx*4 + 0x2c], cl ; ret
0x000000000047602a : test byte ptr [rbx + 0x24d61f3d], 0 ; jmp rax
0x00000000004bbee4 : test byte ptr [rbx + 0x5ac80000], bl ; cli ; jmp rdi
0x0000000000479b49 : test byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044c0c0 : test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffe8
0x000000000041b19e : test byte ptr [rcx + rax - 0x7cb80000], dl ; ret 0xe901
0x0000000000437fcf : test byte ptr [rcx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000046c7e4 : test byte ptr [rcx + rcx*4 - 9], 0xe8 ; ret
0x000000000047d9d6 : test byte ptr [rcx - 0x47], 0x40 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x00000000004ba084 : test byte ptr [rcx - 7], ch ; jmp qword ptr [rdx]
0x0000000000418886 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000459764 : test byte ptr [rdi + 0x48000000], dl ; bsf eax, edx ; ret
0x00000000004720fe : test byte ptr [rdi - 0x1600002f], al ; pop rdx ; ret
0x000000000043510a : test byte ptr [rdi], 0x84 ; ret 0
0x000000000047c0e1 : test byte ptr [rdi], 0x84 ; ret 0x15
0x000000000040aa72 : test byte ptr [rdi], 0x95 ; ret 0x8445
0x0000000000470928 : test byte ptr [rdi], 0x9f ; ret 0x9529
0x00000000004803bb : test byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x39], cl ; ret
0x000000000043ece3 : test byte ptr [rdx], 0 ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000459ec4 : test byte ptr [rdx], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000400d07 : test byte ptr [rip + 0x5b000001], dl ; pop rbp ; pop r12 ; ret
0x000000000046721c : test byte ptr [rip - 0x428], al ; add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x000000000047493a : test byte ptr [rsi], bl ; ret 0xffff
0x00000000004330c2 : test ch, 0xf0 ; je 0x4330bb ; movzx eax, cl ; pop rbx ; ret
0x000000000043285f : test cl, cl ; jne 0x432854 ; ret
0x000000000043290f : test cl, cl ; jne 0x432904 ; ret
0x0000000000432bcf : test cl, cl ; jne 0x432bc8 ; sub rax, 1 ; ret
0x00000000004330ea : test dh, 0xf0 ; je 0x4330b9 ; movzx eax, dl ; pop rbx ; ret
0x00000000004330ea : test dh, 0xf0 ; je 0x4330bb ; movzx eax, dl ; pop rbx ; ret
0x0000000000469e11 : test dh, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2b49
0x0000000000463de1 : test dh, bh ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x0000000000412e06 : test dh, bl ; or byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000460468 : test dh, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043ece2 : test dh, dh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000043b855 : test dh, dh ; mov eax, 0xffffffff ; cmovns eax, edx ; ret
0x0000000000430da4 : test dl, 0x40 ; jne 0x430d69 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000430dd2 : test dl, 4 ; jne 0x430d69 ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000043b27d : test dl, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004069f2 : test dl, dl ; jne 0x4069d4 ; ret
0x0000000000432a7f : test dl, dl ; jne 0x432a78 ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000047906b : test dword ptr [rax + 0x39], 0x430f48c2 ; ret 0x8348
0x000000000041c849 : test dword ptr [rax + 0x48fffffb], edi ; mov eax, edi ; ret
0x0000000000449a84 : test dword ptr [rax - 0x14000006], eax ; xor dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000046d954 : test dword ptr [rax - 0x7c000002], eax ; ret 0x8908
0x000000000044963f : test dword ptr [rax - 0x7c000005], esi ; ret 0x8908
0x00000000004496af : test dword ptr [rax - 0x7c000005], esi ; ret 0x8910
0x0000000000401562 : test dword ptr [rax - 9], 0xaf0f48f3 ; ret
0x0000000000469e12 : test dword ptr [rax], 0x89480000 ; ret 0x2b49
0x00000000004ba8bd : test dword ptr [rax], eax ; add al, dh ; sar cl, 1 ; call rcx
0x0000000000451159 : test dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb848
0x000000000046936a : test dword ptr [rax], eax ; or al, 0 ; add bl, dh ; ret
0x00000000004221ef : test dword ptr [rbp - 0xc000004], esp ; ret
0x0000000000414a5d : test dword ptr [rbx + 0x48000021], edi ; mov eax, ebx ; pop rbx ; ret
0x00000000004250c7 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000425516 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000463de2 : test dword ptr [rbx], 0x89490000 ; ret 0x8d48
0x00000000004b5406 : test dword ptr [rbx], edx ; idiv bh ; sbb al, 0xd ; stc ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rdx]
0x000000000041bbda : test dword ptr [rcx + 0x48000000], esi ; xor eax, eax ; ret
0x000000000041c560 : test dword ptr [rcx + 0x48fffffe], esp ; mov eax, edi ; ret
0x000000000042509d : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000424fad : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000424ebd : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000475471 : test dword ptr [rcx], ebp ; ret
0x000000000041c74a : test dword ptr [rdi + 0x48fffffc], esi ; mov eax, edi ; ret
0x000000000044abc5 : test dword ptr [rdi - 0x16000004], ebp ; scasd eax, dword ptr [rdi] ; ret
0x0000000000422005 : test dword ptr [rdi - 0xc000002], ecx ; ret
0x00000000004100ab : test dword ptr [rdx + 0x67], edi ; add byte ptr [rax], al ; ret
0x000000000040eb03 : test dword ptr [rdx + rax], ebp ; add bl, dh ; ret
0x0000000000424de2 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000047200b : test dword ptr [rdx], ebp ; fcos ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x000000000047350e : test dword ptr [rdx], ebp ; mov ah, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x000000000040c8e8 : test dword ptr [rsi + 0x22], ebx ; add byte ptr [rax], al ; ret
0x00000000004325e2 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004222ee : test dword ptr [rsi - 0xc000005], esp ; ret
0x00000000004b9f34 : test dword ptr [rsi - 7], esp ; jmp qword ptr [rdx]
0x00000000004397c5 : test dword ptr [rsi], 0x8b480000 ; jnp 0x4397ed ; call rax
0x00000000004252e8 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x0000000000451158 : test dword ptr fs:[rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb848
0x00000000004368e3 : test eax, 0x48fffde3 ; mov edi, dword ptr [rbx] ; call r12
0x00000000004ae5c0 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000428566 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000496205 : test eax, 0xaad0fff8 ; clc ; jmp qword ptr [rax]
0x00000000004b41a7 : test eax, 0xd1cfff5 ; int1 ; xchg ch, dh ; jmp qword ptr [rdx]
0x00000000004b41ef : test eax, 0xd1cfff5 ; leave ; xchg ch, dh ; jmp qword ptr [rdx]
0x00000000004bcc8d : test eax, 0xe8800000 ; cli ; call qword ptr [rax]
0x0000000000401008 : test eax, eax ; je 0x40101c ; mov edi, 0x4b2360 ; call rax
0x000000000040104d : test eax, eax ; je 0x401061 ; mov edi, 0x6bfef0 ; call rax
0x0000000000402827 : test eax, eax ; je 0x40283b ; mov edi, 0x6c2140 ; call rax
0x0000000000402f51 : test eax, eax ; je 0x402f6c ; mov edi, 0x6c2140 ; call rax
0x0000000000403201 : test eax, eax ; je 0x403215 ; mov edi, 0x6c21a0 ; call rax
0x00000000004156c4 : test eax, eax ; je 0x4156ce ; call rax
0x0000000000419293 : test eax, eax ; je 0x41929f ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000433366 : test eax, eax ; je 0x43337a ; mov edi, 0x6c32a0 ; call rax
0x0000000000433492 : test eax, eax ; je 0x4334a6 ; mov edi, 0x6c32a0 ; call rax
0x0000000000434bb8 : test eax, eax ; je 0x434bc3 ; ret
0x0000000000438401 : test eax, eax ; je 0x438415 ; mov edi, 0x6c11e0 ; call rax
0x0000000000438596 : test eax, eax ; je 0x4385a4 ; ret
0x0000000000438a86 : test eax, eax ; je 0x438a99 ; mov eax, 0x6c3fc0 ; ret
0x0000000000442d1f : test eax, eax ; je 0x442d33 ; mov edi, 0x6c32a0 ; call rax
0x0000000000442d44 : test eax, eax ; je 0x442d58 ; mov edi, 0x6c32a0 ; call rax
0x0000000000442e50 : test eax, eax ; je 0x442e5a ; call rax
0x0000000000442eaf : test eax, eax ; je 0x442ec3 ; mov edi, 0x6c32a0 ; call rax
0x0000000000442fb6 : test eax, eax ; je 0x442fca ; mov edi, 0x6c32a0 ; call rax
0x0000000000443130 : test eax, eax ; je 0x44313a ; call rax
0x00000000004431bc : test eax, eax ; je 0x4431d0 ; mov edi, 0x6c32a0 ; call rax
0x000000000044329b : test eax, eax ; je 0x4432b6 ; mov edi, 0x6c32a0 ; call rax
0x0000000000444249 : test eax, eax ; je 0x444253 ; call rax
0x000000000045e74c : test eax, eax ; je 0x45e756 ; call rax
0x000000000045e951 : test eax, eax ; je 0x45e95f ; call rax
0x0000000000463910 : test eax, eax ; je 0x463673 ; call rax
0x00000000004636cb : test eax, eax ; je 0x4636d5 ; call rax
0x0000000000463d04 : test eax, eax ; je 0x463d18 ; mov rdi, qword ptr [rsp + 0x30] ; call rax
0x0000000000464a02 : test eax, eax ; je 0x464a16 ; mov edi, 0x6c11a0 ; call rax
0x000000000046864c : test eax, eax ; je 0x468660 ; mov edi, 0x6c11e0 ; call rax
0x00000000004686d0 : test eax, eax ; je 0x4686e4 ; mov edi, 0x6c11e0 ; call rax
0x0000000000468795 : test eax, eax ; je 0x4687a9 ; mov edi, 0x6c11e0 ; call rax
0x0000000000469ada : test eax, eax ; je 0x469aee ; mov edi, 0x6c11a0 ; call rax
0x0000000000469fdd : test eax, eax ; je 0x469ff1 ; mov edi, 0x6c11e0 ; call rax
0x000000000046b579 : test eax, eax ; je 0x46b54e ; mov edi, 0x6c11e0 ; call rax
0x000000000046b6ca : test eax, eax ; je 0x46b6de ; mov edi, 0x6c11e0 ; call rax
0x0000000000476390 : test eax, eax ; je 0x4763a1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000479f9d : test eax, eax ; je 0x479fb1 ; mov edi, 0x6c11e0 ; call rax
0x000000000047a1b3 : test eax, eax ; je 0x47a1c7 ; mov edi, 0x6c11e0 ; call rax
0x0000000000483dd0 : test eax, eax ; je 0x483de4 ; mov edi, 0x6c11e0 ; call rax
0x0000000000483e7a : test eax, eax ; je 0x483e8e ; mov edi, 0x6c11e0 ; call rax
0x00000000004919f8 : test eax, eax ; je 0x491a0c ; mov edi, 0x6c11a0 ; call rax
0x0000000000491ab9 : test eax, eax ; je 0x491acd ; mov edi, 0x6c11a0 ; call rax
0x000000000040e724 : test eax, eax ; jne 0x40e71d ; ret
0x000000000041bc17 : test eax, eax ; jne 0x41bc77 ; xor rax, rax ; ret
0x000000000043703f : test eax, eax ; jne 0x43703b ; pop rdx ; pop r10 ; ret
0x000000000045af99 : test eax, eax ; jne 0x45af58 ; nop dword ptr [rax] ; ret
0x000000000045f0a1 : test eax, eax ; jne 0x45f10c ; mov rax, r9 ; ret
0x0000000000491176 : test eax, eax ; jne 0x491185 ; pop rbx ; ret
0x0000000000491382 : test eax, eax ; jne 0x491395 ; ret
0x0000000000464fca : test eax, eax ; js 0x464fd5 ; pop rbx ; ret
0x0000000000475abb : test eax, eax ; js 0x475acd ; ret
0x000000000041bb40 : test ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000414a85 : test ebx, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000402770 : test ebx, ebx ; je 0x40278b ; mov edi, 0x6c32a0 ; call rbx
0x000000000043a909 : test ebx, ebx ; jne 0x43a8e5 ; jmp 0x43a8d7
0x0000000000475dd4 : test ebx, ebx ; jne 0x475de8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000491b83 : test ebx, ebx ; jne 0x491b75 ; pop rbx ; ret
0x0000000000491daf : test ebx, ebx ; jne 0x491da6 ; pop rbx ; ret
0x0000000000430d92 : test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000430d9f : test ebx, esp ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x0000000000496275 : test edi, eax ; push qword ptr [rax - 0x79] ; clc ; call qword ptr [rax]
0x000000000048d58e : test edx, eax ; add byte ptr [rax], al ; add cl, ch ; ret 0xfff7
0x0000000000416673 : test edx, edi ; je 0x416686 ; pop rbx ; ret
0x0000000000436efb : test edx, edx ; cmovne eax, edx ; ret
0x00000000004107a6 : test edx, edx ; je 0x4107b0 ; call rdx
0x0000000000419489 : test edx, edx ; je 0x419497 ; bsf eax, edx ; ret
0x0000000000419489 : test edx, edx ; je 0x419498 ; bsf eax, edx ; ret
0x0000000000419532 : test edx, edx ; je 0x419547 ; bsf rax, rdx ; ret
0x0000000000419532 : test edx, edx ; je 0x419548 ; bsf rax, rdx ; ret
0x00000000004194d6 : test edx, edx ; je 0x419558 ; bsf rax, rdx ; ret
0x00000000004597d1 : test edx, edx ; je 0x4597f7 ; bsf rax, rdx ; ret
0x00000000004597d1 : test edx, edx ; je 0x4597f8 ; bsf rax, rdx ; ret
0x000000000045e8d1 : test edx, edx ; je 0x45e8df ; call rdx
0x000000000049304d : test edx, edx ; je 0x49305c ; call rdx
0x000000000040d1af : test edx, edx ; jne 0x40d1a5 ; ret
0x00000000004581ff : test edx, edx ; jne 0x4581f5 ; ret
0x000000000045afda : test edx, edx ; jne 0x45afd5 ; ret
0x0000000000400ecb : test edx, edx ; jns 0x400db2 ; jmp 0x400ea0
0x0000000000430d85 : test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000004427e0 : test esi, esi ; je 0x4427ae ; pop rbx ; ret
0x00000000004596c1 : test esi, esi ; jne 0x4596d0 ; xor rax, rax ; ret
0x0000000000419292 : test r8d, r8d ; je 0x4192a0 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000045af98 : test r8d, r8d ; jne 0x45af59 ; nop dword ptr [rax] ; ret
0x000000000045f0a0 : test r8d, r8d ; jne 0x45f10d ; mov rax, r9 ; ret
0x00000000004156c3 : test rax, rax ; je 0x4156cf ; call rax
0x0000000000434bb7 : test rax, rax ; je 0x434bc4 ; ret
0x0000000000442e4f : test rax, rax ; je 0x442e5b ; call rax
0x000000000044312f : test rax, rax ; je 0x44313b ; call rax
0x0000000000444248 : test rax, rax ; je 0x444254 ; call rax
0x000000000045e74b : test rax, rax ; je 0x45e757 ; call rax
0x000000000045e950 : test rax, rax ; je 0x45e960 ; call rax
0x000000000046390f : test rax, rax ; je 0x463674 ; call rax
0x00000000004636ca : test rax, rax ; je 0x4636d6 ; call rax
0x000000000047638f : test rax, rax ; je 0x4763a2 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040e723 : test rax, rax ; jne 0x40e71e ; ret
0x000000000043a908 : test rbx, rbx ; jne 0x43a8e6 ; jmp 0x43a8d8
0x0000000000475dd3 : test rbx, rbx ; jne 0x475de9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000491b82 : test rbx, rbx ; jne 0x491b76 ; pop rbx ; ret
0x0000000000491dae : test rbx, rbx ; jne 0x491da7 ; pop rbx ; ret
0x0000000000416672 : test rdx, rdi ; je 0x416687 ; pop rbx ; ret
0x00000000004107a5 : test rdx, rdx ; je 0x4107b1 ; call rdx
0x0000000000419531 : test rdx, rdx ; je 0x419548 ; bsf rax, rdx ; ret
0x0000000000419531 : test rdx, rdx ; je 0x419549 ; bsf rax, rdx ; ret
0x00000000004194d5 : test rdx, rdx ; je 0x419559 ; bsf rax, rdx ; ret
0x00000000004597d0 : test rdx, rdx ; je 0x4597f8 ; bsf rax, rdx ; ret
0x00000000004597d0 : test rdx, rdx ; je 0x4597f9 ; bsf rax, rdx ; ret
0x000000000045e8d0 : test rdx, rdx ; je 0x45e8e0 ; call rdx
0x000000000049304c : test rdx, rdx ; je 0x49305d ; call rdx
0x000000000040d1ae : test rdx, rdx ; jne 0x40d1a6 ; ret
0x00000000004581fe : test rdx, rdx ; jne 0x4581f6 ; ret
0x00000000004596c0 : test rsi, rsi ; jne 0x4596d1 ; xor rax, rax ; ret
0x000000000040c5c7 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x0000000000420911 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000045c24a : wait ; add al, 0 ; add byte ptr [rdi + rcx - 0x49], al ; ret 0x8d42
0x00000000004b5acc : wait ; in al, -0xb ; jmp qword ptr [rdx]
0x0000000000464fc6 : xchg ah, bh ; cld ; inc dword ptr [rbp + 0x5b0278c0] ; ret
0x000000000041909f : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041fbbf : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000418c8f : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x000000000041879b : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044440b : xchg al, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x0000000000418fab : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042180c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000042102c : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000042141c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000420c3c : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000489ebd : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004889c1 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000489bc1 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004892c1 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004895c1 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000488cb9 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042071f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041feff : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x0000000000418a1f : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041f6df : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x0000000000418d5f : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x00000000004531c7 : xchg byte ptr [rax - 0x7d], cl ; ret
0x0000000000496684 : xchg byte ptr [rax - 7], cl ; call qword ptr [rsi]
0x000000000041907b : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000420ddb : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041914b : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042023f : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041fa1f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041f1ff : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x00000000004203df : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x0000000000418eff : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004186ef : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x0000000000418aef : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x00000000004212cc : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000420aec : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000463754 : xchg byte ptr [rdi], bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000421bfc : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000418fcf : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000004187bf : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000041f53f : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000418861 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000418bbf : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000488f66 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041f675 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000420375 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000489e66 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000489566 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000489266 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000041fe95 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004211cd : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000488c5e : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000421afd : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000418e2f : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000487cef : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000487b0f : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004884e7 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004b41ad : xchg ch, dh ; jmp qword ptr [rdx]
0x0000000000487407 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000488307 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004963ec : xchg cl, dh ; clc ; call qword ptr [rsi]
0x00000000004206b5 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041f9b5 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000041f4d5 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004201d5 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000042131d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000420b3d : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000418885 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000439cc4 : xchg dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x0000000000473c5e : xchg dword ptr [rbx - 0x77000000], esp ; ret 0x348
0x0000000000411d58 : xchg dword ptr [rbx - 0x9fffffb], ebp ; ret
0x0000000000474f63 : xchg dword ptr [rbx], esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004ac28c : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x000000000048ea02 : xchg dword ptr [rcx + rax - 8], ecx ; jmp rax
0x000000000046e630 : xchg dword ptr [rcx], ebx ; xor al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000473a81 : xchg dword ptr [rdi - 0x77000000], esp ; ret 0x348
0x00000000004b60f6 : xchg dword ptr [rdi], eax ; idiv bh ; sbb al, 0xd ; or ah, bh ; cmc ; jmp qword ptr [rdx]
0x000000000043703d : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x43703d ; pop rdx ; pop r10 ; ret
0x00000000004ac42b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000487048 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x00000000004b5a84 : xchg eax, ebp ; in al, -0xb ; jmp qword ptr [rdx]
0x00000000004726d8 : xchg eax, ebp ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000400739 : xchg eax, ebp ; ret
0x000000000047c25f : xchg eax, ebp ; ret 0x2948
0x0000000000456ce9 : xchg eax, ebp ; ret 0x5389
0x000000000040a333 : xchg eax, ebp ; ret 0x60e9
0x0000000000403e96 : xchg eax, ebp ; ret 0x81e9
0x000000000041292b : xchg eax, ebp ; ret 0x8348
0x000000000040f803 : xchg eax, ebp ; ret 0x8441
0x000000000040aa74 : xchg eax, ebp ; ret 0x8445
0x0000000000413efd : xchg eax, ebp ; ret 0x948
0x0000000000403465 : xchg eax, ebp ; ret 0x953d
0x000000000047720b : xchg eax, ebp ; ret 0xb60f
0x000000000045b6a2 : xchg eax, ebp ; ret 0xc031
0x000000000043782d : xchg eax, ebp ; ret 0xd009
0x0000000000476eb4 : xchg eax, ebp ; ret 0xd138
0x0000000000403b1c : xchg eax, ebp ; ret 0xd284
0x000000000047beaf : xchg eax, ebp ; ret 0xd349
0x000000000045b2ac : xchg eax, ebp ; ret 0xd7e9
0x0000000000408447 : xchg eax, ebp ; ret 0xdaf7
0x000000000047bdf4 : xchg eax, ebp ; ret 0xe083
0x00000000004385d1 : xchg eax, ebp ; ret 0xe1eb
0x000000000045f867 : xchg eax, ebp ; ret 0xe74
0x000000000045b71b : xchg eax, ebp ; ret 0xf748
0x000000000045b118 : xchg eax, ebp ; ret 0xf883
0x00000000004526d4 : xchg eax, ebp ; shr dh, 0xff ; dec dword ptr [rcx + 0x39] ; ret 0x850f
0x000000000046092c : xchg eax, ebx ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000045cabe : xchg eax, ebx ; add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x000000000040d8b2 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000424230 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x000000000045c021 : xchg eax, ebx ; and byte ptr [rsi], 0 ; add rsp, 8 ; ret
0x000000000043021c : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000004259b2 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000040a436 : xchg eax, ebx ; ret 0x3948
0x0000000000444dff : xchg eax, ebx ; ret 0x3949
0x00000000004450e7 : xchg eax, ebx ; ret 0x8348
0x000000000040bd6f : xchg eax, ecx ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000004b4ac9 : xchg eax, ecx ; cmc ; call qword ptr [rdi]
0x00000000004207c1 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000041eeef : xchg eax, ecx ; sub eax, edx ; ret
0x0000000000450f86 : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbx - 0x110f43], al ; call qword ptr [rax]
0x0000000000451772 : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbx - 0x116343], al ; call qword ptr [rax]
0x0000000000496279 : xchg eax, edi ; call qword ptr [rax]
0x000000000043731d : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x0000000000496b85 : xchg eax, edi ; stc ; inc dword ptr [rax] ; cwde ; stc ; call qword ptr [rax]
0x00000000004ac8d8 : xchg eax, edi ; xchg eax, esp ; ret
0x0000000000441de3 : xchg eax, edx ; add al, byte ptr [rax] ; mov rdi, rbx ; call r12
0x00000000004bb585 : xchg eax, edx ; add byte ptr [rax], al ; test al, 0xa ; cli ; jmp rbx
0x00000000004b29e4 : xchg eax, edx ; and al, 0xf5 ; jmp qword ptr [rdx]
0x00000000004b4af9 : xchg eax, edx ; cmc ; call qword ptr [rcx]
0x000000000046ce6a : xchg eax, edx ; idiv edi ; dec ecx ; ret
0x00000000004ae19d : xchg eax, edx ; jae 0x4ae17a ; push rsi ; pop rdx ; je 0x4ae16f ; ret 0xacfc
0x0000000000436df0 : xchg eax, edx ; ret 0x970f
0x0000000000437320 : xchg eax, edx ; ret 0xd029
0x00000000004ac28f : xchg eax, edx ; ret 0xf869
0x000000000049670c : xchg eax, edx ; stc ; jmp qword ptr [rdx]
0x0000000000419297 : xchg eax, edx ; sub eax, edx ; ret
0x0000000000424530 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000429d77 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004245ed : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042454b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000045efbe : xchg eax, esi ; ret 0x394c
0x000000000040f7fc : xchg eax, esi ; ret 0x8348
0x00000000004aeb2c : xchg eax, esi ; ret 0xcd11
0x000000000042459c : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000473a9c : xchg eax, esi ; sar edi, cl ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x00000000004966a8 : xchg eax, esi ; stc ; jmp qword ptr [rsi]
0x00000000004b68f4 : xchg eax, esp ; add byte ptr [r8], r8b ; js 0x4b68e2 ; cmc ; call qword ptr [rcx]
0x00000000004bb775 : xchg eax, esp ; add byte ptr [rax], al ; sub rdi, rdx ; call qword ptr [rdx]
0x00000000004340f8 : xchg eax, esp ; add byte ptr [rax], r8b ; ret
0x000000000041b19f : xchg eax, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000408a01 : xchg eax, esp ; add dword ptr [rax], eax ; mov rdi, r13 ; call 0x414c98
0x000000000044ebe6 : xchg eax, esp ; and al, 0x2c ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004834db : xchg eax, esp ; and al, 0x84 ; sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x000000000043d3be : xchg eax, esp ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000047daa3 : xchg eax, esp ; and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004bdbf4 : xchg eax, esp ; mov eax, 0xdc880000 ; sti ; call qword ptr [rdx]
0x00000000004aed3f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4aecd0 ; ret 0x48f
0x000000000040037f : xchg eax, esp ; ret
0x0000000000411a1b : xchg eax, esp ; ret 0x1589
0x000000000045b611 : xchg eax, esp ; ret 0x2b3c
0x000000000046332a : xchg eax, esp ; ret 0x5385
0x0000000000477141 : xchg eax, esp ; ret 0x543a
0x000000000047708a : xchg eax, esp ; ret 0x5c88
0x00000000004054c3 : xchg eax, esp ; ret 0x70e9
0x00000000004760aa : xchg eax, esp ; ret 0x950f
0x0000000000411c79 : xchg eax, esp ; ret 0xa0e9
0x00000000004023d8 : xchg eax, esp ; ret 0xb60f
0x00000000004013ad : xchg eax, esp ; ret 0xc031
0x000000000045ffe3 : xchg eax, esp ; ret 0xc283
0x00000000004746cf : xchg eax, esp ; ret 0xd189
0x0000000000447346 : xchg eax, esp ; ret 0xd284
0x0000000000475b5e : xchg eax, esp ; ret 0xdaf7
0x000000000045ebff : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x00000000004b4ef4 : xchg eax, esp ; sub eax, dword ptr [rax] ; add byte ptr [rax], bl ; pushfq ; cmc ; jmp qword ptr [rax]
0x000000000045024e : xchg ebp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004b5c7c : xchg edi, esp ; cmc ; jmp qword ptr [rdx]
0x00000000004a4409 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000042588c : xlatb ; add r9, r11 ; jmp r9
0x0000000000433701 : xlatb ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004001c9 : xlatb ; and ch, ah ; int1 ; pop rdx ; ret 0xb50f
0x0000000000416674 : xlatb ; je 0x416685 ; pop rbx ; ret
0x00000000004ad303 : xlatb ; jo 0x4ad37f ; mov ebp, 0xfb67d10d ; ret
0x0000000000446872 : xlatb ; mov byte ptr [rsi], al ; jne 0x446858 ; mov rax, rsi ; ret
0x0000000000416fd9 : xlatb ; ret
0x00000000004194af : xlatb ; ret 0x4166
0x00000000004ae7a6 : xlatb ; ret 0x4e27
0x0000000000459aa7 : xlatb ; ret 0x94c
0x000000000041ba3f : xlatb ; ret 0xc085
0x0000000000416fd0 : xlatb ; ret 0xc148
0x00000000004229c1 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000430d46 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000004184a6 : xlatb ; sal bh, 1 ; ret 0x8000
0x0000000000418366 : xlatb ; sal bh, 1 ; ret 0xc000
0x0000000000418226 : xlatb ; sal bh, 1 ; ret 0xe000
0x00000000004180e6 : xlatb ; sal bh, 1 ; ret 0xf000
0x0000000000417fa6 : xlatb ; sal bh, 1 ; ret 0xf800
0x0000000000417e66 : xlatb ; sal bh, 1 ; ret 0xfc00
0x0000000000417d26 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000417be6 : xlatb ; sal bh, 1 ; ret 0xff00
0x0000000000417aa6 : xlatb ; sal bh, 1 ; ret 0xff80
0x0000000000417966 : xlatb ; sal bh, 1 ; ret 0xffc0
0x0000000000417826 : xlatb ; sal bh, 1 ; ret 0xffe0
0x00000000004176e6 : xlatb ; sal bh, 1 ; ret 0xfff0
0x00000000004175a6 : xlatb ; sal bh, 1 ; ret 0xfff8
0x0000000000417466 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000417326 : xlatb ; sal bh, 1 ; ret 0xfffe
0x0000000000430d42 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000459a45 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000459a56 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000004be6a0 : xor al, 0 ; add byte ptr [rax], al ; ret
0x0000000000414875 : xor al, 0x18 ; pop rbx ; ret
0x00000000004ac28a : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x0000000000414d5c : xor al, 0x24 ; jmp rax
0x0000000000477f84 : xor al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; mov eax, esi ; ret
0x0000000000434158 : xor al, 0x46 ; add byte ptr [rax], al ; ret
0x00000000004ad46a : xor al, 0xd8 ; ret
0x00000000004960f9 : xor al, bh ; call qword ptr [rax]
0x0000000000491bc2 : xor al, bh ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret
0x00000000004960f5 : xor al, bh ; push rax ; xor al, bh ; call qword ptr [rax]
0x000000000046e632 : xor al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004b89d9 : xor bh, al ; jmp rax
0x0000000000496934 : xor bh, byte ptr [rcx] ; stc ; jmp qword ptr [rdx + 0x12fff938]
0x000000000041bc9c : xor bl, al ; nop ; xor rax, rax ; ret
0x000000000041bb5d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x00000000004089a0 : xor byte ptr [rax + 0x29], cl ; ret
0x0000000000481cdc : xor byte ptr [rax + 0x29], cl ; ret 0x2948
0x0000000000491944 : xor byte ptr [rax + 0x39], cl ; ret
0x00000000004b430e : xor byte ptr [rax + 0xd1cfff5], ch ; and al, 0x8b ; cmc ; jmp qword ptr [rdx]
0x0000000000416fff : xor byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000416ee1 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x0000000000496200 : xor byte ptr [rax - 0x567f0008], ch ; clc ; call rax
0x00000000004193af : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000045ae7d : xor byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000456221 : xor byte ptr [rax - 0x77], cl ; ret 0xee83
0x000000000043cfb3 : xor byte ptr [rax - 0x77], cl ; sbb bl, ch ; ret 0x1f0f
0x0000000000440bcd : xor byte ptr [rax - 0x77], cl ; sbb byte ptr [rbx - 0x14d3dbbc], cl ; ret 0x8948
0x000000000043fa95 : xor byte ptr [rax - 0x77], cl ; sbb byte ptr [rbx - 0x14dbdbbc], cl ; ret 0x8948
0x0000000000492703 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rdi + rbx - 0x18] ; ret 0xfff7
0x0000000000490094 : xor byte ptr [rax - 0x7b], cl ; ret 0x840f
0x0000000000472dea : xor byte ptr [rax - 0x7d], cl ; ret
0x0000000000407513 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000043318c : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000458f71 : xor byte ptr [rax], al ; je 0x458f88 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046b231 : xor byte ptr [rax], al ; jne 0x46b248 ; add rsp, 0x48 ; ret
0x0000000000496484 : xor byte ptr [rax], dl ; stc ; call qword ptr [rax]
0x000000000049148b : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004339a3 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004b66f7 : xor byte ptr [rbx + 0xade0206], al ; ret
0x000000000041c7ab : xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x000000000040e16e : xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x00000000004010a6 : xor byte ptr [rbx], al ; add cl, cl ; ret
0x0000000000472adc : xor byte ptr [rcx + 0xf], al ; mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000413148 : xor byte ptr [rcx + rcx*4 + 0x5c], al ; and al, 0x28 ; call rax
0x000000000045ad46 : xor byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000041643c : xor byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000408ae6 : xor byte ptr [rcx - 0x77], cl ; ret 0xb941
0x000000000046e8fb : xor byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x000000000046dcb2 : xor byte ptr [rcx - 0x7d], cl ; ret 0x4401
0x000000000046e55b : xor byte ptr [rcx - 0x7d], cl ; ret 0xe901
0x00000000004b7100 : xor byte ptr [rcx - 0xa], bl ; call qword ptr [rax]
0x00000000004b834c : xor byte ptr [rcx], ah ; clc ; jmp qword ptr [rdx]
0x00000000004242df : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000459a0c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000041bb5e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000004b2f40 : xor byte ptr [rsi - 0xb], al ; call qword ptr [rbx]
0x00000000004bcbb0 : xor byte ptr [rsi - 3], ah ; call rcx
0x0000000000476d9b : xor cl, al ; call 0x490996c6
0x0000000000496afd : xor cl, bh ; call qword ptr [rax - 0x2f0006e6]
0x0000000000476866 : xor cl, byte ptr [rax - 0x77] ; ret 0xc148
0x0000000000411a19 : xor cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x1589
0x000000000047d330 : xor cl, ch ; ret 0xfff0
0x0000000000449a8a : xor dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000041491a : xor dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x0000000000434417 : xor dword ptr [rbx + rax*2], 0 ; ret
0x000000000040f6b8 : xor dword ptr [rbx], ebp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040f61c : xor dword ptr [rbx], ebp ; add byte ptr [rcx], al ; ret
0x000000000040cee7 : xor dword ptr [rdi - 0x3b7cb701], edi ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000045eb20 : xor eax, 0x70c48348 ; pop rbx ; ret
0x000000000047e3a5 : xor eax, 0x8948fff8 ; ret
0x0000000000464104 : xor eax, 0x8b480000 ; mov r9b, r13b ; ret
0x00000000004117a4 : xor eax, 0xba00494b ; ret
0x0000000000407510 : xor eax, dword ptr [0x30] ; call rax
0x00000000004018cf : xor eax, dword ptr [rbx] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000048fd5a : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004160ae : xor eax, eax ; add rsp, 0x18 ; ret
0x000000000046b2d6 : xor eax, eax ; add rsp, 0x58 ; ret
0x000000000046b3af : xor eax, eax ; add rsp, 0x78 ; ret
0x00000000004146e3 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004153d0 : xor eax, eax ; add rsp, 8 ; ret
0x000000000047b424 : xor eax, eax ; call 0x467724
0x0000000000457c17 : xor eax, eax ; call r12
0x0000000000467f09 : xor eax, eax ; cmp rdx, 0xff ; cmovne rax, rdx ; ret
0x0000000000437017 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x000000000045ecde : xor eax, eax ; cmp rsi, rdx ; ja 0x45ecf8 ; ret
0x000000000048dfe3 : xor eax, eax ; jmp 0x48da8e
0x0000000000437440 : xor eax, eax ; leave ; ret
0x000000000040e7c5 : xor eax, eax ; mov qword ptr [rdx + 8], rcx ; ret
0x000000000045afac : xor eax, eax ; nop ; ret
0x000000000040606a : xor eax, eax ; pop r12 ; ret
0x000000000043a7ad : xor eax, eax ; pop r14 ; ret
0x00000000004373bf : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000004460bd : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040772d : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041943c : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000040ad8c : xor eax, eax ; pop rbx ; ret
0x0000000000401700 : xor eax, eax ; ret
0x00000000004241fe : xor eax, eax ; sub eax, ecx ; ret
0x00000000004330e8 : xor eax, eax ; test dh, 0xf0 ; je 0x4330bb ; movzx eax, dl ; pop rbx ; ret
0x0000000000491330 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046c391 : xor ecx, dword ptr [rax + 0x39] ; ret
0x000000000045e49e : xor ecx, ecx ; jmp 0x45e468
0x00000000004396a0 : xor edx, edx ; add eax, 2 ; mov dword ptr [rsp], eax ; call rbx
0x00000000004385cc : xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x4385bc
0x000000000040dd09 : xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000483f33 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000475dfc : xor edx, edx ; pop rbx ; div rbp ; pop rbp ; pop r12 ; ret
0x0000000000467824 : xor edx, edx ; pop rbx ; mov eax, edx ; pop rbp ; ret
0x0000000000414871 : xor esi, edx ; mov byte ptr [rax + rbx], sil ; pop rbx ; ret
0x0000000000403569 : xor esi, esi ; call rax
0x0000000000401815 : xor esi, esi ; mov edi, 1 ; call rax
0x0000000000476029 : xor esi, esi ; mov edi, dword ptr [rip + 0x24d61f] ; jmp rax
0x0000000000435a62 : xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000435a87 : xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000435aab : xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000435acb : xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000435a3d : xor esi, esi ; mov rdi, rbp ; call rbx
0x0000000000434097 : xor esp, 0x46 ; add byte ptr [rax], al ; ret
0x00000000004b9dd4 : xor esp, dword ptr [rbp - 7] ; jmp qword ptr [rdx]
0x0000000000457c16 : xor r8d, r8d ; call r12
0x000000000040750f : xor rax, qword ptr [0x30] ; call rax
0x000000000040750e : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000041bbdf : xor rax, rax ; ret

Unique gadgets found: 8872
