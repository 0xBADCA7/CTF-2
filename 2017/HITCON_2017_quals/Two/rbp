0x00000000000cd23d : adc ah, byte ptr [rcx + rcx*4 + 0x2b] ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000008197d : adc al, 0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; mov dword ptr [rsp + 0x10], eax ; pop r12 ; ret
0x00000000000c9002 : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x98 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001a8f50 : adc al, 0 ; add byte ptr [rax], al ; cld ; cmc ; add byte ptr [rax], al ; push rbp ; jmp qword ptr [rcx]
0x00000000001ae730 : adc al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rbp + 1] ; add byte ptr [rax], ch ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a8f38 : adc al, 0 ; add byte ptr [rax], al ; in al, -0xb ; add byte ptr [rax], al ; xor byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001a8f08 : adc al, 0 ; add byte ptr [rax], al ; mov ah, 0xf5 ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001a8ea8 : adc al, 0 ; add byte ptr [rax], al ; push rsp ; cmc ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001a6ff0 : adc al, 0 ; add byte ptr [rax], al ; pushfq ; salc ; add byte ptr [rax], al ; mov byte ptr [rbp - 0xf], al ; call qword ptr [rsi]
0x0000000000130f5f : adc al, 0x24 ; bswap edx ; mov dword ptr [rax], edx ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000139f3b : adc al, 0x31 ; ror byte ptr [rax - 0x7f], 0xc4 ; add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000088f69 : adc al, 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010b004 : adc al, 0x62 ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000126798 : adc al, 0xac ; idiv bh ; add rsp, 8 ; lea eax, dword ptr [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x00000000000a0e1b : adc al, 0xb8 ; and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003b96a : adc al, 1 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; vpsubsw xmm9, xmm15, xmmword ptr [rbp - 0x8000003] ; ret 0xffef
0x00000000001961e5 : adc al, 1 ; add byte ptr [rdi + rbp - 0xf], al ; call rsp
0x0000000000021dcd : adc al, byte ptr [r8] ; mov rdi, r12 ; mov rcx, qword ptr [rbp - 0x60] ; call rcx
0x000000000009c541 : adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret 0x5a8d
0x000000000009c567 : adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret 0x8d44
0x0000000000021dce : adc al, byte ptr [rax] ; mov rdi, r12 ; mov rcx, qword ptr [rbp - 0x60] ; call rcx
0x00000000000c523a : adc bh, byte ptr [rdi + rbp + 0x48b4800] ; ret 0x8548
0x00000000000cd0ba : adc bl, byte ptr [rbp + 0x448b0004] ; and al, 0xc ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001733d7 : adc byte ptr [r13 + 0x481375c0], al ; add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002c2c4 : adc byte ptr [r8 - 0x73], cl ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001107d1 : adc byte ptr [r8 - 0x77], cl ; imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000129e0d : adc byte ptr [r9 - 0x3a7cb718], cl ; add dword ptr [rcx], edi ; enter -0x4d84, 0x5b ; pop rbp ; pop r12 ; ret
0x0000000000129ea2 : adc byte ptr [r9 - 0x3c7cb726], r9b ; add dword ptr [rcx], edi ; sar byte ptr [rdi - 0x52], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e9713 : adc byte ptr [rax + 0xc], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000076923 : adc byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000130f64 : adc byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000076908 : adc byte ptr [rax + 2], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000102ef6 : adc byte ptr [rax - 0x73], cl ; add eax, 0x2c12f2 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002c2c5 : adc byte ptr [rax - 0x73], cl ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ad45b : adc byte ptr [rax - 0x75], cl ; je 0xad490 ; sbb byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x00000000000ad71b : adc byte ptr [rax - 0x75], cl ; je 0xad750 ; sbb byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbp ; call rbx
0x00000000000ad9fb : adc byte ptr [rax - 0x75], cl ; je 0xada30 ; sbb byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbp ; call rbx
0x000000000008b957 : adc byte ptr [rax - 0x77], cl ; and byte ptr [r8 - 0x77], cl ; jnp 0x8b975 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007fc83 : adc byte ptr [rax - 0x77], cl ; imul ebx, dword ptr [rax], -0x70 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001107d2 : adc byte ptr [rax - 0x77], cl ; imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006bbdf : adc byte ptr [rax - 0x7b], cl ; in eax, dx ; je 0x6bc0f ; add rsp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000001721b1 : adc byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdx + 0x48] ; mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x1721d6 ; call rax
0x00000000001724ca : adc byte ptr [rax - 0x7b], cl ; push qword ptr [rbp - 0xe] ; pop rbx ; ret
0x00000000001724a8 : adc byte ptr [rax - 0x7b], cl ; push qword ptr [rbp - 0xe] ; ret
0x0000000000125d70 : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rbp*2 + 0x48], 0x39 ; ret 0x5576
0x0000000000076425 : adc byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c381a : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x000000000012e665 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000744f8 : adc byte ptr [rbp + 0x15], dh ; sub rdx, qword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x000000000008191a : adc byte ptr [rbp + 0x39], cl ; ret
0x00000000001733d8 : adc byte ptr [rbp + 0x481375c0], al ; add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000130dca : adc byte ptr [rbp + 0x485175c0], al ; add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a601f : adc byte ptr [rbp + rcx*4 + 0x1d], cl ; and edi, edi ; or eax, 0xc634900 ; xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a90ff : adc byte ptr [rbp + rcx*4 + 0x1d], cl ; std ; ror dword ptr [rip + 0xc634900], 1 ; xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000048995 : adc byte ptr [rbp + rcx*4 + 0x34], cl ; ret 0x8d4a
0x0000000000029869 : adc byte ptr [rbp + rcx*4 - 0x7c], cl ; and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000001309f4 : adc byte ptr [rbp - 0x117bf040], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x00000000001a1460 : adc byte ptr [rbp - 0x13], bh ; call rsi
0x000000000013afb9 : adc byte ptr [rbp - 0x14], dh ; mov eax, dword ptr [rax + 0x20] ; test eax, eax ; je 0x13afde ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000aef42 : adc byte ptr [rbp - 0x57c2fa9], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000019411c : adc byte ptr [rbp - 0x6b6f0004], dl ; cld ; inc dword ptr [rax] ; xchg eax, esp ; cld ; push qword ptr [rax - 0x6d] ; cld ; jmp rax
0x0000000000127f47 : adc byte ptr [rbp - 0x7b], al ; in al, 0x74 ; and edi, dword ptr [rcx] ; ret
0x0000000000104197 : adc byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x00000000001aafc0 : adc byte ptr [rbp - 0xc], bh ; jmp rdi
0x0000000000116e32 : adc byte ptr [rbp - 0xcf68a40], al ; ret
0x00000000000aca02 : adc byte ptr [rbp - 0xd], dh ; ret
0x0000000000193e80 : adc byte ptr [rbp - 4], dl ; call qword ptr [rax + 0x10fffc56]
0x000000000002219f : adc byte ptr [rbx + 0x480c2444], cl ; add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001ac203 : adc byte ptr [rbx + 0xe], ah ; or byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rax + rbp + 0xbb00001], dh ; cmc ; jmp rcx
0x00000000000bcdcf : adc byte ptr [rbx - 0x48], bl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008b530 : adc byte ptr [rbx - 0x48], bl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000116fc6 : adc byte ptr [rbx - 0x7d], bl ; loopne 0x116fdf ; pop rbp ; pop r12 ; ret
0x00000000001176ca : adc byte ptr [rcx + rbx + 0x48], dh ; add esp, 8 ; xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000c9ae9 : adc byte ptr [rcx + rcx*4 - 0x10], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001071c3 : adc byte ptr [rcx + rcx*4 - 0x18], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000088e4b : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000000888bb : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000129e0e : adc byte ptr [rcx - 0x3a7cb718], cl ; add dword ptr [rcx], edi ; enter -0x4d84, 0x5b ; pop rbp ; pop r12 ; ret
0x0000000000129ea3 : adc byte ptr [rcx - 0x3c7cb726], cl ; add dword ptr [rcx], edi ; sar byte ptr [rdi - 0x52], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001265fd : adc byte ptr [rcx - 0x78], al ; sbb al, byte ptr [rbp - 0x78] ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4c02
0x00000000000ba734 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ba83f : adc byte ptr [rdi + rdx*8 + 0x48], dh ; add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001489f1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x00000000001ada9b : adc byte ptr [rdx + rax - 0x79e7f1bc], cl ; add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rsp + rbp*2], 0xa ; ret
0x000000000009c58d : adc byte ptr [rdx], 0 ; add byte ptr [rbp - 0x77], cl ; ret 0x5a8d
0x000000000004a992 : adc byte ptr [rsp + rbp*4 + 0x49], dh ; sub eax, 4 ; cmp rdi, r8 ; jbe 0x4a9a0 ; nop ; pop rbx ; ret
0x0000000000193e54 : adc byte ptr [rsp + rdi*8 - 1], bl ; nop ; pop rbp ; cld ; call qword ptr [rax]
0x0000000000102efb : adc ch, byte ptr [rax + rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cfd8a : adc cl, byte ptr [rbp + rcx*4 + 0x48] ; adc ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x00000000000f7136 : adc dword ptr [rax + 9], edi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a86e : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x000000000011708b : adc dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp - 0x11], cl ; ret
0x000000000009c628 : adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; ret 0x5a8d
0x000000000009c64e : adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; ret 0x8d44
0x000000000002d9cc : adc dword ptr [rbp + 0x230a74d2], eax ; ja 0x2d9f4 ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000002da17 : adc dword ptr [rbp + 0x23d474d2], eax ; ja 0x2da3e ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x00000000000f9963 : adc dword ptr [rbp + 0x2c], esi ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000098d6a : adc dword ptr [rbp + 0x38], eax ; ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x00000000001821b7 : adc dword ptr [rbp - 0x1f57cada], ebp ; sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000109263 : adc dword ptr [rbx + rbp], edi ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109a63 : adc dword ptr [rbx + rbp], esi ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000003b3e2 : adc dword ptr [rbx], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000035603 : adc dword ptr [rcx], edi ; add byte ptr [rbp - 0xcf98a40], al ; ret
0x000000000010e416 : adc dword ptr [rcx], esi ; rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000009c6e7 : adc dword ptr cs:[rax], eax ; add byte ptr [rbp - 0x77], cl ; ret 0x8d44
0x0000000000102ef2 : adc eax, 0x10c48348 ; lea rax, qword ptr [rip + 0x2c12f2] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013d202 : adc eax, 0x2175db85 ; add rsp, 8 ; mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000010af8f : adc eax, 0x2b628c ; je 0x10afa0 ; pop rbp ; ret
0x00000000001192ea : adc eax, 0x2b89d509 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000001fa3c : adc eax, 0x3a68c7 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000abcda : adc eax, 0x3b30478b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x0000000000121aa0 : adc eax, 0x6727b ; mov eax, dword ptr [rdx + rax*8 + 4] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007b7da : adc eax, 0x6b890000 ; jo 0x7b835 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000132b9a : adc eax, 0x8c48348 ; mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000013d7ea : adc eax, 0xb82b8840 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000fe422 : adc eax, dword ptr [rbp + 0x5bcf74d2] ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000048896 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00000000000a04a8 : adc eax, esi ; add byte ptr [rax], al ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000fa5fb : adc ecx, dword ptr [rax - 0x77] ; fucompi st(0) ; sub al, 0x34 ; stc ; dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x000000000007deda : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x00000000000db19a : adc ecx, dword ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x40], cl ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000071d89 : adc ecx, dword ptr [rcx + rcx*4 - 0x19] ; mov rax, rdi ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000117085 : adc ecx, dword ptr [rcx - 0x77] ; ror dword ptr [rcx - 0x75], 1 ; adc dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp - 0x11], cl ; ret
0x000000000007def1 : adc edi, dword ptr [rax + 1] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000038f5 : adc edx, dword ptr [rbp - 0x5d] ; leave ; pop rdi ; ja 0x3961 ; clc ; salc ; jb 0x3987 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000018355e : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x000000000009c6c1 : adc qword ptr [rax], r8 ; add byte ptr [rbp - 0x77], cl ; ret 0x5a8d
0x0000000000048895 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000001a8f3b : add ah, ah ; cmc ; add byte ptr [rax], al ; xor byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001a8f53 : add ah, bh ; cmc ; add byte ptr [rax], al ; push rbp ; jmp qword ptr [rcx]
0x00000000001a8f23 : add ah, cl ; cmc ; add byte ptr [rax], al ; sbb byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001366c5 : add al, 0 ; add al, ch ; mov bl, 0x92 ; out dx, al ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x000000000012f193 : add al, 0 ; add byte ptr [rax], al ; mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000003a4e9 : add al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d96bc : add al, 0 ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000000ffdcf : add al, 0 ; add byte ptr [rcx + rcx*4 - 0x10], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013f73b : add al, 0 ; add byte ptr [rcx + rcx*4 - 8], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000204a3 : add al, 0 ; add byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7b], r9b ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000008bb22 : add al, 0 ; add byte ptr [rdi + rax*8], ah ; or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c8e5e : add al, 0 ; add rsp, 0x80 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000cd0bc : add al, 0 ; mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cd1b3 : add al, 0 ; mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007214b : add al, 0x23 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000009841c : add al, 0x24 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000004a7aa : add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cd251 : add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000070461 : add al, 0x24 ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dcfca : add al, 0x24 ; add rsp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008a18a : add al, 0x24 ; je 0x8a26e ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000008aeac : add al, 0x24 ; je 0x8af9e ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x00000000000f1023 : add al, 0x24 ; je 0xf1005 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013bae2 : add al, 0x24 ; mov qword ptr [rbx + 8], rax ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ac733 : add al, 0x24 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008a1a3 : add al, 0x24 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003a872 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x00000000001267a1 : add al, 0x2b ; pop rbx ; pop rbp ; ret
0x000000000013a5b8 : add al, 0x2c ; add byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e0a8d : add al, 0x31 ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000001995a8 : add al, 0x35 ; sti ; lcall ptr [rsi + rax + 2] ; add byte ptr [rbp + rsi - 5], dh ; jmp rsp
0x00000000001986a8 : add al, 0x39 ; stc ; inc dword ptr [rbp + rsi*8 + 0x45740001] ; stc ; call rsp
0x00000000000b0a2b : add al, 0x41 ; mov edi, dword ptr [rbp] ; mov rsi, r12 ; call 0x10ccba
0x0000000000127aac : add al, 0x48 ; add edx, 1 ; syscall ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000c83e7 : add al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dbd80 : add al, 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e2e84 : add al, 0x48 ; add esp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000aaa83 : add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000121aa8 : add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f7048 : add al, 0x48 ; add esp, 8 ; xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000071835 : add al, 0x48 ; mov dword ptr [rax + 0x20], ecx ; mov dword ptr [rdx], ebx ; add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000735db : add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000044f9f : add al, 0x48 ; mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000131a18 : add al, 0x48 ; mov dword ptr [rbx + 0x20], eax ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000063e50 : add al, 0x48 ; mov dword ptr [rbx], edx ; mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000073408 : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000ac730 : add al, 0x49 ; mov dword ptr [rsp], eax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c92e4 : add al, 0x4d ; mov dword ptr [rbp], esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000195898 : add al, 0x62 ; out dx, al ; push qword ptr [rbp + rdx*8 + 0x62640000] ; out dx, al ; call rsp
0x00000000001a145c : add al, 0x7b ; add byte ptr [rax], al ; adc byte ptr [rbp - 0x13], bh ; call rsi
0x000000000013b605 : add al, 0x7e ; cmp byte ptr [rcx - 0x75], al ; push rbp ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e4c52 : add al, 0x82 ; mov rbp, rsi ; mov qword ptr [rsp + 0x28], rdi ; add rax, rdx ; jmp rax
0x00000000000ba731 : add al, 0x83 ; adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000098bd0 : add al, 0x84 ; sal byte ptr [rbp + 0x3a], 0x41 ; movzx eax, byte ptr [rcx] ; test al, al ; jne 0x98c50 ; mov rax, rdi ; ret
0x000000000005164e : add al, 0x84 ; sal byte ptr [rbp + 0x73], 0xf6 ; ret 0x7440
0x00000000000d2639 : add al, 0x85 ; sal byte ptr [rbp - 0x18], cl ; nop ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000adb69 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x00000000000ac6c8 : add al, 0x8b ; or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x00000000001a5cba : add al, 0x8c ; add ecx, dword ptr [rbp + 0x4c0002] ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x00000000000403c3 : add al, 0x92 ; mov rdx, rbp ; xor ebp, ebp ; add rax, rax ; sub rdx, rax ; jmp 0x40412
0x0000000000050a9c : add al, 0xd1 ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000131403 : add al, 0xf ; enter 0x289, -0x77 ; fiadd dword ptr [rcx - 1] ; push rbp ; adc byte ptr [rcx], bh ; ret
0x00000000001255b3 : add al, 0xf ; test dword ptr [rbp - 0x7afffffe], ecx ; sal byte ptr [rsp + rcx - 0xa], cl ; ret 0xc602
0x0000000000130526 : add al, 0xf ; test ebx, esp ; add dword ptr [rax], eax ; add byte ptr [rbp + 0xf1374d2], al ; mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x000000000002b46f : add al, 0xf0 ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d6bbf : add al, 1 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000126945 : add al, byte ptr [r8] ; mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001995a6 : add al, byte ptr [rax] ; add al, 0x35 ; sti ; lcall ptr [rsi + rax + 2] ; add byte ptr [rbp + rsi - 5], dh ; jmp rsp
0x0000000000033ea6 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010aeda : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000102307 : add al, byte ptr [rax] ; add byte ptr [rax], al ; cmp rax, rdx ; mov edx, ebx ; cmovne rbp, rax ; call 0xfe61f
0x0000000000103d75 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rbx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; jmp rax
0x000000000010b015 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000007690a : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000769dc : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003a308 : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001148cb : add al, byte ptr [rax] ; add byte ptr [rbp + 0x2f], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ae1fc : add al, byte ptr [rax] ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x63] ; ret
0x000000000006bc5c : add al, byte ptr [rax] ; add byte ptr [rbp + 0x480d75c0], al ; mov eax, ebx ; pop rbx ; ret
0x0000000000143917 : add al, byte ptr [rax] ; add byte ptr [rbp + 0x483278c0], al ; mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x0000000000118058 : add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0x564bc] ; ret
0x0000000000117f98 : add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0x5659c] ; ret
0x0000000000117ed8 : add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0x5665c] ; ret
0x000000000009665f : add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0xd7ee5] ; ret
0x000000000009199f : add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0xdcb85] ; ret
0x00000000000912ef : add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0xdd255] ; ret
0x000000000008de64 : add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x10] ; ret
0x0000000000118154 : add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x56960] ; ret
0x0000000000091c04 : add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x80] ; ret
0x000000000008c008 : add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xc] ; ret
0x0000000000091c67 : add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xd] ; ret
0x00000000000917d7 : add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xdd2ed] ; ret
0x0000000000090e6e : add al, byte ptr [rax] ; add byte ptr [rbp + 8], dh ; lea rax, qword ptr [rip + 0x26] ; ret
0x00000000000ac91e : add al, byte ptr [rax] ; add byte ptr [rbp + 8], dh ; lea rax, qword ptr [rip + 0xec76] ; ret
0x00000000000abd4e : add al, byte ptr [rax] ; add byte ptr [rbp + 8], dh ; lea rax, qword ptr [rip + 0xf8f6] ; ret
0x000000000011807f : add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0x386b5] ; ret
0x0000000000117fbf : add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0x38795] ; ret
0x0000000000117eff : add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0x38855] ; ret
0x0000000000096686 : add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0xba0de] ; ret
0x00000000000919c6 : add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0xbed7e] ; ret
0x0000000000091316 : add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0xbf44e] ; ret
0x0000000000025d98 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x3d77f02e], al ; add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x00000000000ae1f4 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x547bf037], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x63] ; ret
0x0000000000084b8c : add al, byte ptr [rax] ; add byte ptr [rbp - 0x77cfdb9], cl ; add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x00000000001255b7 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x9f38b2e], al ; ret 0xc602
0x000000000010e8c4 : add al, byte ptr [rax] ; add byte ptr [rbp - 1], bh ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011a9c8 : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000144e41 : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 8], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e9c55 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; push rbp ; or byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 + 0x63], r9b ; ret
0x000000000009133d : add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip + 0x107] ; ret
0x00000000000966ad : add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip - 0x5269] ; ret
0x00000000000919ed : add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip - 0x5c9] ; ret
0x0000000000117f26 : add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip - 0x86af2] ; ret
0x0000000000117fe6 : add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip - 0x86bb2] ; ret
0x00000000001180a6 : add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip - 0x86c92] ; ret
0x0000000000139f85 : add al, byte ptr [rax] ; add rsp, 0x100 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000126946 : add al, byte ptr [rax] ; mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011f8f9 : add al, byte ptr [rax] ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009aa58 : add al, byte ptr [rbp + 0x38] ; ret
0x00000000000d8f79 : add al, byte ptr [rbp - 0x77] ; xor byte ptr [rcx + 0x63], cl ; add r9b, r13b ; ret
0x00000000001a02d5 : add al, byte ptr [rcx + 0xe] ; sbb byte ptr [rsi + 0x200e4103], al ; add dword ptr [rax + rbp*2], 0xa ; ret
0x000000000012a17d : add al, byte ptr [rcx - 0x77] ; insb byte ptr [rdi], dx ; and al, 0x40 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000113245 : add al, byte ptr [rcx - 1] ; push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x0000000000103348 : add al, byte ptr [rcx] ; pop rbp ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000001366c7 : add al, ch ; mov bl, 0x92 ; out dx, al ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000124707 : add al, ch ; movsxd rcx, ecx ; idiv edi ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013ab81 : add al, ch ; stc ; out dx, al ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + rax*4 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x0000000000080be4 : add al, ch ; xchg byte ptr [rax], ah ; or byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000005a101 : add bh, al ; test dword ptr [rdi + rbp*8 - 1], ecx ; call qword ptr [rax]
0x000000000013e891 : add bh, byte ptr [rax + 1] ; jne 0x13e876 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011751f : add bh, byte ptr [rax - 1] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001801e0 : add bh, byte ptr [rbx + rbp*8] ; inc esi ; xor eax, 0x3b57ffeb ; jmp 0x1801f6
0x00000000001801f4 : add bh, byte ptr [rbx + rbp*8] ; jmp rcx
0x0000000000102af8 : add bh, byte ptr [rdi + 0x3d] ; add rsp, 0x90 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000001fb7f : add bh, dh ; fsub dword ptr [rcx + rcx*4 + 2] ; mov rax, rbp ; cmp r9, rax ; je 0x1fb38 ; jmp 0x1fb61
0x00000000000bdc54 : add bl, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001b051d : add bl, byte ptr [rbp + 0xa] ; ret
0x00000000000f2082 : add byte ptr [r8 - 0x7b], r9b ; sal byte ptr [rsi + rbp + 0x48], 0x83 ; call 0xffffffffc298689e
0x0000000000115a04 : add byte ptr [r8], 0 ; add byte ptr [rax], al ; mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x0000000000135ecf : add byte ptr [r8], r8b ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fa40 : add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x00000000000fb267 : add byte ptr [rax + 0xa], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000dfc87 : add byte ptr [rax + 0xc], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000da734 : add byte ptr [rax + 0xf], al ; mov dh, 0xed ; movsxd rax, dword ptr [rsi + rbp*4] ; add rax, rsi ; jmp rax
0x00000000000ba7bc : add byte ptr [rax + 1], bh ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006f8b6 : add byte ptr [rax + 1], bh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000132535 : add byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013a12e : add byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013a5ba : add byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079281 : add byte ptr [rax + 1], cl ; imul ebx, dword ptr [rax], 0x4c ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001aafb7 : add byte ptr [rax + rax + 0x16640000], dl ; add dword ptr [rax], eax ; adc byte ptr [rbp - 0xc], bh ; jmp rdi
0x00000000001ac207 : add byte ptr [rax + rax], al ; add byte ptr [rax + rbp + 0xbb00001], dh ; cmc ; jmp rcx
0x000000000003a4e8 : add byte ptr [rax + rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ffdce : add byte ptr [rax + rax], al ; add byte ptr [rcx + rcx*4 - 0x10], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000795d9 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001a908f : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; cmp al, 0xf7 ; add byte ptr [rax], al ; pop rax ; pop rbp ; jmp rcx
0x0000000000088d7b : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; add rsp, 0x10 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000122f39 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; add rsp, 0x18 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000110589 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000089e0e : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008bb27 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001a1457 : add byte ptr [rax + rax], cl ; add byte ptr [rbx + rdi*2], al ; add byte ptr [rax], al ; adc byte ptr [rbp - 0x13], bh ; call rsi
0x00000000001a11c7 : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; mov ah, 0x25 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x13], dh ; jmp qword ptr [rcx]
0x00000000000c9001 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; add rsp, 0x98 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001a8f4f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; cmc ; add byte ptr [rax], al ; push rbp ; jmp qword ptr [rcx]
0x00000000001ae72f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; fmul qword ptr [rbp + 1] ; add byte ptr [rax], ch ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a8f37 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, -0xb ; add byte ptr [rax], al ; xor byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001a8f07 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov ah, 0xf5 ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001a8ea7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; cmc ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001a6fef : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; salc ; add byte ptr [rax], al ; mov byte ptr [rbp - 0xf], al ; call qword ptr [rsi]
0x00000000001ac20b : add byte ptr [rax + rbp + 0xbb00001], dh ; cmc ; jmp rcx
0x0000000000194b1f : add byte ptr [rax + rbp - 0x16], dl ; jmp rsp
0x00000000000ac625 : add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x0000000000195027 : add byte ptr [rax + rbp*2 - 0x15], ah ; call rsp
0x0000000000198df7 : add byte ptr [rax + rbp*2], ah ; cli ; jmp rsp
0x000000000019710f : add byte ptr [rax + rbp*2], ah ; idiv bh ; movsb byte ptr [rdi], byte ptr [rsi] ; jnp 0x197124 ; add byte ptr [rbp + rbp*2 - 0xa], dh ; call rsp
0x0000000000196ca7 : add byte ptr [rax + rbp*2], dh ; cmc ; call rsp
0x00000000001a4163 : add byte ptr [rax + rbp*4], cl ; add byte ptr [rax], al ; clc ; xchg eax, edx ; out dx, al ; call qword ptr [rax]
0x00000000001a41ab : add byte ptr [rax + rbp*4], dl ; add al, ah ; xchg eax, ebx ; out dx, al ; jmp qword ptr [rdx]
0x000000000010b000 : add byte ptr [rax - 0x39], cl ; add eax, 0x2b6214 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000100e50 : add byte ptr [rax - 0x73], cl ; add eax, 0x2c32a8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000022b6f : add byte ptr [rax - 0x73], cl ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000074133 : add byte ptr [rax - 0x73], cl ; test al, 0x28 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000135ff6 : add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000102eb6 : add byte ptr [rax - 0x75], cl ; add eax, 0x2bf8ca ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bd494 : add byte ptr [rax - 0x75], cl ; add eax, 0x30903c ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000109d34 : add byte ptr [rax - 0x75], cl ; and al, 8 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000136db0 : add byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000007ee9e : add byte ptr [rax - 0x75], cl ; push rax ; or byte ptr [rbp + 0xb], dh ; sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000088477 : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x68 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000073494 : add byte ptr [rax - 0x75], cl ; sbb byte ptr [r9 + rcx*4 - 0x1a], r8b ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000007a03f : add byte ptr [rax - 0x75], cl ; sub byte ptr [r8 - 0x75], r9b ; push rdi ; and byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x00000000000d97ff : add byte ptr [rax - 0x75], cl ; test dword ptr [rax - 0x74000002], esp ; cmp byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000001046a7 : add byte ptr [rax - 0x75], cl ; xor byte ptr [rax - 0x75], cl ; jge 0x10467e ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000001fa39 : add byte ptr [rax - 0x77], cl ; adc eax, 0x3a68c7 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000103d78 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, ebp ; pop rbp ; pop r12 ; jmp rax
0x00000000000dfca7 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; sal byte ptr [rdx - 1], 0xff ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000060ed0 : add byte ptr [rax - 0x77], cl ; jp 0x60eed ; mov rsi, qword ptr [rbp - 0x660] ; xor edx, edx ; jmp 0x5d0fe
0x000000000010ff01 : add byte ptr [rax - 0x77], cl ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013595c : add byte ptr [rax - 0x77], cl ; push r8 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116289 : add byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000115a09 : add byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov rdx, r13 ; call rax
0x000000000008dbcf : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x0000000000044f9a : add byte ptr [rax - 0x7b], cl ; in eax, dx ; je 0x44fb4 ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000004501a : add byte ptr [rax - 0x7b], cl ; in eax, dx ; je 0x45034 ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000450c8 : add byte ptr [rax - 0x7b], cl ; in eax, dx ; je 0x450e2 ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b650b : add byte ptr [rax - 0x7b], cl ; in eax, dx ; je 0xb6525 ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b65b9 : add byte ptr [rax - 0x7b], cl ; in eax, dx ; je 0xb65d3 ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b665b : add byte ptr [rax - 0x7b], cl ; in eax, dx ; je 0xb6675 ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007413a : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000114ead : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rbx + 0x48], 0x8b ; jp 0x114f14 ; mov rsi, rdx ; call rax
0x000000000013b7f3 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], 0x5b ; ret
0x00000000000ff6ae : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x2c], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000ff87f : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x2d], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000f2083 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rbp + 0x48], 0x83 ; call 0xffffffffc298689d
0x00000000000ac72c : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x89 ; add al, 0x24 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004748f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x80 ; js 0x474a5 ; add byte ptr [rbp - 0xa], dh ; pop rbx ; ret
0x000000000007354f : add byte ptr [rax - 1], bh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000fa3da : add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000036f62 : add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000029b4f : add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011b408 : add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000135ff3 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013d87b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000114b43 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add rsp, 8 ; mov eax, 7 ; pop rbx ; pop rbp ; ret
0x00000000000dfc83 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, 0xc ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000115a05 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x0000000000104643 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000088473 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rdx, qword ptr [rsp + 0x68] ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000001300ab : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006dd64 : add byte ptr [rax], 0 ; add byte ptr [rbp - 0x76ba7ffc], cl ; ret 0x2945
0x0000000000071ec6 : add byte ptr [rax], 0 ; add byte ptr [rbx + 0x44], bl ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006edf7 : add byte ptr [rax], 0 ; add byte ptr [rbx + 0x48], bl ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000070d8b : add byte ptr [rax], 0 ; add byte ptr [rbx + 0x48], bl ; mov eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000047ee5 : add byte ptr [rax], 0 ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000000808f8 : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x40], cl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ffbed : add byte ptr [rax], 0 ; lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000001a8f4e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; cmc ; add byte ptr [rax], al ; push rbp ; jmp qword ptr [rcx]
0x00000000001ae72e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rbp + 1] ; add byte ptr [rax], ch ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a8f36 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, -0xb ; add byte ptr [rax], al ; xor byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001a8f06 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov ah, 0xf5 ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001a8ea6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; cmc ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001a6fee : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pushfq ; salc ; add byte ptr [rax], al ; mov byte ptr [rbp - 0xf], al ; call qword ptr [rsi]
0x00000000001a145e : add byte ptr [rax], al ; adc byte ptr [rbp - 0x13], bh ; call rsi
0x00000000001a8f39 : add byte ptr [rax], al ; add ah, ah ; cmc ; add byte ptr [rax], al ; xor byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001a8f51 : add byte ptr [rax], al ; add ah, bh ; cmc ; add byte ptr [rax], al ; push rbp ; jmp qword ptr [rcx]
0x00000000001a8f21 : add byte ptr [rax], al ; add ah, cl ; cmc ; add byte ptr [rax], al ; sbb byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x0000000000195896 : add byte ptr [rax], al ; add al, 0x62 ; out dx, al ; push qword ptr [rbp + rdx*8 + 0x62640000] ; out dx, al ; call rsp
0x00000000001a145a : add byte ptr [rax], al ; add al, 0x7b ; add byte ptr [rax], al ; adc byte ptr [rbp - 0x13], bh ; call rsi
0x0000000000118056 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0x564bc] ; ret
0x0000000000117f96 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0x5659c] ; ret
0x0000000000117ed6 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0x5665c] ; ret
0x000000000009665d : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0xd7ee5] ; ret
0x000000000009199d : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0xdcb85] ; ret
0x00000000000912ed : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0xdd255] ; ret
0x000000000008de62 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x10] ; ret
0x0000000000118152 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x56960] ; ret
0x0000000000091c02 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x80] ; ret
0x000000000008c006 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xc] ; ret
0x0000000000091c65 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xd] ; ret
0x00000000000917d5 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xdd2ed] ; ret
0x0000000000090e6c : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 8], dh ; lea rax, qword ptr [rip + 0x26] ; ret
0x00000000000ac91c : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 8], dh ; lea rax, qword ptr [rip + 0xec76] ; ret
0x00000000000abd4c : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 8], dh ; lea rax, qword ptr [rip + 0xf8f6] ; ret
0x000000000011807d : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0x386b5] ; ret
0x0000000000117fbd : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0x38795] ; ret
0x0000000000117efd : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0x38855] ; ret
0x0000000000096684 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0xba0de] ; ret
0x00000000000919c4 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0xbed7e] ; ret
0x0000000000091314 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0xbf44e] ; ret
0x000000000009133b : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip + 0x107] ; ret
0x00000000000966ab : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip - 0x5269] ; ret
0x00000000000919eb : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip - 0x5c9] ; ret
0x0000000000117f24 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip - 0x86af2] ; ret
0x0000000000117fe4 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip - 0x86bb2] ; ret
0x00000000001180a4 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip - 0x86c92] ; ret
0x0000000000113243 : add byte ptr [rax], al ; add al, byte ptr [rcx - 1] ; push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x0000000000124705 : add byte ptr [rax], al ; add al, ch ; movsxd rcx, ecx ; idiv edi ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005a0ff : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rbp*8 - 1], ecx ; call qword ptr [rax]
0x00000000000fb265 : add byte ptr [rax], al ; add byte ptr [rax + 0xa], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000dfc85 : add byte ptr [rax], al ; add byte ptr [rax + 0xc], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013a12c : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001a908d : add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; cmp al, 0xf7 ; add byte ptr [rax], al ; pop rax ; pop rbp ; jmp rcx
0x00000000001a1455 : add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add byte ptr [rbx + rdi*2], al ; add byte ptr [rax], al ; adc byte ptr [rbp - 0x13], bh ; call rsi
0x00000000001a11c5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; mov ah, 0x25 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x13], dh ; jmp qword ptr [rcx]
0x00000000001a8f4d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; cmc ; add byte ptr [rax], al ; push rbp ; jmp qword ptr [rcx]
0x00000000001ae72d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; fmul qword ptr [rbp + 1] ; add byte ptr [rax], ch ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a8f35 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, -0xb ; add byte ptr [rax], al ; xor byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001a8f05 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov ah, 0xf5 ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001a8ea5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; cmc ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001a6fed : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; salc ; add byte ptr [rax], al ; mov byte ptr [rbp - 0xf], al ; call qword ptr [rsi]
0x00000000001ac209 : add byte ptr [rax], al ; add byte ptr [rax + rbp + 0xbb00001], dh ; cmc ; jmp rcx
0x00000000000ac623 : add byte ptr [rax], al ; add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000001a4161 : add byte ptr [rax], al ; add byte ptr [rax + rbp*4], cl ; add byte ptr [rax], al ; clc ; xchg eax, edx ; out dx, al ; call qword ptr [rax]
0x00000000001a41a9 : add byte ptr [rax], al ; add byte ptr [rax + rbp*4], dl ; add al, ah ; xchg eax, ebx ; out dx, al ; jmp qword ptr [rdx]
0x000000000010affe : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; add eax, 0x2b6214 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000100e4e : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add eax, 0x2c32a8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000135ff4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000bd492 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x30903c ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000136dae : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x0000000000088475 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x68 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000007a03d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sub byte ptr [r8 - 0x75], r9b ; push rdi ; and byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x0000000000103d76 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, ebp ; pop rbp ; pop r12 ; jmp rax
0x000000000013595a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; push r8 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116287 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000115a07 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov rdx, r13 ; call rax
0x000000000013b7f1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], 0x5b ; ret
0x000000000004748d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x80 ; js 0x474a7 ; add byte ptr [rbp - 0xa], dh ; pop rbx ; ret
0x000000000007354d : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000fa3d8 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000036f60 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000029b4d : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011b406 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00000000001a8f4c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; cmc ; add byte ptr [rax], al ; push rbp ; jmp qword ptr [rcx]
0x00000000001ae72c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rbp + 1] ; add byte ptr [rax], ch ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a8f34 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, -0xb ; add byte ptr [rax], al ; xor byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001a8f04 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov ah, 0xf5 ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001a8ea4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; cmc ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x0000000000118054 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0x564bc] ; ret
0x0000000000117f94 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0x5659c] ; ret
0x0000000000117ed4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0x5665c] ; ret
0x000000000009665b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0xd7ee5] ; ret
0x000000000009199b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0xdcb85] ; ret
0x00000000000912eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0xdd255] ; ret
0x000000000008de60 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x10] ; ret
0x0000000000118150 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x56960] ; ret
0x0000000000091c00 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x80] ; ret
0x000000000008c004 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xc] ; ret
0x0000000000091c63 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xd] ; ret
0x00000000000917d3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xdd2ed] ; ret
0x0000000000090e6a : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 8], dh ; lea rax, qword ptr [rip + 0x26] ; ret
0x00000000000ac91a : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 8], dh ; lea rax, qword ptr [rip + 0xec76] ; ret
0x00000000000abd4a : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 8], dh ; lea rax, qword ptr [rip + 0xf8f6] ; ret
0x000000000011807b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0x386b5] ; ret
0x0000000000117fbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0x38795] ; ret
0x0000000000117efb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0x38855] ; ret
0x0000000000096682 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0xba0de] ; ret
0x00000000000919c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0xbed7e] ; ret
0x0000000000091312 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0xbf44e] ; ret
0x0000000000091339 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip + 0x107] ; ret
0x00000000000966a9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip - 0x5269] ; ret
0x00000000000919e9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip - 0x5c9] ; ret
0x0000000000117f22 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip - 0x86af2] ; ret
0x0000000000117fe2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip - 0x86bb2] ; ret
0x00000000001180a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip - 0x86c92] ; ret
0x00000000001a908b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; cmp al, 0xf7 ; add byte ptr [rax], al ; pop rax ; pop rbp ; jmp rcx
0x00000000001a1453 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add byte ptr [rbx + rdi*2], al ; add byte ptr [rax], al ; adc byte ptr [rbp - 0x13], bh ; call rsi
0x00000000001a11c3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; mov ah, 0x25 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x13], dh ; jmp qword ptr [rcx]
0x00000000001a8f4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; cmc ; add byte ptr [rax], al ; push rbp ; jmp qword ptr [rcx]
0x00000000001ae72b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; fmul qword ptr [rbp + 1] ; add byte ptr [rax], ch ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a8f33 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, -0xb ; add byte ptr [rax], al ; xor byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001a8f03 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov ah, 0xf5 ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001a8ea3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; cmc ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x000000000007354b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000074b6e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001a1454 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rbx + rdi*2], al ; add byte ptr [rax], al ; adc byte ptr [rbp - 0x13], bh ; call rsi
0x000000000011765b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], dl ; ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x000000000013ed7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x47f38a2e], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000f6fab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000000a54b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x34
0x000000000000def3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rcx]
0x000000000008807b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x3390be05], cl ; add byte ptr [rbp - 0xcf98740], al ; ret
0x00000000000c8964 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000127852 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ccaa8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000a0fad : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013d87c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000c86c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x98 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000036cb3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000fe33c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x98 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012e65c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x00000000001439a9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000114b44 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; mov eax, 7 ; pop rbx ; pop rbp ; ret
0x000000000009673f : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000074b70 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000021625 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000fccbc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008d80c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000cbb90 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovle eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000004e5f6 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rbp - 0x4b8], 1 ; jmp rax
0x00000000000dfc84 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xc ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007354c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001439fa : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000075edc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013e8b8 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000115a06 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x000000000010affd : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rip + 0x2b6214], 0 ; pop rbp ; ret
0x0000000000100c68 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000088474 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdx, qword ptr [rsp + 0x68] ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000050d68 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdx, r8 ; mov qword ptr [rbp - 0x88], r8 ; call 0xad070
0x000000000008197e : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; mov dword ptr [r12 + 0x10], eax ; pop r12 ; ret
0x000000000010b008 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000010fc14 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr fs:[r14] ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fcb2 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000098529 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011765c : add byte ptr [rax], al ; add byte ptr [rax], al ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x00000000001a908c : add byte ptr [rax], al ; add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; cmp al, 0xf7 ; add byte ptr [rax], al ; pop rax ; pop rbp ; jmp rcx
0x000000000007e11a : add byte ptr [rax], al ; add byte ptr [rax], al ; test byte ptr [rbx], 0x80 ; jne 0x7e13f ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007e119 : add byte ptr [rax], al ; add byte ptr [rax], al ; test byte ptr [rbx], 0x80 ; jne 0x7e140 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001a11c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; mov ah, 0x25 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x13], dh ; jmp qword ptr [rcx]
0x000000000003b0bc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e0b25 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001300ac : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ca274 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor edx, edx ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001a1456 : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rbx + rdi*2], al ; add byte ptr [rax], al ; adc byte ptr [rbp - 0x13], bh ; call rsi
0x000000000002986f : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000000c381c : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000967e1 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x000000000011765d : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], dl ; ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x000000000008197f : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; mov dword ptr [rsp + 0x10], eax ; pop r12 ; ret
0x000000000005590c : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000559dc : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x000000000008a761 : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000d7f16 : add byte ptr [rax], al ; add byte ptr [rbp + 0x63], cl ; ret
0x00000000001a11c9 : add byte ptr [rax], al ; add byte ptr [rbp + 0x75000000], dh ; in eax, dx ; jmp qword ptr [rcx]
0x00000000000f7016 : add byte ptr [rax], al ; add byte ptr [rbp + 0xd], dh ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000076d85 : add byte ptr [rax], al ; add byte ptr [rbp + 0xe], dh ; mov edx, dword ptr [rdi + 0xc0] ; mov eax, edx ; ret
0x00000000001abea1 : add byte ptr [rax], al ; add byte ptr [rbp + 1], cl ; add byte ptr [rax - 0x1d], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001180cd : add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x3b5a7] ; ret
0x0000000000117f4d : add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x3b747] ; ret
0x000000000011800d : add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x3e057] ; ret
0x00000000000966d4 : add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xbcfd0] ; ret
0x0000000000091a14 : add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xc1c70] ; ret
0x0000000000091364 : add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xc4d10] ; ret
0x000000000019f701 : add byte ptr [rax], al ; add byte ptr [rbp + rbx*2 + 0x14280000], ch ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001ae6d1 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*2 + 1], bh ; add al, cl ; lodsb al, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae701 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*2 - 0x5307ffff], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000056ba0 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x2c], cl ; test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000076a8f : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x00000000000769ac : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000012f637 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call qword ptr [rax]
0x00000000001aeee1 : add byte ptr [rax], al ; add byte ptr [rbp + rdx*2 - 0x4737ffff], cl ; cmc ; jmp qword ptr [rax]
0x000000000019eed9 : add byte ptr [rax], al ; add byte ptr [rbp + rdx*2 - 0xc100000], al ; in al, dx ; jmp qword ptr [rax]
0x00000000001a8f09 : add byte ptr [rax], al ; add byte ptr [rbp + rsi*8 + 0x55000000], dh ; jmp qword ptr [rcx]
0x00000000001a8ea9 : add byte ptr [rax], al ; add byte ptr [rbp + rsi*8], dl ; add byte ptr [rax], al ; push rbp ; jmp qword ptr [rcx]
0x00000000001a11ce : add byte ptr [rax], al ; add byte ptr [rbp - 0x13], dh ; jmp qword ptr [rcx]
0x000000000013e894 : add byte ptr [rax], al ; add byte ptr [rbp - 0x33], dh ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013ed7d : add byte ptr [rax], al ; add byte ptr [rbp - 0x47f38a2e], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000125bea : add byte ptr [rax], al ; add byte ptr [rbp - 0x647af025], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; fisttp dword ptr [rax + 1] ; ret
0x00000000000aa9a1 : add byte ptr [rax], al ; add byte ptr [rbp - 0x6bf0be13], al ; ret 0xfe83
0x00000000000d3fe9 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; mov cl, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret
0x000000000006dd65 : add byte ptr [rax], al ; add byte ptr [rbp - 0x76ba7ffc], cl ; ret 0x2945
0x00000000000d3ff0 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret
0x00000000000f2e0b : add byte ptr [rax], al ; add byte ptr [rbp - 0x78], al ; je 0xf2e39 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000002a0bc : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; in al, 0xf ; test byte ptr [rip - 0x76000002], al ; ret
0x00000000000dc0d3 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7fead], cl ; ret
0x00000000000dcd45 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000001a8eae : add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x000000000000a54d : add byte ptr [rax], al ; add byte ptr [rbp], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x34
0x00000000001a7ec9 : add byte ptr [rax], al ; add byte ptr [rbp], dh ; add byte ptr [rax + 0x11], ah ; jmp qword ptr [rdi]
0x000000000000def5 : add byte ptr [rax], al ; add byte ptr [rbp], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rcx]
0x0000000000125a3d : add byte ptr [rax], al ; add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x000000000008807d : add byte ptr [rax], al ; add byte ptr [rbx + 0x3390be05], cl ; add byte ptr [rbp - 0xcf98740], al ; ret
0x00000000000bba49 : add byte ptr [rax], al ; add byte ptr [rbx + 0x415b01c7], al ; mov dword ptr [rbx + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000000299ee : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ce36e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000071ec7 : add byte ptr [rax], al ; add byte ptr [rbx + 0x44], bl ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013e8b9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x48082444], cl ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006edf8 : add byte ptr [rax], al ; add byte ptr [rbx + 0x48], bl ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000070d8c : add byte ptr [rax], al ; add byte ptr [rbx + 0x48], bl ; mov eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007af7c : add byte ptr [rax], al ; add byte ptr [rbx + 0x48], bl ; sub ebp, eax ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000010fc15 : add byte ptr [rax], al ; add byte ptr [rbx + 0x64], bl ; mov eax, dword ptr [r14] ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001a1741 : add byte ptr [rax], al ; add byte ptr [rbx + rbp], ch ; add byte ptr [rax], al ; call 0x281a04d9
0x000000000010e3d8 : add byte ptr [rax], al ; add byte ptr [rbx + rcx + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000001a1459 : add byte ptr [rax], al ; add byte ptr [rbx + rdi*2], al ; add byte ptr [rax], al ; adc byte ptr [rbp - 0x13], bh ; call rsi
0x0000000000047ee6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000000d6bf1 : add byte ptr [rax], al ; add byte ptr [rcx + 0x1b828], cl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010fbc2 : add byte ptr [rax], al ; add byte ptr [rcx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008b192 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; mov rdx, rbp ; mov rsi, r12 ; call rax
0x00000000001369b2 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x18], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000138b5a : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000257c4 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x28], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000050d69 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x3e], cl ; mov qword ptr [rbp - 0x88], r8 ; call 0xad06f
0x00000000000808f9 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000024f3b : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 8], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c3937 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 8], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003b96c : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; vpsubsw xmm9, xmm15, xmmword ptr [rbp - 0x8000003] ; ret 0xffef
0x00000000000ca275 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000012e712 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x75], 0x74 ; and al, 0x10 ; mov rdi, rbp ; call r14
0x00000000001ac8f1 : add byte ptr [rax], al ; add byte ptr [rdi + rbp + 0x20b80001], bl ; cmc ; jmp qword ptr [rdx]
0x00000000001a48f9 : add byte ptr [rax], al ; add byte ptr [rdi + rbp*4 - 0x72400000], ah ; cli ; call qword ptr [rax]
0x00000000001a48c9 : add byte ptr [rax], al ; add byte ptr [rdi + rbp*4], dh ; add al, ah ; cli ; call qword ptr [rax]
0x00000000001a8861 : add byte ptr [rax], al ; add byte ptr [rdi + rbp*8], cl ; add byte ptr [rax], al ; sbb byte ptr [rcx], bh ; call rsi
0x00000000001a9091 : add byte ptr [rax], al ; add byte ptr [rdi + rsi*8], bh ; add byte ptr [rax], al ; pop rax ; pop rbp ; jmp rcx
0x000000000003cf01 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x48 ; or byte ptr [rbp - 0x57f2faf], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003cf41 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x48 ; or cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003cf21 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x48 ; or dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040146 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x70 ; or byte ptr [rbp - 0x57f2faa], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040186 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x70 ; or cl, byte ptr [rbp - 0x57f2faa] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040166 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x70 ; or dword ptr [rbp - 0x57f2faa], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000103440 : add byte ptr [rax], al ; add byte ptr [rdx + 0x48], bl ; mov eax, dword ptr [rip + 0x2bf345] ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001ac409 : add byte ptr [rax], al ; add byte ptr [rdx + rbp + 0x15700001], dh ; cmc ; call qword ptr [rbx]
0x00000000001a43d9 : add byte ptr [rax], al ; add byte ptr [rdx + rbp*4 - 0x49e00000], al ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a43c1 : add byte ptr [rax], al ; add byte ptr [rdx + rbp*4], ch ; add byte ptr [rax - 0x4d], cl ; out dx, al ; jmp rdx
0x00000000001a8359 : add byte ptr [rax], al ; add byte ptr [rdx + rbp*8], al ; add byte ptr [rax], al ; adc byte ptr [rcx], ah ; call rsi
0x00000000001180c9 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x3b5a7] ; ret
0x0000000000117f49 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x3b747] ; ret
0x0000000000118009 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x3e057] ; ret
0x00000000000966d0 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xbcfd0] ; ret
0x0000000000091a10 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xc1c70] ; ret
0x0000000000091360 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xc4d10] ; ret
0x00000000001ac7e9 : add byte ptr [rax], al ; add byte ptr [rsi + rbp + 0x1d700001], dl ; cmc ; call qword ptr [rsi]
0x00000000001ac801 : add byte ptr [rax], al ; add byte ptr [rsi + rbp + 0x1d780001], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001b07e9 : add byte ptr [rax], al ; add byte ptr [rsi + rbp*2 + 0x68c00001], dl ; stc ; jmp qword ptr [rsi]
0x00000000001a47f1 : add byte ptr [rax], al ; add byte ptr [rsi + rbp*4 - 0x2ea80000], bl ; out dx, al ; call rcx
0x00000000001a47d9 : add byte ptr [rax], al ; add byte ptr [rsi + rbp*4 - 0x2f800000], al ; out dx, al ; jmp rbx
0x00000000001a45e1 : add byte ptr [rax], al ; add byte ptr [rsp + rbp*4 - 0x3ae80000], cl ; out dx, al ; call qword ptr [rax]
0x00000000001a4589 : add byte ptr [rax], al ; add byte ptr [rsp + rbp*4], dh ; add byte ptr [rax], al ; push rax ; ret
0x00000000001b8581 : add byte ptr [rax], al ; add byte ptr [rsp + rbp*8], ch ; add dword ptr [rax], eax ; sub byte ptr [rcx - 8], ah ; jmp qword ptr [rbx]
0x000000000013a592 : add byte ptr [rax], al ; add dh, al ; add byte ptr [rax], al ; jle 0x13a5b6 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000df2af : add byte ptr [rax], al ; add dword ptr [rbp - 0x7cb7febd], ecx ; ret
0x0000000000180dae : add byte ptr [rax], al ; add eax, esi ; sbb dword ptr [rcx], ebp ; jb 0x180df1 ; pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000050b1d : add byte ptr [rax], al ; add ebp, 0x30 ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000bba4a : add byte ptr [rax], al ; add edi, 1 ; pop rbx ; mov dword ptr [r11 + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000009872e : add byte ptr [rax], al ; add qword ptr [rbp], r12 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000059c06 : add byte ptr [rax], al ; add rax, rcx ; mov dword ptr [rbp - 0x1088], 1 ; jmp rax
0x000000000004e1fb : add byte ptr [rax], al ; add rax, rcx ; mov dword ptr [rbp - 0x4a8], 1 ; jmp rax
0x000000000004e855 : add byte ptr [rax], al ; add rax, rcx ; mov dword ptr [rbp - 0x4f8], 1 ; jmp rax
0x00000000000c5508 : add byte ptr [rax], al ; add rbp, r14 ; call 0x91817
0x000000000002a5ed : add byte ptr [rax], al ; add rsp, 0x10 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000088799 : add byte ptr [rax], al ; add rsp, 0x10 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000127854 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000048546 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013a252 : add byte ptr [rax], al ; add rsp, 0x158 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000cbbf4 : add byte ptr [rax], al ; add rsp, 0x18 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000012292d : add byte ptr [rax], al ; add rsp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000005370a : add byte ptr [rax], al ; add rsp, 0x18 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000047700 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ba7c0 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000079f0f : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000a0faf : add byte ptr [rax], al ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013d7fe : add byte ptr [rax], al ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000008044e : add byte ptr [rax], al ; add rsp, 0x18 ; xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000080087 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000076d1f : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000136416 : add byte ptr [rax], al ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f0e4c : add byte ptr [rax], al ; add rsp, 0x28 ; mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000bf596 : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000020277 : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007cc9c : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007977b : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000079804 : add byte ptr [rax], al ; add rsp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000124366 : add byte ptr [rax], al ; add rsp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cb44c : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006b909 : add byte ptr [rax], al ; add rsp, 0x400 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011909a : add byte ptr [rax], al ; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010de75 : add byte ptr [rax], al ; add rsp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f8764 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ef113 : add byte ptr [rax], al ; add rsp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000082752 : add byte ptr [rax], al ; add rsp, 0x78 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000145404 : add byte ptr [rax], al ; add rsp, 0x88 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000011fbd3 : add byte ptr [rax], al ; add rsp, 0x90 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006e363 : add byte ptr [rax], al ; add rsp, 0x90 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c86c4 : add byte ptr [rax], al ; add rsp, 0x98 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000036cb5 : add byte ptr [rax], al ; add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000c9004 : add byte ptr [rax], al ; add rsp, 0x98 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000118837 : add byte ptr [rax], al ; add rsp, 0xd0 ; mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001189f0 : add byte ptr [rax], al ; add rsp, 0xd8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000012e65e : add byte ptr [rax], al ; add rsp, 8 ; mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x0000000000073761 : add byte ptr [rax], al ; add rsp, 8 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000012d746 : add byte ptr [rax], al ; add rsp, 8 ; mov eax, 1 ; pop rbx ; pop rbp ; ret
0x0000000000114b46 : add byte ptr [rax], al ; add rsp, 8 ; mov eax, 7 ; pop rbx ; pop rbp ; ret
0x000000000010794f : add byte ptr [rax], al ; add rsp, 8 ; mov eax, 9 ; pop rbx ; pop rbp ; ret
0x0000000000071780 : add byte ptr [rax], al ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000070a76 : add byte ptr [rax], al ; add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000557c4 : add byte ptr [rax], al ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006ea2a : add byte ptr [rax], al ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006f34e : add byte ptr [rax], al ; add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006c71b : add byte ptr [rax], al ; add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000013519e : add byte ptr [rax], al ; add rsp, 8 ; mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008fc0d : add byte ptr [rax], al ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000077075 : add byte ptr [rax], al ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c8b26 : add byte ptr [rax], al ; add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000869e6 : add byte ptr [rax], al ; add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000071004 : add byte ptr [rax], al ; add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003a44d : add byte ptr [rax], al ; add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000000495a6 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000711bc : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000021627 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000022685 : add byte ptr [rax], al ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008d7b6 : add byte ptr [rax], al ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001a8f52 : add byte ptr [rax], al ; cld ; cmc ; add byte ptr [rax], al ; push rbp ; jmp qword ptr [rcx]
0x00000000000cbb92 : add byte ptr [rax], al ; cmovle eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001a9092 : add byte ptr [rax], al ; cmp al, 0xf7 ; add byte ptr [rax], al ; pop rax ; pop rbp ; jmp rcx
0x0000000000102309 : add byte ptr [rax], al ; cmp rax, rdx ; mov edx, ebx ; cmovne rbp, rax ; call 0xfe61d
0x00000000001ae732 : add byte ptr [rax], al ; fmul qword ptr [rbp + 1] ; add byte ptr [rax], ch ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a8f3a : add byte ptr [rax], al ; in al, -0xb ; add byte ptr [rax], al ; xor byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x000000000011b401 : add byte ptr [rax], al ; jbe 0x11b4a4 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00000000000a0e4a : add byte ptr [rax], al ; jbe 0xa0e2c ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010e3d9 : add byte ptr [rax], al ; je 0x10e3f2 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000010fbc3 : add byte ptr [rax], al ; je 0x10fbdc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000aed25 : add byte ptr [rax], al ; je 0xaf0e0 ; test r13d, r13d ; mov r10, rbp ; setne dl ; jmp 0xaed57
0x00000000000b1714 : add byte ptr [rax], al ; je 0xb1a57 ; test r13d, r13d ; mov r10, rbp ; setne dl ; jmp 0xb1747
0x000000000013a596 : add byte ptr [rax], al ; jle 0x13a5b2 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001148cc : add byte ptr [rax], al ; jne 0x114909 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013e895 : add byte ptr [rax], al ; jne 0x13e872 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f7017 : add byte ptr [rax], al ; jne 0xf7034 ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000aaa55 : add byte ptr [rax], al ; lea rax, qword ptr [rbx + 1] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000100e4f : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x2c32a8] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000039b3f : add byte ptr [rax], al ; lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000022b6e : add byte ptr [rax], al ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001a11ca : add byte ptr [rax], al ; mov ah, 0x25 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x13], dh ; jmp qword ptr [rcx]
0x00000000001a8f0a : add byte ptr [rax], al ; mov ah, 0xf5 ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x000000000013a593 : add byte ptr [rax], al ; mov byte ptr [rax], 0 ; jle 0x13a5b5 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001a6ff6 : add byte ptr [rax], al ; mov byte ptr [rbp - 0xf], al ; call qword ptr [rsi]
0x00000000000d6bf2 : add byte ptr [rax], al ; mov dword ptr [rax], ebp ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000076d19 : add byte ptr [rax], al ; mov dword ptr [rbp + 0xc0], eax ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000059c65 : add byte ptr [rax], al ; mov dword ptr [rbp - 0x1090], 0x20 ; jmp rax
0x0000000000059c9b : add byte ptr [rax], al ; mov dword ptr [rbp - 0x1098], 1 ; jmp rax
0x000000000005a6b8 : add byte ptr [rax], al ; mov dword ptr [rbp - 0x10b0], 0 ; jmp rax
0x00000000000598cb : add byte ptr [rax], al ; mov dword ptr [rbp - 0x10b4], 0 ; jmp rax
0x000000000005a75c : add byte ptr [rax], al ; mov dword ptr [rbp - 0x10b4], 1 ; jmp rax
0x000000000004e5f8 : add byte ptr [rax], al ; mov dword ptr [rbp - 0x4b8], 1 ; jmp rax
0x000000000004e297 : add byte ptr [rax], al ; mov dword ptr [rbp - 0x4f0], 1 ; jmp rax
0x0000000000035c1e : add byte ptr [rax], al ; mov dword ptr [rbp], ecx ; add rsp, 0x88 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000007b790 : add byte ptr [rax], al ; mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000741ab : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008bb23 : add byte ptr [rax], al ; mov dword ptr fs:[rax], 0xc ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fb266 : add byte ptr [rax], al ; mov eax, 0xa ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000dfc86 : add byte ptr [rax], al ; mov eax, 0xc ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007354e : add byte ptr [rax], al ; mov eax, 0xffffffff ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000fa3d9 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000036f61 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000029b4e : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011b407 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000006f8b5 : add byte ptr [rax], al ; mov eax, 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013a12d : add byte ptr [rax], al ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000075ede : add byte ptr [rax], al ; mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000010a2c9 : add byte ptr [rax], al ; mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013e8ba : add byte ptr [rax], al ; mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cd24e : add byte ptr [rax], al ; mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000034393 : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000078060 : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000715f1 : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000334ec : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f8acd : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000102b00 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000035c28 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000996a1 : add byte ptr [rax], al ; mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c9553 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca1e9 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011883e : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001189f7 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000000257c5 : add byte ptr [rax], al ; mov eax, r11d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f5d82 : add byte ptr [rax], al ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000508f2 : add byte ptr [rax], al ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001369b3 : add byte ptr [rax], al ; mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fea3c : add byte ptr [rax], al ; mov eax, r14d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000024f3c : add byte ptr [rax], al ; mov eax, r15d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010e8c5 : add byte ptr [rax], al ; mov ebp, 0xffffffff ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e25e0 : add byte ptr [rax], al ; mov ecx, dword ptr [rbp + 4] ; test ecx, ecx ; jle 0xe266d ; xor ebx, ebx ; mov rdx, rax ; jmp 0xe260c
0x000000000012f190 : add byte ptr [rax], al ; mov esi, 4 ; mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00000000000983f0 : add byte ptr [rax], al ; mov qword ptr [r12], r13 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013595b : add byte ptr [rax], al ; mov qword ptr [rbp + 0x50], rax ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000059801 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x1078], 0 ; jmp rax
0x0000000000116288 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x70], rdx ; mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000115a08 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x00000000001251a0 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x78], r10 ; call 0x913b8
0x00000000001319c1 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rcx ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000021620 : add byte ptr [rax], al ; mov qword ptr [rbx], 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008b9e0 : add byte ptr [rax], al ; mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010afff : add byte ptr [rax], al ; mov qword ptr [rip + 0x2b6214], 0 ; pop rbp ; ret
0x000000000003a876 : add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x00000000000204a4 : add byte ptr [rax], al ; mov rax, qword ptr [r13 + 0x18] ; test rax, rax ; je 0x204c2 ; mov rdi, rbp ; call rax
0x0000000000136daf : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x136dcd ; mov rdi, rbp ; call rax
0x0000000000073493 : add byte ptr [rax], al ; mov rax, qword ptr [rbp + 0x18] ; mov esi, r12d ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000007d42e : add byte ptr [rax], al ; mov rax, qword ptr [rbp + 0x20] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000007366a : add byte ptr [rax], al ; mov rax, qword ptr [rbp + 0x28] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000139429 : add byte ptr [rax], al ; mov rax, qword ptr [rbx] ; add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x00000000000bd493 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x30903c] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000109d33 : add byte ptr [rax], al ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000135ff5 : add byte ptr [rax], al ; mov rax, qword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000fb82d : add byte ptr [rax], al ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ad39a : add byte ptr [rax], al ; mov rax, r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ffdd0 : add byte ptr [rax], al ; mov rax, r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ad659 : add byte ptr [rax], al ; mov rax, r15 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000808fa : add byte ptr [rax], al ; mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000776d8 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007af4c : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002aa20 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000135ed0 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000070124 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006bb6d : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000bc504 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000110671 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c86cb : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000c912a : add byte ptr [rax], al ; mov rbp, r13 ; mov rdi, rbx ; call r12
0x0000000000104acc : add byte ptr [rax], al ; mov rbp, rdi ; xor edx, edx ; xor esi, esi ; call rbx
0x00000000000fe502 : add byte ptr [rax], al ; mov rbx, -1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d024e : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x308] ; call r12
0x000000000008b193 : add byte ptr [rax], al ; mov rdi, r13 ; mov rdx, rbp ; mov rsi, r12 ; call rax
0x00000000001309fb : add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x0000000000104ffd : add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x000000000012f195 : add byte ptr [rax], al ; mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000103d77 : add byte ptr [rax], al ; mov rdi, rbx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; jmp rax
0x0000000000088476 : add byte ptr [rax], al ; mov rdx, qword ptr [rsp + 0x68] ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000125102 : add byte ptr [rax], al ; mov rdx, r10 ; mov word ptr [r14 + 0x38], r9w ; mov qword ptr [rbp - 0x78], r10 ; call 0x913c0
0x0000000000050d6a : add byte ptr [rax], al ; mov rdx, r8 ; mov qword ptr [rbp - 0x88], r8 ; call 0xad06e
0x000000000008ac74 : add byte ptr [rax], al ; mov rdx, rbp ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000001046a6 : add byte ptr [rax], al ; mov rsi, qword ptr [rax] ; mov rdi, qword ptr [rbp - 0x40] ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000086a86 : add byte ptr [rax], al ; mov rsi, qword ptr [rsp + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000008b03e : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, r12 ; call rax
0x000000000008a190 : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x0000000000035c11 : add byte ptr [rax], al ; neg ebx ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000008d7b1 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001300a7 : add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000075e9f : add byte ptr [rax], al ; or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001a9096 : add byte ptr [rax], al ; pop rax ; pop rbp ; jmp rcx
0x0000000000081980 : add byte ptr [rax], al ; pop rbp ; mov dword ptr [r12 + 0x10], eax ; pop r12 ; ret
0x000000000005590d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000559dd : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008a762 : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000010b00a : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000125ae6 : add byte ptr [rax], al ; pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010fc16 : add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr fs:[r14] ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000047ee7 : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000118b4b : add byte ptr [rax], al ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000071ec8 : add byte ptr [rax], al ; pop rbx ; mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000087688 : add byte ptr [rax], al ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006edf9 : add byte ptr [rax], al ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x0000000000070d8d : add byte ptr [rax], al ; pop rbx ; mov rax, rsi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000299ef : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ce36f : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000029626 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000001fcb4 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fb94 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000029b1e : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000036ca5 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000007af7d : add byte ptr [rax], al ; pop rbx ; sub rbp, rax ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000125a3e : add byte ptr [rax], al ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000103441 : add byte ptr [rax], al ; pop rdx ; mov rax, qword ptr [rip + 0x2bf345] ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001a8eaf : add byte ptr [rax], al ; push rbp ; jmp qword ptr [rcx]
0x000000000011765e : add byte ptr [rax], al ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x00000000001a8eaa : add byte ptr [rax], al ; push rsp ; cmc ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x0000000000195726 : add byte ptr [rax], al ; push rsp ; out dx, al ; push qword ptr [rbp + rcx*8 + 0x42e40000] ; out dx, al ; call rsp
0x00000000001a6ff2 : add byte ptr [rax], al ; pushfq ; salc ; add byte ptr [rax], al ; mov byte ptr [rbp - 0xf], al ; call qword ptr [rsi]
0x00000000001a8f26 : add byte ptr [rax], al ; sbb byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001a908e : add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; cmp al, 0xf7 ; add byte ptr [rax], al ; pop rax ; pop rbp ; jmp rcx
0x000000000019ae36 : add byte ptr [rax], al ; sub rbp, rcx ; call qword ptr [rdi]
0x0000000000124331 : add byte ptr [rax], al ; syscall ; mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f7131 : add byte ptr [rax], al ; test al, al ; jne 0xf7157 ; mov eax, 9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019eeda : add byte ptr [rax], al ; test byte ptr [rbp], dl ; add al, dh ; in al, dx ; jmp qword ptr [rax]
0x000000000007e11c : add byte ptr [rax], al ; test byte ptr [rbx], 0x80 ; jne 0x7e13d ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000012e0cf : add byte ptr [rax], al ; test eax, eax ; jne 0x12e0ee ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012e0ce : add byte ptr [rax], al ; test eax, eax ; jne 0x12e0ef ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012f2bf : add byte ptr [rax], al ; test eax, eax ; jne 0x12f2de ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012f428 : add byte ptr [rax], al ; test eax, eax ; jne 0x12f44e ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012fd52 : add byte ptr [rax], al ; test eax, eax ; jne 0x12fd76 ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012fd8f : add byte ptr [rax], al ; test eax, eax ; jne 0x12fdae ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012fe3f : add byte ptr [rax], al ; test eax, eax ; jne 0x12fe5e ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012fe8f : add byte ptr [rax], al ; test eax, eax ; jne 0x12feae ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012ff0f : add byte ptr [rax], al ; test eax, eax ; jne 0x12ff2e ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000131c7f : add byte ptr [rax], al ; test eax, eax ; jne 0x131c9e ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000132a84 : add byte ptr [rax], al ; test eax, eax ; jne 0x132aa6 ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000132b1f : add byte ptr [rax], al ; test eax, eax ; jne 0x132b3e ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000132bba : add byte ptr [rax], al ; test eax, eax ; jne 0x132bde ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000132c39 : add byte ptr [rax], al ; test eax, eax ; jne 0x132c5e ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000131c5f : add byte ptr [rax], al ; test eax, eax ; setne al ; add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000131cd9 : add byte ptr [rax], al ; test eax, eax ; setne al ; movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000aed2b : add byte ptr [rax], al ; test r13d, r13d ; mov r10, rbp ; setne dl ; jmp 0xaed51
0x00000000000b171a : add byte ptr [rax], al ; test r13d, r13d ; mov r10, rbp ; setne dl ; jmp 0xb1741
0x000000000008d82d : add byte ptr [rax], al ; test rax, rax ; je 0x8d84b ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ff6ad : add byte ptr [rax], al ; test rax, rax ; jne 0xff695 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000ff87e : add byte ptr [rax], al ; test rax, rax ; jne 0xff865 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001a11c6 : add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; mov ah, 0x25 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x13], dh ; jmp qword ptr [rcx]
0x00000000001a8f3e : add byte ptr [rax], al ; xor byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000000bccfe : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000cca4a : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000879f9 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003b0be : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003a30a : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d808b : add byte ptr [rax], al ; xor eax, eax ; cmp ebx, 0xa ; je 0xd8100 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008ba04 : add byte ptr [rax], al ; xor eax, eax ; mov qword ptr [rbx + 8], rbp ; mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e713 : add byte ptr [rax], al ; xor eax, eax ; mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x00000000001307a6 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x0000000000089921 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000089e11 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013a397 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000bb983 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000003a4eb : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c900b : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000f849b : add byte ptr [rax], al ; xor eax, eax ; sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c8176 : add byte ptr [rax], al ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ca276 : add byte ptr [rax], al ; xor edx, edx ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001a8f27 : add byte ptr [rax], bl ; push rbp ; jmp qword ptr [rcx]
0x00000000001a8f3f : add byte ptr [rax], dh ; push rbp ; jmp qword ptr [rcx]
0x00000000000f9879 : add byte ptr [rax], dl ; add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001173c4 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001ac208 : add byte ptr [rax], r8b ; add byte ptr [rax + rbp + 0xbb00001], dh ; cmc ; jmp rcx
0x00000000001a1458 : add byte ptr [rax], r8b ; add byte ptr [rbx + rdi*2], al ; add byte ptr [rax], al ; adc byte ptr [rbp - 0x13], bh ; call rsi
0x0000000000048545 : add byte ptr [rax], r8b ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013d7fd : add byte ptr [rax], r8b ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000008044d : add byte ptr [rax], r8b ; add rsp, 0x18 ; xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000136415 : add byte ptr [rax], r8b ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012d745 : add byte ptr [rax], r8b ; add rsp, 8 ; mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000010c6d5 : add byte ptr [rax], r8b ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008d7b5 : add byte ptr [rax], r8b ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000cd24d : add byte ptr [rax], r8b ; mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000086a85 : add byte ptr [rax], r8b ; mov rsi, qword ptr [rsp + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000049c95 : add byte ptr [rax], r8b ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c8175 : add byte ptr [rax], r8b ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000868cb : add byte ptr [rbp + 0x12], dh ; add rax, 8 ; cmp rdx, rax ; ja 0x868d7 ; xor eax, eax ; ret
0x0000000000126a63 : add byte ptr [rbp + 0x12], dh ; movzx eax, byte ptr [rdi + 1] ; shl eax, 3 ; cdqe ; shr rax, 4 ; ret
0x00000000000d25d3 : add byte ptr [rbp + 0x12], dh ; or esi, 2 ; xor eax, eax ; cmp esi, 1 ; sete al ; ret
0x0000000000078c9e : add byte ptr [rbp + 0x14], dh ; xor eax, eax ; cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x00000000001463f7 : add byte ptr [rbp + 0x16], dh ; add rsp, 0x38 ; ret
0x00000000000ceb5f : add byte ptr [rbp + 0x1b8ff], al ; add byte ptr [rax], al ; js 0xceb7b ; ret
0x00000000000ceb5e : add byte ptr [rbp + 0x1b8ff], al ; add byte ptr [rax], al ; js 0xceb7c ; ret
0x000000000007b0bf : add byte ptr [rbp + 0x29], cl ; dec byte ptr [rax - 0x77] ; ret 0x294c
0x000000000004aa5f : add byte ptr [rbp + 0x29], cl ; ret 0xc149
0x00000000001462bc : add byte ptr [rbp + 0x29], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x00000000000ba217 : add byte ptr [rbp + 0x29dc75db], al ; ret
0x00000000001148cd : add byte ptr [rbp + 0x2f], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012e0d0 : add byte ptr [rbp + 0x310b75c0], al ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000132bbb : add byte ptr [rbp + 0x311075c0], al ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000d7eac : add byte ptr [rbp + 0x315bfffb], dl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000ae1fe : add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x63] ; ret
0x000000000008af9f : add byte ptr [rbp + 0x31], al ; in al, -0x17 ; ret 0xfffe
0x0000000000029871 : add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000000c381e : add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000acd87 : add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx + rcx*4 - 0x12], 0x4c ; lea ecx, dword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000967e3 : add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x000000000011765f : add byte ptr [rbp + 0x31], dl ; ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x00000000000fda1f : add byte ptr [rbp + 0x347789f6], al ; jne 0xfda16 ; or dword ptr [rdi], 0x80000000 ; xor eax, eax ; ret
0x00000000000ba26b : add byte ptr [rbp + 0x390a74db], al ; ret
0x0000000000103b7a : add byte ptr [rbp + 0x395374c0], al ; ret
0x0000000000083f9d : add byte ptr [rbp + 0x39], cl ; ret 0x8948
0x000000000008410e : add byte ptr [rbp + 0x39], cl ; ret 0x976
0x0000000000081981 : add byte ptr [rbp + 0x41], bl ; mov dword ptr [rsp + 0x10], eax ; pop r12 ; ret
0x000000000005590e : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000559de : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x000000000008a763 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000012f2c0 : add byte ptr [rbp + 0x480b75c0], al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000008fb3e : add byte ptr [rbp + 0x480d75c0], al ; add esp, 8 ; ret
0x000000000006bc5e : add byte ptr [rbp + 0x480d75c0], al ; mov eax, ebx ; pop rbx ; ret
0x0000000000132a85 : add byte ptr [rbp + 0x480e75c0], al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012fd53 : add byte ptr [rbp + 0x481075c0], al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000132c3a : add byte ptr [rbp + 0x481175c0], al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012f429 : add byte ptr [rbp + 0x481275c0], al ; add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000143d70 : add byte ptr [rbp + 0x482b78c0], al ; mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000143919 : add byte ptr [rbp + 0x483278c0], al ; mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000001266f3 : add byte ptr [rbp + 0x48], dh ; mov eax, r8d ; ret
0x0000000000025f78 : add byte ptr [rbp + 0x52880fd2], al ; add dword ptr [rax], eax ; add bh, dh ; ret 0xf800
0x0000000000036c07 : add byte ptr [rbp + 0x5890142], cl ; jnp 0x36bbf ; cmp byte ptr [rax], al ; mov eax, edx ; ret
0x000000000007a71e : add byte ptr [rbp + 0x58d48c0], al ; fdivr dword ptr [rsp + rsi] ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000c7cd3 : add byte ptr [rbp + 0x5b1075c0], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000d7efa : add byte ptr [rbp + 0x63], cl ; ret
0x00000000000cd239 : add byte ptr [rbp + 0x641278c0], al ; mov dword ptr [rbx], ebp ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000007b4dd : add byte ptr [rbp + 0x6b894cc9], al ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000001a11cb : add byte ptr [rbp + 0x75000000], dh ; in eax, dx ; jmp qword ptr [rcx]
0x000000000007a86c : add byte ptr [rbp + 0x7b894cc9], al ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000011805a : add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0x564bc] ; ret
0x0000000000117f9a : add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0x5659c] ; ret
0x0000000000117eda : add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0x5665c] ; ret
0x0000000000096661 : add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0xd7ee5] ; ret
0x00000000000919a1 : add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0xdcb85] ; ret
0x00000000000912f1 : add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0xdd255] ; ret
0x0000000000139b83 : add byte ptr [rbp + 0xa], dh ; jmp 0x139bb1
0x0000000000139b83 : add byte ptr [rbp + 0xa], dh ; jmp 0x139bb2
0x000000000003ad93 : add byte ptr [rbp + 0xa], dh ; jmp 0x3adc1
0x00000000000d2503 : add byte ptr [rbp + 0xa], dh ; or esi, 2 ; mov eax, esi ; ret
0x00000000000857c5 : add byte ptr [rbp + 0xb], dh ; jmp 0x857f6
0x00000000001026f8 : add byte ptr [rbp + 0xd8944d2], al ; mov esi, 0x74002c1a ; or al, 0xf7 ; ret 0xfc07
0x00000000000f7018 : add byte ptr [rbp + 0xd], dh ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000c04a8 : add byte ptr [rbp + 0xd], dh ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000a069b : add byte ptr [rbp + 0xd], dh ; nop ; add rax, 1 ; cmp byte ptr [rdi + rax], dl ; je 0xa06af ; ret
0x0000000000076d87 : add byte ptr [rbp + 0xe], dh ; mov edx, dword ptr [rdi + 0xc0] ; mov eax, edx ; ret
0x000000000013052c : add byte ptr [rbp + 0xf1374d2], al ; mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x0000000000096fc2 : add byte ptr [rbp + 0xf], al ; mov dh, 0xc ; xchg byte ptr [rax - 0x73], cl ; add dword ptr [r9 + 0x39], ecx ; ret 0x8949
0x00000000000da818 : add byte ptr [rbp + 0xf], al ; mov dh, 0xff ; movsxd rax, dword ptr [rdx + r15*4] ; add rax, rdx ; jmp rax
0x0000000000048f4f : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x0000000000048e3f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000008194e : add byte ptr [rbp + 1], al ; and al, 0x18 ; cmp rbx, rax ; je 0x8196d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001abea3 : add byte ptr [rbp + 1], cl ; add byte ptr [rax - 0x1d], cl ; hlt ; jmp qword ptr [rcx]
0x000000000003a93a : add byte ptr [rbp + 3], dh ; pop rbx ; ret
0x000000000008de66 : add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x10] ; ret
0x00000000001180cf : add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x3b5a7] ; ret
0x0000000000117f4f : add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x3b747] ; ret
0x000000000011800f : add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x3e057] ; ret
0x0000000000118156 : add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x56960] ; ret
0x0000000000091c06 : add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x80] ; ret
0x00000000000966d6 : add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xbcfd0] ; ret
0x0000000000091a16 : add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xc1c70] ; ret
0x0000000000091366 : add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xc4d10] ; ret
0x000000000008c00a : add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xc] ; ret
0x0000000000091c69 : add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xd] ; ret
0x00000000000917d9 : add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xdd2ed] ; ret
0x0000000000090e70 : add byte ptr [rbp + 8], dh ; lea rax, qword ptr [rip + 0x26] ; ret
0x00000000000ac920 : add byte ptr [rbp + 8], dh ; lea rax, qword ptr [rip + 0xec76] ; ret
0x00000000000abd50 : add byte ptr [rbp + 8], dh ; lea rax, qword ptr [rip + 0xf8f6] ; ret
0x0000000000146384 : add byte ptr [rbp + 9], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x00000000000798c2 : add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x38 ; ret
0x0000000000194f67 : add byte ptr [rbp + rax*2 - 0x15], dh ; jmp rsp
0x00000000001986af : add byte ptr [rbp + rax*2 - 7], dh ; call rsp
0x0000000000197117 : add byte ptr [rbp + rbp*2 - 0xa], dh ; call rsp
0x000000000019f703 : add byte ptr [rbp + rbx*2 + 0x14280000], ch ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001963b7 : add byte ptr [rbp + rbx*4 - 0xf], al ; jmp rsp
0x0000000000199397 : add byte ptr [rbp + rcx + 0x5384fffb], dh ; add al, byte ptr [rax] ; in al, 0xe ; sti ; call rsp
0x000000000017b3d7 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x00000000001ae6d3 : add byte ptr [rbp + rcx*2 + 1], bh ; add al, cl ; lodsb al, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae703 : add byte ptr [rbp + rcx*2 - 0x5307ffff], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000197857 : add byte ptr [rbp + rcx*2 - 9], dh ; call rsp
0x000000000015478f : add byte ptr [rbp + rcx*4 + 0x1d], cl ; cdq ; out dx, al ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015754f : add byte ptr [rbp + rcx*4 + 0x1d], cl ; cdq ; ret 3
0x00000000001572af : add byte ptr [rbp + rcx*4 + 0x1d], cl ; cmp ebp, eax ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001544ef : add byte ptr [rbp + rcx*4 + 0x1d], cl ; cmp ecx, esi ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015700f : add byte ptr [rbp + rcx*4 + 0x1d], cl ; fld st(7) ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015424f : add byte ptr [rbp + rcx*4 + 0x1d], cl ; fpatan ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015697f : add byte ptr [rbp + rcx*4 + 0x1d], cl ; imul ecx, esi, 0x63490003 ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000a675f : add byte ptr [rbp + rcx*4 + 0x1d], cl ; imul edi, eax, 0x6349000d ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000001548df : add byte ptr [rbp + rcx*4 + 0x1d], cl ; in eax, dx ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156f76 : add byte ptr [rbp + rcx*4 + 0x1d], cl ; jb 0x156f54 ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015463f : add byte ptr [rbp + rcx*4 + 0x1d], cl ; jmp 0x49154a47
0x00000000001573ff : add byte ptr [rbp + rcx*4 + 0x1d], cl ; jmp 0x491577db
0x0000000000153faf : add byte ptr [rbp + rcx*4 + 0x1d], cl ; jns 0x153fbb ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156d6f : add byte ptr [rbp + rcx*4 + 0x1d], cl ; jns 0x156d4f ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156c1f : add byte ptr [rbp + rcx*4 + 0x1d], cl ; leave ; retf ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153e5f : add byte ptr [rbp + rcx*4 + 0x1d], cl ; leave ; test dword ptr [rbx], 0x14634900 ; xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015439f : add byte ptr [rbp + rcx*4 + 0x1d], cl ; mov edx, esi ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015715f : add byte ptr [rbp + rcx*4 + 0x1d], cl ; mov esi, eax ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154e1f : add byte ptr [rbp + rcx*4 + 0x1d], cl ; or eax, ebp ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001566df : add byte ptr [rbp + rcx*4 + 0x1d], cl ; or ecx, edx ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015769f : add byte ptr [rbp + rcx*4 + 0x1d], cl ; rol qword ptr [r11], 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015b70a : add byte ptr [rbp + rcx*4 + 0x1d], cl ; sahf ; xchg dword ptr [rbx], eax ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156acf : add byte ptr [rbp + rcx*4 + 0x1d], cl ; sbb ebp, ecx ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153d0f : add byte ptr [rbp + rcx*4 + 0x1d], cl ; sbb ecx, edi ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001577ef : add byte ptr [rbp + rcx*4 + 0x1d], cl ; stc ; mov edi, 0x63490003 ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001540ff : add byte ptr [rbp + rcx*4 + 0x1d], cl ; sub ebp, esi ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156ebf : add byte ptr [rbp + rcx*4 + 0x1d], cl ; sub ecx, ecx ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000056ba2 : add byte ptr [rbp + rcx*4 + 0x2c], cl ; test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000021c5d : add byte ptr [rbp + rcx*4 + 0x34], cl ; ret
0x0000000000081be6 : add byte ptr [rbp + rcx*4 + 0x34], cl ; sub ecx, dword ptr [rax + 0x39] ; ret
0x0000000000076a91 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x000000000012f252 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; call qword ptr [rax]
0x00000000000769ae : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000012f639 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call qword ptr [rax]
0x0000000000076b7e : add byte ptr [rbp + rcx*4 + 0x4d], cl ; enter -0x76b4, -0x17 ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x000000000012b615 : add byte ptr [rbp + rcx*4 + 0x67], cl ; xor byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x00000000000487e7 : add byte ptr [rbp + rcx*4], cl ; mov rax, qword ptr [rsi + rbx*8] ; lea r9, qword ptr [rdx] ; jmp 0x4884f
0x000000000004a3f7 : add byte ptr [rbp + rcx*4], cl ; mov rax, qword ptr [rsi + rbx*8] ; lea r9, qword ptr [rdx] ; jmp 0x4a45f
0x000000000019443f : add byte ptr [rbp + rdi*4 - 0x18], dh ; call rsp
0x0000000000118081 : add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0x386b5] ; ret
0x0000000000117fc1 : add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0x38795] ; ret
0x0000000000117f01 : add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0x38855] ; ret
0x0000000000096688 : add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0xba0de] ; ret
0x00000000000919c8 : add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0xbed7e] ; ret
0x0000000000091318 : add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0xbf44e] ; ret
0x00000000001aeee3 : add byte ptr [rbp + rdx*2 - 0x4737ffff], cl ; cmc ; jmp qword ptr [rax]
0x000000000019eedb : add byte ptr [rbp + rdx*2 - 0xc100000], al ; in al, dx ; jmp qword ptr [rax]
0x00000000001995af : add byte ptr [rbp + rsi - 5], dh ; jmp rsp
0x000000000019841f : add byte ptr [rbp + rsi*4 - 0x1b6b0008], al ; add dword ptr [rax], eax ; mov ah, 0xb6 ; clc ; jmp rsp
0x00000000001a8f0b : add byte ptr [rbp + rsi*8 + 0x55000000], dh ; jmp qword ptr [rcx]
0x00000000001a8eab : add byte ptr [rbp + rsi*8], dl ; add byte ptr [rax], al ; push rbp ; jmp qword ptr [rcx]
0x00000000001166fc : add byte ptr [rbp - 0x10], dh ; mov edx, dword ptr [rdi + 0x28] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x00000000001a11d0 : add byte ptr [rbp - 0x13], dh ; jmp qword ptr [rcx]
0x0000000000116df1 : add byte ptr [rbp - 0x14], dh ; mov eax, r11d ; and eax, 0xc ; cmp eax, 4 ; je 0x116e0e ; ret
0x000000000007fe5c : add byte ptr [rbp - 0x17], dh ; add rsp, 8 ; mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000116d8e : add byte ptr [rbp - 0x19], dh ; and r11d, 0xffffffbb ; cmp r11d, 0xa ; je 0x116da9 ; ret
0x0000000000172574 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x00000000000ceb0f : add byte ptr [rbp - 0x27], dh ; xor eax, eax ; ret
0x0000000000050e67 : add byte ptr [rbp - 0x2dce00b9], cl ; div ecx ; add r8d, eax ; mov eax, r8d ; ret
0x00000000001259ae : add byte ptr [rbp - 0x2e7af025], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000013e896 : add byte ptr [rbp - 0x33], dh ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ce900 : add byte ptr [rbp - 0x38], dh ; ret
0x0000000000025d9a : add byte ptr [rbp - 0x3d77f02e], al ; add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x000000000010b00b : add byte ptr [rbp - 0x3d], bl ; mov qword ptr [rip + 0x2b6207], 2 ; pop rbp ; ret
0x0000000000131c60 : add byte ptr [rbp - 0x3f6af040], al ; add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000001329c8 : add byte ptr [rbp - 0x3f6af040], al ; add rsp, 8 ; movzx eax, al ; ret
0x0000000000131cda : add byte ptr [rbp - 0x3f6af040], al ; movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006c2e6 : add byte ptr [rbp - 0x3f6af040], al ; movzx eax, al ; neg eax ; pop rbx ; ret
0x00000000000fa05b : add byte ptr [rbp - 0x3f6bf040], al ; add rsp, 0x48 ; movzx eax, al ; ret
0x000000000017b683 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x00000000000cea72 : add byte ptr [rbp - 0x46], dh ; mov eax, 0x40 ; ret
0x000000000013ed7f : add byte ptr [rbp - 0x47f38a2e], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000116755 : add byte ptr [rbp - 0x47f98a40], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000ae1f6 : add byte ptr [rbp - 0x547bf037], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x63] ; ret
0x00000000000258b1 : add byte ptr [rbp - 0x5677f02e], al ; add eax, dword ptr [rax] ; add bh, dh ; ret 0xf800
0x0000000000125bec : add byte ptr [rbp - 0x647af025], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; fisttp dword ptr [rax + 1] ; ret
0x00000000001934d8 : add byte ptr [rbp - 0x6a6f0003], dl ; std ; jmp qword ptr [rax]
0x00000000000aa9a3 : add byte ptr [rbp - 0x6bf0be13], al ; ret 0xfe83
0x000000000003eb33 : add byte ptr [rbp - 0x6e7bf00a], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000041af5 : add byte ptr [rbp - 0x707bf037], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000032b9b : add byte ptr [rbp - 0x73], cl ; jl 0x32bb2 ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x0000000000146672 : add byte ptr [rbp - 0x73], cl ; lodsb al, byte ptr [rsi] ; and al, 0x70 ; add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000012aa05 : add byte ptr [rbp - 0x74d98a2e], al ; add eax, 0x29b054 ; test eax, eax ; je 0x12aa27 ; ret
0x00000000000fdd94 : add byte ptr [rbp - 0x74f08740], al ; and al, 0xc ; add rsp, 0x18 ; ret
0x00000000000c2ba7 : add byte ptr [rbp - 0x75], al ; adc r9b, r13b ; call 0x490c2bbc
0x00000000000c2ba6 : add byte ptr [rbp - 0x75], al ; adc r9b, r13b ; call 0x490c2bbd
0x000000000004b361 : add byte ptr [rbp - 0x75], cl ; jl 0x4b392 ; and byte ptr [rax + 1], cl ; ret
0x0000000000056d01 : add byte ptr [rbp - 0x75], cl ; jl 0x56d32 ; and byte ptr [rax + 1], cl ; ret
0x00000000000d3feb : add byte ptr [rbp - 0x75], cl ; mov cl, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret
0x00000000001171d7 : add byte ptr [rbp - 0x75], cl ; or byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp - 0x69], 0x48 ; mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x000000000006dd67 : add byte ptr [rbp - 0x76ba7ffc], cl ; ret 0x2945
0x0000000000031269 : add byte ptr [rbp - 0x77], al ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000a089c : add byte ptr [rbp - 0x77], al ; leave ; movsxd r9, dword ptr [rax + r9*4] ; add r9, rax ; jmp r9
0x00000000000a093c : add byte ptr [rbp - 0x77], al ; leave ; movsxd rax, dword ptr [r10 + r9*4] ; add rax, r10 ; jmp rax
0x00000000000d3ff2 : add byte ptr [rbp - 0x77], al ; ret
0x000000000009c543 : add byte ptr [rbp - 0x77], cl ; ret 0x5a8d
0x000000000009c569 : add byte ptr [rbp - 0x77], cl ; ret 0x8d44
0x000000000002dba4 : add byte ptr [rbp - 0x77], cl ; ret 0xb0e9
0x00000000000bd012 : add byte ptr [rbp - 0x77], cl ; sub al, 0x24 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000983f1 : add byte ptr [rbp - 0x77], cl ; sub al, 0x24 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000084b8e : add byte ptr [rbp - 0x77cfdb9], cl ; add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x00000000000f2e0d : add byte ptr [rbp - 0x78], al ; je 0xf2e37 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000aed2c : add byte ptr [rbp - 0x7b], al ; in eax, dx ; mov r10, rbp ; setne dl ; jmp 0xaed50
0x00000000000b171b : add byte ptr [rbp - 0x7b], al ; in eax, dx ; mov r10, rbp ; setne dl ; jmp 0xb1740
0x00000000000b0817 : add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x84 ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000002a0be : add byte ptr [rbp - 0x7b], cl ; in al, 0xf ; test byte ptr [rip - 0x76000002], al ; ret
0x00000000000a053b : add byte ptr [rbp - 0x7c], al ; sal byte ptr [rcx + 0x44], 0x38 ; ret 0x4153
0x0000000000064297 : add byte ptr [rbp - 0x7cb776ec], cl ; ret
0x00000000000dc0d5 : add byte ptr [rbp - 0x7cb7fead], cl ; ret
0x00000000000d6e6f : add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000002a44f : add byte ptr [rbp - 0x7cf38b0a], al ; inc byte ptr [rbx] ; je 0x2a46a ; ret
0x00000000001255b9 : add byte ptr [rbp - 0x9f38b2e], al ; ret 0xc602
0x0000000000047497 : add byte ptr [rbp - 0xa], dh ; pop rbx ; ret
0x0000000000196c9f : add byte ptr [rbp - 0xb], dh ; dec dword ptr [rsp + 0x68340001] ; cmc ; call rsp
0x0000000000088085 : add byte ptr [rbp - 0xcf98740], al ; ret
0x0000000000035605 : add byte ptr [rbp - 0xcf98a40], al ; ret
0x000000000011f94c : add byte ptr [rbp - 0xd], ch ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000001a8eb0 : add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x0000000000071fbf : add byte ptr [rbp - 1], bh ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010e8c6 : add byte ptr [rbp - 1], bh ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001990d7 : add byte ptr [rbp - 6], dl ; jmp rsp
0x000000000000a54f : add byte ptr [rbp], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x34
0x00000000001a7ecb : add byte ptr [rbp], dh ; add byte ptr [rax + 0x11], ah ; jmp qword ptr [rdi]
0x000000000000def7 : add byte ptr [rbp], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rcx]
0x00000000001726df : add byte ptr [rbx + 0x25404a05], cl ; add byte ptr [rbp - 0xcf98a40], al ; ret
0x0000000000125a3f : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000000e98bf : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000008807f : add byte ptr [rbx + 0x3390be05], cl ; add byte ptr [rbp - 0xcf98740], al ; ret
0x00000000000355ff : add byte ptr [rbx + 0x39112a05], cl ; add byte ptr [rbp - 0xcf98a40], al ; ret
0x00000000000bba4b : add byte ptr [rbx + 0x415b01c7], al ; mov dword ptr [rbx + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000000299f0 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ce370 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000071ec9 : add byte ptr [rbx + 0x44], bl ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000e0a87 : add byte ptr [rbx + 0x45], bl ; mov dword ptr [rsp + 4], esi ; xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000121aa4 : add byte ptr [rbx + 0x4804c244], cl ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013e8bb : add byte ptr [rbx + 0x48082444], cl ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fce64 : add byte ptr [rbx + 0x48082444], cl ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f87da : add byte ptr [rbx + 0x48082444], cl ; add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cd0bd : add byte ptr [rbx + 0x480c2444], cl ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cd1b4 : add byte ptr [rbx + 0x480c2444], cl ; add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000035e64 : add byte ptr [rbx + 0x480c2444], cl ; add esp, 0x90 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004539e : add byte ptr [rbx + 0x48302444], cl ; add esp, 0x170 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000087689 : add byte ptr [rbx + 0x48], bl ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006edfa : add byte ptr [rbx + 0x48], bl ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000070d8e : add byte ptr [rbx + 0x48], bl ; mov eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007af7e : add byte ptr [rbx + 0x48], bl ; sub ebp, eax ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000012a1be : add byte ptr [rbx + 0x48f94060], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000088b67 : add byte ptr [rbx + 0x4c], bl ; mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x000000000010fc17 : add byte ptr [rbx + 0x64], bl ; mov eax, dword ptr [r14] ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000198567 : add byte ptr [rbx + rax - 7], ah ; push qword ptr [rsi + rbp*8 + 0x3a40001] ; stc ; jmp rsp
0x0000000000098cc2 : add byte ptr [rbx + rbp + 0x48], dh ; add eax, 1 ; sub rsi, 1 ; jne 0x98ccf ; xor eax, eax ; ret
0x0000000000098dc2 : add byte ptr [rbx + rbp + 0x48], dh ; add ecx, 1 ; sub rax, 1 ; jne 0x98dcf ; pop rbx ; pop rbp ; ret
0x0000000000196a07 : add byte ptr [rbx + rbp*4], al ; jmp rsp
0x00000000001a1743 : add byte ptr [rbx + rbp], ch ; add byte ptr [rax], al ; call 0x281a04d7
0x000000000010e3da : add byte ptr [rbx + rcx + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000e0a1d : add byte ptr [rbx + rcx*4 + 0x53], cl ; or byte ptr [rbp - 0x75], cl ; or byte ptr [rax - 0x77], r9b ; ret 0x1bb
0x00000000001a145b : add byte ptr [rbx + rdi*2], al ; add byte ptr [rax], al ; adc byte ptr [rbp - 0x13], bh ; call rsi
0x0000000000080bfe : add byte ptr [rbx - 0x57], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000047ee8 : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000000fb20c : add byte ptr [rbx], 0x48 ; add esp, 0x98 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008b97f : add byte ptr [rbx], al ; add ch, byte ptr [rcx] ; ror byte ptr [rax - 0x75], 1 ; push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000bb980 : add byte ptr [rbx], cl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000000d6bf3 : add byte ptr [rcx + 0x1b828], cl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010344a : add byte ptr [rcx + 0x5b], bl ; pop rbp ; pop r12 ; ret
0x0000000000197f57 : add byte ptr [rcx + rbp - 8], al ; call rsp
0x0000000000194ca7 : add byte ptr [rcx + rbp*2 - 0x16], dl ; call rsp
0x0000000000034f65 : add byte ptr [rcx + rbp*8 - 0xd], dh ; ret
0x000000000010fbc4 : add byte ptr [rcx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fea3d : add byte ptr [rcx + rcx*4 - 0x10], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ad39b : add byte ptr [rcx + rcx*4 - 0x10], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ffdd1 : add byte ptr [rcx + rcx*4 - 0x10], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008b194 : add byte ptr [rcx + rcx*4 - 0x11], cl ; mov rdx, rbp ; mov rsi, r12 ; call rax
0x00000000001369b4 : add byte ptr [rcx + rcx*4 - 0x18], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000021dcf : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov rcx, qword ptr [rbp - 0x60] ; call rcx
0x00000000000f5d83 : add byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000508f3 : add byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fb82e : add byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000257c6 : add byte ptr [rcx + rcx*4 - 0x28], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000125103 : add byte ptr [rcx + rcx*4 - 0x2e], cl ; mov word ptr [r14 + 0x38], r9w ; mov qword ptr [rbp - 0x78], r10 ; call 0x913bf
0x0000000000050d6b : add byte ptr [rcx + rcx*4 - 0x3e], cl ; mov qword ptr [rbp - 0x88], r8 ; call 0xad06d
0x00000000000808fb : add byte ptr [rcx + rcx*4 - 0x40], cl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000024f3d : add byte ptr [rcx + rcx*4 - 8], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ad65a : add byte ptr [rcx + rcx*4 - 8], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001986a7 : add byte ptr [rcx + rdi], al ; stc ; inc dword ptr [rbp + rsi*8 + 0x45740001] ; stc ; call rsp
0x00000000000e9c57 : add byte ptr [rcx - 0x75], cl ; push rbp ; or byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 + 0x63], r9b ; ret
0x00000000000204a5 : add byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7b], r9b ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x00000000000f1020 : add byte ptr [rcx - 0x77], cl ; add al, 0x24 ; je 0xf1008 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013a3b5 : add byte ptr [rcx - 0x77], cl ; fadd dword ptr [rcx + rcx*4 - 0x1f] ; mov rdi, rbp ; call 0x5665c
0x000000000013a3fd : add byte ptr [rcx - 0x77], cl ; fmul dword ptr [rcx + rcx*4 - 0x1f] ; mov rdi, rbp ; xor eax, eax ; call 0x5665e
0x000000000017209a : add byte ptr [rcx - 0x77], cl ; sbb al, 0x24 ; mov rdx, qword ptr [rax + rbp*8] ; test rdx, rdx ; je 0x1720b8 ; call rdx
0x000000000003b96e : add byte ptr [rcx - 0x7d], cl ; vpsubsw xmm9, xmm15, xmmword ptr [rbp - 0x8000003] ; ret 0xffef
0x000000000008a75f : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000139f41 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000105eba : add byte ptr [rcx], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f1762 : add byte ptr [rcx], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000126f4a : add byte ptr [rcx], al ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000180daf : add byte ptr [rcx], al ; lock sbb dword ptr [rcx], ebp ; jb 0x180df0 ; pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000000ce943 : add byte ptr [rcx], al ; sbb dword ptr [rbp + rsi*2 - 0x7e], edx ; mov eax, 0x7d00 ; ret
0x0000000000103344 : add byte ptr [rcx], dh ; fisttp dword ptr [rcx + 0x5d0102] ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ca277 : add byte ptr [rcx], dh ; rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000005f88b : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7b], cl ; in al, 0xf ; lahf ; ret 0x2941
0x00000000000d808c : add byte ptr [rcx], dh ; rol byte ptr [rbx + 0x5c740afb], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012e714 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x75], 0x74 ; and al, 0x10 ; mov rdi, rbp ; call r14
0x0000000000138467 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x75], 0x74 ; and al, 0x30 ; mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000144b46 : add byte ptr [rcx], dh ; sal bl, 0x48 ; movsd dword ptr [rdi], dword ptr [rsi] ; mov qword ptr [rbp], rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000035524 : add byte ptr [rcx], dh ; test byte ptr [rbp - 0x6bf0bf40], 0xc6 ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x0000000000125c43 : add byte ptr [rdi + 0x72], bh ; mov byte ptr [rbp + 0x11], bl ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000110586 : add byte ptr [rdi + rax*8], ah ; or al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000008bb24 : add byte ptr [rdi + rax*8], ah ; or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000795d6 : add byte ptr [rdi + rax*8], ah ; sbb al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001ac8f3 : add byte ptr [rdi + rbp + 0x20b80001], bl ; cmc ; jmp qword ptr [rdx]
0x00000000000ceae0 : add byte ptr [rdi + rbp + 0x48], dh ; cmp eax, 0x414a53 ; je 0xceb22 ; mov eax, 1 ; ret
0x00000000001961e7 : add byte ptr [rdi + rbp - 0xf], al ; call rsp
0x00000000001a48fb : add byte ptr [rdi + rbp*4 - 0x72400000], ah ; cli ; call qword ptr [rax]
0x00000000001983d7 : add byte ptr [rdi + rbp*4], al ; clc ; jmp rsp
0x00000000001a48cb : add byte ptr [rdi + rbp*4], dh ; add al, ah ; cli ; call qword ptr [rax]
0x00000000001a8863 : add byte ptr [rdi + rbp*8], cl ; add byte ptr [rax], al ; sbb byte ptr [rcx], bh ; call rsi
0x000000000009d8e4 : add byte ptr [rdi + rcx - 0x4a], al ; pop rsi ; add eax, 0x43b60f44 ; add dword ptr [rbp + 0x38], eax ; ret
0x00000000001a9093 : add byte ptr [rdi + rsi*8], bh ; add byte ptr [rax], al ; pop rax ; pop rbp ; jmp rcx
0x000000000006ba6c : add byte ptr [rdi], ah ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000124332 : add byte ptr [rdi], cl ; add eax, 0x1024448b ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000140e73 : add byte ptr [rdi], cl ; mov cs, word ptr [rbp - 0x14000005] ; ret 0xffb9
0x00000000000d087a : add byte ptr [rdi], cl ; mov dh, 0x41 ; add dword ptr [rax - 0x7d], ecx ; rol dword ptr [rcx], -0x7c ; sal byte ptr [rbp - 0x2b], 0xf6 ; ret 0xf05
0x000000000003ce43 : add byte ptr [rdi], cl ; mov dh, 0x48 ; add cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003ce23 : add byte ptr [rdi], cl ; mov dh, 0x48 ; add dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003ce63 : add byte ptr [rdi], cl ; mov dh, 0x48 ; add ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003cf03 : add byte ptr [rdi], cl ; mov dh, 0x48 ; or byte ptr [rbp - 0x57f2faf], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003cf43 : add byte ptr [rdi], cl ; mov dh, 0x48 ; or cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003cf23 : add byte ptr [rdi], cl ; mov dh, 0x48 ; or dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040088 : add byte ptr [rdi], cl ; mov dh, 0x70 ; add cl, byte ptr [rbp - 0x57f2faa] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040068 : add byte ptr [rdi], cl ; mov dh, 0x70 ; add dword ptr [rbp - 0x57f2faa], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000400a8 : add byte ptr [rdi], cl ; mov dh, 0x70 ; add ecx, dword ptr [rbp - 0x57f2faa] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040148 : add byte ptr [rdi], cl ; mov dh, 0x70 ; or byte ptr [rbp - 0x57f2faa], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040188 : add byte ptr [rdi], cl ; mov dh, 0x70 ; or cl, byte ptr [rbp - 0x57f2faa] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040168 : add byte ptr [rdi], cl ; mov dh, 0x70 ; or dword ptr [rbp - 0x57f2faa], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000166264 : add byte ptr [rdi], cl ; test byte ptr [rbp + 0x48fffffb], ah ; mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000002820b : add byte ptr [rdi], cl ; test byte ptr [rbp + rdi*8 - 0x7cb70001], dh ; jl 0x2824a ; add byte ptr [rsi + rbx*2 - 0xa], sil ; ret
0x00000000000aed26 : add byte ptr [rdi], cl ; test byte ptr [rbx + 0x45000003], ah ; test ebp, ebp ; mov r10, rbp ; setne dl ; jmp 0xaed56
0x00000000000b1715 : add byte ptr [rdi], cl ; test byte ptr [rbx], ch ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x7b], al ; in eax, dx ; mov r10, rbp ; setne dl ; jmp 0xb1746
0x0000000000105704 : add byte ptr [rdi], cl ; test dword ptr [rbp - 0x41000006], eax ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000105824 : add byte ptr [rdi], cl ; test dword ptr [rbp - 0x41000007], eax ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000025d94 : add byte ptr [rdi], cl ; xchg dl, cl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x3d77f02e], al ; add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x000000000010e3d5 : add byte ptr [rdx + 0x22], bh ; je 0x10e3f6 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000103442 : add byte ptr [rdx + 0x48], bl ; mov eax, dword ptr [rip + 0x2bf345] ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000195727 : add byte ptr [rdx + rax*2 - 0x12], dl ; push qword ptr [rbp + rcx*8 + 0x42e40000] ; out dx, al ; call rsp
0x00000000001ac40b : add byte ptr [rdx + rbp + 0x15700001], dh ; cmc ; call qword ptr [rbx]
0x00000000000253e2 : add byte ptr [rdx + rbp - 0xa], dh ; ret
0x0000000000197f7f : add byte ptr [rdx + rbp - 8], dh ; inc dword ptr [rsi + rax*8 + 0x2ad40001] ; clc ; call rsp
0x0000000000198727 : add byte ptr [rdx + rbp*2 - 7], ah ; push qword ptr [rcx + rdi*8 + 0x6ac40001] ; stc ; jmp rsp
0x0000000000195d47 : add byte ptr [rdx + rbp*2], dl ; out dx, eax ; jmp rsp
0x00000000001a43db : add byte ptr [rdx + rbp*4 - 0x49e00000], al ; out dx, al ; jmp qword ptr [rdx]
0x000000000019734f : add byte ptr [rdx + rbp*4 - 0xa], al ; jmp rsp
0x00000000001a43c3 : add byte ptr [rdx + rbp*4], ch ; add byte ptr [rax - 0x4d], cl ; out dx, al ; jmp rdx
0x00000000001969ff : add byte ptr [rdx + rbp*4], dl ; push qword ptr [rsp + rcx*2 - 0x54fbffff] ; jmp rsp
0x0000000000198ae7 : add byte ptr [rdx + rbp*8 + 0x197cfff9], al ; add al, byte ptr [rax] ; in al, -0x14 ; stc ; jmp rsp
0x0000000000197597 : add byte ptr [rdx + rbp*8 - 0xa], al ; jmp rsp
0x00000000001a835b : add byte ptr [rdx + rbp*8], al ; add byte ptr [rax], al ; adc byte ptr [rcx], ah ; call rsi
0x00000000000d259f : add byte ptr [rdx + rbp], bh ; je 0xd25b6 ; cmp al, 0x3f ; jne 0xd258c ; mov eax, 1 ; ret
0x000000000010fbfb : add byte ptr [rdx + rbx + 0x5b], dh ; xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000984c3 : add byte ptr [rdx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x00000000000ca198 : add byte ptr [rdx - 1], bh ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001180cb : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x3b5a7] ; ret
0x0000000000117f4b : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x3b747] ; ret
0x000000000011800b : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x3e057] ; ret
0x00000000000966d2 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xbcfd0] ; ret
0x0000000000091a12 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xc1c70] ; ret
0x0000000000091362 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xc4d10] ; ret
0x00000000001148ca : add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x11490b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006ccb8 : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013e877 : add byte ptr [rdx], al ; je 0x13e8b4 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000195897 : add byte ptr [rdx], al ; out dx, al ; push qword ptr [rbp + rdx*8 + 0x62640000] ; out dx, al ; call rsp
0x00000000001064a9 : add byte ptr [rdx], cl ; add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000010611f : add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000139f39 : add byte ptr [rsi + 0x14], dh ; xor eax, eax ; add rsp, 0x100 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013a597 : add byte ptr [rsi + 0xe], bh ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000a0c0e : add byte ptr [rsi + 0xf], ah ; je 0xa0c72 ; and byte ptr [rsi + 0xf], ah ; xlatb ; rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x000000000012f191 : add byte ptr [rsi + 4], bh ; mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00000000001ac7eb : add byte ptr [rsi + rbp + 0x1d700001], dl ; cmc ; call qword ptr [rsi]
0x00000000001ac803 : add byte ptr [rsi + rbp + 0x1d780001], ch ; cmc ; jmp qword ptr [rcx]
0x000000000009133f : add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip + 0x107] ; ret
0x00000000000966af : add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip - 0x5269] ; ret
0x00000000000919ef : add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip - 0x5c9] ; ret
0x0000000000117f28 : add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip - 0x86af2] ; ret
0x0000000000117fe8 : add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip - 0x86bb2] ; ret
0x00000000001180a8 : add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip - 0x86c92] ; ret
0x00000000001b07eb : add byte ptr [rsi + rbp*2 + 0x68c00001], dl ; stc ; jmp qword ptr [rsi]
0x0000000000194cdf : add byte ptr [rsi + rbp*2 - 0x16], ah ; jmp rsp
0x00000000001a47f3 : add byte ptr [rsi + rbp*4 - 0x2ea80000], bl ; out dx, al ; call rcx
0x00000000001a47db : add byte ptr [rsi + rbp*4 - 0x2f800000], al ; out dx, al ; jmp rbx
0x0000000000197397 : add byte ptr [rsi + rbp*4 - 0xa], al ; jmp rsp
0x00000000000a0e4b : add byte ptr [rsi - 0x32], dh ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000215ad : add byte ptr [rsi - 0x70], ah ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000039f59 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ba72f : add byte ptr [rsp + rax - 0x7d], dh ; adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001a45e3 : add byte ptr [rsp + rbp*4 - 0x3ae80000], cl ; out dx, al ; call qword ptr [rax]
0x00000000001a458b : add byte ptr [rsp + rbp*4], dh ; add byte ptr [rax], al ; push rax ; ret
0x00000000001b8583 : add byte ptr [rsp + rbp*8], ch ; add dword ptr [rax], eax ; sub byte ptr [rcx - 8], ah ; jmp qword ptr [rbx]
0x000000000010fbfa : add byte ptr gs:[rdx + rbx + 0x5b], dh ; xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000043635 : add byte ptr ss:[rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d7eaa : add ch, al ; add byte ptr [rbp + 0x315bfffb], dl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000e0b60 : add ch, al ; or bl, dil ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x000000000018409d : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x000000000008b981 : add ch, byte ptr [rcx] ; ror byte ptr [rax - 0x75], 1 ; push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x000000000012f1cd : add cl, byte ptr [r8 - 0x75] ; and al, 8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000002bf3b : add cl, byte ptr [rax - 0x73] ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000011bd67 : add cl, byte ptr [rax - 0x75] ; and al, 8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012f1ce : add cl, byte ptr [rax - 0x75] ; and al, 8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000011f947 : add cl, byte ptr [rax - 0x77] ; fucompi st(0) ; add byte ptr [rbp - 0xd], ch ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000008b93b : add cl, byte ptr [rax - 0x7b] ; in eax, dx ; jne 0x8b92a ; test r12, r12 ; jne 0x8b974 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007ee62 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000012b13b : add cl, byte ptr [rax - 0x7d] ; in al, dx ; cmp byte ptr [rax - 1], 0x5b ; pop rbp ; pop r12 ; ret
0x00000000001327e6 : add cl, byte ptr [rbp + 0x31] ; rol byte ptr [rcx - 0x7f], 1 ; loopne 0x13282e ; xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rbp + 0x31] ; ret 0xc149
0x00000000001a1f08 : add cl, byte ptr [rbp + 0xa] ; ret
0x000000000004008c : add cl, byte ptr [rbp - 0x57f2faa] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003ce47 : add cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000d96b8 : add cl, byte ptr [rdi] ; test cl, al ; add al, 0 ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000013d406 : add cl, byte ptr [rdi] ; xchg eax, esp ; rol byte ptr [rbx + 0x597401fa], 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013d1b5 : add cl, byte ptr [rdi] ; xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000001872e9 : add dh, ah ; lcall ptr [rdx + rbp*8 + 0x1a2fff3] ; hlt ; call rbx
0x000000000013a594 : add dh, al ; add byte ptr [rax], al ; jle 0x13a5b4 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000aa497 : add dh, byte ptr [rbp + 0x16] ; movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xaa49c ; ret
0x00000000000aa547 : add dh, byte ptr [rbp + 0x16] ; movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xaa54c ; ret
0x00000000000ac7ef : add dh, byte ptr [rbp + 0x7a] ; test eax, eax ; jne 0xac7db ; mov rax, rdi ; ret
0x000000000007625a : add dh, byte ptr [rbp + rax - 0x7d] ; std ; or dh, byte ptr [rax + rdi*4 + 0x48] ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000007c874 : add dh, byte ptr [rbp + rax - 0x7d] ; std ; or dh, byte ptr [rsp + rdi*2 + 0x40] ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013e878 : add dh, byte ptr [rbp + rbp + 0x48] ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d8ba8 : add dh, byte ptr [rbp - 0x2b] ; jmp 0xd8b74
0x000000000007044e : add dh, byte ptr [rbx + rdx*8 + 0x48] ; add esp, 0x20 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bb63b : add dh, byte ptr [rdx + rbp*8 - 0x75] ; push rsi ; or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x29], dh ; ret
0x00000000000856af : add dh, byte ptr [rdx + rbx + 0x48] ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003b3df : add dl, dh ; movups xmmword ptr [rbx], xmm0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000008194f : add dword ptr [r12 + 0x18], r9d ; cmp rbx, rax ; je 0x8196c ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001b926a : add dword ptr [r15], 3 ; pop rbp ; add dword ptr [rdx], ecx ; ret
0x00000000000d7dc7 : add dword ptr [r8 - 0x75], ecx ; push rbp ; or byte ptr [rcx - 0x75], cl ; je 0xd7e01 ; or byte ptr [rcx], ch ; ret
0x00000000000d087d : add dword ptr [r8 - 0x7d], ecx ; rol dword ptr [rcx], -0x7c ; sal byte ptr [rbp - 0x2b], 0xf6 ; ret 0xf05
0x000000000008410b : add dword ptr [r8], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x00000000000ba732 : add dword ptr [rax + 0x10], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000484eb : add dword ptr [rax + 0x39], ecx ; sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x00000000000d6bc0 : add dword ptr [rax + 1], edi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001a02de : add dword ptr [rax + rbp*2], 0xa ; ret
0x00000000000d9bb8 : add dword ptr [rax - 0x73], ecx ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d7dc8 : add dword ptr [rax - 0x75], ecx ; push rbp ; or byte ptr [rcx - 0x75], cl ; je 0xd7e00 ; or byte ptr [rcx], ch ; ret
0x00000000000a04a5 : add dword ptr [rax - 0x77], ecx ; adc eax, esi ; add byte ptr [rax], al ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000110748 : add dword ptr [rax - 0x77], ecx ; push rbp ; cmp byte ptr [rax - 0x3c41f0e8], cl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007d65c : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000106119 : add dword ptr [rax - 0x77], ecx ; push rdi ; sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000122093 : add dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 + 1], dil ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000098cc8 : add dword ptr [rax - 0x7d], ecx ; out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x0000000000098c08 : add dword ptr [rax - 0x7d], ecx ; out dx, al ; add dword ptr [rbp - 0xf], esi ; xor edi, edi ; mov rax, rdi ; ret
0x00000000000d087e : add dword ptr [rax - 0x7d], ecx ; rol dword ptr [rcx], -0x7c ; sal byte ptr [rbp - 0x2b], 0xf6 ; ret 0xf05
0x00000000000f1761 : add dword ptr [rax], 1 ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001aafbe : add dword ptr [rax], eax ; adc byte ptr [rbp - 0xc], bh ; jmp rdi
0x00000000001986a6 : add dword ptr [rax], eax ; add al, 0x39 ; stc ; inc dword ptr [rbp + rsi*8 + 0x45740001] ; stc ; call rsp
0x0000000000074131 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; test al, 0x28 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000074138 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x00000000001a6fec : add dword ptr [rax], eax ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pushfq ; salc ; add byte ptr [rax], al ; mov byte ptr [rbp - 0xf], al ; call qword ptr [rsi]
0x0000000000050b1b : add dword ptr [rax], eax ; add byte ptr [rax], al ; add ebp, 0x30 ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000002a5eb : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ba7be : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013d7ef : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013e973 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000087de5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000145402 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x88 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000006e361 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x90 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006f8b8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013e893 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x13e874 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000059c63 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov dword ptr [rbp - 0x1090], 0x20 ; jmp rax
0x000000000005a6b6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov dword ptr [rbp - 0x10b0], 0 ; jmp rax
0x00000000000598c9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov dword ptr [rbp - 0x10b4], 0 ; jmp rax
0x000000000005a75a : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov dword ptr [rbp - 0x10b4], 1 ; jmp rax
0x00000000000741a9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001319bf : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rcx ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000008b9de : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000104ffb : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x000000000005590b : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000559db : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008a760 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000299ed : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ce36d : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000bcc0f : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000076925 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000769f5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007def3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000110577 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000008410c : add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x0000000000025f76 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x52880fd2], al ; add dword ptr [rax], eax ; add bh, dh ; ret 0xf800
0x000000000013052a : add dword ptr [rax], eax ; add byte ptr [rbp + 0xf1374d2], al ; mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x00000000001259ac : add dword ptr [rax], eax ; add byte ptr [rbp - 0x2e7af025], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000146670 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x73], cl ; lodsb al, byte ptr [rsi] ; and al, 0x70 ; add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000087687 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x48], bl ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000873df : add dword ptr [rax], eax ; add byte ptr [rbx + 0x48], bl ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000e0a1b : add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0x53], cl ; or byte ptr [rbp - 0x75], cl ; or byte ptr [rax - 0x77], r9b ; ret 0x1bb
0x00000000000fea3b : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x10], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ad399 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x10], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000144a19 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x18], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f5d81 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fb82c : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000121488 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 8], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ad658 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 8], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003ce41 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x48 ; add cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003ce21 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x48 ; add dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003ce61 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x48 ; add ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040086 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x70 ; add cl, byte ptr [rbp - 0x57f2faa] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040066 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x70 ; add dword ptr [rbp - 0x57f2faa], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000400a6 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x70 ; add ecx, dword ptr [rbp - 0x57f2faa] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000012f18f : add dword ptr [rax], eax ; add byte ptr [rsi + 4], bh ; mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000198566 : add dword ptr [rax], eax ; add edi, ecx ; push qword ptr [rsi + rbp*8 + 0x3a40001] ; stc ; jmp rsp
0x0000000000079280 : add dword ptr [rax], eax ; add qword ptr [rbx + 0x18], rbp ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033045 : add dword ptr [rax], eax ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000198236 : add dword ptr [rax], eax ; and al, 0x65 ; clc ; lcall ptr [rbp + rdx*8 + 0x66240001] ; clc ; jmp rsp
0x000000000019710e : add dword ptr [rax], eax ; and al, 0x68 ; idiv bh ; movsb byte ptr [rdi], byte ptr [rsi] ; jnp 0x197125 ; add byte ptr [rbp + rbp*2 - 0xa], dh ; call rsp
0x00000000000fd942 : add dword ptr [rax], eax ; mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fce63 : add dword ptr [rax], eax ; mov eax, dword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f87d9 : add dword ptr [rax], eax ; mov eax, dword ptr [rsp + 8] ; add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001b7a16 : add dword ptr [rax], eax ; sbb byte ptr [rbp - 8], al ; call qword ptr [rdx]
0x000000000019841e : add dword ptr [rax], eax ; test byte ptr [rbp - 0x1b6b0008], dh ; add dword ptr [rax], eax ; mov ah, 0xb6 ; clc ; jmp rsp
0x00000000001963ae : add dword ptr [rax], eax ; xor al, 0x9d ; int1 ; dec esp ; and dword ptr [rcx], eax ; add byte ptr [rbp + rbx*4 - 0xf], al ; jmp rsp
0x000000000011f8f1 : add dword ptr [rax], esp ; je 0x11f8df ; pop rbx ; xor eax, eax ; mov byte ptr [rdx], 0 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000aa807 : add dword ptr [rbp + 0x16], esi ; movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xaa810 ; sub rax, 1 ; ret
0x00000000000aa6b7 : add dword ptr [rbp + 0x16], esi ; movzx edx, byte ptr [rsi + rax + 3] ; test dl, dl ; jne 0xaa6c0 ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000013e7cd : add dword ptr [rbp + 0x18], ebx ; add rsp, 8 ; mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000009bd68 : add dword ptr [rbp + 0x19], ecx ; fisttp dword ptr [rcx - 0x7d] ; ret
0x000000000007fa79 : add dword ptr [rbp + 0x21], ecx ; ret 0x8d4d
0x00000000000422a4 : add dword ptr [rbp + 0x31], eax ; in al, -0x17 ; ret
0x00000000000ad10a : add dword ptr [rbp + 0x31], eax ; sal byte ptr [rcx], 0xc9 ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000ad196 : add dword ptr [rbp + 0x31], eax ; shr byte ptr [rdx], 0x48 ; lea ecx, dword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000016b63b : add dword ptr [rbp + 0x32], esi ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000000d9eca : add dword ptr [rbp + 0x38], eax ; loope 0xd9f4c ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000009a3e2 : add dword ptr [rbp + 0x38], eax ; ret
0x000000000009976a : add dword ptr [rbp + 0x38], eax ; ret 0x7f75
0x000000000012ff85 : add dword ptr [rbp + 0x38], esi ; mov dword ptr [rsi], 7 ; mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x0000000000126849 : add dword ptr [rbp + 0x39020254], ecx ; salc ; ja 0x126842 ; mov eax, 0xffffffff ; ret
0x000000000006d83d : add dword ptr [rbp + 0xf48ff78], ecx ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x000000000006debc : add dword ptr [rbp + 0xf48ff78], ecx ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8504
0x000000000006d62f : add dword ptr [rbp + 0xf48ff7e], ecx ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x0000000000129893 : add dword ptr [rbp + 0xf], eax ; mov dh, 0x7d ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rax]
0x00000000000c4545 : add dword ptr [rbp + 1], ecx ; ret
0x0000000000087930 : add dword ptr [rbp + rcx + 0x48], esi ; sub eax, 8 ; ret
0x000000000006dfa9 : add dword ptr [rbp + rcx*4 + 0x40], eax ; dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4504
0x000000000011caee : add dword ptr [rbp + rcx*4 + 5], ecx ; ret 0x2a87
0x000000000013d372 : add dword ptr [rbp - 0x14], esi ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x00000000000ac155 : add dword ptr [rbp - 0x18], esi ; mov dword ptr [rsi + 4], 0 ; ret
0x00000000000484c8 : add dword ptr [rbp - 0x23], esi ; mov eax, 1 ; ret
0x00000000000ba34d : add dword ptr [rbp - 0x30], esi ; sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000004006c : add dword ptr [rbp - 0x57f2faa], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003ce27 : add dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000011c672 : add dword ptr [rbp - 0x6bf0fdb8], ecx ; ret 0x8b48
0x00000000000974b0 : add dword ptr [rbp - 0x77], ecx ; ret 0xc149
0x00000000000df2b1 : add dword ptr [rbp - 0x7cb7febd], ecx ; ret
0x0000000000107239 : add dword ptr [rbp - 0xc], esi ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000000d81f1 : add dword ptr [rbp - 0xc], esi ; xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xd8193 ; ret
0x0000000000098dcc : add dword ptr [rbp - 0xf], esi ; pop rbx ; pop rbp ; ret
0x0000000000098ccc : add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x0000000000098c0c : add dword ptr [rbp - 0xf], esi ; xor edi, edi ; mov rax, rdi ; ret
0x0000000000140e6b : add dword ptr [rbp - 0xffa7640], eax ; pop rdx ; sub byte ptr [rax], al ; jle 0x140a17 ; jmp 0x140e4e
0x0000000000103349 : add dword ptr [rbp], ebx ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000098731 : add dword ptr [rbp], esp ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000079283 : add dword ptr [rbx + 0x18], ebp ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013eaf5 : add dword ptr [rbx + 0x28], esp ; mov qword ptr [rbx + 0x20], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013eaf4 : add dword ptr [rbx + 0x28], r12d ; mov qword ptr [rbx + 0x20], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001106de : add dword ptr [rbx + 0x38], ebp ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bba4e : add dword ptr [rbx + 0x41], ebx ; mov dword ptr [rbx + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000010a273 : add dword ptr [rbx + rbp], ebp ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000ac6db : add dword ptr [rbx + rcx*4 + 4], eax ; xchg dword ptr [rbp - 0x7b], eax ; sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x00000000000ac7ec : add dword ptr [rcx + 0x39], eax ; add dh, byte ptr [rbp + 0x7a] ; test eax, eax ; jne 0xac7de ; mov rax, rdi ; ret
0x000000000012c1f3 : add dword ptr [rcx + 0x5c], eax ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013d40c : add dword ptr [rcx + rbx*2 + 0x48], esi ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000007927f : add dword ptr [rcx], 0x6b014800 ; sbb byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116fc0 : add dword ptr [rcx], ebx ; ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx - 0x7d], bl ; loopne 0x116fe5 ; pop rbp ; pop r12 ; ret
0x0000000000129e14 : add dword ptr [rcx], edi ; enter -0x4d84, 0x5b ; pop rbp ; pop r12 ; ret
0x0000000000129ea9 : add dword ptr [rcx], edi ; sar byte ptr [rdi - 0x52], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f16bf : add dword ptr [rcx], esi ; ror byte ptr [rcx - 0x77], 0x30 ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000d6bbd : add dword ptr [rdi + 4], 1 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000098d66 : add dword ptr [rdi + rcx - 0x4a], eax ; adc dword ptr [rbp + 0x38], eax ; ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x000000000009868c : add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001b926b : add dword ptr [rdi], 3 ; pop rbp ; add dword ptr [rdx], ecx ; ret
0x0000000000127ab0 : add dword ptr [rdi], ecx ; add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x00000000000d2737 : add dword ptr [rdi], ecx ; mov dh, 0x53 ; add dword ptr [rdx + rdx*8 - 0x76b3188b], eax ; loopne 0xd27af ; pop rbp ; pop r12 ; ret
0x00000000000d273b : add dword ptr [rdx + rdx*8 - 0x76b3188b], eax ; loopne 0xd27ab ; pop rbp ; pop r12 ; ret
0x00000000000ff6ab : add dword ptr [rip - 0x7ab80000], 0x5bd475c0 ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001361a1 : add dword ptr [rsi + 0x27], edi ; add rsp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001360af : add dword ptr [rsi + 0xe], edi ; xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000006f761 : add dword ptr [rsi + rbp + 0x48], esi ; mov eax, edx ; pop rbx ; ret
0x0000000000081950 : add dword ptr [rsp + 0x18], ecx ; cmp rbx, rax ; je 0x8196b ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f8273 : add dword ptr [rsp + rbp + 0x64d8f700], ecx ; mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000001adaa6 : add dword ptr [rsp + rbp*2], 0xa ; ret
0x000000000007927e : add dword ptr cs:[rcx], 0x6b014800 ; sbb byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000124334 : add eax, 0x1024448b ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003b3db : add eax, 0x1576e0 ; movsd qword ptr [rbx], xmm0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000131a7f : add eax, 0x24448b48 ; or byte ptr [rax - 0x77], cl ; fimul dword ptr [rcx + rcx*4 - 0x1a] ; mov rdi, rbp ; call rax
0x0000000000140964 : add eax, 0x286003 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012a1ba : add eax, 0x296c79 ; and dword ptr [rax + 0x40], 0xfffffff9 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000117779 : add eax, 0x2ad9a2 ; pop rbp ; ret
0x00000000001173bc : add eax, 0x2add47 ; add rsp, 0x1000 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010b010 : add eax, 0x2b6207 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000010b003 : add eax, 0x2b6214 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000103446 : add eax, 0x2bf345 ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000102eb9 : add eax, 0x2bf8ca ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010347c : add eax, 0x2c0ddf ; pop rbp ; pop r12 ; ret
0x0000000000102ef9 : add eax, 0x2c12f2 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000100e53 : add eax, 0x2c32a8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000100c63 : add eax, 0x2c345c ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000100b41 : add eax, 0x2c34da ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c517d : add eax, 0x2e ; mov rdx, r14 ; mov rsi, qword ptr [rdi + rax*8] ; mov rdi, rbp ; call 0x913bf
0x00000000000bd497 : add eax, 0x30903c ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008a75b : add eax, 0x339084 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000008040a : add eax, 0x343389 ; add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000001995a5 : add eax, 0x35040002 ; sti ; lcall ptr [rsi + rax + 2] ; add byte ptr [rbp + rsi - 5], dh ; jmp rsp
0x000000000006bc20 : add eax, 0x357acb ; add rsp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000001fa35 : add eax, 0x3a2e66 ; mov qword ptr [rip + 0x3a68c7], rdx ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000009d8e9 : add eax, 0x43b60f44 ; add dword ptr [rbp + 0x38], eax ; ret
0x0000000000127ab2 : add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x00000000001176eb : add eax, 0x5b000000 ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000f114a : add eax, 0x5b000000 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007c876 : add eax, 0x740afd83 ; jl 0x7c8cb ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007625c : add eax, 0x740afd83 ; mov eax, 0x8c48348 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000ff6ac : add eax, 0x85480000 ; sal byte ptr [rbp - 0x2c], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000123dc0 : add eax, 0x89440000 ; clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013650d : add eax, 0x894c0000 ; clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004e294 : add eax, 0x8e7 ; mov dword ptr [rbp - 0x4f0], 1 ; jmp rax
0x0000000000059c98 : add eax, 0x963 ; mov dword ptr [rbp - 0x1098], 1 ; jmp rax
0x000000000002bf1a : add eax, 0xd8658d48 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000fd45e : add eax, 0xd8890000 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000143494 : add eax, 0xd8890000 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013a3b4 : add eax, 0xd8894900 ; mov ecx, r12d ; mov rdi, rbp ; call 0x5665d
0x000000000013a3fc : add eax, 0xd8894900 ; mov rcx, r12 ; mov rdi, rbp ; xor eax, eax ; call 0x5665f
0x0000000000080071 : add eax, 0xf05f883 ; test byte ptr [rbp - 0xa000000], ch ; ret
0x0000000000080c1a : add eax, 0xf05fa83 ; test byte ptr [rbp - 0xa000000], dl ; ret
0x000000000009671f : add eax, 1 ; mov qword ptr [rbx], rax ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000ac72e : add eax, 4 ; mov qword ptr [r12], rax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000131a16 : add eax, 4 ; mov qword ptr [rbx + 0x20], rax ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000ff87d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x2d], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001439f9 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000107800 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000116def : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x14], dh ; mov eax, r11d ; and eax, 0xc ; cmp eax, 4 ; je 0x116e10 ; ret
0x0000000000116d8c : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x19], dh ; and r11d, 0xffffffbb ; cmp r11d, 0xa ; je 0x116dab ; ret
0x00000000000258af : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x5677f02e], al ; add eax, dword ptr [rax] ; add bh, dh ; ret 0xf800
0x00000000000aed2a : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x7b], al ; in eax, dx ; mov r10, rbp ; setne dl ; jmp 0xaed52
0x00000000000b1719 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x7b], al ; in eax, dx ; mov r10, rbp ; setne dl ; jmp 0xb1742
0x00000000000d0878 : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x41 ; add dword ptr [rax - 0x7d], ecx ; rol dword ptr [rcx], -0x7c ; sal byte ptr [rbp - 0x2b], 0xf6 ; ret 0xf05
0x00000000000cf008 : add eax, dword ptr [rax] ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000007ef1a : add eax, dword ptr [rbp + 0x10] ; mov qword ptr [rbp + 8], rax ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000007eee9 : add eax, dword ptr [rbp + 0x18] ; mov qword ptr [rbp + 8], rax ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012caa5 : add eax, dword ptr [rbp + 0x31] ; ror byte ptr [rcx + rcx*4 - 0xf], 0x4c ; mov edi, ebp ; call r12
0x0000000000132b96 : add eax, dword ptr [rbp + 0x481574c0] ; add esp, 8 ; mov eax, 1 ; pop rbx ; pop rbp ; ret
0x0000000000132ad6 : add eax, dword ptr [rbp - 0x47ea8b40] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000801b9 : add eax, dword ptr [rbp] ; cmp r14, rax ; jne 0x8019a ; mov rdi, r12 ; neg rdi ; call qword ptr [r15]
0x00000000001adaa2 : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rsp + rbp*2], 0xa ; ret
0x0000000000097d40 : add eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001181a7 : add eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000005a660 : add eax, ecx ; mov dword ptr [rbp - 0x1080], 1 ; jmp rax
0x0000000000059c09 : add eax, ecx ; mov dword ptr [rbp - 0x1088], 1 ; jmp rax
0x000000000005a9e2 : add eax, ecx ; mov dword ptr [rbp - 0x10a8], 1 ; jmp rax
0x000000000005a92b : add eax, ecx ; mov dword ptr [rbp - 0x10b0], 1 ; jmp rax
0x000000000005aa34 : add eax, ecx ; mov dword ptr [rbp - 0x10b8], 1 ; jmp rax
0x000000000004e1fe : add eax, ecx ; mov dword ptr [rbp - 0x4a8], 1 ; jmp rax
0x000000000004e858 : add eax, ecx ; mov dword ptr [rbp - 0x4f8], 1 ; jmp rax
0x000000000004ef84 : add eax, ecx ; mov dword ptr [rbp - 0x508], 1 ; jmp rax
0x000000000004f0a7 : add eax, ecx ; mov dword ptr [rbp - 0x510], 1 ; jmp rax
0x000000000004efe0 : add eax, ecx ; mov dword ptr [rbp - 0x518], 1 ; jmp rax
0x0000000000180db0 : add eax, esi ; sbb dword ptr [rcx], ebp ; jb 0x180def ; pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000050b1f : add ebp, 0x30 ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000050b58 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000129e12 : add ebp, 1 ; cmp eax, ecx ; jl 0x129dd6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000158ee9 : add ebp, dword ptr [rbp + 0x63490003] ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000129ea7 : add ebx, 1 ; cmp eax, edx ; jg 0x129e67 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000173393 : add ebx, 8 ; cmp rbx, rbp ; jb 0x17339e ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012ae86 : add ebx, 8 ; test rdi, rdi ; jne 0x12ae86 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009829d : add ebx, eax ; jne 0x98293 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000098dc6 : add ecx, 1 ; sub rax, 1 ; jne 0x98dcb ; pop rbx ; pop rbp ; ret
0x000000000008bb63 : add ecx, dword ptr [rax - 0x77] ; imul ecx, dword ptr [rax], -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001a5cbc : add ecx, dword ptr [rbp + 0x4c0002] ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x00000000000400ac : add ecx, dword ptr [rbp - 0x57f2faa] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003ce67 : add ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000146739 : add ecx, dword ptr [rbp - 0x88] ; call rax
0x000000000012e64f : add edi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000001307a2 : add edi, 0x23b0 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000000bba4c : add edi, 1 ; pop rbx ; mov dword ptr [r11 + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000170daf : add edi, dword ptr [rbp + 0x10] ; call r12
0x0000000000198569 : add edi, ecx ; push qword ptr [rsi + rbp*8 + 0x3a40001] ; stc ; jmp rsp
0x0000000000127aae : add edx, 1 ; syscall ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000004888d : add edx, eax ; mov qword ptr [rdi + 8], r10 ; mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000007847e : add edx, ecx ; mov qword ptr [rbp + 0x30], rdx ; mov qword ptr [rbx + 0x18], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f8033 : add edx, ecx ; test rdi, rdi ; cmovne eax, edx ; cmp rbp, rsi ; ja 0xf7fdf ; pop rbx ; pop rbp ; ret
0x000000000013dd5e : add esi, dword ptr [rbp - 0x11] ; mov rsi, r13 ; mov rdi, rbp ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x0000000000118362 : add esi, dword ptr [rbp - 0x6d] ; mov rax, rdi ; ret
0x00000000000fdf8a : add esi, dword ptr [rbx + rdx + 0x48] ; add esp, 0x10 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000126943 : add esi, eax ; add al, byte ptr [r8] ; mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000102ef4 : add esp, 0x10 ; lea rax, qword ptr [rip + 0x2c12f2] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e9711 : add esp, 0x10 ; mov eax, 0xc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000076423 : add esp, 0x10 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000076921 : add esp, 0x10 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000076906 : add esp, 0x10 ; mov eax, 2 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001071c1 : add esp, 0x10 ; mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c9ae7 : add esp, 0x10 ; mov eax, r14d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000be355 : add esp, 0x10 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002a5f0 : add esp, 0x10 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008879c : add esp, 0x10 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000088e49 : add esp, 0x10 ; mov rsi, r12 ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000000888b9 : add esp, 0x10 ; mov rsi, r12 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000116fc4 : add esp, 0x10 ; pop rbx ; and eax, 0xc ; pop rbp ; pop r12 ; ret
0x00000000000bcdcd : add esp, 0x10 ; pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008b52e : add esp, 0x10 ; pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00000000000856b3 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000048549 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007693d : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003b01c : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000be4e1 : add esp, 0x10 ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002a693 : add esp, 0x10 ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000139f3f : add esp, 0x100 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f9877 : add esp, 0x1000 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001173c2 : add esp, 0x1000 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006bb69 : add esp, 0x1008 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000011ab02 : add esp, 0x108 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dbf8c : add esp, 0x118 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000be5f2 : add esp, 0x128 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000078330 : add esp, 0x130 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003c9a0 : add esp, 0x138 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e4d7b : add esp, 0x148 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013a255 : add esp, 0x158 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013a393 : add esp, 0x158 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010186d : add esp, 0x168 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000453a4 : add esp, 0x170 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f11b2 : add esp, 0x178 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000097d3c : add esp, 0x18 ; add rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001196e8 : add esp, 0x18 ; div rbp ; mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000079e9e : add esp, 0x18 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00000000000769f1 : add esp, 0x18 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000769d8 : add esp, 0x18 ; mov eax, 2 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f1146 : add esp, 0x18 ; mov eax, 5 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ea074 : add esp, 0x18 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000132e0a : add esp, 0x18 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013a632 : add esp, 0x18 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000c8cc0 : add esp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000122930 : add esp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000005370d : add esp, 0x18 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000013aece : add esp, 0x18 ; mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007e9f9 : add esp, 0x18 ; mov eax, r15d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006d4c9 : add esp, 0x18 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000037539 : add esp, 0x18 ; mov rax, r15 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008a4fe : add esp, 0x18 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000079bf6 : add esp, 0x18 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003c24d : add esp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000a0f16 : add esp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001196bb : add esp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000002e733 : add esp, 0x18 ; mov rax, rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000080410 : add esp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000070bb1 : add esp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000013d45a : add esp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000006d559 : add esp, 0x18 ; pop rbx ; mov rax, r12 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000001fd6e : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004b237 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003b3e5 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000007ad9b : add esp, 0x18 ; pop rbx ; pop rbp ; sub rax, r12 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007d9f6 : add esp, 0x18 ; pop rbx ; pop rbp ; sub rax, r14 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007dbaa : add esp, 0x18 ; pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d6daa : add esp, 0x18 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000037524 : add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000076a05 : add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000079e71 : add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000080451 : add esp, 0x18 ; xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000014455d : add esp, 0x188 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000112c52 : add esp, 0x190 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000feaeb : add esp, 0x190 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f1bd2 : add esp, 0x198 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f9c23 : add esp, 0x198 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001385e7 : add esp, 0x1b8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ad23 : add esp, 0x1c8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e2fba : add esp, 0x1d8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000467a6 : add esp, 0x1f8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000070452 : add esp, 0x20 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013daee : add esp, 0x20 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013638a : add esp, 0x20 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033253 : add esp, 0x20 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008b0b3 : add esp, 0x20 ; mov rax, r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013bcaa : add esp, 0x20 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013c951 : add esp, 0x20 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006f1f6 : add esp, 0x20 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008008a : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000070464 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cba66 : add esp, 0x20 ; sar eax, 0x1f ; lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000080aad : add esp, 0x20 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000136419 : add esp, 0x20 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ccb6 : add esp, 0x200 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000130ac6 : add esp, 0x2270 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000781c4 : add esp, 0x228 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000072d6d : add esp, 0x238 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000037136 : add esp, 0x240 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010e88e : add esp, 0x268 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f16d1 : add esp, 0x28 ; mov eax, 5 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e9bfd : add esp, 0x28 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002235a : add esp, 0x28 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000473ad : add esp, 0x28 ; mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f0e4f : add esp, 0x28 ; mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007f482 : add esp, 0x28 ; mov eax, r15d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008ad42 : add esp, 0x28 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008b214 : add esp, 0x28 ; mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e7364 : add esp, 0x28 ; mov rax, r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e7621 : add esp, 0x28 ; mov rax, r15 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006fbfd : add esp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006bbe6 : add esp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000104579 : add esp, 0x28 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003b821 : add esp, 0x28 ; neg rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e1e66 : add esp, 0x28 ; pop rbx ; pop rbp ; mov rax, rcx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004251f : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; fmul st(0) ; ret
0x0000000000042497 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x0000000000021417 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002027a : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000044fa5 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000073bbd : add esp, 0x28 ; pop rbx ; pop rbp ; sub rax, r12 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000073d35 : add esp, 0x28 ; pop rbx ; pop rbp ; sub rax, r14 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dbd3e : add esp, 0x28 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cf961 : add esp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f75f6 : add esp, 0x2d8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001304fa : add esp, 0x30 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008926e : add esp, 0x30 ; mov rax, r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000136271 : add esp, 0x30 ; pop rbx ; movzx eax, al ; pop rbp ; pop r12 ; ret
0x00000000000793bb : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012433a : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079807 : add esp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000124369 : add esp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000072ce5 : add esp, 0x330 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000119bb1 : add esp, 0x338 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000b1ad4 : add esp, 0x3638 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000043632 : add esp, 0x3648 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007e7b0 : add esp, 0x38 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e91be : add esp, 0x38 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000110b09 : add esp, 0x38 ; mov eax, r14d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000014108e : add esp, 0x38 ; mov eax, r15d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fc13c : add esp, 0x38 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000086fec : add esp, 0x38 ; mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000111114 : add esp, 0x38 ; mov rax, r15 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000029cfc : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cf00b : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000c94a1 : add esp, 0x38 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006b90c : add esp, 0x400 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ffde9 : add esp, 0x400 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000137755 : add esp, 0x418 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011f6f4 : add esp, 0x438 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000137368 : add esp, 0x438 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003fbcd : add esp, 0x448 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000133376 : add esp, 0x468 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002396f : add esp, 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d9d73 : add esp, 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000047bd4 : add esp, 0x48 ; mov eax, r10d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000141d14 : add esp, 0x48 ; mov eax, r15d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012e346 : add esp, 0x48 ; mov eax, r9d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000306a8 : add esp, 0x48 ; mov rax, r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000085b83 : add esp, 0x48 ; mov rax, r15 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000032e4a : add esp, 0x48 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000049725 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f0d8 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000127ab4 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000007610c : add esp, 0x48 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f0fc : add esp, 0x48 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001210bb : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000acbbb : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000143491 : add esp, 0x518 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000024267 : add esp, 0x58 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fa8e9 : add esp, 0x58 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000024c7a : add esp, 0x58 ; mov eax, r10d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000023cc1 : add esp, 0x58 ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000028757 : add esp, 0x58 ; mov eax, r15d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ddcfa : add esp, 0x58 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000722e1 : add esp, 0x58 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000090429 : add esp, 0x58 ; mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012b9a3 : add esp, 0x58 ; pop rbx ; neg eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002468d : add esp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000128a5b : add esp, 0x58 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013b40c : add esp, 0x5b8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000135310 : add esp, 0x60 ; mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ad15a : add esp, 0x60 ; mov rax, -1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e94a : add esp, 0x60 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000acdb8 : add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f8767 : add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ad1e6 : add esp, 0x60 ; pop rbx ; pop rbp ; sub rax, r12 ; pop r12 ; ret
0x00000000000acfc9 : add esp, 0x60 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fb90 : add esp, 0x608 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000136ba0 : add esp, 0x68 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000055eb7 : add esp, 0x68 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000026601 : add esp, 0x68 ; mov eax, r10d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dd569 : add esp, 0x68 ; mov eax, r15d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000029ece : add esp, 0x68 ; mov eax, r9d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ea37e : add esp, 0x68 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000005387f : add esp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008401f : add esp, 0x68 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000140ac4 : add esp, 0x78 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013552a : add esp, 0x78 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000048b89 : add esp, 0x78 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010723d : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000122929 : add esp, 0x80 ; add rsp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000053706 : add esp, 0x80 ; add rsp, 0x18 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000008aef7 : add esp, 0x80 ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007177c : add esp, 0x80 ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000006ea26 : add esp, 0x80 ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006c717 : add esp, 0x80 ; add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000003a449 : add esp, 0x80 ; add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000000711b8 : add esp, 0x80 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000bdffe : add esp, 0x80 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000135ff1 : add esp, 0x80 ; mov rax, qword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000808f6 : add esp, 0x80 ; mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000070120 : add esp, 0x80 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000047ee3 : add esp, 0x80 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000118b47 : add esp, 0x80 ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x000000000006edf5 : add esp, 0x80 ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x00000000001027ac : add esp, 0x80 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000097816 : add esp, 0x828 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000902d0 : add esp, 0x848 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000096cc7 : add esp, 0x868 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000035c24 : add esp, 0x88 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000035c0d : add esp, 0x88 ; neg ebx ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000ca859 : add esp, 0x88 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000036f3c : add esp, 0x88 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000036fac : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x00000000000d51fd : add esp, 0x8f8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000102afc : add esp, 0x90 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011fb1a : add esp, 0x90 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000035de1 : add esp, 0x90 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f8ac9 : add esp, 0x98 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c86c7 : add esp, 0x98 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000029622 : add esp, 0x98 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007b3e5 : add esp, 0x98 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000036ca1 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000c9007 : add esp, 0x98 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000029b4a : add esp, 0xa0 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fa333 : add esp, 0xa0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000029b1a : add esp, 0xa0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013a141 : add esp, 0xa0 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006bd92 : add esp, 0xa8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013942f : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x00000000000cd81c : add esp, 0xb0 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006c1e1 : add esp, 0xb8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007558b : add esp, 0xc8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010b238 : add esp, 0xc8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011883a : add esp, 0xd0 ; mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000106b11 : add esp, 0xd0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000106975 : add esp, 0xd0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001189f3 : add esp, 0xd8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000011066d : add esp, 0xd8 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e208c : add esp, 0xd8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010631b : add esp, 0xd8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010645e : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x00000000001278a4 : add esp, 0xe0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007805c : add esp, 0xf0 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000715ed : add esp, 0xf8 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007859c : add esp, 0xf8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006cb6d : add esp, 0xf8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000050b55 : add esp, 8 ; add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000001181a3 : add esp, 8 ; add rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012679d : add esp, 8 ; lea eax, dword ptr [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x000000000012e661 : add esp, 8 ; mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x000000000011b139 : add esp, 8 ; mov eax, 0xca ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003a09f : add esp, 8 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000071849 : add esp, 8 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000079d92 : add esp, 8 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000110573 : add esp, 8 ; mov eax, 1 ; pop rbx ; pop rbp ; ret
0x00000000001176e7 : add esp, 8 ; mov eax, 5 ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000114b49 : add esp, 8 ; mov eax, 7 ; pop rbx ; pop rbp ; ret
0x0000000000107952 : add esp, 8 ; mov eax, 9 ; pop rbx ; pop rbp ; ret
0x0000000000050a9f : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000f709d : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000070a79 : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007183d : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000557c7 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000045f14 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006f351 : add esp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006c71e : add esp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000012bc77 : add esp, 8 ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001351a1 : add esp, 8 ; mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000712e7 : add esp, 8 ; mov edx, 0xffffffff ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000137d71 : add esp, 8 ; mov edx, r13d ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c8f54 : add esp, 8 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006e6b7 : add esp, 8 ; mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002d6ff : add esp, 8 ; mov rax, r15 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002e12e : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000791f3 : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008fc10 : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000105530 : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000039a57 : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006f4c5 : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000328f4 : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007fe60 : add esp, 8 ; mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000032821 : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8b29 : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000869e9 : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000071007 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003a450 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000098470 : add esp, 8 ; mov rbp, rdx ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000006f4d9 : add esp, 8 ; mov rbx, r13 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008822f : add esp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000012fe09 : add esp, 8 ; mov rdi, rbp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000073671 : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000131c67 : add esp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000072c27 : add esp, 8 ; pop rbx ; mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000130f29 : add esp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000086a8e : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000002bb67 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000033048 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000215b1 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ba2eb : add esp, 8 ; sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001176ce : add esp, 8 ; xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000002bb9f : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000022688 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000079671 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000f704a : add esp, 8 ; xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000098521 : add esp, eax ; jne 0x98518 ; mov qword ptr [rbp], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001872e5 : add esp, esi ; push qword ptr [rdx + 2] ; hlt ; lcall ptr [rdx + rbp*8 + 0x1a2fff3] ; hlt ; call rbx
0x00000000000f1760 : add qword ptr [r8], 1 ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011f8f0 : add qword ptr [rax], r12 ; je 0x11f8e0 ; pop rbx ; xor eax, eax ; mov byte ptr [rdx], 0 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013e7cc : add qword ptr [rbp + 0x18], rbx ; add rsp, 8 ; mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000003ce26 : add qword ptr [rbp - 0x57f2faf], rcx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000098730 : add qword ptr [rbp], r12 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000079282 : add qword ptr [rbx + 0x18], rbp ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001106dd : add qword ptr [rbx + 0x38], rbp ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004888c : add r10, rax ; mov qword ptr [rdi + 8], r10 ; mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000146738 : add r9, qword ptr [rbp - 0x88] ; call rax
0x000000000011f946 : add r9b, byte ptr [r8 - 0x77] ; fucompi st(0) ; add byte ptr [rbp - 0xd], ch ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000000c517c : add rax, 0x2e ; mov rdx, r14 ; mov rsi, qword ptr [rdi + rax*8] ; mov rdi, rbp ; call 0x913c0
0x000000000009671e : add rax, 1 ; mov qword ptr [rbx], rax ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000ac72d : add rax, 4 ; mov qword ptr [r12], rax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000131a15 : add rax, 4 ; mov qword ptr [rbx + 0x20], rax ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000007ef19 : add rax, qword ptr [rbp + 0x10] ; mov qword ptr [rbp + 8], rax ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000007eee8 : add rax, qword ptr [rbp + 0x18] ; mov qword ptr [rbp + 8], rax ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000801b8 : add rax, qword ptr [rbp] ; cmp r14, rax ; jne 0x8019b ; mov rdi, r12 ; neg rdi ; call qword ptr [r15]
0x0000000000097d3f : add rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001181a6 : add rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000005a65f : add rax, rcx ; mov dword ptr [rbp - 0x1080], 1 ; jmp rax
0x0000000000059c08 : add rax, rcx ; mov dword ptr [rbp - 0x1088], 1 ; jmp rax
0x000000000005a9e1 : add rax, rcx ; mov dword ptr [rbp - 0x10a8], 1 ; jmp rax
0x000000000005a92a : add rax, rcx ; mov dword ptr [rbp - 0x10b0], 1 ; jmp rax
0x000000000005aa33 : add rax, rcx ; mov dword ptr [rbp - 0x10b8], 1 ; jmp rax
0x000000000004e1fd : add rax, rcx ; mov dword ptr [rbp - 0x4a8], 1 ; jmp rax
0x000000000004e857 : add rax, rcx ; mov dword ptr [rbp - 0x4f8], 1 ; jmp rax
0x000000000004ef83 : add rax, rcx ; mov dword ptr [rbp - 0x508], 1 ; jmp rax
0x000000000004f0a6 : add rax, rcx ; mov dword ptr [rbp - 0x510], 1 ; jmp rax
0x000000000004efdf : add rax, rcx ; mov dword ptr [rbp - 0x518], 1 ; jmp rax
0x0000000000129e11 : add rbp, 1 ; cmp eax, ecx ; jl 0x129dd7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c550a : add rbp, r14 ; call 0x91815
0x0000000000129ea6 : add rbx, 1 ; cmp eax, edx ; jg 0x129e68 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000173392 : add rbx, 8 ; cmp rbx, rbp ; jb 0x17339f ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012ae85 : add rbx, 8 ; test rdi, rdi ; jne 0x12ae87 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009829c : add rbx, rax ; jne 0x98294 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000098dc5 : add rcx, 1 ; sub rax, 1 ; jne 0x98dcc ; pop rbx ; pop rbp ; ret
0x000000000003ce66 : add rcx, qword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000012e64e : add rdi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000001307a1 : add rdi, 0x23b0 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x0000000000127aad : add rdx, 1 ; syscall ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000007847d : add rdx, rcx ; mov qword ptr [rbp + 0x30], rdx ; mov qword ptr [rbx + 0x18], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000102ef3 : add rsp, 0x10 ; lea rax, qword ptr [rip + 0x2c12f2] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000076422 : add rsp, 0x10 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001071c0 : add rsp, 0x10 ; mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c9ae6 : add rsp, 0x10 ; mov eax, r14d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000be354 : add rsp, 0x10 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002a5ef : add rsp, 0x10 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008879b : add rsp, 0x10 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000088e48 : add rsp, 0x10 ; mov rsi, r12 ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000000888b8 : add rsp, 0x10 ; mov rsi, r12 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000116fc3 : add rsp, 0x10 ; pop rbx ; and eax, 0xc ; pop rbp ; pop r12 ; ret
0x000000000008b52d : add rsp, 0x10 ; pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00000000000856b2 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000048548 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007693c : add rsp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003b01b : add rsp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002a692 : add rsp, 0x10 ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000139f3e : add rsp, 0x100 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f9876 : add rsp, 0x1000 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001173c1 : add rsp, 0x1000 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006bb68 : add rsp, 0x1008 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007832f : add rsp, 0x130 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013a254 : add rsp, 0x158 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013a392 : add rsp, 0x158 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000453a3 : add rsp, 0x170 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001196e7 : add rsp, 0x18 ; div rbp ; mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000079e9d : add rsp, 0x18 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00000000000769f0 : add rsp, 0x18 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000769d7 : add rsp, 0x18 ; mov eax, 2 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f1145 : add rsp, 0x18 ; mov eax, 5 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ea073 : add rsp, 0x18 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000132e09 : add rsp, 0x18 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013a631 : add rsp, 0x18 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000c8cbf : add rsp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012292f : add rsp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000005370c : add rsp, 0x18 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000006d4c8 : add rsp, 0x18 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000079bf5 : add rsp, 0x18 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000a0f15 : add rsp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001196ba : add rsp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000008040f : add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000070bb0 : add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000013d459 : add rsp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000006d558 : add rsp, 0x18 ; pop rbx ; mov rax, r12 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000001fd6d : add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004b236 : add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003b3e4 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000d6da9 : add rsp, 0x18 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000037523 : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000076a04 : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000079e70 : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000080450 : add rsp, 0x18 ; xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000112c51 : add rsp, 0x190 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000feaea : add rsp, 0x190 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f9c22 : add rsp, 0x198 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000070451 : add rsp, 0x20 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000136389 : add rsp, 0x20 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033252 : add rsp, 0x20 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008b0b2 : add rsp, 0x20 ; mov rax, r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013bca9 : add rsp, 0x20 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013c950 : add rsp, 0x20 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006f1f5 : add rsp, 0x20 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000080089 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000070463 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cba65 : add rsp, 0x20 ; sar eax, 0x1f ; lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000080aac : add rsp, 0x20 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000136418 : add rsp, 0x20 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ccb5 : add rsp, 0x200 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000130ac5 : add rsp, 0x2270 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000781c3 : add rsp, 0x228 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000072d6c : add rsp, 0x238 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000037135 : add rsp, 0x240 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010e88d : add rsp, 0x268 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f16d0 : add rsp, 0x28 ; mov eax, 5 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e9bfc : add rsp, 0x28 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000022359 : add rsp, 0x28 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f0e4e : add rsp, 0x28 ; mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006bbe5 : add rsp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000004251e : add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; fmul st(0) ; ret
0x0000000000042496 : add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x0000000000021416 : add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000020279 : add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000044fa4 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000dbd3d : add rsp, 0x28 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cf960 : add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001304f9 : add rsp, 0x30 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008926d : add rsp, 0x30 ; mov rax, r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000136270 : add rsp, 0x30 ; pop rbx ; movzx eax, al ; pop rbp ; pop r12 ; ret
0x00000000000793ba : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000124339 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079806 : add rsp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000124368 : add rsp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000072ce4 : add rsp, 0x330 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007e7af : add rsp, 0x38 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e91bd : add rsp, 0x38 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000029cfb : add rsp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cf00a : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000c94a0 : add rsp, 0x38 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006b90b : add rsp, 0x400 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000137754 : add rsp, 0x418 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000137367 : add rsp, 0x438 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002396e : add rsp, 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d9d72 : add rsp, 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000049724 : add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f0d7 : add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000127ab3 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000007610b : add rsp, 0x48 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f0fb : add rsp, 0x48 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001210ba : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000acbba : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000143490 : add rsp, 0x518 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000024266 : add rsp, 0x58 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fa8e8 : add rsp, 0x58 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012b9a2 : add rsp, 0x58 ; pop rbx ; neg eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002468c : add rsp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000128a5a : add rsp, 0x58 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013530f : add rsp, 0x60 ; mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ad159 : add rsp, 0x60 ; mov rax, -1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e949 : add rsp, 0x60 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000acdb7 : add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f8766 : add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ad1e5 : add rsp, 0x60 ; pop rbx ; pop rbp ; sub rax, r12 ; pop r12 ; ret
0x00000000000acfc8 : add rsp, 0x60 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fb8f : add rsp, 0x608 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000136b9f : add rsp, 0x68 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000055eb6 : add rsp, 0x68 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ea37d : add rsp, 0x68 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000005387e : add rsp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008401e : add rsp, 0x68 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000140ac3 : add rsp, 0x78 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000048b88 : add rsp, 0x78 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010723c : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000122928 : add rsp, 0x80 ; add rsp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000053705 : add rsp, 0x80 ; add rsp, 0x18 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000008aef6 : add rsp, 0x80 ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007177b : add rsp, 0x80 ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000006ea25 : add rsp, 0x80 ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006c716 : add rsp, 0x80 ; add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000003a448 : add rsp, 0x80 ; add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000000bdffd : add rsp, 0x80 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000808f5 : add rsp, 0x80 ; mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007011f : add rsp, 0x80 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000047ee2 : add rsp, 0x80 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000118b46 : add rsp, 0x80 ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x000000000006edf4 : add rsp, 0x80 ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x00000000001027ab : add rsp, 0x80 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000035c23 : add rsp, 0x88 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000035c0c : add rsp, 0x88 ; neg ebx ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000036f3b : add rsp, 0x88 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000036fab : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000102afb : add rsp, 0x90 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011fb19 : add rsp, 0x90 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000035de0 : add rsp, 0x90 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f8ac8 : add rsp, 0x98 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c86c6 : add rsp, 0x98 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000007b3e4 : add rsp, 0x98 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000036ca0 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000c9006 : add rsp, 0x98 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000029b49 : add rsp, 0xa0 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fa332 : add rsp, 0xa0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000029b19 : add rsp, 0xa0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013942e : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x00000000000cd81b : add rsp, 0xb0 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010b237 : add rsp, 0xc8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000118839 : add rsp, 0xd0 ; mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000106b10 : add rsp, 0xd0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000106974 : add rsp, 0xd0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001189f2 : add rsp, 0xd8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000011066c : add rsp, 0xd8 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010631a : add rsp, 0xd8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010645d : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x00000000001278a3 : add rsp, 0xe0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000715ec : add rsp, 0xf8 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006cb6c : add rsp, 0xf8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000050b54 : add rsp, 8 ; add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000001181a2 : add rsp, 8 ; add rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012679c : add rsp, 8 ; lea eax, dword ptr [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x000000000012e660 : add rsp, 8 ; mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x000000000011b138 : add rsp, 8 ; mov eax, 0xca ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003a09e : add rsp, 8 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000071848 : add rsp, 8 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000079d91 : add rsp, 8 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000110572 : add rsp, 8 ; mov eax, 1 ; pop rbx ; pop rbp ; ret
0x00000000001176e6 : add rsp, 8 ; mov eax, 5 ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000114b48 : add rsp, 8 ; mov eax, 7 ; pop rbx ; pop rbp ; ret
0x0000000000107951 : add rsp, 8 ; mov eax, 9 ; pop rbx ; pop rbp ; ret
0x0000000000050a9e : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000f709c : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000070a78 : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007183c : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000557c6 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000045f13 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006f350 : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006c71d : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000001351a0 : add rsp, 8 ; mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000137d70 : add rsp, 8 ; mov edx, r13d ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000791f2 : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008fc0f : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000006f4c4 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000328f3 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007fe5f : add rsp, 8 ; mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c8b28 : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000869e8 : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000071006 : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003a44f : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000009846f : add rsp, 8 ; mov rbp, rdx ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000006f4d8 : add rsp, 8 ; mov rbx, r13 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008822e : add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000012fe08 : add rsp, 8 ; mov rdi, rbp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000073670 : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000131c66 : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000072c26 : add rsp, 8 ; pop rbx ; mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000130f28 : add rsp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000086a8d : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000002bb66 : add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000033047 : add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000215b0 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ba2ea : add rsp, 8 ; sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001176cd : add rsp, 8 ; xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000002bb9e : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000022687 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000079670 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000f7049 : add rsp, 8 ; xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000984c2 : and al, 0 ; je 0x984d9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000172099 : and al, 0 ; mov qword ptr [r12], rbx ; mov rdx, qword ptr [rax + rbp*8] ; test rdx, rdx ; je 0x1720b9 ; call rdx
0x0000000000124337 : and al, 0x10 ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000131199 : and al, 0x10 ; add rsp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fcd33 : and al, 0x10 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012e71a : and al, 0x10 ; mov rdi, rbp ; call r14
0x00000000000ad45a : and al, 0x10 ; mov rsi, qword ptr [rsp + 0x18] ; mov rdx, r13 ; mov rdi, rbp ; call rbx
0x00000000000ad71a : and al, 0x10 ; mov rsi, qword ptr [rsp + 0x18] ; mov rdx, r14 ; mov rdi, rbp ; call rbx
0x000000000008197c : and al, 0x14 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; mov dword ptr [r12 + 0x10], eax ; pop r12 ; ret
0x0000000000088f68 : and al, 0x14 ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002a7c5 : and al, 0x18 ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c9477 : and al, 0x18 ; add rsp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008822c : and al, 0x18 ; add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000086a8b : and al, 0x18 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000081952 : and al, 0x18 ; cmp rbx, rax ; je 0x81969 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000081951 : and al, 0x18 ; cmp rbx, rax ; je 0x8196a ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000131b8b : and al, 0x18 ; mov rcx, qword ptr [rsp + 8] ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000ad45f : and al, 0x18 ; mov rdx, r13 ; mov rdi, rbp ; call rbx
0x00000000000ad71f : and al, 0x18 ; mov rdx, r14 ; mov rdi, rbp ; call rbx
0x000000000013a9b4 : and al, 0x1a ; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000135a81 : and al, 0x1c ; add rsp, 0x78 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f0d3 : and al, 0x1c ; pop rdx ; pop rcx ; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001463f5 : and al, 0x1f ; add byte ptr [rbp + 0x16], dh ; add rsp, 0x38 ; ret
0x00000000000acdb5 : and al, 0x20 ; add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ccaa6 : and al, 0x28 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000078404 : and al, 0x28 ; mov rax, r13 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ad5ec : and al, 0x28 ; mov rdi, rbp ; call rbx
0x000000000013a776 : and al, 0x2a ; add rsp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012cf86 : and al, 0x2c ; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000453a1 : and al, 0x30 ; add rsp, 0x170 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ad1e3 : and al, 0x30 ; add rsp, 0x60 ; pop rbx ; pop rbp ; sub rax, r12 ; pop r12 ; ret
0x00000000000783d1 : and al, 0x30 ; mov qword ptr [rbp + 0x18], rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013846d : and al, 0x30 ; mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x000000000011d0f2 : and al, 0x34 ; add rsp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000253e0 : and al, 0x38 ; add byte ptr [rdx + rbp - 0xa], dh ; ret
0x0000000000048b86 : and al, 0x38 ; add rsp, 0x78 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000137d57 : and al, 0x38 ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000136b8f : and al, 0x38 ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x136bad ; mov rdi, rbp ; call rax
0x0000000000136b8e : and al, 0x38 ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x136bae ; mov rdi, rbp ; call rax
0x000000000011b9c3 : and al, 0x3c ; add rsp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012a181 : and al, 0x40 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004a7ab : and al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cd252 : and al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000070462 : and al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dcfcb : and al, 0x48 ; add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011b0f3 : and al, 0x48 ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013bae3 : and al, 0x48 ; mov dword ptr [rbx + 8], eax ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bd016 : and al, 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ac734 : and al, 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000017209e : and al, 0x48 ; mov edx, dword ptr [rax + rbp*8] ; test rdx, rdx ; je 0x1720b4 ; call rdx
0x00000000000f175f : and al, 0x49 ; add dword ptr [rax], 1 ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000037b8d : and al, 0x50 ; nop ; mov rsi, r13 ; mov rdi, r14 ; mov rdx, rbp ; call r15
0x0000000000111808 : and al, 0x58 ; add rsp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008a1a4 : and al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fe327 : and al, 0x60 ; mov dword ptr [rbp + 0x24], eax ; xor eax, eax ; add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000198238 : and al, 0x65 ; clc ; lcall ptr [rbp + rdx*8 + 0x66240001] ; clc ; jmp rsp
0x000000000013ad1a : and al, 0x66 ; mov dword ptr [rax + rdx*8 - 4], ecx ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000197110 : and al, 0x68 ; idiv bh ; movsb byte ptr [rdi], byte ptr [rsi] ; jnp 0x197123 ; add byte ptr [rbp + rbp*2 - 0xa], dh ; call rsp
0x000000000008847b : and al, 0x68 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000ad323 : and al, 0x70 ; mov rdi, rbp ; call rbx
0x000000000010e414 : and al, 0x74 ; adc dword ptr [rcx], esi ; rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000002986d : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000194060 : and al, 0x9e ; cld ; push qword ptr [rbp + rbx*4 - 0x62bb0004] ; cld ; call rsp
0x0000000000056b9e : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x2c], cl ; test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000fdbf0 : and al, 0xa4 ; cmp dword ptr [rsp - 0x2c], ecx ; je 0xfdc38 ; mov dword ptr fs:[r8], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000132bb8 : and al, 0xa7 ; add byte ptr [rax], al ; test eax, eax ; jne 0x132be0 ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000dc0d1 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7fead], cl ; ret
0x000000000010a37c : and al, 0xc ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000cd0c0 : and al, 0xc ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000108fac : and al, 0xc ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cd1b7 : and al, 0xc ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c9bb2 : and al, 0xc ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000221a2 : and al, 0xc ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012ef11 : and al, 0xc ; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001210b8 : and al, 0xc ; add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002468a : and al, 0xc ; add rsp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000035e67 : and al, 0xc ; add rsp, 0x90 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fdf35 : and al, 0xc ; test edx, edx ; js 0xfdf56 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fdf34 : and al, 0xc ; test edx, edx ; js 0xfdf57 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012f635 : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call qword ptr [rax]
0x00000000000fdbf4 : and al, 0xd4 ; je 0xfdc34 ; mov dword ptr fs:[r8], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fdbf3 : and al, 0xd4 ; je 0xfdc35 ; mov dword ptr fs:[r8], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000eaad6 : and al, 0xe8 ; mov dword ptr [rcx + 0x30], eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001462ba : and al, 0xf ; add byte ptr [rbp + 0x29], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x0000000000146382 : and al, 0xf ; add byte ptr [rbp + 9], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x00000000000c83e6 : and al, 4 ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dbd7f : and al, 4 ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e2e83 : and al, 4 ; add rsp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e0a8c : and al, 4 ; xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001221d1 : and al, 7 ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e0b23 : and al, 8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000085722 : and al, 8 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000109d38 : and al, 8 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000020c73 : and al, 8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011bd6b : and al, 8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012f1d2 : and al, 8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000080a6a : and al, 8 ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fce67 : and al, 8 ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ff06 : and al, 8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fec61 : and al, 8 ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000137752 : and al, 8 ; add rsp, 0x418 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000137365 : and al, 8 ; add rsp, 0x438 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f87dd : and al, 8 ; add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005387c : and al, 8 ; add rsp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000124b0d : and al, 8 ; mov dword ptr [rbx + 4], eax ; xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000139e53 : and al, 8 ; mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001399a2 : and al, 8 ; mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000001304e9 : and al, 8 ; mov rdx, qword ptr [rdx + 0x38] ; test rdx, rdx ; je 0x130507 ; mov rdi, rbp ; call rdx
0x0000000000131b90 : and al, 8 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000131a83 : and al, 8 ; mov rdx, rbx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000a0e1d : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010e3d7 : and al, byte ptr [rax] ; add byte ptr [rax], al ; je 0x10e3f4 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000010fbc1 : and al, byte ptr [rax] ; add byte ptr [rax], al ; je 0x10fbde ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006d372 : and al, byte ptr [rbp + 0x63480011] ; add al, 0x81 ; add rax, rcx ; jmp rax
0x00000000000a0c12 : and byte ptr [r14 + 0xf], r12b ; xlatb ; rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x000000000012e910 : and byte ptr [r8 - 0x75], cl ; cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000008b95a : and byte ptr [r8 - 0x77], cl ; jnp 0x8b972 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000795a2 : and byte ptr [r8 - 0x77], r9b ; sbb byte ptr [r15 + 0xe], r14b ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007d2d0 : and byte ptr [r9 + 0x48c03113], cl ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000056bdd : and byte ptr [r9 + 0x48e8892a], cl ; add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013daf0 : and byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013638c : and byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e911 : and byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000008b95b : and byte ptr [rax - 0x77], cl ; jnp 0x8b971 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079650 : and byte ptr [rax - 0x77], cl ; sbb byte ptr [r15 + 0x11], r14b ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000795a3 : and byte ptr [rax - 0x77], cl ; sbb byte ptr [r15 + 0xe], r14b ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000136aeb : and byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rcx - 0x18] ; ret 0xee8e
0x0000000000075ea3 : and byte ptr [rax - 1], bh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000070454 : and byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000597ff : and byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 0x1078], 0 ; jmp rax
0x00000000000791f0 : and byte ptr [rax], al ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007a047 : and byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x000000000013afbe : and byte ptr [rbp + 0x5b0d74c0], al ; pop rbp ; pop r12 ; ret
0x00000000001536bf : and byte ptr [rbp + 0x63], cl ; or al, 0x93 ; add rsi, rdx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000000a9ab4 : and byte ptr [rbp + rcx*4 + 0x1d], cl ; enter 0xdc8, 0 ; movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a9134 : and byte ptr [rbp + rcx*4 + 0x1d], cl ; enter 0xdd1, 0 ; movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7654 : and byte ptr [rbp + rcx*4 + 0x1d], cl ; enter 0xdea, 0 ; movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6054 : and byte ptr [rbp + rcx*4 + 0x1d], cl ; in al, dx ; dec byte ptr [rip + 0xc634900] ; xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000153bc5 : and byte ptr [rbp + rcx*4 + 0x1d], cl ; movsxd rdi, edx ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156595 : and byte ptr [rbp + rcx*4 + 0x1d], cl ; push rbx ; rol byte ptr [rbx], cl ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000e693b : and byte ptr [rbp + rcx*4 - 0x7c], cl ; and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000d6d64 : and byte ptr [rbp - 0x3a7cfeb6], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000193eec : and byte ptr [rbp - 0x63490004], bl ; cld ; jmp qword ptr [rsi]
0x0000000000194318 : and byte ptr [rbp - 0x6b5f0004], dl ; cld ; jmp qword ptr [rax]
0x00000000000bbade : and byte ptr [rbp - 0x7cca8740], al ; clc ; sbb dword ptr [rdi + 0x18], edi ; mov rax, rbx ; pop rbx ; ret
0x00000000001939b4 : and byte ptr [rbp - 4], bh ; push qword ptr [rax + 0x40fffc7c] ; jl 0x1939c6 ; call rax
0x00000000001938e8 : and byte ptr [rbp - 4], cl ; jmp qword ptr [rax]
0x000000000007f7fb : and byte ptr [rbx + 0x48], bl ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000df2a9 : and byte ptr [rbx + 0x942484], al ; add byte ptr [rax], al ; add dword ptr [rbp - 0x7cb7febd], ecx ; ret
0x000000000011f8f2 : and byte ptr [rbx + rbx*8 + 0x5b], dh ; xor eax, eax ; mov byte ptr [rdx], 0 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000355e2 : and byte ptr [rbx + rcx*4 + 0x7f], cl ; sub byte ptr [rcx - 0x3b76b310], cl ; mov rbp, r9 ; nop ; jmp rdx
0x000000000013086c : and byte ptr [rbx - 0x48], bl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000007d2d1 : and byte ptr [rcx + 0x48c03113], cl ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000056bde : and byte ptr [rcx + 0x48e8892a], cl ; add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006d172 : and byte ptr [rcx + rbp], bh ; ja 0x6d1f7 ; movzx eax, al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000008b0b5 : and byte ptr [rcx + rcx*4 - 0x10], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000051649 : and byte ptr [rcx - 0x77], al ; sal byte ptr [rbp + 4], 0x84 ; sal byte ptr [rbp + 0x73], 0xf6 ; ret 0x7440
0x00000000000508f0 : and byte ptr [rcx], ah ; add byte ptr [rax], al ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011a9c7 : and byte ptr [rdx], al ; add byte ptr [rax], al ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a0c13 : and byte ptr [rsi + 0xf], ah ; xlatb ; rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x0000000000100881 : and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rcx - 1], 0 ; ret
0x0000000000193ca8 : and ch, byte ptr [rbp - 4] ; call qword ptr [rdx + 0x22fffc6c]
0x0000000000096838 : and cl, byte ptr [rcx + rcx*4 - 0x28] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013e865 : and dh, byte ptr [rcx] ; sar byte ptr [rdx - 1], 0x48 ; mov esi, ebx ; mov rdi, rbp ; call rcx
0x000000000012a1bf : and dword ptr [rax + 0x40], 0xfffffff9 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ceea8 : and dword ptr [rax - 0x73], ecx ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000508f1 : and dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000109953 : and dword ptr [rbp + 0x2b], esi ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000159669 : and dword ptr [rbp + 0x63490003], 0x14 ; xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000f8953 : and dword ptr [rbp - 0x2708ffd4], eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000007430c : and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000074368 : and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000004b231 : and dword ptr [rcx + 0xf], eax ; mov dh, 0xc4 ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001963b5 : and dword ptr [rcx], eax ; add byte ptr [rbp + rbx*4 - 0xf], al ; jmp rsp
0x0000000000180db9 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000003a873 : and eax, 0x30 ; mov qword ptr fs:[rbp], rdx ; call rax
0x00000000000bd05f : and eax, 0x3069f4 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000124b0a : and eax, 0x824448b ; mov dword ptr [rbx + 4], eax ; xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000116fc8 : and eax, 0xc ; pop rbp ; pop r12 ; ret
0x00000000001148c8 : and ebp, 0x200 ; jne 0x11490d ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001148c7 : and ebp, 0x200 ; jne 0x11490e ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007430d : and ebp, edi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000074369 : and ebp, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007af45 : and ebp, edi ; mov qword ptr [rbx + 0x90], rax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000aaa51 : and ebx, 0xfff ; lea rax, qword ptr [rbx + 1] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000064291 : and ecx, dword ptr [rcx + 0x401f0ff1] ; add byte ptr [rbp - 0x7cb776ec], cl ; ret
0x000000000006f143 : and esi, 0xffffeff3 ; or esi, ebp ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015cbc9 : and esi, dword ptr [rbp + 3] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001013cf : and esi, dword ptr [rsi + rbx + 0x5b] ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000130f61 : bswap edx ; mov dword ptr [rax], edx ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001004ec : bt esp, edx ; jae 0x1004bf ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001004eb : bt r12, rdx ; jae 0x1004c0 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000019466b : call qword ptr [rcx + rbp*2 - 0x6c7c0000]
0x000000000009c674 : cdq ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; ret 0x5a8d
0x000000000008fc08 : cdqe ; mov byte ptr [rbp + rax], 0 ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000003b448 : cdqe ; mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000125a3c : clc ; add byte ptr [rax], al ; add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000000ce942 : clc ; add byte ptr [rcx], al ; sbb dword ptr [rbp + rsi*2 - 0x7e], edx ; mov eax, 0x7d00 ; ret
0x000000000013d1b4 : clc ; add cl, byte ptr [rdi] ; xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000012ff84 : clc ; add dword ptr [rbp + 0x38], esi ; mov dword ptr [rsi], 7 ; mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x000000000008792f : clc ; add dword ptr [rbp + rcx + 0x48], esi ; sub eax, 8 ; ret
0x000000000013d371 : clc ; add dword ptr [rbp - 0x14], esi ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000011c671 : clc ; add dword ptr [rbp - 0x6bf0fdb8], ecx ; ret 0x8b48
0x000000000009868b : clc ; add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001361a0 : clc ; add dword ptr [rsi + 0x27], edi ; add rsp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001360ae : clc ; add dword ptr [rsi + 0xe], edi ; xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001106db : clc ; dec dword ptr [rax + 1] ; imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008fb37 : clc ; dec dword ptr [rbx + 0x336bf105] ; add byte ptr [rbp + 0x480d75c0], al ; add esp, 8 ; ret
0x0000000000101319 : clc ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x000000000019823a : clc ; lcall ptr [rbp + rdx*8 + 0x66240001] ; clc ; jmp rsp
0x0000000000049122 : clc ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000071d74 : clc ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f541a : clc ; mov rcx, r14 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call 0xf169f
0x000000000013a4b7 : clc ; mov rcx, r14 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000001333a1 : clc ; or byte ptr [rbp + rcx*4 + 0x42], cl ; or byte ptr [rcx - 0x77], al ; ret 0x8949
0x0000000000071d8f : clc ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000adf48 : clc ; pop rbx ; neg rax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004afef : clc ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000024f40 : clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007fe65 : clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007d817 : clc ; push qword ptr [rbp + 0x5b] ; pop rbp ; pop r12 ; ret
0x0000000000121a66 : clc ; push qword ptr [rbp + 0xe] ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000075f4a : clc ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x000000000014558f : clc ; push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x00000000000c8fcd : clc ; push qword ptr [rbp + rsi - 0x77] ; ret 0xe283
0x000000000007e4ef : clc ; push qword ptr [rbp - 0x44] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000117801 : clc ; push qword ptr [rbp - 0xe] ; xor eax, eax ; leave ; ret
0x0000000000074308 : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000074364 : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014554b : clc ; push qword ptr [rcx + rdx*8 + 0x48] ; add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c92e1 : clc ; push qword ptr [rsp + rax + 0x4d] ; mov dword ptr [rbp], esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000102ebb : clc ; sub eax, dword ptr [rax] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013ad1f : cld ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001a8f54 : cld ; cmc ; add byte ptr [rax], al ; push rbp ; jmp qword ptr [rcx]
0x0000000000074362 : cld ; cmp eax, 0xff ; je 0x7437a ; and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000074361 : cld ; cmp eax, 0xff ; je 0x7437b ; and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013a62b : cld ; inc dword ptr [rbp + 0x480f78c0] ; add esp, 0x18 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000194066 : cld ; inc dword ptr [rbp + rbx*4 - 4] ; call rsp
0x0000000000033041 : cld ; jne 0x3302c ; mov byte ptr [rcx], 0 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000193c6a : cld ; lcall ptr [rsp + rbp*2 + 0x6c2cfffc] ; cld ; call rdx
0x0000000000193c66 : cld ; ljmp ptr [rbp*2 + 0x6c9cfffc] ; cld ; ljmp ptr [rsp + rbp*2] ; cld ; call rdx
0x0000000000193c6e : cld ; ljmp ptr [rsp + rbp*2] ; cld ; call rdx
0x0000000000194062 : cld ; push qword ptr [rbp + rbx*4 - 0x62bb0004] ; cld ; call rsp
0x0000000000127aab : cli ; add al, 0x48 ; add edx, 1 ; syscall ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000d96b7 : cli ; add cl, byte ptr [rdi] ; test cl, al ; add al, 0 ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000013d405 : cli ; add cl, byte ptr [rdi] ; xchg eax, esp ; rol byte ptr [rbx + 0x597401fa], 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000bb63a : cli ; add dh, byte ptr [rdx + rbp*8 - 0x75] ; push rsi ; or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x29], dh ; ret
0x0000000000107238 : cli ; add dword ptr [rbp - 0xc], esi ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000013d40b : cli ; add dword ptr [rcx + rbx*2 + 0x48], esi ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000100880 : cli ; and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rcx - 1], 0 ; ret
0x0000000000036c9d : cli ; je 0x36cbc ; add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000036dff : cli ; je 0x36e1c ; add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000d80d8 : cli ; or dh, byte ptr [rbp - 0x42] ; xor eax, eax ; cmp byte ptr [rdi + 0x65], 0 ; setne al ; add eax, eax ; ret
0x00000000001a8ead : cmc ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001a8f55 : cmc ; add byte ptr [rax], al ; push rbp ; jmp qword ptr [rcx]
0x00000000001a8f25 : cmc ; add byte ptr [rax], al ; sbb byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001a8f3d : cmc ; add byte ptr [rax], al ; xor byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001986a5 : cmc ; add dword ptr [rax], eax ; add al, 0x39 ; stc ; inc dword ptr [rbp + rsi*8 + 0x45740001] ; stc ; call rsp
0x00000000000c9ae5 : cmc ; add rsp, 0x10 ; mov eax, r14d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000017339a : cmc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c9bae : cmc ; dec dword ptr [rbx + 0x480c2444] ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000187ce2 : cmc ; dec dword ptr [rdi + rbp] ; cmc ; push qword ptr [rdi - 0x14000ad1] ; cmc ; call rax
0x00000000000f87d7 : cmc ; in eax, 1 ; add byte ptr [rbx + 0x48082444], cl ; add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000121a63 : cmc ; inc dword ptr [rbx + 0xe75fff8] ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000187e1e : cmc ; inc esi ; fdivrp st(5) ; lcall ptr [rbp - 0x22] ; cmc ; call rsp
0x00000000000f803d : cmc ; ja 0xf7fd5 ; pop rbx ; pop rbp ; ret
0x0000000000187e22 : cmc ; lcall ptr [rbp - 0x22] ; cmc ; call rsp
0x0000000000187de6 : cmc ; ljmp ptr [rbp + 0x1ffff52d] ; mov edx, 0xba1ffff5 ; cmc ; jmp rsi
0x0000000000079b9d : cmc ; mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001196ed : cmc ; mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000001850e0 : cmc ; or ebp, esi ; inc dword ptr [rbp - 0x7a0011f4] ; or al, 0xee ; call rbx
0x0000000000180db7 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000001727bf : cmc ; shr edx, 1 ; dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rax - 0x77] ; fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x0000000000098458 : cmova ebp, eax ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000098457 : cmova rbp, rax ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000117774 : cmove eax, edx ; mov qword ptr [rip + 0x2ad9a2], rax ; pop rbp ; ret
0x000000000007b8f1 : cmove ebp, esp ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007b8f0 : cmove ebp, r12d ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000117773 : cmove rax, rdx ; mov qword ptr [rip + 0x2ad9a2], rax ; pop rbp ; ret
0x00000000000cbb94 : cmovle eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f8038 : cmovne eax, edx ; cmp rbp, rsi ; ja 0xf7fda ; pop rbx ; pop rbp ; ret
0x000000000009846c : cmovne edx, edi ; add rsp, 8 ; mov rbp, rdx ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000102310 : cmovne rbp, rax ; call 0xfe616
0x000000000009846b : cmovne rdx, rdi ; add rsp, 8 ; mov rbp, rdx ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000013a630 : cmovs eax, dword ptr [rbx - 0x2776e73c] ; pop rbx ; pop rbp ; ret
0x0000000000111b59 : cmovs ecx, dword ptr [rbp + 0x415bd865] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000079980 : cmovs ecx, dword ptr [rbp - 0x76b7feb0] ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000a8155 : cmovs ecx, dword ptr [rbp - 0x7af0f081] ; and byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x00000000000a6a81 : cmovs ecx, dword ptr [rbp - 0x7af0f081] ; in al, 6 ; add byte ptr [rax], al ; ret
0x000000000014ad7a : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a55a : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000149d3a : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x00000000000fa059 : cmp al, 0 ; add byte ptr [rbp - 0x3f6bf040], al ; add rsp, 0x48 ; movzx eax, al ; ret
0x00000000000984c1 : cmp al, 0x24 ; add byte ptr [rdx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x000000000011b9c4 : cmp al, 0x48 ; add esp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bd498 : cmp al, 0x90 ; xor byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012fd50 : cmp al, 0xd6 ; add byte ptr [rax], al ; test eax, eax ; jne 0x12fd78 ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001a9094 : cmp al, 0xf7 ; add byte ptr [rax], al ; pop rax ; pop rbp ; jmp rcx
0x000000000001fd6b : cmp al, byte ptr [rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000001fa38 : cmp al, byte ptr [rax] ; mov qword ptr [rip + 0x3a68c7], rdx ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000001fb7e : cmp al, byte ptr [rax] ; neg eax ; mov dword ptr fs:[rdx], eax ; mov rax, rbp ; cmp r9, rax ; je 0x1fb39 ; jmp 0x1fb62
0x000000000001fa3f : cmp al, byte ptr [rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000013a3b3 : cmp al, byte ptr [rip - 0x2776b700] ; mov ecx, r12d ; mov rdi, rbp ; call 0x5665e
0x000000000013a3fb : cmp al, byte ptr [rip - 0x2776b700] ; mov rcx, r12 ; mov rdi, rbp ; xor eax, eax ; call 0x56660
0x000000000001fa37 : cmp al, byte ptr cs:[rax] ; mov qword ptr [rip + 0x3a68c7], rdx ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000881c7 : cmp bh, 0xff ; mov rsi, rbp ; mov rdi, rax ; mov rbx, rax ; call 0x844de
0x00000000001940a8 : cmp bl, byte ptr [rbp - 0x63350004] ; cld ; push qword ptr [rax - 0x64] ; cld ; jmp rax
0x00000000000abd06 : cmp byte ptr [r11], r15b ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x00000000001077fd : cmp byte ptr [r8 + 3], dil ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006f8b3 : cmp byte ptr [r8], al ; add byte ptr [rax + 1], bh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e9019 : cmp byte ptr [r8], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000741a7 : cmp byte ptr [rax + 1], bh ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000111ad6 : cmp byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001077fe : cmp byte ptr [rax + 3], bh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011074c : cmp byte ptr [rax - 0x3c41f0e8], cl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000231e3 : cmp byte ptr [rax - 0x73], cl ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000136b90 : cmp byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x0000000000115ea3 : cmp byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00000000001161fa : cmp byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000116039 : cmp byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov edx, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000115f02 : cmp byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov edx, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x0000000000115f91 : cmp byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov edx, dword ptr [rcx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x000000000012e915 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x00000000001304ee : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x000000000012b13f : cmp byte ptr [rax - 1], 0x5b ; pop rbp ; pop r12 ; ret
0x000000000006f8b4 : cmp byte ptr [rax], al ; add byte ptr [rax + 1], bh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ba72e : cmp byte ptr [rax], al ; je 0xba744 ; add dword ptr [rax + 0x10], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e901a : cmp byte ptr [rax], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000abd0a : cmp byte ptr [rbp + 0x13], dh ; ret
0x00000000000abd09 : cmp byte ptr [rbp + 0x13], r14b ; ret
0x00000000001462da : cmp byte ptr [rbp - 0x25], dh ; add rsp, 0x48 ; ret
0x00000000001074ae : cmp byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000000d6efe : cmp byte ptr [rbp - 0x7cb7febd], cl ; ret
0x0000000000109a3c : cmp byte ptr [rbx + rbp], dh ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010e3d3 : cmp byte ptr [rbx], 0 ; mov edx, 0x22 ; je 0x10e3f8 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000119bb3 : cmp byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000abd07 : cmp byte ptr [rbx], bh ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x000000000007deeb : cmp byte ptr [rcx + rcx*4 + 0x63], cl ; mov dword ptr [rbx], edx ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000110b0b : cmp byte ptr [rcx + rcx*4 - 0x10], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000086fee : cmp byte ptr [rcx + rcx*4 - 0x18], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fc13e : cmp byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000141090 : cmp byte ptr [rcx + rcx*4 - 8], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000111116 : cmp byte ptr [rcx + rcx*4 - 8], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013b607 : cmp byte ptr [rcx - 0x75], al ; push rbp ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000003c9a2 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d9bb7 : cmp byte ptr [rcx], al ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000072d6f : cmp byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b1ad6 : cmp byte ptr [rsi], dh ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001219e9 : cmp cl, dl ; je 0x121ada ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000881c6 : cmp dil, 0xff ; mov rsi, rbp ; mov rdi, rax ; mov rbx, rax ; call 0x844df
0x00000000000ba72d : cmp dword ptr [rax], 0 ; je 0xba745 ; add dword ptr [rax + 0x10], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079e98 : cmp dword ptr [rax], 0x1d ; je 0x79e75 ; add rsp, 0x18 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000098dc1 : cmp dword ptr [rax], eax ; je 0x98e00 ; add rcx, 1 ; sub rax, 1 ; jne 0x98dd0 ; pop rbx ; pop rbp ; ret
0x000000000002adf1 : cmp dword ptr [rax], eax ; mov qword ptr [rbp + r12*8], r15 ; mov rax, qword ptr [rax + r12*8] ; test rax, rax ; je 0x2ae13 ; call rax
0x000000000013e875 : cmp dword ptr [rbp], 2 ; je 0x13e8b6 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f101e : cmp dword ptr [rbp], ebx ; mov qword ptr [r12], rax ; je 0xf100a ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000036c9a : cmp dword ptr [rbx + 8], -6 ; je 0x36cbf ; add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000036dfc : cmp dword ptr [rbx + 8], -6 ; je 0x36e1f ; add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000fe439 : cmp dword ptr [rbx], 0xd ; jne 0xfe437 ; mov dword ptr fs:[rbx], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000071d6c : cmp dword ptr [rbx], ecx ; je 0x71d8f ; or ebp, edx ; mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079cdc : cmp dword ptr [rbx], ecx ; je 0x79cff ; or ebp, edx ; mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007d474 : cmp dword ptr [rcx - 1], -1 ; dec dword ptr [rdi] ; mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000071d6b : cmp dword ptr [rcx], 0xb ; je 0x71d90 ; or ebp, edx ; mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079cdb : cmp dword ptr [rcx], 0xb ; je 0x79d00 ; or ebp, edx ; mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cd1f3 : cmp dword ptr [rdi + rbp], 0x64d8f700 ; mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fdbf2 : cmp dword ptr [rsp - 0x2c], ecx ; je 0xfdc36 ; mov dword ptr fs:[r8], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000984c0 : cmp dword ptr [rsp], 0 ; je 0x984db ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000801a2 : cmp eax, 0x340c21 ; mov rbp, rsi ; xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x000000000014554a : cmp eax, 0xff ; je 0x14552f ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000074307 : cmp eax, 0xff ; je 0x7431d ; and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000074363 : cmp eax, 0xff ; je 0x74379 ; and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007d816 : cmp eax, 0xff ; je 0x7d849 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007e452 : cmp eax, 0xff ; je 0x7e468 ; and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000121a65 : cmp eax, 0xff ; jne 0x121a85 ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000007e4ee : cmp eax, 0xff ; jne 0x7e4ba ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000117540 : cmp eax, 0xfffff000 ; ja 0x117521 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012b11a : cmp eax, 0xfffff000 ; ja 0x12b13f ; sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fcdfe : cmp eax, 0xfffff000 ; ja 0xfce87 ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009868a : cmp eax, 1 ; ja 0x98672 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001360ad : cmp eax, 1 ; jle 0x1360cd ; xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013619f : cmp eax, 1 ; jle 0x1361da ; add rsp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013dbeb : cmp eax, 2 ; je 0x13dc6f ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013d1b3 : cmp eax, 2 ; sete al ; add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013e125 : cmp eax, 2 ; sete al ; movzx eax, al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000010e3d4 : cmp eax, dword ptr [rax] ; mov edx, 0x22 ; je 0x10e3f7 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000795a1 : cmp eax, dword ptr [rbp + 0x20] ; mov qword ptr [rbp + 0x18], rax ; ja 0x795c8 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000873de : cmp eax, dword ptr [rcx] ; add byte ptr [rax], al ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x00000000000dfc57 : cmp eax, eax ; jne 0xdfc40 ; mov dword ptr [rbx + 0x2c], eax ; mov dword ptr [rbx + 0x30], eax ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000129e15 : cmp eax, ecx ; jl 0x129dd3 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000129eaa : cmp eax, edx ; jg 0x129e64 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010230c : cmp eax, edx ; mov edx, ebx ; cmovne rbp, rax ; call 0xfe61a
0x000000000007625d : cmp ebp, 0xa ; je 0x76227 ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000007c877 : cmp ebp, 0xa ; je 0x7c905 ; movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013afb7 : cmp ebp, dword ptr [rax + 0x10] ; jne 0x13afb8 ; mov eax, dword ptr [rax + 0x20] ; test eax, eax ; je 0x13afe0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006efef : cmp ebp, eax ; jle 0x6f003 ; or dword ptr [rbx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000071fab : cmp ebp, eax ; jne 0x71fce ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f803c : cmp ebp, esi ; ja 0xf7fd6 ; pop rbx ; pop rbp ; ret
0x00000000000d808f : cmp ebx, 0xa ; je 0xd80fc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003b016 : cmp ebx, 0xff ; jne 0x3b017 ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001932f1 : cmp ebx, 0xff ; xor byte ptr [rbp - 0x78ef0005], al ; sti ; jmp rax
0x000000000013addc : cmp ebx, dword ptr [rax] ; je 0x13adfe ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000098455 : cmp ebx, eax ; cmova rbp, rax ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000096832 : cmp ebx, eax ; jb 0x9684a ; mov qword ptr [rdx], r12 ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013140e : cmp ebx, eax ; je 0x13142e ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000081955 : cmp ebx, eax ; je 0x81966 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011071b : cmp ebx, eax ; setne al ; movzx eax, al ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001725fc : cmp ebx, ebp ; jb 0x1725f6 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000173397 : cmp ebx, ebp ; jb 0x17339a ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000048e0e : cmp ecx, dword ptr [rbp + 0xf] ; movsd dword ptr [rdi], dword ptr [rsi] ; enter -0x76b4, 7 ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x00000000000dc92f : cmp ecx, dword ptr [rbp - 0x75] ; xchg dword ptr [rax - 0x77000000], esp ; ret 0xeac1
0x00000000000873da : cmp ecx, ebp ; jne 0x8752c ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x0000000000088a53 : cmp ecx, ebp ; jne 0x88bbc ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x00000000001986a9 : cmp ecx, edi ; inc dword ptr [rbp + rsi*8 + 0x45740001] ; stc ; call rsp
0x00000000001727ed : cmp edi, ebp ; lcall ptr [rbp + 0x48] ; mov dword ptr [rip + 0x25291c], 0 ; ret
0x000000000013d40a : cmp edx, 1 ; je 0x13d473 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013d4ca : cmp edx, 1 ; je 0x13d533 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013d58a : cmp edx, 1 ; je 0x13d5f3 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013d64a : cmp edx, 1 ; je 0x13d6b3 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000107237 : cmp edx, 1 ; jne 0x10723b ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000001072a7 : cmp edx, 1 ; jne 0x1072ab ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000000025e5 : cmp edx, dword ptr [rbp + 0x1b] ; xor ah, byte ptr [rsi] ; sahf ; jl 0x2584 ; loop 0x25cf ; ret 0x23cb
0x00000000000025e4 : cmp edx, dword ptr [rbp + 0x1b] ; xor ah, byte ptr [rsi] ; sahf ; jl 0x2585 ; loop 0x25d0 ; ret 0x23cb
0x0000000000029b15 : cmp edx, ecx ; jb 0x29b37 ; add rsp, 0xa0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116fbe : cmp esi, 1 ; sbb eax, eax ; add rsp, 0x10 ; pop rbx ; and eax, 0xc ; pop rbp ; pop r12 ; ret
0x00000000000984bf : cmp qword ptr [r12], 0 ; je 0x984dc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ba72c : cmp qword ptr [rax], 0 ; je 0xba746 ; add dword ptr [rax + 0x10], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f101d : cmp qword ptr [rbp], rbx ; mov qword ptr [r12], rax ; je 0xf100b ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000096831 : cmp r11, rax ; jb 0x9684b ; mov qword ptr [rdx], r12 ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000071faa : cmp r13, rax ; jne 0x71fcf ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013d9d6 : cmp r8, 2 ; sete al ; add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013d1b2 : cmp r8d, 2 ; sete al ; add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000011753f : cmp rax, -0x1000 ; ja 0x117522 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012b119 : cmp rax, -0x1000 ; ja 0x12b140 ; sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fcdfd : cmp rax, -0x1000 ; ja 0xfce88 ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000098689 : cmp rax, 1 ; ja 0x98673 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010230b : cmp rax, rdx ; mov edx, ebx ; cmovne rbp, rax ; call 0xfe61b
0x000000000006efee : cmp rbp, rax ; jle 0x6f004 ; or dword ptr [rbx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f803b : cmp rbp, rsi ; ja 0xf7fd7 ; pop rbx ; pop rbp ; ret
0x000000000013addb : cmp rbx, qword ptr [rax] ; je 0x13adff ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000098454 : cmp rbx, rax ; cmova rbp, rax ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000081954 : cmp rbx, rax ; je 0x81967 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011071a : cmp rbx, rax ; setne al ; movzx eax, al ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001725cc : cmp rbx, rbp ; jae 0x1725e1 ; call qword ptr [rbx]
0x00000000001725cc : cmp rbx, rbp ; jae 0x1725e5 ; call qword ptr [rbx]
0x0000000000173384 : cmp rbx, rbp ; jae 0x1733a7 ; nop dword ptr [rax] ; call qword ptr [rbx]
0x0000000000173384 : cmp rbx, rbp ; jae 0x1733ab ; nop dword ptr [rax] ; call qword ptr [rbx]
0x00000000001725fb : cmp rbx, rbp ; jb 0x1725f7 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000173396 : cmp rbx, rbp ; jb 0x17339b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000873d9 : cmp rcx, rbp ; jne 0x8752d ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x0000000000088a52 : cmp rcx, rbp ; jne 0x88bbd ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x0000000000107236 : cmp rdx, 1 ; jne 0x10723c ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000001072a6 : cmp rdx, 1 ; jne 0x1072ac ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000029b14 : cmp rdx, rcx ; jb 0x29b38 ; add rsp, 0xa0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000132b1e : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; test eax, eax ; jne 0x132b3f ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000132bb9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; test eax, eax ; jne 0x132bdf ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000184095 : cmpsd dword ptr [rsi], dword ptr [rdi] ; xor byte ptr [rsi + 0x4ce2e5dd], 0x67 ; add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x000000000010af8d : cmpxchg dword ptr [rip + 0x2b628c], edx ; je 0x10afa2 ; pop rbp ; ret
0x000000000010af8c : cmpxchg qword ptr [rip + 0x2b628c], rdx ; je 0x10afa3 ; pop rbp ; ret
0x0000000000103478 : cvtdq2ps xmm1, xmmword ptr [rax - 0x73] ; add eax, 0x2c0ddf ; pop rbp ; pop r12 ; ret
0x00000000000fb264 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0xa], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002986e : cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000076d84 : cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 0xe], dh ; mov edx, dword ptr [rdi + 0xc0] ; mov eax, edx ; ret
0x000000000008fc09 : cwde ; mov byte ptr [rbp + rax], 0 ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000003b449 : cwde ; mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009c53d : dec byte ptr [rdi] ; test ch, cl ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret 0x5a8d
0x000000000006d83a : dec dword ptr [rax + 0x39] ; add dword ptr [rbp + 0xf48ff78], ecx ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x000000000006deb9 : dec dword ptr [rax + 0x39] ; add dword ptr [rbp + 0xf48ff78], ecx ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8504
0x000000000006dfa6 : dec dword ptr [rax + 0x39] ; add dword ptr [rbp + rcx*4 + 0x40], eax ; dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4504
0x00000000001106dc : dec dword ptr [rax + 1] ; imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000032504 : dec dword ptr [rax - 0x73] ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000735d7 : dec dword ptr [rax - 0x73] ; push rsi ; add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001107ce : dec dword ptr [rax - 0x75] ; adc byte ptr [r8 - 0x77], cl ; imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011079e : dec dword ptr [rax - 0x75] ; or byte ptr [r8 - 0x77], cl ; imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009ec9f : dec dword ptr [rax - 0x75] ; pop rbp ; or byte ptr [rcx - 0x73], 0x4f ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000001107fe : dec dword ptr [rax - 0x75] ; sbb byte ptr [r8 - 0x77], cl ; imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001077fa : dec dword ptr [rax - 0x77] ; cmp byte ptr [r8 + 3], dil ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c551b : dec dword ptr [rax - 0x77] ; out dx, eax ; mov esi, 0x30 ; add rbp, r14 ; call 0x9181e
0x0000000000172326 : dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rax - 0x77] ; fbstp dword ptr [rbp - 0x17] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001727c2 : dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rax - 0x77] ; fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x00000000000f4565 : dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rdi] ; test dword ptr [rbp - 0x1600000a], ebp ; ret 0xfff6
0x0000000000172241 : dec dword ptr [rax - 0x7b] ; in eax, dx ; jne 0x172238 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000017237c : dec dword ptr [rax - 0x7b] ; in eax, dx ; jne 0x172364 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f0c57 : dec dword ptr [rax - 0x7b] ; in eax, dx ; jne 0xf0c4d ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f0c56 : dec dword ptr [rax - 0x7b] ; in eax, dx ; jne 0xf0c4e ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013ab86 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + rax*4 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x0000000000098688 : dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001889bf : dec dword ptr [rax] ; mov al, 0xf6 ; dec dword ptr [rax] ; mov al, 0xf6 ; dec dword ptr [rax] ; mov al, 0xf6 ; push rbp ; ret
0x00000000001889c3 : dec dword ptr [rax] ; mov al, 0xf6 ; dec dword ptr [rax] ; mov al, 0xf6 ; push rbp ; ret
0x000000000018892b : dec dword ptr [rax] ; mov al, 0xf6 ; push rbp ; ret
0x000000000004ef17 : dec dword ptr [rbp + 0x39440f04] ; fistp qword ptr [rcx - 1] ; cmovg eax, ecx ; jmp 0x4eefa
0x000000000003803f : dec dword ptr [rbp + 1] ; cmc ; mov rdx, rbx ; mov rsi, r13 ; mov rdi, r12 ; call r15
0x00000000000a7f34 : dec dword ptr [rbp + rcx*4 + 0x1d] ; hlt ; loop 0xa7f58 ; add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000fa603 : dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x000000000012eef7 : dec dword ptr [rbp + rcx*4 + 0x4c] ; and al, 0x1c ; call qword ptr [rax]
0x000000000013a970 : dec dword ptr [rbp + rcx*4 + 0x4c] ; and al, 0x2a ; call qword ptr [rax]
0x000000000007bd3d : dec dword ptr [rbp + rcx*4 + 0x78] ; add eax, 0x2cbe ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0x97fcf
0x0000000000053ca2 : dec dword ptr [rbp + rcx*4 - 0x6c] ; and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000d559e : dec dword ptr [rbp - 0x77] ; ret 0x3145
0x00000000001366cc : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x00000000000df650 : dec dword ptr [rbp - 0x7cb7febd] ; ret
0x000000000008fb38 : dec dword ptr [rbx + 0x336bf105] ; add byte ptr [rbp + 0x480d75c0], al ; add esp, 8 ; ret
0x00000000000c9baf : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013e996 : dec dword ptr [rcx + rcx*4 - 0xa] ; mov rdi, rbp ; call r12
0x0000000000198723 : dec dword ptr [rcx + rdi*8 + 1] ; add byte ptr [rdx + rbp*2 - 7], ah ; push qword ptr [rcx + rdi*8 + 0x6ac40001] ; stc ; jmp rsp
0x000000000008a1a0 : dec dword ptr [rcx - 0x77] ; add al, 0x24 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ee698 : dec dword ptr [rcx - 0x77] ; or byte ptr [r13 + r9*4 + 0x1c], cl ; sbb ch, cl ; or eax, 0xe8fffff9 ; push rbp ; ret
0x00000000000984be : dec dword ptr [rcx - 0x7d] ; cmp al, 0x24 ; add byte ptr [rdx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x000000000006f148 : dec dword ptr [rcx] ; out dx, al ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000187ce3 : dec dword ptr [rdi + rbp] ; cmc ; push qword ptr [rdi - 0x14000ad1] ; cmc ; call rax
0x00000000000aaa53 : dec dword ptr [rdi] ; add byte ptr [rax], al ; lea rax, qword ptr [rbx + 1] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007d478 : dec dword ptr [rdi] ; mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000051a36 : dec dword ptr [rdi] ; mov dh, 0x53 ; or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x00000000000f875f : dec dword ptr [rdi] ; xchg dword ptr [rdx + 0x48000000], ecx ; add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000196c9b : dec dword ptr [rsp + 1] ; add byte ptr [rbp - 0xb], dh ; dec dword ptr [rsp + 0x68340001] ; cmc ; call rsp
0x00000000001969fb : dec dword ptr [rsp + rcx*2 + 1] ; add byte ptr [rdx + rbp*4], dl ; push qword ptr [rsp + rcx*2 - 0x54fbffff] ; jmp rsp
0x00000000001963b3 : dec esp ; and dword ptr [rcx], eax ; add byte ptr [rbp + rbx*4 - 0xf], al ; jmp rsp
0x0000000000194b1b : dec esp ; jle 0x194b27 ; add byte ptr [rax + rbp - 0x16], dl ; jmp rsp
0x0000000000194cdb : dec esp ; mov byte ptr [rax], al ; add byte ptr [rsi + rbp*2 - 0x16], ah ; jmp rsp
0x000000000019734b : dec esp ; xchg byte ptr [rcx], al ; add byte ptr [rdx + rbp*4 - 0xa], al ; jmp rsp
0x0000000000197393 : dec esp ; xchg dword ptr [rcx], eax ; add byte ptr [rsi + rbp*4 - 0xa], al ; jmp rsp
0x000000000004a4f4 : div byte ptr [rbp + 0x29] ; mov dword ptr [rdx], 0 ; mov eax, 1 ; ret
0x000000000009833f : div byte ptr [rbp + 0xa] ; jmp 0x9830a
0x000000000008dbd2 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x00000000000a045e : div byte ptr [rbp - 0x11] ; mov qword ptr [rdx], rcx ; ret
0x0000000000079b9c : div ebp ; mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001196ec : div ebp ; mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000079b9b : div rbp ; mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001196eb : div rbp ; mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000132e44 : enter -0x3a0, -1 ; add rsp, 0x18 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000129e16 : enter -0x4d84, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000003b447 : enter -0x67b8, 0x48 ; mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000209fb : enter -0x72b8, 0x65 ; fcomp dword ptr [rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000079e9c : enter -0x7cb8, -0x3c ; sbb byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000007d78e : enter -0x7cff, -0x1e ; inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x000000000010794d : enter 0, 0 ; add rsp, 8 ; mov eax, 9 ; pop rbx ; pop rbp ; ret
0x0000000000034391 : enter 0, 0 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000146f0e : enter 0, 0 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007558d : enter 0, 0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010b23a : enter 0, 0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000598c7 : enter 0x1ba, 0 ; add byte ptr [rax], al ; mov dword ptr [rbp - 0x10b4], 0 ; jmp rax
0x000000000005a758 : enter 0x1ba, 0 ; add byte ptr [rax], al ; mov dword ptr [rbp - 0x10b4], 1 ; jmp rax
0x0000000000131405 : enter 0x289, -0x77 ; fiadd dword ptr [rcx - 1] ; push rbp ; adc byte ptr [rcx], bh ; ret
0x000000000012f92a : enter 0x29, 0 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012c1f2 : enter 0x4101, 0x5c ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000021ef0 : enter 0x415b, 0x5c ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ce17c : enter 0x50f, -0x7b ; sal byte ptr [rbp - 0x24], cl ; mov dword ptr fs:[0x2d0], eax ; ret
0x00000000000e1e6d : enter 0x5c41, 0x41 ; pop rbp ; pop r14 ; pop r15 ; ret
0x000000000003a86d : enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; mov qword ptr fs:[rbp], rdx ; call rax
0x00000000000738a0 : enter 0x7676, 0x48 ; mov eax, dword ptr [rbp + 0x20] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000011ad25 : enter 1, 0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000122bec : enter 4, 0 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001189f5 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000011066f : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e208e : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010631d : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000106460 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000879f7 : fadd dword ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000040bd5 : fadd dword ptr [rbp + 0x39] ; ret
0x0000000000059644 : fadd dword ptr [rcx + rcx*4 - 0x10] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cd506 : fadd dword ptr [rcx + rcx*4 - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013a3b8 : fadd dword ptr [rcx + rcx*4 - 0x1f] ; mov rdi, rbp ; call 0x56659
0x0000000000051623 : fadd dword ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004d9ca : fadd dword ptr [rcx + rcx*4 - 0x38] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001249a3 : fadd dword ptr [rcx + rcx*4 - 0x40] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000eae22 : fadd dword ptr [rcx + rcx*4 - 8] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001207bd : fadd dword ptr [rcx] ; add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e2fbc : fadd dword ptr [rcx] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f75f8 : fadd dword ptr [rdx] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000059643 : fadd dword ptr gs:[rcx + rcx*4 - 0x10] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cd505 : fadd dword ptr gs:[rcx + rcx*4 - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000051622 : fadd dword ptr gs:[rcx + rcx*4 - 0x20] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004d9c9 : fadd dword ptr gs:[rcx + rcx*4 - 0x38] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001249a2 : fadd dword ptr gs:[rcx + rcx*4 - 0x40] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000eae21 : fadd dword ptr gs:[rcx + rcx*4 - 8] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000008aeb0 : fadd qword ptr [rax] ; add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x0000000000033043 : fadd st(6) ; add dword ptr [rax], eax ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e987d : fbld dword ptr [rbp - 0x76b7ffd3] ; fimul word ptr [rax - 0x75] ; or cl, byte ptr [rax - 0x77] ; ret 0xc1e8
0x000000000012476d : fbstp dword ptr [rbp - 0x10] ; mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000017232c : fbstp dword ptr [rbp - 0x17] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008991f : fcom dword ptr [rcx] ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000adf4c : fcomp dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000209ff : fcomp dword ptr [rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001012e8 : fcomp dword ptr [rbx + 0x41] ; pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000076b95 : fcomp dword ptr [rbx + 0x4c] ; sub eax, esi ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012c1ef : fcomp dword ptr [rbx - 0x7d] ; enter 0x4101, 0x5c ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000209fe : fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000076b94 : fcomp dword ptr gs:[rbx + 0x4c] ; sub eax, esi ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002b49b : fdiv dword ptr [rcx] ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002b49a : fdiv dword ptr gs:[rcx] ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000299eb : fdivr dword ptr [rax + 1] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cd9e3 : fdivr dword ptr [rax - 1] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000186f01 : fdivr st(3), st(0) ; lcall ptr [rbp - 0x1f] ; ljmp ptr [rax + 0x7dfff3db] ; fcomi st(3) ; call rax
0x0000000000187e21 : fdivrp st(5) ; lcall ptr [rbp - 0x22] ; cmc ; call rsp
0x000000000012fe3e : fiadd dword ptr [rax] ; add byte ptr [rbp + 0x480b75c0], al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000003bd1a : fiadd dword ptr [rbp + 0x450f48c9] ; ret 0x8348
0x0000000000131409 : fiadd dword ptr [rcx - 1] ; push rbp ; adc byte ptr [rcx], bh ; ret
0x00000000000c8e5d : fiadd word ptr [rax + rax] ; add rsp, 0x80 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000087686 : fiadd word ptr [rcx] ; add byte ptr [rax], al ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000104639 : ficomp word ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000001727c8 : fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x0000000000100b42 : fidiv dword ptr [rsp + rbp] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001219ed : fild dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012fd8e : fild dword ptr [rax] ; add byte ptr [rbp + 0x310b75c0], al ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000001419be : fild dword ptr [rbp + 0x31] ; shr cl, cl ; ret
0x00000000000eaa8e : fild dword ptr [rbp + 0x39] ; ret 0x8d43
0x000000000008a83b : fild dword ptr [rbp - 0x3c6bf040] ; neg ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x0000000000131a87 : fimul dword ptr [rcx + rcx*4 - 0x1a] ; mov rdi, rbp ; call rax
0x00000000000487ee : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x48848
0x000000000004a3fe : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x4a458
0x000000000011f8f4 : fistp dword ptr [rbx + 0x31] ; rol dh, 2 ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000103d7b : fistp word ptr [rbx + 0x48] ; mov eax, ebp ; pop rbp ; pop r12 ; jmp rax
0x000000000012476a : fisttp dword ptr [rax - 0x77] ; fbstp dword ptr [rbp - 0x10] ; mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000172329 : fisttp dword ptr [rax - 0x77] ; fbstp dword ptr [rbp - 0x17] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001727c5 : fisttp dword ptr [rax - 0x77] ; fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x0000000000103346 : fisttp dword ptr [rcx + 0x5d0102] ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f4568 : fisttp dword ptr [rdi] ; test dword ptr [rbp - 0x1600000a], ebp ; ret 0xfff6
0x000000000006c2e4 : fisttp word ptr [rax] ; add byte ptr [rbp - 0x3f6af040], al ; movzx eax, al ; neg eax ; pop rbx ; ret
0x00000000000c701d : fisttp word ptr [rbp - 2] ; dec dword ptr [rax - 0x77] ; ret
0x000000000009993b : fld dword ptr [rbp + 0x38] ; enter -0x208e, 0x48 ; mov edx, eax ; jmp 0x998d1
0x000000000009aafb : fld dword ptr [rbp + 0x38] ; enter -0x208e, 0x48 ; mov edx, eax ; jmp 0x9aa91
0x000000000009bb93 : fld dword ptr [rbp + 0x38] ; enter -0x208e, 0x48 ; mov edx, eax ; jmp 0x9bb31
0x000000000009d806 : fld dword ptr [rbp + 0x38] ; enter -0x208e, 0x48 ; mov edx, eax ; jmp 0x9d7b1
0x0000000000049722 : fld qword ptr [rax] ; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000080bfb : fldcw word ptr [rbx] ; xor al, 0 ; jae 0x80bba ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000048894 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000098684 : fmul dword ptr [rax - 0x73] ; pop rbx ; dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002fef9 : fmul dword ptr [rax - 0x77] ; enter 0x415b, 0x5c ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004ae1d : fmul dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012be10 : fmul dword ptr [rax - 0x77] ; rcr byte ptr [rbx + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000021eee : fmul dword ptr [rcx + 0x5c415bc8] ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013510b : fmul dword ptr [rcx + 0x5c415bd0] ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004ba74 : fmul dword ptr [rcx + 0x5c415bd8] ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000009a248 : fmul dword ptr [rcx + rcx*4 - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013a400 : fmul dword ptr [rcx + rcx*4 - 0x1f] ; mov rdi, rbp ; xor eax, eax ; call 0x5665b
0x000000000002d02d : fmul dword ptr [rcx + rcx*4 - 0x20] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000142b22 : fmul dword ptr [rcx + rcx*4 - 0x40] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004afec : fmul dword ptr [rcx + rcx*4 - 8] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012edb8 : fmul dword ptr [rdi] ; mov bh, 0xc0 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cfa52 : fmul dword ptr [rdi] ; mov dh, 0xc0 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002fef8 : fmul dword ptr gs:[rax - 0x77] ; enter 0x415b, 0x5c ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004ae1c : fmul dword ptr gs:[rax - 0x77] ; fcomp dword ptr [rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012be0f : fmul dword ptr gs:[rax - 0x77] ; rcr byte ptr [rbx + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000021eed : fmul dword ptr gs:[rcx + 0x5c415bc8] ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013510a : fmul dword ptr gs:[rcx + 0x5c415bd0] ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004ba73 : fmul dword ptr gs:[rcx + 0x5c415bd8] ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000009a247 : fmul dword ptr gs:[rcx + rcx*4 - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002d02c : fmul dword ptr gs:[rcx + rcx*4 - 0x20] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000142b21 : fmul dword ptr gs:[rcx + rcx*4 - 0x40] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004afeb : fmul dword ptr gs:[rcx + rcx*4 - 8] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012edb7 : fmul dword ptr gs:[rdi] ; mov bh, 0xc0 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cfa51 : fmul dword ptr gs:[rdi] ; mov dh, 0xc0 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cdb50 : fmul qword ptr [rax - 0x73] ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001ae734 : fmul qword ptr [rbp + 1] ; add byte ptr [rax], ch ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000000424eb : fmulp st(1) ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cbb8e : fstp xword ptr [rax] ; cmovle eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000011751c : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000001fb81 : fsub dword ptr [rcx + rcx*4 + 2] ; mov rax, rbp ; cmp r9, rax ; je 0x1fb36 ; jmp 0x1fb5f
0x0000000000172a3b : fsub st(3), st(0) ; mov dl, 0x66 ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000559d6 : fsubr st(3) ; mov eax, 0x1b85b ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011f94a : fucompi st(0) ; add byte ptr [rbp - 0xd], ch ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000001012ca : fucompi st(0) ; mov dil, dil ; inc dword ptr [rbp - 0x7ce38b40] ; ret
0x00000000000dfcaa : fucompi st(0) ; sal byte ptr [rdx - 1], 0xff ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000cf019 : fucompi st(0) ; sar dword ptr [rbp - 0x7cb70003], -0x3c ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000000fa5fe : fucompi st(0) ; sub al, 0x34 ; stc ; dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x000000000012f427 : hlt ; add byte ptr [rax], al ; test eax, eax ; jne 0x12f44f ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012f426 : hlt ; add byte ptr [rax], al ; test eax, eax ; jne 0x12f450 ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000010723b : hlt ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000013a62a : hlt ; cld ; inc dword ptr [rbp + 0x480f78c0] ; add esp, 0x18 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000001872ea : hlt ; lcall ptr [rdx + rbp*8 + 0x1a2fff3] ; hlt ; call rbx
0x00000000001872e6 : hlt ; push qword ptr [rdx + 2] ; hlt ; lcall ptr [rdx + rbp*8 + 0x1a2fff3] ; hlt ; call rbx
0x0000000000106318 : idiv bh ; add rsp, 0xd8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010645b : idiv bh ; add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000012679a : idiv bh ; add rsp, 8 ; lea eax, dword ptr [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x0000000000130850 : idiv bh ; inc dword ptr [rbp + 0x5b0975c0] ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000005fa56 : idiv bh ; inc dword ptr [rbp + 0x6c840fc9] ; and eax, 0x89480000 ; ret
0x000000000010685c : idiv bh ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013a5b4 : idiv bh ; mov byte ptr [r12 + rbp], 0 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000197112 : idiv bh ; movsb byte ptr [rdi], byte ptr [rsi] ; jnp 0x197121 ; add byte ptr [rbp + rbp*2 - 0xa], dh ; call rsp
0x000000000008df1d : idiv dword ptr [rbp + 0xf] ; add byte ptr [rdi + 0x63], cl ; or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000012470b : idiv edi ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001181a0 : idiv edi ; add rsp, 8 ; add rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ea207 : idiv edi ; inc dword ptr [rbp - 0x3f6bf040] ; add rsp, 8 ; movzx eax, al ; ret
0x000000000010425d : imul eax ; push rbp ; mov bh, 0xf1 ; dec dword ptr [rcx - 0x75] ; jge 0x104271 ; call rbx
0x0000000000194665 : imul eax, dword ptr [rax], 0xe991f400 ; call qword ptr [rcx + rbp*2 - 0x6c7c0000]
0x0000000000126942 : imul eax, dword ptr [rcx], -0x3a ; add al, byte ptr [r8] ; mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000194664 : imul eax, dword ptr fs:[rax], 0xe991f400 ; call qword ptr [rcx + rbp*2 - 0x6c7c0000]
0x000000000007fc86 : imul ebx, dword ptr [rax], -0x70 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008b70a : imul ebx, dword ptr [rax], 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000110805 : imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079284 : imul ebx, dword ptr [rax], 0x4c ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007f86e : imul ebx, dword ptr [rax], 0x5b ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006b8b3 : imul ebx, dword ptr [rbp], 0xc4814800 ; fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000079b68 : imul ebx, edx ; test rbx, rbx ; jne 0x79b8f ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008b9db : imul ecx, dword ptr [rax], -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008ba5d : imul ecx, dword ptr [rax], -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008bb66 : imul ecx, dword ptr [rax], -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001107a5 : imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008ba0a : imul ecx, dword ptr [rax], 0x48 ; mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001106df : imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001107d5 : imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007fc82 : imul edx, dword ptr [rax], 0x48 ; mov dword ptr [rbx + 0x18], ebp ; nop ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007828e : imul esi, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007f7fa : imul esp, dword ptr [rax], 0x5b ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000079b67 : imul rbx, rdx ; test rbx, rbx ; jne 0x79b90 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001a8f3c : in al, -0xb ; add byte ptr [rax], al ; xor byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000000c9128 : in al, 0 ; add byte ptr [rax], al ; mov rbp, r13 ; mov rdi, rbx ; call r12
0x0000000000022803 : in al, 0x48 ; lea esp, dword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000010d75e : in al, 0xf ; xchg eax, ebp ; sal bh, 0xd8 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000019841d : in al, 1 ; add byte ptr [rbp + rsi*4 - 0x1b6b0008], al ; add dword ptr [rax], eax ; mov ah, 0xb6 ; clc ; jmp rsp
0x00000000000e9c54 : in al, dx ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; push rbp ; or byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 + 0x63], r9b ; ret
0x000000000012b13e : in al, dx ; cmp byte ptr [rax - 1], 0x5b ; pop rbp ; pop r12 ; ret
0x000000000013afbb : in al, dx ; mov eax, dword ptr [rax + 0x20] ; test eax, eax ; je 0x13afdc ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007b8f3 : in al, dx ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012d7cb : in al, dx ; mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000048be4 : in al, dx ; or byte ptr [rbp + 0x39], cl ; ret
0x00000000001242f9 : in al, dx ; xor al, ch ; xor byte ptr [rbp - 2], bl ; inc dword ptr [rbp - 0x769b8740] ; ret
0x000000000010af8a : in eax, -0x10 ; cmpxchg qword ptr [rip + 0x2b628c], rdx ; je 0x10afa5 ; pop rbp ; ret
0x00000000001148c9 : in eax, 0 ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x2f], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000049dfa : in eax, 0 ; add rsp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000184093 : in eax, 0x2d ; cmpsd dword ptr [rsi], dword ptr [rdi] ; xor byte ptr [rsi + 0x4ce2e5dd], 0x67 ; add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x00000000000f87d8 : in eax, 1 ; add byte ptr [rbx + 0x48082444], cl ; add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b0a2a : in eax, dx ; add al, 0x41 ; mov edi, dword ptr [rbp] ; mov rsi, r12 ; call 0x10ccbb
0x000000000012e711 : in eax, dx ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x75], 0x74 ; and al, 0x10 ; mov rdi, rbp ; call r14
0x00000000000ba34c : in eax, dx ; add dword ptr [rbp - 0x30], esi ; sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003b01a : in eax, dx ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013bca8 : in eax, dx ; add rsp, 0x20 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006bbf1 : in eax, dx ; add rsp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000f0c55 : in eax, dx ; dec dword ptr [rax - 0x7b] ; in eax, dx ; jne 0xf0c4f ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000044f9d : in eax, dx ; je 0x44fb1 ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000004501d : in eax, dx ; je 0x45031 ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000450cb : in eax, dx ; je 0x450df ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000006bbe2 : in eax, dx ; je 0x6bc0c ; add rsp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000b650e : in eax, dx ; je 0xb6522 ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b65bc : in eax, dx ; je 0xb65d0 ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b665e : in eax, dx ; je 0xb6672 ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001313c6 : in eax, dx ; jne 0x1313f0 ; pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013da0c : in eax, dx ; jne 0x13da6e ; add rsp, 8 ; mov eax, 1 ; pop rbx ; pop rbp ; ret
0x0000000000172244 : in eax, dx ; jne 0x172235 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000017237f : in eax, dx ; jne 0x172361 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007cc97 : in eax, dx ; jne 0x7cd6e ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007cf48 : in eax, dx ; jne 0x7cffe ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000008b93e : in eax, dx ; jne 0x8b927 ; test r12, r12 ; jne 0x8b971 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f0c5a : in eax, dx ; jne 0xf0c4a ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000002bd0 : in eax, dx ; mov byte ptr [rbp + 7], ah ; or ah, byte ptr [rbp + 0xc] ; scasd eax, dword ptr [rdi] ; xbegin 0xfffffffff8c6efe0 ; ret
0x000000000010e410 : in eax, dx ; mov qword ptr [r12], rbp ; je 0x10e437 ; xor edx, edx ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000aed2f : in eax, dx ; mov r10, rbp ; setne dl ; jmp 0xaed4d
0x00000000000b171e : in eax, dx ; mov r10, rbp ; setne dl ; jmp 0xb173d
0x00000000000da738 : in eax, dx ; movsxd rax, dword ptr [rsi + rbp*4] ; add rax, rsi ; jmp rax
0x000000000019531a : in eax, dx ; push qword ptr [rdi + rbp*4 - 0x4afc0000] ; in eax, dx ; jmp rsp
0x0000000000139c76 : in eax, dx ; setne al ; neg eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007d792 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x000000000012e896 : inc byte ptr [rcx + 0x54] ; push rbp ; mov r13, rsi ; push rbx ; sub rsp, 0x60 ; call 0x13ab0e
0x0000000000116fbf : inc byte ptr [rcx] ; sbb eax, eax ; add rsp, 0x10 ; pop rbx ; and eax, 0xc ; pop rbp ; pop r12 ; ret
0x000000000013a591 : inc dword ptr [rax] ; add byte ptr [rax], al ; mov byte ptr [rax], 0 ; jle 0x13a5b7 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000d024c : inc dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x308] ; call r12
0x00000000000ea37b : inc dword ptr [rax] ; add rsp, 0x68 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004c038 : inc dword ptr [rbp + 0x29] ; enter -0x367c, 0x74 ; sbb dword ptr [rbx - 0x48743], eax ; call qword ptr [rax]
0x00000000001200d2 : inc dword ptr [rbp + 0x31] ; rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0x8945
0x00000000000eeb09 : inc dword ptr [rbp + 0x31] ; rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret 0x41e9
0x000000000004aa74 : inc dword ptr [rbp + 0x31] ; shr bl, cl ; in eax, dx ; cmp rdi, rsi ; mov rax, rsi ; cmovae rax, rdi ; ret
0x000000000009d962 : inc dword ptr [rbp + 0x38] ; ret
0x000000000009a43d : inc dword ptr [rbp + 0x38] ; ret 0xf75
0x0000000000143890 : inc dword ptr [rbp + 0x480b78c0] ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013a62c : inc dword ptr [rbp + 0x480f78c0] ; add esp, 0x18 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000fe538 : inc dword ptr [rbp + 0x48c778c0] ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000114738 : inc dword ptr [rbp + 0x49d674c0] ; mov eax, dword ptr [rsp + 0x38] ; jmp 0x114712
0x0000000000130852 : inc dword ptr [rbp + 0x5b0975c0] ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000005fa58 : inc dword ptr [rbp + 0x6c840fc9] ; and eax, 0x89480000 ; ret
0x00000000000ff231 : inc dword ptr [rbp + 0xb8c0] ; add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x0000000000194067 : inc dword ptr [rbp + rbx*4 - 4] ; call rsp
0x00000000001986ab : inc dword ptr [rbp + rsi*8 + 0x45740001] ; stc ; call rsp
0x0000000000135928 : inc dword ptr [rbp - 0x38ec8a40] ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000ff201 : inc dword ptr [rbp - 0x39fc8640] ; add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x000000000003a963 : inc dword ptr [rbp - 0x3db7f040] ; pop rbx ; ret
0x00000000001358ec : inc dword ptr [rbp - 0x3f6af040] ; add rsp, 8 ; movzx eax, al ; add eax, 1 ; ret
0x0000000000132aa3 : inc dword ptr [rbp - 0x3f6af040] ; add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000001308c6 : inc dword ptr [rbp - 0x3f6af040] ; movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000456bf : inc dword ptr [rbp - 0x3f6bf040] ; add rsp, 8 ; movzx eax, al ; ret
0x0000000000145a0e : inc dword ptr [rbp - 0x6277f040] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; sub byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x00000000001242ff : inc dword ptr [rbp - 0x769b8740] ; ret
0x00000000001246d1 : inc dword ptr [rbp - 0x76a18740] ; ret
0x0000000000064532 : inc dword ptr [rbp - 0x76c68b40] ; ret
0x000000000009aaf8 : inc dword ptr [rbp - 0x77] ; fld dword ptr [rbp + 0x38] ; enter -0x208e, 0x48 ; mov edx, eax ; jmp 0x9aa94
0x000000000009bb90 : inc dword ptr [rbp - 0x77] ; fld dword ptr [rbp + 0x38] ; enter -0x208e, 0x48 ; mov edx, eax ; jmp 0x9bb34
0x000000000009d803 : inc dword ptr [rbp - 0x77] ; fld dword ptr [rbp + 0x38] ; enter -0x208e, 0x48 ; mov edx, eax ; jmp 0x9d7b4
0x00000000001113b5 : inc dword ptr [rbp - 0x77] ; ret 0xaee9
0x00000000000997e8 : inc dword ptr [rbp - 0x77] ; rol byte ptr [rbp - 0x77], 1 ; cli ; cmp r10b, r8b ; jb 0x997de ; mov rdx, rax ; jmp 0x9978a
0x00000000001850e3 : inc dword ptr [rbp - 0x7a0011f4] ; or al, 0xee ; call rbx
0x0000000000185143 : inc dword ptr [rbp - 0x7a0011f4] ; or al, 0xee ; jmp rbx
0x00000000001012cf : inc dword ptr [rbp - 0x7ce38b40] ; ret
0x000000000010131a : inc dword ptr [rbp - 0x7cee8b40] ; ret
0x00000000001850db : inc dword ptr [rbp - 0xa0011f4] ; or ebp, esi ; inc dword ptr [rbp - 0x7a0011f4] ; or al, 0xee ; call rbx
0x000000000013619e : inc dword ptr [rbx + 0x277e01f8] ; add rsp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000121a64 : inc dword ptr [rbx + 0xe75fff8] ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001360ac : inc dword ptr [rbx + 0xe7e01f8] ; xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003b015 : inc dword ptr [rbx - 0x128a0005] ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000145549 : inc dword ptr [rbx - 0x2e8b0008] ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007b8ef : inc dword ptr [rcx + 0xf] ; in al, dx ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006f142 : inc dword ptr [rcx - 0x100c1a] ; dec dword ptr [rcx] ; out dx, al ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013a5b5 : inc dword ptr [rcx - 0x3a] ; add al, 0x2c ; add byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000aaa7f : inc dword ptr [rcx - 0x75] ; add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000099938 : inc dword ptr [rcx - 0x77] ; fld dword ptr [rbp + 0x38] ; enter -0x208e, 0x48 ; mov edx, eax ; jmp 0x998d4
0x00000000001869bb : inc dword ptr [rdx] ; sahf ; lcall ptr [rsi + rbp*4 - 0xd] ; inc dword ptr [rdx] ; sahf ; jmp rdx
0x0000000000199803 : inc dword ptr [rsp + rbp + 1] ; add byte ptr [rcx + rcx*8 - 3], dh ; ljmp ptr [rcx + rbx*2] ; add byte ptr [rdx + rcx*8 - 3], dl ; jmp rsp
0x000000000007d44b : inc ebx ; nop dword ptr [rax] ; add rsp, 8 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000005a41d : inc edi ; test dword ptr [rdi + rbp*8 - 1], ecx ; call qword ptr [rax]
0x0000000000187e1f : inc esi ; fdivrp st(5) ; lcall ptr [rbp - 0x22] ; cmc ; call rsp
0x000000000012a180 : insb byte ptr [rdi], dx ; and al, 0x40 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000037b8c : insb byte ptr [rdi], dx ; and al, 0x50 ; nop ; mov rsi, r13 ; mov rdi, r14 ; mov rdx, rbp ; call r15
0x0000000000193c6d : insb byte ptr [rdi], dx ; cld ; ljmp ptr [rsp + rbp*2] ; cld ; call rdx
0x00000000001986a4 : insb byte ptr [rdi], dx ; cmc ; add dword ptr [rax], eax ; add al, 0x39 ; stc ; inc dword ptr [rbp + rsi*8 + 0x45740001] ; stc ; call rsp
0x000000000019841c : insb byte ptr [rdi], dx ; in al, 1 ; add byte ptr [rbp + rsi*4 - 0x1b6b0008], al ; add dword ptr [rax], eax ; mov ah, 0xb6 ; clc ; jmp rsp
0x000000000012a1bc : insb byte ptr [rdi], dx ; sub dword ptr [rax], eax ; and dword ptr [rax + 0x40], 0xfffffff9 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013dd93 : insb byte ptr [rdi], dx ; xor eax, eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000991cf : insd dword ptr [rdi], dx ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000193c69 : insd dword ptr [rdi], dx ; cld ; lcall ptr [rsp + rbp*2 + 0x6c2cfffc] ; cld ; call rdx
0x0000000000193c65 : insd dword ptr [rdi], dx ; cld ; ljmp ptr [rbp*2 + 0x6c9cfffc] ; cld ; ljmp ptr [rsp + rbp*2] ; cld ; call rdx
0x00000000001963b2 : int1 ; dec esp ; and dword ptr [rcx], eax ; add byte ptr [rbp + rbx*4 - 0xf], al ; jmp rsp
0x00000000000768ce : int1 ; lea rsi, qword ptr [rbp + 0x50] ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000076a8a : int1 ; lea rsi, qword ptr [rbp + 0x90] ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00000000000f541d : int1 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call 0xf169c
0x000000000013a4ba : int1 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000098dce : int1 ; pop rbx ; pop rbp ; ret
0x0000000000187e1d : iretd ; cmc ; inc esi ; fdivrp st(5) ; lcall ptr [rbp - 0x22] ; cmc ; call rsp
0x0000000000102be0 : ja 0x102c4c ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000117545 : ja 0x11751c ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001196b3 : ja 0x119710 ; test rbx, rbx ; jne 0x1196d8 ; add rsp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000011aea1 : ja 0x11aed2 ; mov r15, qword ptr [rdi + 0x28] ; mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000012b11f : ja 0x12b13a ; sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000355e1 : ja 0x35612 ; mov r15, qword ptr [rdi + 0x28] ; mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x0000000000036f39 : ja 0x36f5f ; add rsp, 0x88 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000795a8 : ja 0x795c1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079655 : ja 0x79673 ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000009868d : ja 0x9866f ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d7104 : ja 0xd7146 ; add rsp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f803e : ja 0xf7fd4 ; pop rbx ; pop rbp ; ret
0x00000000000f8760 : ja 0xf87fe ; add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fce03 : ja 0xfce82 ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000febf8 : ja 0xfec4f ; add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000febf7 : ja 0xfec7e ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001004ef : jae 0x1004bc ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013dc2e : jae 0x13dc86 ; add esp, 0x20 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000050a98 : jae 0x50ac0 ; mov qword ptr [rcx + rdx*8], rax ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000737de : jae 0x73745 ; mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007d473 : jae 0x7d401 ; movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000080bff : jae 0x80bb6 ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000098568 : jae 0x98590 ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fce04 : jae 0xfce57 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000121aa2 : jb 0x121ab7 ; add byte ptr [rbx + 0x4804c244], cl ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001725fe : jb 0x1725f4 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000173399 : jb 0x173398 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000180db4 : jb 0x180deb ; pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000001872e8 : jb 0x1872f7 ; hlt ; lcall ptr [rdx + rbp*8 + 0x1a2fff3] ; hlt ; call rbx
0x0000000000029b17 : jb 0x29b35 ; add rsp, 0xa0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000085a2c : jb 0x85a17 ; mov byte ptr [rsi + rbx], r9b ; add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000096834 : jb 0x96848 ; mov qword ptr [rdx], r12 ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b67fb : jb 0xb67ad ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000000ceb0d : jb 0xceb16 ; add byte ptr [rbp - 0x27], dh ; xor eax, eax ; ret
0x00000000000dfcad : jb 0xdfcb7 ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000011b403 : jbe 0x11b4a2 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000139f3a : jbe 0x139f5f ; xor eax, eax ; add rsp, 0x100 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003b3dd : jbe 0x3b401 ; add dl, dh ; movups xmmword ptr [rbx], xmm0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000568d0 : jbe 0x568f8 ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000070baa : jbe 0x70c17 ; mov rax, qword ptr [rbp + 0x48] ; add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000073465 : jbe 0x734a0 ; mov rax, qword ptr [rbp + 0x18] ; mov esi, r12d ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000738a2 : jbe 0x738fa ; mov eax, dword ptr [rbp + 0x20] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000000738a1 : jbe 0x73928 ; mov rax, qword ptr [rbp + 0x20] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000000a0e4c : jbe 0xa0e2a ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001013d0 : je 0x1013fa ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000103477 : je 0x103495 ; pop rbx ; lea rax, qword ptr [rip + 0x2c0ddf] ; pop rbp ; pop r12 ; ret
0x0000000000104ac8 : je 0x1055ad ; mov rbp, rdi ; xor edx, edx ; xor esi, esi ; call rbx
0x000000000010a066 : je 0x10a090 ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010af94 : je 0x10af9b ; pop rbp ; ret
0x000000000010e3db : je 0x10e3f0 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000010e415 : je 0x10e432 ; xor edx, edx ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000010fbc5 : je 0x10fbda ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010fbfc : je 0x10fc24 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000112917 : je 0x11295f ; sub eax, r8d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000114adc : je 0x114b86 ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001176cb : je 0x1176f4 ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000001177d0 : je 0x117812 ; lea rsi, qword ptr [rbp - 0x20] ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x00000000001192e9 : je 0x119310 ; or ebp, edx ; mov dword ptr [rbx], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011a429 : je 0x11a450 ; or ebp, edx ; mov dword ptr [rbx], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011eb65 : je 0x11eb90 ; add rsp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011f0b5 : je 0x11f0e0 ; add rsp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011f8f3 : je 0x11f8dd ; pop rbx ; xor eax, eax ; mov byte ptr [rdx], 0 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001219eb : je 0x121ad8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001273f7 : je 0x127420 ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012adb0 : je 0x12adf0 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012b5f4 : je 0x12b668 ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012d737 : je 0x12d72a ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012e919 : je 0x12e925 ; mov rdi, rbp ; call rax
0x00000000001304f2 : je 0x1304fe ; mov rdi, rbp ; call rdx
0x00000000001309f7 : je 0x130af4 ; mov rdi, rbp ; call qword ptr [rbx]
0x0000000000131410 : je 0x13142c ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000132ad9 : je 0x132afd ; mov eax, 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000132b99 : je 0x132bbd ; add rsp, 8 ; mov eax, 1 ; pop rbx ; pop rbp ; ret
0x0000000000132c89 : je 0x132cad ; mov eax, 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001356bb : je 0x1356c9 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000136b98 : je 0x136ba4 ; mov rdi, rbp ; call rax
0x0000000000136db8 : je 0x136dc4 ; mov rdi, rbp ; call rax
0x000000000013adde : je 0x13adfc ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013afc1 : je 0x13afd6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013b603 : je 0x13b634 ; add al, 0x7e ; cmp byte ptr [rcx - 0x75], al ; push rbp ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000013b87b : je 0x13b889 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013bf94 : je 0x13bfa2 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013cfee : je 0x13d058 ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013d40d : je 0x13d470 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013d4cd : je 0x13d530 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013d58d : je 0x13d5f0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013d64d : je 0x13d6b0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013daa7 : je 0x13db30 ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013dbee : je 0x13dc6c ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013ddab : je 0x13dda4 ; mov rsi, r13 ; mov rdi, rbp ; mov edx, 0xffffffff ; xor eax, eax ; call r8
0x000000000013e864 : je 0x13e897 ; xor eax, eax ; mov edx, 0xffffffff ; mov rsi, rbx ; mov rdi, rbp ; call rcx
0x000000000013e879 : je 0x13e8b2 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013e98e : je 0x13e9d0 ; xor eax, eax ; mov edx, 0xffffffff ; mov rsi, r14 ; mov rdi, rbp ; call r12
0x000000000013eaf2 : je 0x13eb19 ; add dword ptr [rbx + 0x28], r12d ; mov qword ptr [rbx + 0x20], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014554d : je 0x14552c ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000198564 : je 0x198563 ; add dword ptr [rax], eax ; add edi, ecx ; push qword ptr [rsi + rbp*8 + 0x3a40001] ; stc ; jmp rsp
0x00000000000204ad : je 0x204b9 ; mov rdi, rbp ; call rax
0x00000000000213e7 : je 0x21413 ; sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x0000000000036c9e : je 0x36cbb ; add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000036e00 : je 0x36e1b ; add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000044f9e : je 0x44fb0 ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000004501e : je 0x45030 ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000450cc : je 0x450de ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000006bb66 : je 0x6bb9e ; add rsp, 0x1008 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000006bbe3 : je 0x6bc0b ; add rsp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000007044f : je 0x70433 ; add rsp, 0x20 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000708fb : je 0x70915 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000071d6e : je 0x71d8d ; or ebp, edx ; mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007410a : je 0x7416c ; pop rbp ; pop r12 ; ret
0x00000000000741af : je 0x74211 ; pop rbp ; pop r12 ; ret
0x000000000007430a : je 0x7431a ; and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000074366 : je 0x74376 ; and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000076260 : je 0x76224 ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000076243 : je 0x7626f ; add rsp, 8 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000007625b : je 0x76271 ; cmp ebp, 0xa ; je 0x76229 ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000076420 : je 0x7643f ; add rsp, 0x10 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000793b8 : je 0x79426 ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000079cde : je 0x79cfd ; or ebp, edx ; mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079e9b : je 0x79e72 ; add rsp, 0x18 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000007c875 : je 0x7c88b ; cmp ebp, 0xa ; je 0x7c907 ; movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007c87a : je 0x7c902 ; movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007d819 : je 0x7d846 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007e455 : je 0x7e465 ; and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000081957 : je 0x81964 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000856b0 : je 0x856da ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008944d : je 0x894a6 ; add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008944c : je 0x894a7 ; add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008a18c : je 0x8a26c ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000008ac70 : je 0x8ad8f ; mov rdx, rbp ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000008aeae : je 0x8af9c ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000008b03a : je 0x8b0d4 ; mov rsi, rbp ; mov rdi, r12 ; call rax
0x000000000008b18f : je 0x8b237 ; mov rdi, r13 ; mov rdx, rbp ; mov rsi, r12 ; call rax
0x000000000008d832 : je 0x8d846 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000984c4 : je 0x984d7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000098dc3 : je 0x98dfe ; add rcx, 1 ; sub rax, 1 ; jne 0x98dce ; pop rbx ; pop rbp ; ret
0x00000000000a0c11 : je 0xa0c6f ; and byte ptr [rsi + 0xf], ah ; xlatb ; rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x00000000000abd9f : je 0xabd91 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ac37d : je 0xac373 ; mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000acfc7 : je 0xad020 ; add esp, 0x60 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ad45e : je 0xad48d ; sbb byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x00000000000ad71e : je 0xad74d ; sbb byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbp ; call rbx
0x00000000000ad9fe : je 0xada2d ; sbb byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbp ; call rbx
0x00000000000aed27 : je 0xaf0de ; test r13d, r13d ; mov r10, rbp ; setne dl ; jmp 0xaed55
0x00000000000b1716 : je 0xb1a55 ; test r13d, r13d ; mov r10, rbp ; setne dl ; jmp 0xb1745
0x00000000000b650f : je 0xb6521 ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b65bd : je 0xb65cf ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b665f : je 0xb6671 ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000ba730 : je 0xba742 ; add dword ptr [rax + 0x10], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ba840 : je 0xba825 ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c9126 : je 0xc921d ; mov rbp, r13 ; mov rdi, rbx ; call r12
0x00000000000c92e3 : je 0xc92f7 ; mov qword ptr [r13], r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000cc4a5 : je 0xcc4d0 ; add rsp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cc845 : je 0xcc870 ; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d024a : je 0xd035d ; mov rdi, qword ptr [rbp - 0x308] ; call r12
0x00000000000d8092 : je 0xd80f9 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d9b3e : je 0xd9bbe ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000db283 : je 0xdb2c7 ; nop dword ptr [rax] ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ddc82 : je 0xddcb0 ; or byte ptr [rbp - 0x9d88b0a], al ; ret
0x00000000000e0a8b : je 0xe0abd ; add al, 0x31 ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000000f1025 : je 0xf1003 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fdbf6 : je 0xfdc32 ; mov dword ptr fs:[r8], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fdf8b : je 0xfdfaf ; add rsp, 0x10 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fe425 : je 0xfe401 ; pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x00000000000ffbe8 : je 0xffc00 ; or dword ptr [rax], 0x8000 ; lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000102af9 : jg 0x102b47 ; add rsp, 0x90 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001166fa : jg 0x11672b ; add byte ptr [rbp - 0x10], dh ; mov edx, dword ptr [rdi + 0x28] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x000000000011aea5 : jg 0x11aeda ; mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x0000000000125c44 : jg 0x125cc7 ; mov byte ptr [rbp + 0x11], bl ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000129eac : jg 0x129e62 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012ff0d : jg 0x12fef3 ; add byte ptr [rax], al ; test eax, eax ; jne 0x12ff30 ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000355e5 : jg 0x3561a ; mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x00000000000ce354 : jg 0xce356 ; lea rsp, qword ptr [rbp - 0x18] ; xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000d2501 : jg 0xd250e ; add byte ptr [rbp + 0xa], dh ; or esi, 2 ; mov eax, esi ; ret
0x00000000000d25d1 : jg 0xd25e4 ; add byte ptr [rbp + 0x12], dh ; or esi, 2 ; xor eax, eax ; cmp esi, 1 ; sete al ; ret
0x00000000001046ad : jge 0x104678 ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000013e876 : jge 0x13e885 ; add dh, byte ptr [rbp + rbp + 0x48] ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000129e17 : jl 0x129dd1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013b575 : jl 0x13b548 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000198234 : jl 0x19821a ; add dword ptr [rax], eax ; and al, 0x65 ; clc ; lcall ptr [rbp + rdx*8 + 0x66240001] ; clc ; jmp rsp
0x0000000000029867 : jl 0x2989c ; adc byte ptr [rbp + rcx*4 - 0x7c], cl ; and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x000000000007c87b : jl 0x7c8c6 ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001360b0 : jle 0x1360ca ; xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001361a2 : jle 0x1361d7 ; add rsp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013a598 : jle 0x13a5b0 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000194b1d : jle 0x194b25 ; add byte ptr [rax + rbp - 0x16], dl ; jmp rsp
0x0000000000050b70 : jle 0x50a64 ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000006eff1 : jle 0x6f001 ; or dword ptr [rbx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000018438b : jmp qword ptr [rbp - 5]
0x0000000000101408 : jne 0x101383 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000104638 : jne 0x104620 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000010723a : jne 0x107238 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000001072aa : jne 0x1072a8 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000111b58 : jne 0x111b79 ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001148ce : jne 0x114907 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001148c6 : jne 0x114916 ; and ebp, 0x200 ; jne 0x11490f ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000114e6e : jne 0x114e60 ; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001171df : jne 0x117180 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000001196b8 : jne 0x1196d3 ; add rsp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000121a68 : jne 0x121a82 ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012476e : jne 0x12476b ; mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000125a3a : jne 0x125b48 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000126c6c : jne 0x126cb0 ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012aade : jne 0x12aac0 ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012ae8c : jne 0x12ae80 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012cc6c : jne 0x12cc0a ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012d7ca : jne 0x12d7c7 ; mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012e0d3 : jne 0x12e0ea ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012f2c3 : jne 0x12f2da ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012f380 : jne 0x12f34e ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012f42c : jne 0x12f44a ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012f489 : jne 0x12f4b0 ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012fd56 : jne 0x12fd72 ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012fd93 : jne 0x12fdaa ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012fe43 : jne 0x12fe5a ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012fe93 : jne 0x12feaa ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012ff13 : jne 0x12ff2a ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000130855 : jne 0x130868 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000130dcd : jne 0x130e2c ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001313c7 : jne 0x1313ef ; pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000131c83 : jne 0x131c9a ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000132a88 : jne 0x132aa2 ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000132b23 : jne 0x132b3a ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000132bbe : jne 0x132bda ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000132c37 : jne 0x132bf6 ; add byte ptr [rax], al ; test eax, eax ; jne 0x132c60 ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000132c3d : jne 0x132c5a ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013592b : jne 0x13594c ; mov dword ptr [rbx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000139f82 : jne 0x139f4e ; mov byte ptr [rdx], 0 ; add rsp, 0x100 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013afba : jne 0x13afb5 ; mov eax, dword ptr [rax + 0x20] ; test eax, eax ; je 0x13afdd ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013bacb : jne 0x13baec ; mov dword ptr [rbx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013d155 : jne 0x13d148 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013d205 : jne 0x13d235 ; add rsp, 8 ; mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000013d7e9 : jne 0x13d810 ; mov byte ptr [rbx], bpl ; mov eax, 1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013d868 : jne 0x13d890 ; mov byte ptr [rbx], bpl ; mov eax, 1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013da0d : jne 0x13da6d ; add rsp, 8 ; mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000013dc2d : jne 0x13dcb1 ; add rsp, 0x20 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013dd5f : jne 0x13dd5f ; mov rsi, r13 ; mov rdi, rbp ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x000000000013dd92 : jne 0x13de0e ; xor eax, eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013e146 : jne 0x13e1aa ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013e216 : jne 0x13e27a ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013e2e6 : jne 0x13e34a ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013e3a6 : jne 0x13e40a ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013e897 : jne 0x13e870 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000145876 : jne 0x14588a ; mov dword ptr fs:[rbx], ebp ; xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000171143 : jne 0x171140 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000172245 : jne 0x172234 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000017232d : jne 0x17231e ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000172380 : jne 0x172360 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001733db : jne 0x1733fc ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002219e : jne 0x221c0 ; mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000226e8 : jne 0x226ce ; mov qword ptr [rbp], r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000022802 : jne 0x227f8 ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002bb64 : jne 0x2bbc0 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002e5fa : jne 0x2e610 ; mov eax, dword ptr [rbp + 8] ; sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000033042 : jne 0x3302b ; mov byte ptr [rcx], 0 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003a89c : jne 0x3a868 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003b019 : jne 0x3b014 ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006bbde : jne 0x6bc00 ; test rbp, rbp ; je 0x6bc10 ; add rsp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000071fad : jne 0x71fcc ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007693a : jne 0x76915 ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000076a02 : jne 0x769e5 ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000076afa : jne 0x76ad7 ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000078f9f : jne 0x78ff0 ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000079b6e : jne 0x79b89 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007cc98 : jne 0x7cd6d ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007cf49 : jne 0x7cffd ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007e121 : jne 0x7e138 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007e4f1 : jne 0x7e4b7 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007fe5d : jne 0x7fe57 ; add rsp, 8 ; mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008574a : jne 0x8575a ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000869e2 : jne 0x86aa4 ; add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000873dc : jne 0x8752a ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x0000000000088166 : jne 0x88248 ; add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000088a55 : jne 0x88bba ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x000000000008a757 : jne 0x8a760 ; pop rbx ; mov dword ptr [rip + 0x339084], 1 ; pop rbp ; pop r12 ; ret
0x000000000008b3bc : jne 0x8b2b3 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008b93f : jne 0x8b926 ; test r12, r12 ; jne 0x8b970 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008b944 : jne 0x8b96b ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009829f : jne 0x98291 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000098523 : jne 0x98516 ; mov qword ptr [rbp], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000098dcd : jne 0x98dc4 ; pop rbx ; pop rbp ; ret
0x00000000000acfc6 : jne 0xad04c ; add rsp, 0x60 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ba21a : jne 0xba202 ; sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ba278 : jne 0xba260 ; sub ebx, eax ; mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ba2e8 : jne 0xba2d0 ; add rsp, 8 ; sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ba34e : jne 0xba32e ; sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bf835 : jne 0xbf828 ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bfe58 : jne 0xbfe80 ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000c7cd6 : jne 0xc7cf2 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c8267 : jne 0xc829a ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c92e7 : jne 0xc92f3 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000d263c : jne 0xd2631 ; nop ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d273e : jne 0xd2730 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d8eca : jne 0xd8eb8 ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000db19e : jne 0xdb16a ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000dfc59 : jne 0xdfc3e ; mov dword ptr [rbx + 0x2c], eax ; mov dword ptr [rbx + 0x30], eax ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f0c5b : jne 0xf0c49 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f0ff5 : jne 0xf0fef ; test dl, dl ; jne 0xf103d ; pop rbx ; mov eax, 5 ; pop rbp ; pop r12 ; ret
0x00000000000f0ff9 : jne 0xf1039 ; pop rbx ; mov eax, 5 ; pop rbp ; pop r12 ; ret
0x00000000000f7019 : jne 0xf7032 ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000f7135 : jne 0xf7153 ; mov eax, 9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fe43c : jne 0xfe434 ; mov dword ptr fs:[rbx], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ff6b2 : jne 0xff690 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000ff883 : jne 0xff860 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000013ad71 : jno 0x13ad83 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013a3b2 : jnp 0x13a3fd ; add eax, 0xd8894900 ; mov ecx, r12d ; mov rdi, rbp ; call 0x5665f
0x000000000019710d : jnp 0x19711e ; add byte ptr [rax + rbp*2], ah ; idiv bh ; movsb byte ptr [rdi], byte ptr [rsi] ; jnp 0x197126 ; add byte ptr [rbp + rbp*2 - 0xa], dh ; call rsp
0x0000000000197115 : jnp 0x19711e ; add byte ptr [rbp + rbp*2 - 0xa], dh ; call rsp
0x0000000000036c9b : jnp 0x36cb3 ; cli ; je 0x36cbe ; add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000036dfd : jnp 0x36e15 ; cli ; je 0x36e1e ; add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000008b95e : jnp 0x8b96e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bba52 : jnp 0xbba67 ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000012a1bb : jns 0x12a238 ; sub dword ptr [rax], eax ; and dword ptr [rax + 0x40], 0xfffffff9 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d8ba6 : jns 0xd8bb6 ; add dh, byte ptr [rbp - 0x2b] ; jmp 0xd8b76
0x0000000000130ac8 : jo 0x130af8 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000204a2 : jo 0x204b8 ; add byte ptr [rax], al ; mov rax, qword ptr [r13 + 0x18] ; test rax, rax ; je 0x204c4 ; mov rdi, rbp ; call rax
0x00000000000453a6 : jo 0x453b1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007b794 : jo 0x7b7e5 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007b7df : jo 0x7b830 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000060ed3 : jp 0x60eea ; mov rsi, qword ptr [rbp - 0x660] ; xor edx, edx ; jmp 0x5d0fb
0x0000000000088797 : jp 0x887a9 ; add byte ptr [rax], al ; add rsp, 0x10 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ac7f1 : jp 0xac781 ; sal byte ptr [rbp - 0x26], 0x48 ; mov eax, edi ; ret
0x0000000000083f9b : jrcxz 0x83fd5 ; add byte ptr [rbp + 0x39], cl ; ret 0x8948
0x0000000000098524 : jrcxz 0x9857b ; mov dword ptr [rbp], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000aaa52 : jrcxz 0xaaa62 ; sldt word ptr [rax] ; lea rax, qword ptr [rbx + 1] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f0c5c : jrcxz 0xf0cae ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010723f : js 0x10729f ; pop rbp ; ret
0x00000000001072af : js 0x10730f ; pop rbp ; ret
0x0000000000129861 : js 0x129893 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f65e : js 0x12f6c6 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013552c : js 0x135584 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000135a86 : js 0x135aee ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000135aaf : js 0x135b17 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000137fbd : js 0x138015 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013a62f : js 0x13a64a ; add rsp, 0x18 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000143893 : js 0x1438a8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000144113 : js 0x144126 ; add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003a4e4 : js 0x3a4fd ; mov qword ptr [rax], 4 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a538 : js 0x3a551 ; mov qword ptr [rax], 4 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000047495 : js 0x4749f ; add byte ptr [rbp - 0xa], dh ; pop rbx ; ret
0x0000000000048b8b : js 0x48bf3 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000795d4 : js 0x7961a ; add byte ptr [rdi + rax*8], ah ; sbb al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000798c0 : js 0x798fb ; add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x38 ; ret
0x0000000000079f08 : js 0x79f4f ; mov qword ptr [rbx + 0x90], rax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000081316 : js 0x8137e ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000082757 : js 0x827bf ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000082c3d : js 0x82ca5 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c9551 : js 0xc9567 ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cd23c : js 0xcd25d ; mov dword ptr fs:[rbx], ebp ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000f11b4 : js 0xf11c5 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fd45d : js 0xfd474 ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fdf39 : js 0xfdf52 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fe53b : js 0xfe50d ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fce62 : lahf ; add dword ptr [rax], eax ; mov eax, dword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000131c7d : lahf ; rol dword ptr [rax], 0 ; test eax, eax ; jne 0x131ca0 ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000051645 : lahf ; sal dh, 0xc2 ; and byte ptr [rcx - 0x77], al ; sal byte ptr [rbp + 4], 0x84 ; sal byte ptr [rbp + 0x73], 0xf6 ; ret 0x7440
0x00000000000752a3 : lcall ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000125aed : lcall ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000011f860 : lcall ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x00000000000fe42c : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x00000000001727ef : lcall ptr [rbp + 0x48] ; mov dword ptr [rip + 0x25291c], 0 ; ret
0x000000000019823b : lcall ptr [rbp + rdx*8 + 0x66240001] ; clc ; jmp rsp
0x0000000000186f03 : lcall ptr [rbp - 0x1f] ; ljmp ptr [rax + 0x7dfff3db] ; fcomi st(3) ; call rax
0x0000000000187e23 : lcall ptr [rbp - 0x22] ; cmc ; call rsp
0x00000000000e0ae5 : lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000096605 : lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000020b20 : lcall ptr [rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000007f893 : lcall ptr [rbx + 0x48] ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ca19d : lcall ptr [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000712ee : lcall ptr [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x00000000001872d7 : lcall ptr [rcx + rbp*8 - 0xd] ; call rbx
0x000000000013f4ed : lcall ptr [rdx + 0x59] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001872eb : lcall ptr [rdx + rbp*8 + 0x1a2fff3] ; hlt ; call rbx
0x000000000018727f : lcall ptr [rdx + rbp*8 - 0x1563000d] ; call rbx
0x00000000001872cf : lcall ptr [rdx + rbp*8 - 0x1563000d] ; lcall ptr [rcx + rbp*8 - 0xd] ; call rbx
0x00000000001872cb : lcall ptr [rdx + rbp*8 - 0x1563000d] ; lcall ptr [rdx + rbp*8 - 0x16a3000d] ; call rbx
0x00000000001872d3 : lcall ptr [rdx + rbp*8 - 0x16a3000d] ; call rbx
0x0000000000103474 : lcall ptr [rsi + 0x5f] ; je 0x103498 ; pop rbx ; lea rax, qword ptr [rip + 0x2c0ddf] ; pop rbp ; pop r12 ; ret
0x00000000001995ab : lcall ptr [rsi + rax + 2] ; add byte ptr [rbp + rsi - 5], dh ; jmp rsp
0x00000000001869bf : lcall ptr [rsi + rbp*4 - 0xd] ; inc dword ptr [rdx] ; sahf ; jmp rdx
0x0000000000193c6b : lcall ptr [rsp + rbp*2 + 0x6c2cfffc] ; cld ; call rdx
0x000000000010c6c5 : lds r8d, ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000aaa58 : lea eax, dword ptr [rbx + 1] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001267a0 : lea eax, dword ptr [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x000000000007214a : lea eax, dword ptr [rbx] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000403c2 : lea eax, dword ptr [rdx + rdx*4] ; mov rdx, rbp ; xor ebp, ebp ; add rax, rax ; sub rdx, rax ; jmp 0x40413
0x000000000010347b : lea eax, dword ptr [rip + 0x2c0ddf] ; pop rbp ; pop r12 ; ret
0x0000000000102ef8 : lea eax, dword ptr [rip + 0x2c12f2] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000100e52 : lea eax, dword ptr [rip + 0x2c32a8] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000100b40 : lea eax, dword ptr [rip + 0x2c34da] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004e293 : lea eax, dword ptr [rip + 0x8e7] ; mov dword ptr [rbp - 0x4f0], 1 ; jmp rax
0x0000000000059c97 : lea eax, dword ptr [rip + 0x963] ; mov dword ptr [rbp - 0x1098], 1 ; jmp rax
0x000000000003763b : lea ebx, dword ptr [rax + rsi] ; nop ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000098686 : lea ebx, dword ptr [rbx - 1] ; cmp rax, 1 ; ja 0x98676 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000073406 : lea ecx, dword ptr [rax + 4] ; mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000076b80 : lea ecx, dword ptr [rbp - 0x38] ; mov rcx, r13 ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x00000000000ad5ea : lea ecx, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rbx
0x00000000000ad321 : lea ecx, dword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000001356be : lea edi, dword ptr [rbp + 0x10] ; call rax
0x000000000007d65a : lea edx, dword ptr [rax + 1] ; mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000005c38a : lea edx, dword ptr [rax + 1] ; mov qword ptr [rbx], rdx ; mov byte ptr [rax], bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000106117 : lea edx, dword ptr [rax + 1] ; mov qword ptr [rdi + 0x28], rdx ; mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000063e4e : lea edx, dword ptr [rax + 4] ; mov qword ptr [rbx], rdx ; mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006a975 : lea edx, dword ptr [rcx + 8] ; mov qword ptr [rbp - 0x498], rdx ; jmp 0x6a94e
0x0000000000121a9f : lea edx, dword ptr [rip + 0x6727b] ; mov eax, dword ptr [rdx + rax*8 + 4] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000735d9 : lea edx, dword ptr [rsi + 4] ; mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000768d0 : lea esi, dword ptr [rbp + 0x50] ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000076a8c : lea esi, dword ptr [rbp + 0x90] ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00000000000769a9 : lea esi, dword ptr [rbp + 0x90] ; lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00000000001177d3 : lea esi, dword ptr [rbp - 0x20] ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x00000000000cfa3e : lea esi, dword ptr [rbp - 0xc0] ; mov rdi, rbx ; call qword ptr [r15]
0x00000000000e0bb9 : lea esi, dword ptr [rbx + rbp] ; call 0x913b9
0x0000000000039b42 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000ce369 : lea esp, dword ptr [rbp - 0x18] ; mov eax, 1 ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000001012e4 : lea esp, dword ptr [rbp - 0x18] ; mov eax, ebx ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000006e271 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000ce357 : lea esp, dword ptr [rbp - 0x18] ; xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000004ba72 : lea esp, dword ptr [rbp - 0x28] ; mov eax, ebx ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000021eec : lea esp, dword ptr [rbp - 0x28] ; mov eax, ecx ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000135109 : lea esp, dword ptr [rbp - 0x28] ; mov eax, edx ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000051621 : lea esp, dword ptr [rbp - 0x28] ; mov eax, r12d ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cd504 : lea esp, dword ptr [rbp - 0x28] ; mov eax, r13d ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000059642 : lea esp, dword ptr [rbp - 0x28] ; mov eax, r14d ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000eae20 : lea esp, dword ptr [rbp - 0x28] ; mov eax, r15d ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001249a1 : lea esp, dword ptr [rbp - 0x28] ; mov eax, r8d ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004d9c8 : lea esp, dword ptr [rbp - 0x28] ; mov eax, r9d ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002d02b : lea esp, dword ptr [rbp - 0x28] ; mov rax, r12 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000009a246 : lea esp, dword ptr [rbp - 0x28] ; mov rax, r13 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004afea : lea esp, dword ptr [rbp - 0x28] ; mov rax, r15 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000142b20 : lea esp, dword ptr [rbp - 0x28] ; mov rax, r8 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004ae1b : lea esp, dword ptr [rbp - 0x28] ; mov rax, rbx ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002fef7 : lea esp, dword ptr [rbp - 0x28] ; mov rax, rcx ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012be0e : lea esp, dword ptr [rbp - 0x28] ; mov rax, rdx ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cfa50 : lea esp, dword ptr [rbp - 0x28] ; movzx eax, al ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012edb6 : lea esp, dword ptr [rbp - 0x28] ; movzx eax, ax ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000209fd : lea esp, dword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000076b93 : lea esp, dword ptr [rbp - 0x28] ; pop rbx ; sub rax, r14 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002b499 : lea esp, dword ptr [rbp - 0x28] ; xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000076b7f : lea r9, qword ptr [rbp - 0x38] ; mov rcx, r13 ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x00000000000ad5e9 : lea r9, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rbx
0x00000000000ad320 : lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000aaa57 : lea rax, qword ptr [rbx + 1] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000072149 : lea rax, qword ptr [rbx + r12] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000403c1 : lea rax, qword ptr [rdx + rdx*4] ; mov rdx, rbp ; xor ebp, ebp ; add rax, rax ; sub rdx, rax ; jmp 0x40414
0x000000000010347a : lea rax, qword ptr [rip + 0x2c0ddf] ; pop rbp ; pop r12 ; ret
0x0000000000102ef7 : lea rax, qword ptr [rip + 0x2c12f2] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000100e51 : lea rax, qword ptr [rip + 0x2c32a8] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003763a : lea rbx, qword ptr [rax + r14] ; nop ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000098685 : lea rbx, qword ptr [rbx - 1] ; cmp rax, 1 ; ja 0x98677 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001356bd : lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000005c389 : lea rdx, qword ptr [rax + 1] ; mov qword ptr [rbx], rdx ; mov byte ptr [rax], bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000106116 : lea rdx, qword ptr [rax + 1] ; mov qword ptr [rdi + 0x28], rdx ; mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000063e4d : lea rdx, qword ptr [rax + 4] ; mov qword ptr [rbx], rdx ; mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006a974 : lea rdx, qword ptr [rcx + 8] ; mov qword ptr [rbp - 0x498], rdx ; jmp 0x6a94f
0x00000000000735d8 : lea rdx, qword ptr [rsi + 4] ; mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000768cf : lea rsi, qword ptr [rbp + 0x50] ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000076a8b : lea rsi, qword ptr [rbp + 0x90] ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00000000000769a8 : lea rsi, qword ptr [rbp + 0x90] ; lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00000000001177d2 : lea rsi, qword ptr [rbp - 0x20] ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x00000000000cfa3d : lea rsi, qword ptr [rbp - 0xc0] ; mov rdi, rbx ; call qword ptr [r15]
0x0000000000039b41 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000ce368 : lea rsp, qword ptr [rbp - 0x18] ; mov eax, 1 ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000001012e3 : lea rsp, qword ptr [rbp - 0x18] ; mov eax, ebx ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000006e270 : lea rsp, qword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000ce356 : lea rsp, qword ptr [rbp - 0x18] ; xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000004ba71 : lea rsp, qword ptr [rbp - 0x28] ; mov eax, ebx ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000021eeb : lea rsp, qword ptr [rbp - 0x28] ; mov eax, ecx ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000135108 : lea rsp, qword ptr [rbp - 0x28] ; mov eax, edx ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000209fc : lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002b498 : lea rsp, qword ptr [rbp - 0x28] ; xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000007693b : leave ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000424ec : leave ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012470a : leave ; idiv edi ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b67fa : leave ; jb 0xb67ae ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000003b445 : leave ; or eax, ecx ; cdqe ; mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000018521b : ljmp ptr [rbp + 0x16ffedf7] ; or ebp, esi ; call qword ptr [rsi]
0x0000000000187de7 : ljmp ptr [rbp + 0x1ffff52d] ; mov edx, 0xba1ffff5 ; cmc ; jmp rsi
0x00000000001986a3 : ljmp ptr [rbp + rsi*8 + 1] ; add byte ptr [rcx + rdi], al ; stc ; inc dword ptr [rbp + rsi*8 + 0x45740001] ; stc ; call rsp
0x0000000000193c67 : ljmp ptr [rbp*2 + 0x6c9cfffc] ; cld ; ljmp ptr [rsp + rbp*2] ; cld ; call rdx
0x0000000000198d33 : ljmp ptr [rcx + rbp + 2] ; add byte ptr [rsi + rcx*2 + 0x29bcfffa], ah ; add al, byte ptr [rax] ; push rsp ; cli ; jmp rsp
0x0000000000116753 : ljmp ptr [rdx] ; add byte ptr [rbp - 0x47f98a40], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000196583 : ljmp ptr [rsi + rbp - 0x7bbbffff] ; dec esp ; add dword ptr cs:[rax], eax ; je 0x196526 ; jmp rsp
0x000000000019841b : ljmp ptr [rsp + 1] ; add byte ptr [rbp + rsi*4 - 0x1b6b0008], al ; add dword ptr [rax], eax ; mov ah, 0xb6 ; clc ; jmp rsp
0x0000000000193c6f : ljmp ptr [rsp + rbp*2] ; cld ; call rdx
0x000000000010af8b : lock cmpxchg qword ptr [rip + 0x2b628c], rdx ; je 0x10afa4 ; pop rbp ; ret
0x0000000000180db1 : lock sbb dword ptr [rcx], ebp ; jb 0x180dee ; pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000126799 : lodsb al, byte ptr [rsi] ; idiv bh ; add rsp, 8 ; lea eax, dword ptr [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x0000000000194ca4 : lodsb al, byte ptr [rsi] ; xchg dword ptr [rax], eax ; add byte ptr [rcx + rbp*2 - 0x16], dl ; call rsp
0x0000000000132c38 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; test eax, eax ; jne 0x132c5f ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000101318 : lodsd eax, dword ptr [rsi] ; clc ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x0000000000103d73 : loop 0x103d43 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rbx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; jmp rax
0x00000000001983d5 : loop 0x1983de ; add byte ptr [rdi + rbp*4], al ; clc ; jmp rsp
0x00000000000ad31f : loop 0xad376 ; lea ecx, dword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000ad5e8 : loop 0xad63f ; lea ecx, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rbx
0x00000000000ad8c8 : loop 0xad91f ; lea ecx, dword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000001307ad : loope 0x130820 ; nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013d156 : loope 0x13d1af ; add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000172246 : loope 0x17229b ; add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000bf836 : loope 0xbf88f ; add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000114e6f : loopne 0x114ec8 ; add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000116fc9 : loopne 0x116fdc ; pop rbp ; pop r12 ; ret
0x000000000011a9cd : loopne 0x11aa33 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001278a6 : loopne 0x1278b4 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012793d : loopne 0x12794b ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012bc7c : loopne 0x12bce4 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012e94f : loopne 0x12e9b5 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012f250 : loopne 0x12f25a ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; call qword ptr [rax]
0x000000000012f2be : loopne 0x12f2cf ; add byte ptr [rbp + 0x480b75c0], al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001327ec : loopne 0x132828 ; xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rbp + 0x31] ; ret 0xc149
0x0000000000138b5f : loopne 0x138bc7 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000138e1f : loopne 0x138e87 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000142323 : loopne 0x14238b ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001869b8 : loopne 0x186977 ; inc dword ptr [rdx] ; sahf ; lcall ptr [rsi + rbp*4 - 0xd] ; inc dword ptr [rdx] ; sahf ; jmp rdx
0x0000000000023cc6 : loopne 0x23d2e ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002d030 : loopne 0x2d098 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000508f6 : loopne 0x5095c ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000051626 : loopne 0x5168e ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000056acb : loopne 0x56b33 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000005c235 : loopne 0x5c29b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006d4ce : loopne 0x6d532 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006dc0e : loopne 0x6dc72 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000073244 : loopne 0x7329d ; add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000076735 : loopne 0x7678d ; sub eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007847c : loopne 0x784d6 ; add edx, ecx ; mov qword ptr [rbp + 0x30], rdx ; mov qword ptr [rbx + 0x18], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079288 : loopne 0x792ea ; pop rbp ; pop r12 ; ret
0x000000000008ad47 : loopne 0x8adaf ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000982a3 : loopne 0x98305 ; pop rbp ; pop r12 ; ret
0x00000000000c5a81 : loopne 0xc5ae9 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000c8f59 : loopne 0xc8fc1 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ce616 : loopne 0xce67e ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cea70 : loopne 0xceaa3 ; add byte ptr [rbp - 0x46], dh ; mov eax, 0x40 ; ret
0x00000000000d2642 : loopne 0xd26a4 ; pop rbp ; pop r12 ; ret
0x00000000000d2742 : loopne 0xd27a4 ; pop rbp ; pop r12 ; ret
0x00000000000d299a : loopne 0xd29f3 ; lea esp, dword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000d4977 : loopne 0xd49d0 ; lea esp, dword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ddcff : loopne 0xddd67 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f5d86 : loopne 0xf5dee ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fb831 : loopne 0xfb899 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fc141 : loopne 0xfc1a9 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000132a0b : mov ah, 0 ; add byte ptr [rbp - 0x3f6af040], al ; add rsp, 8 ; movzx eax, al ; ret
0x00000000001a11cc : mov ah, 0x25 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x13], dh ; jmp qword ptr [rcx]
0x000000000012dbdd : mov ah, 0x48 ; add esp, 8 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000194064 : mov ah, 0x9d ; cld ; inc dword ptr [rbp + rbx*4 - 4] ; call rsp
0x0000000000195319 : mov ah, 0xed ; push qword ptr [rdi + rbp*4 - 0x4afc0000] ; in eax, dx ; jmp rsp
0x00000000001a8f0c : mov ah, 0xf5 ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000000cd81e : mov al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001307a4 : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x0000000000021dcc : mov al, 0x43 ; adc al, byte ptr [rax] ; mov rdi, r12 ; mov rcx, qword ptr [rbp - 0x60] ; call rcx
0x0000000000117aea : mov al, 0x48 ; lea esp, dword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000050d9a : mov al, 0x4c ; mov edx, eax ; mov esi, ecx ; mov qword ptr [rbp - 0x78], 0 ; call 0xad070
0x00000000001889bd : mov al, 0xf6 ; dec dword ptr [rax] ; mov al, 0xf6 ; dec dword ptr [rax] ; mov al, 0xf6 ; dec dword ptr [rax] ; mov al, 0xf6 ; push rbp ; ret
0x00000000001889c1 : mov al, 0xf6 ; dec dword ptr [rax] ; mov al, 0xf6 ; dec dword ptr [rax] ; mov al, 0xf6 ; push rbp ; ret
0x00000000001889c5 : mov al, 0xf6 ; dec dword ptr [rax] ; mov al, 0xf6 ; push rbp ; ret
0x000000000018892d : mov al, 0xf6 ; push rbp ; ret
0x00000000000ff87c : mov al, 3 ; add byte ptr [rax], al ; test rax, rax ; jne 0xff867 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000f8762 : mov al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000187ce0 : mov bh, 0x2f ; cmc ; dec dword ptr [rdi + rbp] ; cmc ; push qword ptr [rdi - 0x14000ad1] ; cmc ; call rax
0x000000000012edba : mov bh, 0xc0 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001012cd : mov bh, bh ; inc dword ptr [rbp - 0x7ce38b40] ; ret
0x00000000001366c9 : mov bl, 0x92 ; out dx, al ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x000000000013a5b6 : mov byte ptr [r12 + rbp], 0 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000131d82 : mov byte ptr [r8 + 7], dl ; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000131d83 : mov byte ptr [rax + 7], dl ; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001366c4 : mov byte ptr [rax + rax], al ; add al, ch ; mov bl, 0x92 ; out dx, al ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x00000000000a04a9 : mov byte ptr [rax], 0 ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000013a595 : mov byte ptr [rax], 0 ; jle 0x13a5b3 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001064a8 : mov byte ptr [rax], 0xa ; add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000010611e : mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000036f5f : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000035c26 : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000136dad : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x136dcf ; mov rdi, rbp ; call rax
0x000000000008b03c : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, r12 ; call rax
0x0000000000035c0f : mov byte ptr [rax], al ; add byte ptr [rax], al ; neg ebx ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000ca85b : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000036f3e : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000036fae : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000194cdd : mov byte ptr [rax], al ; add byte ptr [rsi + rbp*2 - 0x16], ah ; jmp rsp
0x000000000011074d : mov byte ptr [rax], bl ; movsx eax, bl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000005c390 : mov byte ptr [rax], bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005c391 : mov byte ptr [rax], ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000125c46 : mov byte ptr [rbp + 0x11], bl ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b7bde : mov byte ptr [rbp + 0x29], cl ; ret 0x8d49
0x000000000014d382 : mov byte ptr [rbp + 0x48d974d2], 0x63 ; ror dword ptr [rax + 1], -8 ; sub rax, r8 ; ret
0x000000000014d4be : mov byte ptr [rbp + 0x48dd74d2], 0x63 ; ror dword ptr [rax + 1], -8 ; ret
0x00000000000e98d3 : mov byte ptr [rbp + 0x7400002d], ah ; xor eax, eax ; ret
0x0000000000002bd1 : mov byte ptr [rbp + 7], ah ; or ah, byte ptr [rbp + 0xc] ; scasd eax, dword ptr [rdi] ; xbegin 0xfffffffff8c6efdf ; ret
0x000000000008fc0a : mov byte ptr [rbp + rax], 0 ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000069444 : mov byte ptr [rbp - 0x538], 0 ; jmp 0x65706
0x00000000000e73a5 : mov byte ptr [rbp - 0x77], 0x87 ; add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0xc748
0x00000000001a6ff8 : mov byte ptr [rbp - 0xf], al ; call qword ptr [rsi]
0x0000000000126941 : mov byte ptr [rbx + 1], ch ; mov byte ptr [rbx + 2], 0 ; mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000126944 : mov byte ptr [rbx + 2], 0 ; mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000146731 : mov byte ptr [rbx + rcx*4 + 0xa], al ; mov rdx, r13 ; add r9, qword ptr [rbp - 0x88] ; call rax
0x000000000013d7eb : mov byte ptr [rbx], bpl ; mov eax, 1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013d7ec : mov byte ptr [rbx], ch ; mov eax, 1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000033044 : mov byte ptr [rcx], 0 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004b230 : mov byte ptr [rcx], ah ; movzx eax, r12b ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000014455f : mov byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000139f84 : mov byte ptr [rdx], 0 ; add rsp, 0x100 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011f8f8 : mov byte ptr [rdx], 0 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000085a2f : mov byte ptr [rsi + rbx], cl ; add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000085a2e : mov byte ptr [rsi + rbx], r9b ; add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000013a5b7 : mov byte ptr [rsp + rbp], 0 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014666e : mov ch, 0x60 ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x73], cl ; lodsb al, byte ptr [rsi] ; and al, 0x70 ; add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000076a8d : mov ch, 0x90 ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x00000000000769aa : mov ch, 0x90 ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x0000000000132a83 : mov cl, 0 ; add byte ptr [rbp + 0x480e75c0], al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000d3fe7 : mov cl, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; mov cl, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret
0x00000000000d3fee : mov cl, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret
0x0000000000140e75 : mov cs, word ptr [rbp - 0x14000005] ; ret 0xffb9
0x0000000000135ece : mov cs, word ptr [rbp] ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007b6bd : mov dh, 0 ; add rsp, 0x98 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007d47a : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d087c : mov dh, 0x41 ; add dword ptr [rax - 0x7d], ecx ; rol dword ptr [rcx], -0x7c ; sal byte ptr [rbp - 0x2b], 0xf6 ; ret 0xf05
0x0000000000126847 : mov dh, 0x41 ; add dword ptr [rbp + 0x39020254], ecx ; salc ; ja 0x126844 ; mov eax, 0xffffffff ; ret
0x000000000009d8ec : mov dh, 0x43 ; add dword ptr [rbp + 0x38], eax ; ret
0x00000000000acdb3 : mov dh, 0x44 ; and al, 0x20 ; add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003ce45 : mov dh, 0x48 ; add cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003ce25 : mov dh, 0x48 ; add dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003ce65 : mov dh, 0x48 ; add ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003cf05 : mov dh, 0x48 ; or byte ptr [rbp - 0x57f2faf], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003cf45 : mov dh, 0x48 ; or cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003cf25 : mov dh, 0x48 ; or dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003cf61 : mov dh, 0x48 ; or ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000d2739 : mov dh, 0x53 ; add dword ptr [rdx + rdx*8 - 0x76b3188b], eax ; loopne 0xd27ad ; pop rbp ; pop r12 ; ret
0x0000000000051a38 : mov dh, 0x53 ; or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x000000000009d8e7 : mov dh, 0x5e ; add eax, 0x43b60f44 ; add dword ptr [rbp + 0x38], eax ; ret
0x000000000004008a : mov dh, 0x70 ; add cl, byte ptr [rbp - 0x57f2faa] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004006a : mov dh, 0x70 ; add dword ptr [rbp - 0x57f2faa], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000400aa : mov dh, 0x70 ; add ecx, dword ptr [rbp - 0x57f2faa] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004014a : mov dh, 0x70 ; or byte ptr [rbp - 0x57f2faa], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004018a : mov dh, 0x70 ; or cl, byte ptr [rbp - 0x57f2faa] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004016a : mov dh, 0x70 ; or dword ptr [rbp - 0x57f2faa], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000401a6 : mov dh, 0x70 ; or ecx, dword ptr [rbp - 0x57f2faa] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000cfd88 : mov dh, 0x78 ; adc cl, byte ptr [rbp + rcx*4 + 0x48] ; adc ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000130dae : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013e12c : mov dh, 0xc0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000010a01e : mov dh, 0xc0 ; add rsp, 0x90 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001308cd : mov dh, 0xc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000110721 : mov dh, 0xc0 ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000136276 : mov dh, 0xc0 ; pop rbp ; pop r12 ; ret
0x00000000000cfa54 : mov dh, 0xc0 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000131c6b : mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000007efdb : mov dh, 0xc4 ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004b234 : mov dh, 0xc4 ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007c87e : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000da737 : mov dh, 0xed ; movsxd rax, dword ptr [rsi + rbp*4] ; add rax, rsi ; jmp rax
0x000000000016be22 : mov dh, byte ptr [rbp + 2] ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00000000001012cc : mov dil, dil ; inc dword ptr [rbp - 0x7ce38b40] ; ret
0x0000000000129e18 : mov dl, 0x5b ; pop rbp ; pop r12 ; ret
0x0000000000172a3d : mov dl, 0x66 ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bba50 : mov dword ptr [r11 + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000012a17e : mov dword ptr [r12 + 0x40], ebp ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e0a89 : mov dword ptr [r12 + 4], r14d ; xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000125108 : mov dword ptr [r14 + 0x38], r9d ; mov qword ptr [rbp - 0x78], r10 ; call 0x913ba
0x000000000012519b : mov dword ptr [r14 + 0x80], r8d ; mov qword ptr [rbp - 0x78], r10 ; call 0x913bd
0x00000000000fdbf9 : mov dword ptr [r8], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fdc91 : mov dword ptr [r8], r12d ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000071837 : mov dword ptr [rax + 0x20], ecx ; mov dword ptr [rdx], ebx ; add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000074c46 : mov dword ptr [rax + 0x20], edx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000074101 : mov dword ptr [rax + 0x30], ebp ; mov qword ptr [rax + 0x38], r12 ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000074105 : mov dword ptr [rax + 0x38], esp ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f7043 : mov dword ptr [rax + 8], ebp ; mov dword ptr [rbx + 4], edx ; add rsp, 8 ; xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000003a4e3 : mov dword ptr [rax + 8], edi ; mov qword ptr [rax], 4 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013ad1c : mov dword ptr [rax + rdx*8 - 4], ecx ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000039f58 : mov dword ptr [rax], 0x16 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ca1e5 : mov dword ptr [rax], 0x16 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006f18a : mov dword ptr [rax], 0x16 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000795d8 : mov dword ptr [rax], 0x1c ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bb97f : mov dword ptr [rax], 0x4b ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000110588 : mov dword ptr [rax], 0xc ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000089e0d : mov dword ptr [rax], 0xc ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008bb26 : mov dword ptr [rax], 0xc ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a306 : mov dword ptr [rax], 2 ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003a4e7 : mov dword ptr [rax], 4 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012472e : mov dword ptr [rax], 6 ; add rsp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d6bf4 : mov dword ptr [rax], ebp ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000063e54 : mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000217d4 : mov dword ptr [rax], ecx ; mov r15, rax ; mov qword ptr [rbp - 0xa0], rax ; call 0x8da3e
0x00000000000231e2 : mov dword ptr [rax], edi ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000104560 : mov dword ptr [rax], edx ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000108c43 : mov dword ptr [rax], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000130f63 : mov dword ptr [rax], edx ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000735dd : mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d6bbb : mov dword ptr [rax], esi ; add dword ptr [rdi + 4], 1 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f16c3 : mov dword ptr [rax], esi ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fdbfa : mov dword ptr [rax], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fdc92 : mov dword ptr [rax], esp ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010e35a : mov dword ptr [rbp + 0x18], 0xffffffff ; jmp 0x10e0fc
0x00000000000795a5 : mov dword ptr [rbp + 0x18], eax ; ja 0x795c4 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079652 : mov dword ptr [rbp + 0x18], eax ; ja 0x79676 ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000783d4 : mov dword ptr [rbp + 0x18], ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fe329 : mov dword ptr [rbp + 0x24], eax ; xor eax, eax ; add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000078481 : mov dword ptr [rbp + 0x30], edx ; mov qword ptr [rbx + 0x18], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011074a : mov dword ptr [rbp + 0x38], edx ; mov byte ptr [rax], bl ; movsx eax, bl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013595e : mov dword ptr [rbp + 0x50], eax ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000076d1b : mov dword ptr [rbp + 0xc0], eax ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d03e4 : mov dword ptr [rbp + 8], 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000fccab : mov dword ptr [rbp + 8], eax ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007ef1e : mov dword ptr [rbp + 8], eax ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000f6f49 : mov dword ptr [rbp + 8], eax ; mov dword ptr [rbp], ebx ; xor edx, edx ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000007eeed : mov dword ptr [rbp + 8], eax ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000059804 : mov dword ptr [rbp - 0x1078], 0 ; jmp rax
0x000000000005a662 : mov dword ptr [rbp - 0x1080], 1 ; jmp rax
0x0000000000059c0b : mov dword ptr [rbp - 0x1088], 1 ; jmp rax
0x0000000000059c67 : mov dword ptr [rbp - 0x1090], 0x20 ; jmp rax
0x0000000000059c9d : mov dword ptr [rbp - 0x1098], 1 ; jmp rax
0x000000000005a9e4 : mov dword ptr [rbp - 0x10a8], 1 ; jmp rax
0x000000000005a6ba : mov dword ptr [rbp - 0x10b0], 0 ; jmp rax
0x000000000005a92d : mov dword ptr [rbp - 0x10b0], 1 ; jmp rax
0x00000000000598cd : mov dword ptr [rbp - 0x10b4], 0 ; jmp rax
0x000000000005a75e : mov dword ptr [rbp - 0x10b4], 1 ; jmp rax
0x000000000005aa36 : mov dword ptr [rbp - 0x10b8], 1 ; jmp rax
0x00000000000ded77 : mov dword ptr [rbp - 0x38], 0xffffffff ; jmp 0xde998
0x000000000004c3e8 : mov dword ptr [rbp - 0x47c], eax ; jmp 0x4b8bc
0x000000000006a979 : mov dword ptr [rbp - 0x498], edx ; jmp 0x6a94a
0x000000000004e200 : mov dword ptr [rbp - 0x4a8], 1 ; jmp rax
0x000000000004e5fa : mov dword ptr [rbp - 0x4b8], 1 ; jmp rax
0x000000000004dca3 : mov dword ptr [rbp - 0x4c8], 0 ; jmp rax
0x000000000004e263 : mov dword ptr [rbp - 0x4d8], 1 ; jmp rax
0x000000000004b855 : mov dword ptr [rbp - 0x4d8], eax ; mov rsi, r15 ; mov rdi, r14 ; call rax
0x000000000004b854 : mov dword ptr [rbp - 0x4d8], r8d ; mov rsi, r15 ; mov rdi, r14 ; call rax
0x000000000004e299 : mov dword ptr [rbp - 0x4f0], 1 ; jmp rax
0x000000000004e85a : mov dword ptr [rbp - 0x4f8], 1 ; jmp rax
0x000000000004ef86 : mov dword ptr [rbp - 0x508], 1 ; jmp rax
0x000000000004f0a9 : mov dword ptr [rbp - 0x510], 1 ; jmp rax
0x0000000000057225 : mov dword ptr [rbp - 0x510], ebx ; mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x0000000000057224 : mov dword ptr [rbp - 0x510], r11d ; mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x000000000004efe2 : mov dword ptr [rbp - 0x518], 1 ; jmp rax
0x0000000000063081 : mov dword ptr [rbp - 0x668], eax ; jmp 0x60a58
0x0000000000116102 : mov dword ptr [rbp - 0x70], eax ; mov eax, dword ptr [r14 - 0x30] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x0000000000115ea5 : mov dword ptr [rbp - 0x70], edx ; mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00000000001161fc : mov dword ptr [rbp - 0x70], edx ; mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x000000000011603b : mov dword ptr [rbp - 0x70], edx ; mov edx, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000115f04 : mov dword ptr [rbp - 0x70], edx ; mov edx, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00000000001164e2 : mov dword ptr [rbp - 0x70], edx ; mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, qword ptr [rbp - 0x158] ; call rax
0x000000000011628b : mov dword ptr [rbp - 0x70], edx ; mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000115ac4 : mov dword ptr [rbp - 0x70], edx ; mov edx, dword ptr [rbx - 0x30] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x0000000000115f93 : mov dword ptr [rbp - 0x70], edx ; mov edx, dword ptr [rcx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000115a0b : mov dword ptr [rbp - 0x70], edx ; mov rdx, r13 ; call rax
0x0000000000050da1 : mov dword ptr [rbp - 0x78], 0 ; call 0xad069
0x000000000012510d : mov dword ptr [rbp - 0x78], edx ; call 0x913b5
0x0000000000115a03 : mov dword ptr [rbp - 0x80], 0 ; mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x0000000000116109 : mov dword ptr [rbp - 0x80], eax ; call r8
0x00000000001164e8 : mov dword ptr [rbp - 0x80], edx ; mov rdx, qword ptr [rbp - 0x158] ; call rax
0x0000000000115f0a : mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x0000000000115aca : mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x0000000000115eac : mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000115f99 : mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000050d70 : mov dword ptr [rbp - 0x88], eax ; call 0xad068
0x00000000000217da : mov dword ptr [rbp - 0xa0], eax ; call 0x8da38
0x0000000000173524 : mov dword ptr [rbp], 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000098526 : mov dword ptr [rbp], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012780d : mov dword ptr [rbp], eax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003b144 : mov dword ptr [rbp], eax ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000089f1c : mov dword ptr [rbp], eax ; je 0x8a01f ; mov rdx, r12 ; mov rdi, r15 ; call rax
0x000000000008a43c : mov dword ptr [rbp], eax ; je 0x8a61f ; mov rdx, r15 ; mov rdi, r8 ; call rax
0x000000000008b037 : mov dword ptr [rbp], eax ; je 0x8b0d7 ; mov rsi, rbp ; mov rdi, r12 ; call rax
0x0000000000074446 : mov dword ptr [rbp], eax ; mov qword ptr [rbx + 0x60], rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007ed99 : mov dword ptr [rbp], eax ; mov qword ptr [rbx + 0x60], rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003b4aa : mov dword ptr [rbp], eax ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007c32a : mov dword ptr [rbp], ebp ; mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000991ce : mov dword ptr [rbp], ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000144b4d : mov dword ptr [rbp], ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000044fa1 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000f6f4c : mov dword ptr [rbp], ebx ; xor edx, edx ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000035c20 : mov dword ptr [rbp], ecx ; add rsp, 0x88 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000002adf4 : mov dword ptr [rbp], edi ; mov rax, qword ptr [rax + r12*8] ; test rax, rax ; je 0x2ae10 ; call rax
0x000000000003a87a : mov dword ptr [rbp], edx ; call rax
0x0000000000089ac7 : mov dword ptr [rbp], edx ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000085749 : mov dword ptr [rbp], esi ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000106d3a : mov dword ptr [rbp], esi ; mov qword ptr [rsp + 0x18], rax ; mov rdx, rax ; jmp 0x106d99
0x00000000000c92e6 : mov dword ptr [rbp], esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010fbf9 : mov dword ptr [rbp], esp ; je 0x10fc27 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000226eb : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000124772 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000124771 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a7fd : mov dword ptr [rbx + 0x10], eax ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001107d4 : mov dword ptr [rbx + 0x10], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007fc81 : mov dword ptr [rbx + 0x10], ebp ; mov qword ptr [rbx + 0x18], rbp ; nop ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ba83d : mov dword ptr [rbx + 0x10], edx ; je 0xba828 ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008b955 : mov dword ptr [rbx + 0x10], esp ; mov qword ptr [rbx + 0x20], rax ; mov qword ptr [rbx + 8], rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006d555 : mov dword ptr [rbx + 0x18], eax ; add rsp, 0x18 ; pop rbx ; mov rax, r12 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000110804 : mov dword ptr [rbx + 0x18], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007fc85 : mov dword ptr [rbx + 0x18], ebp ; nop ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000078485 : mov dword ptr [rbx + 0x18], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000050a97 : mov dword ptr [rbx + 0x18], esi ; mov qword ptr [rcx + rdx*8], rax ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000006d4c5 : mov dword ptr [rbx + 0x20], eax ; add rsp, 0x18 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000131a1a : mov dword ptr [rbx + 0x20], eax ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000007d2cf : mov dword ptr [rbx + 0x20], eax ; mov dword ptr [rbx], edx ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008b959 : mov dword ptr [rbx + 0x20], eax ; mov qword ptr [rbx + 8], rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001319c4 : mov dword ptr [rbx + 0x20], ecx ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000013eaf9 : mov dword ptr [rbx + 0x20], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000129dab : mov dword ptr [rbx + 0x210], 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007f7dd : mov dword ptr [rbx + 0x28], eax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000dfc5b : mov dword ptr [rbx + 0x2c], eax ; mov dword ptr [rbx + 0x30], eax ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000122095 : mov dword ptr [rbx + 0x30], eax ; mov eax, 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000dfc5e : mov dword ptr [rbx + 0x30], eax ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007828d : mov dword ptr [rbx + 0x30], ebp ; add rsp, 8 ; pop rbx ; mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001077fc : mov dword ptr [rbx + 0x38], eax ; mov eax, 3 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010ff03 : mov dword ptr [rbx + 0x40], eax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011056f : mov dword ptr [rbx + 0x40], ebp ; add rsp, 8 ; mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000007deed : mov dword ptr [rbx + 0x40], esp ; mov dword ptr [rbx], edx ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000136386 : mov dword ptr [rbx + 0x48], eax ; add rsp, 0x20 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007444a : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007ed9d : mov dword ptr [rbx + 0x60], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007b792 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000074108 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079f0b : mov dword ptr [rbx + 0x90], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000007af48 : mov dword ptr [rbx + 0x90], eax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007c721 : mov dword ptr [rbx + 0x90], eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bba51 : mov dword ptr [rbx + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000012f1cc : mov dword ptr [rbx + 2], eax ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000124b0f : mov dword ptr [rbx + 4], eax ; xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f7046 : mov dword ptr [rbx + 4], edx ; add rsp, 8 ; xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000036cb0 : mov dword ptr [rbx + 8], 0 ; add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000002a614 : mov dword ptr [rbx + 8], eax ; add rsp, 0x10 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013bae5 : mov dword ptr [rbx + 8], eax ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001107a4 : mov dword ptr [rbx + 8], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008b9da : mov dword ptr [rbx + 8], ebp ; mov eax, 1 ; mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008ba5c : mov dword ptr [rbx + 8], ebp ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008bb65 : mov dword ptr [rbx + 8], ebp ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008ba09 : mov dword ptr [rbx + 8], ebp ; mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008b95d : mov dword ptr [rbx + 8], edi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007d65e : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009673d : mov dword ptr [rbx], 0 ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000021623 : mov dword ptr [rbx], 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001439f8 : mov dword ptr [rbx], 0 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013592d : mov dword ptr [rbx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fe43f : mov dword ptr [rbx], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033ea4 : mov dword ptr [rbx], 2 ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011c2a1 : mov dword ptr [rbx], eax ; add rsp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000050b52 : mov dword ptr [rbx], eax ; add rsp, 8 ; add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000096723 : mov dword ptr [rbx], eax ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000008bb62 : mov dword ptr [rbx], eax ; mov qword ptr [rbx + 8], rbp ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012ca34 : mov dword ptr [rbx], eax ; mov r8, rbp ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x0000000000139e56 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001399a5 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000003b44b : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000cd23f : mov dword ptr [rbx], ebp ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001192ed : mov dword ptr [rbx], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000071d75 : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000145879 : mov dword ptr [rbx], ebp ; xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000737dc : mov dword ptr [rbx], ecx ; jae 0x73747 ; mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000075172 : mov dword ptr [rbx], edx ; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000a04a7 : mov dword ptr [rbx], edx ; mov byte ptr [rax], 0 ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000005c38e : mov dword ptr [rbx], edx ; mov byte ptr [rax], bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000063e52 : mov dword ptr [rbx], edx ; mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007def0 : mov dword ptr [rbx], edx ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008b9e3 : mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007d2d2 : mov dword ptr [rbx], edx ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006f14b : mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008040b : mov dword ptr [rbx], esi ; xor al, 0 ; add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000098220 : mov dword ptr [rbx], esp ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001013ce : mov dword ptr [rbx], esp ; je 0x1013fc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001013cd : mov dword ptr [rbx], r12d ; je 0x1013fd ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000eaad8 : mov dword ptr [rcx + 0x30], eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000741a5 : mov dword ptr [rcx + 0x38], esp ; mov eax, 1 ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013ad70 : mov dword ptr [rcx + 4], esi ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000001fcae : mov dword ptr [rcx + rbx - 0x28], 0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000050a9b : mov dword ptr [rcx + rdx*8], eax ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000013ad6d : mov dword ptr [rcx], ebp ; mov word ptr [rcx + 4], si ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ceea7 : mov dword ptr [rcx], esp ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001064a5 : mov dword ptr [rdi + 0x28], edx ; mov byte ptr [rax], 0xa ; add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000010611b : mov dword ptr [rdi + 0x28], edx ; mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000048890 : mov dword ptr [rdi + 8], edx ; mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000007e4a8 : mov dword ptr [rdi + 8], edx ; movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000cc874 : mov dword ptr [rdi], eax ; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cc4d4 : mov dword ptr [rdi], eax ; add rsp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c79e : mov dword ptr [rdi], eax ; add rsp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000559c6 : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000029dc2 : mov dword ptr [rdi], ecx ; add rsp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c91f7 : mov dword ptr [rdi], ecx ; add rsp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000558f4 : mov dword ptr [rdi], esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000072c23 : mov dword ptr [rdx + 0x28], ebx ; add rsp, 8 ; pop rbx ; mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000060ed2 : mov dword ptr [rdx + 8], edi ; mov rsi, qword ptr [rbp - 0x660] ; xor edx, edx ; jmp 0x5d0fc
0x0000000000124362 : mov dword ptr [rdx], 0x26 ; add rsp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000103347 : mov dword ptr [rdx], eax ; add dword ptr [rbp], ebx ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012cdba : mov dword ptr [rdx], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012cc98 : mov dword ptr [rdx], eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011fb17 : mov dword ptr [rdx], eax ; add rsp, 0x90 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002bf3a : mov dword ptr [rdx], eax ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000011751e : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000001fb83 : mov dword ptr [rdx], eax ; mov rax, rbp ; cmp r9, rax ; je 0x1fb34 ; jmp 0x1fb5d
0x000000000012b13a : mov dword ptr [rdx], eax ; sub rsp, -0x80 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000056bdf : mov dword ptr [rdx], ebp ; mov eax, ebp ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007183a : mov dword ptr [rdx], ebx ; add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000007340a : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000096837 : mov dword ptr [rdx], esp ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000140963 : mov dword ptr [rip + 0x286003], 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000117778 : mov dword ptr [rip + 0x2ad9a2], eax ; pop rbp ; ret
0x000000000010b00f : mov dword ptr [rip + 0x2b6207], 2 ; pop rbp ; ret
0x000000000010b002 : mov dword ptr [rip + 0x2b6214], 0 ; pop rbp ; ret
0x00000000000bd05e : mov dword ptr [rip + 0x3069f4], esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008a75a : mov dword ptr [rip + 0x339084], 1 ; pop rbp ; pop r12 ; ret
0x0000000000080409 : mov dword ptr [rip + 0x343389], eax ; add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000006bc1f : mov dword ptr [rip + 0x357acb], eax ; add rsp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000001fa34 : mov dword ptr [rip + 0x3a2e66], eax ; mov qword ptr [rip + 0x3a68c7], rdx ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000001fa3b : mov dword ptr [rip + 0x3a68c7], edx ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000bdc57 : mov dword ptr [rsi + 0x28], eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000125109 : mov dword ptr [rsi + 0x38], ecx ; mov qword ptr [rbp - 0x78], r10 ; call 0x913b9
0x000000000012519c : mov dword ptr [rsi + 0x80], eax ; mov qword ptr [rbp - 0x78], r10 ; call 0x913bc
0x000000000007a93b : mov dword ptr [rsi + 0x90], edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000074e18 : mov dword ptr [rsi + 8], eax ; mov qword ptr [rsi], rax ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012cbff : mov dword ptr [rsi], eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000074e1c : mov dword ptr [rsi], eax ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000021414 : mov dword ptr [rsi], edx ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008197a : mov dword ptr [rsp + 0x14], 0 ; pop rbp ; mov dword ptr [r12 + 0x10], eax ; pop r12 ; ret
0x0000000000078402 : mov dword ptr [rsp + 0x28], eax ; mov rax, r13 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000783cf : mov dword ptr [rsp + 0x30], ebx ; mov qword ptr [rbp + 0x18], rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000137d55 : mov dword ptr [rsp + 0x38], eax ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012a17f : mov dword ptr [rsp + 0x40], ebp ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e0a8a : mov dword ptr [rsp + 4], esi ; xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000080a68 : mov dword ptr [rsp + 8], ebx ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009841b : mov dword ptr [rsp], 0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008a189 : mov dword ptr [rsp], eax ; je 0x8a26f ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000008aeab : mov dword ptr [rsp], eax ; je 0x8af9f ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x00000000000f1022 : mov dword ptr [rsp], eax ; je 0xf1006 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ac732 : mov dword ptr [rsp], eax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008a1a2 : mov dword ptr [rsp], eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011b0f1 : mov dword ptr [rsp], ebp ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010e412 : mov dword ptr [rsp], ebp ; je 0x10e435 ; xor edx, edx ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000bd014 : mov dword ptr [rsp], ebp ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000983f3 : mov dword ptr [rsp], ebp ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000017209c : mov dword ptr [rsp], ebx ; mov rdx, qword ptr [rax + rbp*8] ; test rdx, rdx ; je 0x1720b6 ; call rdx
0x00000000000fdbf8 : mov dword ptr fs:[r8], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fdc90 : mov dword ptr fs:[r8], r12d ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000039f57 : mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006f189 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000795d7 : mov dword ptr fs:[rax], 0x1c ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bb97e : mov dword ptr fs:[rax], 0x4b ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000110587 : mov dword ptr fs:[rax], 0xc ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000008bb25 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000124770 : mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fe43e : mov dword ptr fs:[rbx], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cd23e : mov dword ptr fs:[rbx], ebp ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000145878 : mov dword ptr fs:[rbx], ebp ; xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001013cc : mov dword ptr fs:[rbx], r12d ; je 0x1013fe ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011751d : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000001fb82 : mov dword ptr fs:[rdx], eax ; mov rax, rbp ; cmp r9, rax ; je 0x1fb35 ; jmp 0x1fb5e
0x000000000012b139 : mov dword ptr fs:[rdx], eax ; sub rsp, -0x80 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cbb8f : mov eax, 0 ; cmovle eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000012e664 : mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x00000000000559d8 : mov eax, 0x1b85b ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000a0e1c : mov eax, 0x22 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010fbc0 : mov eax, 0x22 ; je 0x10fbdf ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000e6936 : mov eax, 0x244c8b48 ; and byte ptr [rbp + rcx*4 - 0x7c], cl ; and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000006c1e3 : mov eax, 0x5b000000 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001385e9 : mov eax, 0x5b000001 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013b40e : mov eax, 0x5b000005 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000076261 : mov eax, 0x8c48348 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000fb268 : mov eax, 0xa ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000db2b9 : mov eax, 0xc ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000d6dfc : mov eax, 0xc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e9714 : mov eax, 0xc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000dfc88 : mov eax, 0xc ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011b13c : mov eax, 0xca ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000bb37a : mov eax, 0xfffffffd ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000075ea4 : mov eax, 0xffffffff ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000073550 : mov eax, 0xffffffff ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007529f : mov eax, 0xffffffff ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000125ae9 : mov eax, 0xffffffff ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011f85c : mov eax, 0xffffffff ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fe428 : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000020b1b : mov eax, 0xffffffff ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000020c5b : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fa3db : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000036f63 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b67fd : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000029b50 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007184c : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00000000000ba7bd : mov eax, 1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013d7ee : mov eax, 1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000006e360 : mov eax, 1 ; add rsp, 0x90 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006f8b7 : mov eax, 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013e892 : mov eax, 1 ; jne 0x13e875 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000741a8 : mov eax, 1 ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008b9dd : mov eax, 1 ; mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005590a : mov eax, 1 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000559da : mov eax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008b532 : mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00000000000299ec : mov eax, 1 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ce36c : mov eax, 1 ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000bcc0e : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000076924 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000769f4 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007def2 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000110576 : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x0000000000076909 : mov eax, 2 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000769db : mov eax, 2 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001077ff : mov eax, 3 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f0ffc : mov eax, 5 ; pop rbp ; pop r12 ; ret
0x00000000001176ea : mov eax, 5 ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000f1149 : mov eax, 5 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000114b4c : mov eax, 7 ; pop rbx ; pop rbp ; ret
0x00000000000f7137 : mov eax, 9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000107955 : mov eax, 9 ; pop rbx ; pop rbp ; ret
0x0000000000116105 : mov eax, dword ptr [r14 - 0x30] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x000000000010fc1a : mov eax, dword ptr [r14] ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000aaa80 : mov eax, dword ptr [r8 + 4] ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013d1e5 : mov eax, dword ptr [rax + 0x10] ; add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000013da3d : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000013afbc : mov eax, dword ptr [rax + 0x20] ; test eax, eax ; je 0x13afdb ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e913 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x12e92b ; mov rdi, rbp ; call rax
0x00000000001356b5 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x1356cf ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000136b92 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x136baa ; mov rdi, rbp ; call rax
0x0000000000136db2 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x136dca ; mov rdi, rbp ; call rax
0x000000000013b875 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x13b88f ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013bf8e : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x13bfa8 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000000aaa81 : mov eax, dword ptr [rax + 4] ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001171d9 : mov eax, dword ptr [rax + 8] ; test r8, r8 ; jne 0x117186 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000753a3 : mov eax, dword ptr [rax] ; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c220 : mov eax, dword ptr [rax] ; add rsp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000073468 : mov eax, dword ptr [rbp + 0x18] ; mov esi, r12d ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000001356b1 : mov eax, dword ptr [rbp + 0x18] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x1356d3 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013b871 : mov eax, dword ptr [rbp + 0x18] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x13b893 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013bf8a : mov eax, dword ptr [rbp + 0x18] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x13bfac ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000000204a7 : mov eax, dword ptr [rbp + 0x18] ; test rax, rax ; je 0x204bf ; mov rdi, rbp ; call rax
0x00000000000738a4 : mov eax, dword ptr [rbp + 0x20] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000007366d : mov eax, dword ptr [rbp + 0x28] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000070bad : mov eax, dword ptr [rbp + 0x48] ; add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000002e5fc : mov eax, dword ptr [rbp + 8] ; sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010c6c4 : mov eax, dword ptr [rbp + rax*8] ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001046b3 : mov eax, dword ptr [rbp - 0x48] ; call rax
0x00000000000ee9f5 : mov eax, dword ptr [rbp - 0xd8] ; call rax
0x00000000000a0f97 : mov eax, dword ptr [rbp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001107d0 : mov eax, dword ptr [rbx + 0x10] ; mov qword ptr [rbx + 0x10], rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000110800 : mov eax, dword ptr [rbx + 0x18] ; mov qword ptr [rbx + 0x18], rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012e90f : mov eax, dword ptr [rbx + 0x20] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12e92f ; mov rdi, rbp ; call rax
0x0000000000130f21 : mov eax, dword ptr [rbx + 0x20] ; sub rax, qword ptr [rbx + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x000000000007ed95 : mov eax, dword ptr [rbx + 0x60] ; mov qword ptr [rbp], rax ; mov qword ptr [rbx + 0x60], rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001107a0 : mov eax, dword ptr [rbx + 8] ; mov qword ptr [rbx + 8], rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007c676 : mov eax, dword ptr [rbx + 8] ; pop rbx ; pop rbp ; movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013942c : mov eax, dword ptr [rbx] ; add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x000000000006307e : mov eax, dword ptr [rcx] ; mov qword ptr [rbp - 0x668], rax ; jmp 0x60a5b
0x0000000000121aa5 : mov eax, dword ptr [rdx + rax*8 + 4] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000075ee0 : mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000103445 : mov eax, dword ptr [rip + 0x2bf345] ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000102eb8 : mov eax, dword ptr [rip + 0x2bf8ca] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bd496 : mov eax, dword ptr [rip + 0x30903c] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001160fe : mov eax, dword ptr [rsi - 0x10] ; mov qword ptr [rbp - 0x70], rax ; mov eax, dword ptr [r14 - 0x30] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x0000000000116106 : mov eax, dword ptr [rsi - 0x30] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x00000000000735df : mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010fc1b : mov eax, dword ptr [rsi] ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000124335 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fcd31 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012f0d1 : mov eax, dword ptr [rsp + 0x1c] ; pop rdx ; pop rcx ; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004539f : mov eax, dword ptr [rsp + 0x30] ; add rsp, 0x170 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ad1e1 : mov eax, dword ptr [rsp + 0x30] ; add rsp, 0x60 ; pop rbx ; pop rbp ; sub rax, r12 ; pop r12 ; ret
0x0000000000136b8d : mov eax, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x136baf ; mov rdi, rbp ; call rax
0x000000000010a37a : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000cd0be : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cd1b5 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c9bb0 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000221a0 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001210b6 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000035e65 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x90 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fdf33 : mov eax, dword ptr [rsp + 0xc] ; test edx, edx ; js 0xfdf58 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000085720 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000109d36 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011bd69 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012f1d0 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000fce65 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fec5f : mov eax, dword ptr [rsp + 8] ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f87db : mov eax, dword ptr [rsp + 8] ; add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000124b0b : mov eax, dword ptr [rsp + 8] ; mov dword ptr [rbx + 4], eax ; xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000139e51 : mov eax, dword ptr [rsp + 8] ; mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001399a0 : mov eax, dword ptr [rsp + 8] ; mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000131a81 : mov eax, dword ptr [rsp + 8] ; mov rdx, rbx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000cd250 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000070460 : mov eax, dword ptr [rsp] ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013bae1 : mov eax, dword ptr [rsp] ; mov qword ptr [rbx + 8], rax ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010fc19 : mov eax, dword ptr fs:[r14] ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c9951 : mov eax, eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000808fd : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001249a5 : mov eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129e0f : mov eax, ebp ; add rbp, 1 ; cmp eax, ecx ; jl 0x129dd9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000056be1 : mov eax, ebp ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012d7cd : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011930e : mov eax, ebp ; or ebp, edx ; mov dword ptr [rbx], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000103d7e : mov eax, ebp ; pop rbp ; pop r12 ; jmp rax
0x0000000000071ecc : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000072c2c : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007af84 : mov eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000009a24a : mov eax, ebp ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000023972 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000033256 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000715f3 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006e522 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000050aa2 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000106d34 : mov eax, ebp ; sub rax, r14 ; mov qword ptr [rbp], r14 ; mov qword ptr [rsp + 0x18], rax ; mov rdx, rax ; jmp 0x106d9f
0x0000000000048893 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000089fae : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007c32e : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ac380 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013a3b7 : mov eax, ebx ; mov ecx, r12d ; mov rdi, rbp ; call 0x5665a
0x000000000013a3ff : mov eax, ebx ; mov rcx, r12 ; mov rdi, rbp ; xor eax, eax ; call 0x5665c
0x000000000004ae1f : mov eax, ebx ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001012e7 : mov eax, ebx ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000105534 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000000257c8 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000033f58 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006f4c9 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002a5f4 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000328f8 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000021eef : mov eax, ecx ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000029ed2 : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000135313 : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000071d73 : mov eax, edi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f5419 : mov eax, edi ; mov rcx, r14 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call 0xf16a0
0x000000000013a4b6 : mov eax, edi ; mov rcx, r14 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000071d8e : mov eax, edi ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000adf47 : mov eax, edi ; pop rbx ; neg rax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004afee : mov eax, edi ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000024f3f : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007fe64 : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ca19f : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000712f0 : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000047eea : mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000012be12 : mov eax, edx ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002235d : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca1eb : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000557ca : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000887a0 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000045f17 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000001044c5 : mov eax, esi ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000130f11 : mov eax, esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000355e7 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x0000000000070d91 : mov eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000118b4e : mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000059646 : mov eax, esi ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000306ac : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000089272 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006f354 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000118840 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a454 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000073243 : mov eax, esp ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d2999 : mov eax, esp ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000006d55e : mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002d02f : mov eax, esp ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000023cc5 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000508f5 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006d4cd : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000079287 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000076734 : mov eax, esp ; sub rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000024c7d : mov eax, r10d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000257c7 : mov eax, r11d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000051624 : mov eax, r12d ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000023cc4 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000508f4 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000071ecb : mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000072c2b : mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000cd507 : mov eax, r13d ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000473b0 : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001071c4 : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f0e52 : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000059645 : mov eax, r14d ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000110b0c : mov eax, r14d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c9aea : mov eax, r14d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000eae23 : mov eax, r15d ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000024f3e : mov eax, r15d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001249a4 : mov eax, r8d ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004d9cb : mov eax, r9d ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000029ed1 : mov eax, r9d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001725f7 : mov ebp, 0x48ffead3 ; cmp ebx, ebp ; jb 0x1725fb ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000001358bf : mov ebp, 0x48ffffc0 ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000001360aa : mov ebp, 0xf883ffff ; add dword ptr [rsi + 0xe], edi ; xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000071fc0 : mov ebp, 0xffffffff ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010e8c7 : mov ebp, 0xffffffff ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007af79 : mov ebp, dword ptr [rdi + 0x90] ; pop rbx ; sub rbp, rax ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000037b8b : mov ebp, dword ptr [rsp + 0x50] ; nop ; mov rsi, r13 ; mov rdi, r14 ; mov rdx, rbp ; call r15
0x0000000000079bf3 : mov ebp, eax ; add rsp, 0x18 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001046b0 : mov ebp, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000098474 : mov ebp, edx ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000010af89 : mov ebp, esp ; lock cmpxchg qword ptr [rip + 0x2b628c], rdx ; je 0x10afa6 ; pop rbp ; ret
0x0000000000117664 : mov ebp, esp ; pop rbp ; ret
0x00000000001872e4 : mov ebx, 0x72fff401 ; add dh, ah ; lcall ptr [rdx + rbp*8 + 0x1a2fff3] ; hlt ; call rbx
0x0000000000121a62 : mov ebx, 0xf883fff5 ; push qword ptr [rbp + 0xe] ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000fe505 : mov ebx, 0xffffffff ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001171e2 : mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x000000000003a896 : mov ebx, dword ptr [rbp] ; test rbx, rbx ; jne 0x3a86e ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000104633 : mov ebx, dword ptr [rbx] ; test rbx, rbx ; jne 0x104625 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000006f4c2 : mov ebx, eax ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006bb64 : mov ebx, eax ; je 0x6bba0 ; add rsp, 0x1008 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000079b9f : mov ebx, eax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001196ef : mov ebx, eax ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000006f4dd : mov ebx, ebp ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000035c0a : mov ebx, ecx ; add rsp, 0x88 ; neg ebx ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000055908 : mov ecx, 0x1b85b ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000005fbd8 : mov ecx, 0x3100001f ; rol byte ptr [rbp - 0x7b], cl ; in al, 0xf ; lahf ; ret 0x2941
0x000000000012d958 : mov ecx, 0x8c48348 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000005a6b5 : mov ecx, 1 ; mov dword ptr [rbp - 0x10b0], 0 ; jmp rax
0x00000000000e25e2 : mov ecx, dword ptr [rbp + 4] ; test ecx, ecx ; jle 0xe266b ; xor ebx, ebx ; mov rdx, rax ; jmp 0xe260a
0x0000000000021dd4 : mov ecx, dword ptr [rbp - 0x60] ; call rcx
0x0000000000146733 : mov ecx, dword ptr [rdx] ; mov rdx, r13 ; add r9, qword ptr [rbp - 0x88] ; call rax
0x00000000000ad458 : mov ecx, dword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 0x18] ; mov rdx, r13 ; mov rdi, rbp ; call rbx
0x00000000000ad718 : mov ecx, dword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 0x18] ; mov rdx, r14 ; mov rdi, rbp ; call rbx
0x0000000000131b8e : mov ecx, dword ptr [rsp + 8] ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000ad5e4 : mov ecx, ebp ; mov rdx, r12 ; lea r9, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rbx
0x00000000000ad8c4 : mov ecx, ebp ; mov rdx, r12 ; lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x0000000000070ebc : mov ecx, ebp ; mov rsi, r12 ; mov rdi, rbx ; xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000012e64c : mov ecx, ebx ; add rdi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000013079f : mov ecx, ebx ; add rdi, 0x23b0 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000001307e5 : mov ecx, ebx ; pop rbx ; pop rbp ; add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x00000000000b67f9 : mov ecx, ecx ; jb 0xb67af ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000000ad31b : mov ecx, edi ; mov rdx, r12 ; lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000768cd : mov ecx, esi ; lea rsi, qword ptr [rbp + 0x50] ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00000000000f541c : mov ecx, esi ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call 0xf169d
0x000000000013a4b9 : mov ecx, esi ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000013a3ba : mov ecx, esp ; mov rdi, rbp ; call 0x56657
0x000000000013a402 : mov ecx, esp ; mov rdi, rbp ; xor eax, eax ; call 0x56659
0x00000000000213de : mov ecx, esp ; push 0 ; mov rdx, rbp ; mov rsi, qword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x000000000013a3b9 : mov ecx, r12d ; mov rdi, rbp ; call 0x56658
0x00000000000b67f8 : mov ecx, r9d ; jb 0xb67b0 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000001200d0 : mov edi, 0x3145fff6 ; rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0x8945
0x000000000011cae9 : mov edi, 0x6a002a87 ; add dword ptr [rbp + rcx*4 + 5], ecx ; ret 0x2a87
0x0000000000132b1d : mov edi, 0x850000a7 ; sal byte ptr [rbp + 0xb], 0x48 ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012e0cd : mov edi, 0x850000f2 ; sal byte ptr [rbp + 0xb], 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000001004f0 : mov edi, 0x8c48348 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000102306 : mov edi, 2 ; cmp rax, rdx ; mov edx, ebx ; cmovne rbp, rax ; call 0xfe620
0x00000000000d0251 : mov edi, dword ptr [rbp - 0x308] ; call r12
0x00000000001046ac : mov edi, dword ptr [rbp - 0x40] ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000005722c : mov edi, dword ptr [rbp - 0x4a0] ; call rax
0x0000000000103e8a : mov edi, dword ptr [rbp] ; call rbx
0x00000000000b0a2d : mov edi, dword ptr [rbp] ; mov rsi, r12 ; call 0x10ccb8
0x00000000000355e4 : mov edi, dword ptr [rdi + 0x28] ; mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x00000000000801a1 : mov edi, dword ptr [rip + 0x340c21] ; mov rbp, rsi ; xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x00000000000217d7 : mov edi, eax ; mov qword ptr [rbp - 0xa0], rax ; call 0x8da3b
0x00000000000ee9f2 : mov edi, eax ; mov rax, qword ptr [rbp - 0xd8] ; call rax
0x0000000000088e50 : mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000000c5503 : mov edi, ebp ; mov esi, 0x30 ; add rbp, r14 ; call 0x9181c
0x000000000008b196 : mov edi, ebp ; mov rdx, rbp ; mov rsi, r12 ; call rax
0x0000000000088233 : mov edi, ebp ; pop rbx ; pop rbp ; jmp rax
0x000000000012fe0d : mov edi, ebp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x000000000012476c : mov edi, ebx ; jne 0x12476d ; mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000017232b : mov edi, ebx ; jne 0x172320 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000103d7a : mov edi, ebx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; jmp rax
0x0000000000070bb5 : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x000000000007346f : mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000070ec2 : mov edi, ebx ; xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000037b94 : mov edi, esi ; mov rdx, rbp ; call r15
0x0000000000071d8b : mov edi, esp ; mov rax, rdi ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000021dd1 : mov edi, esp ; mov rcx, qword ptr [rbp - 0x60] ; call rcx
0x000000000010e3d6 : mov edx, 0x22 ; je 0x10e3f5 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000080085 : mov edx, 0x48000000 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000139f83 : mov edx, 0x480002c6 ; add esp, 0x100 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013e992 : mov edx, 0xffffffff ; mov rsi, r14 ; mov rdi, rbp ; call r12
0x000000000013e868 : mov edx, 0xffffffff ; mov rsi, rbx ; mov rdi, rbp ; call rcx
0x00000000000ca199 : mov edx, 0xffffffff ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000712ea : mov edx, 0xffffffff ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000598c8 : mov edx, 1 ; mov dword ptr [rbp - 0x10b4], 0 ; jmp rax
0x000000000005a759 : mov edx, 1 ; mov dword ptr [rbp - 0x10b4], 1 ; jmp rax
0x00000000000f7014 : mov edx, 9 ; jne 0xf7037 ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000115ea8 : mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00000000001161ff : mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x000000000011603e : mov edx, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000001720a0 : mov edx, dword ptr [rax + rbp*8] ; test rdx, rdx ; je 0x1720b2 ; call rdx
0x000000000007340c : mov edx, dword ptr [rax] ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000115ea9 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000116200 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000001164ec : mov edx, dword ptr [rbp - 0x158] ; call rax
0x00000000001177e8 : mov edx, dword ptr [rbp - 0x20] ; movsxd rcx, eax ; cmp qword ptr [rdx + rcx*8 - 8], 1 ; sbb eax, 0 ; leave ; ret
0x000000000005cbc4 : mov edx, dword ptr [rbp - 0x688] ; movsxd rax, dword ptr [rcx + rbx*4] ; add rax, rcx ; jmp rax
0x000000000014672f : mov edx, dword ptr [rbp - 0x78] ; mov r9d, dword ptr [rdx] ; mov rdx, r13 ; add r9, qword ptr [rbp - 0x88] ; call rax
0x0000000000115f07 : mov edx, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x000000000012fe05 : mov edx, dword ptr [rbx + 0x28] ; add rsp, 8 ; mov rdi, rbp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000115f00 : mov edx, dword ptr [rbx + 0x38] ; mov qword ptr [rbp - 0x70], rdx ; mov edx, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00000000001164e5 : mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, qword ptr [rbp - 0x158] ; call rax
0x000000000011628e : mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00000000000d2637 : mov edx, dword ptr [rbx + 4] ; test edx, edx ; jne 0xd2636 ; nop ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000115ac0 : mov edx, dword ptr [rbx - 0x10] ; mov qword ptr [rbp - 0x70], rdx ; mov edx, dword ptr [rbx - 0x30] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x0000000000115ac7 : mov edx, dword ptr [rbx - 0x30] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x0000000000108c40 : mov edx, dword ptr [rbx] ; mov qword ptr [rax], rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000071d88 : mov edx, dword ptr [rbx] ; mov rdi, r12 ; mov rax, rdi ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fe421 : mov edx, dword ptr [rbx] ; test edx, edx ; je 0xfe405 ; pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x00000000000db199 : mov edx, dword ptr [rbx] ; test rdx, rdx ; jne 0xdb16f ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000115f96 : mov edx, dword ptr [rcx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000115f8f : mov edx, dword ptr [rcx + 0x38] ; mov qword ptr [rbp - 0x70], rdx ; mov edx, dword ptr [rcx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x000000000012ca31 : mov edx, dword ptr [rdi] ; mov qword ptr [rbx], rax ; mov r8, rbp ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x00000000001304ec : mov edx, dword ptr [rdx + 0x38] ; test rdx, rdx ; je 0x130504 ; mov rdi, rbp ; call rdx
0x000000000011603f : mov edx, dword ptr [rsi + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000088479 : mov edx, dword ptr [rsp + 0x68] ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000001304e7 : mov edx, dword ptr [rsp + 8] ; mov rdx, qword ptr [rdx + 0x38] ; test rdx, rdx ; je 0x130509 ; mov rdi, rbp ; call rdx
0x0000000000130f5e : mov edx, dword ptr [rsp] ; bswap edx ; mov dword ptr [rax], edx ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fe420 : mov edx, dword ptr fs:[rbx] ; test edx, edx ; je 0xfe406 ; pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000050d9c : mov edx, eax ; mov esi, ecx ; mov qword ptr [rbp - 0x78], 0 ; call 0xad06e
0x0000000000050d6d : mov edx, eax ; mov qword ptr [rbp - 0x88], r8 ; call 0xad06b
0x0000000000146736 : mov edx, ebp ; add r9, qword ptr [rbp - 0x88] ; call rax
0x000000000013da3a : mov edx, ebp ; mov rax, qword ptr [rax + 0x18] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000000ad462 : mov edx, ebp ; mov rdi, rbp ; call rbx
0x00000000000f541f : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call 0xf169a
0x0000000000037641 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000131b93 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000137d75 : mov edx, ebp ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000129ea4 : mov edx, ebx ; add rbx, 1 ; cmp eax, edx ; jg 0x129e6a ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010230e : mov edx, ebx ; cmovne rbp, rax ; call 0xfe618
0x000000000013d1e2 : mov edx, ebx ; mov rax, qword ptr [rax + 0x10] ; add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000131a86 : mov edx, ebx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000da731 : mov edx, ebx ; or al, byte ptr [rax] ; movzx ebp, bpl ; movsxd rax, dword ptr [rsi + rbp*4] ; add rax, rsi ; jmp rax
0x0000000000125105 : mov edx, edx ; mov word ptr [r14 + 0x38], r9w ; mov qword ptr [rbp - 0x78], r10 ; call 0x913bd
0x0000000000125198 : mov edx, edx ; mov word ptr [r14 + 0x80], r8w ; mov qword ptr [rbp - 0x78], r10 ; call 0x913c0
0x00000000000ad722 : mov edx, esi ; mov rdi, rbp ; call rbx
0x00000000000c5181 : mov edx, esi ; mov rsi, qword ptr [rdi + rax*8] ; mov rdi, rbp ; call 0x913bb
0x00000000000ad5e7 : mov edx, esp ; lea r9, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rbx
0x00000000000ad31e : mov edx, esp ; lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x0000000000137d74 : mov edx, r13d ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001b9264 : mov es, word ptr [rcx*4 + 0x45068c05] ; add dword ptr [rdi], 3 ; pop rbp ; add dword ptr [rdx], ecx ; ret
0x000000000012f381 : mov esi, 0x18c48348 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c5505 : mov esi, 0x30 ; add rbp, r14 ; call 0x9181a
0x00000000000a066e : mov esi, 0x84450704 ; sal byte ptr [rbp - 0x26], 0xf3 ; ret
0x000000000012d853 : mov esi, 0x8c48348 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000104ffa : mov esi, 1 ; mov rdi, rbp ; call rbx
0x0000000000103d74 : mov esi, 2 ; mov rdi, rbx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; jmp rax
0x000000000012f192 : mov esi, 4 ; mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00000000001046a9 : mov esi, dword ptr [rax] ; mov rdi, qword ptr [rbp - 0x40] ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000060ed6 : mov esi, dword ptr [rbp - 0x660] ; xor edx, edx ; jmp 0x5d0f8
0x00000000000355e0 : mov esi, dword ptr [rdi + 0x20] ; mov r15, qword ptr [rdi + 0x28] ; mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x00000000000c5184 : mov esi, dword ptr [rdi + rax*8] ; mov rdi, rbp ; call 0x913b8
0x000000000012e718 : mov esi, dword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x000000000008822a : mov esi, dword ptr [rsp + 0x18] ; add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000086a89 : mov esi, dword ptr [rsp + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000000ad45d : mov esi, dword ptr [rsp + 0x18] ; mov rdx, r13 ; mov rdi, rbp ; call rbx
0x00000000000ad71d : mov esi, dword ptr [rsp + 0x18] ; mov rdx, r14 ; mov rdi, rbp ; call rbx
0x000000000013846b : mov esi, dword ptr [rsp + 0x30] ; mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x000000000012e649 : mov esi, ebp ; mov rcx, rbx ; add rdi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000013079c : mov esi, ebp ; mov rcx, rbx ; add rdi, 0x23b0 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000001307e2 : mov esi, ebp ; mov rcx, rbx ; pop rbx ; pop rbp ; add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x0000000000037b91 : mov esi, ebp ; mov rdi, r14 ; mov rdx, rbp ; call r15
0x000000000013ddae : mov esi, ebp ; mov rdi, rbp ; mov edx, 0xffffffff ; xor eax, eax ; call r8
0x000000000013dd62 : mov esi, ebp ; mov rdi, rbp ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x000000000013e86e : mov esi, ebx ; mov rdi, rbp ; call rcx
0x00000000000c519d : mov esi, ebx ; mov rdi, rbp ; mov rdx, r14 ; mov qword ptr [rsp + 0x10], r11 ; call 0x913bf
0x0000000000050d9e : mov esi, ecx ; mov qword ptr [rbp - 0x78], 0 ; call 0xad06c
0x0000000000057222 : mov esi, edi ; mov dword ptr [rbp - 0x510], r11d ; mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x000000000012e895 : mov esi, edi ; push r12 ; push rbp ; mov r13, rsi ; push rbx ; sub rsp, 0x60 ; call 0x13ab0f
0x0000000000130f0d : mov esi, edx ; sub esi, eax ; mov eax, esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013e998 : mov esi, esi ; mov rdi, rbp ; call r12
0x0000000000088e4d : mov esi, esp ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000000f5422 : mov esi, esp ; mov rdi, rbp ; call 0xf1697
0x0000000000037644 : mov esi, esp ; mov rdi, rbp ; call r15
0x000000000008847e : mov esi, esp ; mov rdi, rbp ; call rax
0x000000000007346c : mov esi, esp ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000070ebf : mov esi, esp ; mov rdi, rbx ; xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000088b6a : mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x00000000000888bd : mov esi, esp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000007346b : mov esi, r12d ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000193c64 : mov esp, 0x2cfffc6d ; insd dword ptr [rdi], dx ; cld ; lcall ptr [rsp + rbp*2 + 0x6c2cfffc] ; cld ; call rdx
0x0000000000080110 : mov esp, 0x48ffff8c ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007e4f2 : mov esp, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x00000000000355ea : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x000000000006e26e : mov esp, ebx ; lea rsp, qword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000cdb4f : mov esp, ebx ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000e9c53 : mov gs, esp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; push rbp ; or byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 + 0x63], r9b ; ret
0x0000000000078401 : mov qword ptr [r12 + 0x28], rax ; mov rax, r13 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009841a : mov qword ptr [r12], 0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bd013 : mov qword ptr [r12], r13 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000983f2 : mov qword ptr [r12], r13 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008a188 : mov qword ptr [r12], rax ; je 0x8a270 ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000008aeaa : mov qword ptr [r12], rax ; je 0x8afa0 ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x00000000000f1021 : mov qword ptr [r12], rax ; je 0xf1007 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ac731 : mov qword ptr [r12], rax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008a1a1 : mov qword ptr [r12], rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011b0f0 : mov qword ptr [r12], rbp ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010e411 : mov qword ptr [r12], rbp ; je 0x10e436 ; xor edx, edx ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000017209b : mov qword ptr [r12], rbx ; mov rdx, qword ptr [rax + rbp*8] ; test rdx, rdx ; je 0x1720b7 ; call rdx
0x00000000000fccaa : mov qword ptr [r13 + 8], rax ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010fbf8 : mov qword ptr [r13], r12 ; je 0x10fc28 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c92e5 : mov qword ptr [r13], r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012780c : mov qword ptr [r13], rax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008b036 : mov qword ptr [r13], rax ; je 0x8b0d8 ; mov rsi, rbp ; mov rdi, r12 ; call rax
0x00000000000991cd : mov qword ptr [r13], rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000085748 : mov qword ptr [r13], rsi ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007a93a : mov qword ptr [r14 + 0x90], rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f16c2 : mov qword ptr [r8], rsi ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000071836 : mov qword ptr [rax + 0x20], rcx ; mov dword ptr [rdx], ebx ; add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000074c45 : mov qword ptr [rax + 0x20], rdx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000074100 : mov qword ptr [rax + 0x30], rbp ; mov qword ptr [rax + 0x38], r12 ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000074104 : mov qword ptr [rax + 0x38], r12 ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a305 : mov qword ptr [rax], 2 ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003a4e6 : mov qword ptr [rax], 4 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000217d3 : mov qword ptr [rax], rcx ; mov r15, rax ; mov qword ptr [rbp - 0xa0], rax ; call 0x8da3f
0x0000000000108c42 : mov qword ptr [rax], rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000735dc : mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010e359 : mov qword ptr [rbp + 0x18], -1 ; jmp 0x10e0fd
0x00000000000795a4 : mov qword ptr [rbp + 0x18], rax ; ja 0x795c5 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079651 : mov qword ptr [rbp + 0x18], rax ; ja 0x79677 ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000783d3 : mov qword ptr [rbp + 0x18], rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000078480 : mov qword ptr [rbp + 0x30], rdx ; mov qword ptr [rbx + 0x18], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000110749 : mov qword ptr [rbp + 0x38], rdx ; mov byte ptr [rax], bl ; movsx eax, bl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013595d : mov qword ptr [rbp + 0x50], rax ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d03e3 : mov qword ptr [rbp + 8], 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007ef1d : mov qword ptr [rbp + 8], rax ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000007eeec : mov qword ptr [rbp + 8], rax ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002adf3 : mov qword ptr [rbp + r12*8], r15 ; mov rax, qword ptr [rax + r12*8] ; test rax, rax ; je 0x2ae11 ; call rax
0x0000000000059803 : mov qword ptr [rbp - 0x1078], 0 ; jmp rax
0x00000000000ded76 : mov qword ptr [rbp - 0x38], -1 ; jmp 0xde999
0x000000000006a978 : mov qword ptr [rbp - 0x498], rdx ; jmp 0x6a94b
0x000000000004dca2 : mov qword ptr [rbp - 0x4c8], 0 ; jmp rax
0x0000000000063080 : mov qword ptr [rbp - 0x668], rax ; jmp 0x60a59
0x0000000000116101 : mov qword ptr [rbp - 0x70], rax ; mov eax, dword ptr [r14 - 0x30] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x0000000000115ea4 : mov qword ptr [rbp - 0x70], rdx ; mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00000000001161fb : mov qword ptr [rbp - 0x70], rdx ; mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x000000000011603a : mov qword ptr [rbp - 0x70], rdx ; mov edx, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000115f03 : mov qword ptr [rbp - 0x70], rdx ; mov edx, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x000000000011628a : mov qword ptr [rbp - 0x70], rdx ; mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000115ac3 : mov qword ptr [rbp - 0x70], rdx ; mov edx, dword ptr [rbx - 0x30] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x0000000000115f92 : mov qword ptr [rbp - 0x70], rdx ; mov edx, dword ptr [rcx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000115a0a : mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x0000000000050da0 : mov qword ptr [rbp - 0x78], 0 ; call 0xad06a
0x000000000012510c : mov qword ptr [rbp - 0x78], r10 ; call 0x913b6
0x0000000000050d6f : mov qword ptr [rbp - 0x88], r8 ; call 0xad069
0x00000000000217d9 : mov qword ptr [rbp - 0xa0], rax ; call 0x8da39
0x0000000000173523 : mov qword ptr [rbp], 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000098525 : mov qword ptr [rbp], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000226ea : mov qword ptr [rbp], r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000106d39 : mov qword ptr [rbp], r14 ; mov qword ptr [rsp + 0x18], rax ; mov rdx, rax ; jmp 0x106d9a
0x000000000008a43b : mov qword ptr [rbp], rax ; je 0x8a620 ; mov rdx, r15 ; mov rdi, r8 ; call rax
0x0000000000074445 : mov qword ptr [rbp], rax ; mov qword ptr [rbx + 0x60], rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007ed98 : mov qword ptr [rbp], rax ; mov qword ptr [rbx + 0x60], rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003b4a9 : mov qword ptr [rbp], rax ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000144b4c : mov qword ptr [rbp], rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000044fa0 : mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000003a879 : mov qword ptr [rbp], rdx ; call rax
0x0000000000089ac6 : mov qword ptr [rbp], rdx ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008b954 : mov qword ptr [rbx + 0x10], r12 ; mov qword ptr [rbx + 0x20], rax ; mov qword ptr [rbx + 8], rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a7fc : mov qword ptr [rbx + 0x10], rax ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001107d3 : mov qword ptr [rbx + 0x10], rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007fc80 : mov qword ptr [rbx + 0x10], rbp ; mov qword ptr [rbx + 0x18], rbp ; nop ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ba83c : mov qword ptr [rbx + 0x10], rdx ; je 0xba829 ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000110803 : mov qword ptr [rbx + 0x18], rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007fc84 : mov qword ptr [rbx + 0x18], rbp ; nop ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000078484 : mov qword ptr [rbx + 0x18], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000050a96 : mov qword ptr [rbx + 0x18], rsi ; mov qword ptr [rcx + rdx*8], rax ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000013eaf8 : mov qword ptr [rbx + 0x20], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000131a19 : mov qword ptr [rbx + 0x20], rax ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000007d2ce : mov qword ptr [rbx + 0x20], rax ; mov dword ptr [rbx], edx ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008b958 : mov qword ptr [rbx + 0x20], rax ; mov qword ptr [rbx + 8], rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001319c3 : mov qword ptr [rbx + 0x20], rcx ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000007f7dc : mov qword ptr [rbx + 0x28], rax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000122094 : mov qword ptr [rbx + 0x30], rax ; mov eax, 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001077fb : mov qword ptr [rbx + 0x38], rax ; mov eax, 3 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007deec : mov qword ptr [rbx + 0x40], r12 ; mov dword ptr [rbx], edx ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010ff02 : mov qword ptr [rbx + 0x40], rax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011056e : mov qword ptr [rbx + 0x40], rbp ; add rsp, 8 ; mov eax, 1 ; pop rbx ; pop rbp ; ret
0x0000000000074449 : mov qword ptr [rbx + 0x60], rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007ed9c : mov qword ptr [rbx + 0x60], rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079f0a : mov qword ptr [rbx + 0x90], rax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000007af47 : mov qword ptr [rbx + 0x90], rax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007c720 : mov qword ptr [rbx + 0x90], rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013bae4 : mov qword ptr [rbx + 8], rax ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001107a3 : mov qword ptr [rbx + 8], rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008b9d9 : mov qword ptr [rbx + 8], rbp ; mov eax, 1 ; mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008bb64 : mov qword ptr [rbx + 8], rbp ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008ba08 : mov qword ptr [rbx + 8], rbp ; mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008b95c : mov qword ptr [rbx + 8], rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007d65d : mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009673c : mov qword ptr [rbx], 0 ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000021622 : mov qword ptr [rbx], 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001439f7 : mov qword ptr [rbx], 0 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000050b51 : mov qword ptr [rbx], rax ; add rsp, 8 ; add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000096722 : mov qword ptr [rbx], rax ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000008bb61 : mov qword ptr [rbx], rax ; mov qword ptr [rbx + 8], rbp ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012ca33 : mov qword ptr [rbx], rax ; mov r8, rbp ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x0000000000139e55 : mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001399a4 : mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000003b44a : mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a04a6 : mov qword ptr [rbx], rdx ; mov byte ptr [rax], 0 ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000005c38d : mov qword ptr [rbx], rdx ; mov byte ptr [rax], bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000063e51 : mov qword ptr [rbx], rdx ; mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008b9e2 : mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000741a4 : mov qword ptr [rcx + 0x38], r12 ; mov eax, 1 ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000050a9a : mov qword ptr [rcx + rdx*8], rax ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000001064a4 : mov qword ptr [rdi + 0x28], rdx ; mov byte ptr [rax], 0xa ; add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000010611a : mov qword ptr [rdi + 0x28], rdx ; mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004888f : mov qword ptr [rdi + 8], r10 ; mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000000559c5 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000558f3 : mov qword ptr [rdi], r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000060ed1 : mov qword ptr [rdx + 8], rdi ; mov rsi, qword ptr [rbp - 0x660] ; xor edx, edx ; jmp 0x5d0fd
0x0000000000096836 : mov qword ptr [rdx], r12 ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000073409 : mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000117777 : mov qword ptr [rip + 0x2ad9a2], rax ; pop rbp ; ret
0x000000000010b00e : mov qword ptr [rip + 0x2b6207], 2 ; pop rbp ; ret
0x000000000010b001 : mov qword ptr [rip + 0x2b6214], 0 ; pop rbp ; ret
0x00000000000bd05d : mov qword ptr [rip + 0x3069f4], r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000080408 : mov qword ptr [rip + 0x343389], rax ; add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000001fa3a : mov qword ptr [rip + 0x3a68c7], rdx ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000bdc56 : mov qword ptr [rsi + 0x28], rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000074e1b : mov qword ptr [rsi], rax ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000173522 : mov qword ptr fs:[rbp], 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003a878 : mov qword ptr fs:[rbp], rdx ; call rax
0x0000000000079f09 : mov qword ptr ss:[rbx + 0x90], rax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000aed30 : mov r10, rbp ; setne dl ; jmp 0xaed4c
0x00000000000b171f : mov r10, rbp ; setne dl ; jmp 0xb173c
0x000000000002e9f8 : mov r13, rbp ; jmp 0x2e9c3
0x00000000001046af : mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000012e894 : mov r14, rdi ; push r12 ; push rbp ; mov r13, rsi ; push rbx ; sub rsp, 0x60 ; call 0x13ab10
0x00000000000355e3 : mov r15, qword ptr [rdi + 0x28] ; mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x00000000000801a0 : mov r15, qword ptr [rip + 0x340c21] ; mov rbp, rsi ; xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x00000000000217d6 : mov r15, rax ; mov qword ptr [rbp - 0xa0], rax ; call 0x8da3c
0x00000000001171d8 : mov r8, qword ptr [r8 + 8] ; test r8, r8 ; jne 0x117187 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000013a4b5 : mov r8, r15 ; mov rcx, r14 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000012ca36 : mov r8, rbp ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000013a3b6 : mov r8, rbx ; mov ecx, r12d ; mov rdi, rbp ; call 0x5665b
0x000000000013a3fe : mov r8, rbx ; mov rcx, r12 ; mov rdi, rbp ; xor eax, eax ; call 0x5665d
0x0000000000117ae9 : mov r8b, 0x48 ; lea esp, dword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ad457 : mov r9, qword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 0x18] ; mov rdx, r13 ; mov rdi, rbp ; call rbx
0x00000000000ad717 : mov r9, qword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 0x18] ; mov rdx, r14 ; mov rdi, rbp ; call rbx
0x000000000005a6b4 : mov r9d, 1 ; mov dword ptr [rbp - 0x10b0], 0 ; jmp rax
0x0000000000146732 : mov r9d, dword ptr [rdx] ; mov rdx, r13 ; add r9, qword ptr [rbp - 0x88] ; call rax
0x00000000000ad15d : mov rax, -1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bb379 : mov rax, -3 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fcd30 : mov rax, qword ptr [r12 + 0x10] ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000204a6 : mov rax, qword ptr [r13 + 0x18] ; test rax, rax ; je 0x204c0 ; mov rdi, rbp ; call rax
0x000000000010c6c3 : mov rax, qword ptr [r13 + rax*8] ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001160fd : mov rax, qword ptr [r14 - 0x10] ; mov qword ptr [rbp - 0x70], rax ; mov eax, dword ptr [r14 - 0x30] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x000000000013d1e4 : mov rax, qword ptr [rax + 0x10] ; add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000013da3c : mov rax, qword ptr [rax + 0x18] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000012e912 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12e92c ; mov rdi, rbp ; call rax
0x00000000001356b4 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x1356d0 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000136b91 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x136bab ; mov rdi, rbp ; call rax
0x0000000000136db1 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x136dcb ; mov rdi, rbp ; call rax
0x000000000013b874 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x13b890 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013bf8d : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x13bfa9 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000073467 : mov rax, qword ptr [rbp + 0x18] ; mov esi, r12d ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000738a3 : mov rax, qword ptr [rbp + 0x20] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000007366c : mov rax, qword ptr [rbp + 0x28] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000070bac : mov rax, qword ptr [rbp + 0x48] ; add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000001046b2 : mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000ee9f4 : mov rax, qword ptr [rbp - 0xd8] ; call rax
0x00000000000a0f96 : mov rax, qword ptr [rbp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001107cf : mov rax, qword ptr [rbx + 0x10] ; mov qword ptr [rbx + 0x10], rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001107ff : mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rbx + 0x18], rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012e90e : mov rax, qword ptr [rbx + 0x20] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12e930 ; mov rdi, rbp ; call rax
0x0000000000130f20 : mov rax, qword ptr [rbx + 0x20] ; sub rax, qword ptr [rbx + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x000000000007ed94 : mov rax, qword ptr [rbx + 0x60] ; mov qword ptr [rbp], rax ; mov qword ptr [rbx + 0x60], rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011079f : mov rax, qword ptr [rbx + 8] ; mov qword ptr [rbx + 8], rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007c675 : mov rax, qword ptr [rbx + 8] ; pop rbx ; pop rbp ; movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013942b : mov rax, qword ptr [rbx] ; add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000103444 : mov rax, qword ptr [rip + 0x2bf345] ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000102eb7 : mov rax, qword ptr [rip + 0x2bf8ca] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bd495 : mov rax, qword ptr [rip + 0x30903c] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ad1e0 : mov rax, qword ptr [rsp + 0x30] ; add rsp, 0x60 ; pop rbx ; pop rbp ; sub rax, r12 ; pop r12 ; ret
0x0000000000109d35 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011bd68 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012f1cf : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000139e50 : mov rax, qword ptr [rsp + 8] ; mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013999f : mov rax, qword ptr [rsp + 8] ; mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000131a80 : mov rax, qword ptr [rsp + 8] ; mov rdx, rbx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000135ff7 : mov rax, qword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000a0f95 : mov rax, qword ptr fs:[rbp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000096839 : mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006d55d : mov rax, r12 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002d02e : mov rax, r12 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000008ad45 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012e94d : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006d4cc : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000079286 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000076733 : mov rax, r12 ; sub rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000078406 : mov rax, r13 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009a249 : mov rax, r13 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000006e6ba : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000306ab : mov rax, r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000089271 : mov rax, r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000adf46 : mov rax, r15 ; pop rbx ; neg rax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004afed : mov rax, r15 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002d702 : mov rax, r15 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000808fc : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000142b23 : mov rax, r8 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012d7cc : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000001fb85 : mov rax, rbp ; cmp r9, rax ; je 0x1fb32 ; jmp 0x1fb5b
0x0000000000103d7d : mov rax, rbp ; pop rbp ; pop r12 ; jmp rax
0x000000000007f7fd : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007af83 : mov rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000023971 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000776da : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000791f6 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007af4e : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006bbe9 : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000007c32d : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ac37f : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000004ae1e : mov rax, rbx ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000105533 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000002aa22 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000033f57 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006f4c8 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002a5f3 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000328f7 : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000002fefa : mov rax, rcx ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002e736 : mov rax, rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000071d72 : mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000071d8d : mov rax, rdi ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009042c : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007fe63 : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006edfc : mov rax, rdx ; pop rbp ; pop r12 ; ret
0x000000000012be11 : mov rax, rdx ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000032824 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8b2c : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008879f : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000080413 : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000070d90 : mov rax, rsi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007100a : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003a453 : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000037b8a : mov rbp, qword ptr [rsp + 0x50] ; nop ; mov rsi, r13 ; mov rdi, r14 ; mov rdx, rbp ; call r15
0x00000000000c912c : mov rbp, r13 ; mov rdi, rbx ; call r12
0x00000000000355ec : mov rbp, r9 ; nop ; jmp rdx
0x0000000000079bf2 : mov rbp, rax ; add rsp, 0x18 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000104ace : mov rbp, rdi ; xor edx, edx ; xor esi, esi ; call rbx
0x0000000000098473 : mov rbp, rdx ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000e4c54 : mov rbp, rsi ; mov qword ptr [rsp + 0x28], rdi ; add rax, rdx ; jmp rax
0x00000000000801a7 : mov rbp, rsi ; xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x000000000010af88 : mov rbp, rsp ; lock cmpxchg qword ptr [rip + 0x2b628c], rdx ; je 0x10afa7 ; pop rbp ; ret
0x0000000000117663 : mov rbp, rsp ; pop rbp ; ret
0x00000000000fe504 : mov rbx, -1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001171e1 : mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000003a895 : mov rbx, qword ptr [rbp] ; test rbx, rbx ; jne 0x3a86f ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000104632 : mov rbx, qword ptr [rbx] ; test rbx, rbx ; jne 0x104626 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000003a894 : mov rbx, qword ptr fs:[rbp] ; test rbx, rbx ; jne 0x3a870 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006f4dc : mov rbx, r13 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006f4c1 : mov rbx, rax ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000079b9e : mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001196ee : mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000721aa : mov rbx, rbp ; je 0x721a6 ; mov esi, r12d ; mov rdi, r15 ; call 0x7e41d
0x0000000000021dd3 : mov rcx, qword ptr [rbp - 0x60] ; call rcx
0x0000000000131b8d : mov rcx, qword ptr [rsp + 8] ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000013a401 : mov rcx, r12 ; mov rdi, rbp ; xor eax, eax ; call 0x5665a
0x00000000000213dd : mov rcx, r12 ; push 0 ; mov rdx, rbp ; mov rsi, qword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x00000000000ad5e3 : mov rcx, r13 ; mov rdx, r12 ; lea r9, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rbx
0x00000000000ad8c3 : mov rcx, r13 ; mov rdx, r12 ; lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000768cc : mov rcx, r14 ; lea rsi, qword ptr [rbp + 0x50] ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00000000000f541b : mov rcx, r14 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call 0xf169e
0x000000000013a4b8 : mov rcx, r14 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000ad31a : mov rcx, r15 ; mov rdx, r12 ; lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x000000000012e64b : mov rcx, rbx ; add rdi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000013079e : mov rcx, rbx ; add rdi, 0x23b0 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000001307e4 : mov rcx, rbx ; pop rbx ; pop rbp ; add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x00000000000d0250 : mov rdi, qword ptr [rbp - 0x308] ; call r12
0x00000000001046ab : mov rdi, qword ptr [rbp - 0x40] ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000005722b : mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x0000000000103fbe : mov rdi, qword ptr [rbp] ; call rbx
0x0000000000071d8a : mov rdi, r12 ; mov rax, rdi ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000021dd0 : mov rdi, r12 ; mov rcx, qword ptr [rbp - 0x60] ; call rcx
0x000000000008b195 : mov rdi, r13 ; mov rdx, rbp ; mov rsi, r12 ; call rax
0x0000000000037b93 : mov rdi, r14 ; mov rdx, rbp ; call r15
0x00000000000ee9f1 : mov rdi, rax ; mov rax, qword ptr [rbp - 0xd8] ; call rax
0x0000000000088e4f : mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x0000000000170dab : mov rdi, rbp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000013a3bc : mov rdi, rbp ; call 0x56655
0x00000000000c5187 : mov rdi, rbp ; call 0x913b5
0x00000000000f5424 : mov rdi, rbp ; call 0xf1695
0x00000000001309fd : mov rdi, rbp ; call qword ptr [rbx]
0x000000000013e99a : mov rdi, rbp ; call r12
0x000000000012e71c : mov rdi, rbp ; call r14
0x0000000000037646 : mov rdi, rbp ; call r15
0x00000000000204af : mov rdi, rbp ; call rax
0x00000000000ad325 : mov rdi, rbp ; call rbx
0x000000000013e870 : mov rdi, rbp ; call rcx
0x00000000001304f4 : mov rdi, rbp ; call rdx
0x000000000012f197 : mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013ddb0 : mov rdi, rbp ; mov edx, 0xffffffff ; xor eax, eax ; call r8
0x000000000013dd64 : mov rdi, rbp ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x00000000000c5502 : mov rdi, rbp ; mov esi, 0x30 ; add rbp, r14 ; call 0x9181d
0x000000000013846f : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x00000000000c519f : mov rdi, rbp ; mov rdx, r14 ; mov qword ptr [rsp + 0x10], r11 ; call 0x913bd
0x0000000000088232 : mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000013a404 : mov rdi, rbp ; xor eax, eax ; call 0x56657
0x000000000012fe0c : mov rdi, rbp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x000000000012476b : mov rdi, rbx ; jne 0x12476e ; mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000017232a : mov rdi, rbx ; jne 0x172321 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000103d79 : mov rdi, rbx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; jmp rax
0x0000000000070bb4 : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000007346e : mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000070ec1 : mov rdi, rbx ; xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000012ca30 : mov rdx, qword ptr [r15] ; mov qword ptr [rbx], rax ; mov r8, rbp ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000017209f : mov rdx, qword ptr [rax + rbp*8] ; test rdx, rdx ; je 0x1720b3 ; call rdx
0x00000000001164eb : mov rdx, qword ptr [rbp - 0x158] ; call rax
0x000000000005cbc3 : mov rdx, qword ptr [rbp - 0x688] ; movsxd rax, dword ptr [rcx + rbx*4] ; add rax, rcx ; jmp rax
0x000000000012fe04 : mov rdx, qword ptr [rbx + 0x28] ; add rsp, 8 ; mov rdi, rbp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000108c3f : mov rdx, qword ptr [rbx] ; mov qword ptr [rax], rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000db198 : mov rdx, qword ptr [rbx] ; test rdx, rdx ; jne 0xdb170 ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001304eb : mov rdx, qword ptr [rdx + 0x38] ; test rdx, rdx ; je 0x130505 ; mov rdi, rbp ; call rdx
0x0000000000088478 : mov rdx, qword ptr [rsp + 0x68] ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000125104 : mov rdx, r10 ; mov word ptr [r14 + 0x38], r9w ; mov qword ptr [rbp - 0x78], r10 ; call 0x913be
0x00000000000ad5e6 : mov rdx, r12 ; lea r9, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rbx
0x00000000000ad31d : mov rdx, r12 ; lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x0000000000146735 : mov rdx, r13 ; add r9, qword ptr [rbp - 0x88] ; call rax
0x00000000000ad461 : mov rdx, r13 ; mov rdi, rbp ; call rbx
0x00000000000f541e : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call 0xf169b
0x0000000000037640 : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000131b92 : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000ad721 : mov rdx, r14 ; mov rdi, rbp ; call rbx
0x00000000000c5180 : mov rdx, r14 ; mov rsi, qword ptr [rdi + rax*8] ; mov rdi, rbp ; call 0x913bc
0x00000000000c517f : mov rdx, r14 ; mov rsi, qword ptr [rdi + rax*8] ; mov rdi, rbp ; call 0x913bd
0x0000000000050d9b : mov rdx, r8 ; mov esi, ecx ; mov qword ptr [rbp - 0x78], 0 ; call 0xad06f
0x0000000000050d6c : mov rdx, r8 ; mov qword ptr [rbp - 0x88], r8 ; call 0xad06c
0x0000000000037b96 : mov rdx, rbp ; call r15
0x00000000000e163e : mov rdx, rbp ; mov ecx, eax ; mov rsi, r13 ; mov qword ptr [rsp + 8], r9 ; call 0xdd94f
0x00000000000213e2 : mov rdx, rbp ; mov rsi, qword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x000000000008b198 : mov rdx, rbp ; mov rsi, r12 ; call rax
0x000000000008ac76 : mov rdx, rbp ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000000403c5 : mov rdx, rbp ; xor ebp, ebp ; add rax, rax ; sub rdx, rax ; jmp 0x40410
0x0000000000131a85 : mov rdx, rbx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000001046a8 : mov rsi, qword ptr [rax] ; mov rdi, qword ptr [rbp - 0x40] ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000060ed5 : mov rsi, qword ptr [rbp - 0x660] ; xor edx, edx ; jmp 0x5d0f9
0x00000000000c5183 : mov rsi, qword ptr [rdi + rax*8] ; mov rdi, rbp ; call 0x913b9
0x00000000000c5182 : mov rsi, qword ptr [rdi + rax*8] ; mov rdi, rbp ; call 0x913ba
0x000000000012e717 : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x0000000000088229 : mov rsi, qword ptr [rsp + 0x18] ; add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000086a88 : mov rsi, qword ptr [rsp + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000000ad45c : mov rsi, qword ptr [rsp + 0x18] ; mov rdx, r13 ; mov rdi, rbp ; call rbx
0x00000000000ad71c : mov rsi, qword ptr [rsp + 0x18] ; mov rdx, r14 ; mov rdi, rbp ; call rbx
0x000000000013846a : mov rsi, qword ptr [rsp + 0x30] ; mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000088e4c : mov rsi, r12 ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000000f5421 : mov rsi, r12 ; mov rdi, rbp ; call 0xf1698
0x0000000000037643 : mov rsi, r12 ; mov rdi, rbp ; call r15
0x000000000008847d : mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000070ebe : mov rsi, r12 ; mov rdi, rbx ; xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000088b69 : mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x00000000000888bc : mov rsi, r12 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000037b90 : mov rsi, r13 ; mov rdi, r14 ; mov rdx, rbp ; call r15
0x000000000013ddad : mov rsi, r13 ; mov rdi, rbp ; mov edx, 0xffffffff ; xor eax, eax ; call r8
0x000000000013dd61 : mov rsi, r13 ; mov rdi, rbp ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x000000000013e997 : mov rsi, r14 ; mov rdi, rbp ; call r12
0x000000000012e648 : mov rsi, rbp ; mov rcx, rbx ; add rdi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000000acc55 : mov rsi, rbp ; mov rdi, qword ptr [r12] ; lea r9, qword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000008b040 : mov rsi, rbp ; mov rdi, r12 ; call rax
0x00000000000881ca : mov rsi, rbp ; mov rdi, rax ; mov rbx, rax ; call 0x844db
0x000000000008a192 : mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000013e86d : mov rsi, rbx ; mov rdi, rbp ; call rcx
0x00000000000c519c : mov rsi, rbx ; mov rdi, rbp ; mov rdx, r14 ; mov qword ptr [rsp + 0x10], r11 ; call 0x913c0
0x00000000000355e9 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000006e26d : mov rsp, rbx ; lea rsp, qword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000125107 : mov word ptr [r14 + 0x38], r9w ; mov qword ptr [rbp - 0x78], r10 ; call 0x913bb
0x000000000012519a : mov word ptr [r14 + 0x80], r8w ; mov qword ptr [rbp - 0x78], r10 ; call 0x913be
0x000000000013ad1b : mov word ptr [rax + rdx*8 - 4], cx ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011b405 : mov word ptr [rax], es ; add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000012f1cb : mov word ptr [rbx + 2], ax ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013ad6f : mov word ptr [rcx + 4], si ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001b9268 : mov word ptr [rsi], es ; add dword ptr [r15], 3 ; pop rbp ; add dword ptr [rdx], ecx ; ret
0x00000000001a6feb : movabs al, byte ptr [0x1400000001] ; pushfq ; salc ; add byte ptr [rax], al ; mov byte ptr [rbp - 0xf], al ; call qword ptr [rsi]
0x00000000000fa335 : movabs al, byte ptr [0x415c415d5b000000] ; pop rbp ; pop r14 ; ret
0x0000000000021dca : movabs al, byte ptr [0xe7894c001243b0e8] ; mov rcx, qword ptr [rbp - 0x60] ; call rcx
0x0000000000029b4c : movabs al, byte ptr [0xffffffffb8000000] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001004ed : movabs dword ptr [0x5b08c48348bf73d4], eax ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007cf4b : movabs eax, dword ptr [0x5b28c48348000000] ; pop rbp ; ret
0x000000000016c4a8 : movabs rbp, 0xf66d1ef0f66bdb2 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000fdbf1 : movsb byte ptr [rdi], byte ptr [rsi] ; cmp dword ptr [rsp - 0x2c], ecx ; je 0xfdc37 ; mov dword ptr fs:[r8], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000197114 : movsb byte ptr [rdi], byte ptr [rsi] ; jnp 0x19711f ; add byte ptr [rbp + rbp*2 - 0xa], dh ; call rsp
0x0000000000084b8b : movsd dword ptr [rdi], dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77cfdb9], cl ; add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x0000000000144b4b : movsd dword ptr [rdi], dword ptr [rsi] ; mov qword ptr [rbp], rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003b3e0 : movsd qword ptr [rbx], xmm0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000144b4a : movsq qword ptr [rdi], qword ptr [rsi] ; mov qword ptr [rbp], rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000011074f : movsx eax, bl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003b4a5 : movsxd rax, dword ptr [rbx + 2] ; mov qword ptr [rbp], rax ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e4c50 : movsxd rax, dword ptr [rdx + rax*4] ; mov rbp, rsi ; mov qword ptr [rsp + 0x28], rdi ; add rax, rdx ; jmp rax
0x00000000000da739 : movsxd rax, dword ptr [rsi + rbp*4] ; add rax, rsi ; jmp rax
0x000000000014ad7b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a55b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000149d3b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x0000000000124709 : movsxd rcx, ecx ; idiv edi ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003b3e1 : movups xmmword ptr [rbx], xmm0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000004b233 : movzx eax, ah ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000130dad : movzx eax, al ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013e12b : movzx eax, al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000010a01d : movzx eax, al ; add rsp, 0x90 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001308cc : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000110720 : movzx eax, al ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000136275 : movzx eax, al ; pop rbp ; pop r12 ; ret
0x00000000000cfa53 : movzx eax, al ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000131c6a : movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000012edb9 : movzx eax, ax ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000007c87c : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007e4ab : movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007b6bc : movzx eax, byte ptr [rax] ; add rsp, 0x98 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007d479 : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007c87d : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004b232 : movzx eax, r12b ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000da735 : movzx ebp, bpl ; movsxd rax, dword ptr [rsi + rbp*4] ; add rax, rsi ; jmp rax
0x00000000000da736 : movzx ebp, ch ; movsxd rax, dword ptr [rsi + rbp*4] ; add rax, rsi ; jmp rax
0x00000000000d2738 : movzx edx, byte ptr [rbx + 1] ; test dl, dl ; jne 0xd2736 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008a758 : neg dword ptr [rbx - 0x39] ; add eax, 0x339084 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000139c7a : neg eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007c47c : neg eax ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010d762 : neg eax ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011751b : neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000001fb80 : neg eax ; mov dword ptr fs:[rdx], eax ; mov rax, rbp ; cmp r9, rax ; je 0x1fb37 ; jmp 0x1fb60
0x00000000000cf002 : neg eax ; or rax, 0x31069 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000adf4b : neg eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012c1ee : neg eax ; pop rbx ; or eax, 1 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000003b825 : neg eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000110723 : neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000035c13 : neg ebx ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000045f11 : neg edx ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000cf001 : neg rax ; or rax, 0x31069 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000adf4a : neg rax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003b824 : neg rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000076a8e : nop ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x00000000000769ab : nop ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000007af7b : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x48], bl ; sub ebp, eax ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000000fea3a : nop ; add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x10], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012f38f : nop ; add rsp, 0x18 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011228f : nop ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000a105f : nop ; add rsp, 8 ; mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000215af : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007966f : nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000fdc8f : nop ; mov dword ptr fs:[r8], r12d ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116104 : nop ; mov eax, dword ptr [r14 - 0x30] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x000000000007045f : nop ; mov eax, dword ptr [rsp] ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000115ea7 : nop ; mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00000000001161fe : nop ; mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x000000000011603d : nop ; mov edx, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000115f06 : nop ; mov edx, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00000000001164e4 : nop ; mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, qword ptr [rbp - 0x158] ; call rax
0x000000000011628d : nop ; mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000115ac6 : nop ; mov edx, dword ptr [rbx - 0x30] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x0000000000115f95 : nop ; mov edx, dword ptr [rcx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000000fcd2f : nop ; mov rax, qword ptr [r12 + 0x10] ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000d263f : nop ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007fc88 : nop ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003763f : nop ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000037b8f : nop ; mov rsi, r13 ; mov rdi, r14 ; mov rdx, rbp ; call r15
0x0000000000193e58 : nop ; pop rbp ; cld ; call qword ptr [rax]
0x000000000011255f : nop ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000172a3f : nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f803f : nop ; pop rbx ; pop rbp ; ret
0x000000000000a548 : nop ; rcl dword ptr [rbx], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x34
0x00000000000bd499 : nop ; xor byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008a75d : nop ; xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000010e2bf : nop ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006bbef : nop ; xor ebp, ebp ; add rsp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000048543 : nop dword ptr [rax + rax] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013d7fb : nop dword ptr [rax + rax] ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000008044b : nop dword ptr [rax + rax] ; add rsp, 0x18 ; xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000136413 : nop dword ptr [rax + rax] ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012d743 : nop dword ptr [rax + rax] ; add rsp, 8 ; mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000008d7b3 : nop dword ptr [rax + rax] ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000075ed8 : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000cd24b : nop dword ptr [rax + rax] ; mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000086a83 : nop dword ptr [rax + rax] ; mov rsi, qword ptr [rsp + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000049c93 : nop dword ptr [rax + rax] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000117658 : nop dword ptr [rax + rax] ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x0000000000131318 : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013d879 : nop dword ptr [rax] ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000071845 : nop dword ptr [rax] ; add rsp, 8 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00000000001307f4 : nop dword ptr [rax] ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000dfc81 : nop dword ptr [rax] ; mov eax, 0xc ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002e9f5 : nop dword ptr [rax] ; mov r13, rbp ; jmp 0x2e9c6
0x0000000000104641 : nop dword ptr [rax] ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000088b64 : nop dword ptr [rax] ; pop rbx ; mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x00000000000874e4 : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000e98bc : nop dword ptr [rax] ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000db285 : nop dword ptr [rax] ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000d8bad : nop dword ptr [rax] ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000131317 : nop dword ptr cs:[rax + rax] ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000048542 : nop word ptr [rax + rax] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013d7fa : nop word ptr [rax + rax] ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000cd24a : nop word ptr [rax + rax] ; mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000117657 : nop word ptr [rax + rax] ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x0000000000131316 : nop word ptr cs:[rax + rax] ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009829a : not eax ; add rbx, rax ; jne 0x98296 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000098299 : not rax ; add rbx, rax ; jne 0x98297 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000002bd4 : or ah, byte ptr [rbp + 0xc] ; scasd eax, dword ptr [rdi] ; xbegin 0xfffffffff8c6efdc ; ret
0x0000000000088d7c : or al, 0 ; add byte ptr [rax], al ; add rsp, 0x10 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000122f3a : or al, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000011058a : or al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000db2ba : or al, 0 ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000d6dfd : or al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e9715 : or al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000dfc89 : or al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000089e0f : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008bb28 : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000047ee0 : or al, 0 ; add rsp, 0x80 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000085a30 : or al, 0x1e ; add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000010a37d : or al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000cd0c1 : or al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000108fad : or al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cd1b8 : or al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c9bb3 : or al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000221a3 : or al, 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012ef12 : or al, 0x48 ; add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001210b9 : or al, 0x48 ; add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002468b : or al, 0x48 ; add esp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000035e68 : or al, 0x48 ; add esp, 0x90 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008d833 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x0000000000051a3a : or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x00000000000fdf36 : or al, 0x85 ; sar byte ptr [rax + 0xd], cl ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001850dd : or al, 0xee ; push rbp ; or ebp, esi ; inc dword ptr [rbp - 0x7a0011f4] ; or al, 0xee ; call rbx
0x00000000001106da : or al, 0xf8 ; dec dword ptr [rax + 1] ; imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019eed3 : or al, 7 ; or byte ptr [rcx + 0xb], al ; xor al, 0 ; add byte ptr [rax], al ; test byte ptr [rbp], dl ; add al, dh ; in al, dx ; jmp qword ptr [rax]
0x00000000000fb269 : or al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007011d : or al, byte ptr [rax] ; add rsp, 0x80 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006edf2 : or al, byte ptr [rax] ; add rsp, 0x80 ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x00000000000da733 : or al, byte ptr [rax] ; movzx ebp, bpl ; movsxd rax, dword ptr [rsi + rbp*4] ; add rax, rsi ; jmp rax
0x00000000000eedf3 : or al, byte ptr [rbp + 0x31] ; rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret 0x8341
0x00000000000ee179 : or al, byte ptr [rbp + 0x31] ; rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret 0x8944
0x000000000006c3ee : or al, byte ptr [rbp - 0x47f28b40] ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000ac6ca : or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x000000000008ac72 : or al, byte ptr [rcx] ; add byte ptr [rax], al ; mov rdx, rbp ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000001725f5 : or al, ch ; mov ebp, 0x48ffead3 ; cmp ebx, ebp ; jb 0x1725fd ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000013e140 : or bh, bh ; push rax ; test eax, eax ; jne 0x13e1b0 ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013e210 : or bh, bh ; push rax ; test eax, eax ; jne 0x13e280 ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013e2e0 : or bh, bh ; push rax ; test eax, eax ; jne 0x13e350 ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013e3a0 : or bh, bh ; push rax ; test eax, eax ; jne 0x13e410 ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000e0ae3 : or bl, bh ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000000e0b62 : or bl, dil ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000000ee69b : or byte ptr [r13 + r9*4 + 0x1c], cl ; sbb ch, cl ; or eax, 0xe8fffff9 ; push rbp ; ret
0x000000000013bae6 : or byte ptr [r8 + 1], dil ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001107a1 : or byte ptr [r8 - 0x77], cl ; imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f6f4a : or byte ptr [r9 - 0x2dceffa3], r9b ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000e9d60 : or byte ptr [r9 - 0x75], r9b ; push rbp ; adc byte ptr [rax + 0x63], cl ; ret
0x000000000012e663 : or byte ptr [rax + 0x10], bh ; pop rbx ; pop rbp ; ret
0x00000000001266ed : or byte ptr [rax + 0x242c602], ch ; add byte ptr [rbp + 0x48], dh ; mov eax, r8d ; ret
0x000000000007f86b : or byte ptr [rax + 0x2b], cl ; imul ebx, dword ptr [rax], 0x5b ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011b13b : or byte ptr [rax + 0xca], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008b9dc : or byte ptr [rax + 1], bh ; mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013d173 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008ba5e : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000079d94 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008bb67 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000110575 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x00000000001176e9 : or byte ptr [rax + 5], bh ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000114b4b : or byte ptr [rax + 7], bh ; pop rbx ; pop rbp ; ret
0x0000000000107954 : or byte ptr [rax + 9], bh ; pop rbx ; pop rbp ; ret
0x000000000003a4e5 : or byte ptr [rax - 0x39], cl ; add byte ptr [rax + rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000063e4c : or byte ptr [rax - 0x73], cl ; push rax ; add al, 0x48 ; mov dword ptr [rbx], edx ; mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001304ea : or byte ptr [rax - 0x75], cl ; push rdx ; cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x00000000000d8f76 : or byte ptr [rax - 0x77], cl ; add al, byte ptr [rbp - 0x77] ; xor byte ptr [rcx + 0x63], cl ; add r9b, r13b ; ret
0x000000000007fe62 : or byte ptr [rax - 0x77], cl ; clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000131a84 : or byte ptr [rax - 0x77], cl ; fimul dword ptr [rcx + rcx*4 - 0x1a] ; mov rdi, rbp ; call rax
0x00000000001107a2 : or byte ptr [rax - 0x77], cl ; imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012e647 : or byte ptr [rax - 0x77], cl ; out dx, al ; mov rcx, rbx ; add rdi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x0000000000088231 : or byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x000000000012fe0b : or byte ptr [rax - 0x77], cl ; out dx, eax ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x000000000012ae88 : or byte ptr [rax - 0x7b], cl ; push qword ptr [rbp - 0x16] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008b8dd : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x13], 0xf3 ; ret
0x000000000008b987 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000798bd : or byte ptr [rax - 0x7d], cl ; js 0x798fe ; add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x38 ; ret
0x000000000010f231 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003a0a1 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007184b : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00000000000ffbeb : or byte ptr [rax], al ; add byte ptr [rax], 0 ; lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000001ac206 : or byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rax + rbp + 0xbb00001], dh ; cmc ; jmp rcx
0x0000000000078c9c : or byte ptr [rax], al ; add byte ptr [rbp + 0x14], dh ; xor eax, eax ; cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x0000000000080be8 : or byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000104ac6 : or byte ptr [rax], al ; je 0x1055af ; mov rbp, rdi ; xor edx, edx ; xor esi, esi ; call rbx
0x000000000006bb6b : or byte ptr [rax], dl ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000048be5 : or byte ptr [rbp + 0x39], cl ; ret
0x000000000006cd02 : or byte ptr [rbp + 0x3d8e0fd2], al ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x3948
0x000000000012679f : or byte ptr [rbp + 0x5d5b2b04], cl ; ret
0x000000000006f7da : or byte ptr [rbp + 0x648575c9], al ; mov dword ptr [rax], 5 ; mov rax, rdx ; pop rbx ; ret
0x00000000001a21b4 : or byte ptr [rbp + 0xb], al ; push 0x41180e0a ; ret
0x000000000019fb6d : or byte ptr [rbp + 0xb], al ; push rbp ; ret
0x00000000001a181d : or byte ptr [rbp + 0xb], al ; push rdx ; ret
0x000000000007eea2 : or byte ptr [rbp + 0xb], dh ; sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000034de7 : or byte ptr [rbp + 6], dh ; addsd xmm0, xmm0 ; ret
0x00000000000acae7 : or byte ptr [rbp + rbp*4 + 0x48], dh ; mov eax, ebx ; pop rbx ; ret
0x00000000000ee69c : or byte ptr [rbp + rcx*4 + 0x1c], cl ; sbb ch, cl ; or eax, 0xe8fffff9 ; push rbp ; ret
0x00000000000a7e7f : or byte ptr [rbp + rcx*4 + 0x1d], 0xa9 ; jrcxz 0xa7ea3 ; add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000001333a2 : or byte ptr [rbp + rcx*4 + 0x42], cl ; or byte ptr [rcx - 0x77], al ; ret 0x8949
0x00000000000d7e04 : or byte ptr [rbp + rcx*4 + 0x4a], al ; inc dword ptr [rcx] ; ret 0x5589
0x00000000000bb643 : or byte ptr [rbp - 0x29], dh ; ret
0x000000000013d453 : or byte ptr [rbp - 0x3f6af040], al ; add rsp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000000aef08 : or byte ptr [rbp - 0x57c2fa9], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004014c : or byte ptr [rbp - 0x57f2faa], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003ce07 : or byte ptr [rbp - 0x57f2faf], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000e0a21 : or byte ptr [rbp - 0x75], cl ; or byte ptr [rax - 0x77], r9b ; ret 0x1bb
0x000000000010438e : or byte ptr [rbp - 0x7b], al ; test byte ptr [rax - 0x75], 0x7d ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x000000000005cdb7 : or byte ptr [rbp - 0x7b], cl ; in al, 0x75 ; ret
0x00000000001171db : or byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp - 0x69], 0x48 ; mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x0000000000111c82 : or byte ptr [rbp - 0x7c968b40], al ; call 0xffffffffc39a6898
0x00000000000ddc84 : or byte ptr [rbp - 0x9d88b0a], al ; ret
0x00000000000e9018 : or byte ptr [rbx + 0x38], 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000072c29 : or byte ptr [rbx + 0x44], bl ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000050b57 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x00000000000d6bba : or byte ptr [rcx + 0x4478330], cl ; add dword ptr [rax + 1], edi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019eed5 : or byte ptr [rcx + 0xb], al ; xor al, 0 ; add byte ptr [rax], al ; test byte ptr [rbp], dl ; add al, dh ; in al, dx ; jmp qword ptr [rax]
0x000000000006f4db : or byte ptr [rcx + rcx*4 - 0x15], cl ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000137d73 : or byte ptr [rcx + rcx*4 - 0x16], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000131b91 : or byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000001351a3 : or byte ptr [rcx + rcx*4 - 0x18], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006e6b9 : or byte ptr [rcx + rcx*4 - 0x18], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012bc79 : or byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8f56 : or byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002d701 : or byte ptr [rcx + rcx*4 - 8], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f6f4b : or byte ptr [rcx - 0x2dceffa3], cl ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000048892 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x0000000000124b0e : or byte ptr [rcx - 0x3fcefbbd], cl ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000010c6c2 : or byte ptr [rcx - 0x75], cl ; lds r8d, ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e9d61 : or byte ptr [rcx - 0x75], cl ; push rbp ; adc byte ptr [rax + 0x63], cl ; ret
0x000000000011ab04 : or byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bb640 : or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x29], dh ; ret
0x00000000001176d0 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x000000000007d660 : or byte ptr [rdi], cl ; mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000131c69 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000000712e9 : or byte ptr [rdx - 1], bh ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c9bac : or byte ptr [rsi - 0xb], bl ; dec dword ptr [rbx + 0x480c2444] ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000001fb92 : or byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b586b : or cl, byte ptr [rbp + 0x63] ; fisttp dword ptr [rcx + 0x39] ; ret
0x000000000004018c : or cl, byte ptr [rbp - 0x57f2faa] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003cf47 : or cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000146734 : or cl, byte ptr [rcx + rcx*4 - 0x16] ; add r9, qword ptr [rbp - 0x88] ; call rax
0x000000000002dba1 : or dh, 0x15 ; add byte ptr [rbp - 0x77], cl ; ret 0xb0e9
0x000000000007625f : or dh, byte ptr [rax + rdi*4 + 0x48] ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000d80d9 : or dh, byte ptr [rbp - 0x42] ; xor eax, eax ; cmp byte ptr [rdi + 0x65], 0 ; setne al ; add eax, eax ; ret
0x00000000000d8091 : or dh, byte ptr [rsp + rbx*2 + 0x48] ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007c879 : or dh, byte ptr [rsp + rdi*2 + 0x40] ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000036c9c : or dl, bh ; je 0x36cbd ; add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000036dfe : or dl, bh ; je 0x36e1d ; add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000ffbea : or dword ptr [rax], 0x8000 ; lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000f7015 : or dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0xf7036 ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000f7138 : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000107956 : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000004016c : or dword ptr [rbp - 0x57f2faa], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003cf27 : or dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000016cb16 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000130856 : or dword ptr [rbx + 0x31], ebx ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000006eff3 : or dword ptr [rbx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000075ea1 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000ce93f : or dword ptr [rcx - 0x7f], ecx ; clc ; add byte ptr [rcx], al ; sbb dword ptr [rbp + rsi*2 - 0x7e], edx ; mov eax, 0x7d00 ; ret
0x00000000000c193b : or dword ptr [rdi], ecx ; xchg dword ptr [rbp + rbp*8 - 1], edx ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000558ee : or dword ptr [rsi + 0xe], ebp ; xor eax, eax ; mov qword ptr [rdi], r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000559c0 : or dword ptr [rsi + 0xe], esp ; xor eax, eax ; mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000559bf : or dword ptr [rsi + 0xe], r12d ; xor eax, eax ; mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010794c : or eax, 0 ; add byte ptr [rax], al ; add rsp, 8 ; mov eax, 9 ; pop rbx ; pop rbp ; ret
0x00000000000fdf3a : or eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001463f2 : or eax, 0x1f247c80 ; add byte ptr [rbp + 0x16], dh ; add rsp, 0x38 ; ret
0x000000000007e122 : or eax, 0x28c48348 ; pop rbx ; pop rbp ; ret
0x00000000000cf005 : or eax, 0x31069 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000139427 : or eax, 0x48000001 ; mov eax, dword ptr [rbx] ; add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x00000000000f701a : or eax, 0x8c48348 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000ee6a2 : or eax, 0xe8fffff9 ; push rbp ; ret
0x000000000012c1f1 : or eax, 1 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001aafb5 : or eax, dword ptr [rax] ; add byte ptr [rax + rax + 0x16640000], dl ; add dword ptr [rax], eax ; adc byte ptr [rbp - 0xc], bh ; jmp rdi
0x000000000003b446 : or eax, ecx ; cdqe ; mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012a17b : or ebp, 2 ; mov dword ptr [r12 + 0x40], ebp ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001192eb : or ebp, edx ; mov dword ptr [rbx], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000071d90 : or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000071d70 : or ebp, edx ; mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001850e1 : or ebp, esi ; inc dword ptr [rbp - 0x7a0011f4] ; or al, 0xee ; call rbx
0x0000000000185141 : or ebp, esi ; inc dword ptr [rbp - 0x7a0011f4] ; or al, 0xee ; jmp rbx
0x0000000000185219 : or ebp, esi ; ljmp ptr [rbp + 0x16ffedf7] ; or ebp, esi ; call qword ptr [rsi]
0x000000000010e3dc : or ebx, dword ptr [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000158c49 : or ecx, dword ptr [rbp + rcx*4 + 0x1d] ; pop rdi ; lodsd eax, dword ptr [rsi] ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000401a8 : or ecx, dword ptr [rbp - 0x57f2faa] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003cf63 : or ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000abcb4 : or ecx, dword ptr [rbx + 0x463b2847] ; sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000abd04 : or ecx, dword ptr [rbx + 0x463b3847] ; cmp byte ptr [rbp + 0x13], dh ; ret
0x000000000019eed6 : or esi, dword ptr [r8 + rax] ; add byte ptr [rax], al ; test byte ptr [rbp], dl ; add al, dh ; in al, dx ; jmp qword ptr [rax]
0x000000000019eed7 : or esi, dword ptr [rax + rax] ; add byte ptr [rax], al ; test byte ptr [rbp], dl ; add al, dh ; in al, dx ; jmp qword ptr [rax]
0x000000000006f149 : or esi, ebp ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006eff4 : or esp, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000075ea2 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001aad9f : or esp, dword ptr [rbp + 0xa] ; ret
0x000000000003cf26 : or qword ptr [rbp - 0x57f2faf], rcx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000001aafb4 : or r8d, dword ptr [rax] ; add byte ptr [rax + rax + 0x16640000], dl ; add dword ptr [rax], eax ; adc byte ptr [rbp - 0xc], bh ; jmp rdi
0x00000000000cf004 : or rax, 0x31069 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000003cf62 : or rcx, qword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000559be : or word ptr [rsi + 0xe], r12w ; xor eax, eax ; mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000104ff5 : out -1, eax ; sal dword ptr [rcx], cl ; sar byte ptr [rsi + 1], cl ; mov rdi, rbp ; call rbx
0x000000000002c424 : out 0x10, al ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000172098 : out 0x24, eax ; add byte ptr [rcx - 0x77], cl ; sbb al, 0x24 ; mov rdx, qword ptr [rax + rbp*8] ; test rdx, rdx ; je 0x1720ba ; call rdx
0x000000000009d960 : out 0x31, eax ; inc dword ptr [rbp + 0x38] ; ret
0x000000000009a43b : out 0x31, eax ; inc dword ptr [rbp + 0x38] ; ret 0xf75
0x000000000010c5e2 : out 0x40, al ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000088e4e : out 0x48, al ; mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000007346d : out 0x48, al ; mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000070ec0 : out 0x48, al ; mov edi, ebx ; xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000012d738 : out 0x48, eax ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000abda0 : out 0x48, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000071d8c : out 0x48, eax ; mov eax, edi ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000021dd2 : out 0x48, eax ; mov ecx, dword ptr [rbp - 0x60] ; call rcx
0x00000000000982a0 : out 0x4c, eax ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013ddac : out 0x4c, eax ; mov esi, ebp ; mov rdi, rbp ; mov edx, 0xffffffff ; xor eax, eax ; call r8
0x00000000000888be : out 0x5b, al ; pop rbp ; pop r12 ; jmp rax
0x000000000004e295 : out 8, eax ; add byte ptr [rax], al ; mov dword ptr [rbp - 0x4f0], 1 ; jmp rax
0x0000000000198565 : out dx, al ; add dword ptr [rax], eax ; add edi, ecx ; push qword ptr [rsi + rbp*8 + 0x3a40001] ; stc ; jmp rsp
0x0000000000098ccb : out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x0000000000098c0b : out dx, al ; add dword ptr [rbp - 0xf], esi ; xor edi, edi ; mov rax, rdi ; ret
0x000000000013ab85 : out dx, al ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + rax*4 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000001366cb : out dx, al ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x00000000001850e2 : out dx, al ; inc dword ptr [rbp - 0x7a0011f4] ; or al, 0xee ; call rbx
0x0000000000185142 : out dx, al ; inc dword ptr [rbp - 0x7a0011f4] ; or al, 0xee ; jmp rbx
0x000000000018521a : out dx, al ; ljmp ptr [rbp + 0x16ffedf7] ; or ebp, esi ; call qword ptr [rsi]
0x000000000006f14a : out dx, al ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e64a : out dx, al ; mov rcx, rbx ; add rdi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000013079d : out dx, al ; mov rcx, rbx ; add rdi, 0x23b0 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000001307e3 : out dx, al ; mov rcx, rbx ; pop rbx ; pop rbp ; add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x0000000000037b92 : out dx, al ; mov rdi, r14 ; mov rdx, rbp ; call r15
0x000000000013ddaf : out dx, al ; mov rdi, rbp ; mov edx, 0xffffffff ; xor eax, eax ; call r8
0x000000000013dd63 : out dx, al ; mov rdi, rbp ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x0000000000047edf : out dx, al ; or al, 0 ; add rsp, 0x80 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000019572a : out dx, al ; push qword ptr [rbp + rcx*8 + 0x42e40000] ; out dx, al ; call rsp
0x000000000019589a : out dx, al ; push qword ptr [rbp + rdx*8 + 0x62640000] ; out dx, al ; call rsp
0x00000000001850de : out dx, al ; push rbp ; or ebp, esi ; inc dword ptr [rbp - 0x7a0011f4] ; or al, 0xee ; call rbx
0x00000000000c8264 : out dx, al ; test eax, eax ; jne 0xc829d ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007430e : out dx, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000007436a : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000126ca6 : out dx, eax ; dec dword ptr [rax - 0x73] ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000c5504 : out dx, eax ; mov esi, 0x30 ; add rbp, r14 ; call 0x9181b
0x000000000007af46 : out dx, eax ; mov qword ptr [rbx + 0x90], rax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008b197 : out dx, eax ; mov rdx, rbp ; mov rsi, r12 ; call rax
0x000000000013dd60 : out dx, eax ; mov rsi, r13 ; mov rdi, rbp ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x00000000001725ff : out dx, eax ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000088234 : out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x000000000012fe0e : out dx, eax ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x00000000000d9b3f : outsb dx, byte ptr [rsi] ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000016c4a7 : outsd dx, dword ptr [rsi] ; movabs rbp, 0xf66d1ef0f66bdb2 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000abcd8 : pcmpeqb mm2, qword ptr [rip + 0x3b30478b] ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000001835e5 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000001835e6 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000000a0bd6 : pcmpgtd mm1, qword ptr [rdi] ; xlatb ; rol dword ptr [rbp + 0x7d850fc0], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001b9262 : pop qword ptr [rbx] ; mov es, word ptr [rcx*4 + 0x45068c05] ; add dword ptr [rdi], 3 ; pop rbp ; add dword ptr [rdx], ecx ; ret
0x0000000000020a01 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000006e275 : pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000039b46 : pop r12 ; pop rbp ; ret
0x0000000000020a03 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000006e277 : pop r13 ; pop rbp ; ret
0x0000000000020a05 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000020a07 : pop r15 ; pop rbp ; ret
0x0000000000081311 : pop r8 ; add rsp, 0x78 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000130f0b : pop r8 ; mov esi, edx ; sub esi, eax ; mov eax, esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000fa5fa : pop rax ; adc ecx, dword ptr [rax - 0x77] ; fucompi st(0) ; sub al, 0x34 ; stc ; dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x000000000013cfef : pop rax ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013e147 : pop rax ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000111809 : pop rax ; add rsp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000081312 : pop rax ; add rsp, 0x78 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e2ed3 : pop rax ; mov eax, 0xc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c9283 : pop rax ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000024269 : pop rax ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fa8eb : pop rax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000024c7c : pop rax ; mov eax, r10d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000023cc3 : pop rax ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000028759 : pop rax ; mov eax, r15d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000130f0c : pop rax ; mov esi, edx ; sub esi, eax ; mov eax, esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ddcfc : pop rax ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000722e3 : pop rax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000009042b : pop rax ; mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001a9098 : pop rax ; pop rbp ; jmp rcx
0x000000000012b9a5 : pop rax ; pop rbx ; neg eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002468f : pop rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000001fa41 : pop rax ; pop rbx ; pop rbp ; ret
0x0000000000128a5d : pop rax ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d05b4 : pop rbp ; add al, byte ptr [rax] ; add dh, dh ; ret
0x000000000016d767 : pop rbp ; add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000006b8b4 : pop rbp ; add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x00000000000f101f : pop rbp ; add byte ptr [rcx - 0x77], cl ; add al, 0x24 ; je 0xf1009 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010334a : pop rbp ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000111cdf : pop rbp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001b926e : pop rbp ; add dword ptr [rdx], ecx ; ret
0x0000000000130f2d : pop rbp ; add eax, edx ; ret
0x00000000001307e8 : pop rbp ; add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x00000000001171e3 : pop rbp ; clc ; leave ; ret
0x0000000000193e59 : pop rbp ; cld ; call qword ptr [rax]
0x0000000000187e24 : pop rbp ; fdivrp st(5) ; call rsp
0x000000000005cdf7 : pop rbp ; jg 0x5ce1a ; add byte ptr [rdi], cl ; mov dh, 0xdb ; movsxd rax, dword ptr [rcx + rbx*4] ; add rax, rcx ; jmp rax
0x0000000000070bb8 : pop rbp ; jmp rax
0x000000000012e655 : pop rbp ; jmp rcx
0x000000000012fe12 : pop rbp ; jmp rdx
0x0000000000186f04 : pop rbp ; loope 0x186f05 ; ljmp ptr [rax + 0x7dfff3db] ; fcomi st(3) ; call rax
0x0000000000081982 : pop rbp ; mov dword ptr [r12 + 0x10], eax ; pop r12 ; ret
0x00000000001727f0 : pop rbp ; mov qword ptr [rip + 0x25291c], 0 ; ret
0x00000000000e1e6a : pop rbp ; mov rax, rcx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000009bd64 : pop rbp ; movabs al, byte ptr [0x8349db194d01ff83] ; ret
0x000000000007c67a : pop rbp ; movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009eca2 : pop rbp ; or byte ptr [rcx - 0x73], 0x4f ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000012a91f : pop rbp ; out 5, al ; add bl, ch ; ret 0x5ba
0x0000000000073472 : pop rbp ; pop r12 ; jmp rax
0x0000000000088e53 : pop rbp ; pop r12 ; jmp rcx
0x0000000000070ec7 : pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000042523 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; fmul st(0) ; ret
0x000000000004249b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x0000000000105537 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000001fd72 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000001fcb7 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fb97 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b6803 : pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000029b21 : pop rbp ; pop r12 ; ret
0x0000000000042527 : pop rbp ; pop r14 ; pop r15 ; fmul st(0) ; ret
0x000000000004249f : pop rbp ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x000000000010553b : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x0000000000020a04 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000001fd76 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000001fcbb : pop rbp ; pop r14 ; ret
0x000000000006e278 : pop rbp ; pop rbp ; ret
0x0000000000048898 : pop rbp ; pop rbx ; ret
0x000000000014ecff : pop rbp ; pop rsp ; add al, byte ptr [rax] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000001fa43 : pop rbp ; ret
0x00000000000783d5 : pop rbp ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fe467 : pop rbp ; sub ch, byte ptr [rax + rax] ; mov qword ptr [rax], rdx ; xor eax, eax ; cmp rdi, rdx ; ja 0xfe4af ; ret
0x0000000000073bc1 : pop rbp ; sub rax, r12 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ad1ea : pop rbp ; sub rax, r12 ; pop r12 ; ret
0x0000000000073d39 : pop rbp ; sub rax, r14 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000114ec1 : pop rbp ; xor eax, eax ; pop rbx ; ret
0x0000000000180db8 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000116fc7 : pop rbx ; and eax, 0xc ; pop rbp ; pop r12 ; ret
0x0000000000180db6 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000098687 : pop rbx ; dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000103479 : pop rbx ; lea rax, qword ptr [rip + 0x2c0ddf] ; pop rbp ; pop r12 ; ret
0x00000000000bba4f : pop rbx ; mov dword ptr [r11 + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000000e0a88 : pop rbx ; mov dword ptr [r12 + 4], r14d ; xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008a759 : pop rbx ; mov dword ptr [rip + 0x339084], 1 ; pop rbp ; pop r12 ; ret
0x00000000001013cb : pop rbx ; mov dword ptr fs:[rbx], r12d ; je 0x1013ff ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000db2b8 : pop rbx ; mov eax, 0xc ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007529e : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000125ae8 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011f85b : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fe427 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000055909 : pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000559d9 : pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008b531 : pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00000000000f0ffb : pop rbx ; mov eax, 5 ; pop rbp ; pop r12 ; ret
0x000000000010fc18 : pop rbx ; mov eax, dword ptr fs:[r14] ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000071faf : pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010e8cc : pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ca19e : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000712ef : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000047ee9 : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000118b4d : pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000071eca : pop rbx ; mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000072c2a : pop rbx ; mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000078400 : pop rbx ; mov qword ptr [r12 + 0x28], rax ; mov rax, r13 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000991cc : pop rbx ; mov qword ptr [r13], rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006d55c : pop rbx ; mov rax, r12 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000103d7c : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; jmp rax
0x000000000007f7fc : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006edfb : pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x0000000000070d8f : pop rbx ; mov rax, rsi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000088b68 : pop rbx ; mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x0000000000136274 : pop rbx ; movzx eax, al ; pop rbp ; pop r12 ; ret
0x000000000012b9a6 : pop rbx ; neg eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000adf49 : pop rbx ; neg rax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012c1f0 : pop rbx ; or eax, 1 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000020a00 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000006e274 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000039b45 : pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000130f2c : pop rbx ; pop rbp ; add eax, edx ; ret
0x00000000001307e7 : pop rbx ; pop rbp ; add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x0000000000070bb7 : pop rbx ; pop rbp ; jmp rax
0x000000000012e654 : pop rbx ; pop rbp ; jmp rcx
0x000000000012fe11 : pop rbx ; pop rbp ; jmp rdx
0x00000000000e1e69 : pop rbx ; pop rbp ; mov rax, rcx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007c679 : pop rbx ; pop rbp ; movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000073471 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000088e52 : pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x0000000000070ec6 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000042522 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; fmul st(0) ; ret
0x000000000004249a : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x0000000000105536 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000001fd71 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000001fcb6 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fb96 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b6802 : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000029b20 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000001fa42 : pop rbx ; pop rbp ; ret
0x0000000000073bc0 : pop rbx ; pop rbp ; sub rax, r12 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ad1e9 : pop rbx ; pop rbp ; sub rax, r12 ; pop r12 ; ret
0x0000000000073d38 : pop rbx ; pop rbp ; sub rax, r14 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000076b96 : pop rbx ; sub rax, r14 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000007dbad : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007af7f : pop rbx ; sub rbp, rax ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000011f8f5 : pop rbx ; xor eax, eax ; mov byte ptr [rdx], 0 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000d6dad : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e0ae6 : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000096606 : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000013d40e : pop rcx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000012f0d6 : pop rcx ; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000d65b1 : pop rcx ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013f4ef : pop rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010344b : pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000103476 : pop rdi ; je 0x103496 ; pop rbx ; lea rax, qword ptr [rip + 0x2c0ddf] ; pop rbp ; pop r12 ; ret
0x0000000000020a08 : pop rdi ; pop rbp ; ret
0x0000000000025f75 : pop rdx ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x52880fd2], al ; add dword ptr [rax], eax ; add bh, dh ; ret 0xf800
0x0000000000103443 : pop rdx ; mov rax, qword ptr [rip + 0x2bf345] ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012f0d5 : pop rdx ; pop rcx ; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000d65b0 : pop rdx ; pop rcx ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013f4ee : pop rdx ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009d8e8 : pop rsi ; add eax, 0x43b60f44 ; add dword ptr [rbp + 0x38], eax ; ret
0x000000000013a391 : pop rsi ; add rsp, 0x158 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000793b9 : pop rsi ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c9bad : pop rsi ; cmc ; dec dword ptr [rbx + 0x480c2444] ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000020a06 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000102be1 : pop rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000103475 : pop rsi ; pop rdi ; je 0x103497 ; pop rbx ; lea rax, qword ptr [rip + 0x2c0ddf] ; pop rbp ; pop r12 ; ret
0x000000000003b3da : pop rsp ; add eax, 0x1576e0 ; movsd qword ptr [rbx], xmm0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000d8093 : pop rsp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000783d0 : pop rsp ; and al, 0x30 ; mov qword ptr [rbp + 0x18], rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000080a69 : pop rsp ; and al, 8 ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000070bab : pop rsp ; mov rax, qword ptr [rbp + 0x48] ; add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000020a02 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000006e276 : pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000039b47 : pop rsp ; pop rbp ; ret
0x00000000000cd0bb : popfq ; add al, 0 ; mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000194065 : popfq ; cld ; inc dword ptr [rbp + rbx*4 - 4] ; call rsp
0x00000000001963b1 : popfq ; int1 ; dec esp ; and dword ptr [rcx], eax ; add byte ptr [rbp + rbx*4 - 0xf], al ; jmp rsp
0x000000000013afb8 : push -0x74138af0 ; and byte ptr [rbp + 0x5b0d74c0], al ; pop rbp ; pop r12 ; ret
0x0000000000076b7d : push 0 ; lea r9, qword ptr [rbp - 0x38] ; mov rcx, r13 ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x00000000000213e0 : push 0 ; mov rdx, rbp ; mov rsi, qword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x00000000000f7044 : push 0x4538908 ; add rsp, 8 ; xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006a970 : push 0x48fffffb ; lea edx, dword ptr [rcx + 8] ; mov qword ptr [rbp - 0x498], rdx ; jmp 0x6a953
0x000000000010186f : push 0x5b000001 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000037b43 : push 0x5b000004 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000096cc9 : push 0x5b000008 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000089da4 : push 0x5b00007a ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fa3e : push 0x5b58003a ; pop rbp ; ret
0x0000000000029ed0 : push 0x5bc88944 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000026603 : push 0x5bd08944 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ea380 : push 0x5bd88948 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000dd56b : push 0x5bf88944 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001706e8 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x000000000007d818 : push qword ptr [rbp + 0x5b] ; pop rbp ; pop r12 ; ret
0x00000000000867b3 : push qword ptr [rbp + 0xc] ; mov dword ptr [rip + 0x33cff8], 0 ; ret
0x0000000000121a67 : push qword ptr [rbp + 0xe] ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000036bf6 : push qword ptr [rbp + 0xf] ; lea edx, dword ptr [rax - 1] ; mov dword ptr [rip + 0x38a486], edx ; ret
0x0000000000075f4b : push qword ptr [rbp + 2] ; pop rbx ; ret
0x0000000000145875 : push qword ptr [rbp + 5] ; mov dword ptr fs:[rbx], ebp ; xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000127fb7 : push qword ptr [rbp + rax - 0x77] ; ret
0x000000000007dedd : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000074195 : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000194063 : push qword ptr [rbp + rbx*4 - 0x62bb0004] ; cld ; call rsp
0x0000000000145590 : push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x000000000008dcd3 : push qword ptr [rbp + rcx + 0x48] ; sar edx, cl ; test rdx, rdx ; je 0x8dd0e ; bsf rax, rdx ; ret
0x000000000008dcd3 : push qword ptr [rbp + rcx + 0x48] ; sar edx, cl ; test rdx, rdx ; je 0x8dd0f ; bsf rax, rdx ; ret
0x0000000000136aee : push qword ptr [rbp + rcx - 0x18] ; ret 0xee8e
0x000000000019572b : push qword ptr [rbp + rcx*8 + 0x42e40000] ; out dx, al ; call rsp
0x000000000007413d : push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000195e0b : push qword ptr [rbp + rdi*8 - 0x6e4c0000] ; out dx, eax ; dec esp ; std ; add byte ptr [rax], al ; in al, -0x6f ; out dx, eax ; jmp rsp
0x00000000001721b4 : push qword ptr [rbp + rdx + 0x48] ; mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x1721d3 ; call rax
0x000000000019589b : push qword ptr [rbp + rdx*8 + 0x62640000] ; out dx, al ; call rsp
0x00000000000c8fce : push qword ptr [rbp + rsi - 0x77] ; ret 0xe283
0x0000000000048fde : push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x000000000003b018 : push qword ptr [rbp - 0x13] ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000122502 : push qword ptr [rbp - 0x15] ; pop rbx ; ret
0x000000000012ae8b : push qword ptr [rbp - 0x16] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007e4f0 : push qword ptr [rbp - 0x44] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001724cd : push qword ptr [rbp - 0xe] ; pop rbx ; ret
0x00000000001724ab : push qword ptr [rbp - 0xe] ; ret
0x0000000000117802 : push qword ptr [rbp - 0xe] ; xor eax, eax ; leave ; ret
0x0000000000074309 : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000074365 : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000081be4 : push qword ptr [rbx] ; add byte ptr [rbp + rcx*4 + 0x34], cl ; sub ecx, dword ptr [rax + 0x39] ; ret
0x000000000014554c : push qword ptr [rcx + rdx*8 + 0x48] ; add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b7505 : push qword ptr [rcx] ; rol byte ptr [rbp - 0x3f6af037], 0x85 ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x000000000013ddb7 : push qword ptr [rcx] ; rol byte ptr [rcx - 1], 0xd0 ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013dd6b : push qword ptr [rcx] ; sar bh, 0xd1 ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000036f38 : push qword ptr [rdi + 0x15] ; add rsp, 0x88 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000102bdf : push qword ptr [rdi + 0x5e] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fce02 : push qword ptr [rdi + 0x73] ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000febf6 : push qword ptr [rdi + 0x77] ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012b11e : push qword ptr [rdi + 0xf] ; sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019531b : push qword ptr [rdi + rbp*4 - 0x4afc0000] ; in eax, dx ; jmp rsp
0x0000000000195313 : push qword ptr [rdi + rbp*4] ; add byte ptr [rsp + rsi*4 - 0x504b0013], al ; add byte ptr [rax], al ; add al, 0xb5 ; in eax, dx ; jmp rsp
0x0000000000117544 : push qword ptr [rdi - 0x33] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001872e7 : push qword ptr [rdx + 2] ; hlt ; lcall ptr [rdx + rbp*8 + 0x1a2fff3] ; hlt ; call rbx
0x000000000019856b : push qword ptr [rsi + rbp*8 + 0x3a40001] ; stc ; jmp rsp
0x0000000000198563 : push qword ptr [rsi + rbp*8 + 1] ; add byte ptr [rbx + rax - 7], ah ; push qword ptr [rsi + rbp*8 + 0x3a40001] ; stc ; jmp rsp
0x00000000000c92e2 : push qword ptr [rsp + rax + 0x4d] ; mov dword ptr [rbp], esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012e897 : push r12 ; push rbp ; mov r13, rsi ; push rbx ; sub rsp, 0x60 ; call 0x13ab0d
0x000000000013595f : push r8 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001309f3 : push rax ; adc byte ptr [rbp - 0x117bf040], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000063e4f : push rax ; add al, 0x48 ; mov dword ptr [rbx], edx ; mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008b93a : push rax ; add cl, byte ptr [rax - 0x7b] ; in eax, dx ; jne 0x8b92b ; test r12, r12 ; jne 0x8b975 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007d65b : push rax ; add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000106118 : push rax ; add dword ptr [rax - 0x77], ecx ; push rdi ; sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013086b : push rax ; and byte ptr [rbx - 0x48], bl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000001932f0 : push rax ; cmp ebx, 0xff ; xor byte ptr [rbp - 0x78ef0005], al ; sti ; jmp rax
0x0000000000135960 : push rax ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000037b8e : push rax ; nop ; mov rsi, r13 ; mov rdi, r14 ; mov rdx, rbp ; call r15
0x000000000007eea1 : push rax ; or byte ptr [rbp + 0xb], dh ; sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000013d452 : push rax ; or byte ptr [rbp - 0x3f6af040], al ; add rsp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000001210bd : push rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000acbbd : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000076b7c : push rax ; push 0 ; lea r9, qword ptr [rbp - 0x38] ; mov rcx, r13 ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x000000000008b52b : push rax ; stc ; add rsp, 0x10 ; pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x000000000013e142 : push rax ; test eax, eax ; jne 0x13e1ae ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013e212 : push rax ; test eax, eax ; jne 0x13e27e ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013e2e2 : push rax ; test eax, eax ; jne 0x13e34e ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013e3a2 : push rax ; test eax, eax ; jne 0x13e40e ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000e9d64 : push rbp ; adc byte ptr [rax + 0x63], cl ; ret
0x0000000000170dbb : push rbp ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000013140c : push rbp ; adc byte ptr [rcx], bh ; ret
0x00000000000f6fd4 : push rbp ; add al, 0x8d ; add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000001993fd : push rbp ; add al, byte ptr [rax] ; mov ah, 0x17 ; sti ; call rsp
0x000000000013b60a : push rbp ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000019eedd : push rbp ; add byte ptr [rax], al ; in al, dx ; jmp qword ptr [rax]
0x0000000000077dc8 : push rbp ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x77d73
0x0000000000089ac8 : push rbp ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000001aeecd : push rbp ; add dword ptr [rax], eax ; mov al, 0xb8 ; cmc ; jmp qword ptr [rcx]
0x0000000000055b77 : push rbp ; add eax, dword ptr [rax] ; add cl, bl ; in eax, -0x21 ; loopne 0x55b12 ; ret 0xe680
0x0000000000187274 : push rbp ; add esp, esi ; jmp rsp
0x0000000000130ac4 : push rbp ; add rsp, 0x2270 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000193e81 : push rbp ; cld ; call qword ptr [rax + 0x10fffc56]
0x00000000001ad459 : push rbp ; cmc ; call qword ptr [rdx]
0x00000000000709f1 : push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000011074b : push rbp ; cmp byte ptr [rax - 0x3c41f0e8], cl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000115ea2 : push rbp ; cmp byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00000000001161f9 : push rbp ; cmp byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000001cb9 : push rbp ; je 0x1ce7 ; ret
0x00000000001a8eb1 : push rbp ; jmp qword ptr [rcx]
0x0000000000118083 : push rbp ; lea rax, qword ptr [rip + 0x386b5] ; ret
0x0000000000117fc3 : push rbp ; lea rax, qword ptr [rip + 0x38795] ; ret
0x0000000000117f03 : push rbp ; lea rax, qword ptr [rip + 0x38855] ; ret
0x000000000009668a : push rbp ; lea rax, qword ptr [rip + 0xba0de] ; ret
0x00000000000919ca : push rbp ; lea rax, qword ptr [rip + 0xbed7e] ; ret
0x000000000009131a : push rbp ; lea rax, qword ptr [rip + 0xbf44e] ; ret
0x00000000001177e9 : push rbp ; loopne 0x117843 ; movsxd rcx, eax ; cmp qword ptr [rdx + rcx*8 - 8], 1 ; sbb eax, 0 ; leave ; ret
0x000000000012510e : push rbp ; mov al, ch ; wait ; ret 0xfff6
0x000000000010425f : push rbp ; mov bh, 0xf1 ; dec dword ptr [rcx - 0x75] ; jge 0x10426f ; call rbx
0x0000000000078efc : push rbp ; mov byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000146730 : push rbp ; mov byte ptr [rbx + rcx*4 + 0xa], al ; mov rdx, r13 ; add r9, qword ptr [rbp - 0x88] ; call rax
0x000000000012e899 : push rbp ; mov r13, rsi ; push rbx ; sub rsp, 0x60 ; call 0x13ab0b
0x0000000000025345 : push rbp ; mov r9, qword ptr [rsp + 0x20] ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000028188 : push rbp ; mov r9, qword ptr [rsp + 0x28] ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000013a72c : push rbp ; mov rcx, qword ptr [rsp + 0x18] ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000038f6 : push rbp ; movabs dword ptr [0x7972d6f857775fc9], eax ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000115ea6 : push rbp ; nop ; mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00000000001161fd : push rbp ; nop ; mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x000000000011603c : push rbp ; nop ; mov edx, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000115f05 : push rbp ; nop ; mov edx, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00000000001164e3 : push rbp ; nop ; mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, qword ptr [rbp - 0x158] ; call rax
0x000000000011628c : push rbp ; nop ; mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000115ac5 : push rbp ; nop ; mov edx, dword ptr [rbx - 0x30] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x0000000000115f94 : push rbp ; nop ; mov edx, dword ptr [rcx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000115a0c : push rbp ; nop ; mov rdx, r13 ; call rax
0x000000000014c8a8 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000115f9a : push rbp ; or byte ptr [rax - 0x77], 0xda ; call rax
0x000000000006cd01 : push rbp ; or byte ptr [rbp + 0x3d8e0fd2], al ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x3948
0x00000000000e9c5a : push rbp ; or byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 + 0x63], r9b ; ret
0x00000000000d7dcb : push rbp ; or byte ptr [rcx - 0x75], cl ; je 0xd7dfd ; or byte ptr [rcx], ch ; ret
0x00000000001850df : push rbp ; or ebp, esi ; inc dword ptr [rbp - 0x7a0011f4] ; or al, 0xee ; call rbx
0x000000000007915f : push rbp ; push -0x76b70006 ; fucompi st(0) ; push -0x3fce0006 ; pop rbx ; ret
0x000000000007d814 : push rbp ; push 0x74fff883 ; and eax, 0x5c415d5b ; ret
0x00000000000ee6a7 : push rbp ; ret
0x0000000000115eaa : push rbp ; sbb byte ptr [rcx - 0x76b37fab], cl ; call rax
0x00000000000025e6 : push rbp ; sbb esi, dword ptr [rdx] ; sahf ; jl 0x2583 ; loop 0x25ce ; ret 0x23cb
0x0000000000078316 : push rbp ; std ; dec dword ptr [rax - 0x7f] ; ret
0x0000000000113248 : push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x0000000000115991 : push rbp ; test byte ptr [rbp + 0x390b74d2], al ; ret 0xf7e
0x0000000000078482 : push rbp ; xor byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000074305 : push rbp ; xor byte ptr [rbx + 0x374fff8], al ; and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000007e4ec : push rbp ; xor byte ptr [rbx - 0x438a0008], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000117660 : push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x0000000000090dca : push rbp ; xor rax, rax ; ret
0x00000000001176c9 : push rbx ; adc byte ptr [rcx + rbx + 0x48], dh ; add esp, 8 ; xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000ba83e : push rbx ; adc byte ptr [rdi + rdx*8 + 0x48], dh ; add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f7047 : push rbx ; add al, 0x48 ; add esp, 8 ; xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000d2638 : push rbx ; add al, 0x85 ; sal byte ptr [rbp - 0x18], cl ; nop ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f849a : push rbx ; add byte ptr [rax], al ; xor eax, eax ; sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d273a : push rbx ; add dword ptr [rdx + rdx*8 - 0x76b3188b], eax ; loopne 0xd27ac ; pop rbp ; pop r12 ; ret
0x0000000000115f01 : push rbx ; cmp byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov edx, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x000000000013a629 : push rbx ; hlt ; cld ; inc dword ptr [rbp + 0x480f78c0] ; add esp, 0x18 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000074109 : push rbx ; je 0x7416d ; pop rbp ; pop r12 ; ret
0x00000000000741ae : push rbx ; je 0x74212 ; pop rbp ; pop r12 ; ret
0x0000000000051a39 : push rbx ; or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x0000000000063e4b : push rbx ; or byte ptr [rax - 0x73], cl ; push rax ; add al, 0x48 ; mov dword ptr [rbx], edx ; mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e0a20 : push rbx ; or byte ptr [rbp - 0x75], cl ; or byte ptr [rax - 0x77], r9b ; ret 0x1bb
0x000000000007d65f : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000299d4 : push rbx ; xor byte ptr [rax - 0x73], cl ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001259ab : push rcx ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x2e7af025], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000130dce : push rcx ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013da0e : push rcx ; add rsp, 8 ; mov eax, 1 ; pop rbx ; pop rbp ; ret
0x0000000000115f90 : push rcx ; cmp byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov edx, dword ptr [rcx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x000000000007a046 : push rdi ; and byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x00000000000bb642 : push rdi ; or byte ptr [rbp - 0x29], dh ; ret
0x0000000000048891 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x00000000001064a6 : push rdi ; sub dh, al ; add byte ptr [rdx], cl ; add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000010611c : push rdi ; sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f84e5 : push rdx ; add byte ptr [rax], al ; xor eax, eax ; sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000088a57 : push rdx ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x48], bl ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000001304ed : push rdx ; cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x000000000008b986 : push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000735da : push rsi ; add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013c2c2 : push rsi ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000116038 : push rsi ; cmp byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov edx, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000000bb63f : push rsi ; or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x29], dh ; ret
0x000000000008847a : push rsp ; and al, 0x68 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000001304e8 : push rsp ; and al, 8 ; mov rdx, qword ptr [rdx + 0x38] ; test rdx, rdx ; je 0x130508 ; mov rdi, rbp ; call rdx
0x00000000001a8eac : push rsp ; cmc ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x000000000019710c : push rsp ; jnp 0x19711f ; add byte ptr [rax + rbp*2], ah ; idiv bh ; movsb byte ptr [rdi], byte ptr [rsi] ; jnp 0x197127 ; add byte ptr [rbp + rbp*2 - 0xa], dh ; call rsp
0x0000000000195728 : push rsp ; out dx, al ; push qword ptr [rbp + rcx*8 + 0x42e40000] ; out dx, al ; call rsp
0x000000000012e898 : push rsp ; push rbp ; mov r13, rsi ; push rbx ; sub rsp, 0x60 ; call 0x13ab0c
0x00000000000038f4 : pushfq ; adc edx, dword ptr [rbp - 0x5d] ; leave ; pop rdi ; ja 0x3962 ; clc ; salc ; jb 0x3988 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00000000000038f3 : pushfq ; adc edx, dword ptr [rbp - 0x5d] ; leave ; pop rdi ; ja 0x3963 ; clc ; salc ; jb 0x3989 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00000000000dc0d0 : pushfq ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7fead], cl ; ret
0x0000000000193c6c : pushfq ; insb byte ptr [rdi], dx ; cld ; ljmp ptr [rsp + rbp*2] ; cld ; call rdx
0x0000000000020f42 : pushfq ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001a6ff4 : pushfq ; salc ; add byte ptr [rax], al ; mov byte ptr [rbp - 0xf], al ; call qword ptr [rsi]
0x000000000000a549 : rcl dword ptr [rbx], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x34
0x00000000000d6daf : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e0a8f : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000096608 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000ca1a0 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000712f1 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x0000000000047eeb : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000048897 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000002b49d : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ce35b : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x000000000012be13 : rcr byte ptr [rbx + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001307a9 : rcr byte ptr [rbx + 0x5d], 0xff ; loope 0x130824 ; nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000ca279 : rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000010e418 : rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000000ff884 : rcr dword ptr [rbx + 0x31], cl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000014ad7c : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a55c : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000149d3c : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x00000000000ff1a3 : rcr dword ptr [rsp + rbp], 1 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000144b49 : rep movsq qword ptr [rdi], qword ptr [rsi] ; mov qword ptr [rbp], rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000076240 : rol byte ptr [rax + rax*8 - 0x7cb7e28c], 0xc4 ; or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000109d32 : rol byte ptr [rax], 1 ; add byte ptr [rax - 0x75], cl ; and al, 8 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011883c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000106b13 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000106977 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002145a : rol byte ptr [rbp + 0x31], 0xc0 ; xor ecx, ecx ; movzx eax, al ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x0000000000097f32 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x00000000000a0cf9 : rol byte ptr [rbp + 0xfd274c0], 1 ; mov ebp, 0xf80148c0 ; ret
0x0000000000045f0b : rol byte ptr [rbp - 0x3d6af040], cl ; neg edx ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000b7507 : rol byte ptr [rbp - 0x3f6af037], 0x85 ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000000365ab : rol byte ptr [rbp - 0x3f6bf02e], 0xc3 ; nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000001200d5 : rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0x8945
0x00000000000997eb : rol byte ptr [rbp - 0x77], 1 ; cli ; cmp r10b, r8b ; jb 0x997db ; mov rdx, rax ; jmp 0x99787
0x000000000011835e : rol byte ptr [rbp - 0x78], 0x41 ; add esi, dword ptr [rbp - 0x6d] ; mov rax, rdi ; ret
0x000000000005f88d : rol byte ptr [rbp - 0x7b], cl ; in al, 0xf ; lahf ; ret 0x2941
0x000000000013d409 : rol byte ptr [rbx + 0x597401fa], 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000d808e : rol byte ptr [rbx + 0x5c740afb], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ac72f : rol byte ptr [rcx + rcx*2], 0x89 ; add al, 0x24 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001046ae : rol byte ptr [rcx - 0x77], 0xdd ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000001327e9 : rol byte ptr [rcx - 0x7f], 1 ; loopne 0x13282b ; xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rbp + 0x31] ; ret 0xc149
0x000000000013ddb9 : rol byte ptr [rcx - 1], 0xd0 ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000096720 : rol byte ptr [rcx], 0x48 ; mov dword ptr [rbx], eax ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000047492 : rol byte ptr [rcx], 0x80 ; js 0x474a2 ; add byte ptr [rbp - 0xa], dh ; pop rbx ; ret
0x000000000011f8f7 : rol dh, 2 ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000131c7e : rol dword ptr [rax], 0 ; test eax, eax ; jne 0x131c9f ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000a0c17 : rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x00000000000a0bda : rol dword ptr [rbp + 0x7d850fc0], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000098d62 : rol dword ptr [rbp + 0xf], -0x4a ; add dword ptr [rdi + rcx - 0x4a], eax ; adc dword ptr [rbp + 0x38], eax ; ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x00000000000a0716 : rol dword ptr [rbp + 8], -0x36 ; jne 0xa070c ; cmp r8d, ecx ; je 0xa070c ; ret
0x0000000000090d86 : rol dword ptr [rbp - 0x4e7af040], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000011835b : rol dword ptr [rbp - 0x7c], 1 ; rol byte ptr [rbp - 0x78], 0x41 ; add esi, dword ptr [rbp - 0x6d] ; mov rax, rdi ; ret
0x000000000013e874 : rol dword ptr [rbx + 0x7402007d], 1 ; sub eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f8032 : rol dword ptr [rcx], -0x36 ; test rdi, rdi ; cmovne eax, edx ; cmp rbp, rsi ; ja 0xf7fe0 ; pop rbx ; pop rbp ; ret
0x00000000000d0881 : rol dword ptr [rcx], -0x7c ; sal byte ptr [rbp - 0x2b], 0xf6 ; ret 0xf05
0x0000000000098dc7 : rol dword ptr [rcx], 0x48 ; sub eax, 1 ; jne 0x98dca ; pop rbx ; pop rbp ; ret
0x0000000000039d35 : ror byte ptr [rax - 0x73], 0x65 ; fcomp dword ptr [rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000769a7 : ror byte ptr [rax - 0x73], 0xb5 ; nop ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x00000000000ba59f : ror byte ptr [rax - 0x73], 1 ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012e716 : ror byte ptr [rax - 0x75], 0x74 ; and al, 0x10 ; mov rdi, rbp ; call r14
0x0000000000138469 : ror byte ptr [rax - 0x75], 0x74 ; and al, 0x30 ; mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x000000000008b983 : ror byte ptr [rax - 0x75], 1 ; push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x000000000010af87 : ror byte ptr [rax - 0x77], 0xe5 ; lock cmpxchg qword ptr [rip + 0x2b628c], rdx ; je 0x10afa8 ; pop rbp ; ret
0x0000000000117662 : ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x0000000000116fc2 : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx - 0x7d], bl ; loopne 0x116fe3 ; pop rbp ; pop r12 ; ret
0x0000000000131c65 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x0000000000090411 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007059c : ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013d458 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000013626f : ror byte ptr [rax - 0x7d], 0xc4 ; xor byte ptr [rbx + 0xf], bl ; mov dh, 0xc0 ; pop rbp ; pop r12 ; ret
0x0000000000139f3d : ror byte ptr [rax - 0x7f], 0xc4 ; add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fa331 : ror byte ptr [rax - 0x7f], 0xc4 ; movabs al, byte ptr [0x415c415d5b000000] ; pop rbp ; pop r14 ; ret
0x00000000000cf000 : ror byte ptr [rax - 9], 0xd8 ; or rax, 0x31069 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000079b9a : ror byte ptr [rax - 9], cl ; cmc ; mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006d67a : ror byte ptr [rbp + 0x39441104], cl ; ret 0x4f0f
0x000000000006d7ea : ror byte ptr [rbp + 0x39441704], cl ; ret 0xf49
0x00000000000d7aa7 : ror byte ptr [rbp + 0x39], 1 ; ret 0x1b74
0x00000000000b891d : ror byte ptr [rbp + 0x39], cl ; ret 0x8b48
0x00000000000a5ff3 : ror byte ptr [rbp + rcx*4 + 0x1d], cl ; dec qword ptr [rip + 0xc634900] ; xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a665f : ror byte ptr [rbp + rcx*4 + 0x1d], cl ; imul edi, ecx, 0x6349000d ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7cc6 : ror byte ptr [rbp + rcx*4 + 0x1d], cl ; loop 0xa7cc0 ; or eax, 0xc634900 ; xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a99d9 : ror byte ptr [rbp + rcx*4 + 0x1d], cl ; movabs dword ptr [0x49930c6349000dc9], eax ; lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a9059 : ror byte ptr [rbp + rcx*4 + 0x1d], cl ; movabs dword ptr [0x49930c6349000dd2], eax ; lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a7579 : ror byte ptr [rbp + rcx*4 + 0x1d], cl ; movabs dword ptr [0x49930c6349000deb], eax ; lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000a5f96 : ror byte ptr [rbp + rcx*4 + 0x1d], cl ; stosb byte ptr [rdi], al ; dec dword ptr [rip + 0xc634900] ; xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a75f3 : ror byte ptr [rbp + rcx*4 + 0x1d], cl ; sub ebx, ebp ; or eax, 0xc634900 ; xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a9a53 : ror byte ptr [rbp + rcx*4 + 0x1d], cl ; sub ecx, ecx ; or eax, 0xc634900 ; xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a90d3 : ror byte ptr [rbp + rcx*4 + 0x1d], cl ; sub edx, edx ; or eax, 0xc634900 ; xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a5fbb : ror byte ptr [rbp + rcx*4 + 0x1d], cl ; test edi, edi ; or eax, 0xc634900 ; xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7596 : ror byte ptr [rbp + rcx*4 + 0x1d], cl ; xchg bl, ch ; or eax, 0xc634900 ; xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a99f6 : ror byte ptr [rbp + rcx*4 + 0x1d], cl ; xchg cl, cl ; or eax, 0xc634900 ; xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a9076 : ror byte ptr [rbp + rcx*4 + 0x1d], cl ; xchg dl, dl ; or eax, 0xc634900 ; xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a6636 : ror byte ptr [rbp + rcx*4 + 0x1d], cl ; xchg eax, edx ; stc ; or eax, 0xc634900 ; xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000ad111 : ror byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x00000000000559c4 : ror byte ptr [rcx + rcx*4 + 0x2f], 0x5b ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000558f2 : ror byte ptr [rcx + rcx*4 + 0x37], 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ad5e2 : ror byte ptr [rcx + rcx*4 - 0x17], 0x4c ; mov edx, esp ; lea r9, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rbx
0x00000000000ad8c2 : ror byte ptr [rcx + rcx*4 - 0x17], 0x4c ; mov edx, esp ; lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000768cb : ror byte ptr [rcx + rcx*4 - 0xf], 0x48 ; lea esi, dword ptr [rbp + 0x50] ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00000000000ad319 : ror byte ptr [rcx + rcx*4 - 7], 0x4c ; mov edx, esp ; lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000f16c1 : ror byte ptr [rcx - 0x77], 0x30 ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000131c62 : ror byte ptr [rdi], 0x95 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000013d455 : ror byte ptr [rdi], 0x95 ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000013626c : ror byte ptr [rdi], 0x95 ; ror byte ptr [rax - 0x7d], 0xc4 ; xor byte ptr [rbx + 0xf], bl ; mov dh, 0xc0 ; pop rbp ; pop r12 ; ret
0x000000000011071f : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000104aca : ror byte ptr [rdx], cl ; add byte ptr [rax], al ; mov rbp, rdi ; xor edx, edx ; xor esi, esi ; call rbx
0x000000000000def0 : ror dh, 0x10 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rcx]
0x000000000013adda : ror dword ptr [rax + 0x3b], 1 ; sbb byte ptr [rax + rdx + 0x48], dh ; add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001106d9 : ror dword ptr [rax + rdi*8], cl ; dec dword ptr [rax + 1] ; imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000114eaa : ror dword ptr [rax - 0x75], cl ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rbx + 0x48], 0x8b ; jp 0x114f17 ; mov rsi, rdx ; call rax
0x00000000000ec0b3 : ror dword ptr [rbp + 0x2d], 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000117088 : ror dword ptr [rcx - 0x75], 1 ; adc dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp - 0x11], cl ; ret
0x00000000000da732 : ror dword ptr [rdx], cl ; add byte ptr [rax + 0xf], al ; mov dh, 0xed ; movsxd rax, dword ptr [rsi + rbp*4] ; add rax, rsi ; jmp rax
0x0000000000194061 : sahf ; cld ; push qword ptr [rbp + rbx*4 - 0x62bb0004] ; cld ; call rsp
0x00000000001869bd : sahf ; lcall ptr [rsi + rbp*4 - 0xd] ; inc dword ptr [rdx] ; sahf ; jmp rdx
0x0000000000139c79 : sal bh, 0xd8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000010d761 : sal bh, 0xd8 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012c1ed : sal bh, 0xd8 ; pop rbx ; or eax, 1 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000110722 : sal bh, 0xd8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000144b48 : sal bl, 0x48 ; movsd dword ptr [rdi], dword ptr [rsi] ; mov qword ptr [rbp], rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001462b5 : sal byte ptr [rax + rbx - 0x80], 0x7c ; and al, 0xf ; add byte ptr [rbp + 0x29], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x0000000000132bbd : sal byte ptr [rbp + 0x10], 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000012fd55 : sal byte ptr [rbp + 0x10], 0x48 ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000c7cd5 : sal byte ptr [rbp + 0x10], 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000132c3c : sal byte ptr [rbp + 0x11], 0x48 ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000f7134 : sal byte ptr [rbp + 0x11], 0xb8 ; or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012f42b : sal byte ptr [rbp + 0x12], 0x48 ; add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000100f3a : sal byte ptr [rbp + 0x12], 0xeb ; and dl, byte ptr [rax + 0xf23fa80] ; xchg eax, ebp ; ret 0xc084
0x00000000001733da : sal byte ptr [rbp + 0x13], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013592a : sal byte ptr [rbp + 0x13], 0xc7 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000c8266 : sal byte ptr [rbp + 0x24], 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012aa07 : sal byte ptr [rbp + 0x26], cl ; mov eax, dword ptr [rip + 0x29b054] ; test eax, eax ; je 0x12aa25 ; ret
0x000000000014206c : sal byte ptr [rbp + 0x29], 0x83 ; ret
0x00000000000f0ff8 : sal byte ptr [rbp + 0x33], cl ; pop rbx ; mov eax, 5 ; pop rbp ; pop r12 ; ret
0x0000000000098bd2 : sal byte ptr [rbp + 0x3a], 0x41 ; movzx eax, byte ptr [rcx] ; test al, al ; jne 0x98c4e ; mov rax, rdi ; ret
0x0000000000097f52 : sal byte ptr [rbp + 0x4b], 0x66 ; pmovmskb eax, mm1 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000013eab7 : sal byte ptr [rbp + 0x4e], 0x39 ; ja 0x13eaec ; jbe 0x13eadf ; add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000130dcc : sal byte ptr [rbp + 0x51], 0x48 ; add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000090dc8 : sal byte ptr [rbp + 0x55], 0x48 ; xor eax, eax ; ret
0x000000000013e145 : sal byte ptr [rbp + 0x58], 0x48 ; add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000098bda : sal byte ptr [rbp + 0x63], 0x48 ; mov eax, edi ; ret
0x000000000013dd91 : sal byte ptr [rbp + 0x6c], 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000051650 : sal byte ptr [rbp + 0x73], 0xf6 ; ret 0x7440
0x000000000013dc2c : sal byte ptr [rbp + 0x73], cl ; add rsp, 0x20 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a0c19 : sal byte ptr [rbp + 0x74], 0x31 ; rol bl, 0x90 ; bsr eax, eax ; add rax, rdi ; ret
0x000000000012e0d2 : sal byte ptr [rbp + 0xb], 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000012f2c2 : sal byte ptr [rbp + 0xb], 0x48 ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013ed81 : sal byte ptr [rbp + 0xc], cl ; mov eax, 1 ; ret
0x000000000008fb40 : sal byte ptr [rbp + 0xd], 0x48 ; add esp, 8 ; ret
0x000000000006bc60 : sal byte ptr [rbp + 0xd], 0x48 ; mov eax, ebx ; pop rbx ; ret
0x0000000000076838 : sal byte ptr [rbp + 0xd], 0x8b ; cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x0000000000132a87 : sal byte ptr [rbp + 0xe], 0x48 ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000005164c : sal byte ptr [rbp + 4], 0x84 ; sal byte ptr [rbp + 0x73], 0xf6 ; ret 0x7440
0x0000000000051a3c : sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x0000000000116757 : sal byte ptr [rbp + 6], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000035607 : sal byte ptr [rbp + 6], 0xf3 ; ret
0x0000000000130854 : sal byte ptr [rbp + 9], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000116e34 : sal byte ptr [rbp + 9], 0xf3 ; ret
0x000000000007c374 : sal byte ptr [rbp + 9], cl ; ret
0x00000000000204ac : sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x00000000001304f1 : sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x000000000013ab89 : sal byte ptr [rbp + rax*4 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x0000000000114eb0 : sal byte ptr [rbp + rbx + 0x48], 0x8b ; jp 0x114f11 ; mov rsi, rdx ; call rax
0x000000000014d4c0 : sal byte ptr [rbp + rbx*8 + 0x48], cl ; movsxd rax, ecx ; add rax, rdi ; ret
0x000000000013afc0 : sal byte ptr [rbp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x00000000001463f0 : sal byte ptr [rbp + rcx - 0x80], 0x7c ; and al, 0x1f ; add byte ptr [rbp + 0x16], dh ; add rsp, 0x38 ; ret
0x00000000000abfd8 : sal byte ptr [rbp + rdx - 0x78], cl ; rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x0000000000116d41 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x000000000007ee65 : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x00000000000a05d5 : sal byte ptr [rbp - 0x10], cl ; ret
0x00000000000aaece : sal byte ptr [rbp - 0x11], 0xf3 ; ret
0x00000000000484ee : sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x000000000011708e : sal byte ptr [rbp - 0x11], cl ; ret
0x000000000008b8e0 : sal byte ptr [rbp - 0x13], 0xf3 ; ret
0x00000000000aa6c0 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000073070 : sal byte ptr [rbp - 0x13], cl ; ret
0x000000000012d7c9 : sal byte ptr [rbp - 0x14], 0x48 ; mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000a050a : sal byte ptr [rbp - 0x15], cl ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00000000000f0ff4 : sal byte ptr [rbp - 0x17], cl ; test dl, dl ; jne 0xf103e ; pop rbx ; mov eax, 5 ; pop rbp ; pop r12 ; ret
0x00000000000d263b : sal byte ptr [rbp - 0x18], cl ; nop ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013b7f6 : sal byte ptr [rbp - 0x19], 0x5b ; ret
0x00000000000d273d : sal byte ptr [rbp - 0x19], cl ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a135b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x00000000000a0588 : sal byte ptr [rbp - 0x23], cl ; pop rbx ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00000000000ce180 : sal byte ptr [rbp - 0x24], cl ; mov dword ptr fs:[0x2d0], eax ; ret
0x00000000000ac7f3 : sal byte ptr [rbp - 0x26], 0x48 ; mov eax, edi ; ret
0x00000000000a0673 : sal byte ptr [rbp - 0x26], 0xf3 ; ret
0x0000000000033efb : sal byte ptr [rbp - 0x27], cl ; ret
0x00000000000dfc58 : sal byte ptr [rbp - 0x2b], 0x89 ; sub al, 0x89 ; xor byte ptr [r9], sil ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000d0884 : sal byte ptr [rbp - 0x2b], 0xf6 ; ret 0xf05
0x00000000000ff6b1 : sal byte ptr [rbp - 0x2c], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000076a01 : sal byte ptr [rbp - 0x2d], 0x48 ; add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ff882 : sal byte ptr [rbp - 0x2d], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000125eab : sal byte ptr [rbp - 0x2e], 1 ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x00000000000ac6e2 : sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x00000000000db19d : sal byte ptr [rbp - 0x40], cl ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012f37f : sal byte ptr [rbp - 0x42], 0x48 ; add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001171de : sal byte ptr [rbp - 0x69], 0x48 ; mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x000000000008b98a : sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000adb6b : sal byte ptr [rbp - 0xe], cl ; ret
0x00000000000b0a25 : sal byte ptr [rbx + rbx + 0x49], 0x83 ; in eax, dx ; add al, 0x41 ; mov edi, dword ptr [rbp] ; mov rsi, r12 ; call 0x10ccc0
0x000000000005c374 : sal byte ptr [rcx + rbp + 0x48], 0x8b ; adc byte ptr [r8 - 0x77], cl ; ret 0x348
0x00000000000fe424 : sal byte ptr [rdi + rcx*8 + 0x5b], cl ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x00000000000abcd3 : sal byte ptr [rdx + rbp - 0x80], cl ; loop 0xabcf8 ; je 0xabd00 ; mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0xabd30 ; ret
0x0000000000125d73 : sal byte ptr [rdx + rbp*2 + 0x48], 0x39 ; ret 0x5576
0x00000000000dfcac : sal byte ptr [rdx - 1], 0xff ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000070ba9 : sal byte ptr [rsi + 0x5c], 0x48 ; mov eax, dword ptr [rbp + 0x48] ; add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000000f2086 : sal byte ptr [rsi + rbp + 0x48], 0x83 ; call 0xffffffffc298689a
0x0000000000051646 : sal dh, 0xc2 ; and byte ptr [rcx - 0x77], al ; sal byte ptr [rbp + 4], 0x84 ; sal byte ptr [rbp + 0x73], 0xf6 ; ret 0x7440
0x000000000010645a : sal dh, 0xff ; add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000016db10 : sal dword ptr [rbp + 3], 0x31 ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jl 0x16db2f ; neg eax ; ret
0x00000000001112a1 : sal dword ptr [rbp - 0x34], 1 ; cmp r8, rsi ; jae 0x1112d4 ; cmp byte ptr [r8], r10b ; je 0x1112db ; mov rdx, r8 ; jmp 0x1112cb
0x0000000000104ff7 : sal dword ptr [rcx], cl ; sar byte ptr [rsi + 1], cl ; mov rdi, rbp ; call rbx
0x0000000000085a2b : sal dword ptr [rdx - 0x26], cl ; mov byte ptr [rsi + rbx], r9b ; add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000001a6ff5 : salc ; add byte ptr [rax], al ; mov byte ptr [rbp - 0xf], al ; call qword ptr [rsi]
0x000000000012fd51 : salc ; add byte ptr [rax], al ; test eax, eax ; jne 0x12fd77 ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000172381 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ba2e9 : salc ; add rsp, 8 ; sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000226e9 : salc ; mov qword ptr [rbp], r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ba279 : salc ; sub ebx, eax ; mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000130f0e : salc ; sub esi, eax ; mov eax, esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013ad1e : sar ah, 1 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013dd6d : sar bh, 0xd1 ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001307f1 : sar bh, 0xe1 ; nop dword ptr [rax] ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001358c0 : sar bh, 0xff ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000cd23b : sar byte ptr [rax + 0x12], 0x64 ; mov dword ptr [rbx], ebp ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000079f07 : sar byte ptr [rax + 0x36], 0x48 ; mov dword ptr [rbx + 0x90], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000143892 : sar byte ptr [rax + 0xb], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000fdf38 : sar byte ptr [rax + 0xd], cl ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013a62e : sar byte ptr [rax + 0xf], 0x48 ; add esp, 0x18 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000fe53a : sar byte ptr [rax - 0x39], 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000129eab : sar byte ptr [rdi - 0x52], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ce353 : sar byte ptr [rdi - 0xe], 0x48 ; lea esp, dword ptr [rbp - 0x18] ; xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000f7013 : sar byte ptr [rdx + 9], 0x75 ; or eax, 0x8c48348 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000013e867 : sar byte ptr [rdx - 1], 0x48 ; mov esi, ebx ; mov rdi, rbp ; call rcx
0x000000000013e991 : sar byte ptr [rdx - 1], 0x4c ; mov esi, esi ; mov rdi, rbp ; call r12
0x0000000000104ff9 : sar byte ptr [rsi + 1], cl ; mov rdi, rbp ; call rbx
0x00000000000cf01b : sar dword ptr [rbp - 0x7cb70003], -0x3c ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000001091a3 : sar dword ptr [rbx + rbp], 1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000036209 : sar eax, 0x1f ; add rsp, 0xa0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cba69 : sar eax, 0x1f ; lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000074c71 : sar ebx, 2 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000127aaa : sar edx, 4 ; add rdx, 1 ; syscall ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000074c70 : sar rbx, 2 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000127aa9 : sar rdx, 4 ; add rdx, 1 ; syscall ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000013ad1d : sar spl, 1 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007921a : sbb al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000795da : sbb al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f175e : sbb al, 0x24 ; add qword ptr [r8], 1 ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000017209d : sbb al, 0x24 ; mov rdx, qword ptr [rax + rbp*8] ; test rdx, rdx ; je 0x1720b5 ; call rdx
0x000000000003763c : sbb al, 0x30 ; nop ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000135a82 : sbb al, 0x48 ; add esp, 0x78 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000079d90 : sbb al, 0x48 ; add esp, 8 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012f0d4 : sbb al, 0x5a ; pop rcx ; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000126600 : sbb al, byte ptr [rbp - 0x78] ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4c02
0x000000000006b8b1 : sbb al, ch ; imul ebx, dword ptr [rbp], 0xc4814800 ; fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000010fbfd : sbb bl, byte ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000079653 : sbb byte ptr [r15 + 0x11], r14b ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000795a6 : sbb byte ptr [r15 + 0xe], r14b ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013eaf0 : sbb byte ptr [r15 + r10 + 0x44], sil ; add dword ptr [rbx + 0x28], esp ; mov qword ptr [rbx + 0x20], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000110801 : sbb byte ptr [r8 - 0x77], cl ; imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000204a8 : sbb byte ptr [r8 - 0x7b], r9b ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x0000000000073469 : sbb byte ptr [r9 + rcx*4 - 0x1a], r8b ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000170db7 : sbb byte ptr [r9 - 0x75], r9b ; push rbp ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000007fc87 : sbb byte ptr [rax + 0x5bd88948], dl ; pop rbp ; pop r12 ; ret
0x00000000000d6dfb : sbb byte ptr [rax + 0xc], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bcc0d : sbb byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000769f3 : sbb byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000769da : sbb byte ptr [rax + 2], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f1148 : sbb byte ptr [rax + 5], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013addd : sbb byte ptr [rax + rdx + 0x48], dh ; add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000131b8c : sbb byte ptr [rax - 0x75], cl ; and al, 8 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000050a99 : sbb byte ptr [rax - 0x77], cl ; add al, 0xd1 ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000110802 : sbb byte ptr [rax - 0x77], cl ; imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000204a9 : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x00000000000731e0 : sbb byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000079ea0 : sbb byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00000000001196ea : sbb byte ptr [rax - 9], cl ; cmc ; mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000334ea : sbb byte ptr [rax], cl ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bb417 : sbb byte ptr [rbp + 0x31], al ; ror byte ptr [rcx + rcx*4 - 0x17], 0x4c ; lea ecx, dword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x000000000013a731 : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x3a ; call qword ptr [rax]
0x0000000000146ba4 : sbb byte ptr [rbp + rcx*4 + 0x78], cl ; add eax, ebp ; ret 0xf81b
0x000000000013a4b4 : sbb byte ptr [rbp - 0x77], cl ; clc ; mov rcx, r14 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000213e9 : sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x00000000000de652 : sbb byte ptr [rbp - 0x77], cl ; ret
0x00000000000b48bc : sbb byte ptr [rbp - 0x7b], al ; dec dword ptr [rax - 0x77] ; fisttp qword ptr [rax - 0x77] ; ret
0x00000000001a8f28 : sbb byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001b7a18 : sbb byte ptr [rbp - 8], al ; call qword ptr [rdx]
0x00000000000d6dac : sbb byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007f86f : sbb byte ptr [rbx + 0x48], bl ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007dbac : sbb byte ptr [rbx + 0x48], bl ; sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006d55b : sbb byte ptr [rbx + 0x4c], bl ; mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000097d3e : sbb byte ptr [rcx + rax - 0x18], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ad460 : sbb byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x000000000013aed0 : sbb byte ptr [rcx + rcx*4 - 0x18], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007346a : sbb byte ptr [rcx + rcx*4 - 0x1a], al ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000006d4cb : sbb byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000079285 : sbb byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ad720 : sbb byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbp ; call rbx
0x000000000007e9fb : sbb byte ptr [rcx + rcx*4 - 8], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003753b : sbb byte ptr [rcx + rcx*4 - 8], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000170db8 : sbb byte ptr [rcx - 0x75], cl ; push rbp ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000fcf02 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dbf8e : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000079654 : sbb byte ptr [rdi + 0x11], dh ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000795a7 : sbb byte ptr [rdi + 0xe], dh ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013eaf1 : sbb byte ptr [rdi + rdx + 0x44], dh ; add dword ptr [rbx + 0x28], esp ; mov qword ptr [rbx + 0x20], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013d45c : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x0000000000143493 : sbb byte ptr [rip - 0x27770000], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001a02d8 : sbb byte ptr [rsi + 0x200e4103], al ; add dword ptr [rax + rbp*2], 0xa ; ret
0x00000000001adaa0 : sbb byte ptr [rsi + 0x200e4403], al ; add dword ptr [rsp + rbp*2], 0xa ; ret
0x00000000000ee6a0 : sbb ch, cl ; or eax, 0xe8fffff9 ; push rbp ; ret
0x0000000000106115 : sbb cl, byte ptr [rax - 0x73] ; push rax ; add dword ptr [rax - 0x77], ecx ; push rdi ; sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014ad7d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a55d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000149d3d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x0000000000029bab : sbb dword ptr [rbp + 0x1480039], ecx ; ret
0x00000000000ce945 : sbb dword ptr [rbp + rsi*2 - 0x7e], edx ; mov eax, 0x7d00 ; ret
0x000000000019443d : sbb dword ptr [rcx], eax ; add byte ptr [rbp + rdi*4 - 0x18], dh ; call rsp
0x0000000000180db2 : sbb dword ptr [rcx], ebp ; jb 0x180ded ; pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000198ae5 : sbb dword ptr [rdx], eax ; add byte ptr [rdx + rbp*8 + 0x197cfff9], al ; add al, byte ptr [rax] ; in al, -0x14 ; stc ; jmp rsp
0x000000000007375f : sbb eax, 0x48000001 ; add esp, 8 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000013ba5f : sbb eax, 0x48ffff5f ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000076244 : sbb eax, 0x8c48348 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000116fc1 : sbb eax, eax ; add rsp, 0x10 ; pop rbx ; and eax, 0xc ; pop rbp ; pop r12 ; ret
0x000000000001fcb0 : sbb eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fcaf : sbb eax, r11d ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b0a27 : sbb ecx, dword ptr [rcx - 0x7d] ; in eax, dx ; add al, 0x41 ; mov edi, dword ptr [rbp] ; mov rsi, r12 ; call 0x10ccbe
0x00000000001869b9 : scasb al, byte ptr [rdi] ; inc dword ptr [rdx] ; sahf ; lcall ptr [rsi + rbp*4 - 0xd] ; inc dword ptr [rdx] ; sahf ; jmp rdx
0x0000000000129ead : scasb al, byte ptr [rdi] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009c566 : scasd eax, dword ptr [rdi] ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret 0x8d44
0x0000000000079dac : scasd eax, dword ptr [rdi] ; add rsp, 8 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012fd8d : scasd eax, dword ptr [rdi] ; fild dword ptr [rax] ; add byte ptr [rbp + 0x310b75c0], al ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000007af7a : scasd eax, dword ptr [rdi] ; nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x48], bl ; sub ebp, eax ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000009d8e1 : scasd eax, dword ptr [rdi] ; sub dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x4a], al ; pop rsi ; add eax, 0x43b60f44 ; add dword ptr [rbp + 0x38], eax ; ret
0x000000000013d1b6 : sete al ; add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013d407 : sete al ; cmp edx, 1 ; je 0x13d476 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013d4c7 : sete al ; cmp edx, 1 ; je 0x13d536 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013d587 : sete al ; cmp edx, 1 ; je 0x13d5f6 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013d647 : sete al ; cmp edx, 1 ; je 0x13d6b6 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000130daa : sete al ; movzx eax, al ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013e128 : sete al ; movzx eax, al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013d456 : setne al ; add rsp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013626d : setne al ; add rsp, 0x30 ; pop rbx ; movzx eax, al ; pop rbp ; pop r12 ; ret
0x0000000000131c63 : setne al ; add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000001308c9 : setne al ; movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011071d : setne al ; movzx eax, al ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000139c77 : setne al ; neg eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000010d75f : setne al ; neg eax ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000045f0e : setne dl ; neg edx ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000125106 : shl byte ptr [rsi + 0x45], cl ; mov dword ptr [rsi + 0x38], ecx ; mov qword ptr [rbp - 0x78], r10 ; call 0x913bc
0x0000000000125199 : shl byte ptr [rsi + 0x45], cl ; mov dword ptr [rsi + 0x80], eax ; mov qword ptr [rbp - 0x78], r10 ; call 0x913bf
0x000000000012f1ca : shl byte ptr [rsi - 0x77], 0x43 ; add cl, byte ptr [rax - 0x75] ; and al, 8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000132ce2 : shr bl, 0xab ; nop dword ptr [rax] ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000bd73f : shr byte ptr [rbp + 1], 0 ; add byte ptr [rcx + 0x76bc2], al ; add byte ptr [rdi], cl ; ret 0xf8c1
0x00000000000c517e : shr byte ptr [rsi], 0x4c ; mov edx, esi ; mov rsi, qword ptr [rdi + rax*8] ; mov rdi, rbp ; call 0x913be
0x00000000000fa1a3 : shr dword ptr [rsp + rbp], 1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107234 : shr eax, 1 ; cmp rdx, 1 ; jne 0x10723e ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000001072a4 : shr eax, 1 ; cmp rdx, 1 ; jne 0x1072ae ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000001727c0 : shr edx, 1 ; dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rax - 0x77] ; fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x0000000000107233 : shr rax, 1 ; cmp rdx, 1 ; jne 0x10723f ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000001072a3 : shr rax, 1 ; cmp rdx, 1 ; jne 0x1072af ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000000aaa54 : sldt word ptr [rax] ; lea rax, qword ptr [rbx + 1] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008b52c : stc ; add rsp, 0x10 ; pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00000000000fa602 : stc ; dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00000000001986aa : stc ; inc dword ptr [rbp + rsi*8 + 0x45740001] ; stc ; call rsp
0x000000000012a1c2 : stc ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ad31c : stc ; mov rdx, r12 ; lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x000000000013ab83 : stc ; out dx, al ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + rax*4 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x0000000000048fdd : stc ; push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x000000000019856a : stc ; push qword ptr [rsi + rbp*8 + 0x3a40001] ; stc ; jmp rsp
0x000000000013a590 : std ; inc dword ptr [rax] ; add byte ptr [rax], al ; mov byte ptr [rax], 0 ; jle 0x13a5b8 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001727ee : std ; lcall ptr [rbp + 0x48] ; mov dword ptr [rip + 0x25291c], 0 ; ret
0x000000000007625e : std ; or dh, byte ptr [rax + rdi*4 + 0x48] ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000007c878 : std ; or dh, byte ptr [rsp + rdi*2 + 0x40] ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010bb90 : sti ; dec dword ptr [rax - 0x73] ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000145a0d : sti ; inc dword ptr [rbp - 0x6277f040] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; sub byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x00000000000e0ae4 : sti ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000000d7e6b : sti ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000001995aa : sti ; lcall ptr [rsi + rax + 2] ; add byte ptr [rbp + rsi - 5], dh ; jmp rsp
0x00000000000d8090 : sti ; or dh, byte ptr [rsp + rbx*2 + 0x48] ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012a17a : sti ; or ebp, 2 ; mov dword ptr [r12 + 0x40], ebp ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003b017 : sti ; push qword ptr [rbp - 0x13] ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003c639 : sti ; xor dword ptr [rbp - 0x5f], 0xc6f7db31 ; add byte ptr [rax], al ; add byte ptr [rax], 0xf ; xchg eax, ebp ; ret
0x00000000001268dc : stosb byte ptr [rdi], al ; idiv bh ; add rsp, 8 ; lea eax, dword ptr [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x00000000000ae1fb : stosd dword ptr [rdi], eax ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x63] ; ret
0x0000000000132ce4 : stosd dword ptr [rdi], eax ; nop dword ptr [rax] ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000100c66 : sub al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001a9090 : sub al, 0 ; add byte ptr [rax], al ; cmp al, 0xf7 ; add byte ptr [rax], al ; pop rax ; pop rbp ; jmp rcx
0x0000000000100f8f : sub al, 0 ; add rsp, 0x98 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013a5b9 : sub al, 0 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010347f : sub al, 0 ; pop rbp ; pop r12 ; ret
0x0000000000100b44 : sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000100e56 : sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000102efc : sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f17a5 : sub al, 0x24 ; add qword ptr [r8], 1 ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011b0f2 : sub al, 0x24 ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010e413 : sub al, 0x24 ; je 0x10e434 ; xor edx, edx ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000bd015 : sub al, 0x24 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000983f4 : sub al, 0x24 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fa600 : sub al, 0x34 ; stc ; dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x000000000012cf87 : sub al, 0x48 ; add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000193c68 : sub al, 0x6d ; cld ; lcall ptr [rsp + rbp*2 + 0x6c2cfffc] ; cld ; call rdx
0x00000000001173bf : sub al, byte ptr [rax] ; add rsp, 0x1000 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011777c : sub al, byte ptr [rax] ; pop rbp ; ret
0x00000000000db2b5 : sub bl, ch ; wait ; pop rbx ; mov eax, 0xc ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000abcb6 : sub byte ptr [r11], r15b ; sub byte ptr [rbp + 0x63], r14b ; ret
0x000000000007a042 : sub byte ptr [r8 - 0x75], r9b ; push rdi ; and byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x000000000007f7f7 : sub byte ptr [rax + 0x2b], cl ; imul esp, dword ptr [rax], 0x5b ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000dbdcc : sub byte ptr [rax + 0xc], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cb113 : sub byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d6bf5 : sub byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f16d3 : sub byte ptr [rax + 5], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007a043 : sub byte ptr [rax - 0x75], cl ; push rdi ; and byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x00000000000cb019 : sub byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000140967 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000097818 : sub byte ptr [rax], cl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000abcba : sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000abcb9 : sub byte ptr [rbp + 0x63], r14b ; ret
0x0000000000193348 : sub byte ptr [rbp - 0x512f0005], 0xfb ; jmp qword ptr [rax]
0x00000000000dbd40 : sub byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000abcb7 : sub byte ptr [rbx], bh ; sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000000e7366 : sub byte ptr [rcx + rcx*4 - 0x10], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000473af : sub byte ptr [rcx + rcx*4 - 0x18], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f0e51 : sub byte ptr [rcx + rcx*4 - 0x18], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000078405 : sub byte ptr [rcx + rcx*4 - 0x18], cl ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008b216 : sub byte ptr [rcx + rcx*4 - 0x18], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008ad44 : sub byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007f484 : sub byte ptr [rcx + rcx*4 - 8], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e7623 : sub byte ptr [rcx + rcx*4 - 8], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000355e6 : sub byte ptr [rcx - 0x3b76b310], cl ; mov rbp, r9 ; nop ; jmp rdx
0x00000000000be5f4 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000072148 : sub byte ptr [rdx - 0x73], cl ; add al, 0x23 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000781c6 : sub byte ptr [rdx], al ; add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001064a7 : sub dh, al ; add byte ptr [rdx], cl ; add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000010611d : sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000194b19 : sub dl, ch ; dec esp ; jle 0x194b29 ; add byte ptr [rax + rbp - 0x16], dl ; jmp rsp
0x0000000000073466 : sub dword ptr [rax - 0x75], ecx ; sbb byte ptr [r9 + rcx*4 - 0x1a], r8b ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000009d8e2 : sub dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x4a], al ; pop rsi ; add eax, 0x43b60f44 ; add dword ptr [rbp + 0x38], eax ; ret
0x000000000012a1bd : sub dword ptr [rax], eax ; and dword ptr [rax + 0x40], 0xfffffff9 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012387d : sub dword ptr [rax], eax ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000108c3c : sub dword ptr [rbx], 0x138b4800 ; mov qword ptr [rax], rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ce1f3 : sub dword ptr [rdi + rbp], 0x64d8f700 ; mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000180db3 : sub dword ptr [rdx + 0x2b], esi ; pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000013ad6e : sub dword ptr [rsi - 0x77], esp ; jno 0x13ad86 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013e87a : sub eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013084f : sub eax, 0x85fffff6 ; sal byte ptr [rbp + 9], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000098dca : sub eax, 1 ; jne 0x98dc7 ; pop rbx ; pop rbp ; ret
0x000000000010aed8 : sub eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010b013 : sub eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000010b006 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000102ebc : sub eax, dword ptr [rax] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010a193 : sub eax, dword ptr [rax] ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010af92 : sub eax, dword ptr [rax] ; je 0x10af9d ; pop rbp ; ret
0x0000000000101406 : sub eax, dword ptr [rax] ; jne 0x101385 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000108c3d : sub eax, dword ptr [rax] ; mov rdx, qword ptr [rbx] ; mov qword ptr [rax], rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000103449 : sub eax, dword ptr [rax] ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000130f25 : sub eax, dword ptr [rbx + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000130f0a : sub eax, dword ptr [rbx + 0x58] ; mov esi, edx ; sub esi, eax ; mov eax, esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002e5ff : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b1718 : sub eax, dword ptr [rbx] ; add byte ptr [rax], al ; test r13d, r13d ; mov r10, rbp ; setne dl ; jmp 0xb1743
0x000000000011291a : sub eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007dbaf : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000076737 : sub eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000106d37 : sub eax, esi ; mov qword ptr [rbp], r14 ; mov qword ptr [rsp + 0x18], rax ; mov rdx, rax ; jmp 0x106d9c
0x0000000000076b98 : sub eax, esi ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000112919 : sub eax, r8d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007f86d : sub ebp, dword ptr [rbx + 0x18] ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007f7f9 : sub ebp, dword ptr [rbx + 0x20] ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000991ca : sub ebp, dword ptr [rsi] ; pop rbx ; mov qword ptr [r13], rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007af81 : sub ebp, eax ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000180db5 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000000ba27a : sub ebx, eax ; mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ba350 : sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ba2ee : sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ba21c : sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000098dc4 : sub ecx, dword ptr [rax - 0x7d] ; rol dword ptr [rcx], 0x48 ; sub eax, 1 ; jne 0x98dcd ; pop rbx ; pop rbp ; ret
0x000000000013d7ed : sub edi, dword ptr [rax + 1] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000403bf : sub edx, eax ; lea rax, qword ptr [rdx + rdx*4] ; mov rdx, rbp ; xor ebp, ebp ; add rax, rax ; sub rdx, rax ; jmp 0x40416
0x000000000004a49d : sub edx, eax ; mov qword ptr [rdi + 8], r10 ; mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000080bfc : sub esi, dword ptr [rax + rax] ; jae 0x80bb9 ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000130f0f : sub esi, eax ; mov eax, esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012b13d : sub esp, -0x80 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f84a0 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000173381 : sub esp, 8 ; cmp rbx, rbp ; jae 0x1733aa ; nop dword ptr [rax] ; call qword ptr [rbx]
0x000000000004a49c : sub r10, rax ; mov qword ptr [rdi + 8], r10 ; mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000098dc9 : sub rax, 1 ; jne 0x98dc8 ; pop rbx ; pop rbp ; ret
0x0000000000130f24 : sub rax, qword ptr [rbx + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000130f09 : sub rax, qword ptr [rbx + 0x58] ; mov esi, edx ; sub esi, eax ; mov eax, esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000106d36 : sub rax, r14 ; mov qword ptr [rbp], r14 ; mov qword ptr [rsp + 0x18], rax ; mov rdx, rax ; jmp 0x106d9d
0x0000000000076b97 : sub rax, r14 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000007dbae : sub rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000076736 : sub rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000991c9 : sub rbp, qword ptr [r14] ; pop rbx ; mov qword ptr [r13], rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007f86c : sub rbp, qword ptr [rbx + 0x18] ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007f7f8 : sub rbp, qword ptr [rbx + 0x20] ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007af80 : sub rbp, rax ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000019ae38 : sub rbp, rcx ; call qword ptr [rdi]
0x000000000012b13c : sub rsp, -0x80 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f849f : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000173380 : sub rsp, 8 ; cmp rbx, rbp ; jae 0x1733ab ; nop dword ptr [rax] ; call qword ptr [rbx]
0x0000000000127ab1 : syscall ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000011753d : syscall ; cmp rax, -0x1000 ; ja 0x117524 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002bf19 : syscall ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000129da9 : syscall ; mov dword ptr [rbx + 0x210], 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000124333 : syscall ; mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c86ee : syscall ; xor edx, edx ; add rsp, 0x98 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000006bd94 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000139431 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000074136 : test al, 0x28 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000100e54 : test al, 0x32 ; sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002efd3 : test al, 0x48 ; lea esp, dword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000002bcf : test al, 0xed ; mov byte ptr [rbp + 7], ah ; or ah, byte ptr [rbp + 0xc] ; scasd eax, dword ptr [rdi] ; xbegin 0xfffffffff8c6efe1 ; ret
0x0000000000076241 : test al, al ; je 0x76271 ; add rsp, 8 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00000000000f7133 : test al, al ; jne 0xf7155 ; mov eax, 9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009c64c : test al, cl ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; ret 0x8d44
0x000000000008a75c : test byte ptr [rax + 0x10033], dl ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000d6bef : test byte ptr [rax + rax + 0x28890000], dl ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fa058 : test byte ptr [rax + rax], bh ; add byte ptr [rbp - 0x3f6bf040], al ; add rsp, 0x48 ; movzx eax, al ; ret
0x0000000000047122 : test byte ptr [rax + rbp*4], ah ; add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 - 0x64], cl ; and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x8b4c
0x000000000002986c : test byte ptr [rax + rbx*4], ah ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x000000000008d80a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000075eda : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000011765a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x000000000013131a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000115992 : test byte ptr [rbp + 0x390b74d2], al ; ret 0xf7e
0x0000000000166266 : test byte ptr [rbp + 0x48fffffb], ah ; mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000002820d : test byte ptr [rbp + rdi*8 - 0x7cb70001], dh ; jl 0x28248 ; add byte ptr [rsi + rbx*2 - 0xa], sil ; ret
0x0000000000198420 : test byte ptr [rbp - 0x1b6b0008], dh ; add dword ptr [rax], eax ; mov ah, 0xb6 ; clc ; jmp rsp
0x0000000000035526 : test byte ptr [rbp - 0x6bf0bf40], 0xc6 ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x00000000000ed87f : test byte ptr [rbp - 0x76fffff8], cl ; ret 0x894c
0x0000000000080076 : test byte ptr [rbp - 0xa000000], ch ; ret
0x0000000000080c1f : test byte ptr [rbp - 0xa000000], dl ; ret
0x000000000005fa5c : test byte ptr [rbp], ch ; add byte ptr [rax - 0x77], cl ; ret
0x000000000019eedc : test byte ptr [rbp], dl ; add al, dh ; in al, dx ; jmp qword ptr [rax]
0x00000000000aed28 : test byte ptr [rbx + 0x45000003], ah ; test ebp, ebp ; mov r10, rbp ; setne dl ; jmp 0xaed54
0x000000000008b190 : test byte ptr [rbx + 0x4c000000], dl ; mov edi, ebp ; mov rdx, rbp ; mov rsi, r12 ; call rax
0x000000000007e11e : test byte ptr [rbx], 0x80 ; jne 0x7e13b ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b1717 : test byte ptr [rbx], ch ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x7b], al ; in eax, dx ; mov r10, rbp ; setne dl ; jmp 0xb1744
0x000000000009c5d9 : test byte ptr [rbx], dh ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret 0x5a8d
0x000000000009c6c0 : test byte ptr [rcx + rdx], cl ; add byte ptr [rbp - 0x77], cl ; ret 0x5a8d
0x000000000005fa54 : test byte ptr [rcx], bl ; idiv bh ; inc dword ptr [rbp + 0x6c840fc9] ; and eax, 0x89480000 ; ret
0x000000000009c671 : test byte ptr [rdi], 0x84 ; cdq ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; ret 0x5a8d
0x0000000000084b88 : test byte ptr [rdi], 0x85 ; movsd dword ptr [rdi], dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77cfdb9], cl ; add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x000000000007375e : test byte ptr [rip + 0x48000001], bl ; add esp, 8 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000009c6e6 : test byte ptr [rsi], ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; ret 0x8d44
0x000000000012e710 : test ch, ch ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x75], 0x74 ; and al, 0x10 ; mov rdi, rbp ; call r14
0x000000000009c53f : test ch, cl ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret 0x5a8d
0x00000000000d96ba : test cl, al ; add al, 0 ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000009c626 : test dh, ah ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; ret 0x5a8d
0x00000000000f2e09 : test dl, ah ; add byte ptr [rax], al ; add byte ptr [rbp - 0x78], al ; je 0xf2e3b ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e0a19 : test dl, dl ; add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0x53], cl ; or byte ptr [rbp - 0x75], cl ; or byte ptr [rax - 0x77], r9b ; ret 0x1bb
0x00000000000d273c : test dl, dl ; jne 0xd2732 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f0ff7 : test dl, dl ; jne 0xf103b ; pop rbx ; mov eax, 5 ; pop rbp ; pop r12 ; ret
0x00000000000d9802 : test dword ptr [rax - 0x74000002], esp ; cmp byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000000869e3 : test dword ptr [rbp + 0x48000000], ebp ; add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000f456a : test dword ptr [rbp - 0x1600000a], ebp ; ret 0xfff6
0x0000000000105706 : test dword ptr [rbp - 0x41000006], eax ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000105826 : test dword ptr [rbp - 0x41000007], eax ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000001255b5 : test dword ptr [rbp - 0x7afffffe], ecx ; sal byte ptr [rsp + rcx - 0xa], cl ; ret 0xc602
0x0000000000183330 : test dword ptr [rbp - 0x9aff276], esp ; mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x00000000000a0bde : test dword ptr [rbp], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000873dd : test dword ptr [rbx], edi ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x48], bl ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000005fbd7 : test dword ptr [rcx + 0x3100001f], edi ; rol byte ptr [rbp - 0x7b], cl ; in al, 0xf ; lahf ; ret 0x2941
0x000000000007cf4a : test dword ptr [rcx + 0x48000000], esp ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000005a103 : test dword ptr [rdi + rbp*8 - 1], ecx ; call qword ptr [rax]
0x0000000000051a32 : test dword ptr [rdi + rdi*8 - 1], esi ; dec dword ptr [rdi] ; mov dh, 0x53 ; or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x000000000009c64a : test dword ptr [rdi], 0x11c884 ; add byte ptr [rbp - 0x77], cl ; ret 0x8d44
0x0000000000088796 : test dword ptr [rdx + 1], edi ; add byte ptr [rax], al ; add rsp, 0x10 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000088a56 : test dword ptr [rdx + 1], edx ; add byte ptr [rax], al ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x0000000000088d12 : test dword ptr [rsi + 1], ebx ; add byte ptr [rax], al ; add rsp, 0x10 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001850e8 : test dword ptr [rsi + rbp*8], ecx ; call rbx
0x0000000000185148 : test dword ptr [rsi + rbp*8], ecx ; jmp rbx
0x00000000001850dc : test dword ptr [rsi + rbp*8], ecx ; push rbp ; or ebp, esi ; inc dword ptr [rbp - 0x7a0011f4] ; or al, 0xee ; call rbx
0x0000000000080c00 : test eax, 0x28c48348 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fdc8b : test eax, 0x90fffffe ; mov dword ptr fs:[r8], r12d ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000117771 : test eax, eax ; cmove rax, rdx ; mov qword ptr [rip + 0x2ad9a2], rax ; pop rbp ; ret
0x00000000001177ce : test eax, eax ; je 0x117814 ; lea rsi, qword ptr [rbp - 0x20] ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x000000000012d735 : test eax, eax ; je 0x12d72c ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012e917 : test eax, eax ; je 0x12e927 ; mov rdi, rbp ; call rax
0x00000000001309f5 : test eax, eax ; je 0x130af6 ; mov rdi, rbp ; call qword ptr [rbx]
0x0000000000132ad7 : test eax, eax ; je 0x132aff ; mov eax, 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000132b97 : test eax, eax ; je 0x132bbf ; add rsp, 8 ; mov eax, 1 ; pop rbx ; pop rbp ; ret
0x0000000000132c87 : test eax, eax ; je 0x132caf ; mov eax, 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001356b9 : test eax, eax ; je 0x1356cb ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000136b96 : test eax, eax ; je 0x136ba6 ; mov rdi, rbp ; call rax
0x0000000000136db6 : test eax, eax ; je 0x136dc6 ; mov rdi, rbp ; call rax
0x000000000013afbf : test eax, eax ; je 0x13afd8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013b879 : test eax, eax ; je 0x13b88b ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013bf92 : test eax, eax ; je 0x13bfa4 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000000204ab : test eax, eax ; je 0x204bb ; mov rdi, rbp ; call rax
0x00000000000708f9 : test eax, eax ; je 0x70917 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000793b6 : test eax, eax ; je 0x79428 ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008d830 : test eax, eax ; je 0x8d848 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000abd9d : test eax, eax ; je 0xabd93 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ac37b : test eax, eax ; je 0xac375 ; mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ce352 : test eax, eax ; jg 0xce358 ; lea rsp, qword ptr [rbp - 0x18] ; xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000001171dd : test eax, eax ; jne 0x117182 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000012e0d1 : test eax, eax ; jne 0x12e0ec ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012f2c1 : test eax, eax ; jne 0x12f2dc ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012f37e : test eax, eax ; jne 0x12f350 ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012f42a : test eax, eax ; jne 0x12f44c ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012fd54 : test eax, eax ; jne 0x12fd74 ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012fd91 : test eax, eax ; jne 0x12fdac ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012fe41 : test eax, eax ; jne 0x12fe5c ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012fe91 : test eax, eax ; jne 0x12feac ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012ff11 : test eax, eax ; jne 0x12ff2c ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000130853 : test eax, eax ; jne 0x13086a ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000130dcb : test eax, eax ; jne 0x130e2e ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000131c81 : test eax, eax ; jne 0x131c9c ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000132a86 : test eax, eax ; jne 0x132aa4 ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000132b21 : test eax, eax ; jne 0x132b3c ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000132bbc : test eax, eax ; jne 0x132bdc ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000132c3b : test eax, eax ; jne 0x132c5c ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000135929 : test eax, eax ; jne 0x13594e ; mov dword ptr [rbx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013bac9 : test eax, eax ; jne 0x13baee ; mov dword ptr [rbx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013dd90 : test eax, eax ; jne 0x13de10 ; xor eax, eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013e144 : test eax, eax ; jne 0x13e1ac ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013e143 : test eax, eax ; jne 0x13e1ad ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013e214 : test eax, eax ; jne 0x13e27c ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013e213 : test eax, eax ; jne 0x13e27d ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013e2e4 : test eax, eax ; jne 0x13e34c ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013e2e3 : test eax, eax ; jne 0x13e34d ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013e3a4 : test eax, eax ; jne 0x13e40c ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013e3a3 : test eax, eax ; jne 0x13e40d ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001733d9 : test eax, eax ; jne 0x1733fe ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002e5f8 : test eax, eax ; jne 0x2e612 ; mov eax, dword ptr [rbp + 8] ; sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000076a00 : test eax, eax ; jne 0x769e7 ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c7cd4 : test eax, eax ; jne 0xc7cf4 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c8265 : test eax, eax ; jne 0xc829c ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ff6b0 : test eax, eax ; jne 0xff692 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000ff881 : test eax, eax ; jne 0xff862 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000013a62d : test eax, eax ; js 0x13a64c ; add rsp, 0x18 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000143891 : test eax, eax ; js 0x1438aa ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000cd23a : test eax, eax ; js 0xcd25f ; mov dword ptr fs:[rbx], ebp ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000fe539 : test eax, eax ; js 0xfe50f ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013d454 : test eax, eax ; setne al ; add rsp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013626b : test eax, eax ; setne al ; add rsp, 0x30 ; pop rbx ; movzx eax, al ; pop rbp ; pop r12 ; ret
0x0000000000131c61 : test eax, eax ; setne al ; add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000001308c7 : test eax, eax ; setne al ; movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000045f0c : test eax, eax ; setne dl ; neg edx ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000125a3b : test eax, edi ; add byte ptr [rax], al ; add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x000000000002a0ba : test eax, edx ; add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; in al, 0xf ; test byte ptr [rip - 0x76000002], al ; ret
0x0000000000044f9c : test ebp, ebp ; je 0x44fb2 ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000004501c : test ebp, ebp ; je 0x45032 ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000450ca : test ebp, ebp ; je 0x450e0 ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000006bbe1 : test ebp, ebp ; je 0x6bc0d ; add rsp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000b650d : test ebp, ebp ; je 0xb6523 ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b65bb : test ebp, ebp ; je 0xb65d1 ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b665d : test ebp, ebp ; je 0xb6673 ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000013da0b : test ebp, ebp ; jne 0x13da6f ; add rsp, 8 ; mov eax, 1 ; pop rbx ; pop rbp ; ret
0x0000000000172243 : test ebp, ebp ; jne 0x172236 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000017237e : test ebp, ebp ; jne 0x172362 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007cc96 : test ebp, ebp ; jne 0x7cd6f ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007cf47 : test ebp, ebp ; jne 0x7cfff ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000008b93d : test ebp, ebp ; jne 0x8b928 ; test r12, r12 ; jne 0x8b972 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f0c59 : test ebp, ebp ; jne 0xf0c4b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010e40f : test ebp, ebp ; mov qword ptr [r12], rbp ; je 0x10e438 ; xor edx, edx ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000aed2e : test ebp, ebp ; mov r10, rbp ; setne dl ; jmp 0xaed4e
0x00000000000b171d : test ebp, ebp ; mov r10, rbp ; setne dl ; jmp 0xb173e
0x0000000000139c75 : test ebp, ebp ; setne al ; neg eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000104636 : test ebx, ebx ; jne 0x104622 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001196b6 : test ebx, ebx ; jne 0x1196d5 ; add rsp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000013d203 : test ebx, ebx ; jne 0x13d237 ; add rsp, 8 ; mov eax, 1 ; pop rbx ; pop rbp ; ret
0x00000000000226e6 : test ebx, ebx ; jne 0x226d0 ; mov qword ptr [rbp], r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003a89a : test ebx, ebx ; jne 0x3a86a ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079b6c : test ebx, ebx ; jne 0x79b8b ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ba218 : test ebx, ebx ; jne 0xba204 ; sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cbb8d : test ebx, ebx ; mov eax, 0 ; cmovle eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000124769 : test ebx, ebx ; mov rdi, rbx ; jne 0x124770 ; mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000172328 : test ebx, ebx ; mov rdi, rbx ; jne 0x172323 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000130528 : test ebx, esp ; add dword ptr [rax], eax ; add byte ptr [rbp + 0xf1374d2], al ; mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x00000000000f8036 : test edi, edi ; cmovne eax, edx ; cmp rbp, rsi ; ja 0xf7fdc ; pop rbx ; pop rbp ; ret
0x000000000012ae8a : test edi, edi ; jne 0x12ae82 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001304f0 : test edx, edx ; je 0x130500 ; mov rdi, rbp ; call rdx
0x00000000000fe423 : test edx, edx ; je 0xfe403 ; pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x00000000000d263a : test edx, edx ; jne 0xd2633 ; nop ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000db19c : test edx, edx ; jne 0xdb16c ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000fdf37 : test edx, edx ; js 0xfdf54 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000087685 : test esi, ebx ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x48], bl ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c9124 : test esp, esp ; je 0xc921f ; mov rbp, r13 ; mov rdi, rbx ; call r12
0x00000000000d0248 : test esp, esp ; je 0xd035f ; mov rdi, qword ptr [rbp - 0x308] ; call r12
0x000000000008b942 : test esp, esp ; jne 0x8b96d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f892c : test qword ptr [rax + rax], rbp ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000009c649 : test qword ptr [rdi], 0x11c884 ; add byte ptr [rbp - 0x77], cl ; ret 0x8d44
0x00000000000c9123 : test r12, r12 ; je 0xc9220 ; mov rbp, r13 ; mov rdi, rbx ; call r12
0x000000000008b941 : test r12, r12 ; jne 0x8b96e ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013da0a : test r13d, r13d ; jne 0x13da70 ; add rsp, 8 ; mov eax, 1 ; pop rbx ; pop rbp ; ret
0x00000000000aed2d : test r13d, r13d ; mov r10, rbp ; setne dl ; jmp 0xaed4f
0x00000000000b171c : test r13d, r13d ; mov r10, rbp ; setne dl ; jmp 0xb173f
0x00000000001171dc : test r8, r8 ; jne 0x117183 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x0000000000117770 : test rax, rax ; cmove rax, rdx ; mov qword ptr [rip + 0x2ad9a2], rax ; pop rbp ; ret
0x00000000001177cd : test rax, rax ; je 0x117815 ; lea rsi, qword ptr [rbp - 0x20] ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x000000000012d734 : test rax, rax ; je 0x12d72d ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012e916 : test rax, rax ; je 0x12e928 ; mov rdi, rbp ; call rax
0x00000000001356b8 : test rax, rax ; je 0x1356cc ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000136b95 : test rax, rax ; je 0x136ba7 ; mov rdi, rbp ; call rax
0x0000000000136db5 : test rax, rax ; je 0x136dc7 ; mov rdi, rbp ; call rax
0x000000000013b878 : test rax, rax ; je 0x13b88c ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013bf91 : test rax, rax ; je 0x13bfa5 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000000204aa : test rax, rax ; je 0x204bc ; mov rdi, rbp ; call rax
0x00000000000708f8 : test rax, rax ; je 0x70918 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008d82f : test rax, rax ; je 0x8d849 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000abd9c : test rax, rax ; je 0xabd94 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ac37a : test rax, rax ; je 0xac376 ; mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ff6af : test rax, rax ; jne 0xff693 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000ff880 : test rax, rax ; jne 0xff863 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000044f9b : test rbp, rbp ; je 0x44fb3 ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000004501b : test rbp, rbp ; je 0x45033 ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000450c9 : test rbp, rbp ; je 0x450e1 ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000006bbe0 : test rbp, rbp ; je 0x6bc0e ; add rsp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000b650c : test rbp, rbp ; je 0xb6524 ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b65ba : test rbp, rbp ; je 0xb65d2 ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b665c : test rbp, rbp ; je 0xb6674 ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000172242 : test rbp, rbp ; jne 0x172237 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000017237d : test rbp, rbp ; jne 0x172363 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008b93c : test rbp, rbp ; jne 0x8b929 ; test r12, r12 ; jne 0x8b973 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f0c58 : test rbp, rbp ; jne 0xf0c4c ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000104635 : test rbx, rbx ; jne 0x104623 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001196b5 : test rbx, rbx ; jne 0x1196d6 ; add rsp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000001196b4 : test rbx, rbx ; jne 0x1196d7 ; add rsp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000003a899 : test rbx, rbx ; jne 0x3a86b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079b6b : test rbx, rbx ; jne 0x79b8c ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000172327 : test rbx, rbx ; mov rdi, rbx ; jne 0x172324 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f8035 : test rdi, rdi ; cmovne eax, edx ; cmp rbp, rsi ; ja 0xf7fdd ; pop rbx ; pop rbp ; ret
0x000000000012ae89 : test rdi, rdi ; jne 0x12ae83 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001304ef : test rdx, rdx ; je 0x130501 ; mov rdi, rbp ; call rdx
0x00000000000db19b : test rdx, rdx ; jne 0xdb16d ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000003b971 : vpsubsw xmm9, xmm15, xmmword ptr [rbp - 0x8000003] ; ret 0xffef
0x00000000000db2b7 : wait ; pop rbx ; mov eax, 0xc ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012519d : xchg byte ptr [rax + 0x4c000000], al ; mov dword ptr [rbp - 0x78], edx ; call 0x913bb
0x0000000000080be6 : xchg byte ptr [rax], ah ; or byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003ad91 : xchg byte ptr [rax], bh ; add byte ptr [rbp + 0xa], dh ; jmp 0x3adc3
0x0000000000159426 : xchg byte ptr [rbp + 0x63490003], ah ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000016d766 : xchg byte ptr [rbp + 2], bl ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000014ad7f : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001489f3 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000014a55f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000149d3f : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x0000000000077c26 : xchg byte ptr [rbp - 6], bh ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000019734d : xchg byte ptr [rcx], al ; add byte ptr [rdx + rbp*4 - 0xa], al ; jmp rsp
0x00000000001a5cb9 : xchg byte ptr [rsp + rcx*4], al ; add ecx, dword ptr [rbp + 0x4c0002] ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x0000000000025d96 : xchg dl, cl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x3d77f02e], al ; add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x0000000000194ca5 : xchg dword ptr [rax], eax ; add byte ptr [rcx + rbp*2 - 0x16], dl ; call rsp
0x00000000000c193d : xchg dword ptr [rbp + rbp*8 - 1], edx ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000021f6d : xchg dword ptr [rbp + rcx*4 + 0x34], ecx ; ret
0x000000000004e0f3 : xchg dword ptr [rbp - 0x76ffffdb], eax ; ret 0x349
0x000000000006ae1c : xchg dword ptr [rbp - 0x77000000], ebp ; ret 0x348
0x000000000006a057 : xchg dword ptr [rbp - 0x77000000], ebx ; ret 0x348
0x000000000006b054 : xchg dword ptr [rbp - 0x77000000], ecx ; ret 0x348
0x00000000000ac6df : xchg dword ptr [rbp - 0x7b], eax ; sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x0000000000197395 : xchg dword ptr [rcx], eax ; add byte ptr [rsi + rbp*4 - 0xa], al ; jmp rsp
0x00000000000f8761 : xchg dword ptr [rdx + 0x48000000], ecx ; add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000131c64 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000013d457 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000013626e : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; xor byte ptr [rbx + 0xf], bl ; mov dh, 0xc0 ; pop rbp ; pop r12 ; ret
0x000000000011071e : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000139c78 : xchg eax, ebp ; sal bh, 0xd8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000010d760 : xchg eax, ebp ; sal bh, 0xd8 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000d7e6a : xchg eax, ebp ; sti ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000008b191 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; mov rdx, rbp ; mov rsi, r12 ; call rax
0x0000000000186f00 : xchg eax, ecx ; fdivr st(3), st(0) ; lcall ptr [rbp - 0x1f] ; ljmp ptr [rax + 0x7dfff3db] ; fcomi st(3) ; call rax
0x00000000001171e0 : xchg eax, edi ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000011819f : xchg eax, edx ; idiv edi ; add rsp, 8 ; add rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000403c4 : xchg eax, edx ; mov rdx, rbp ; xor ebp, ebp ; add rax, rax ; sub rdx, rax ; jmp 0x40411
0x00000000001366ca : xchg eax, edx ; out dx, al ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d6bf0 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx + 0x1b828], cl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000056b9d : xchg eax, esp ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x2c], cl ; test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000014d381 : xchg eax, esp ; mov byte ptr [rbp + 0x48d974d2], 0x63 ; ror dword ptr [rax + 1], -8 ; sub rax, r8 ; ret
0x000000000014d4bd : xchg eax, esp ; mov byte ptr [rbp + 0x48dd74d2], 0x63 ; ror dword ptr [rax + 1], -8 ; ret
0x0000000000021459 : xchg eax, esp ; rol byte ptr [rbp + 0x31], 0xc0 ; xor ecx, ecx ; movzx eax, al ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x000000000013d408 : xchg eax, esp ; rol byte ptr [rbx + 0x597401fa], 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000a0715 : xchg eax, esp ; rol dword ptr [rbp + 8], -0x36 ; jne 0xa070d ; cmp r8d, ecx ; je 0xa070d ; ret
0x000000000013d1b7 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000000d7e69 : xchg eax, r13d ; sti ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000116103 : xchg eax, r8d ; mov eax, dword ptr [r14 - 0x30] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x00000000000ba841 : xlatb ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009846e : xlatb ; add rsp, 8 ; mov rbp, rdx ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000097f31 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x00000000000a0c16 : xlatb ; rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x00000000000a0bd9 : xlatb ; rol dword ptr [rbp + 0x7d850fc0], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000090d85 : xlatb ; rol dword ptr [rbp - 0x4e7af040], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000000991c8 : xlatb ; sub rbp, qword ptr [r14] ; pop rbx ; mov qword ptr [r13], rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001a11c8 : xor al, 0 ; add byte ptr [rax], al ; mov ah, 0x25 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x13], dh ; jmp qword ptr [rcx]
0x000000000019eed8 : xor al, 0 ; add byte ptr [rax], al ; test byte ptr [rbp], dl ; add al, dh ; in al, dx ; jmp qword ptr [rax]
0x000000000008194d : xor al, 0 ; add dword ptr [r12 + 0x18], r9d ; cmp rbx, rax ; je 0x8196e ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008040d : xor al, 0 ; add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000080bfd : xor al, 0 ; jae 0x80bb8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000795d5 : xor al, 0 ; mov dword ptr fs:[rax], 0x1c ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000801a5 : xor al, 0 ; mov rbp, rsi ; xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x000000000011d0f3 : xor al, 0x48 ; add esp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001963b0 : xor al, 0x9d ; int1 ; dec esp ; and dword ptr [rcx], eax ; add byte ptr [rbp + rbx*4 - 0xf], al ; jmp rsp
0x00000000000c5185 : xor al, 0xc7 ; mov rdi, rbp ; call 0x913b7
0x00000000000fa601 : xor al, 0xf9 ; dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00000000001242fa : xor al, ch ; xor byte ptr [rbp - 2], bl ; inc dword ptr [rbp - 0x769b8740] ; ret
0x00000000000abcdc : xor byte ptr [r11], r15b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x0000000000122096 : xor byte ptr [r8 + 1], dil ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007d2cc : xor byte ptr [r8 - 0x77], cl ; and byte ptr [r9 + 0x48c03113], cl ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e4c4f : xor byte ptr [rax + 0x63], cl ; add al, 0x82 ; mov rbp, rsi ; mov qword ptr [rsp + 0x28], rdi ; add rax, rdx ; jmp rax
0x0000000000122097 : xor byte ptr [rax + 1], bh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000299d5 : xor byte ptr [rax - 0x73], cl ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001046aa : xor byte ptr [rax - 0x75], cl ; jge 0x10467b ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000007d2cd : xor byte ptr [rax - 0x77], cl ; and byte ptr [r9 + 0x48c03113], cl ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000783d2 : xor byte ptr [rax - 0x77], cl ; pop rbp ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000074192 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x00000000000c5506 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rbp, r14 ; call 0x91819
0x000000000003a874 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x00000000000bd25b : xor byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bd49a : xor byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bd062 : xor byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000abce0 : xor byte ptr [rbp + 0x3d], dh ; ret
0x00000000000abcdf : xor byte ptr [rbp + 0x3d], r14b ; ret
0x000000000007e120 : xor byte ptr [rbp + 0xd], 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000091675 : xor byte ptr [rbp + 0xf], al ; adc dword ptr [rbx], eax ; ret
0x00000000000fdbf7 : xor byte ptr [rbp + rax*2 - 0x77], ah ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000a996c : xor byte ptr [rbp + rcx*4 + 0x1d], cl ; adc dl, cl ; or eax, 0xc634900 ; xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a9001 : xor byte ptr [rbp + rcx*4 + 0x1d], cl ; sti ; ror byte ptr [rip + 0xc634900], cl ; xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000004004c : xor byte ptr [rbp - 0x57f2faa], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000001942d8 : xor byte ptr [rbp - 0x6b4f0004], dl ; cld ; push qword ptr [rax] ; xchg eax, esp ; cld ; jmp qword ptr [rax + 0x10fffc93]
0x00000000001932f4 : xor byte ptr [rbp - 0x78ef0005], al ; sti ; jmp rax
0x0000000000171bcb : xor byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x00000000001a8f40 : xor byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001242fc : xor byte ptr [rbp - 2], bl ; inc dword ptr [rbp - 0x769b8740] ; ret
0x0000000000074306 : xor byte ptr [rbx + 0x374fff8], al ; and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000136273 : xor byte ptr [rbx + 0xf], bl ; mov dh, 0xc0 ; pop rbp ; pop r12 ; ret
0x000000000007e4ed : xor byte ptr [rbx - 0x438a0008], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d6bbc : xor byte ptr [rbx - 0x47fefbb9], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001a5cb6 : xor byte ptr [rbx - 0x73fb79fb], al ; add ecx, dword ptr [rbp + 0x4c0002] ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x0000000000072ce7 : xor byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000abcdd : xor byte ptr [rbx], bh ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x0000000000089270 : xor byte ptr [rcx + rcx*4 - 0x10], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000078332 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013e98f : xor byte ptr [rcx], dh ; sar byte ptr [rdx - 1], 0x4c ; mov esi, esi ; mov rdi, rbp ; call r12
0x0000000000184096 : xor byte ptr [rsi + 0x4ce2e5dd], 0x67 ; add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x0000000000090d82 : xor byte ptr [rsi + 0xf], ah ; xlatb ; rol dword ptr [rbp - 0x4e7af040], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000003763d : xor byte ptr [rsi - 0x70], ah ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000100e55 : xor ch, byte ptr [rax + rax] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000126c6d : xor cl, byte ptr [rax - 0x73] ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000100f8e : xor dword ptr [rax + rax], ebp ; add rsp, 0x98 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000a045b : xor dword ptr [rax - 0x7c], eax ; div byte ptr [rbp - 0x11] ; mov qword ptr [rdx], rcx ; ret
0x00000000000fa143 : xor dword ptr [rbp + 0x2c], ebp ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000ec143 : xor dword ptr [rbp + 0x2d], ecx ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000003c63a : xor dword ptr [rbp - 0x5f], 0xc6f7db31 ; add byte ptr [rax], al ; add byte ptr [rax], 0xf ; xchg eax, ebp ; ret
0x00000000000f207f : xor dword ptr [rcx - 0x75], ecx ; add byte ptr [r8 - 0x7b], r9b ; sal byte ptr [rsi + rbp + 0x48], 0x83 ; call 0xffffffffc29868a1
0x00000000000e25de : xor dword ptr [rdx], eax ; add byte ptr [rax], al ; mov ecx, dword ptr [rbp + 4] ; test ecx, ecx ; jle 0xe266f ; xor ebx, ebx ; mov rdx, rax ; jmp 0xe260e
0x000000000013a3b1 : xor eax, 0x53a7b ; mov r8, rbx ; mov ecx, r12d ; mov rdi, rbp ; call 0x56660
0x00000000000da730 : xor eax, 0xad38b ; movzx ebp, bpl ; movsxd rax, dword ptr [rsi + rbp*4] ; add rax, rsi ; jmp rax
0x000000000003a871 : xor eax, dword ptr [0x30] ; mov qword ptr fs:[rbp], rdx ; call rax
0x000000000008a75e : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000bcd00 : xor eax, eax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000074e1e : xor eax, eax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000139f3c : xor eax, eax ; add rsp, 0x100 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000097be0 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cca4c : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000124b12 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000feae8 : xor eax, eax ; add rsp, 0x190 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f9c20 : xor eax, eax ; add rsp, 0x198 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013daa9 : xor eax, eax ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013dbf0 : xor eax, eax ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003b846 : xor eax, eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000879fb : xor eax, eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000029cf9 : xor eax, eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001399a7 : xor eax, eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000007059b : xor eax, eax ; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000090410 : xor eax, eax ; add rsp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d72d0 : xor eax, eax ; add rsp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fe32c : xor eax, eax ; add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000008018b : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003b0c0 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003a30c : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d808d : xor eax, eax ; cmp ebx, 0xa ; je 0xd80fe ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000039d34 : xor eax, eax ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000011f8f6 : xor eax, eax ; mov byte ptr [rdx], 0 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013e990 : xor eax, eax ; mov edx, 0xffffffff ; mov rsi, r14 ; mov rdi, rbp ; call r12
0x000000000013e866 : xor eax, eax ; mov edx, 0xffffffff ; mov rsi, rbx ; mov rdi, rbp ; call rcx
0x00000000000f16c0 : xor eax, eax ; mov qword ptr [r8], rsi ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008ba06 : xor eax, eax ; mov qword ptr [rbx + 8], rbp ; mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000559c3 : xor eax, eax ; mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000558f1 : xor eax, eax ; mov qword ptr [rdi], r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000117661 : xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x00000000000ad5e1 : xor eax, eax ; mov rcx, r13 ; mov rdx, r12 ; lea r9, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rbx
0x00000000000ad8c1 : xor eax, eax ; mov rcx, r13 ; mov rdx, r12 ; lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000ad318 : xor eax, eax ; mov rcx, r15 ; mov rdx, r12 ; lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x000000000012e715 : xor eax, eax ; mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x0000000000138468 : xor eax, eax ; mov rsi, qword ptr [rsp + 0x30] ; mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x00000000000d6dae : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e0a8e : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000096607 : xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000002b49c : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ce35a : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000012e652 : xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000012fe0f : xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x000000000002bba2 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000076940 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002268b : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000bb985 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000003a4ed : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079674 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000144b47 : xor eax, eax ; rep movsq qword ptr [rdi], qword ptr [rsi] ; mov qword ptr [rbp], rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f849d : xor eax, eax ; sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000139c73 : xor eax, eax ; test ebp, ebp ; setne al ; neg eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000006bbf0 : xor ebp, ebp ; add rsp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000006bb78 : xor ebx, ebx ; add rsp, 0x1008 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000103345 : xor ebx, ebx ; mov dword ptr [rdx], eax ; add dword ptr [rbp], ebx ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000be4e4 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002a696 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001327f0 : xor ecx, dword ptr [rbp + 0x31] ; ret 0xc149
0x00000000000c86f0 : xor edx, edx ; add rsp, 0x98 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000f6f4f : xor edx, edx ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000079b99 : xor edx, edx ; div rbp ; mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f704d : xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000104ff8 : xor edx, edx ; mov esi, 1 ; mov rdi, rbp ; call rbx
0x0000000000080454 : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000ca278 : xor edx, edx ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010e417 : xor edx, edx ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000070ec4 : xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000008040c : xor esi, dword ptr [rax + rax] ; add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000001327ee : xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rbp + 0x31] ; ret 0xc149
0x000000000003a870 : xor rax, qword ptr [0x30] ; mov qword ptr fs:[rbp], rdx ; call rax
0x000000000003a86f : xor rax, qword ptr fs:[0x30] ; mov qword ptr fs:[rbp], rdx ; call rax
0x000000000007610e : xor rax, rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f0fe : xor rax, rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000103504 : xor rbp, rsi ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
