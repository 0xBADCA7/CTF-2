0x0000000000130d4d : adc byte ptr [rbx - 0x3d], bl ; mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x00000000000453e4 : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x00000000000704bf : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x30] ; call rax
0x000000000007e3bf : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x19b0] ; call rax
0x000000000007e879 : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x1e6a] ; call rax
0x000000000007ed39 : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x232a] ; call rax
0x00000000000707a9 : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x2ba] ; call rax
0x000000000007cd1f : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x310] ; call rax
0x000000000007cf8f : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x580] ; call rax
0x00000000000453e8 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x00000000000704c3 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x30] ; call rax
0x000000000007e3c3 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x19b0] ; call rax
0x000000000007e87d : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x1e6a] ; call rax
0x000000000007ed3d : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x232a] ; call rax
0x00000000000707ad : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x2ba] ; call rax
0x000000000007cd23 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x310] ; call rax
0x000000000007cf93 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x580] ; call rax
0x00000000000c0739 : add al, 0xb0 ; lea rsi, qword ptr [rip + 0xc6152] ; add rax, rsi ; jmp rax
0x000000000013dd7f : add byte ptr [rax - 0x75], cl ; or byte ptr [r9 + r9*4 + 0x44], r9b ; and al, 8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013d47b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rbx + 8] ; lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000130dbb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013d47c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbx + 8] ; lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000130dbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x00000000000b73de : add byte ptr [rax], al ; lea rsi, qword ptr [rbx + rax*4] ; sub r10, rax ; jmp 0xb740a
0x00000000000453ec : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x00000000000704c7 : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x30] ; call rax
0x00000000000aac5e : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0xdb859] ; movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x000000000007e3c7 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x19b0] ; call rax
0x000000000007e881 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x1e6a] ; call rax
0x000000000007ed41 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x232a] ; call rax
0x00000000000707b1 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x2ba] ; call rax
0x000000000007cd27 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x310] ; call rax
0x000000000007cf97 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x580] ; call rax
0x000000000013d47e : add byte ptr [rax], al ; mov rax, qword ptr [rbx + 8] ; lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000130dbe : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013dd7e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; mov qword ptr [rsp + 8], r8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013dd7d : add byte ptr [rax], r8b ; mov rax, qword ptr [rdi + 8] ; mov qword ptr [rsp + 8], r8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000122d41 : and al, 0x20 ; lea rsi, qword ptr [rip + 0x6ab80] ; call 0x147830
0x000000000006f02e : and al, 8 ; je 0x6f060 ; lea rsi, qword ptr [rsp + 8] ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000013dd87 : and al, 8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013dec7 : and al, 8 ; lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x00000000000726c8 : and byte ptr [rax + 0x3b], cl ; sub byte ptr [rbx + 0x11], sil ; lea rsi, qword ptr [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x00000000000453e9 : and eax, 0x30 ; lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x00000000000704c4 : and eax, 0x30 ; lea rsi, qword ptr [rip + 0x30] ; call rax
0x000000000007e3c4 : and eax, 0x30 ; lea rsi, qword ptr [rip - 0x19b0] ; call rax
0x000000000007e87e : and eax, 0x30 ; lea rsi, qword ptr [rip - 0x1e6a] ; call rax
0x000000000007ed3e : and eax, 0x30 ; lea rsi, qword ptr [rip - 0x232a] ; call rax
0x00000000000707ae : and eax, 0x30 ; lea rsi, qword ptr [rip - 0x2ba] ; call rax
0x000000000007cd24 : and eax, 0x30 ; lea rsi, qword ptr [rip - 0x310] ; call rax
0x000000000007cf94 : and eax, 0x30 ; lea rsi, qword ptr [rip - 0x580] ; call rax
0x00000000000726ca : cmp ecx, dword ptr [rdx + 0x28] ; jae 0x726ef ; lea rsi, qword ptr [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x00000000000726c9 : cmp rcx, qword ptr [rdx + 0x28] ; jae 0x726f0 ; lea rsi, qword ptr [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x00000000000768ce : int1 ; lea rsi, qword ptr [rbp + 0x50] ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000076a8a : int1 ; lea rsi, qword ptr [rbp + 0x90] ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00000000000726cd : jae 0x726ec ; lea rsi, qword ptr [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x00000000001177d0 : je 0x117812 ; lea rsi, qword ptr [rbp - 0x20] ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x000000000006f030 : je 0x6f05e ; lea rsi, qword ptr [rsp + 8] ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000013dec2 : jne 0x13de5f ; mov rax, qword ptr [r12 + 8] ; lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013e006 : jne 0x13dfd6 ; mov rax, qword ptr [r12 + 8] ; lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000009140a : lea edi, dword ptr [rdi + rcx - 1] ; lea rsi, qword ptr [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000091409 : lea rdi, qword ptr [rdi + rcx - 1] ; lea rsi, qword ptr [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000000768cf : lea rsi, qword ptr [rbp + 0x50] ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000076a8b : lea rsi, qword ptr [rbp + 0x90] ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00000000000769a8 : lea rsi, qword ptr [rbp + 0x90] ; lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00000000001177d2 : lea rsi, qword ptr [rbp - 0x20] ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x00000000000cfa3d : lea rsi, qword ptr [rbp - 0xc0] ; mov rdi, rbx ; call qword ptr [r15]
0x000000000004862b : lea rsi, qword ptr [rbx + r10] ; je 0x4864a ; mov rax, qword ptr [rax + rsi*8] ; mov qword ptr [rcx + rsi*8], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000b73e0 : lea rsi, qword ptr [rbx + rax*4] ; sub r10, rax ; jmp 0xb7408
0x00000000000726cf : lea rsi, qword ptr [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000012de7f : lea rsi, qword ptr [rdi + 0x48] ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000006d27d : lea rsi, qword ptr [rip + 0x118558] ; movzx eax, al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000453ee : lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x00000000000704c9 : lea rsi, qword ptr [rip + 0x30] ; call rax
0x0000000000122d43 : lea rsi, qword ptr [rip + 0x6ab80] ; call 0x14782e
0x000000000011429f : lea rsi, qword ptr [rip + 0x7910c] ; mov rdx, rax ; mov rdi, r14 ; xor eax, eax ; call 0x1105b1
0x00000000000c59f1 : lea rsi, qword ptr [rip + 0xc1570] ; mov edx, ecx ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000c073b : lea rsi, qword ptr [rip + 0xc6152] ; add rax, rsi ; jmp rax
0x00000000000aac60 : lea rsi, qword ptr [rip + 0xdb859] ; movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x000000000007e3c9 : lea rsi, qword ptr [rip - 0x19b0] ; call rax
0x000000000007e883 : lea rsi, qword ptr [rip - 0x1e6a] ; call rax
0x000000000007ed43 : lea rsi, qword ptr [rip - 0x232a] ; call rax
0x00000000000707b3 : lea rsi, qword ptr [rip - 0x2ba] ; call rax
0x000000000007cd29 : lea rsi, qword ptr [rip - 0x310] ; call rax
0x000000000007cf99 : lea rsi, qword ptr [rip - 0x580] ; call rax
0x000000000009140e : lea rsi, qword ptr [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000013db04 : lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000130d54 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000006f032 : lea rsi, qword ptr [rsp + 8] ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000013dec9 : lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013d484 : lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000c0735 : mov dh, 0xf6 ; movsxd rax, dword ptr [rax + rsi*4] ; lea rsi, qword ptr [rip + 0xc6152] ; add rax, rsi ; jmp rax
0x000000000013dd85 : mov dword ptr [rsp + 8], eax ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013d481 : mov eax, dword ptr [rbx + 8] ; lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x000000000013db01 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000130d51 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013dd81 : mov eax, dword ptr [rdi + 8] ; mov qword ptr [rsp + 8], r8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013dec5 : mov eax, dword ptr [rsp + 8] ; lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013dec0 : mov ebp, eax ; jne 0x13de61 ; mov rax, qword ptr [r12 + 8] ; lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013e004 : mov ebp, eax ; jne 0x13dfd8 ; mov rax, qword ptr [r12 + 8] ; lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000012de79 : mov ecx, dword ptr [rax + 8] ; mov edx, dword ptr [rdi + 0x5c] ; lea rsi, qword ptr [rdi + 0x48] ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000000b73d9 : mov ecx, dword ptr [rsp + 0x84] ; lea rsi, qword ptr [rbx + rax*4] ; sub r10, rax ; jmp 0xb740f
0x00000000000768cd : mov ecx, esi ; lea rsi, qword ptr [rbp + 0x50] ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000076a89 : mov ecx, esi ; lea rsi, qword ptr [rbp + 0x90] ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000012de7c : mov edx, dword ptr [rdi + 0x5c] ; lea rsi, qword ptr [rdi + 0x48] ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000013dd84 : mov qword ptr [rsp + 8], r8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013dec4 : mov rax, qword ptr [r12 + 8] ; lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013d480 : mov rax, qword ptr [rbx + 8] ; lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x000000000013db00 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000130d50 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013dd80 : mov rax, qword ptr [rdi + 8] ; mov qword ptr [rsp + 8], r8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00000000000768cc : mov rcx, r14 ; lea rsi, qword ptr [rbp + 0x50] ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000013dec3 : mov word ptr [rcx - 0x75], cs ; and al, 8 ; lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x00000000000b73d6 : movsxd r10, ebp ; mov ecx, dword ptr [rsp + 0x84] ; lea rsi, qword ptr [rbx + rax*4] ; sub r10, rax ; jmp 0xb7412
0x00000000000c0737 : movsxd rax, dword ptr [rax + rsi*4] ; lea rsi, qword ptr [rip + 0xc6152] ; add rax, rsi ; jmp rax
0x00000000000b73d7 : movsxd rdx, ebp ; mov ecx, dword ptr [rsp + 0x84] ; lea rsi, qword ptr [rbx + rax*4] ; sub r10, rax ; jmp 0xb7411
0x00000000000c0734 : movzx esi, dh ; movsxd rax, dword ptr [rax + rsi*4] ; lea rsi, qword ptr [rip + 0xc6152] ; add rax, rsi ; jmp rax
0x000000000013daff : nop ; mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013d828 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013dc3d : nop dword ptr [rax] ; mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000130db9 : nop dword ptr [rax] ; mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013dd82 : or byte ptr [r9 + r9*4 + 0x44], r9b ; and al, 8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013dd83 : or byte ptr [rcx + rcx*4 + 0x44], cl ; and al, 8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012de7e : pop rsp ; lea rsi, qword ptr [rdi + 0x48] ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000012de7d : push rdi ; pop rsp ; lea rsi, qword ptr [rdi + 0x48] ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000130d49 : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx - 0x3d], bl ; mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x00000000000726cc : sub byte ptr [rbx + 0x11], dh ; lea rsi, qword ptr [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x00000000000726cb : sub byte ptr [rbx + 0x11], sil ; lea rsi, qword ptr [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000013d82a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x00000000000b73dc : test byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rbx + rax*4] ; sub r10, rax ; jmp 0xb740c
0x00000000001177ce : test eax, eax ; je 0x117814 ; lea rsi, qword ptr [rbp - 0x20] ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x00000000001177cd : test rax, rax ; je 0x117815 ; lea rsi, qword ptr [rbp - 0x20] ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x00000000000453ea : xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x00000000000704c5 : xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x30] ; call rax
0x000000000007e3c5 : xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x19b0] ; call rax
0x000000000007e87f : xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x1e6a] ; call rax
0x000000000007ed3f : xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x232a] ; call rax
0x00000000000707af : xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x2ba] ; call rax
0x000000000007cd25 : xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x310] ; call rax
0x000000000007cf95 : xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x580] ; call rax
0x00000000000453e7 : xor eax, dword ptr [0x30] ; lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x00000000000704c2 : xor eax, dword ptr [0x30] ; lea rsi, qword ptr [rip + 0x30] ; call rax
0x000000000007e3c2 : xor eax, dword ptr [0x30] ; lea rsi, qword ptr [rip - 0x19b0] ; call rax
0x000000000007e87c : xor eax, dword ptr [0x30] ; lea rsi, qword ptr [rip - 0x1e6a] ; call rax
0x000000000007ed3c : xor eax, dword ptr [0x30] ; lea rsi, qword ptr [rip - 0x232a] ; call rax
0x00000000000707ac : xor eax, dword ptr [0x30] ; lea rsi, qword ptr [rip - 0x2ba] ; call rax
0x000000000007cd22 : xor eax, dword ptr [0x30] ; lea rsi, qword ptr [rip - 0x310] ; call rax
0x000000000007cf92 : xor eax, dword ptr [0x30] ; lea rsi, qword ptr [rip - 0x580] ; call rax
0x00000000000769a6 : xor eax, eax ; lea rsi, qword ptr [rbp + 0x90] ; lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00000000000768ca : xor eax, eax ; mov rcx, r14 ; lea rsi, qword ptr [rbp + 0x50] ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00000000000453e6 : xor rax, qword ptr [0x30] ; lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x00000000000704c1 : xor rax, qword ptr [0x30] ; lea rsi, qword ptr [rip + 0x30] ; call rax
0x000000000007e3c1 : xor rax, qword ptr [0x30] ; lea rsi, qword ptr [rip - 0x19b0] ; call rax
0x000000000007e87b : xor rax, qword ptr [0x30] ; lea rsi, qword ptr [rip - 0x1e6a] ; call rax
0x000000000007ed3b : xor rax, qword ptr [0x30] ; lea rsi, qword ptr [rip - 0x232a] ; call rax
0x00000000000707ab : xor rax, qword ptr [0x30] ; lea rsi, qword ptr [rip - 0x2ba] ; call rax
0x000000000007cd21 : xor rax, qword ptr [0x30] ; lea rsi, qword ptr [rip - 0x310] ; call rax
0x000000000007cf91 : xor rax, qword ptr [0x30] ; lea rsi, qword ptr [rip - 0x580] ; call rax
0x00000000000453e5 : xor rax, qword ptr fs:[0x30] ; lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x00000000000704c0 : xor rax, qword ptr fs:[0x30] ; lea rsi, qword ptr [rip + 0x30] ; call rax
0x000000000007e3c0 : xor rax, qword ptr fs:[0x30] ; lea rsi, qword ptr [rip - 0x19b0] ; call rax
0x000000000007e87a : xor rax, qword ptr fs:[0x30] ; lea rsi, qword ptr [rip - 0x1e6a] ; call rax
0x000000000007ed3a : xor rax, qword ptr fs:[0x30] ; lea rsi, qword ptr [rip - 0x232a] ; call rax
0x00000000000707aa : xor rax, qword ptr fs:[0x30] ; lea rsi, qword ptr [rip - 0x2ba] ; call rax
0x000000000007cd20 : xor rax, qword ptr fs:[0x30] ; lea rsi, qword ptr [rip - 0x310] ; call rax
0x000000000007cf90 : xor rax, qword ptr fs:[0x30] ; lea rsi, qword ptr [rip - 0x580] ; call rax
