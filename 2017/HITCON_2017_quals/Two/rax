0x0000000000193799 : adc ah, bh ; call qword ptr [rax - 0x1f0003ef]
0x00000000001b996c : adc al, 0 ; add al, byte ptr [rax] ; loopne 0x1b993a ; clc ; call qword ptr [rbx]
0x00000000000647cb : adc al, 0 ; add byte ptr [rax - 0x73], cl ; or eax, 0x12083f ; movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x0000000000064849 : adc al, 0 ; add byte ptr [rax - 0x73], cl ; or eax, 0x120911 ; movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x0000000000149e6f : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000004b792 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x491e
0x0000000000149ed9 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001b9968 : adc al, 0 ; add byte ptr [rax], al ; adc al, 0 ; add al, byte ptr [rax] ; loopne 0x1b993e ; clc ; call qword ptr [rbx]
0x00000000001ab868 : adc al, 0 ; add byte ptr [rax], al ; adc al, 0x1f ; add dword ptr [rax], eax ; ror ch, 0xf4 ; jmp qword ptr [rcx]
0x00000000001ae468 : adc al, 0 ; add byte ptr [rax], al ; adc al, 0x4b ; add dword ptr [rax], eax ; push rax ; stosb byte ptr [rdi], al ; cmc ; call qword ptr [rax]
0x00000000001ae568 : adc al, 0 ; add byte ptr [rax], al ; adc al, 0x4c ; add dword ptr [rax], eax ; push rax ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001af068 : adc al, 0 ; add byte ptr [rax], al ; adc al, 0x57 ; add dword ptr [rax], eax ; and bl, al ; cmc ; jmp qword ptr [rdi]
0x00000000001b0968 : adc al, 0 ; add byte ptr [rax], al ; adc al, 0x70 ; add dword ptr [rax], eax ; push rax ; movsxd rsi, esi ; jmp qword ptr [rsi]
0x00000000001a6468 : adc al, 0 ; add byte ptr [rax], al ; adc al, 0xcb ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001acb58 : adc al, 0 ; add byte ptr [rax], al ; add al, 0x32 ; add dword ptr [rax], eax ; xor byte ptr [rsi], ah ; cmc ; jmp qword ptr [rcx]
0x000000000008197d : adc al, 0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; mov dword ptr [rsp + 0x10], eax ; pop r12 ; ret
0x00000000001ae1a0 : adc al, 0 ; add byte ptr [rax], al ; add qword ptr [rax], rax ; js 0x1ae148 ; cmc ; jmp qword ptr [rcx]
0x00000000000c9002 : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x98 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001ab678 : adc al, 0 ; add byte ptr [rax], al ; and al, 0x1d ; add dword ptr [rax], eax ; and bl, cl ; hlt ; jmp qword ptr [rsi]
0x00000000001aca78 : adc al, 0 ; add byte ptr [rax], al ; and al, 0x31 ; add dword ptr [rax], eax ; loopne 0x1acaaf ; cmc ; jmp qword ptr [rcx]
0x00000000001a1378 : adc al, 0 ; add byte ptr [rax], al ; and al, 0x7a ; add byte ptr [rax], al ; and byte ptr [rdx - 0x13], bh ; jmp qword ptr [rbx]
0x00000000001a2a78 : adc al, 0 ; add byte ptr [rax], al ; and al, 0x91 ; add byte ptr [rax], al ; loopne 0x1a2a59 ; in eax, dx ; call qword ptr [rdx]
0x00000000001a5478 : adc al, 0 ; add byte ptr [rax], al ; and al, 0xbb ; add byte ptr [rax], al ; xor bh, bl ; cld ; call qword ptr [rax]
0x00000000001b7778 : adc al, 0 ; add byte ptr [rax], al ; and al, 0xde ; add dword ptr [rax], eax ; nop ; clc ; call qword ptr [rdx]
0x00000000001abea0 : adc al, 0 ; add byte ptr [rax], al ; and rax, 0xe3480001 ; hlt ; jmp qword ptr [rcx]
0x00000000001a8f50 : adc al, 0 ; add byte ptr [rax], al ; cld ; cmc ; add byte ptr [rax], al ; push rbp ; jmp qword ptr [rcx]
0x00000000001ad450 : adc al, 0 ; add byte ptr [rax], al ; cld ; cmp al, byte ptr [rcx] ; add byte ptr [rax + 0x55], ch ; cmc ; call qword ptr [rdx]
0x00000000001b0950 : adc al, 0 ; add byte ptr [rax], al ; cld ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; cmp byte ptr [rbx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001af050 : adc al, 0 ; add byte ptr [rax], al ; cld ; push rsi ; add dword ptr [rax], eax ; pop rax ; ret 0xfff5
0x00000000001a6450 : adc al, 0 ; add byte ptr [rax], al ; cld ; retf 0 ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001ab750 : adc al, 0 ; add byte ptr [rax], al ; cld ; sbb eax, 0xcce80001 ; hlt ; jmp qword ptr [rcx]
0x000000000019a990 : adc al, 0 ; add byte ptr [rax], al ; cmp al, 0x10 ; add byte ptr [rax], al ; js 0x19aa1b ; std ; jmp qword ptr [rdi]
0x00000000001ad590 : adc al, 0 ; add byte ptr [rax], al ; cmp al, 0x3c ; add dword ptr [rax], eax ; sub byte ptr [rax - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001a3f90 : adc al, 0 ; add byte ptr [rax], al ; cmp al, 0xa6 ; add byte ptr [rax], al ; fdivr dword ptr [rcx - 0x12] ; jmp qword ptr [rcx]
0x00000000001a8e90 : adc al, 0 ; add byte ptr [rax], al ; cmp al, 0xf5 ; add byte ptr [rax], al ; call 0x221a80fc
0x00000000001aea30 : adc al, 0 ; add byte ptr [rax], al ; fcom qword ptr [rax + 1] ; add byte ptr [rax], bh ; mov cl, 0xf5 ; jmp qword ptr [rcx]
0x00000000001a8a30 : adc al, 0 ; add byte ptr [rax], al ; fdivr st(0), st(0) ; add byte ptr [rax], al ; call 0x221a7c8c
0x00000000001a8b30 : adc al, 0 ; add byte ptr [rax], al ; fdivr st(1), st(0) ; add byte ptr [rax], al ; test al, 0x46 ; jmp qword ptr [rcx]
0x00000000001ae230 : adc al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rax + 1] ; add byte ptr [rax], cl ; xchg eax, esp ; cmc ; jmp qword ptr [rcx]
0x00000000001ae730 : adc al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rbp + 1] ; add byte ptr [rax], ch ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae330 : adc al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rcx + 1] ; add byte ptr [rax - 0x57], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001ac730 : adc al, 0 ; add byte ptr [rax], al ; fsubr qword ptr [rip + 0x1c680001] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae748 : adc al, 0 ; add byte ptr [rax], al ; hlt ; add qword ptr [r8], r8 ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ad548 : adc al, 0 ; add byte ptr [rax], al ; hlt ; cmp eax, dword ptr [rcx] ; add al, ah ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001b6948 : adc al, 0 ; add byte ptr [rax], al ; hlt ; iretd ; add dword ptr [rax], eax ; adc byte ptr [rax + rdi*8], cl ; jmp qword ptr [rax]
0x00000000001ac648 : adc al, 0 ; add byte ptr [rax], al ; hlt ; sub al, 1 ; add al, al ; sbb ebp, esi ; jmp qword ptr [rcx]
0x00000000001a6438 : adc al, 0 ; add byte ptr [rax], al ; in al, -0x36 ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a4838 : adc al, 0 ; add byte ptr [rax], al ; in al, -0x52 ; add byte ptr [rax], al ; adc dl, dl ; out dx, al ; call qword ptr [rcx]
0x00000000001a8f38 : adc al, 0 ; add byte ptr [rax], al ; in al, -0xb ; add byte ptr [rax], al ; xor byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001b9938 : adc al, 0 ; add byte ptr [rax], al ; in al, -1 ; add dword ptr [rax], eax ; rol cl, 0xf8 ; call qword ptr [rdi]
0x00000000001aab38 : adc al, 0 ; add byte ptr [rax], al ; in al, 0x11 ; add dword ptr [rax], eax ; xor byte ptr [rdi], dl ; hlt ; call qword ptr [rdx]
0x00000000001ab738 : adc al, 0 ; add byte ptr [rax], al ; in al, 0x1d ; add dword ptr [rax], eax ; ror ah, 1 ; hlt ; jmp qword ptr [rcx]
0x00000000001abc38 : adc al, 0 ; add byte ptr [rax], al ; in al, 0x22 ; add dword ptr [rax], eax ; adc ch, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001ad638 : adc al, 0 ; add byte ptr [rax], al ; in al, 0x3c ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xb], bl ; jmp qword ptr [rdx]
0x00000000001b0938 : adc al, 0 ; add byte ptr [rax], al ; in al, 0x6f ; add dword ptr [rax], eax ; and byte ptr [rbx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001ae940 : adc al, 0 ; add byte ptr [rax], al ; in al, dx ; add qword ptr [r8], r8 ; clc ; scasd eax, dword ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x00000000001abe40 : adc al, 0 ; add byte ptr [rax], al ; in al, dx ; and al, 1 ; add al, ch ; loop 0x1abe4a ; jmp qword ptr [rcx]
0x00000000001a2a40 : adc al, 0 ; add byte ptr [rax], al ; in al, dx ; nop ; add byte ptr [rax], al ; fmul st(4) ; in eax, dx ; call qword ptr [rdx]
0x00000000001a4940 : adc al, 0 ; add byte ptr [rax], al ; in al, dx ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; shr rsi, cl ; jmp qword ptr [rsi]
0x00000000001acb40 : adc al, 0 ; add byte ptr [rax], al ; in al, dx ; xor dword ptr [rcx], eax ; add byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001ad5c0 : adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp al, 1 ; add byte ptr [rax + 0x58], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a8ac0 : adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; int1 ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0xe], al ; call qword ptr [rdx]
0x00000000001a12c0 : adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jns 0x1a12d2 ; add al, cl ; jns 0x1a12c3 ; jmp qword ptr [rdi]
0x00000000001a57c0 : adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov esi, 0xab880000 ; sti ; call qword ptr [rax]
0x00000000001a43c0 : adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; mov bl, 0xee ; jmp rdx
0x00000000001a48c8 : adc al, 0 ; add byte ptr [rax], al ; je 0x1a4888 ; add byte ptr [rax], al ; loopne 0x1a492b ; cli ; call qword ptr [rax]
0x00000000001a64c8 : adc al, 0 ; add byte ptr [rax], al ; je 0x1a64a4 ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001aa9c8 : adc al, 0 ; add byte ptr [rax], al ; je 0x1aa9e9 ; add dword ptr [rax], eax ; adc byte ptr [rsi], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001aeec8 : adc al, 0 ; add byte ptr [rax], al ; je 0x1aef2e ; add dword ptr [rax], eax ; mov al, 0xb8 ; cmc ; jmp qword ptr [rcx]
0x00000000001b06c8 : adc al, 0 ; add byte ptr [rax], al ; je 0x1b0746 ; add dword ptr [rax], eax ; shl byte ptr [rcx - 0xa], 1 ; jmp qword ptr [rsi]
0x000000000019ced0 : adc al, 0 ; add byte ptr [rax], al ; jl 0x19cf16 ; add byte ptr [rax], al ; out -0x17, eax ; call qword ptr [rax]
0x00000000001b8bd0 : adc al, 0 ; add byte ptr [rax], al ; jl 0x1b8bd3 ; add dword ptr [rax], eax ; clc ; sahf ; sti ; jmp qword ptr [rdx]
0x00000000001ac800 : adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add dword ptr cs:[rax], eax ; js 0x1ac832 ; cmc ; jmp qword ptr [rcx]
0x00000000001ae700 : adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add qword ptr [r8], r8 ; clc ; lodsb al, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ad500 : adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; cmp eax, dword ptr [rcx] ; add byte ptr [rax + 0x57], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001b8b00 : adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; int1 ; add dword ptr [rax], eax ; cwde ; lahf ; sti ; jmp qword ptr [rdx]
0x00000000001ab808 : adc al, 0 ; add byte ptr [rax], al ; mov ah, 0x1e ; add dword ptr [rax], eax ; xor ch, cl ; hlt ; jmp qword ptr [rcx]
0x00000000001ac408 : adc al, 0 ; add byte ptr [rax], al ; mov ah, 0x2a ; add dword ptr [rax], eax ; jo 0x1ac432 ; cmc ; call qword ptr [rbx]
0x00000000001a8f08 : adc al, 0 ; add byte ptr [rax], al ; mov ah, 0xf5 ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001a49b8 : adc al, 0 ; add byte ptr [rax], al ; mov al, 0 ; add byte ptr [rax - 0x5d], dh ; cli ; call qword ptr [rax]
0x00000000001a64e0 : adc al, 0 ; add byte ptr [rax], al ; mov ebx, cs ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001a72e0 : adc al, 0 ; add byte ptr [rax], al ; mov ecx, ds ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0xf], dl ; jmp qword ptr [rcx]
0x00000000001b7a10 : adc al, 0 ; add byte ptr [rax], al ; mov esp, 0x180001e0 ; clc ; call qword ptr [rdx]
0x00000000001a6510 : adc al, 0 ; add byte ptr [rax], al ; mov esp, 0x280000cb ; ja 0x1a6516 ; call qword ptr [rdx]
0x000000000019ca10 : adc al, 0 ; add byte ptr [rax], al ; mov esp, 0xa8000030 ; fsubp st(1) ; call qword ptr [rcx]
0x00000000001a7e10 : adc al, 0 ; add byte ptr [rax], al ; mov esp, 0xb80000e4 ; adc dl, dh ; call qword ptr [rbx]
0x00000000001abe10 : adc al, 0 ; add byte ptr [rax], al ; mov esp, 0xb8000124 ; loop 0x1abe1a ; jmp qword ptr [rcx]
0x00000000001aa810 : adc al, 0 ; add byte ptr [rax], al ; mov esp, 0xd800010e ; stc ; jmp qword ptr [rdi]
0x00000000001ae610 : adc al, 0 ; add byte ptr [rax], al ; mov esp, 0xd800014c ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001a45e0 : adc al, 0 ; add byte ptr [rax], al ; mov word ptr [rax + rax - 0x113ae800], gs ; call qword ptr [rax]
0x00000000001aa9e0 : adc al, 0 ; add byte ptr [rax], al ; mov word ptr [rax], ss ; add dword ptr [rax], eax ; sub byte ptr [rsi], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001b35e0 : adc al, 0 ; add byte ptr [rax], al ; mov word ptr [rcx + rax - 0x8cf4800], ds ; call rcx
0x00000000001ae5e0 : adc al, 0 ; add byte ptr [rax], al ; mov word ptr [rcx + rax], cs ; test al, 0xab ; cmc ; jmp qword ptr [rcx]
0x00000000001ae8e0 : adc al, 0 ; add byte ptr [rax], al ; mov word ptr [rdi + 1], cs ; add byte ptr [rax - 0x51], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001aa9f8 : adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc byte ptr [rcx], al ; add byte ptr [rax + 0x16], al ; hlt ; jmp qword ptr [rcx]
0x00000000001b06f8 : adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rdx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001a5bf8 : adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x00000000001a64f8 : adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001ab660 : adc al, 0 ; add byte ptr [rax], al ; or al, 0x1d ; add dword ptr [rax], eax ; or bl, cl ; hlt ; jmp qword ptr [rcx]
0x00000000001ad560 : adc al, 0 ; add byte ptr [rax], al ; or al, 0x3c ; add dword ptr [rax], eax ; clc ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001ae760 : adc al, 0 ; add byte ptr [rax], al ; or al, 0x4e ; add dword ptr [rax], eax ; pop rax ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a4160 : adc al, 0 ; add byte ptr [rax], al ; or al, 0xa8 ; add byte ptr [rax], al ; clc ; xchg eax, edx ; out dx, al ; call qword ptr [rax]
0x000000000019f1b8 : adc al, 0 ; add byte ptr [rax], al ; pop rax ; add byte ptr [rax], al ; sar dh, 1 ; in al, dx ; call qword ptr [rax]
0x00000000001a5bb0 : adc al, 0 ; add byte ptr [rax], al ; pop rsp ; ret 0
0x00000000001a64b0 : adc al, 0 ; add byte ptr [rax], al ; pop rsp ; retf ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001a92b0 : adc al, 0 ; add byte ptr [rax], al ; pop rsp ; stc ; add byte ptr [rax], al ; js 0x1a9257 ; call rbx
0x000000000019cab0 : adc al, 0 ; add byte ptr [rax], al ; pop rsp ; xor dword ptr [rax], eax ; add byte ptr [rax], bl ; fucompi st(1) ; jmp qword ptr [rsi]
0x00000000001ae9b8 : adc al, 0 ; add byte ptr [rax], al ; push rax ; add dword ptr [rax], eax ; nop ; mov al, 0xf5 ; jmp qword ptr [rcx]
0x00000000001a8ea8 : adc al, 0 ; add byte ptr [rax], al ; push rsp ; cmc ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001ad5a8 : adc al, 0 ; add byte ptr [rax], al ; push rsp ; cmp al, 1 ; add byte ptr [rax + 0x58], al ; cmc ; jmp qword ptr [rcx]
0x00000000001a47a8 : adc al, 0 ; add byte ptr [rax], al ; push rsp ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; nop ; shr dh, 1 ; call qword ptr [rax]
0x00000000001a41a8 : adc al, 0 ; add byte ptr [rax], al ; push rsp ; test al, 0 ; add al, ah ; xchg eax, ebx ; out dx, al ; jmp qword ptr [rdx]
0x00000000001acaa8 : adc al, 0 ; add byte ptr [rax], al ; push rsp ; xor dword ptr [rcx], eax ; add byte ptr [rax + 0x23], al ; cmc ; jmp qword ptr [rcx]
0x00000000001b1af0 : adc al, 0 ; add byte ptr [rax], al ; pushfq ; add dword ptr [rcx], 0xf6940800 ; call qword ptr [rdi]
0x00000000001ae3f0 : adc al, 0 ; add byte ptr [rax], al ; pushfq ; add qword ptr [rax], rax ; call 0x221ad9b1
0x00000000001b08f0 : adc al, 0 ; add byte ptr [rax], al ; pushfq ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; fsub dword ptr [rdx - 0xa] ; jmp qword ptr [rsi]
0x00000000001a28f0 : adc al, 0 ; add byte ptr [rax], al ; pushfq ; pop qword ptr [rax] ; add byte ptr [rax], bh ; leave ; in eax, dx ; jmp qword ptr [rax]
0x00000000001a6ff0 : adc al, 0 ; add byte ptr [rax], al ; pushfq ; salc ; add byte ptr [rax], al ; mov byte ptr [rbp - 0xf], al ; call qword ptr [rsi]
0x00000000001a47f0 : adc al, 0 ; add byte ptr [rax], al ; pushfq ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; pop rax ; shr esi, 1 ; call rcx
0x00000000001a5b98 : adc al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000001a6498 : adc al, 0 ; add byte ptr [rax], al ; retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001abb70 : adc al, 0 ; add byte ptr [rax], al ; sbb al, 0x22 ; add dword ptr [rax], eax ; js 0x1abb5a ; hlt ; jmp qword ptr [rcx]
0x00000000001abe70 : adc al, 0 ; add byte ptr [rax], al ; sbb al, 0x25 ; add dword ptr [rax], eax ; sbb bl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001acb70 : adc al, 0 ; add byte ptr [rax], al ; sbb al, 0x32 ; add dword ptr [rax], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001a5970 : adc al, 0 ; add byte ptr [rax], al ; sbb al, 0xc0 ; add byte ptr [rax], al ; clc ; jp 0x1a5980 ; jmp qword ptr [rdi]
0x00000000001a9298 : adc al, 0 ; add byte ptr [rax], al ; stc ; add byte ptr [rax], al ; mov al, 0x91 ; call rbx
0x00000000001af080 : adc al, 0 ; add byte ptr [rax], al ; sub al, 0x57 ; add dword ptr [rax], eax ; cmp bl, al ; cmc ; jmp rax
0x00000000001b0680 : adc al, 0 ; add byte ptr [rax], al ; sub al, 0x6d ; add dword ptr [rax], eax ; mov byte ptr [rcx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001b4b80 : adc al, 0 ; add byte ptr [rax], al ; sub al, 0xb2 ; add dword ptr [rax], eax ; call 0x241b432a
0x00000000001a5880 : adc al, 0 ; add byte ptr [rax], al ; sub al, 0xbf ; add byte ptr [rax], al ; mov byte ptr [rax + rsi*8], al ; jmp qword ptr [rbx]
0x00000000001a6480 : adc al, 0 ; add byte ptr [rax], al ; sub al, 0xcb ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001b8580 : adc al, 0 ; add byte ptr [rax], al ; sub al, 0xec ; add dword ptr [rax], eax ; sub byte ptr [rcx - 8], ah ; jmp qword ptr [rbx]
0x00000000000fe375 : adc al, 0 ; add byte ptr [rax], al ; sub edx, eax ; test eax, eax ; cmovns eax, edx ; ret
0x00000000000fe61a : adc al, 0 ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfe667 ; ret
0x00000000001b69d8 : adc al, 0 ; add byte ptr [rax], al ; test al, dl ; add dword ptr [rax], eax ; and byte ptr [rsi], cl ; clc ; jmp qword ptr [rax]
0x000000000019ccd8 : adc al, 0 ; add byte ptr [rax], al ; test byte ptr [rbx], dh ; add byte ptr [rax], al ; nop ; in eax, -0x17 ; jmp qword ptr [rax]
0x00000000001ad5d8 : adc al, 0 ; add byte ptr [rax], al ; test byte ptr [rcx + rax], bh ; add byte ptr [rax + 0x58], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001a43d8 : adc al, 0 ; add byte ptr [rax], al ; test byte ptr [rdx - 0x49e00000], ch ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a47d8 : adc al, 0 ; add byte ptr [rax], al ; test byte ptr [rsi - 0x2f800000], ch ; out dx, al ; jmp rbx
0x00000000001ac7e8 : adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; add dword ptr cs:[rax], eax ; jo 0x1ac81a ; cmc ; call qword ptr [rsi]
0x00000000001a71e8 : adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; fadd dword ptr [rax] ; add byte ptr [rax], dh ; int1 ; call qword ptr [rcx]
0x00000000001abe88 : adc al, 0 ; add byte ptr [rax], al ; xor al, 0x25 ; add dword ptr [rax], eax ; xor bl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001ae688 : adc al, 0 ; add byte ptr [rax], al ; xor al, 0x4d ; add dword ptr [rax], eax ; push rax ; lodsb al, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae988 : adc al, 0 ; add byte ptr [rax], al ; xor al, 0x50 ; add dword ptr [rax], eax ; mov al, 0xf5 ; call qword ptr [rsi]
0x00000000001aec88 : adc al, 0 ; add byte ptr [rax], al ; xor al, 0x53 ; add dword ptr [rax], eax ; nop ; mov ch, 0xf5 ; jmp qword ptr [rbx]
0x00000000001a4588 : adc al, 0 ; add byte ptr [rax], al ; xor al, 0xac ; add byte ptr [rax], al ; push rax ; ret
0x00000000001a4988 : adc al, 0 ; add byte ptr [rax], al ; xor al, 0xb0 ; add byte ptr [rax], al ; shr byte ptr [rcx - 6], 1 ; call qword ptr [rax]
0x00000000001ac9a0 : adc al, 0 ; add byte ptr [rax], al ; xor byte ptr [rcx], r8b ; add byte ptr [rax + 0x21], ch ; cmc ; jmp qword ptr [rcx]
0x000000000012d69d : adc al, 0x10 ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000002d9cb : adc al, 0x11 ; test edx, edx ; je 0x2d9ec ; and esi, dword ptr [rdi + 0x10] ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000002da16 : adc al, 0x11 ; test edx, edx ; je 0x2da00 ; and esi, dword ptr [rdi + 0x10] ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000002ec35 : adc al, 0x15 ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x00000000001ab86c : adc al, 0x1f ; add dword ptr [rax], eax ; ror ch, 0xf4 ; jmp qword ptr [rcx]
0x0000000000130f5f : adc al, 0x24 ; bswap edx ; mov dword ptr [rax], edx ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013ad19 : adc al, 0x24 ; mov word ptr [rax + rdx*8 - 4], cx ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003a240 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00000000000ad214 : adc al, 0x31 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000078ca0 : adc al, 0x31 ; ror byte ptr [rax - 0x7d], 0x7f ; sbb byte ptr [rax], al ; setne al ; ret
0x0000000000139f3b : adc al, 0x31 ; ror byte ptr [rax - 0x7f], 0xc4 ; add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000080611 : adc al, 0x34 ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000f4d10 : adc al, 0x3c ; or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000a05cb : adc al, 0x48 ; add eax, 1 ; movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0xa05d6 ; ret
0x00000000000a0cbb : adc al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x0000000000071b3b : adc al, 0x48 ; lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x000000000009673b : adc al, 0x48 ; mov dword ptr [rbx], 0 ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000007d37b : adc al, 0x48 ; mov eax, dword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000000203e6 : adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000013e683 : adc al, 0x48 ; sub eax, esi ; mov rdx, rax ; mov ecx, eax ; xor eax, eax ; cmp rdx, rcx ; je 0x13e6b1 ; ret
0x00000000001ae46c : adc al, 0x4b ; add dword ptr [rax], eax ; push rax ; stosb byte ptr [rdi], al ; cmc ; call qword ptr [rax]
0x00000000001ae56c : adc al, 0x4c ; add dword ptr [rax], eax ; push rax ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001af06c : adc al, 0x57 ; add dword ptr [rax], eax ; and bl, al ; cmc ; jmp qword ptr [rdi]
0x000000000010b004 : adc al, 0x62 ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000001b096c : adc al, 0x70 ; add dword ptr [rax], eax ; push rax ; movsxd rsi, esi ; jmp qword ptr [rsi]
0x0000000000194844 : adc al, 0x71 ; add byte ptr [rax], al ; ret 0xffe9
0x00000000000587ca : adc al, 0x85 ; add byte ptr [rax], 0 ; add byte ptr [rcx + 0x63], cl ; ret
0x00000000001a226c : adc al, 0x89 ; add byte ptr [rax], al ; nop ; mov dh, 0xed ; call qword ptr [rbx]
0x000000000007457e : adc al, 0x8a ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000014b300 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000000dff23 : adc al, 0x92 ; lea rdi, qword ptr [rax + rsi*4] ; shl rdx, 2 ; xor esi, esi ; call 0x91820
0x0000000000122628 : adc al, 0x97 ; add byte ptr [rax], al ; test rax, rax ; je 0x12264a ; lea rdi, qword ptr [rip + 0x2a3068] ; call rax
0x0000000000074c43 : adc al, 0x9a ; mov qword ptr [rax + 0x20], rdx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001869b4 : adc al, 0xa9 ; jmp rax
0x00000000000a0e1b : adc al, 0xb8 ; and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fe373 : adc al, 0xba ; adc al, 0 ; add byte ptr [rax], al ; sub edx, eax ; test eax, eax ; cmovns eax, edx ; ret
0x0000000000048498 : adc al, 0xc0 ; mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; pop rbx ; ret
0x00000000001a646c : adc al, 0xcb ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a716c : adc al, 0xd8 ; add byte ptr [rax], al ; xor byte ptr [rbx - 0xf], cl ; jmp qword ptr [rcx]
0x0000000000156158 : adc al, 0xd8 ; add eax, dword ptr [rax] ; movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000014ef8a : adc al, 0xe ; lea rcx, qword ptr [rip + 0x259cd] ; mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000014d8b1 : adc al, 0xe ; lea rcx, qword ptr [rip + 0x270a6] ; mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000014b62a : adc al, 0xe ; lea rcx, qword ptr [rip + 0x2932d] ; mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000149a21 : adc al, 0xe ; lea rcx, qword ptr [rip + 0x2af36] ; mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000186d2c : adc al, 0xe0 ; call rax
0x00000000000a8229 : adc al, 0xf ; test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x00000000000a86a9 : adc al, 0xf3 ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000001937e5 : adc al, 0xfc ; push rax ; adc eax, 0x1740fffc ; cld ; lcall ptr [rax] ; cld ; jmp rax
0x00000000000c800f : adc al, 0xff ; lea rax, qword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003b96a : adc al, 1 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; vpsubsw xmm9, xmm15, xmmword ptr [rbp - 0x8000003] ; ret 0xffef
0x0000000000170c08 : adc al, 1 ; add byte ptr [rax], al ; ret
0x00000000001096dd : adc al, 1 ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10972d ; ret
0x00000000000ac9f9 : adc al, 8 ; add rax, 4 ; test edx, edx ; mov dword ptr [rax], edx ; jne 0xaca05 ; ret
0x000000000014a017 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a081 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000007b20 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x00000000000075f8 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x0000000000010fca : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; jns 0x10fe0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x51
0x0000000000007052 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000f6ecd : adc al, byte ptr [rax] ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf6f1d ; ret
0x000000000009c541 : adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret 0x5a8d
0x000000000009c567 : adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret 0x8d44
0x00000000000007ba : adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x0000000000021dce : adc al, byte ptr [rax] ; mov rdi, r12 ; mov rcx, qword ptr [rbp - 0x60] ; call rcx
0x0000000000021764 : adc al, byte ptr [rax] ; mov rdi, rbx ; call r14
0x000000000005a8d5 : adc al, byte ptr [rax] ; movsxd rax, dword ptr [rax + rcx*4] ; lea rcx, qword ptr [rip - 0x2e2] ; add rax, rcx ; jmp rax
0x000000000005aa8f : adc al, byte ptr [rax] ; movsxd rax, dword ptr [rax + rcx*4] ; lea rcx, qword ptr [rip - 0x49c] ; add rax, rcx ; jmp rax
0x000000000005ab87 : adc al, byte ptr [rax] ; movsxd rax, dword ptr [rax + rcx*4] ; lea rcx, qword ptr [rip - 0x594] ; add rax, rcx ; jmp rax
0x000000000005a703 : adc al, byte ptr [rax] ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, rcx ; mov edx, 1 ; jmp rax
0x000000000006415e : adc al, byte ptr [rax] ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x00000000000646b3 : adc al, byte ptr [rax] ; movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x000000000005c803 : adc al, byte ptr [rax] ; movzx eax, al ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000005cc71 : adc al, byte ptr [rax] ; movzx ebx, bl ; movsxd rax, dword ptr [rcx + rbx*4] ; add rax, rcx ; jmp rax
0x000000000002c17a : adc al, byte ptr [rcx] ; add byte ptr [rax], al ; movsxd r8, dword ptr [r11 + r9*4] ; add r8, r11 ; jmp r8
0x00000000000a2e97 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x00000000000a2eb7 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov ax, word ptr [rcx + 8] ; mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x00000000000a2ed7 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000a2ef7 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000000a2d54 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000a5b28 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000f6fcd : adc al, ch ; in eax, -0x77 ; dec dword ptr [rbx + 0x438d0455] ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000c9b3d : adc al, ch ; insd dword ptr [rdi], dx ; pop rsi ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000004731f : adc al, ch ; wait ; or al, 5 ; add byte ptr [rax - 0x77], cl ; ret 0x3dbe
0x0000000000003b0b : adc bh, byte ptr [rax] ; cwde ; ret
0x00000000000ac8e0 : adc bh, byte ptr [rbx] ; ja 0xac8f4 ; cmove rax, rcx ; ret
0x000000000001fb7d : adc bh, byte ptr [rdx] ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 2] ; mov rax, rbp ; cmp r9, rax ; je 0x1fb3a ; jmp 0x1fb63
0x0000000000090e2c : adc bl, al ; nop ; bsf eax, eax ; sub rdx, rax ; jbe 0x90e61 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000090df7 : adc bl, al ; nop dword ptr [rax] ; bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x00000000000a0c37 : adc bl, al ; nop dword ptr [rax] ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000012699b : adc bl, al ; nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x00000000000a8626 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a7836 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a8686 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a7856 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a78b7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a8707 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a78d7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a77f7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a8647 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a79b8 : adc bl, dh ; movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a8808 : adc bl, dh ; movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a8625 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a7835 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a8685 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a7855 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a78b6 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a8706 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a78d6 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a77f6 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a8646 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x0000000000079102 : adc byte ptr [r10 + 0x2a], r14b ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000794d2 : adc byte ptr [r10 - 0x18], r14b ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x0000000000079946 : adc byte ptr [r11 + 0x16], r14b ; lea rdx, qword ptr [rax + 1] ; mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000007997d : adc byte ptr [r11 + 0xf], r14b ; lea rdx, qword ptr [rax + 1] ; mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000007b516 : adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x000000000008b6c2 : adc byte ptr [r15], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x00000000001107d1 : adc byte ptr [r8 - 0x77], cl ; imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007d24c : adc byte ptr [r8 - 0x77], r9b ; sbb byte ptr [r8 - 0x77], r9b ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000002a493 : adc byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x0000000000021e38 : adc byte ptr [r9], dil ; adc byte ptr [rax + 0xf], cl ; ret
0x000000000007eea9 : adc byte ptr [r9], r13b ; rol bl, 1 ; nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000001098e8 : adc byte ptr [rax + 0x130], bh ; syscall ; cmp rax, -0xfff ; jae 0x109939 ; ret
0x00000000000fe5b8 : adc byte ptr [rax + 0x13], bh ; syscall ; cmp rax, -0xfff ; jae 0xfe609 ; ret
0x00000000000fe618 : adc byte ptr [rax + 0x14], bh ; syscall ; cmp rax, -0xfff ; jae 0xfe669 ; ret
0x0000000000102cd8 : adc byte ptr [rax + 0x1a], bh ; syscall ; cmp rax, -0xfff ; jae 0x102d29 ; ret
0x00000000000cd268 : adc byte ptr [rax + 0x22], bh ; syscall ; cmp rax, -0xfff ; jae 0xcd2b9 ; ret
0x00000000000cd2c8 : adc byte ptr [rax + 0x23], bh ; syscall ; cmp rax, -0xfff ; jae 0xcd319 ; ret
0x0000000000130e77 : adc byte ptr [rax + 0x29], cl ; int1 ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00000000000489ec : adc byte ptr [rax + 0x29], cl ; ret
0x00000000001425b5 : adc byte ptr [rax + 0x29], cl ; ret 0x1be
0x0000000000109a88 : adc byte ptr [rax + 0x2a], bh ; syscall ; cmp rax, -0xfff ; jae 0x109ad9 ; ret
0x00000000001099f8 : adc byte ptr [rax + 0x2b], bh ; syscall ; cmp rax, -0xfff ; jae 0x109a49 ; ret
0x0000000000037677 : adc byte ptr [rax + 0x39], cl ; ret
0x0000000000138969 : adc byte ptr [rax + 0x39], cl ; ret 0xc173
0x000000000008ff56 : adc byte ptr [rax + 0x39], cl ; ret 0xf475
0x0000000000138968 : adc byte ptr [rax + 0x39], r9b ; ret 0xc173
0x0000000000071b35 : adc byte ptr [rax + 0x3b], cl ; push rax ; or byte ptr [rbx + 0x14], dh ; lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x00000000000719ae : adc byte ptr [rax + 0x3b], cl ; push rax ; or byte ptr [rbx + 0xb], dh ; lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x000000000014613f : adc byte ptr [rax + 0x3b], cl ; sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x00000000000fed08 : adc byte ptr [rax + 0x4a], bh ; syscall ; cmp rax, -0xfff ; jae 0xfed59 ; ret
0x00000000000fed98 : adc byte ptr [rax + 0x4b], bh ; syscall ; cmp rax, -0xfff ; jae 0xfede9 ; ret
0x0000000000025cd5 : adc byte ptr [rax + 0x4c], dl ; mov ecx, dword ptr [rsp + 0x38] ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000000f9068 : adc byte ptr [rax + 0x55], bh ; syscall ; cmp rax, -0xfff ; jae 0xf90b9 ; ret
0x0000000000146248 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x00000000000e9324 : adc byte ptr [rax + 0x63], cl ; ret
0x00000000000a0853 : adc byte ptr [rax + 0x789044f], cl ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000003b549 : adc byte ptr [rax + 0xb], bh ; mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x000000000003b548 : adc byte ptr [rax + 0xb], r15b ; mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x00000000000e9713 : adc byte ptr [rax + 0xc], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001b9963 : adc byte ptr [rax + 0xe], ah ; or byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; adc al, 0 ; add al, byte ptr [rax] ; loopne 0x1b9943 ; clc ; call qword ptr [rbx]
0x0000000000021e3c : adc byte ptr [rax + 0xf], cl ; ret
0x000000000007a872 : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000134b87 : adc byte ptr [rax + 1], bh ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000076923 : adc byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000130f64 : adc byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013d2a9 : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000134b76 : adc byte ptr [rax + 1], bh ; ret
0x00000000000f88e8 : adc byte ptr [rax + 1], bh ; syscall ; cmp rax, -0xfff ; jae 0xf8939 ; ret
0x00000000000ab04e : adc byte ptr [rax + 1], cl ; clc ; ret
0x00000000000494be : adc byte ptr [rax + 1], cl ; ret
0x00000000000a0cb6 : adc byte ptr [rax + 1], cl ; ret 0x147c
0x000000000013829d : adc byte ptr [rax + 1], dil ; ret
0x0000000000076908 : adc byte ptr [rax + 2], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f8668 : adc byte ptr [rax + 2], bh ; syscall ; cmp rax, -0xfff ; jae 0xf86b9 ; ret
0x00000000000f8f18 : adc byte ptr [rax + 3], bh ; syscall ; cmp rax, -0xfff ; jae 0xf8f69 ; ret
0x00000000000fcd68 : adc byte ptr [rax + 7], bh ; syscall ; cmp rax, -0xfff ; jae 0xfcdb9 ; ret
0x0000000000132194 : adc byte ptr [rax + 9], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x00000000001b6950 : adc byte ptr [rax + rdi*8], cl ; jmp qword ptr [rax]
0x00000000000aa2a4 : adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000aa1a2 : adc byte ptr [rax - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000aa120 : adc byte ptr [rax - 0x12cfeba9], cl ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000001999a0 : adc byte ptr [rax - 0x18], ah ; call qword ptr [rax]
0x000000000003ab02 : adc byte ptr [rax - 0x39], cl ; add eax, 0x38b93a ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000142eab : adc byte ptr [rax - 0x39], cl ; ret
0x00000000000feff3 : adc byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000206ff : adc byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x0000000000074cfe : adc byte ptr [rax - 0x3f], cl ; sti ; add cl, byte ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000194104 : adc byte ptr [rax - 0x686f0004], bl ; cld ; call qword ptr [rax]
0x000000000010c501 : adc byte ptr [rax - 0x73], cl ; adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000165b64 : adc byte ptr [rax - 0x73], cl ; adc byte ptr [rdi], cl ; test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x00000000001372ec : adc byte ptr [rax - 0x73], cl ; adc eax, 0x52d8c ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000010bdf1 : adc byte ptr [rax - 0x73], cl ; add al, 0x82 ; mov eax, dword ptr [rax + rcx] ; mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000010c64f : adc byte ptr [rax - 0x73], cl ; add al, 0x86 ; mov eax, dword ptr [rax + rdx] ; shr eax, cl ; and eax, 1 ; ret
0x000000000002d9d3 : adc byte ptr [rax - 0x73], cl ; add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x00000000000908f4 : adc byte ptr [rax - 0x73], cl ; add eax, 0x19ab4 ; cmove rax, rdx ; ret
0x0000000000102ef6 : adc byte ptr [rax - 0x73], cl ; add eax, 0x2c12f2 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002c2c5 : adc byte ptr [rax - 0x73], cl ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000a6a9b : adc byte ptr [rax - 0x73], cl ; jg 0xa6abb ; jne 0xa717b ; ret
0x00000000000a817f : adc byte ptr [rax - 0x73], cl ; jg 0xa819f ; jne 0xa898b ; ret
0x000000000010c725 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000010c64e : adc byte ptr [rax - 0x73], r9b ; add al, 0x86 ; mov eax, dword ptr [rax + rdx] ; shr eax, cl ; and eax, 1 ; ret
0x000000000010c724 : adc byte ptr [rax - 0x73], r9b ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000073063 : adc byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rax + 0x39] ; enter 0xf48, 0x4f ; ror dword ptr [rax - 0x7b], -0x2e ; jne 0x73071 ; ret
0x000000000007d023 : adc byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rax + 0x39] ; enter 0xf48, 0x4f ; ror dword ptr [rax - 0x7b], -0x2e ; jne 0x7d031 ; ret
0x00000000000fe48b : adc byte ptr [rax - 0x75], cl ; add eax, 0x2c2a35 ; mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x000000000007da47 : adc byte ptr [rax - 0x75], cl ; add rsp, 0x20 ; pop rbx ; jmp rax
0x00000000000203e9 : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000010bd1c : adc byte ptr [rax - 0x75], cl ; and al, 8 ; mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000010bd7d : adc byte ptr [rax - 0x75], cl ; and al, 8 ; mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x00000000001226d7 : adc byte ptr [rax - 0x75], cl ; je 0x12270a ; or byte ptr [rcx + rcx*4 - 0x11], cl ; call r12
0x00000000000ad45b : adc byte ptr [rax - 0x75], cl ; je 0xad490 ; sbb byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x00000000000ad71b : adc byte ptr [rax - 0x75], cl ; je 0xad750 ; sbb byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbp ; call rbx
0x00000000000ad9fb : adc byte ptr [rax - 0x75], cl ; je 0xada30 ; sbb byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbp ; call rbx
0x00000000000730a4 : adc byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000000843bb : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call rsi
0x000000000008b957 : adc byte ptr [rax - 0x77], cl ; and byte ptr [r8 - 0x77], cl ; jnp 0x8b975 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a5b9c : adc byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000be357 : adc byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002a5f2 : adc byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000007fc83 : adc byte ptr [rax - 0x77], cl ; imul ebx, dword ptr [rax], -0x70 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001107d2 : adc byte ptr [rax - 0x77], cl ; imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007518b : adc byte ptr [rax - 0x77], cl ; iretd ; sub r8, rsi ; mov rdx, r8 ; mov qword ptr [rsp + 0x10], r8 ; call 0x913c1
0x00000000000730e7 : adc byte ptr [rax - 0x77], cl ; jo 0x73105 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000074577 : adc byte ptr [rax - 0x77], cl ; jo 0x745cb ; lea rdx, qword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000012e71b : adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x00000000000730a7 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000000730e0 : adc byte ptr [rax - 0x77], cl ; push rax ; or byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; jo 0x7310c ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000000730df : adc byte ptr [rax - 0x77], cl ; push rax ; or byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; jo 0x7310d ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000074203 : adc byte ptr [rax - 0x77], cl ; push rax ; sub byte ptr [rax - 0x77], cl ; push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x000000000008879e : adc byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x0000000000022db6 : adc byte ptr [rax - 0x77], cl ; ret
0x000000000005c37a : adc byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000117ba9 : adc byte ptr [rax - 0x77], cl ; ret 0x468d
0x0000000000117966 : adc byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000000e1602 : adc byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000e6ae1 : adc byte ptr [rax - 0x77], cl ; ret 0x8949
0x000000000008560d : adc byte ptr [rax - 0x77], cl ; ret 0x8d4e
0x000000000007f260 : adc byte ptr [rax - 0x77], cl ; ret 0xf8b
0x000000000007d24d : adc byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 - 0x77], r9b ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000004abab : adc byte ptr [rax - 0x7b], cl ; dec dword ptr [rax + 0x48e57506] ; mov eax, esi ; ret
0x000000000006bbdf : adc byte ptr [rax - 0x7b], cl ; in eax, dx ; je 0x6bc0f ; add rsp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000001721b1 : adc byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdx + 0x48] ; mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x1721d6 ; call rax
0x00000000001724ca : adc byte ptr [rax - 0x7b], cl ; push qword ptr [rbp - 0xe] ; pop rbx ; ret
0x00000000001724a8 : adc byte ptr [rax - 0x7b], cl ; push qword ptr [rbp - 0xe] ; ret
0x0000000000162a87 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000162ac3 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000a1944 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x13
0x0000000000125d70 : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rbp*2 + 0x48], 0x39 ; ret 0x5576
0x000000000010772e : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rcx + 0x48], cl ; cmp edi, edx ; jne 0x107737 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000ba72b : adc byte ptr [rax - 0x7d], cl ; cmp byte ptr [rax], al ; je 0xba747 ; add dword ptr [rax + 0x10], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a074f : adc byte ptr [rax - 0x7d], cl ; mov dword ptr [rcx], 0x840fbe0f ; leave ; jne 0xa0756 ; xor eax, eax ; ret
0x000000000005cda1 : adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000895a3 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000ce06f : adc byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000000491d8 : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000049a14 : adc byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000004a09c : adc byte ptr [rax - 0x7d], cl ; ret 0x4c10
0x00000000000ffea7 : adc byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000000a060f : adc byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0xf ; mov esi, 0xc984070c ; jne 0xa0616 ; ret
0x00000000000c517b : adc byte ptr [rax - 0x7d], cl ; shr byte ptr [rsi], 0x4c ; mov edx, esi ; mov rsi, qword ptr [rdi + rax*8] ; mov rdi, rbp ; call 0x913c1
0x0000000000035a1b : adc byte ptr [rax - 1], bh ; add rsp, 0xd0 ; ret
0x0000000000076425 : adc byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f8145 : adc byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000000ec21b : adc byte ptr [rax - 1], bh ; ret
0x000000000019380c : adc byte ptr [rax - 4], 0xff ; adc byte ptr [rbx - 4], al ; call rax
0x0000000000193e88 : adc byte ptr [rax - 4], bl ; call qword ptr [rax + 0x10fffc59]
0x0000000000193dd0 : adc byte ptr [rax - 4], dh ; call qword ptr [rax + 0x10fffc6f]
0x0000000000193e34 : adc byte ptr [rax - 4], dl ; call qword ptr [rax + 0x10fffc51]
0x00000000001936bc : adc byte ptr [rax], ah ; cld ; push rax ; and esp, edi ; call rax
0x00000000000ce9fd : adc byte ptr [rax], ah ; cmc ; mov eax, 0x100 ; cmp rdx, rcx ; jne 0xcea3e ; ret
0x00000000000fd98b : adc byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x000000000019a995 : adc byte ptr [rax], al ; add byte ptr [rax + 0x76], bh ; std ; jmp qword ptr [rdi]
0x000000000017b7d5 : adc byte ptr [rax], al ; add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x000000000006bb6c : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000014c291 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a221 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001a3a0b : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add byte ptr [rax + 0x62c80000], bh ; out dx, al ; call rsi
0x00000000001b1aeb : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; add dword ptr [rcx], 0xf6940800 ; call qword ptr [rdi]
0x000000000010affc : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; add eax, 0x2b6214 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000001a5b8c : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 0
0x0000000000008078 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x45
0x00000000001a2b5a : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; or al, 0x92 ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; std ; jmp rdi
0x0000000000010e62 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; and dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x42
0x000000000000def2 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xdf08 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rcx]
0x00000000000c381a : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x000000000002a494 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x000000000003b40c : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000053719 : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov edi, 0x100 ; mov qword ptr [rsp + 8], rdx ; call 0x1f990
0x0000000000130062 : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 8], 0 ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000012ffc2 : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 8], 1 ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000012ff9a : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x000000000012e665 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000aad66 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000006c3f4 : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000188acd : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000000fdde8 : adc byte ptr [rax], al ; add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xfde0e ; ret
0x00000000000fe581 : adc byte ptr [rax], al ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfe59e ; ret
0x00000000001173c5 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000007ba67 : adc byte ptr [rax], al ; add byte ptr [rcx + 0x1004e5], al ; add byte ptr [rcx - 0x100c1e], al ; dec dword ptr [rcx] ; ret 0xfd81
0x000000000007ba6d : adc byte ptr [rax], al ; add byte ptr [rcx - 0x100c1e], al ; dec dword ptr [rcx] ; ret 0xfd81
0x0000000000125f1a : adc byte ptr [rax], al ; add byte ptr [rcx - 0x78f033a3], cl ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000207e4 : adc byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg dword ptr [rdx], eax ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000008d5a6 : adc byte ptr [rax], al ; je 0x8d5bc ; lea rax, qword ptr [rip + 0xbfd7f] ; ret
0x000000000008fa16 : adc byte ptr [rax], al ; je 0x8fa2c ; lea rax, qword ptr [rip + 0xbda4f] ; ret
0x000000000008fda6 : adc byte ptr [rax], al ; je 0x8fdbc ; lea rax, qword ptr [rip + 0xbd7ef] ; ret
0x0000000000105584 : adc byte ptr [rax], al ; jne 0x104b05 ; mov esi, 3 ; mov rdi, r12 ; call rbx
0x0000000000105603 : adc byte ptr [rax], al ; jne 0x104b2a ; mov esi, 3 ; mov rdi, r13 ; call rbx
0x0000000000105643 : adc byte ptr [rax], al ; jne 0x104b4e ; mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000105883 : adc byte ptr [rax], al ; jne 0x104b6e ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x00000000001058e3 : adc byte ptr [rax], al ; jne 0x104be7 ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x00000000001056a3 : adc byte ptr [rax], al ; jne 0x104c73 ; mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000105923 : adc byte ptr [rax], al ; jne 0x104c93 ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000105903 : adc byte ptr [rax], al ; jne 0x104d0c ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x00000000001055c3 : adc byte ptr [rax], al ; jne 0x104da8 ; mov esi, 3 ; mov rdi, r13 ; call rbx
0x0000000000105683 : adc byte ptr [rax], al ; jne 0x104dcc ; mov esi, 3 ; mov rdi, r14 ; call rbx
0x00000000001058c3 : adc byte ptr [rax], al ; jne 0x104dec ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x00000000001058a3 : adc byte ptr [rax], al ; jne 0x104e65 ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000105663 : adc byte ptr [rax], al ; jne 0x104ef1 ; mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000105863 : adc byte ptr [rax], al ; jne 0x104f11 ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000105843 : adc byte ptr [rax], al ; jne 0x104f8a ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000105564 : adc byte ptr [rax], al ; jne 0x105032 ; mov esi, 3 ; mov rdi, r12 ; call rbx
0x00000000001055e3 : adc byte ptr [rax], al ; jne 0x105057 ; mov esi, 3 ; mov rdi, r13 ; call rbx
0x0000000000105723 : adc byte ptr [rax], al ; jne 0x10507b ; mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000105763 : adc byte ptr [rax], al ; jne 0x10509b ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000105743 : adc byte ptr [rax], al ; jne 0x105114 ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000105703 : adc byte ptr [rax], al ; jne 0x1051a0 ; mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000105823 : adc byte ptr [rax], al ; jne 0x1051c0 ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000105803 : adc byte ptr [rax], al ; jne 0x105239 ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000105623 : adc byte ptr [rax], al ; jne 0x1052d5 ; mov esi, 3 ; mov rdi, r13 ; call rbx
0x00000000001056e3 : adc byte ptr [rax], al ; jne 0x1052f9 ; mov esi, 3 ; mov rdi, r14 ; call rbx
0x00000000001057e3 : adc byte ptr [rax], al ; jne 0x105319 ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x00000000001057c3 : adc byte ptr [rax], al ; jne 0x105392 ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x00000000001056c3 : adc byte ptr [rax], al ; jne 0x10541e ; mov esi, 3 ; mov rdi, r14 ; call rbx
0x00000000001057a3 : adc byte ptr [rax], al ; jne 0x10543e ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000105783 : adc byte ptr [rax], al ; jne 0x1054b7 ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000083942 : adc byte ptr [rax], al ; lea rdi, qword ptr [rip + 0x10b835] ; mov edx, 0x236 ; call 0x7fb80
0x00000000000838f8 : adc byte ptr [rax], al ; lea rdi, qword ptr [rip + 0x10b91f] ; mov edx, 0x246 ; call 0x7fb80
0x0000000000083949 : adc byte ptr [rax], al ; mov edx, 0x236 ; call 0x7fb79
0x00000000000838ff : adc byte ptr [rax], al ; mov edx, 0x246 ; call 0x7fb79
0x00000000000bd011 : adc byte ptr [rax], al ; mov qword ptr [r12], r13 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008b4a1 : adc byte ptr [rax], al ; mov rdx, rax ; xor edi, edi ; xor eax, eax ; call 0x6e181
0x000000000004a510 : adc byte ptr [rax], al ; or rsi, rax ; mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x0000000000045dcb : adc byte ptr [rax], al ; ret
0x00000000001a0dee : adc byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; fsub qword ptr [rcx] ; add byte ptr [rax], al ; call 0x2719fb74
0x00000000001706fe : adc byte ptr [rax], bh ; enter 0x275, 0x39 ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000000f8888 : adc byte ptr [rax], bh ; syscall ; cmp rax, -0xfff ; jae 0xf88d9 ; ret
0x00000000000aa09d : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000aa0bf : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000aa0fd : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000aa17f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000aa281 : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x0000000000186110 : adc byte ptr [rax], dl ; jmp qword ptr [rax]
0x00000000000744f8 : adc byte ptr [rbp + 0x15], dh ; sub rdx, qword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x000000000013dd8f : adc byte ptr [rbp + 0x316c75c0], al ; ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000029869 : adc byte ptr [rbp + rcx*4 - 0x7c], cl ; and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000001309f4 : adc byte ptr [rbp - 0x117bf040], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x000000000013afb9 : adc byte ptr [rbp - 0x14], dh ; mov eax, dword ptr [rax + 0x20] ; test eax, eax ; je 0x13afde ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019411c : adc byte ptr [rbp - 0x6b6f0004], dl ; cld ; inc dword ptr [rax] ; xchg eax, esp ; cld ; push qword ptr [rax - 0x6d] ; cld ; jmp rax
0x0000000000193e80 : adc byte ptr [rbp - 4], dl ; call qword ptr [rax + 0x10fffc56]
0x0000000000079947 : adc byte ptr [rbx + 0x16], dh ; lea rdx, qword ptr [rax + 1] ; mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000010bda5 : adc byte ptr [rbx + 0xc882], cl ; add byte ptr [rbx - 0x48f0f440], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010c265 : adc byte ptr [rbx + 0xc882], cl ; add byte ptr [rbx - 0x48f0f540], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010bf65 : adc byte ptr [rbx + 0xc882], cl ; add byte ptr [rbx - 0x48f0f640], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010bed5 : adc byte ptr [rbx + 0xc882], cl ; add byte ptr [rbx - 0x48f0f740], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010c125 : adc byte ptr [rbx + 0xc882], cl ; add byte ptr [rbx - 0x48f0f840], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010c1c5 : adc byte ptr [rbx + 0xc882], cl ; add byte ptr [rbx - 0x48f0f940], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010c2f5 : adc byte ptr [rbx + 0xc882], cl ; add byte ptr [rbx - 0x48f0fa40], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010c425 : adc byte ptr [rbx + 0xc882], cl ; add byte ptr [rbx - 0x48f0fb40], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010bff5 : adc byte ptr [rbx + 0xc882], cl ; add byte ptr [rbx - 0x48f0fc40], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010be35 : adc byte ptr [rbx + 0xc882], cl ; add byte ptr [rbx - 0x48f0fd40], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010c085 : adc byte ptr [rbx + 0xc882], cl ; add byte ptr [rbx - 0x48f0fe40], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000001aca73 : adc byte ptr [rbx + 0xe], ah ; or byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; and al, 0x31 ; add dword ptr [rax], eax ; loopne 0x1acab4 ; cmc ; jmp qword ptr [rcx]
0x00000000001ad543 : adc byte ptr [rbx + 0xe], ah ; or byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; hlt ; cmp eax, dword ptr [rcx] ; add al, ah ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001ae93b : adc byte ptr [rbx + 0xe], ah ; or byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; add qword ptr [r8], r8 ; clc ; scasd eax, dword ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae9b3 : adc byte ptr [rbx + 0xe], ah ; or byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rax ; add dword ptr [rax], eax ; nop ; mov al, 0xf5 ; jmp qword ptr [rcx]
0x00000000001acaa3 : adc byte ptr [rbx + 0xe], ah ; or byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; xor dword ptr [rcx], eax ; add byte ptr [rax + 0x23], al ; cmc ; jmp qword ptr [rcx]
0x00000000001ac203 : adc byte ptr [rbx + 0xe], ah ; or byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rax + rbp + 0xbb00001], dh ; cmc ; jmp rcx
0x000000000007997e : adc byte ptr [rbx + 0xf], dh ; lea rdx, qword ptr [rax + 1] ; mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000007b517 : adc byte ptr [rbx + 6], dh ; movzx eax, byte ptr [rax] ; ret
0x000000000018a07c : adc byte ptr [rbx - 0x2c1f0006], ch ; cli ; jmp rax
0x0000000000130d4d : adc byte ptr [rbx - 0x3d], bl ; mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x00000000000bcdcf : adc byte ptr [rbx - 0x48], bl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008b530 : adc byte ptr [rbx - 0x48], bl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000001942e8 : adc byte ptr [rbx - 0x6d7f0004], dl ; cld ; call qword ptr [rax]
0x0000000000193810 : adc byte ptr [rbx - 4], al ; call rax
0x0000000000193e90 : adc byte ptr [rbx - 4], bl ; call qword ptr [rax + 0x10fffc5c]
0x0000000000193e3c : adc byte ptr [rbx - 4], dl ; call qword ptr [rax + 0x10fffc54]
0x00000000001932e0 : adc byte ptr [rbx - 5], bh ; push qword ptr [rax + 0x50fffb7c] ; jle 0x1932f1 ; jmp qword ptr [rax]
0x0000000000193724 : adc byte ptr [rbx], ah ; cld ; call qword ptr [rax]
0x0000000000193754 : adc byte ptr [rbx], bl ; cld ; jmp rax
0x000000000007594a : adc byte ptr [rcx + 0x2b], cl ; push rdi ; or byte ptr [rax - 0x3f], cl ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000000001b5c90 : adc byte ptr [rcx + 0xe], al ; or byte ptr [rax + 0xb], cl ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; ret
0x00000000001a9a3c : adc byte ptr [rcx + 0xe], al ; or byte ptr [rax + rax], cl ; add ah, ch ; add byte ptr [rcx], al ; add byte ptr [rax + 0x17], ch ; call qword ptr [rsi]
0x00000000001b5be7 : adc byte ptr [rcx + 0xe], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; pushfq ; ret 1
0x00000000001b5bb3 : adc byte ptr [rcx + 0xe], al ; or byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; ret 1
0x00000000001b5a48 : adc byte ptr [rcx + 0xe], al ; or byte ptr [rbx + 0xb], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cld ; rol byte ptr [rcx], 0 ; pop rax ; ret 0xfff7
0x00000000001a7163 : adc byte ptr [rcx + 0xe], cl ; or byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; adc al, 0xd8 ; add byte ptr [rax], al ; xor byte ptr [rbx - 0xf], cl ; jmp qword ptr [rcx]
0x0000000000032e98 : adc byte ptr [rcx + rcx*4 + 0x75], cl ; sbb byte ptr [rax - 0x77], cl ; sub cl, ch ; ret
0x0000000000088e4b : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000000888bb : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000001940fc : adc byte ptr [rcx - 0x676f0004], bl ; cld ; call qword ptr [rax]
0x00000000000e921a : adc byte ptr [rcx - 0x75], cl ; or byte ptr [rax + 0x63], r9b ; ret
0x0000000000193ea0 : adc byte ptr [rcx - 4], ah ; call qword ptr [rax + 0x10fffc62]
0x0000000000193e4c : adc byte ptr [rcx - 4], bl ; call qword ptr [rax + 0x10fffc5a]
0x0000000000193900 : adc byte ptr [rcx - 4], cl ; jmp rax
0x0000000000193dc8 : adc byte ptr [rcx - 4], dh ; call qword ptr [rax + 0x10fffc70]
0x00000000001aa9fd : adc byte ptr [rcx], al ; add byte ptr [rax + 0x16], al ; hlt ; jmp qword ptr [rcx]
0x00000000001aaa15 : adc byte ptr [rcx], al ; add byte ptr [rax + 0x16], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001aaa2d : adc byte ptr [rcx], al ; add byte ptr [rax + 0x16], dh ; hlt ; jmp qword ptr [rcx]
0x0000000000109731 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10974e ; ret
0x00000000000aa806 : adc byte ptr [rcx], al ; jne 0xaa831 ; movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xaa811 ; sub rax, 1 ; ret
0x0000000000021e39 : adc byte ptr [rcx], bh ; adc byte ptr [rax + 0xf], cl ; ret
0x000000000007eeaa : adc byte ptr [rcx], ch ; rol bl, 1 ; nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000000be4e3 : adc byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002a695 : adc byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000fe46d : adc byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0xfe4a9 ; ret
0x0000000000132bbf : adc byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000004540b : adc byte ptr [rcx], dh ; test byte ptr [rax - 0x3f], 0xc8 ; adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000110a03 : adc byte ptr [rdi + 0x2000004], bh ; call rax
0x00000000001a8352 : adc byte ptr [rdi + 0xe], al ; or byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; add al, 0xea ; add byte ptr [rax], al ; adc byte ptr [rcx], ah ; call rsi
0x00000000001b2f8a : adc byte ptr [rdi + 0xe], al ; or byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; cmp al, 0x96 ; add dword ptr [rax], eax ; add rdi, rsi ; call rsi
0x00000000001a885a : adc byte ptr [rdi + 0xe], al ; or byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; or al, 0xef ; add byte ptr [rax], al ; sbb byte ptr [rcx], bh ; call rsi
0x00000000001af7d2 : adc byte ptr [rdi + 0xe], al ; or byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; test byte ptr [rsi + 1], bl ; add al, dh ; jrcxz 0x1af7e9 ; call rsi
0x000000000019410c : adc byte ptr [rdi - 0x696f0004], dl ; cld ; call qword ptr [rax]
0x0000000000193e5c : adc byte ptr [rdi - 4], bl ; call qword ptr [rax + 0x10fffc60]
0x0000000000193dd8 : adc byte ptr [rdi - 4], ch ; call qword ptr [rax + 0x10fffc6e]
0x0000000000008fd1 : adc byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + rax], bl ; add byte ptr [rax], al ; ret
0x000000000019373c : adc byte ptr [rdi], bl ; cld ; inc dword ptr [rax] ; and esp, edi ; call rax
0x000000000008b6c3 : adc byte ptr [rdi], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x0000000000165b68 : adc byte ptr [rdi], cl ; test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x000000000016ed33 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000148db1 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000148ea1 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000148cc1 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001505db : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001502df : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014f9df : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014fcdf : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014f3d7 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000149709 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x0000000000149261 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000149441 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000149621 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000149531 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000148e73 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148f63 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148d83 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014f684 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000150284 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000150584 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014fc84 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014f37c : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ca0d : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c82d : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d205 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c125 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014d025 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000148c93 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148ab3 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148ba3 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000079103 : adc byte ptr [rdx + 0x2a], dh ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000001b7ca2 : adc byte ptr [rdx + 0xe], al ; or byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rbx + 1], dl ; add byte ptr [rax], ah ; push rcx ; clc ; call rdi
0x00000000001af04a : adc byte ptr [rdx + 0xe], al ; or byte ptr [rdx + 0xb], cl ; adc al, 0 ; add byte ptr [rax], al ; cld ; push rsi ; add dword ptr [rax], eax ; pop rax ; ret 0xfff5
0x00000000001ad0fb : adc byte ptr [rdx + 0xe], bl ; or byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rdi + rsi + 0x3c980001], ch ; cmc ; call qword ptr [rdi]
0x00000000000ad194 : adc byte ptr [rdx + 1], ch ; xor r8d, r8d ; push 0 ; lea rcx, qword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000001aa5e3 : adc byte ptr [rdx + rax - 0x79e7f1b8], cl ; add ecx, dword ptr [rax + 0xe] ; and byte ptr [rbx + 0xa7a0204], al ; ret
0x000000000019add3 : adc byte ptr [rdx + rax - 0x79e7f1bc], cl ; add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa410204], al ; ret
0x00000000001ada9b : adc byte ptr [rdx + rax - 0x79e7f1bc], cl ; add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rsp + rbp*2], 0xa ; ret
0x00000000001a1efb : adc byte ptr [rdx + rax - 0x79e7f1bf], cl ; add eax, dword ptr [rbx + 0xe] ; and byte ptr [rbx + 0xa4d0204], al ; ret
0x0000000000186034 : adc byte ptr [rdx + rsi*8], cl ; inc dword ptr [rax + 0xc] ; push qword ptr [rax + 0xc] ; jmp qword ptr [rax - 0x2f000df4]
0x00000000000794d3 : adc byte ptr [rdx - 0x18], dh ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000001942f0 : adc byte ptr [rdx - 0x664f0004], dl ; cld ; push qword ptr [rax] ; cdq ; cld ; jmp qword ptr [rax + 0x20fffc98]
0x0000000000193e64 : adc byte ptr [rdx - 4], ah ; call qword ptr [rax + 0x10fffc63]
0x0000000000193dc0 : adc byte ptr [rdx - 4], dh ; call qword ptr [rax + 0x10fffc71]
0x0000000000193e78 : adc byte ptr [rdx - 4], dl ; call qword ptr [rax + 0x10fffc53]
0x00000000001932a0 : adc byte ptr [rdx - 5], ah ; inc dword ptr [rax] ; movsxd rdi, ebx ; push rax ; movsxd rdi, ebx ; jmp qword ptr [rax]
0x000000000005cc70 : adc byte ptr [rdx], 0 ; movzx ebx, bl ; movsxd rax, dword ptr [rcx + rbx*4] ; add rax, rcx ; jmp rax
0x00000000000007b6 : adc byte ptr [rdx], ah ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x000000000016a2ec : adc byte ptr [rdx], al ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000001937b0 : adc byte ptr [rdx], al ; cld ; jmp rax
0x000000000012d696 : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; add bh, al ; adc al, 0x10 ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000016c2bb : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001937a8 : adc byte ptr [rip + 0x16d0fffc], 0xfc ; call qword ptr [rax]
0x00000000000a0873 : adc byte ptr [rsi + 0x44], ah ; mov dword ptr [rdi + 4], ebx ; mov byte ptr [rdi + 6], r8b ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a0863 : adc byte ptr [rsi + 0x44], ah ; mov dword ptr [rdi + 4], ebx ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000194114 : adc byte ptr [rsi - 0x6a6f0004], dl ; cld ; call qword ptr [rax]
0x000000000016ed03 : adc byte ptr [rsi - 0x70], ah ; nop word ptr cs:[rax + rax] ; xor rax, rax ; ret
0x0000000000193898 : adc byte ptr [rsi - 4], al ; push rax ; cld ; call rax
0x0000000000193e98 : adc byte ptr [rsi - 4], bl ; call qword ptr [rax + 0x10fffc5f]
0x0000000000193868 : adc byte ptr [rsi - 4], cl ; call qword ptr [rax]
0x0000000000193e44 : adc byte ptr [rsi - 4], dl ; call qword ptr [rax + 0x10fffc57]
0x00000000001862e4 : adc byte ptr [rsi], ah ; jmp qword ptr [rax]
0x0000000000193e54 : adc byte ptr [rsp + rdi*8 - 1], bl ; nop ; pop rbp ; cld ; call qword ptr [rax]
0x0000000000193864 : adc byte ptr [rsp + rdi*8 - 1], cl ; adc byte ptr [rsi - 4], cl ; call qword ptr [rax]
0x000000000014f687 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000100f3c : adc ch, bl ; and dl, byte ptr [rax + 0xf23fa80] ; xchg eax, ebp ; ret 0xc084
0x0000000000102f5a : adc ch, byte ptr [rax + rax] ; add rsp, 8 ; ret
0x0000000000102efb : adc ch, byte ptr [rax + rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010a562 : adc ch, byte ptr [rcx + 0x2b] ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000183cf9 : adc ch, byte ptr [rip + 0x8acc8c6] ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000019f6b1 : adc ch, ch ; call qword ptr [rax]
0x00000000000a1095 : adc cl, byte ptr [rax + 0x29] ; ret
0x00000000000bc9dd : adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000bc95f : adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x0000000000073066 : adc cl, byte ptr [rax + 0x39] ; enter 0xf48, 0x4f ; ror dword ptr [rax - 0x7b], -0x2e ; jne 0x7306e ; ret
0x000000000007d026 : adc cl, byte ptr [rax + 0x39] ; enter 0xf48, 0x4f ; ror dword ptr [rax - 0x7b], -0x2e ; jne 0x7d02e ; ret
0x0000000000055a8a : adc cl, byte ptr [rax + rax] ; add rsp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x00000000000aa8f3 : adc cl, byte ptr [rax - 0x2f] ; call 0xffffffffc30f364f
0x00000000000a6ae3 : adc cl, byte ptr [rax - 0x73] ; jg 0xa6b05 ; jne 0xa717b ; ret
0x00000000000a81c7 : adc cl, byte ptr [rax - 0x73] ; jg 0xa81e9 ; jne 0xa898b ; ret
0x000000000002de1b : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x75] ; push rdx ; mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000002ddeb : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x75] ; push rdx ; pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000004b00f : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x64] ; ret 0x4c40
0x000000000007f275 : adc cl, byte ptr [rax - 0x75] ; or byte ptr [r8 + 0x39], r9b ; sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x000000000002de1e : adc cl, byte ptr [rax - 0x75] ; push rdx ; mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000002ddee : adc cl, byte ptr [rax - 0x75] ; push rdx ; pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x0000000000089d6c : adc cl, byte ptr [rax - 0x77] ; ret 0x348
0x00000000000ffbb8 : adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000aca5d : adc cl, byte ptr [rax - 0x7d] ; jmp 0xffffffff8b473e77
0x0000000000100f4e : adc cl, byte ptr [rax - 0x7d] ; ret
0x000000000009d851 : adc cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000000b90fa : adc cl, byte ptr [rax - 0x7d] ; ret 0x4804
0x0000000000116665 : adc cl, byte ptr [rax - 0x7d] ; ror byte ptr [rax + 0x48], 0x39 ; sal byte ptr [rdx - 0xf], 1 ; xor eax, eax ; ret
0x00000000000868cd : adc cl, byte ptr [rax - 0x7d] ; ror byte ptr [rax], 0x48 ; cmp edx, eax ; ja 0x868d5 ; xor eax, eax ; ret
0x000000000008bd75 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000000e4dea : adc cl, byte ptr [rax - 9] ; ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x00000000000a2f1f : adc cl, byte ptr [rcx + 5] ; movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f3f : adc cl, byte ptr [rcx + 6] ; movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f5f : adc cl, byte ptr [rcx + 7] ; movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000a5aaf : adc cl, byte ptr [rcx + 8] ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a5b90 : adc cl, byte ptr [rcx + 8] ; movlpd qword ptr [rdx + 8], xmm1 ; xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00000000000a2da5 : adc cl, byte ptr [rcx + 8] ; movlpd qword ptr [rdx], xmm0 ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x0000000000126a65 : adc cl, byte ptr [rdi] ; mov dh, 0x47 ; add ecx, eax ; loopne 0x126a7e ; cdqe ; shr rax, 4 ; ret
0x0000000000132a0a : adc dh, byte ptr [rax + rax + 0xfc08500] ; xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000e1fda : adc dh, byte ptr [rax - 0x76b70001] ; ret 0x848b
0x000000000014d5d9 : adc dh, byte ptr [rbx - 0xc] ; movsxd rax, ecx ; add rax, rdi ; sub rax, rdx ; ret
0x00000000000ad4bc : adc dh, byte ptr [rcx] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000010a458 : adc dh, byte ptr [rdi + 0xd] ; lea rax, qword ptr [rip + 0x7e7be] ; movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000018a0a4 : adc dl, 0xfa ; jmp rax
0x000000000018610d : adc dl, dh ; call qword ptr [rax]
0x0000000000186111 : adc dl, dh ; jmp qword ptr [rax]
0x00000000000d14ee : adc dword ptr [rax + 0x17b80], 0x8348a874 ; ret
0x0000000000084555 : adc dword ptr [rax + 0x39], ecx ; fmul dword ptr [rax - 0x77] ; ret 0x3075
0x00000000000f71b6 : adc dword ptr [rax + 0x39], ecx ; fmul dword ptr [rdi] ; lahf ; rcr byte ptr [rbx - 0x3d], 0x90 ; xor eax, eax ; pop rbx ; ret
0x000000000013533c : adc dword ptr [rax + 0x4000000], 0 ; add byte ptr [rax], al ; mov dword ptr [rbx + 0x98], eax ; jmp 0x13531f
0x000000000008d71f : adc dword ptr [rax + 0x437402fa], eax ; cmp dl, 3 ; je 0x8d74d ; movsx eax, dl ; ret
0x000000000008d71f : adc dword ptr [rax + 0x437402fa], eax ; cmp dl, 3 ; je 0x8d74e ; movsx eax, dl ; ret
0x000000000007c722 : adc dword ptr [rax + 0x5b000000], 0x5d ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000165f42 : adc dword ptr [rax + 0x66c30251], ecx ; nop dword ptr [rax + rax] ; mov dword ptr [rcx], edx ; ret
0x00000000000f7136 : adc dword ptr [rax + 9], edi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a23c : adc dword ptr [rax + rcx*2 + 0x33], esp ; adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000020743 : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x000000000008fb62 : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x00000000000645a3 : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000003561d : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000122ed6 : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rdi, qword ptr [rip + 0x2a2815] ; call rax
0x00000000000453e4 : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x00000000000704bf : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x30] ; call rax
0x000000000007e3bf : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x19b0] ; call rax
0x000000000007e879 : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x1e6a] ; call rax
0x000000000007ed39 : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x232a] ; call rax
0x00000000000707a9 : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x2ba] ; call rax
0x000000000007cd1f : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x310] ; call rax
0x000000000007cf8f : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x580] ; call rax
0x00000000000f76ac : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000047bbf : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov edi, dword ptr [rsp + 0x3c] ; call rax
0x000000000003a86e : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x000000000002f5f3 : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x00000000000645cc : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x35c993] ; call rax
0x000000000005c934 : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x36462b] ; call rax
0x000000000005c318 : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x364c47] ; call rax
0x0000000000059694 : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x3678cb] ; call rax
0x00000000000509f0 : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x37056f] ; call rax
0x000000000004db14 : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x37344b] ; call rax
0x00000000001174f5 : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x11753f ; call rax
0x000000000004dae3 : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x000000000012b799 : adc dword ptr [rax + rcx*2 + 0x33], esp ; cmp al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000075844 : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000000a6abe : adc dword ptr [rax - 0x73], ecx ; jg 0xa6adf ; jne 0xa717b ; ret
0x00000000000a81a2 : adc dword ptr [rax - 0x73], ecx ; jg 0xa81c3 ; jne 0xa898b ; ret
0x00000000000726ce : adc dword ptr [rax - 0x73], ecx ; jno 0x726e2 ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000002e103 : adc dword ptr [rax - 0x75], ecx ; adc eax, 0x392e25 ; mov qword ptr fs:[rdx], rax ; ret
0x00000000000798b8 : adc dword ptr [rax - 0x75], ecx ; and al, 8 ; cmp qword ptr [rax + 0x30], 0 ; je 0x798db ; add rsp, 0x38 ; ret
0x00000000001725ee : adc dword ptr [rax - 0x75], ecx ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000080407 : adc dword ptr [rax - 0x77], ecx ; add eax, 0x343389 ; add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000b5e15 : adc dword ptr [rax - 0x77], ecx ; lodsb al, byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000003a79e : adc dword ptr [rax - 0x77], ecx ; ret
0x0000000000080995 : adc dword ptr [rax - 0x77], ecx ; ret 0x8348
0x000000000007ee5c : adc dword ptr [rax - 0x77], ecx ; ret 0x8b48
0x00000000000b59d3 : adc dword ptr [rax - 0x77], ecx ; test byte ptr [rax + rcx*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000011708b : adc dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp - 0x11], cl ; ret
0x000000000006640e : adc dword ptr [rax - 0x7d], ecx ; ret
0x0000000000030bce : adc dword ptr [rax - 0x7d], ecx ; ret 0x4408
0x00000000000aaec7 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4504
0x00000000000b9097 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4804
0x000000000008b6c7 : adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x000000000014dc2b : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x00000000000646ab : adc dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; or eax, 0x1208af ; movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x0000000000112fe9 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000014a1b7 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c129 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017258b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; ret
0x00000000000f6e6d : adc dword ptr [rax], eax ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf6ebd ; ret
0x000000000009c628 : adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; ret 0x5a8d
0x000000000009c64e : adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; ret 0x8d44
0x0000000000089920 : adc dword ptr [rax], eax ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002a48f : adc dword ptr [rax], eax ; mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x00000000000299b4 : adc dword ptr [rax], eax ; mov rdi, rbx ; call r12
0x000000000006d374 : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000006cc22 : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000006da0b : adc dword ptr [rax], eax ; movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x000000000006dac1 : adc dword ptr [rax], eax ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x000000000006d282 : adc dword ptr [rax], eax ; movzx eax, al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x0000000000145125 : adc dword ptr [rax], ebp ; add al, ch ; ret
0x0000000000000447 : adc dword ptr [rax], edx ; adc al, 0x20 ; add byte ptr [rcx + 0x5000c81], cl ; jl 0x473 ; sbb al, 0xc ; ret 0x4412
0x00000000000bfc84 : adc dword ptr [rax], esi ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000002d9cc : adc dword ptr [rbp + 0x230a74d2], eax ; ja 0x2d9f4 ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000002da17 : adc dword ptr [rbp + 0x23d474d2], eax ; ja 0x2da3e ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x00000000000f9963 : adc dword ptr [rbp + 0x2c], esi ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001821b7 : adc dword ptr [rbp - 0x1f57cada], ebp ; sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000109263 : adc dword ptr [rbx + rbp], edi ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109a63 : adc dword ptr [rbx + rbp], esi ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109563 : adc dword ptr [rcx + 0x2b], edi ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000100d3e : adc dword ptr [rcx + 0x800008], eax ; add byte ptr [rax + 1], bh ; add rsp, 8 ; ret
0x000000000013eabe : adc dword ptr [rcx], eax ; ja 0x13eaf2 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000006484f : adc dword ptr [rcx], ecx ; adc al, byte ptr [rax] ; movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x0000000000109f63 : adc dword ptr [rdi + 0x2b], ebp ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000010a763 : adc dword ptr [rdi + 0x2b], esp ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000085763 : adc dword ptr [rdi - 0x389bffcd], esi ; add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000034b53 : adc dword ptr [rdi], eax ; and rax, rdx ; movq xmm0, rax ; ret
0x0000000000170330 : adc dword ptr [rdi], ecx ; test byte ptr [rbx], bl ; add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000108c63 : adc dword ptr [rdx - 0x2708ffd5], eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109863 : adc dword ptr [rsi + 0x2b], esi ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000009c6e7 : adc dword ptr cs:[rax], eax ; add byte ptr [rbp - 0x77], cl ; ret 0x8d44
0x000000000014a1b6 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000102ef2 : adc eax, 0x10c48348 ; lea rax, qword ptr [rip + 0x2c12f2] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ab04a : adc eax, 0x10ef8348 ; add rax, rdi ; ret
0x000000000006cc1f : adc eax, 0x11869c ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000162898 : adc eax, 0x120c3 ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000162873 : adc eax, 0x120e8 ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000160338 : adc eax, 0x14623 ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000016031e : adc eax, 0x1463d ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000002ed20 : adc eax, 0x15135f ; movsxd rax, dword ptr [rdx + rcx*4] ; add rax, rdx ; jmp rax
0x000000000002ec33 : adc eax, 0x151420 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000002e880 : adc eax, 0x15177b ; movsxd rax, dword ptr [rdx + rcx*4] ; add rax, rdx ; jmp rax
0x0000000000020c35 : adc eax, 0x152906 ; mov eax, eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000001937a9 : adc eax, 0x16d0fffc ; cld ; call qword ptr [rax]
0x00000000001937e9 : adc eax, 0x1740fffc ; cld ; lcall ptr [rax] ; cld ; jmp rax
0x00000000001721b6 : adc eax, 0x20478b48 ; test rax, rax ; je 0x1721d1 ; call rax
0x00000000001506c8 : adc eax, 0x24293 ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000001506a3 : adc eax, 0x242b8 ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014ed18 : adc eax, 0x25c43 ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014ecfe : adc eax, 0x25c5d ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014d318 : adc eax, 0x27643 ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014d2f3 : adc eax, 0x27668 ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000013abab : adc eax, 0x28b3f0 ; cmp rax, rdx ; je 0x13abce ; add rsp, 8 ; ret
0x000000000013aae9 : adc eax, 0x28b4b2 ; mov qword ptr fs:[rax], rdx ; ret
0x0000000000130462 : adc eax, 0x290719 ; jmp qword ptr [rdx + rax*8]
0x000000000014b348 : adc eax, 0x29613 ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014b32e : adc eax, 0x2962d ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000119422 : adc eax, 0x2a7a51 ; neg eax ; mov dword ptr fs:[rdx], eax ; mov rax, -1 ; ret
0x0000000000119352 : adc eax, 0x2a7b21 ; neg eax ; mov dword ptr fs:[rdx], eax ; mov rax, -1 ; ret
0x0000000000109e42 : adc eax, 0x2b7031 ; neg eax ; mov dword ptr fs:[rdx], eax ; mov rax, -1 ; ret
0x0000000000109d92 : adc eax, 0x2b70e1 ; neg eax ; mov dword ptr fs:[rdx], eax ; mov rax, -1 ; ret
0x0000000000109ce2 : adc eax, 0x2b7191 ; neg eax ; mov dword ptr fs:[rdx], eax ; mov rax, -1 ; ret
0x0000000000109bd2 : adc eax, 0x2b72a1 ; neg eax ; mov dword ptr fs:[rdx], eax ; mov rax, -1 ; ret
0x000000000010b0e5 : adc eax, 0x2b92ce ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000000ff402 : adc eax, 0x2c1a71 ; neg eax ; mov dword ptr fs:[rdx], eax ; mov rax, -1 ; ret
0x00000000000e8f52 : adc eax, 0x2d8051 ; mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x00000000000c04ba : adc eax, 0x300989 ; mov dword ptr [rdx], eax ; xor edx, edx ; add rsp, 8 ; mov rax, rdx ; ret
0x00000000000c04a4 : adc eax, 0x303697 ; jne 0xc04c6 ; mov rax, rdx ; add rsp, 8 ; ret
0x000000000008b892 : adc eax, 0x3356c1 ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000008b612 : adc eax, 0x335941 ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000008b55a : adc eax, 0x3359f9 ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000007b004 : adc eax, 0x345e6f ; neg eax ; mov dword ptr fs:[rdx], eax ; mov rax, -1 ; ret
0x0000000000139c52 : adc eax, 0x3609 ; mov rdi, rbx ; call qword ptr [rax]
0x000000000002cb15 : adc eax, 0x387a3b00 ; jae 0x2cb3b ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x000000000002e106 : adc eax, 0x392e25 ; mov qword ptr fs:[rdx], rax ; ret
0x000000000001fa3c : adc eax, 0x3a68c7 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000001372ef : adc eax, 0x52d8c ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000003f78d : adc eax, 0x590ff200 ; shl byte ptr [rdi + rax*8], 0x22 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000003c57d : adc eax, 0x590ff300 ; shl byte ptr [rdi + rax*8], 0x22 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000a6b48 : adc eax, 0x621850f ; add byte ptr [rax], al ; ret
0x0000000000121aa0 : adc eax, 0x6727b ; mov eax, dword ptr [rdx + rax*8 + 4] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a825c : adc eax, 0x71d850f ; add byte ptr [rax], al ; ret
0x000000000013dbea : adc eax, 0x7402f883 ; jo 0x13dc32 ; ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000003b9f4 : adc eax, 0x7c384000 ; adc eax, 0x9f850f00 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000012650a : adc eax, 0x8303eec1 ; out dx, al ; add dword ptr [rax - 0x78], eax ; ja 0x126521 ; ret
0x00000000000afba6 : adc eax, 0x841f0f66 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4104
0x0000000000036f3a : adc eax, 0x88c48148 ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000f4d0f : adc eax, 0x93c14 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000f4bc8 : adc eax, 0x93c9b ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000f3ad8 : adc eax, 0x94c0b ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000f36c8 : adc eax, 0x94f5b ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000003b9f9 : adc eax, 0x9f850f00 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000e603d : adc eax, 0xa1e52 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000e343e : adc eax, 0xa49a9 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000da814 : adc eax, 0xad477 ; movzx r15d, r15b ; movsxd rax, dword ptr [rdx + r15*4] ; add rax, rdx ; jmp rax
0x00000000000d501c : adc eax, 0xb2993 ; movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000d4a5b : adc eax, 0xb2ed4 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000d3075 : adc eax, 0xb47ca ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000d2a8b : adc eax, 0xb4d34 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000cf6c3 : adc eax, 0xb80a8 ; mov esi, esi ; movsxd rax, dword ptr [rdx + rsi*4] ; add rax, rdx ; jmp rax
0x000000000013d7ea : adc eax, 0xb82b8840 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000cefb6 : adc eax, 0xb83d9 ; movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x00000000000cec44 : adc eax, 0xb86f7 ; mov esi, esi ; movsxd rax, dword ptr [rdx + rsi*4] ; add rax, rdx ; jmp rax
0x000000000003cd41 : adc eax, 0xc0834900 ; add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x00000000000c191a : adc eax, 0xc5195 ; movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000c1665 : adc eax, 0xc5382 ; movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000c59f5 : adc eax, 0xca89000c ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000965a8 : adc eax, 0xde3b3 ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000096583 : adc eax, 0xde3d8 ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000012f24e : adc eax, 0xe00d ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000093ea8 : adc eax, 0xe0ab3 ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000093e8e : adc eax, 0xe0acd ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000000a0938 : adc eax, 0xe54e3 ; mov r9d, r9d ; movsxd rax, dword ptr [r10 + r9*4] ; add rax, r10 ; jmp rax
0x00000000000a07e6 : adc eax, 0xe55ed ; movsxd rax, dword ptr [r10 + rax*4] ; add rax, r10 ; jmp rax
0x0000000000087b53 : adc eax, 0xfe0e8 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000005779b : adc eax, 0xfffffd22 ; add rax, rdx ; jmp rax
0x00000000000bc8c9 : adc eax, 0xffffff52 ; test rax, rax ; cmove rax, rdx ; add rsp, 0x28 ; ret
0x00000000000bc7e9 : adc eax, 0xffffff72 ; test rax, rax ; cmove rax, rdx ; add rsp, 0x28 ; ret
0x000000000009191f : adc eax, dword ptr [rax + 0x157701fa] ; jb 0x91933 ; mov byte ptr [rdi], cl ; ret
0x000000000006da09 : adc eax, dword ptr [rax + 0x63480011] ; or al, 0x8f ; add rcx, rdi ; jmp rcx
0x000000000005c38f : adc eax, dword ptr [rax - 0x78] ; sub byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000007ba87 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000006f731 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000014d98e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014bf49 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000000c46a : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000fe5ba : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfe607 ; ret
0x00000000000431ee : adc eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000004e8c1 : adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rax + rcx*4] ; lea rcx, qword ptr [rip + 0x2b2] ; add rax, rcx ; jmp rax
0x000000000004bb11 : adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rax + rcx*4] ; lea rcx, qword ptr [rip + 0xb87] ; add rax, rcx ; jmp rax
0x000000000004eed3 : adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rax + rcx*4] ; lea rcx, qword ptr [rip - 0x360] ; add rax, rcx ; jmp rax
0x000000000004f047 : adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rax + rcx*4] ; lea rcx, qword ptr [rip - 0x4d4] ; add rax, rcx ; jmp rax
0x000000000004dd72 : adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, rcx ; xor r8d, r8d ; mov edx, 1 ; jmp rax
0x000000000010964d : adc eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10969d ; ret
0x00000000000a2e9b : adc eax, dword ptr [rdx] ; mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x00000000000a2ebb : adc eax, dword ptr [rdx] ; mov ax, word ptr [rcx + 8] ; mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x00000000000a2edb : adc eax, dword ptr [rdx] ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000a2efb : adc eax, dword ptr [rdx] ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000000a2d58 : adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x00000000000a2daa : adc eax, dword ptr [rdx] ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f1b : adc eax, dword ptr [rdx] ; movlpd xmm1, qword ptr [rcx + 5] ; movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f3b : adc eax, dword ptr [rdx] ; movlpd xmm1, qword ptr [rcx + 6] ; movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f5b : adc eax, dword ptr [rdx] ; movlpd xmm1, qword ptr [rcx + 7] ; movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000a5aab : adc eax, dword ptr [rdx] ; movlpd xmm1, qword ptr [rcx + 8] ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a5b2c : adc eax, dword ptr [rdx] ; xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x000000000014f37f : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013592c : adc eax, edi ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000a04a8 : adc eax, esi ; add byte ptr [rax], al ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000004ab4c : adc eax, esi ; add eax, dword ptr [rax] ; mov rax, rbx ; add rsp, 0x440 ; pop rbx ; ret
0x0000000000102e63 : adc eax, esp ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000007723b : adc ebx, edi ; or dword ptr [rax], eax ; add rsp, 0x80 ; mov eax, edx ; ret
0x00000000000f7f34 : adc ecx, dword ptr [rax + 0x63] ; sar byte ptr [rax + 0x1c], cl ; syscall ; neg eax ; ret
0x000000000007991c : adc ecx, dword ptr [rax - 0x73] ; add qword ptr [rax + 0xf], rax ; mov dh, 0xc7 ; mov qword ptr [rsi + 0x28], rcx ; mov byte ptr [rdx], dil ; ret
0x00000000000a6b01 : adc ecx, dword ptr [rax - 0x73] ; jg 0xa6b24 ; jne 0xa717b ; ret
0x00000000000a81f5 : adc ecx, dword ptr [rax - 0x73] ; jg 0xa8218 ; jne 0xa898b ; ret
0x000000000002cb1b : adc ecx, dword ptr [rax - 0x75] ; cli ; ret
0x00000000000fa5fb : adc ecx, dword ptr [rax - 0x77] ; fucompi st(0) ; sub al, 0x34 ; stc ; dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x000000000007deda : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x00000000000db19a : adc ecx, dword ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x40], cl ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000023ce5 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000009b29b : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000002ff5b : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4901
0x00000000000ac6c4 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x8b04
0x0000000000023bc5 : adc ecx, dword ptr [rax - 0x7d] ; rol dword ptr [rax + rcx*2], -0x7d ; ret
0x0000000000098c04 : adc ecx, dword ptr [rax - 0x7d] ; rol dword ptr [rcx], 0x48 ; sub esi, 1 ; jne 0x98c10 ; xor edi, edi ; mov rax, rdi ; ret
0x0000000000035d24 : adc ecx, dword ptr [rbx + 0x802484] ; add byte ptr [rax], al ; add rsp, 0x108 ; ret
0x000000000004815c : adc ecx, dword ptr [rcx + 0xc6348c1] ; mov cs, word ptr [rax + 1] ; int1 ; cmp r9d, 0x2f ; jmp rcx
0x0000000000071d89 : adc ecx, dword ptr [rcx + rcx*4 - 0x19] ; mov rax, rdi ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000117085 : adc ecx, dword ptr [rcx - 0x77] ; ror dword ptr [rcx - 0x75], 1 ; adc dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp - 0x11], cl ; ret
0x0000000000097797 : adc ecx, dword ptr [rdi] ; test edx, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000a2f24 : adc ecx, dword ptr [rdx + 5] ; mov rax, rdi ; ret
0x00000000000a2f44 : adc ecx, dword ptr [rdx + 6] ; mov rax, rdi ; ret
0x00000000000a2f64 : adc ecx, dword ptr [rdx + 7] ; mov rax, rdi ; ret
0x00000000000a2dae : adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000000a5b95 : adc ecx, dword ptr [rdx + 8] ; xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x0000000000100ed2 : adc ecx, ebp ; movabs byte ptr [0x841f0f000000], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007def1 : adc edi, dword ptr [rax + 1] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003639c : adc edi, dword ptr [rax + 1] ; shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000153a19 : adc edi, esp ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000494fa : adc edx, eax ; mov qword ptr [rdi + r11*8 + 8], r9 ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000004862e : adc esi, dword ptr [rax + rcx + 0x48] ; mov eax, dword ptr [rax + rsi*8] ; mov qword ptr [rcx + rsi*8], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000048493 : adc esi, dword ptr [rax + rcx + 0x49] ; mov edx, dword ptr [rax + rax*8] ; mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; pop rbx ; ret
0x000000000007d2d3 : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000004c56c : adc esi, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000019379d : adc esp, edi ; jmp rax
0x00000000001169d3 : adc esp, edi ; sub al, byte ptr [rax] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; jmp rax
0x000000000014f562 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000000446 : adc qword ptr [rax], r10 ; adc al, 0x20 ; add byte ptr [rcx + 0x5000c81], cl ; jl 0x474 ; sbb al, 0xc ; ret 0x4412
0x000000000009c6c1 : adc qword ptr [rax], r8 ; add byte ptr [rbp - 0x77], cl ; ret 0x5a8d
0x000000000014c0b0 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000048895 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000000494f9 : adc rdx, r8 ; mov qword ptr [rdi + r11*8 + 8], r9 ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000193798 : adc spl, dil ; call qword ptr [rax - 0x1f0003ef]
0x000000000019644f : add ah, ah ; and dh, dl ; dec esp ; add dword ptr es:[rax], eax ; push rsp ; and esi, edx ; jmp rsp
0x00000000001a8f3b : add ah, ah ; cmc ; add byte ptr [rax], al ; xor byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001ad63b : add ah, ah ; cmp al, 1 ; add byte ptr [rax], al ; pop rcx ; cmc ; jmp qword ptr [rdx]
0x00000000001a773b : add ah, ah ; fld qword ptr [rax] ; add byte ptr [rax - 0x7b], ah ; int1 ; jmp qword ptr [rcx]
0x0000000000195d3f : add ah, ah ; out dx, eax ; inc dword ptr [rax + rdi*8 + 0x6a140000] ; out dx, eax ; jmp rsp
0x00000000001b093b : add ah, ah ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; and byte ptr [rbx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001a643b : add ah, ah ; retf 0 ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a483b : add ah, ah ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; adc dl, dl ; out dx, al ; call qword ptr [rcx]
0x00000000001a8c1b : add ah, al ; add byte ptr [rax], al ; jmp qword ptr [rcx]
0x00000000001b891b : add ah, al ; out dx, eax ; add dword ptr [rax], eax ; loopne 0x1b898e ; clc ; jmp qword ptr [rcx]
0x00000000001b931b : add ah, al ; stc ; add dword ptr [rax], eax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; clc ; jmp qword ptr [rcx]
0x000000000019565f : add ah, al ; sub al, 0xee ; ljmp ptr [rax + rcx*8 + 0x2db40000] ; out dx, al ; call rsp
0x00000000001a9e53 : add ah, bh ; add al, 1 ; add byte ptr [rax + 0x41], cl ; call qword ptr [rdx]
0x000000000019ed13 : add ah, bh ; add byte ptr [rax], al ; add byte ptr [rax], ch ; fsub st(4), st(0) ; jmp qword ptr [rcx]
0x000000000019e053 : add ah, bh ; add byte ptr [rax], r8b ; shr rdx, 1 ; jmp rdi
0x00000000000aacd9 : add ah, bh ; add eax, dword ptr [rax] ; cmp edx, 0xff ; cmove rax, rcx ; pop rbx ; ret
0x00000000000aacbe : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000001a8f53 : add ah, bh ; cmc ; add byte ptr [rax], al ; push rbp ; jmp qword ptr [rcx]
0x00000000001ad453 : add ah, bh ; cmp al, byte ptr [rcx] ; add byte ptr [rax + 0x55], ch ; cmc ; call qword ptr [rdx]
0x00000000001a7253 : add ah, bh ; fadd dword ptr [rax] ; add al, ch ; push rsp ; int1 ; jmp qword ptr [rax]
0x00000000000aad04 : add ah, bh ; inc dword ptr [rbx] ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000001b0953 : add ah, bh ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; cmp byte ptr [rbx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001af053 : add ah, bh ; push rsi ; add dword ptr [rax], eax ; pop rax ; ret 0xfff5
0x00000000001b5a53 : add ah, bh ; rol byte ptr [rcx], 0 ; pop rax ; ret 0xfff7
0x00000000001a0df3 : add ah, bl ; and dword ptr [rax], eax ; add al, ch ; push 0xed ; jmp qword ptr [rsi]
0x00000000001a8b33 : add ah, bl ; int1 ; add byte ptr [rax], al ; test al, 0x46 ; jmp qword ptr [rcx]
0x00000000001a8a33 : add ah, bl ; lock add byte ptr [rax], al ; call 0x221a7c89
0x00000000001aca33 : add ah, bl ; xor byte ptr [rcx], al ; add byte ptr [rax + 0x22], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000193f90 : add ah, byte ptr [rax - 0x606d0004] ; cld ; jmp qword ptr [rdx]
0x000000000016e900 : add ah, byte ptr [rdx - 0xf] ; dec byte ptr [rax + 0x7f] ; jg 0x16e91c ; vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x000000000016eaa6 : add ah, byte ptr [rdx - 0xf] ; dec byte ptr [rax + 0x7f] ; jg 0x16eac2 ; vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x00000000000a2f1c : add ah, byte ptr [rsi + 0xf] ; adc cl, byte ptr [rcx + 5] ; movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f3c : add ah, byte ptr [rsi + 0xf] ; adc cl, byte ptr [rcx + 6] ; movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f5c : add ah, byte ptr [rsi + 0xf] ; adc cl, byte ptr [rcx + 7] ; movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000a5aac : add ah, byte ptr [rsi + 0xf] ; adc cl, byte ptr [rcx + 8] ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a2dab : add ah, byte ptr [rsi + 0xf] ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000001682e3 : add ah, byte ptr [rsi - 0x75] ; add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x00000000000a2e38 : add ah, byte ptr [rsi - 0x75] ; add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000000a2dd4 : add ah, byte ptr [rsi - 0x75] ; add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000a2ebc : add ah, byte ptr [rsi - 0x75] ; or byte ptr [r14 - 0x77], spl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000010b355 : add ah, byte ptr [rsi - 0x7d] ; clc ; push qword ptr [rsi + rax - 0x7d] ; rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x00000000001a9a43 : add ah, ch ; add byte ptr [rcx], al ; add byte ptr [rax + 0x17], ch ; call qword ptr [rsi]
0x00000000001a2a43 : add ah, ch ; nop ; add byte ptr [rax], al ; fmul st(4) ; in eax, dx ; call qword ptr [rdx]
0x00000000001a4943 : add ah, ch ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; shr rsi, cl ; jmp qword ptr [rsi]
0x00000000001acb43 : add ah, ch ; xor dword ptr [rcx], eax ; add byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a8f23 : add ah, cl ; cmc ; add byte ptr [rax], al ; sbb byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001a7723 : add ah, cl ; fld qword ptr [rax] ; add byte ptr [rax - 0x7b], cl ; int1 ; jmp qword ptr [rcx]
0x00000000001b0623 : add ah, cl ; insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; sub byte ptr [rcx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001b0923 : add ah, cl ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; or byte ptr [rbx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001a6423 : add ah, cl ; retf 0 ; sub byte ptr [rdi - 0x10], dh ; jmp qword ptr [rax]
0x00000000001a7023 : add ah, cl ; salc ; add byte ptr [rax], al ; clc ; xchg eax, esi ; cld ; jmp qword ptr [rbx]
0x00000000001ab423 : add ah, cl ; sbb al, byte ptr [rcx] ; add byte ptr [rax], bh ; mov bh, 0xf9 ; call qword ptr [rax]
0x00000000001b2b23 : add ah, cl ; xchg eax, ecx ; add dword ptr [rax], eax ; enter -0x91b, -1 ; ret
0x00000000001b694b : add ah, dh ; iretd ; add dword ptr [rax], eax ; adc byte ptr [rax + rdi*8], cl ; jmp qword ptr [rax]
0x0000000000195e6f : add ah, dh ; mov dl, 0xef ; dec esp ; inc dword ptr [rax] ; add byte ptr [rbx + rsi*4], dh ; out dx, eax ; jmp rsp
0x0000000000195a27 : add ah, dh ; pushfq ; out dx, al ; dec dword ptr [rax - 0x5fdc0000] ; out dx, al ; jmp rsp
0x00000000001aa94b : add ah, dh ; sgdt ptr [rax] ; adc byte ptr [rsi], dl ; hlt ; call qword ptr [rbx]
0x00000000001aaa2b : add ah, dl ; adc byte ptr [rcx], al ; add byte ptr [rax + 0x16], dh ; hlt ; jmp qword ptr [rcx]
0x0000000000199327 : add ah, dl ; clc ; cli ; ljmp ptr [rax + rdx*2 - 0x68bfffe] ; cli ; call rsp
0x000000000018a090 : add ah, dl ; cli ; jmp rax
0x00000000001b072b : add ah, dl ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; xor byte ptr [rdx - 0xa], ah ; jmp qword ptr [rsi]
0x000000000019697f : add ah, dl ; lahf ; dec esp ; add qword ptr [rax], rax ; add al, 0xa0 ; jmp rsp
0x00000000001b3f2b : add ah, dl ; movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; shr cl, 0xfb ; call rsi
0x00000000001a492b : add ah, dl ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; push rax ; shr esi, cl ; call qword ptr [rax]
0x00000000001ac32b : add ah, dl ; sub dword ptr [rcx], eax ; add byte ptr [rax + 0xe], dh ; cmc ; jmp qword ptr [rax]
0x00000000001366c5 : add al, 0 ; add al, ch ; mov bl, 0x92 ; out dx, al ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000027fe3 : add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000081afb : add al, 0 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000803a3 : add al, 0 ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000011e8da : add al, 0 ; add byte ptr [rax - 0x39], cl ; add eax, 0x2a6bb8 ; add byte ptr [rax + rax], al ; add al, ch ; ret
0x000000000002b3de : add al, 0 ; add byte ptr [rax - 0x73], cl ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000010ff9e : add al, 0 ; add byte ptr [rax - 0x73], cl ; push rax ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000f2643 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000478a3 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000001482fd : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ce49 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000148321 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000146678 : add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000000ecdb9 : add al, 0 ; add byte ptr [rax], al ; add bh, al ; or byte ptr [rsi], cl ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000134c42 : add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000007dfa4 : add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000001050fa : add al, 0 ; add byte ptr [rax], al ; je 0x10574f ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000105081 : add al, 0 ; add byte ptr [rax], al ; je 0x10576f ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000010549d : add al, 0 ; add byte ptr [rax], al ; je 0x10578f ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000105424 : add al, 0 ; add byte ptr [rax], al ; je 0x1057af ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000105378 : add al, 0 ; add byte ptr [rax], al ; je 0x1057cf ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000001052ff : add al, 0 ; add byte ptr [rax], al ; je 0x1057ef ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000010521f : add al, 0 ; add byte ptr [rax], al ; je 0x10580f ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000001051a6 : add al, 0 ; add byte ptr [rax], al ; je 0x10582f ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104f70 : add al, 0 ; add byte ptr [rax], al ; je 0x10584f ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104ef7 : add al, 0 ; add byte ptr [rax], al ; je 0x10586f ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104b54 : add al, 0 ; add byte ptr [rax], al ; je 0x10588f ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104e4b : add al, 0 ; add byte ptr [rax], al ; je 0x1058af ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104dd2 : add al, 0 ; add byte ptr [rax], al ; je 0x1058cf ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104bcd : add al, 0 ; add byte ptr [rax], al ; je 0x1058ef ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104cf2 : add al, 0 ; add byte ptr [rax], al ; je 0x10590f ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104c79 : add al, 0 ; add byte ptr [rax], al ; je 0x10592f ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000008bda4 : add al, 0 ; add byte ptr [rax], al ; je 0x8bdbe ; lea rax, qword ptr [rip + 0xe2edf] ; ret
0x0000000000139c4c : add al, 0 ; add byte ptr [rax], al ; lea rdx, qword ptr [rip + 0x3609] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000135341 : add al, 0 ; add byte ptr [rax], al ; mov dword ptr [rbx + 0x98], eax ; jmp 0x13531a
0x0000000000104b7f : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000104ba1 : add al, 0 ; add byte ptr [rax], al ; mov esi, 2 ; mov rdi, r15 ; call rbx
0x000000000012f193 : add al, 0 ; add byte ptr [rax], al ; mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00000000000ac063 : add al, 0 ; add byte ptr [rax], al ; ret
0x00000000000f820f : add al, 0 ; add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xf822f ; ret
0x000000000003a4e9 : add al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011f6bb : add al, 0 ; add byte ptr [rcx + rcx*4 - 6], cl ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000000204a3 : add al, 0 ; add byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7b], r9b ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000008ba03 : add al, 0 ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], 0x6b ; or byte ptr [rax - 0x77], cl ; adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000008bb22 : add al, 0 ; add byte ptr [rdi + rax*8], ah ; or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000110a05 : add al, 0 ; add byte ptr [rdx], al ; call rax
0x000000000017ee75 : add al, 0 ; add byte ptr [rsp + rax + 0x4be0000], bh ; add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x000000000004acc1 : add al, 0 ; lea rax, qword ptr [rax + rbx] ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000a09a4 : add al, 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000013da38 : add al, 0 ; mov edx, ebp ; mov rax, qword ptr [rax + 0x18] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000000a0914 : add al, 0 ; mov rax, rdi ; ret
0x00000000000cd297 : add al, 0 ; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xcd2ba ; ret
0x00000000000cd2f7 : add al, 0 ; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xcd31a ; ret
0x00000000000d3c38 : add al, 0 ; or byte ptr [rax + 0xf], 0xa3 ; ret 0x830f
0x000000000011673e : add al, 0 ; test rdx, rdx ; cmove rdx, rax ; xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x000000000004abaa : add al, 0x10 ; test rdi, rdi ; mov byte ptr [rsi], al ; jne 0x4aba4 ; mov rax, rsi ; ret
0x0000000000048492 : add al, 0x13 ; je 0x484ad ; mov rdx, qword ptr [r8 + rax*8] ; mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; pop rbx ; ret
0x000000000014858b : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000147c87 : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148497 : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147f0b : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014824b : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000148567 : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148637 : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001483eb : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000147fdb : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x00000000001484bb : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000147d4d : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001480ab : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x000000000014831b : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000147d71 : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000016286f : add al, 0x17 ; lea rdx, qword ptr [rip + 0x120e8] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000016031a : add al, 0x17 ; lea rdx, qword ptr [rip + 0x1463d] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000015069f : add al, 0x17 ; lea rdx, qword ptr [rip + 0x242b8] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014ecfa : add al, 0x17 ; lea rdx, qword ptr [rip + 0x25c5d] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014d2ef : add al, 0x17 ; lea rdx, qword ptr [rip + 0x27668] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014b32a : add al, 0x17 ; lea rdx, qword ptr [rip + 0x2962d] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000009657f : add al, 0x17 ; lea rdx, qword ptr [rip + 0xde3d8] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000093e8a : add al, 0x17 ; lea rdx, qword ptr [rip + 0xe0acd] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000013d24a : add al, 0x24 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x0000000000119595 : add al, 0x24 ; add byte ptr [rax - 0x76b80000], al ; ret 0x4075
0x00000000000ca2cf : add al, 0x24 ; add byte ptr [rax - 0x7af10000], al ; ret
0x000000000009841c : add al, 0x24 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008a18a : add al, 0x24 ; je 0x8a26e ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000008aeac : add al, 0x24 ; je 0x8af9e ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000011f6b7 : add al, 0x24 ; mov ecx, 0x400 ; mov rdx, r15 ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000013bae2 : add al, 0x24 ; mov qword ptr [rbx + 8], rax ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ac733 : add al, 0x24 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012ccc8 : add al, 0x24 ; mov rcx, rax ; call r12
0x00000000000ec1fa : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000207aa : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000108d75 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00000000000ce185 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x0000000000020747 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x000000000008fb66 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x00000000000645a7 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000035621 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000122eda : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rdi, qword ptr [rip + 0x2a2815] ; call rax
0x00000000000453e8 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x00000000000704c3 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x30] ; call rax
0x000000000007e3c3 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x19b0] ; call rax
0x000000000007e87d : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x1e6a] ; call rax
0x000000000007ed3d : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x232a] ; call rax
0x00000000000707ad : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x2ba] ; call rax
0x000000000007cd23 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x310] ; call rax
0x000000000007cf93 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x580] ; call rax
0x00000000000f76b0 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000047bc3 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov edi, dword ptr [rsp + 0x3c] ; call rax
0x000000000003a872 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x000000000002f5f7 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x00000000000645d0 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x35c993] ; call rax
0x000000000005c938 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x36462b] ; call rax
0x000000000005c31c : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x364c47] ; call rax
0x0000000000059698 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x3678cb] ; call rax
0x00000000000509f4 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x37056f] ; call rax
0x000000000004db18 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x37344b] ; call rax
0x00000000001174f9 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x11753b ; call rax
0x00000000000c7c27 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0xc7c57 ; mov rsi, rdi ; xor edi, edi ; call rax
0x000000000004dae7 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x000000000013a5b8 : add al, 0x2c ; add byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000124b11 : add al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000001acb5c : add al, 0x32 ; add dword ptr [rax], eax ; xor byte ptr [rsi], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001995a8 : add al, 0x35 ; sti ; lcall ptr [rsi + rax + 2] ; add byte ptr [rbp + rsi - 5], dh ; jmp rsp
0x000000000004ac2e : add al, 0x38 ; mov rdi, rdx ; mov byte ptr [rsi], al ; jne 0x4ac1c ; mov rax, rsi ; ret
0x0000000000022462 : add al, 0x3a ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x00000000000abbe2 : add al, 0x3b ; add al, 0xf ; test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x000000000001dab1 : add al, 0x3c ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000a0878 : add al, 0x44 ; mov byte ptr [rdi + 6], al ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000126aa2 : add al, 0x48 ; cmp esi, edx ; mov edx, 0 ; cmovae rax, rdx ; ret
0x0000000000071835 : add al, 0x48 ; mov dword ptr [rax + 0x20], ecx ; mov dword ptr [rdx], ebx ; add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000010076f : add al, 0x48 ; mov dword ptr [rax + 8], edi ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000000719b8 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x00000000000735db : add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000063e50 : add al, 0x48 ; mov dword ptr [rbx], edx ; mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010079b : add al, 0x48 ; mov dword ptr [rdx + 8], eax ; test rax, rax ; je 0x1007b6 ; mov qword ptr [rax], rdx ; ret
0x0000000000073408 : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000106964 : add al, 0x48 ; ror eax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000ac730 : add al, 0x49 ; mov dword ptr [rsp], eax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000196b4c : add al, 0x57 ; add dword ptr [rax], eax ; adc al, 0x76 ; hlt ; inc dword ptr [rdi + rdx*2 + 0x78640001] ; hlt ; call rsp
0x0000000000198708 : add al, 0x5e ; stc ; inc dword ptr [rax + rdi*8 + 0x66240001] ; stc ; call rsp
0x00000000001682e7 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x00000000000a2e3c : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000009191d : add al, 0x73 ; adc eax, dword ptr [rax + 0x157701fa] ; jb 0x91935 ; mov byte ptr [rdi], cl ; ret
0x00000000001507ce : add al, 0x73 ; xor eax, dword ptr [rax + 0x3b7701fa] ; jb 0x1507ec ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000f7f32 : add al, 0x74 ; adc ecx, dword ptr [rax + 0x63] ; sar byte ptr [rax + 0x1c], cl ; syscall ; neg eax ; ret
0x00000000000f22aa : add al, 0x75 ; and cl, byte ptr [rbx - 0x45a7db84] ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0x65
0x0000000000034177 : add al, 0x75 ; out 0x41, al ; mov eax, dword ptr [rcx + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x00000000001a145c : add al, 0x7b ; add byte ptr [rax], al ; adc byte ptr [rbp - 0x13], bh ; call rsi
0x000000000013b605 : add al, 0x7e ; cmp byte ptr [rcx - 0x75], al ; push rbp ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001724a2 : add al, 0x7f ; or ecx, dword ptr [rax - 0x75] ; jg 0x1724c6 ; test rdi, rdi ; jne 0x1724ad ; ret
0x000000000005c80a : add al, 0x81 ; add rax, rcx ; jmp rax
0x00000000000a07ed : add al, 0x82 ; add rax, r10 ; jmp rax
0x0000000000020c3e : add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000010bdf4 : add al, 0x82 ; mov eax, dword ptr [rax + rcx] ; mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000003ae6c : add al, 0x82 ; mov qword ptr [rsi + 0x10], r10 ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x00000000000e4c52 : add al, 0x82 ; mov rbp, rsi ; mov qword ptr [rsp + 0x28], rdi ; add rax, rdx ; jmp rax
0x0000000000098bd0 : add al, 0x84 ; sal byte ptr [rbp + 0x3a], 0x41 ; movzx eax, byte ptr [rcx] ; test al, al ; jne 0x98c50 ; mov rax, rdi ; ret
0x00000000000587d5 : add al, 0x85 ; add byte ptr [rax], 0 ; add byte ptr [rax + 0xf], cl ; ret 0x348
0x00000000000e25e4 : add al, 0x85 ; leave ; jle 0xe2669 ; xor ebx, ebx ; mov rdx, rax ; jmp 0xe2608
0x00000000000e25e3 : add al, 0x85 ; leave ; jle 0xe266a ; xor ebx, ebx ; mov rdx, rax ; jmp 0xe2609
0x00000000000d2639 : add al, 0x85 ; sal byte ptr [rbp - 0x18], cl ; nop ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002eb41 : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000006d17c : add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000010c652 : add al, 0x86 ; mov eax, dword ptr [rax + rdx] ; shr eax, cl ; and eax, 1 ; ret
0x000000000004e8c5 : add al, 0x88 ; lea rcx, qword ptr [rip + 0x2b2] ; add rax, rcx ; jmp rax
0x000000000004bb15 : add al, 0x88 ; lea rcx, qword ptr [rip + 0xb87] ; add rax, rcx ; jmp rax
0x000000000005a8d9 : add al, 0x88 ; lea rcx, qword ptr [rip - 0x2e2] ; add rax, rcx ; jmp rax
0x000000000004eed7 : add al, 0x88 ; lea rcx, qword ptr [rip - 0x360] ; add rax, rcx ; jmp rax
0x000000000005aa93 : add al, 0x88 ; lea rcx, qword ptr [rip - 0x49c] ; add rax, rcx ; jmp rax
0x000000000004f04b : add al, 0x88 ; lea rcx, qword ptr [rip - 0x4d4] ; add rax, rcx ; jmp rax
0x000000000005ab8b : add al, 0x88 ; lea rcx, qword ptr [rip - 0x594] ; add rax, rcx ; jmp rax
0x00000000000a0942 : add al, 0x8a ; add rax, r10 ; jmp rax
0x000000000002e887 : add al, 0x8a ; add rax, rdx ; jmp rax
0x0000000000055980 : add al, 0x8b ; or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x00000000000d2636 : add al, 0x8b ; push rbx ; add al, 0x85 ; sal byte ptr [rbp - 0x18], cl ; nop ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001a5cba : add al, 0x8c ; add ecx, dword ptr [rbp + 0x4c0002] ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x000000000003ce87 : add al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000000400cc : add al, 0x8d ; push rsi ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000001a3c5a : add al, 0x8f ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rsp ; add byte ptr [rax], al ; add byte ptr [rbx], cl ; add byte ptr [rax], al ; pop rax ; outsd dx, dword ptr [rsi] ; out dx, al ; jmp qword ptr [rdi]
0x000000000005a707 : add al, 0x90 ; add rax, rcx ; mov edx, 1 ; jmp rax
0x000000000004ee01 : add al, 0x90 ; add rax, rcx ; mov edx, 1 ; mov r8d, 1 ; jmp rax
0x000000000004dd76 : add al, 0x90 ; add rax, rcx ; xor r8d, r8d ; mov edx, 1 ; jmp rax
0x0000000000057797 : add al, 0x90 ; lea rdx, qword ptr [rip - 0x2de] ; add rax, rdx ; jmp rax
0x00000000000646b7 : add al, 0x91 ; add rax, rcx ; jmp rax
0x000000000003d178 : add al, 0x92 ; mov rdx, r14 ; xor r14d, r14d ; add rax, rax ; sub rdx, rax ; jmp 0x3d1c9
0x00000000000403c3 : add al, 0x92 ; mov rdx, rbp ; xor ebp, ebp ; add rax, rax ; sub rdx, rax ; jmp 0x40412
0x00000000000aad29 : add al, 0x96 ; add rax, rsi ; jmp rax
0x000000000005cbcc : add al, 0x99 ; add rax, rcx ; jmp rax
0x00000000000cefbd : add al, 0x9a ; add rax, rdx ; jmp rax
0x00000000000da73b : add al, 0xae ; add rax, rsi ; jmp rax
0x00000000000c0739 : add al, 0xb0 ; lea rsi, qword ptr [rip + 0xc6152] ; add rax, rsi ; jmp rax
0x00000000001378d8 : add al, 0xb1 ; add rax, rcx ; jmp rax
0x000000000013efe7 : add al, 0xb1 ; shr rdx, 3 ; add rax, rcx ; jmp rax
0x00000000000cec4d : add al, 0xb2 ; add rax, rdx ; jmp rax
0x00000000000c5a6c : add al, 0xb7 ; add rax, rdi ; jmp rax
0x000000000002d9d6 : add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x0000000000131296 : add al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000c3969 : add al, 0xb8 ; add rax, r8 ; jmp rax
0x00000000000da81f : add al, 0xba ; add rax, rdx ; jmp rax
0x00000000000aac69 : add al, 0xbe ; add rax, rsi ; jmp rax
0x0000000000103a78 : add al, 0xbf ; int1 ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rax - 0x77], 3 ; setne al ; movzx eax, al ; pop rbx ; ret
0x0000000000104cf8 : add al, 0xc ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000016ef13 : add al, 0xc3 ; nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a09a9 : add al, 0xc3 ; nop dword ptr [rax + rax] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000ac8fb : add al, 0xc3 ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000126a72 : add al, 0xc3 ; nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x00000000000a60cb : add al, 0xc3 ; nop dword ptr [rax] ; mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000165f75 : add al, 0xc3 ; nop word ptr [rax + rax] ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x00000000000a7095 : add al, 0xc3 ; nop word ptr [rax + rax] ; mov qword ptr [rdi - 1], rdx ; ret
0x000000000013add9 : add al, 0xd1 ; cmp rbx, qword ptr [rax] ; je 0x13ae01 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002adfa : add al, 0xe0 ; test rax, rax ; je 0x2ae0a ; call rax
0x00000000001a835c : add al, 0xea ; add byte ptr [rax], al ; adc byte ptr [rcx], ah ; call rsi
0x00000000000e8798 : add al, 0xeb ; movabs eax, dword ptr [0x458b4828245c8b48] ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000014d3ab : add al, 0xf ; sub rax, r8 ; ret
0x00000000000d8b79 : add al, 0xf ; test al, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00000000000abbe5 : add al, 0xf ; test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x000000000016a16f : add al, 0xf ; test dword ptr [rdx - 0x7ffffffd], ecx ; cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x00000000000cfb01 : add al, 0xf ; test dword ptr [rsi + 0xf000001], ebx ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x000000000016ed7b : add al, 0xf ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; test dl, 4 ; jne 0x16ed20 ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a691b : add al, 0xf ; test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x0000000000130526 : add al, 0xf ; test ebx, esp ; add dword ptr [rax], eax ; add byte ptr [rbp + 0xf1374d2], al ; mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x0000000000048633 : add al, 0xf0 ; mov qword ptr [rcx + rsi*8], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000116b58 : add al, 0xfb ; sub al, byte ptr [rax] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x00000000001b9a5c : add al, 1 ; add al, byte ptr [rax] ; rol cl, 1 ; clc ; call rcx
0x00000000001a9db5 : add al, 1 ; add byte ptr [rax + 0x36], ch ; call qword ptr [rcx]
0x00000000001a9e55 : add al, 1 ; add byte ptr [rax + 0x41], cl ; call qword ptr [rdx]
0x0000000000195fcd : add al, 1 ; add byte ptr [rax + rbx*8 - 0x11], al ; call rsp
0x000000000006c40d : add al, 1 ; add byte ptr [rax], al ; add bl, al ; nop dword ptr [rax + rax] ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x0000000000134c32 : add al, 1 ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000001261cb : add al, 1 ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000abc18 : add al, 1 ; add byte ptr [rax], al ; ret
0x00000000000f99e4 : add al, 1 ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf9a01 ; ret
0x000000000006f760 : add al, 1 ; je 0x6f79a ; mov rax, rdx ; pop rbx ; ret
0x00000000000788a0 : add al, 1 ; je 0x788da ; mov rax, rdx ; pop rbx ; ret
0x00000000001b9d65 : add al, 2 ; add byte ptr [rax - 0x34], cl ; clc ; call qword ptr [rcx]
0x00000000000a0fec : add al, 3 ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0xb6e8
0x000000000016a1f8 : add al, 3 ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016c9c7 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000f2637 : add al, 7 ; add al, ch ; jno 0xf263b ; stc ; dec dword ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000a6a68 : add al, 7 ; add byte ptr [rax], al ; ret
0x000000000008be0d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x0000000000048929 : add al, 7 ; sub r8, 8 ; cmp r8, 0xf8 ; jne 0x4892f ; mov rax, rdx ; ret
0x0000000000078c9b : add al, 8 ; add byte ptr [rax], al ; jne 0x78cc5 ; xor eax, eax ; cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x0000000000078cc3 : add al, 8 ; add byte ptr [rax], al ; ret
0x00000000001a48cf : add al, ah ; cli ; call qword ptr [rax]
0x0000000000185fcf : add al, ah ; or dl, dh ; inc dword ptr [rax] ; or edx, esi ; jmp qword ptr [rax]
0x000000000017b687 : add al, al ; sldt word ptr [rax] ; ret
0x00000000000aad4e : add al, bh ; jg 0xaace0 ; out 0xf0, al ; mov edx, 0 ; cmove rax, rdx ; ret
0x00000000000aad4e : add al, bh ; jg 0xaace1 ; out 0xf0, al ; mov edx, 0 ; cmove rax, rdx ; ret
0x00000000001a4167 : add al, bh ; xchg eax, edx ; out dx, al ; call qword ptr [rax]
0x00000000001b7497 : add al, bl ; cmp eax, edi ; call rax
0x00000000000a769c : add al, bl ; nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000078d8c : add al, bl ; nop ; mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000078c7c : add al, bl ; nop ; mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x000000000016eef3 : add al, bl ; nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000abffa : add al, bl ; nop dword ptr [rax] ; add rax, 1 ; ret
0x00000000000a098a : add al, bl ; nop dword ptr [rax] ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a6d6b : add al, bl ; nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000165f45 : add al, bl ; nop word ptr [rax + rax] ; mov dword ptr [rcx], edx ; ret
0x00000000000a6098 : add al, bl ; nop word ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000150462 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000126945 : add al, byte ptr [r8] ; mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008bd71 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x0000000000198bb6 : add al, byte ptr [rax] ; adc al, 0x13 ; cli ; inc dword ptr [rdi + rbx + 0x14b40002] ; cli ; call rsp
0x00000000001993c6 : add al, byte ptr [rax] ; adc al, 0xfb ; call rsp
0x00000000001995a6 : add al, byte ptr [rax] ; add al, 0x35 ; sti ; lcall ptr [rsi + rax + 2] ; add byte ptr [rbp + rsi - 5], dh ; jmp rsp
0x0000000000198f8e : add al, byte ptr [rax] ; add al, 0x8f ; cli ; lcall ptr [rdx + rdi - 0x708bfffe] ; cli ; call rsp
0x000000000019894e : add al, byte ptr [rax] ; add al, 0xbb ; stc ; call rsp
0x0000000000083903 : add al, byte ptr [rax] ; add al, ch ; ret 0xffff
0x0000000000025db8 : add al, byte ptr [rax] ; add bh, dh ; ret 0
0x0000000000025da0 : add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x00000000000ce188 : add al, byte ptr [rax] ; add bl, al ; nop dword ptr [rax] ; mov eax, 0x6e ; syscall ; ret
0x000000000002de89 : add al, byte ptr [rax] ; add bl, al ; nop dword ptr [rax] ; mov eax, edi ; and eax, 0x7f ; ret
0x000000000002ddf7 : add al, byte ptr [rax] ; add bl, dh ; ret
0x0000000000108d78 : add al, byte ptr [rax] ; add byte ptr [rax + 0x5f], bl ; call rax
0x0000000000090ba3 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000000b9eb3 : add al, byte ptr [rax] ; add byte ptr [rax - 0x3f], cl ; call 0xffffffffc294e7c8
0x000000000006cc1a : add al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; adc eax, 0x11869c ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000d3070 : add al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; adc eax, 0xb47ca ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000002bec3 : add al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000006dab9 : add al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; or eax, 0x118019 ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x0000000000111519 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 2
0x0000000000104318 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; xor ecx, dword ptr [rax - 0x75] ; jl 0x104356 ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000136dc3 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000eb4a0 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; test dword ptr [rip + 0x148fffa], esp ; ret
0x0000000000086ad1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000084588 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000000908a0 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000016e614 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000016a22b : add al, byte ptr [rax] ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x00000000000886b5 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000099453 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000014849d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b0c1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001484c1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000004a4f8 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000001b9933 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, -1 ; add dword ptr [rax], eax ; rol cl, 0xf8 ; call qword ptr [rdi]
0x00000000000075f2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x0000000000143ed0 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdx - 1], bh ; mov eax, edx ; ret
0x000000000013567f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x000000000013812f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x000000000013784f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x0000000000134ab2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0xc8 ; jmp rcx
0x0000000000033ea6 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010aeda : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000102307 : add al, byte ptr [rax] ; add byte ptr [rax], al ; cmp rax, rdx ; mov edx, ebx ; cmovne rbp, rax ; call 0xfe61f
0x0000000000104d8e : add al, byte ptr [rax] ; add byte ptr [rax], al ; je 0x1055cf ; xor esi, esi ; mov rdi, r13 ; call rbx
0x000000000010503d : add al, byte ptr [rax] ; add byte ptr [rax], al ; je 0x1055ef ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000104b10 : add al, byte ptr [rax] ; add byte ptr [rax], al ; je 0x10560f ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000001052bb : add al, byte ptr [rax] ; add byte ptr [rax], al ; je 0x10562f ; xor esi, esi ; mov rdi, r13 ; call rbx
0x000000000002612c : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x25fcf
0x0000000000117f4c : add al, byte ptr [rax] ; add byte ptr [rax], al ; jne 0x117f66 ; lea rax, qword ptr [rip + 0x3b747] ; ret
0x000000000011800c : add al, byte ptr [rax] ; add byte ptr [rax], al ; jne 0x118026 ; lea rax, qword ptr [rip + 0x3e057] ; ret
0x00000000001180cc : add al, byte ptr [rax] ; add byte ptr [rax], al ; jne 0x1180e6 ; lea rax, qword ptr [rip + 0x3b5a7] ; ret
0x0000000000091363 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jne 0x9137d ; lea rax, qword ptr [rip + 0xc4d10] ; ret
0x0000000000091a13 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jne 0x91a2d ; lea rax, qword ptr [rip + 0xc1c70] ; ret
0x00000000000966d3 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jne 0x966ed ; lea rax, qword ptr [rip + 0xbcfd0] ; ret
0x00000000000cddb2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000104c38 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov esi, 1 ; mov rdi, r13 ; call rbx
0x0000000000104d5d : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov esi, 2 ; mov rdi, r13 ; call rbx
0x00000000000ffab0 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov qword ptr [rip + 0x2c2cc5], rax ; mov rdx, rax ; jmp 0xffa5c
0x000000000013ab39 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000000c870c : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rdx ; ret
0x0000000000104fef : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000104d62 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x000000000012f0b9 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x0000000000104c2e : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000104ba6 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000001397c1 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rax ; lea r9, qword ptr [rsp + 0x14] ; call qword ptr [r10]
0x0000000000103d75 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rbx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; jmp rax
0x000000000013d24c : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x000000000010b015 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000007690a : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000769dc : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ac043 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000f866a : add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf86b7 ; ret
0x000000000003a308 : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010774a : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001148cb : add al, byte ptr [rax] ; add byte ptr [rbp + 0x2f], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ae1fc : add al, byte ptr [rax] ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x63] ; ret
0x000000000006bc5c : add al, byte ptr [rax] ; add byte ptr [rbp + 0x480d75c0], al ; mov eax, ebx ; pop rbx ; ret
0x0000000000143917 : add al, byte ptr [rax] ; add byte ptr [rbp + 0x483278c0], al ; mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x0000000000118058 : add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0x564bc] ; ret
0x0000000000117f98 : add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0x5659c] ; ret
0x0000000000117ed8 : add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0x5665c] ; ret
0x000000000009665f : add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0xd7ee5] ; ret
0x000000000009199f : add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0xdcb85] ; ret
0x00000000000912ef : add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0xdd255] ; ret
0x000000000008de64 : add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x10] ; ret
0x0000000000118154 : add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x56960] ; ret
0x0000000000091c04 : add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x80] ; ret
0x000000000008c008 : add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xc] ; ret
0x0000000000091c67 : add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xd] ; ret
0x00000000000917d7 : add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xdd2ed] ; ret
0x0000000000090e6e : add al, byte ptr [rax] ; add byte ptr [rbp + 8], dh ; lea rax, qword ptr [rip + 0x26] ; ret
0x00000000000ac91e : add al, byte ptr [rax] ; add byte ptr [rbp + 8], dh ; lea rax, qword ptr [rip + 0xec76] ; ret
0x00000000000abd4e : add al, byte ptr [rax] ; add byte ptr [rbp + 8], dh ; lea rax, qword ptr [rip + 0xf8f6] ; ret
0x000000000011807f : add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0x386b5] ; ret
0x0000000000117fbf : add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0x38795] ; ret
0x0000000000117eff : add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0x38855] ; ret
0x0000000000096686 : add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0xba0de] ; ret
0x00000000000919c6 : add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0xbed7e] ; ret
0x0000000000091316 : add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0xbf44e] ; ret
0x0000000000025d98 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x3d77f02e], al ; add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x00000000000ae1f4 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x547bf037], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x63] ; ret
0x0000000000084b8c : add al, byte ptr [rax] ; add byte ptr [rbp - 0x77cfdb9], cl ; add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x00000000001255b7 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x9f38b2e], al ; ret 0xc602
0x000000000010e8c4 : add al, byte ptr [rax] ; add byte ptr [rbp - 1], bh ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000016d8de : add al, byte ptr [rax] ; add byte ptr [rbx + 0x4f3bfc4e], cl ; cld ; jne 0x16db27 ; xor eax, eax ; ret
0x00000000000f75f9 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006ccb9 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000072d70 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000037139 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000ce155 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x2f76ff06], al ; jle 0xce173 ; ret
0x00000000000e25df : add al, byte ptr [rax] ; add byte ptr [rbx - 0x367afbb3], cl ; jle 0xe266e ; xor ebx, ebx ; mov rdx, rax ; jmp 0xe260d
0x0000000000170334 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000000aee8b : add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0x870f
0x00000000000781c7 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000005b1ea : add al, byte ptr [rax] ; add byte ptr [rcx + 0x63], cl ; ret
0x0000000000108d70 : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 + 4], ah ; and eax, 0x2d0 ; pop rax ; pop rdi ; call rax
0x000000000011a9c8 : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000144e41 : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 8], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e9c55 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; push rbp ; or byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 + 0x63], r9b ; ret
0x000000000007578e : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000000f73fa : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0x4b01
0x00000000000815d7 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000000832b2 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x00000000000260dc : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf08
0x00000000000302e3 : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; imul al ; ret
0x000000000008de18 : add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0x1516c] ; ret
0x000000000008bbb8 : add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0x157ac] ; ret
0x000000000008f6f8 : add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd495c] ; ret
0x0000000000091a98 : add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd513c] ; ret
0x000000000008d498 : add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd540c] ; ret
0x0000000000091bb8 : add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd682c] ; ret
0x00000000000264c9 : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x46 ; add dword ptr [rcx - 0x77], eax ; ret
0x00000000000cd6df : add al, byte ptr [rax] ; add byte ptr [rip - 0xfff], bh ; jae 0xcd6f4 ; ret
0x00000000000a6394 : add al, byte ptr [rax] ; add byte ptr [rsi + 0xf], ah ; je 0xa63ef ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a7a21 : add al, byte ptr [rax] ; add byte ptr [rsi + 0xf], ah ; je 0xa7a7c ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a9735 : add al, byte ptr [rax] ; add byte ptr [rsi + 0xf], ah ; je 0xa9790 ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000016c000 : add al, byte ptr [rax] ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; push rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000009133d : add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip + 0x107] ; ret
0x00000000000966ad : add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip - 0x5269] ; ret
0x00000000000919ed : add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip - 0x5c9] ; ret
0x0000000000117f26 : add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip - 0x86af2] ; ret
0x0000000000117fe6 : add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip - 0x86bb2] ; ret
0x00000000001180a6 : add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip - 0x86c92] ; ret
0x00000000001bca05 : add al, byte ptr [rax] ; add byte ptr [rsp + rax], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x0000000000081f0e : add al, byte ptr [rax] ; add dh, dh ; ret
0x0000000000139f85 : add al, byte ptr [rax] ; add rsp, 0x100 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006bcc0 : add al, byte ptr [rax] ; add rsp, 0x1000 ; pop rbx ; ret
0x000000000007832d : add al, byte ptr [rax] ; add rsp, 0x130 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000056640 : add al, byte ptr [rax] ; add rsp, 0xd8 ; ret
0x000000000019947e : add al, byte ptr [rax] ; and al, 0x1f ; sti ; ljmp ptr [rax + rbx*2 + 0x1fd40002] ; sti ; call rsp
0x0000000000198df6 : add al, byte ptr [rax] ; and al, 0x68 ; cli ; jmp rsp
0x0000000000198ede : add al, byte ptr [rax] ; and al, 0x77 ; cli ; call rsp
0x00000000001988d6 : add al, byte ptr [rax] ; hlt ; test al, 0xf9 ; lcall ptr [rdx + rcx - 0x560bfffe] ; stc ; call rsp
0x0000000000198aee : add al, byte ptr [rax] ; in al, -0x14 ; stc ; jmp rsp
0x000000000019939e : add al, byte ptr [rax] ; in al, 0xe ; sti ; call rsp
0x0000000000198f96 : add al, byte ptr [rax] ; je 0x198f2e ; cli ; call rsp
0x0000000000199206 : add al, byte ptr [rax] ; je 0x1991e6 ; cli ; jmp rsp
0x000000000019932e : add al, byte ptr [rax] ; je 0x199330 ; cli ; call rsp
0x00000000001995ae : add al, byte ptr [rax] ; je 0x1995ec ; sti ; jmp rsp
0x00000000000549c9 : add al, byte ptr [rax] ; jmp 0x54993
0x00000000001266f2 : add al, byte ptr [rax] ; jne 0x126745 ; mov eax, r8d ; ret
0x00000000001266f1 : add al, byte ptr [rax] ; jne 0x126746 ; mov eax, r8d ; ret
0x0000000000126a62 : add al, byte ptr [rax] ; jne 0x126a89 ; movzx eax, byte ptr [rdi + 1] ; shl eax, 3 ; cdqe ; shr rax, 4 ; ret
0x00000000000a0985 : add al, byte ptr [rax] ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000001b996e : add al, byte ptr [rax] ; loopne 0x1b9938 ; clc ; call qword ptr [rbx]
0x0000000000198bbe : add al, byte ptr [rax] ; mov ah, 0x14 ; cli ; call rsp
0x00000000001993fe : add al, byte ptr [rax] ; mov ah, 0x17 ; sti ; call rsp
0x0000000000198f6e : add al, byte ptr [rax] ; mov ah, 0x8d ; cli ; jmp rsp
0x0000000000199396 : add al, byte ptr [rax] ; mov ah, 0xd ; sti ; inc dword ptr [rbx + rdx*2 + 0xee40002] ; sti ; call rsp
0x00000000001b9bae : add al, byte ptr [rax] ; mov al, 0x8f ; sti ; call rcx
0x0000000000149a28 : add al, byte ptr [rax] ; mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000014b331 : add al, byte ptr [rax] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014b2fd : add al, byte ptr [rax] ; mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000126946 : add al, byte ptr [rax] ; mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a08f5 : add al, byte ptr [rax] ; mov rax, rdi ; ret
0x0000000000122cec : add al, byte ptr [rax] ; mov rdi, r14 ; call rbx
0x0000000000198946 : add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; mov edx, 0xe9cfff9 ; add al, byte ptr [rax] ; add al, 0xbb ; stc ; call rsp
0x000000000019959e : add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; xor al, 0xfb ; call rsp
0x000000000015e30f : add al, byte ptr [rax] ; movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000016b6db : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000011f8f9 : add al, byte ptr [rax] ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000107332 : add al, byte ptr [rax] ; pop rbx ; ret
0x0000000000198d3e : add al, byte ptr [rax] ; push rsp ; cli ; jmp rsp
0x00000000001990d6 : add al, byte ptr [rax] ; push rsp ; movsd dword ptr [rdi], dword ptr [rsi] ; cli ; jmp rsp
0x0000000000198bf6 : add al, byte ptr [rax] ; push rsp ; sbb edi, edx ; lcall ptr [rcx + 0x1c340002] ; cli ; call rsp
0x0000000000128eb3 : add al, byte ptr [rax] ; ret
0x00000000001b9a5e : add al, byte ptr [rax] ; rol cl, 1 ; clc ; call rcx
0x000000000019898e : add al, byte ptr [rax] ; test bl, al ; stc ; dec dword ptr [rax + rdx] ; add al, byte ptr [rax] ; xchg eax, esp ; ret
0x00000000001991ae : add al, byte ptr [rax] ; xchg eax, esp ; mov cl, 0xfa ; call rsp
0x0000000000198996 : add al, byte ptr [rax] ; xchg eax, esp ; ret
0x0000000000198976 : add al, byte ptr [rax] ; xchg eax, esp ; sar cl, 0xff ; xchg eax, esp ; lar eax, word ptr [rax] ; ret
0x0000000000198bfe : add al, byte ptr [rax] ; xor al, 0x1c ; cli ; call rsp
0x000000000019909e : add al, byte ptr [rax] ; xor al, 0xa3 ; cli ; call rsp
0x00000000001a02d5 : add al, byte ptr [rcx + 0xe] ; sbb byte ptr [rsi + 0x200e4103], al ; add dword ptr [rax + rbp*2], 0xa ; ret
0x00000000001a2205 : add al, byte ptr [rcx + 0xe] ; sbb byte ptr [rsi + 0x200e4103], al ; add dword ptr [rax + rdi*2], 0xa ; ret
0x000000000012a17d : add al, byte ptr [rcx - 0x77] ; insb byte ptr [rdi], dx ; and al, 0x40 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000113245 : add al, byte ptr [rcx - 1] ; push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x0000000000126208 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x0000000000126227 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; ret
0x00000000000f8631 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf864e ; ret
0x0000000000103348 : add al, byte ptr [rcx] ; pop rbp ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000031266 : add al, byte ptr [rip - 0x76bb0000] ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000a6b6a : add al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000000000264c8 : add al, byte ptr es:[rax] ; add byte ptr [rdi], cl ; mov dh, 0x46 ; add dword ptr [rcx - 0x77], eax ; ret
0x000000000016cf4a : add al, byte ptr gs:[rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000000e1fd8 : add al, ch ; adc dh, byte ptr [rax - 0x76b70001] ; ret 0x848b
0x0000000000077239 : add al, ch ; adc ebx, edi ; or dword ptr [rax], eax ; add rsp, 0x80 ; mov eax, edx ; ret
0x0000000000027b88 : add al, ch ; and ah, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0xc8e9
0x0000000000122516 : add al, ch ; and al, 0x98 ; add byte ptr [rax], al ; test rax, rax ; je 0x122534 ; mov rdi, rbx ; call rax
0x000000000010a7ca : add al, ch ; and dl, dh ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x0000000000077329 : add al, ch ; and edx, edi ; or dword ptr [rax], eax ; add rsp, 0x80 ; mov eax, edx ; ret
0x0000000000024db0 : add al, ch ; cli ; lea eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0xbbe9
0x00000000000deed3 : add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; or dh, ah ; dec dword ptr [rax - 0x77] ; ret
0x000000000007786e : add al, ch ; fdivr st(4), st(0) ; or dword ptr [rax], eax ; add rsp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x00000000000d27f6 : add al, ch ; hlt ; jno 0xd27fe ; push qword ptr [rcx] ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x000000000004423e : add al, ch ; in al, dx ; fdivp st(7) ; dec dword ptr [rax - 0x77] ; ret
0x0000000000077459 : add al, ch ; int1 ; clc ; or dword ptr [rax], eax ; add rsp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x0000000000077ad4 : add al, ch ; jbe 0x77ada ; or dword ptr [rax], eax ; add rsp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x00000000000f2639 : add al, ch ; jno 0xf2639 ; stc ; dec dword ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000079ada : add al, ch ; jo 0x79ac0 ; or dword ptr [rax], eax ; add rsp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x0000000000071a9d : add al, ch ; lodsd eax, dword ptr [rsi] ; push rdx ; or al, byte ptr [rax] ; add rsp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x000000000010299a : add al, ch ; mov al, 0x43 ; add dword ptr [rax], eax ; add rsp, 0x80 ; add rsp, 8 ; ret
0x00000000000fddc3 : add al, ch ; mov bh, 7 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000001366c7 : add al, ch ; mov bl, 0x92 ; out dx, al ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x00000000000715c7 : add al, ch ; mov bl, 0xe0 ; add byte ptr [rax], al ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rsp ; call 0x4d8a1
0x0000000000135ecc : add al, ch ; mov cs, word ptr [rbp] ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000077da9 : add al, ch ; movabs eax, dword ptr [0x80c481480009ef] ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000130934 : add al, ch ; neg dh ; add byte ptr [rax], al ; lea rax, qword ptr [rbx + 0x2260] ; pop rbx ; ret
0x00000000001433c4 : add al, ch ; out 8, al ; add byte ptr [rax], al ; add rsp, 0x510 ; mov rax, rbx ; pop rbx ; ret
0x0000000000077ee4 : add al, ch ; out dx, al ; or dword ptr [rax], eax ; add rsp, 0x80 ; pop rbx ; ret
0x00000000001a7257 : add al, ch ; push rsp ; int1 ; jmp qword ptr [rax]
0x0000000000122d49 : add al, ch ; ror dword ptr [rdx + 2], 1 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000972ec : add al, ch ; sahf ; xchg al, bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000012221e : add al, ch ; sbb al, 0x9b ; add byte ptr [rax], al ; test rax, rax ; je 0x12223c ; mov rdi, rbx ; call rax
0x000000000013ab81 : add al, ch ; stc ; out dx, al ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + rax*4 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x000000000007714d : add al, ch ; std ; sti ; or dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x0000000000102f50 : add al, ch ; sub al, byte ptr [rbx] ; add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x2c1273] ; add rsp, 8 ; ret
0x0000000000130951 : add al, ch ; sub eax, esi ; out dx, al ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rax - 0x77], 0xc3 ; jne 0x130903 ; xor eax, eax ; pop rbx ; ret
0x0000000000080be4 : add al, ch ; xchg byte ptr [rax], ah ; or byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000086cc4 : add al, ch ; xchg byte ptr [rax], al ; or dword ptr [rax], eax ; add rsp, 0x80 ; mov rax, rbx ; pop rbx ; ret
0x00000000000ffa18 : add al, ch ; xchg eax, edx ; push rcx ; dec dword ptr [rax - 0x77] ; add eax, 0x2c2d5b ; add rsp, 8 ; ret
0x0000000000086717 : add al, ch ; xor eax, dword ptr [rsi] ; or dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x00000000001266ef : add al, dh ; add al, byte ptr [rax] ; jne 0x126748 ; mov eax, r8d ; ret
0x000000000000ddcf : add al, dh ; add eax, 3 ; add byte ptr [rax], al ; or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x0000000000010fc7 : add al, dh ; fcom dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x51
0x000000000019eedf : add al, dh ; in al, dx ; jmp qword ptr [rax]
0x000000000001b037 : add al, dh ; in eax, dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000034ab9 : add al, dh ; jg 0x34b0f ; sub eax, edx ; shr rax, 0x3f ; ret
0x00000000001937b1 : add bh, ah ; jmp rax
0x000000000012d69a : add bh, al ; adc al, 0x10 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000ecdb6 : add bh, al ; add al, 0 ; add byte ptr [rax], al ; add bh, al ; or byte ptr [rsi], cl ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000134c3f : add bh, al ; add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000007dfa1 : add bh, al ; add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000134c2f : add bh, al ; add al, 1 ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000002147f : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000013ab32 : add bh, al ; add eax, 0x28b443 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x0000000000116e9d : add bh, al ; add eax, 0x2af888 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000008aa46 : add bh, al ; add eax, 0x338d9b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000008a92c : add bh, al ; add eax, 0x338eb1 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008a76f : add bh, al ; add eax, 0x33906e ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000008682f : add bh, al ; add eax, 0x33cf6e ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000125925 : add bh, al ; or byte ptr [r9], r13b ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rcx - 0x76b7f3a9], 0x3e ; ret
0x00000000000ecdbd : add bh, al ; or byte ptr [rsi], cl ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000005a101 : add bh, al ; test dword ptr [rdi + rbp*8 - 1], ecx ; call qword ptr [rax]
0x00000000000eb59b : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000017338f : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000131fc3 : add bh, bh ; add byte ptr [rax + 0x31], cl ; enter -0x3eb8, -0x1f ; or byte ptr [rax - 0x77], cl ; ret 0x314c
0x0000000000025db2 : add bh, bh ; dec dword ptr [rdi] ; test bl, dh ; add al, byte ptr [rax] ; add bh, dh ; ret 0
0x000000000006efaf : add bh, bh ; loopne 0x6f029 ; nop dword ptr [rax + rax] ; mov rax, -1 ; ret
0x000000000006f07f : add bh, bh ; loopne 0x6f0f4 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000012f632 : add bh, bh ; mov ah, 0x24 ; enter 0, 0 ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x000000000014623e : add bh, bh ; nop ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000146469 : add bh, bh ; nop ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000006f03d : add bh, bh ; rol byte ptr [rbx + 0xb74fff8], 1 ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000ba59d : add bh, bh ; ror byte ptr [rax - 0x73], 1 ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000c80de : add bh, bh ; ror byte ptr [rax - 0x77], 1 ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f7f02 : add bh, byte ptr [rax + 0x16] ; jbe 0xf7f19 ; ret
0x000000000013e891 : add bh, byte ptr [rax + 1] ; jne 0x13e876 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004a539 : add bh, byte ptr [rax + 1] ; ret
0x000000000011751f : add bh, byte ptr [rax - 1] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007a62b : add bh, byte ptr [rax - 1] ; pop rbx ; ret
0x0000000000035a8b : add bh, byte ptr [rax - 1] ; ret
0x0000000000035ab6 : add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000007b008 : add bh, dh ; fsub dword ptr [rcx + rcx*4 + 2] ; mov rax, -1 ; ret
0x000000000001fb7f : add bh, dh ; fsub dword ptr [rcx + rcx*4 + 2] ; mov rax, rbp ; cmp r9, rax ; je 0x1fb38 ; jmp 0x1fb61
0x00000000000abd59 : add bl, al ; lea rax, qword ptr [rip + 0xbf2de] ; ret
0x00000000000ac93d : add bl, al ; lea rax, qword ptr [rip + 0xc3dda] ; ret
0x0000000000090e8d : add bl, al ; lea rax, qword ptr [rip + 0xde11a] ; ret
0x0000000000089ae4 : add bl, al ; mov rsi, rbx ; mov rdi, rax ; call rcx
0x00000000000ceb4c : add bl, al ; nop ; cmp rax, 0x2f ; je 0xceb21 ; mov eax, 1 ; ret
0x00000000000a8473 : add bl, al ; nop ; nop word ptr cs:[rax + rax] ; mov rax, rdi ; ret
0x000000000006c411 : add bl, al ; nop dword ptr [rax + rax] ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x0000000000077159 : add bl, al ; nop dword ptr [rax + rax] ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000000204f6 : add bl, al ; nop dword ptr [rax + rax] ; lea rax, qword ptr [rip + 0x16bf78] ; ret
0x0000000000130459 : add bl, al ; nop dword ptr [rax + rax] ; lea rdx, qword ptr [rip + 0x290719] ; jmp qword ptr [rdx + rax*8]
0x00000000000ac036 : add bl, al ; nop dword ptr [rax + rax] ; mov rax, 2 ; ret
0x00000000000ac046 : add bl, al ; nop dword ptr [rax + rax] ; mov rax, 3 ; ret
0x00000000000ac056 : add bl, al ; nop dword ptr [rax + rax] ; mov rax, 4 ; ret
0x00000000000ac066 : add bl, al ; nop dword ptr [rax + rax] ; mov rax, 5 ; ret
0x00000000000ac076 : add bl, al ; nop dword ptr [rax + rax] ; mov rax, 6 ; ret
0x00000000000ac086 : add bl, al ; nop dword ptr [rax + rax] ; mov rax, 7 ; ret
0x00000000000215c6 : add bl, al ; nop dword ptr [rax + rax] ; mov rax, qword ptr [rip + 0x3a4d39] ; ret
0x00000000000a6d1f : add bl, al ; nop dword ptr [rax + rax] ; nop word ptr cs:[rax + rax] ; ret
0x000000000007f146 : add bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000d6973 : add bl, al ; nop dword ptr [rax] ; mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x0000000000134c3b : add bl, al ; nop dword ptr [rax] ; mov dword ptr [rcx + 4], 0 ; mov eax, 1 ; ret
0x000000000013795b : add bl, al ; nop dword ptr [rax] ; mov dword ptr [rdi + 4], 0 ; mov eax, 1 ; ret
0x00000000000ce18a : add bl, al ; nop dword ptr [rax] ; mov eax, 0x6e ; syscall ; ret
0x00000000000ce973 : add bl, al ; nop dword ptr [rax] ; mov eax, 0x7e ; ret
0x000000000013ea37 : add bl, al ; nop dword ptr [rax] ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000002de8b : add bl, al ; nop dword ptr [rax] ; mov eax, edi ; and eax, 0x7f ; ret
0x00000000000ceb5a : add bl, al ; nop dword ptr [rax] ; test edi, edi ; mov eax, 1 ; js 0xceb80 ; ret
0x000000000014614a : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000130025 : add bl, al ; nop word ptr [rax + rax] ; mov dword ptr [rsi], 0xa ; ret
0x0000000000130045 : add bl, al ; nop word ptr [rax + rax] ; mov dword ptr [rsi], 0xc ; ret
0x0000000000130035 : add bl, al ; nop word ptr [rax + rax] ; mov dword ptr [rsi], 8 ; ret
0x0000000000036bc5 : add bl, al ; nop word ptr [rax + rax] ; mov eax, dword ptr [rip + 0x38a4b2] ; ret
0x00000000000ce984 : add bl, al ; nop word ptr cs:[rax + rax] ; mov eax, 0xfc17 ; ret
0x0000000000130744 : add bl, al ; nop word ptr cs:[rax + rax] ; mov eax, 2 ; ret
0x000000000011b1b4 : add bl, al ; nop word ptr cs:[rax + rax] ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x0000000000130754 : add bl, al ; nop word ptr cs:[rax + rax] ; ret
0x000000000012dea4 : add bl, al ; nop word ptr cs:[rax + rax] ; xor eax, eax ; ret
0x000000000019b835 : add bl, byte ptr [rax + 0xa] ; ret
0x000000000019f916 : add bl, byte ptr [rax + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000000bdc54 : add bl, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000131a7d : add bl, ch ; add eax, 0x24448b48 ; or byte ptr [rax - 0x77], cl ; fimul dword ptr [rcx + rcx*4 - 0x1a] ; mov rdi, rbp ; call rax
0x00000000000a860f : add bl, dh ; movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a77cf : add bl, dh ; movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a77df : add bl, dh ; movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000198237 : add byte ptr [0xffffffffd59cfff8], ah ; add dword ptr [rax], eax ; and al, 0x66 ; clc ; jmp rsp
0x00000000000ceae7 : add byte ptr [r15 - 0x48], sil ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000089f1d : add byte ptr [r15], r9b ; test bl, ch ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x000000000008a43d : add byte ptr [r15], r9b ; test bl, cl ; add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, r8 ; call rax
0x000000000008b038 : add byte ptr [r15], r9b ; test byte ptr [rax + 0x48000000], cl ; mov esi, ebp ; mov rdi, r12 ; call rax
0x0000000000153727 : add byte ptr [r8 + rax], r8b ; movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000007ed9a : add byte ptr [r8 - 0x77], r9b ; imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000115a04 : add byte ptr [r8], 0 ; add byte ptr [rax], al ; mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x0000000000098527 : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000ceb05 : add byte ptr [r8], r8b ; je 0xceb21 ; cmp rax, 0x7275 ; jne 0xceafa ; xor eax, eax ; ret
0x00000000000ceb04 : add byte ptr [r8], r8b ; je 0xceb22 ; cmp rax, 0x7275 ; jne 0xceafb ; xor eax, eax ; ret
0x0000000000135ecf : add byte ptr [r8], r8b ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003b4ab : add byte ptr [r9], r14b ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000f862f : add byte ptr [rax + 0x102], bh ; syscall ; cmp rax, -0xfff ; jae 0xf8650 ; ret
0x00000000000fa1bf : add byte ptr [rax + 0x107], bh ; syscall ; cmp rax, -0xfff ; jae 0xfa1e0 ; ret
0x00000000000fdde6 : add byte ptr [rax + 0x10], bh ; syscall ; cmp rax, -0x1000 ; ja 0xfde10 ; ret
0x00000000000fe57f : add byte ptr [rax + 0x10], bh ; syscall ; cmp rax, -0xfff ; jae 0xfe5a0 ; ret
0x00000000000fa0ff : add byte ptr [rax + 0x10a], bh ; syscall ; cmp rax, -0xfff ; jae 0xfa120 ; ret
0x00000000001a7ecf : add byte ptr [rax + 0x11], ah ; jmp qword ptr [rdi]
0x0000000000108fda : add byte ptr [rax + 0x121], bh ; syscall ; cmp rax, -0x1000 ; ja 0x109001 ; ret
0x000000000010900f : add byte ptr [rax + 0x122], bh ; syscall ; cmp rax, -0xfff ; jae 0x109030 ; ret
0x000000000010900e : add byte ptr [rax + 0x122], dil ; syscall ; cmp rax, -0xfff ; jae 0x109031 ; ret
0x00000000001092df : add byte ptr [rax + 0x123], bh ; syscall ; cmp rax, -0xfff ; jae 0x109300 ; ret
0x00000000000f8fcf : add byte ptr [rax + 0x124], bh ; syscall ; cmp rax, -0xfff ; jae 0xf8ff0 ; ret
0x00000000000f902f : add byte ptr [rax + 0x125], bh ; syscall ; cmp rax, -0xfff ; jae 0xf9050 ; ret
0x000000000010945f : add byte ptr [rax + 0x126], bh ; syscall ; cmp rax, -0xfff ; jae 0x109480 ; ret
0x000000000019f6af : add byte ptr [rax + 0x12], dh ; in eax, dx ; call qword ptr [rax]
0x000000000010987f : add byte ptr [rax + 0x12c], bh ; syscall ; cmp rax, -0xfff ; jae 0x1098a0 ; ret
0x000000000010921f : add byte ptr [rax + 0x131], bh ; syscall ; cmp rax, -0xfff ; jae 0x109240 ; ret
0x00000000000fedef : add byte ptr [rax + 0x132], bh ; syscall ; cmp rax, -0xfff ; jae 0xfee10 ; ret
0x000000000010993f : add byte ptr [rax + 0x134], bh ; syscall ; cmp rax, -0xfff ; jae 0x109960 ; ret
0x000000000000a547 : add byte ptr [rax + 0x13d3], dl ; add byte ptr [rax], al ; add byte ptr [rbp], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x34
0x00000000000f893f : add byte ptr [rax + 0x15], bh ; syscall ; cmp rax, -0xfff ; jae 0xf8960 ; ret
0x00000000001ac40f : add byte ptr [rax + 0x15], dh ; cmc ; call qword ptr [rbx]
0x00000000001aa9ff : add byte ptr [rax + 0x16], al ; hlt ; jmp qword ptr [rcx]
0x0000000000089adf : add byte ptr [rax + 0x16], bh ; ret
0x00000000000f8fff : add byte ptr [rax + 0x16], bh ; syscall ; cmp rax, -0xfff ; jae 0xf9020 ; ret
0x00000000001aaa17 : add byte ptr [rax + 0x16], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001aaa2f : add byte ptr [rax + 0x16], dh ; hlt ; jmp qword ptr [rcx]
0x0000000000117606 : add byte ptr [rax + 0x16], dil ; ret
0x00000000001a9a47 : add byte ptr [rax + 0x17], ch ; call qword ptr [rsi]
0x00000000000ec09f : add byte ptr [rax + 0x18], bh ; syscall ; cmp rax, -0xfff ; jae 0xec0c0 ; ret
0x0000000000102d5f : add byte ptr [rax + 0x1b], bh ; syscall ; cmp rax, -0xfff ; jae 0x102d80 ; ret
0x0000000000102d2f : add byte ptr [rax + 0x1c], bh ; syscall ; cmp rax, -0xfff ; jae 0x102d50 ; ret
0x00000000001ac737 : add byte ptr [rax + 0x1c], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001ac807 : add byte ptr [rax + 0x1d], bh ; cmc ; jmp qword ptr [rcx]
0x000000000010a74f : add byte ptr [rax + 0x1d], bh ; syscall ; cmp rax, -0xfff ; jae 0x10a770 ; ret
0x00000000001ac7ef : add byte ptr [rax + 0x1d], dh ; cmc ; call qword ptr [rsi]
0x000000000010a77f : add byte ptr [rax + 0x1f], bh ; syscall ; cmp rax, -0xfff ; jae 0x10a7a0 ; ret
0x0000000000034eab : add byte ptr [rax + 0x1fe8c17f], al ; ret
0x00000000000f8f6f : add byte ptr [rax + 0x20], bh ; syscall ; cmp rax, -0xfff ; jae 0xf8f90 ; ret
0x00000000000f8f9f : add byte ptr [rax + 0x21], bh ; syscall ; cmp rax, -0xfff ; jae 0xf8fc0 ; ret
0x00000000001ac9a7 : add byte ptr [rax + 0x21], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001aca37 : add byte ptr [rax + 0x22], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001acaaf : add byte ptr [rax + 0x23], al ; cmc ; jmp qword ptr [rcx]
0x00000000000bfc6f : add byte ptr [rax + 0x24], bh ; syscall ; cmp rax, -0xfff ; jae 0xbfc90 ; ret
0x00000000000bfc6e : add byte ptr [rax + 0x24], dil ; syscall ; cmp rax, -0xfff ; jae 0xbfc91 ; ret
0x00000000000cd1df : add byte ptr [rax + 0x25], bh ; syscall ; cmp rax, -0xfff ; jae 0xcd200 ; ret
0x00000000001b6dc7 : add byte ptr [rax + 0x25], ch ; clc ; jmp qword ptr [rdx]
0x00000000000bfc9f : add byte ptr [rax + 0x26], bh ; syscall ; cmp rax, -0xfff ; jae 0xbfcc0 ; ret
0x00000000001acb77 : add byte ptr [rax + 0x26], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001b6e07 : add byte ptr [rax + 0x27], bl ; clc ; jmp rdi
0x0000000000109f7f : add byte ptr [rax + 0x29], bh ; syscall ; cmp rax, -0xfff ; jae 0x109fa0 ; ret
0x0000000000056baa : add byte ptr [rax + 0x29], cl ; ret
0x00000000000d6270 : add byte ptr [rax + 0x29], cl ; ret 0x1a8b
0x00000000000c18b1 : add byte ptr [rax + 0x29], cl ; ret 0x2948
0x0000000000027fe5 : add byte ptr [rax + 0x29], cl ; ret 0x349
0x00000000000e6640 : add byte ptr [rax + 0x29], cl ; ret 0x634c
0x00000000000534e9 : add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000003cab7 : add byte ptr [rax + 0x29], cl ; ret 0x8949
0x0000000000084141 : add byte ptr [rax + 0x29], cl ; ret 0x8d49
0x00000000001acd7f : add byte ptr [rax + 0x2c], ah ; cmc ; jmp qword ptr [rsi]
0x0000000000109a4f : add byte ptr [rax + 0x31], bh ; syscall ; cmp rax, -0xfff ; jae 0x109a70 ; ret
0x0000000000131fc5 : add byte ptr [rax + 0x31], cl ; enter -0x3eb8, -0x1f ; or byte ptr [rax - 0x77], cl ; ret 0x314c
0x0000000000109b0f : add byte ptr [rax + 0x33], bh ; syscall ; cmp rax, -0xfff ; jae 0x109b30 ; ret
0x0000000000109adf : add byte ptr [rax + 0x34], bh ; syscall ; cmp rax, -0xfff ; jae 0x109b00 ; ret
0x00000000001a9db7 : add byte ptr [rax + 0x36], ch ; call qword ptr [rcx]
0x000000000000806f : add byte ptr [rax + 0x37], al ; or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x45
0x00000000001acf87 : add byte ptr [rax + 0x37], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001acf6f : add byte ptr [rax + 0x37], dl ; cmc ; jmp qword ptr [rcx]
0x000000000007988a : add byte ptr [rax + 0x39], cl ; clc ; je 0x798aa ; cmp qword ptr [rip + 0x34ca48], 0 ; je 0x798b0 ; ret
0x000000000003a9a6 : add byte ptr [rax + 0x39], cl ; ret
0x000000000002bb46 : add byte ptr [rax + 0x39], cl ; ret 0x4476
0x00000000000803a5 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000be1fc : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000000f128a : add byte ptr [rax + 0x39], cl ; ret 0x860f
0x0000000000116f81 : add byte ptr [rax + 0x39], cl ; ret 0xd975
0x0000000000117050 : add byte ptr [rax + 0x39], cl ; ret 0xda75
0x000000000010230a : add byte ptr [rax + 0x39], cl ; ror byte ptr [rcx + 0x450f48da], 1 ; call 0xffffffffffd31b0c
0x000000000013ac0f : add byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + rcx + 0x48], 1 ; add eax, 0xa0 ; add rsp, 8 ; ret
0x000000000013ac3f : add byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + rcx + 0x48], 1 ; add eax, 0xa8 ; add rsp, 8 ; ret
0x000000000013abaf : add byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + rcx + 0x48], 1 ; add esp, 8 ; ret
0x000000000013abdf : add byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + rcx + 0x48], 1 ; sub eax, -0x80 ; add rsp, 8 ; ret
0x00000000000cd75f : add byte ptr [rax + 0x3b], bh ; syscall ; cmp rax, -0xfff ; jae 0xcd780 ; ret
0x00000000001a50c7 : add byte ptr [rax + 0x3d], cl ; out dx, eax ; jmp rsi
0x0000000000035a9f : add byte ptr [rax + 0x3e], bh ; syscall ; cmp rax, -0xfff ; jae 0x35ac0 ; ret
0x0000000000035a9e : add byte ptr [rax + 0x3e], dil ; syscall ; cmp rax, -0xfff ; jae 0x35ac1 ; ret
0x00000000000ccf1f : add byte ptr [rax + 0x3f], bh ; syscall ; cmp rax, -0xfff ; jae 0xccf40 ; ret
0x000000000010a65f : add byte ptr [rax + 0x40], bh ; syscall ; cmp rax, -0xfff ; jae 0x10a680 ; ret
0x000000000010a62f : add byte ptr [rax + 0x41], bh ; syscall ; cmp rax, -0xfff ; jae 0x10a650 ; ret
0x00000000001a9e57 : add byte ptr [rax + 0x41], cl ; call qword ptr [rdx]
0x000000000010a71f : add byte ptr [rax + 0x43], bh ; syscall ; cmp rax, -0xfff ; jae 0x10a740 ; ret
0x0000000000192acd : add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x00000000001b7a13 : add byte ptr [rax + 0x45180001], bh ; clc ; call qword ptr [rdx]
0x000000000010a5ff : add byte ptr [rax + 0x47], bh ; syscall ; cmp rax, -0xfff ; jae 0x10a620 ; ret
0x00000000000f8dcf : add byte ptr [rax + 0x49], bh ; syscall ; cmp rax, -0xfff ; jae 0xf8df0 ; ret
0x00000000001a8c1f : add byte ptr [rax + 0x4b], al ; jmp qword ptr [rcx]
0x00000000001006ef : add byte ptr [rax + 0x4d], bh ; syscall ; cmp rax, -0xfff ; jae 0x100710 ; ret
0x00000000000f90bf : add byte ptr [rax + 0x50], bh ; syscall ; cmp rax, -0xfff ; jae 0xf90e0 ; ret
0x00000000000f90ef : add byte ptr [rax + 0x51], bh ; syscall ; cmp rax, -0xfff ; jae 0xf9110 ; ret
0x000000000006c2ff : add byte ptr [rax + 0x52], bh ; syscall ; cmp rax, -0xfff ; jae 0x6c320 ; ret
0x00000000000f85ff : add byte ptr [rax + 0x53], bh ; syscall ; cmp rax, -0xfff ; jae 0xf8620 ; ret
0x00000000000f85fe : add byte ptr [rax + 0x53], dil ; syscall ; cmp rax, -0xfff ; jae 0xf8621 ; ret
0x00000000000fa1ef : add byte ptr [rax + 0x54], bh ; syscall ; cmp rax, -0xfff ; jae 0xfa210 ; ret
0x00000000001ad457 : add byte ptr [rax + 0x55], ch ; cmc ; call qword ptr [rdx]
0x00000000001a8f57 : add byte ptr [rax + 0x55], cl ; jmp qword ptr [rcx]
0x00000000000fa06f : add byte ptr [rax + 0x56], bh ; syscall ; cmp rax, -0xfff ; jae 0xfa090 ; ret
0x00000000000d24c7 : add byte ptr [rax + 0x5742afa], al ; cmp dl, 0x3f ; jne 0xd24b6 ; mov eax, 1 ; ret
0x00000000001ad507 : add byte ptr [rax + 0x57], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001ad5af : add byte ptr [rax + 0x58], al ; cmc ; jmp qword ptr [rcx]
0x00000000001ad5c7 : add byte ptr [rax + 0x58], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001ad5df : add byte ptr [rax + 0x58], dh ; cmc ; jmp qword ptr [rcx]
0x00000000000fa12f : add byte ptr [rax + 0x59], bh ; syscall ; cmp rax, -0xfff ; jae 0xfa150 ; ret
0x00000000000f850f : add byte ptr [rax + 0x5a], bh ; syscall ; cmp rax, -0xfff ; jae 0xf8530 ; ret
0x00000000000f853f : add byte ptr [rax + 0x5b], bh ; syscall ; cmp rax, -0xfff ; jae 0xf8560 ; ret
0x000000000001fa40 : add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x00000000000f997f : add byte ptr [rax + 0x5d], bh ; syscall ; cmp rax, -0xfff ; jae 0xf99a0 ; ret
0x00000000001a9097 : add byte ptr [rax + 0x5d], bl ; jmp rcx
0x00000000000f99af : add byte ptr [rax + 0x5e], bh ; syscall ; cmp rax, -0xfff ; jae 0xf99d0 ; ret
0x0000000000108d7a : add byte ptr [rax + 0x5f], bl ; call rax
0x00000000000bc81f : add byte ptr [rax + 0x60], bh ; syscall ; cmp rax, -0x1000 ; ja 0xbc849 ; ret
0x00000000000fdfaf : add byte ptr [rax + 0x61], bh ; syscall ; cmp rax, -0xfff ; jae 0xfdfd0 ; ret
0x00000000000fe00f : add byte ptr [rax + 0x62], bh ; syscall ; cmp rax, -0xfff ; jae 0xfe030 ; ret
0x00000000001a3a13 : add byte ptr [rax + 0x62c80000], bh ; out dx, al ; call rsi
0x000000000006dac2 : add byte ptr [rax + 0x63], cl ; adc al, 0x91 ; add rdx, rcx ; jmp rdx
0x0000000000033452 : add byte ptr [rax + 0x63], cl ; adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x000000000006415f : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x000000000002ec37 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000006d8e3 : add byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000004e8c2 : add byte ptr [rax + 0x63], cl ; add al, 0x88 ; lea rcx, qword ptr [rip + 0x2b2] ; add rax, rcx ; jmp rax
0x000000000004bb12 : add byte ptr [rax + 0x63], cl ; add al, 0x88 ; lea rcx, qword ptr [rip + 0xb87] ; add rax, rcx ; jmp rax
0x000000000005a8d6 : add byte ptr [rax + 0x63], cl ; add al, 0x88 ; lea rcx, qword ptr [rip - 0x2e2] ; add rax, rcx ; jmp rax
0x000000000004eed4 : add byte ptr [rax + 0x63], cl ; add al, 0x88 ; lea rcx, qword ptr [rip - 0x360] ; add rax, rcx ; jmp rax
0x000000000005aa90 : add byte ptr [rax + 0x63], cl ; add al, 0x88 ; lea rcx, qword ptr [rip - 0x49c] ; add rax, rcx ; jmp rax
0x000000000004f048 : add byte ptr [rax + 0x63], cl ; add al, 0x88 ; lea rcx, qword ptr [rip - 0x4d4] ; add rax, rcx ; jmp rax
0x000000000005ab88 : add byte ptr [rax + 0x63], cl ; add al, 0x88 ; lea rcx, qword ptr [rip - 0x594] ; add rax, rcx ; jmp rax
0x000000000002e884 : add byte ptr [rax + 0x63], cl ; add al, 0x8a ; add rax, rdx ; jmp rax
0x000000000005a704 : add byte ptr [rax + 0x63], cl ; add al, 0x90 ; add rax, rcx ; mov edx, 1 ; jmp rax
0x000000000004dd73 : add byte ptr [rax + 0x63], cl ; add al, 0x90 ; add rax, rcx ; xor r8d, r8d ; mov edx, 1 ; jmp rax
0x00000000000646b4 : add byte ptr [rax + 0x63], cl ; add al, 0x91 ; add rax, rcx ; jmp rax
0x00000000000cefba : add byte ptr [rax + 0x63], cl ; add al, 0x9a ; add rax, rdx ; jmp rax
0x00000000000aac66 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rax, rsi ; jmp rax
0x00000000000e13c4 : add byte ptr [rax + 0x63], cl ; add cl, byte ptr [rax - 0x77] ; ret
0x000000000003adb9 : add byte ptr [rax + 0x63], cl ; and al, 0xc ; add rsp, 0x18 ; ret
0x0000000000125bf4 : add byte ptr [rax + 0x63], cl ; fisttp dword ptr [rax + 1] ; ret
0x000000000007a608 : add byte ptr [rax + 0x63], cl ; jnp 0x7a68d ; syscall ; cmp rax, -0x1000 ; ja 0x7a630 ; pop rbx ; ret
0x000000000006da0c : add byte ptr [rax + 0x63], cl ; or al, 0x8f ; add rcx, rdi ; jmp rcx
0x0000000000057142 : add byte ptr [rax + 0x63], cl ; ret
0x000000000006cd0a : add byte ptr [rax + 0x63], cl ; ret 0x3948
0x0000000000114c18 : add byte ptr [rax + 0x63], cl ; ret 0x4864
0x00000000001266ff : add byte ptr [rax + 0x63], cl ; rol byte ptr [rcx + rcx*4 - 0x40], cl ; mov byte ptr [rdi + rdx], 0 ; ret
0x0000000000126880 : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 1], 1 ; xlatb ; mov qword ptr [r9], rdi ; ret
0x00000000000467f1 : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret
0x0000000000036287 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x2d], -0x1e ; shr rax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x000000000013044b : add byte ptr [rax + 0x63], cl ; sbb byte ptr [r11 + 0xb7603f8], r8b ; mov eax, 2 ; ret
0x000000000013ac98 : add byte ptr [rax + 0x63], cl ; vpaddw xmm7, xmm15, xmm7 ; add eax, dword ptr [rax] ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8e0f
0x00000000000f732e : add byte ptr [rax + 0x6607b70f], dl ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000ce19f : add byte ptr [rax + 0x66], bh ; syscall ; ret
0x0000000000034b7c : add byte ptr [rax + 0x66d02148], al ; movd mm0, rax ; ret
0x0000000000034bc8 : add byte ptr [rax + 0x66d02148], al ; movd mm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x00000000001094bf : add byte ptr [rax + 0x67], bh ; syscall ; cmp rax, -0xfff ; jae 0x1094e0 ; ret
0x00000000000ce1bf : add byte ptr [rax + 0x68], bh ; syscall ; ret
0x00000000000ce1af : add byte ptr [rax + 0x6b], bh ; syscall ; ret
0x00000000000ce1cf : add byte ptr [rax + 0x6c], bh ; syscall ; ret
0x00000000000ce3af : add byte ptr [rax + 0x6d], bh ; syscall ; cmp rax, -0xfff ; jae 0xce3d0 ; ret
0x00000000000ce18f : add byte ptr [rax + 0x6e], bh ; syscall ; ret
0x00000000000ce18e : add byte ptr [rax + 0x6e], dil ; syscall ; ret
0x00000000000ce3df : add byte ptr [rax + 0x6f], bh ; syscall ; ret
0x00000000001a3c67 : add byte ptr [rax + 0x6f], bl ; out dx, al ; jmp qword ptr [rdi]
0x00000000000ce43f : add byte ptr [rax + 0x70], bh ; syscall ; cmp rax, -0xfff ; jae 0xce460 ; ret
0x0000000000008fcf : add byte ptr [rax + 0x710], dl ; add byte ptr [rax], al ; add byte ptr [rcx + rax], bl ; add byte ptr [rax], al ; ret
0x0000000000034b4f : add byte ptr [rax + 0x7110ff2], al ; and rax, rdx ; movq xmm0, rax ; ret
0x00000000000ce1df : add byte ptr [rax + 0x73], bh ; syscall ; cmp rax, -0xfff ; jae 0xce200 ; ret
0x000000000008bd6f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000000d24ff : add byte ptr [rax + 0x7500017f], al ; or al, byte ptr [rbx - 0xf76fd32] ; ret
0x000000000019a997 : add byte ptr [rax + 0x76], bh ; std ; jmp qword ptr [rdi]
0x00000000000ce46f : add byte ptr [rax + 0x76], bh ; syscall ; cmp rax, -0xfff ; jae 0xce490 ; ret
0x00000000000ce49f : add byte ptr [rax + 0x78], bh ; syscall ; cmp rax, -0xfff ; jae 0xce4c0 ; ret
0x00000000000a766f : add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000000ce37f : add byte ptr [rax + 0x79], bh ; syscall ; cmp rax, -0xfff ; jae 0xce3a0 ; ret
0x0000000000108e3f : add byte ptr [rax + 0x7a], bh ; syscall ; cmp rax, -0xfff ; jae 0x108e60 ; ret
0x0000000000108e6f : add byte ptr [rax + 0x7b], bh ; syscall ; cmp rax, -0xfff ; jae 0x108e90 ; ret
0x00000000000ce40f : add byte ptr [rax + 0x7c], bh ; syscall ; cmp rax, -0xfff ; jae 0xce430 ; ret
0x00000000001091bf : add byte ptr [rax + 0x7d], bh ; syscall ; cmp rax, -0xfff ; jae 0x1091e0 ; ret
0x00000000000ce977 : add byte ptr [rax + 0x7e], bh ; ret
0x00000000001091ef : add byte ptr [rax + 0x7e], bh ; syscall ; cmp rax, -0xfff ; jae 0x109210 ; ret
0x000000000019a01f : add byte ptr [rax + 0x7f], ah ; std ; jmp qword ptr [rdx]
0x00000000000ce8ca : add byte ptr [rax + 0x7f], bh ; ret
0x0000000000035ad4 : add byte ptr [rax + 0x7f], bh ; syscall ; cmp rax, -0x1000 ; ja 0x35b01 ; ret
0x0000000000035b1e : add byte ptr [rax + 0x82], bh ; syscall ; cmp rax, -0x1000 ; ja 0x35b40 ; ret
0x000000000003616f : add byte ptr [rax + 0x83], bh ; syscall ; cmp rax, -0xfff ; jae 0x36190 ; ret
0x000000000003616e : add byte ptr [rax + 0x83], dil ; syscall ; cmp rax, -0xfff ; jae 0x36191 ; ret
0x00000000000f816f : add byte ptr [rax + 0x84], bh ; syscall ; cmp rax, -0xfff ; jae 0xf8190 ; ret
0x000000000010975f : add byte ptr [rax + 0x86], bh ; syscall ; cmp rax, -0xfff ; jae 0x109780 ; ret
0x00000000000f843f : add byte ptr [rax + 0x8a], bh ; syscall ; cmp rax, -0xfff ; jae 0xf8460 ; ret
0x00000000000fe39f : add byte ptr [rax + 0x8d], bh ; syscall ; cmp rax, -0xfff ; jae 0xfe3c0 ; ret
0x00000000000ebfdf : add byte ptr [rax + 0x8e], bh ; syscall ; cmp rax, -0xfff ; jae 0xec000 ; ret
0x00000000000ec00f : add byte ptr [rax + 0x8f], bh ; syscall ; cmp rax, -0xfff ; jae 0xec030 ; ret
0x00000000000ec03f : add byte ptr [rax + 0x90], bh ; syscall ; cmp rax, -0xfff ; jae 0xec060 ; ret
0x00000000000ec06f : add byte ptr [rax + 0x91], bh ; syscall ; cmp rax, -0xfff ; jae 0xec090 ; ret
0x00000000000ec0cf : add byte ptr [rax + 0x92], bh ; syscall ; cmp rax, -0xfff ; jae 0xec0f0 ; ret
0x00000000000ec0ff : add byte ptr [rax + 0x93], bh ; syscall ; cmp rax, -0xfff ; jae 0xec120 ; ret
0x00000000000ec12f : add byte ptr [rax + 0x94], bh ; syscall ; cmp rax, -0xfff ; jae 0xec150 ; ret
0x0000000000102def : add byte ptr [rax + 0x96], bh ; syscall ; cmp rax, -0xfff ; jae 0x102e10 ; ret
0x0000000000102e1f : add byte ptr [rax + 0x97], bh ; syscall ; cmp rax, -0xfff ; jae 0x102e40 ; ret
0x0000000000102e4f : add byte ptr [rax + 0x98], bh ; syscall ; cmp rax, -0xfff ; jae 0x102e70 ; ret
0x000000000010911f : add byte ptr [rax + 0x9a], bh ; syscall ; cmp rax, -0xfff ; jae 0x109140 ; ret
0x000000000010957f : add byte ptr [rax + 0x9b], bh ; syscall ; cmp rax, -0xfff ; jae 0x1095a0 ; ret
0x00000000001090ef : add byte ptr [rax + 0x9e], bh ; syscall ; cmp rax, -0xfff ; jae 0x109110 ; ret
0x00000000000fdfdf : add byte ptr [rax + 0xa0], bh ; syscall ; cmp rax, -0xfff ; jae 0xfe000 ; ret
0x00000000000feccf : add byte ptr [rax + 0xa1], bh ; syscall ; cmp rax, -0xfff ; jae 0xfecf0 ; ret
0x00000000000fed5f : add byte ptr [rax + 0xa2], bh ; syscall ; cmp rax, -0xfff ; jae 0xfed80 ; ret
0x00000000000fec9f : add byte ptr [rax + 0xa3], bh ; syscall ; cmp rax, -0xfff ; jae 0xfecc0 ; ret
0x00000000000bc8ff : add byte ptr [rax + 0xa4], bh ; syscall ; cmp rax, -0xfff ; jae 0xbc920 ; ret
0x0000000000108ddf : add byte ptr [rax + 0xa6], bh ; syscall ; cmp rax, -0xfff ; jae 0x108e00 ; ret
0x00000000000ff18f : add byte ptr [rax + 0xa7], bh ; syscall ; cmp rax, -0xfff ; jae 0xff1b0 ; ret
0x00000000000ff1bf : add byte ptr [rax + 0xa8], bh ; syscall ; cmp rax, -0xfff ; jae 0xff1e0 ; ret
0x00000000000fb267 : add byte ptr [rax + 0xa], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000102c9f : add byte ptr [rax + 0xa], bh ; syscall ; cmp rax, -0xfff ; jae 0x102cc0 ; ret
0x00000000000fea6f : add byte ptr [rax + 0xaa], bh ; syscall ; cmp rax, -0xfff ; jae 0xfea90 ; ret
0x00000000000feb0f : add byte ptr [rax + 0xab], bh ; syscall ; cmp rax, -0xfff ; jae 0xfeb30 ; ret
0x0000000000108c7f : add byte ptr [rax + 0xac], bh ; syscall ; cmp rax, -0xfff ; jae 0x108ca0 ; ret
0x0000000000108c4f : add byte ptr [rax + 0xad], bh ; syscall ; cmp rax, -0xfff ; jae 0x108c70 ; ret
0x000000000010924f : add byte ptr [rax + 0xae], bh ; syscall ; cmp rax, -0xfff ; jae 0x109270 ; ret
0x000000000010927f : add byte ptr [rax + 0xb0], bh ; syscall ; cmp rax, -0xfff ; jae 0x1092a0 ; ret
0x00000000000abcaf : add byte ptr [rax + 0xb740fe6], al ; mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xabd2e ; ret
0x00000000000abcff : add byte ptr [rax + 0xb740fe6], al ; mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xabd2e ; ret
0x0000000000102c6f : add byte ptr [rax + 0xb], bh ; syscall ; cmp rax, -0xfff ; jae 0x102c90 ; ret
0x0000000000108e0f : add byte ptr [rax + 0xbb], bh ; syscall ; cmp rax, -0xfff ; jae 0x108e30 ; ret
0x000000000010763f : add byte ptr [rax + 0xc6], bh ; syscall ; cmp rax, -0xfff ; jae 0x107660 ; ret
0x000000000010751f : add byte ptr [rax + 0xc7], bh ; syscall ; cmp rax, -0xfff ; jae 0x107540 ; ret
0x00000000000dfc87 : add byte ptr [rax + 0xc], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dfd6f : add byte ptr [rax + 0xc], bh ; ret
0x000000000011b201 : add byte ptr [rax + 0xca], bh ; add rsp, 0x28 ; ret
0x000000000011b1af : add byte ptr [rax + 0xca], bh ; ret
0x0000000000116d61 : add byte ptr [rax + 0xca], bh ; syscall ; pop rdx ; pop rsi ; ret
0x00000000001092af : add byte ptr [rax + 0xd5], bh ; syscall ; cmp rax, -0xfff ; jae 0x1092d0 ; ret
0x000000000010914f : add byte ptr [rax + 0xe4], bh ; syscall ; ret
0x0000000000035a68 : add byte ptr [rax + 0xe], bh ; syscall ; cmp rax, -0x1000 ; ja 0x35a91 ; ret
0x00000000001ac32f : add byte ptr [rax + 0xe], dh ; cmc ; jmp qword ptr [rax]
0x00000000001b6a6f : add byte ptr [rax + 0xe], dl ; clc ; call qword ptr [rbx]
0x00000000001004ff : add byte ptr [rax + 0xeb], bh ; syscall ; cmp rax, -0x1000 ; ja 0x100529 ; ret
0x00000000000d832f : add byte ptr [rax + 0xf00637b], al ; test dword ptr [rsi + 4], esi ; add byte ptr [rax], al ; mov dword ptr [rbx + 0x2c], eax ; jmp 0xd8311
0x000000000014637f : add byte ptr [rax + 0xf247c], al ; jne 0x14639e ; xor eax, eax ; add rsp, 0x48 ; ret
0x00000000000aad37 : add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x000000000002dd44 : add byte ptr [rax + 0xf], al ; mov bh, 0xc0 ; ret
0x000000000002369f : add byte ptr [rax + 0xf], al ; mov dh, 0xc6 ; test sil, sil ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x00000000000c38fe : add byte ptr [rax + 0xf], al ; mov dh, 0xd6 ; movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x00000000000da734 : add byte ptr [rax + 0xf], al ; mov dh, 0xed ; movsxd rax, dword ptr [rsi + rbp*4] ; add rax, rsi ; jmp rax
0x00000000001b6a87 : add byte ptr [rax + 0xf], bl ; clc ; call qword ptr [rsi]
0x00000000000fe9c7 : add byte ptr [rax + 0xf], cl ; add al, 0x24 ; add rsp, 0x18 ; ret
0x000000000008f765 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x0000000000022817 : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480147 ; ret
0x00000000000c9b2c : add byte ptr [rax + 0xf], cl ; ret
0x000000000010a4aa : add byte ptr [rax + 0xf], cl ; ret 0x31c3
0x00000000000587da : add byte ptr [rax + 0xf], cl ; ret 0x348
0x00000000000908fb : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000143444 : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x0000000000110b2b : add byte ptr [rax + 0xf], cl ; ret 0x8349
0x000000000005220d : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000008564b : add byte ptr [rax + 0xf], cl ; ret 0x894c
0x00000000000be656 : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x00000000000aad58 : add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x00000000000aacaa : add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x00000000000ccf6d : add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000000fad28 : add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x0000000000026436 : add byte ptr [rax + 0xf], cl ; ret 0xf685
0x0000000000098d32 : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000ce98f : add byte ptr [rax + 0xfc17], bh ; ret
0x00000000000899b4 : add byte ptr [rax + 0xfd63948], al ; xchg ebx, ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000010942f : add byte ptr [rax + 0xfd], bh ; syscall ; cmp rax, -0xfff ; jae 0x109450 ; ret
0x00000000000abfef : add byte ptr [rax + 0xfe580f5], cl ; je 0xac01c ; add rax, 2 ; ret
0x000000000010948f : add byte ptr [rax + 0xff], bh ; syscall ; cmp rax, -0xfff ; jae 0x1094b0 ; ret
0x00000000000ba7bc : add byte ptr [rax + 1], bh ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006e35f : add byte ptr [rax + 1], bh ; add rsp, 0x90 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006f8b6 : add byte ptr [rax + 1], bh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000100d44 : add byte ptr [rax + 1], bh ; add rsp, 8 ; ret
0x0000000000170d1f : add byte ptr [rax + 1], bh ; jg 0x170d3a ; neg eax ; ret
0x00000000000abd1f : add byte ptr [rax + 1], bh ; jg 0xabd33 ; neg eax ; ret
0x0000000000132535 : add byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013a12e : add byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013a5ba : add byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f71c7 : add byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000004a4fc : add byte ptr [rax + 1], bh ; ret
0x0000000000090ba5 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000079281 : add byte ptr [rax + 1], cl ; imul ebx, dword ptr [rax], 0x4c ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000029bae : add byte ptr [rax + 1], cl ; ret
0x000000000008405f : add byte ptr [rax + 1], cl ; ret 0x214c
0x00000000000e4ccc : add byte ptr [rax + 1], cl ; ret 0xc748
0x00000000000f71c6 : add byte ptr [rax + 1], dil ; pop rbx ; ret
0x0000000000078cae : add byte ptr [rax + 1], dil ; ret
0x000000000016bbac : add byte ptr [rax + 2], bh ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000013073f : add byte ptr [rax + 2], bh ; ret
0x00000000000ceb66 : add byte ptr [rax + 7], bh ; ret
0x0000000000021427 : add byte ptr [rax + 8], bh ; ret
0x0000000000108d9f : add byte ptr [rax + 8], bh ; syscall ; cmp rax, -0xfff ; jae 0x108dc0 ; ret
0x00000000001aafb7 : add byte ptr [rax + rax + 0x16640000], dl ; add dword ptr [rax], eax ; adc byte ptr [rbp - 0xc], bh ; jmp rdi
0x00000000001ad66f : add byte ptr [rax + rax + 0x3d1c0000], cl ; add dword ptr [rax], eax ; sub byte ptr [rcx - 0xb], bl ; call rdx
0x00000000001ba5d7 : add byte ptr [rax + rax + 0x45f0000], ch ; add byte ptr [rax], al ; mov dh, 2 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000017a62b : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x000000000019804f : add byte ptr [rax + rax*2], ah ; clc ; call rsp
0x00000000001a19eb : add byte ptr [rax + rax*4 - 0x73400000], dl ; in eax, dx ; jmp rcx
0x00000000000f7132 : add byte ptr [rax + rax*8 + 0x9b81175], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000198977 : add byte ptr [rax + rax*8 + 0xf94fff9], dl ; add al, byte ptr [rax] ; ret
0x000000000005c372 : add byte ptr [rax + rax*8 - 0x74b7d68c], al ; adc byte ptr [r8 - 0x77], cl ; ret 0x348
0x00000000001a5973 : add byte ptr [rax + rax*8], bl ; add byte ptr [rax], al ; clc ; jp 0x1a597d ; jmp qword ptr [rdi]
0x00000000000a6cec : add byte ptr [rax + rax], 0 ; ret
0x00000000001a915f : add byte ptr [rax + rax], ah ; add byte ptr [rax + rdi*8], cl ; add byte ptr [rax], al ; sbb byte ptr [rdi - 0xe], ah ; call qword ptr [rax]
0x00000000001b5a4f : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; cld ; rol byte ptr [rcx], 0 ; pop rax ; ret 0xfff7
0x00000000001b35f7 : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pushfq ; add dword ptr [rax], eax ; xor byte ptr [rcx], 0xf7 ; jmp qword ptr [rsi]
0x00000000001a2b5f : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; or al, 0x92 ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; std ; jmp rdi
0x000000000019f3bf : add byte ptr [rax + rax], ah ; add byte ptr [rdi + rax + 0x5180000], ch ; in eax, dx ; call qword ptr [rcx]
0x00000000001ad8f7 : add byte ptr [rax + rax], ah ; add byte ptr [rdi + rdi + 0x61f00001], ah ; cmc ; jmp qword ptr [rbx]
0x00000000001a50bf : add byte ptr [rax + rax], ah ; add byte ptr [rdi + rsi*4], ch ; add byte ptr [rax + 0x3d], cl ; out dx, eax ; jmp rsi
0x00000000001b2b1f : add byte ptr [rax + rax], al ; add ah, cl ; xchg eax, ecx ; add dword ptr [rax], eax ; enter -0x91b, -1 ; ret
0x000000000011e8e4 : add byte ptr [rax + rax], al ; add al, ch ; ret
0x00000000001ac207 : add byte ptr [rax + rax], al ; add byte ptr [rax + rbp + 0xbb00001], dh ; cmc ; jmp rcx
0x000000000019f1ff : add byte ptr [rax + rax], al ; add byte ptr [rax + rbx*2 - 0xa80000], ch ; in al, dx ; call rsp
0x000000000011e8d9 : add byte ptr [rax + rax], al ; add byte ptr [rax - 0x39], cl ; add eax, 0x2a6bb8 ; add byte ptr [rax + rax], al ; add al, ch ; ret
0x00000000000f2642 : add byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000008bda3 : add byte ptr [rax + rax], al ; add byte ptr [rax], al ; je 0x8bdbf ; lea rax, qword ptr [rip + 0xe2edf] ; ret
0x0000000000135340 : add byte ptr [rax + rax], al ; add byte ptr [rax], al ; mov dword ptr [rbx + 0x98], eax ; jmp 0x13531b
0x000000000003a4e8 : add byte ptr [rax + rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b90e : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000ffdce : add byte ptr [rax + rax], al ; add byte ptr [rcx + rcx*4 - 0x10], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011f6ba : add byte ptr [rax + rax], al ; add byte ptr [rcx + rcx*4 - 6], cl ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000001b2ad7 : add byte ptr [rax + rax], al ; add byte ptr [rcx + rdx*4 - 0x1abfffff], al ; idiv bh ; ret
0x00000000000ffdeb : add byte ptr [rax + rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000008ba02 : add byte ptr [rax + rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], 0x6b ; or byte ptr [rax - 0x77], cl ; adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000008bb21 : add byte ptr [rax + rax], al ; add byte ptr [rdi + rax*8], ah ; or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000199fcf : add byte ptr [rax + rax], al ; add byte ptr [rsi + rax], bh ; add al, ch ; test eax, ebp ; call rsp
0x000000000003c4f2 : add byte ptr [rax + rax], al ; add cl, ch ; ret 0xfffe
0x00000000000dbdf6 : add byte ptr [rax + rax], al ; cmp eax, 6 ; je 0xdbe30 ; cmp eax, 3 ; je 0xdbe20 ; xor eax, eax ; pop rbx ; ret
0x0000000000153728 : add byte ptr [rax + rax], al ; movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x00000000001a5c3f : add byte ptr [rax + rax], bh ; add ah, ch ; ret 0
0x00000000001a8357 : add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; add al, 0xea ; add byte ptr [rax], al ; adc byte ptr [rcx], ah ; call rsi
0x00000000001b2f8f : add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; cmp al, 0x96 ; add dword ptr [rax], eax ; add rdi, rsi ; call rsi
0x00000000001a885f : add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; or al, 0xef ; add byte ptr [rax], al ; sbb byte ptr [rcx], bh ; call rsi
0x00000000001af7d7 : add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; test byte ptr [rsi + 1], bl ; add al, dh ; jrcxz 0x1af7e4 ; call rsi
0x00000000001b6fd7 : add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; test dh, dl ; add dword ptr [rax], eax ; mov al, 0x2c ; clc ; jmp rdi
0x00000000001b40e7 : add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; xchg eax, esp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; push rax ; jl 0x1b40f6 ; call rcx
0x00000000001a7167 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; adc al, 0xd8 ; add byte ptr [rax], al ; xor byte ptr [rbx - 0xf], cl ; jmp qword ptr [rcx]
0x0000000000079219 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001a724f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; cld ; fadd dword ptr [rax] ; add al, ch ; push rsp ; int1 ; jmp qword ptr [rax]
0x00000000001aa947 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; hlt ; sgdt ptr [rax] ; adc byte ptr [rsi], dl ; hlt ; call qword ptr [rbx]
0x00000000001aa987 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; xor al, 0x10 ; add dword ptr [rax], eax ; adc byte ptr [rsi], dl ; hlt ; call qword ptr [rsi]
0x00000000000795d9 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001a3c5f : add byte ptr [rax + rax], bl ; add byte ptr [rbx], cl ; add byte ptr [rax], al ; pop rax ; outsd dx, dword ptr [rsi] ; out dx, al ; jmp qword ptr [rdi]
0x00000000001af87f : add byte ptr [rax + rax], bl ; add byte ptr [rdi + rbx*2], ch ; add dword ptr [rax], eax ; cmp bh, ah ; cmc ; jmp rsp
0x00000000001a1b87 : add byte ptr [rax + rax], bl ; add byte ptr [rdx + rax*4], dh ; add byte ptr [rax], al ; nop ; xchg eax, esp ; in eax, dx ; call qword ptr [rcx]
0x00000000001a9e4f : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; cld ; add al, 1 ; add byte ptr [rax + 0x41], cl ; call qword ptr [rdx]
0x00000000001a908f : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; cmp al, 0xf7 ; add byte ptr [rax], al ; pop rax ; pop rbp ; jmp rcx
0x00000000001a7dc7 : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; je 0x1a7dbe ; add byte ptr [rax], al ; mov al, 0x10 ; jmp qword ptr [rdi]
0x00000000001a13cf : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; jl 0x1a145c ; add byte ptr [rax], al ; clc ; jns 0x1a13d4 ; call rcx
0x000000000019f8f7 : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rdi ; add byte ptr [rax], al ; nop ; sbb ebp, ebp ; call rbx
0x000000000019e04f : add byte ptr [rax + rax], cl ; add ah, bh ; add byte ptr [rax], r8b ; shr rdx, 1 ; jmp rdi
0x00000000001b3f27 : add byte ptr [rax + rax], cl ; add ah, dl ; movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; shr cl, 0xfb ; call rsi
0x00000000001ac327 : add byte ptr [rax + rax], cl ; add ah, dl ; sub dword ptr [rcx], eax ; add byte ptr [rax + 0xe], dh ; cmc ; jmp qword ptr [rax]
0x00000000001a3a0f : add byte ptr [rax + rax], cl ; add byte ptr [rax + 0x62c80000], bh ; out dx, al ; call rsi
0x00000000001a19e7 : add byte ptr [rax + rax], cl ; add byte ptr [rax + rax*4 - 0x73400000], dl ; in eax, dx ; jmp rcx
0x00000000001a2977 : add byte ptr [rax + rax], cl ; add byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; ror dl, 1 ; in eax, dx ; call rdi
0x0000000000088d7b : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; add rsp, 0x10 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000122f39 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; add rsp, 0x18 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000110589 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000fe4a9 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000858db : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x0000000000089e0e : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008bb27 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000085769 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001b748f : add byte ptr [rax + rax], cl ; add byte ptr [rbx + rbx*8], bh ; add dword ptr [rax], eax ; fdivr dword ptr [rcx] ; clc ; call rax
0x00000000001a1457 : add byte ptr [rax + rax], cl ; add byte ptr [rbx + rdi*2], al ; add byte ptr [rax], al ; adc byte ptr [rbp - 0x13], bh ; call rsi
0x00000000001b9aa7 : add byte ptr [rax + rax], cl ; add byte ptr [rcx + rax + 2], dl ; add byte ptr [rax - 0x3d], ah ; clc ; jmp rcx
0x00000000001b9a57 : add byte ptr [rax + rax], cl ; add byte ptr [rcx + rax], al ; add al, byte ptr [rax] ; rol cl, 1 ; clc ; call rcx
0x00000000001a2267 : add byte ptr [rax + rax], cl ; add byte ptr [rcx + rcx*4], dl ; add byte ptr [rax], al ; nop ; mov dh, 0xed ; call qword ptr [rbx]
0x00000000001ad0ff : add byte ptr [rax + rax], cl ; add byte ptr [rdi + rsi + 0x3c980001], ch ; cmc ; call qword ptr [rdi]
0x000000000019ffcf : add byte ptr [rax + rax], cl ; add byte ptr [rsi], bh ; add byte ptr [rax], bh ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001a9daf : add byte ptr [rax + rax], cl ; add byte ptr [rsp + rax + 1], bl ; add byte ptr [rax + 0x36], ch ; call qword ptr [rcx]
0x000000000019ed0f : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; cld ; add byte ptr [rax], al ; add byte ptr [rax], ch ; fsub st(4), st(0) ; jmp qword ptr [rcx]
0x00000000001a0def : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; fsub qword ptr [rcx] ; add byte ptr [rax], al ; call 0x2719fb73
0x00000000001a70c7 : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; je 0x1a70b1 ; add byte ptr [rax], al ; nop ; int1 ; call rdx
0x00000000001a70ff : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; xlatb ; add byte ptr [rax], al ; cmp byte ptr [rdx - 0xf], cl ; jmp rcx
0x00000000001a11c7 : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; mov ah, 0x25 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x13], dh ; jmp qword ptr [rcx]
0x00000000001b5bef : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; pushfq ; ret 1
0x00000000001b5c97 : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; ret
0x00000000001b5bb7 : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; ret 1
0x00000000001a173f : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; sub al, 0x2b ; add byte ptr [rax], al ; call 0x281a04db
0x00000000001a74e7 : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; xchg eax, esp ; fild dword ptr [rax] ; add byte ptr [rax], ah ; pop rdi ; int1 ; call rbx
0x00000000001b996b : add byte ptr [rax + rax], dl ; add al, byte ptr [rax] ; loopne 0x1b993b ; clc ; call qword ptr [rbx]
0x00000000001b9967 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; adc al, 0 ; add al, byte ptr [rax] ; loopne 0x1b993f ; clc ; call qword ptr [rbx]
0x00000000001ab867 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; adc al, 0x1f ; add dword ptr [rax], eax ; ror ch, 0xf4 ; jmp qword ptr [rcx]
0x00000000001ae467 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; adc al, 0x4b ; add dword ptr [rax], eax ; push rax ; stosb byte ptr [rdi], al ; cmc ; call qword ptr [rax]
0x00000000001ae567 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; adc al, 0x4c ; add dword ptr [rax], eax ; push rax ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001af067 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; adc al, 0x57 ; add dword ptr [rax], eax ; and bl, al ; cmc ; jmp qword ptr [rdi]
0x00000000001b0967 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; adc al, 0x70 ; add dword ptr [rax], eax ; push rax ; movsxd rsi, esi ; jmp qword ptr [rsi]
0x00000000001a6467 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; adc al, 0xcb ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001acb57 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; add al, 0x32 ; add dword ptr [rax], eax ; xor byte ptr [rsi], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001ae19f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; add qword ptr [rax], rax ; js 0x1ae149 ; cmc ; jmp qword ptr [rcx]
0x00000000000c9001 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; add rsp, 0x98 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001ab677 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; and al, 0x1d ; add dword ptr [rax], eax ; and bl, cl ; hlt ; jmp qword ptr [rsi]
0x00000000001aca77 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; and al, 0x31 ; add dword ptr [rax], eax ; loopne 0x1acab0 ; cmc ; jmp qword ptr [rcx]
0x00000000001a1377 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; and al, 0x7a ; add byte ptr [rax], al ; and byte ptr [rdx - 0x13], bh ; jmp qword ptr [rbx]
0x00000000001a2a77 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; and al, 0x91 ; add byte ptr [rax], al ; loopne 0x1a2a5a ; in eax, dx ; call qword ptr [rdx]
0x00000000001a5477 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; and al, 0xbb ; add byte ptr [rax], al ; xor bh, bl ; cld ; call qword ptr [rax]
0x00000000001b7777 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; and al, 0xde ; add dword ptr [rax], eax ; nop ; clc ; call qword ptr [rdx]
0x00000000001abe9f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; and rax, 0xe3480001 ; hlt ; jmp qword ptr [rcx]
0x00000000001a8f4f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; cmc ; add byte ptr [rax], al ; push rbp ; jmp qword ptr [rcx]
0x00000000001ad44f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; cmp al, byte ptr [rcx] ; add byte ptr [rax + 0x55], ch ; cmc ; call qword ptr [rdx]
0x00000000001b094f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; cmp byte ptr [rbx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001a644f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; retf 0 ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001ab74f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; sbb eax, 0xcce80001 ; hlt ; jmp qword ptr [rcx]
0x000000000019a98f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cmp al, 0x10 ; add byte ptr [rax], al ; js 0x19aa1c ; std ; jmp qword ptr [rdi]
0x00000000001ad58f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cmp al, 0x3c ; add dword ptr [rax], eax ; sub byte ptr [rax - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001a3f8f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cmp al, 0xa6 ; add byte ptr [rax], al ; fdivr dword ptr [rcx - 0x12] ; jmp qword ptr [rcx]
0x00000000001a8e8f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cmp al, 0xf5 ; add byte ptr [rax], al ; call 0x221a80fd
0x00000000001aea2f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; fcom qword ptr [rax + 1] ; add byte ptr [rax], bh ; mov cl, 0xf5 ; jmp qword ptr [rcx]
0x00000000001a8a2f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; fdivr st(0), st(0) ; add byte ptr [rax], al ; call 0x221a7c8d
0x00000000001a8b2f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; fdivr st(1), st(0) ; add byte ptr [rax], al ; test al, 0x46 ; jmp qword ptr [rcx]
0x00000000001ae22f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; fmul qword ptr [rax + 1] ; add byte ptr [rax], cl ; xchg eax, esp ; cmc ; jmp qword ptr [rcx]
0x00000000001ae72f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; fmul qword ptr [rbp + 1] ; add byte ptr [rax], ch ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae32f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; fmul qword ptr [rcx + 1] ; add byte ptr [rax - 0x57], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001ac72f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; fsubr qword ptr [rip + 0x1c680001] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae747 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; hlt ; add qword ptr [r8], r8 ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ad547 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; hlt ; cmp eax, dword ptr [rcx] ; add al, ah ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001b6947 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; hlt ; iretd ; add dword ptr [rax], eax ; adc byte ptr [rax + rdi*8], cl ; jmp qword ptr [rax]
0x00000000001ac647 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; hlt ; sub al, 1 ; add al, al ; sbb ebp, esi ; jmp qword ptr [rcx]
0x00000000001a6437 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, -0x36 ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a4837 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, -0x52 ; add byte ptr [rax], al ; adc dl, dl ; out dx, al ; call qword ptr [rcx]
0x00000000001a8f37 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, -0xb ; add byte ptr [rax], al ; xor byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001b9937 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, -1 ; add dword ptr [rax], eax ; rol cl, 0xf8 ; call qword ptr [rdi]
0x00000000001aab37 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, 0x11 ; add dword ptr [rax], eax ; xor byte ptr [rdi], dl ; hlt ; call qword ptr [rdx]
0x00000000001ab737 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, 0x1d ; add dword ptr [rax], eax ; ror ah, 1 ; hlt ; jmp qword ptr [rcx]
0x00000000001abc37 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, 0x22 ; add dword ptr [rax], eax ; adc ch, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001ad637 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, 0x3c ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xb], bl ; jmp qword ptr [rdx]
0x00000000001b0937 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, 0x6f ; add dword ptr [rax], eax ; and byte ptr [rbx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001ae93f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; add qword ptr [r8], r8 ; clc ; scasd eax, dword ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x00000000001abe3f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; and al, 1 ; add al, ch ; loop 0x1abe4b ; jmp qword ptr [rcx]
0x00000000001a2a3f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; nop ; add byte ptr [rax], al ; fmul st(4) ; in eax, dx ; call qword ptr [rdx]
0x00000000001a493f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; shr rsi, cl ; jmp qword ptr [rsi]
0x00000000001acb3f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; xor dword ptr [rcx], eax ; add byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001ad5bf : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp al, 1 ; add byte ptr [rax + 0x58], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a8abf : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; int1 ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0xe], al ; call qword ptr [rdx]
0x00000000001a12bf : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jns 0x1a12d3 ; add al, cl ; jns 0x1a12c4 ; jmp qword ptr [rdi]
0x00000000001a57bf : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov esi, 0xab880000 ; sti ; call qword ptr [rax]
0x00000000001a43bf : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; mov bl, 0xee ; jmp rdx
0x00000000001a48c7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; je 0x1a4889 ; add byte ptr [rax], al ; loopne 0x1a492c ; cli ; call qword ptr [rax]
0x00000000001a64c7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; je 0x1a64a5 ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001aa9c7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; je 0x1aa9ea ; add dword ptr [rax], eax ; adc byte ptr [rsi], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001aeec7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; je 0x1aef2f ; add dword ptr [rax], eax ; mov al, 0xb8 ; cmc ; jmp qword ptr [rcx]
0x00000000001b06c7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; je 0x1b0747 ; add dword ptr [rax], eax ; shl byte ptr [rcx - 0xa], 1 ; jmp qword ptr [rsi]
0x000000000019cecf : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; jl 0x19cf17 ; add byte ptr [rax], al ; out -0x17, eax ; call qword ptr [rax]
0x00000000001b8bcf : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; jl 0x1b8bd4 ; add dword ptr [rax], eax ; clc ; sahf ; sti ; jmp qword ptr [rdx]
0x00000000001ac7ff : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add dword ptr cs:[rax], eax ; js 0x1ac833 ; cmc ; jmp qword ptr [rcx]
0x00000000001ae6ff : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add qword ptr [r8], r8 ; clc ; lodsb al, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ad4ff : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; cmp eax, dword ptr [rcx] ; add byte ptr [rax + 0x57], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001b8aff : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; int1 ; add dword ptr [rax], eax ; cwde ; lahf ; sti ; jmp qword ptr [rdx]
0x00000000001ab807 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov ah, 0x1e ; add dword ptr [rax], eax ; xor ch, cl ; hlt ; jmp qword ptr [rcx]
0x00000000001ac407 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov ah, 0x2a ; add dword ptr [rax], eax ; jo 0x1ac433 ; cmc ; call qword ptr [rbx]
0x00000000001a8f07 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov ah, 0xf5 ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001a49b7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov al, 0 ; add byte ptr [rax - 0x5d], dh ; cli ; call qword ptr [rax]
0x00000000001a64df : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov ebx, cs ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001a72df : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov ecx, ds ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0xf], dl ; jmp qword ptr [rcx]
0x00000000001b7a0f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov esp, 0x180001e0 ; clc ; call qword ptr [rdx]
0x00000000001a650f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov esp, 0x280000cb ; ja 0x1a6517 ; call qword ptr [rdx]
0x000000000019ca0f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov esp, 0xa8000030 ; fsubp st(1) ; call qword ptr [rcx]
0x00000000001a7e0f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov esp, 0xb80000e4 ; adc dl, dh ; call qword ptr [rbx]
0x00000000001abe0f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov esp, 0xb8000124 ; loop 0x1abe1b ; jmp qword ptr [rcx]
0x00000000001aa80f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov esp, 0xd800010e ; stc ; jmp qword ptr [rdi]
0x00000000001ae60f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov esp, 0xd800014c ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001a45df : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov word ptr [rax + rax - 0x113ae800], gs ; call qword ptr [rax]
0x00000000001aa9df : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov word ptr [rax], ss ; add dword ptr [rax], eax ; sub byte ptr [rsi], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001ae5df : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov word ptr [rcx + rax], cs ; test al, 0xab ; cmc ; jmp qword ptr [rcx]
0x00000000001ae8df : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov word ptr [rdi + 1], cs ; add byte ptr [rax - 0x51], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001aa9f7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc byte ptr [rcx], al ; add byte ptr [rax + 0x16], al ; hlt ; jmp qword ptr [rcx]
0x00000000001b06f7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rdx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001a5bf7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x00000000001a64f7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001ab65f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; or al, 0x1d ; add dword ptr [rax], eax ; or bl, cl ; hlt ; jmp qword ptr [rcx]
0x00000000001ad55f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; or al, 0x3c ; add dword ptr [rax], eax ; clc ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001ae75f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; or al, 0x4e ; add dword ptr [rax], eax ; pop rax ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a415f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; or al, 0xa8 ; add byte ptr [rax], al ; clc ; xchg eax, edx ; out dx, al ; call qword ptr [rax]
0x000000000019f1b7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rax ; add byte ptr [rax], al ; sar dh, 1 ; in al, dx ; call qword ptr [rax]
0x00000000001a5baf : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; ret 0
0x00000000001a64af : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; retf ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001a92af : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; stc ; add byte ptr [rax], al ; js 0x1a9258 ; call rbx
0x00000000001ae9b7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rax ; add dword ptr [rax], eax ; nop ; mov al, 0xf5 ; jmp qword ptr [rcx]
0x00000000001a8ea7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; cmc ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001ad5a7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; cmp al, 1 ; add byte ptr [rax + 0x58], al ; cmc ; jmp qword ptr [rcx]
0x00000000001a47a7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; nop ; shr dh, 1 ; call qword ptr [rax]
0x00000000001a41a7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; test al, 0 ; add al, ah ; xchg eax, ebx ; out dx, al ; jmp qword ptr [rdx]
0x00000000001acaa7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; xor dword ptr [rcx], eax ; add byte ptr [rax + 0x23], al ; cmc ; jmp qword ptr [rcx]
0x00000000001b1aef : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; add dword ptr [rcx], 0xf6940800 ; call qword ptr [rdi]
0x00000000001ae3ef : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; add qword ptr [rax], rax ; call 0x221ad9b2
0x00000000001b08ef : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; fsub dword ptr [rdx - 0xa] ; jmp qword ptr [rsi]
0x00000000001a6fef : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; salc ; add byte ptr [rax], al ; mov byte ptr [rbp - 0xf], al ; call qword ptr [rsi]
0x00000000001a47ef : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; pop rax ; shr esi, 1 ; call rcx
0x00000000001a5b97 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x00000000001a6497 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001abb6f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; sbb al, 0x22 ; add dword ptr [rax], eax ; js 0x1abb5b ; hlt ; jmp qword ptr [rcx]
0x00000000001abe6f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; sbb al, 0x25 ; add dword ptr [rax], eax ; sbb bl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001acb6f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; sbb al, 0x32 ; add dword ptr [rax], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001a596f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; sbb al, 0xc0 ; add byte ptr [rax], al ; clc ; jp 0x1a5981 ; jmp qword ptr [rdi]
0x00000000001a9297 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; stc ; add byte ptr [rax], al ; mov al, 0x91 ; call rbx
0x00000000001af07f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; sub al, 0x57 ; add dword ptr [rax], eax ; cmp bl, al ; cmc ; jmp rax
0x00000000001b067f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; sub al, 0x6d ; add dword ptr [rax], eax ; mov byte ptr [rcx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001b4b7f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; sub al, 0xb2 ; add dword ptr [rax], eax ; call 0x241b432b
0x00000000001a587f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; sub al, 0xbf ; add byte ptr [rax], al ; mov byte ptr [rax + rsi*8], al ; jmp qword ptr [rbx]
0x00000000001a647f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; sub al, 0xcb ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001b857f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; sub al, 0xec ; add dword ptr [rax], eax ; sub byte ptr [rcx - 8], ah ; jmp qword ptr [rbx]
0x00000000001b69d7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; test al, dl ; add dword ptr [rax], eax ; and byte ptr [rsi], cl ; clc ; jmp qword ptr [rax]
0x000000000019ccd7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; test byte ptr [rbx], dh ; add byte ptr [rax], al ; nop ; in eax, -0x17 ; jmp qword ptr [rax]
0x00000000001ad5d7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; test byte ptr [rcx + rax], bh ; add byte ptr [rax + 0x58], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001a43d7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; test byte ptr [rdx - 0x49e00000], ch ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a47d7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; test byte ptr [rsi - 0x2f800000], ch ; out dx, al ; jmp rbx
0x00000000001ac7e7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; add dword ptr cs:[rax], eax ; jo 0x1ac81b ; cmc ; call qword ptr [rsi]
0x00000000001a71e7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; fadd dword ptr [rax] ; add byte ptr [rax], dh ; int1 ; call qword ptr [rcx]
0x00000000001abe87 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xor al, 0x25 ; add dword ptr [rax], eax ; xor bl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001ae687 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xor al, 0x4d ; add dword ptr [rax], eax ; push rax ; lodsb al, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae987 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xor al, 0x50 ; add dword ptr [rax], eax ; mov al, 0xf5 ; call qword ptr [rsi]
0x00000000001aec87 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xor al, 0x53 ; add dword ptr [rax], eax ; nop ; mov ch, 0xf5 ; jmp qword ptr [rbx]
0x00000000001a4587 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xor al, 0xac ; add byte ptr [rax], al ; push rax ; ret
0x00000000001a4987 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xor al, 0xb0 ; add byte ptr [rax], al ; shr byte ptr [rcx - 6], 1 ; call qword ptr [rax]
0x00000000001ac99f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xor byte ptr [rcx], r8b ; add byte ptr [rax + 0x21], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001b7ca7 : add byte ptr [rax + rax], dl ; add byte ptr [rbx + 1], dl ; add byte ptr [rax], ah ; push rcx ; clc ; call rdi
0x000000000019f6a7 : add byte ptr [rax + rax], dl ; add byte ptr [rdx + rcx + 0x12700000], dl ; in eax, dx ; call qword ptr [rax]
0x00000000001a25c7 : add byte ptr [rax + rax], dl ; add byte ptr [rsp + rcx*4], dh ; add al, dl ; ret 0xffed
0x00000000001ac20b : add byte ptr [rax + rbp + 0xbb00001], dh ; cmc ; jmp rcx
0x0000000000194b1f : add byte ptr [rax + rbp - 0x16], dl ; jmp rsp
0x00000000000ac625 : add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x0000000000195027 : add byte ptr [rax + rbp*2 - 0x15], ah ; call rsp
0x0000000000198df7 : add byte ptr [rax + rbp*2], ah ; cli ; jmp rsp
0x000000000019710f : add byte ptr [rax + rbp*2], ah ; idiv bh ; movsb byte ptr [rdi], byte ptr [rsi] ; jnp 0x197124 ; add byte ptr [rbp + rbp*2 - 0xa], dh ; call rsp
0x0000000000196ca7 : add byte ptr [rax + rbp*2], dh ; cmc ; call rsp
0x00000000001a4163 : add byte ptr [rax + rbp*4], cl ; add byte ptr [rax], al ; clc ; xchg eax, edx ; out dx, al ; call qword ptr [rax]
0x00000000001a41ab : add byte ptr [rax + rbp*4], dl ; add al, ah ; xchg eax, ebx ; out dx, al ; jmp qword ptr [rdx]
0x00000000000746ad : add byte ptr [rax + rbx + 0x48], dh ; mov edx, dword ptr [rax] ; cmp rdx, rcx ; mov eax, 0xffffffff ; jb 0x746d1 ; ret
0x000000000019f203 : add byte ptr [rax + rbx*2 - 0xa80000], ch ; in al, dx ; call rsp
0x00000000001967a7 : add byte ptr [rax + rbx*2 - 0xd], ah ; call rsp
0x000000000019818f : add byte ptr [rax + rbx*2], al ; clc ; call rsp
0x000000000019637f : add byte ptr [rax + rbx*4], al ; int1 ; call rsp
0x00000000001a71eb : add byte ptr [rax + rbx*8 + 0x4b300000], dl ; int1 ; call qword ptr [rcx]
0x0000000000195fcf : add byte ptr [rax + rbx*8 - 0x11], al ; call rsp
0x00000000001a716b : add byte ptr [rax + rbx*8], dl ; add byte ptr [rax], al ; xor byte ptr [rbx - 0xf], cl ; jmp qword ptr [rcx]
0x00000000000ceb07 : add byte ptr [rax + rcx + 0x48], dh ; cmp eax, 0x7275 ; jne 0xceaf8 ; xor eax, eax ; ret
0x00000000000ac934 : add byte ptr [rax + rcx + 0x48], dh ; lea eax, dword ptr [rip + 0xc03c2] ; ret
0x0000000000090e84 : add byte ptr [rax + rcx + 0x48], dh ; lea eax, dword ptr [rip + 0xda832] ; ret
0x000000000010135b : add byte ptr [rax + rcx - 9], dh ; ret 0xfc07
0x00000000001ae1a3 : add byte ptr [rax + rcx*2 + 1], cl ; add byte ptr [rax - 0x6d], bh ; cmc ; jmp qword ptr [rcx]
0x00000000000207a6 : add byte ptr [rax + rcx*2 + 3], ah ; add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000019574f : add byte ptr [rax + rcx*2 - 0x31330012], al ; add byte ptr [rax], al ; mov ah, 0x48 ; out dx, al ; jmp rsp
0x00000000001ae1eb : add byte ptr [rax + rcx*2 - 0x6c3fffff], dl ; cmc ; jmp qword ptr [rcx]
0x00000000000ad868 : add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x75], cl ; sub byte ptr [r8 - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000045fb6 : add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x00000000001166bd : add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rdi], cl ; mov bh, 4 ; push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x000000000002e0ff : add byte ptr [rax + rcx*2 - 0x77], ah ; adc dword ptr [rax - 0x75], ecx ; adc eax, 0x392e25 ; mov qword ptr fs:[rdx], rax ; ret
0x000000000002d86b : add byte ptr [rax + rcx*2 - 0x77], ah ; xor dword ptr [rax + 0x39], ecx ; ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x0000000000196b57 : add byte ptr [rax + rdi*2 - 0xc], ah ; call rsp
0x0000000000197d3f : add byte ptr [rax + rdi*4 - 9], dl ; jmp rsp
0x00000000001a9163 : add byte ptr [rax + rdi*8], cl ; add byte ptr [rax], al ; sbb byte ptr [rdi - 0xe], ah ; call qword ptr [rax]
0x000000000017b7d7 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x00000000001aa9e3 : add byte ptr [rax + rdx + 0x16280001], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001aa9fb : add byte ptr [rax + rdx + 0x16400001], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001aaa13 : add byte ptr [rax + rdx + 0x16580001], bh ; hlt ; jmp qword ptr [rcx]
0x0000000000077375 : add byte ptr [rax + rdx - 0x75], dh ; jo 0x7730c ; sar byte ptr [rax + 9], 0xf3 ; ret
0x00000000001aea03 : add byte ptr [rax + rdx*2 - 0x4ef7ffff], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001ae9eb : add byte ptr [rax + rdx*2 - 0x4f0fffff], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001ae98b : add byte ptr [rax + rdx*2], dh ; add dword ptr [rax], eax ; mov al, 0xf5 ; call qword ptr [rsi]
0x0000000000196b87 : add byte ptr [rax + rdx*4 - 0xc], al ; call rsp
0x00000000001a297b : add byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; ror dl, 1 ; in eax, dx ; call rdi
0x00000000001a29cb : add byte ptr [rax + rdx*4], dh ; add byte ptr [rax - 0x34], ah ; in eax, dx ; call qword ptr [rsi]
0x00000000001b69db : add byte ptr [rax + rdx*8 + 0xe200001], al ; clc ; jmp qword ptr [rax]
0x000000000019a993 : add byte ptr [rax + rdx], bh ; add byte ptr [rax], al ; js 0x19aa18 ; std ; jmp qword ptr [rdi]
0x00000000001aa98b : add byte ptr [rax + rdx], dh ; add dword ptr [rax], eax ; adc byte ptr [rsi], dl ; hlt ; call qword ptr [rsi]
0x00000000001ac9a3 : add byte ptr [rax + rsi + 1], cl ; add byte ptr [rax + 0x21], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001b096b : add byte ptr [rax + rsi*2], dl ; add dword ptr [rax], eax ; push rax ; movsxd rsi, esi ; jmp qword ptr [rsi]
0x00000000001a49eb : add byte ptr [rax + rsi*4 - 0xa800000], dl ; out dx, al ; call qword ptr [rax]
0x00000000001a49bb : add byte ptr [rax + rsi*4], ah ; add byte ptr [rax - 0x5d], dh ; cli ; call qword ptr [rax]
0x00000000001a498b : add byte ptr [rax + rsi*4], dh ; add byte ptr [rax], al ; shr byte ptr [rcx - 6], 1 ; call qword ptr [rax]
0x00000000001b8a0b : add byte ptr [rax + rsi*8 - 0x5f9fffff], dh ; sti ; jmp qword ptr [rdx]
0x00000000000c3843 : add byte ptr [rax + rsi], bh ; mov esi, eax ; mov ecx, eax ; jne 0xc3840 ; nop dword ptr [rax] ; mov r10d, eax ; jmp 0xc3831
0x00000000000d24df : add byte ptr [rax - 0x128bd506], al ; cmp dl, 0x3f ; jne 0xd248c ; mov eax, 1 ; ret
0x000000000006d927 : add byte ptr [rax - 0x14dff3b5], al ; retf -0x6f9a ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x6d906
0x000000000013647e : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0x48bf
0x00000000000a68af : add byte ptr [rax - 0x177cb6c9], cl ; add dword ptr [rax - 0x73], ecx ; jg 0xa68cc ; jne 0xa7181 ; ret
0x000000000013a041 : add byte ptr [rax - 0x178b7f80], 0x89 ; rol ecx, 1 ; jmp 0xffffffff80d6976b
0x000000000013a2c8 : add byte ptr [rax - 0x178b7f80], 0x89 ; rol ecx, 1 ; jmp 0xffffffff80d699f2
0x00000000001a3c07 : add byte ptr [rax - 0x17], bh ; cld ; call qword ptr [rdx]
0x00000000000303c6 : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0x8948
0x00000000000f27c4 : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0x8b48
0x00000000001b2adf : add byte ptr [rax - 0x1b], al ; idiv bh ; ret
0x00000000001abea7 : add byte ptr [rax - 0x1d], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001abc6f : add byte ptr [rax - 0x23], al ; hlt ; jmp qword ptr [rcx]
0x000000000012091f : add byte ptr [rax - 0x2976178c], 0xc1 ; out dx, al ; adc bh, dh ; ret 0x8080
0x000000000019eb9f : add byte ptr [rax - 0x29], ah ; in al, dx ; jmp qword ptr [rcx]
0x00000000001abb5f : add byte ptr [rax - 0x2b], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001abb77 : add byte ptr [rax - 0x2b], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001aba67 : add byte ptr [rax - 0x2d], ch ; hlt ; jmp qword ptr [rcx]
0x000000000008dc65 : add byte ptr [rax - 0x2d], cl ; cli ; test rdx, rdx ; je 0x8dd20 ; bsf rax, rdx ; ret
0x000000000008dc65 : add byte ptr [rax - 0x2d], cl ; cli ; test rdx, rdx ; je 0x8dd21 ; bsf rax, rdx ; ret
0x00000000000363a1 : add byte ptr [rax - 0x2d], cl ; loopne 0x363f7 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000036421 : add byte ptr [rax - 0x2d], cl ; loopne 0x3647b ; test dword ptr [rdi], eax ; setne al ; movzx eax, al ; ret
0x00000000001a4947 : add byte ptr [rax - 0x2d], cl ; out dx, al ; jmp qword ptr [rsi]
0x00000000001a492f : add byte ptr [rax - 0x2d], dl ; out dx, al ; call qword ptr [rax]
0x000000000013a043 : add byte ptr [rax - 0x2e76178c], 0xc1 ; jmp 0xffffffff80d69769
0x000000000013a2ca : add byte ptr [rax - 0x2e76178c], 0xc1 ; jmp 0xffffffff80d699f0
0x00000000001a47f7 : add byte ptr [rax - 0x2f], bl ; out dx, al ; call rcx
0x00000000001a29cf : add byte ptr [rax - 0x34], ah ; in eax, dx ; call qword ptr [rsi]
0x00000000001a4647 : add byte ptr [rax - 0x34], bl ; out dx, al ; call rcx
0x00000000001b9d67 : add byte ptr [rax - 0x34], cl ; clc ; call qword ptr [rcx]
0x0000000000034f35 : add byte ptr [rax - 0x3791f09a], al ; movss dword ptr [rdi], xmm1 ; ret
0x000000000004a5d8 : add byte ptr [rax - 0x38f876b8], al ; add al, byte ptr [rdx] ; sar bh, 0xff ; mov eax, 1 ; ret
0x000000000002a490 : add byte ptr [rax - 0x39], cl ; adc byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x0000000000143ecd : add byte ptr [rax - 0x39], cl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdx - 1], bh ; mov eax, edx ; ret
0x00000000000742a5 : add byte ptr [rax - 0x39], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000011e8dc : add byte ptr [rax - 0x39], cl ; add eax, 0x2a6bb8 ; add byte ptr [rax + rax], al ; add al, ch ; ret
0x000000000010b000 : add byte ptr [rax - 0x39], cl ; add eax, 0x2b6214 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000010acee : add byte ptr [rax - 0x39], cl ; add eax, 0x2b6526 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000101041 : add byte ptr [rax - 0x39], cl ; add eax, 0x2c30a3 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000ff9f4 : add byte ptr [rax - 0x39], cl ; add eax, 0x2c4560 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000007f243 : add byte ptr [rax - 0x39], cl ; add eax, 0x3444f9 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000086791 : add byte ptr [rax - 0x39], cl ; cmp byte ptr [rax + 8], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x000000000007dfa8 : add byte ptr [rax - 0x39], cl ; or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000007d329 : add byte ptr [rax - 0x39], cl ; push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000340bf : add byte ptr [rax - 0x39], cl ; ret
0x00000000000899be : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x00000000000338d0 : add byte ptr [rax - 0x39], cl ; ret 0xfff6
0x0000000000033742 : add byte ptr [rax - 0x39], cl ; ret 0xfffa
0x0000000000033984 : add byte ptr [rax - 0x39], cl ; ret 0xfffc
0x00000000000339c8 : add byte ptr [rax - 0x39], cl ; ret 0xfffe
0x000000000003ca1e : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000ac04f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000000ac02f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000000ac08f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000ac03f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000ac07f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000001b9b17 : add byte ptr [rax - 0x3a], cl ; clc ; call qword ptr [rdi]
0x00000000001b9aaf : add byte ptr [rax - 0x3d], ah ; clc ; jmp rcx
0x00000000001a458f : add byte ptr [rax - 0x3d], dl ; out dx, al ; jmp qword ptr [rcx]
0x00000000001af057 : add byte ptr [rax - 0x3e], bl ; cmc ; jmp rax
0x0000000000035205 : add byte ptr [rax - 0x3f000001], al ; shr eax, 0x1f ; ret
0x000000000010031e : add byte ptr [rax - 0x3f7cb7f0], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000034f0c : add byte ptr [rax - 0x3f91f09a], al ; ret
0x00000000000b9a90 : add byte ptr [rax - 0x3f], cl ; call 0xffffffffc294e3a1
0x00000000000b9eb5 : add byte ptr [rax - 0x3f], cl ; call 0xffffffffc294e7c6
0x0000000000127aa8 : add byte ptr [rax - 0x3f], cl ; cli ; add al, 0x48 ; add edx, 1 ; syscall ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000020405 : add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x00000000000c7cfd : add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; jmp rax
0x000000000002f5ef : add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; mov rdi, r13 ; call rax
0x000000000012b795 : add byte ptr [rax - 0x3f], cl ; iretd ; adc dword ptr [rax + rcx*2 + 0x33], esp ; cmp al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000001fa2e : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000006f115 : add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x0000000000000e0b : add byte ptr [rax - 0x44ffffff], bh ; add dword ptr [rax], eax ; add byte ptr [rcx + rax + 0x1c00000], bh ; add byte ptr [rax], al ; ret
0x00000000001aee87 : add byte ptr [rax - 0x48], ch ; cmc ; jmp qword ptr [rcx]
0x000000000003d117 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000001ab3e7 : add byte ptr [rax - 0x49], ch ; stc ; call qword ptr [rax]
0x00000000001a43c7 : add byte ptr [rax - 0x4d], cl ; out dx, al ; jmp rdx
0x00000000001ae98f : add byte ptr [rax - 0x50], al ; cmc ; call qword ptr [rsi]
0x00000000001ae8e7 : add byte ptr [rax - 0x51], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001ae83f : add byte ptr [rax - 0x52], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001ae74f : add byte ptr [rax - 0x53], al ; cmc ; jmp qword ptr [rcx]
0x00000000001ae767 : add byte ptr [rax - 0x53], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001ae68f : add byte ptr [rax - 0x54], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001ae587 : add byte ptr [rax - 0x55], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001ae56f : add byte ptr [rax - 0x55], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001ae46f : add byte ptr [rax - 0x56], dl ; cmc ; call qword ptr [rax]
0x00000000000ac56f : add byte ptr [rax - 0x57], cl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0xac4e6 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac61f : add byte ptr [rax - 0x57], cl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0xac69d ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000001ae337 : add byte ptr [rax - 0x57], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000010e5f : add byte ptr [rax - 0x5a], ah ; adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; and dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x42
0x00000000001b931f : add byte ptr [rax - 0x5a], al ; clc ; jmp qword ptr [rcx]
0x00000000001a49bf : add byte ptr [rax - 0x5d], dh ; cli ; call qword ptr [rax]
0x00000000001b8a0f : add byte ptr [rax - 0x60], ah ; sti ; jmp qword ptr [rdx]
0x000000000008fc07 : add byte ptr [rax - 0x68], cl ; mov byte ptr [rbp + rax], 0 ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000001ae18f : add byte ptr [rax - 0x6d], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001ae1a7 : add byte ptr [rax - 0x6d], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a92b7 : add byte ptr [rax - 0x6e], bh ; call rbx
0x00000000001a1a3f : add byte ptr [rax - 0x72], ah ; in eax, dx ; call qword ptr [rax]
0x00000000000c800c : add byte ptr [rax - 0x73], cl ; adc al, 0xff ; lea rax, qword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000037673 : add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x000000000006cc1c : add byte ptr [rax - 0x73], cl ; adc eax, 0x11869c ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000020c32 : add byte ptr [rax - 0x73], cl ; adc eax, 0x152906 ; mov eax, eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000013aae6 : add byte ptr [rax - 0x73], cl ; adc eax, 0x28b4b2 ; mov qword ptr fs:[rax], rdx ; ret
0x000000000013045f : add byte ptr [rax - 0x73], cl ; adc eax, 0x290719 ; jmp qword ptr [rdx + rax*8]
0x0000000000139c4f : add byte ptr [rax - 0x73], cl ; adc eax, 0x3609 ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000e603a : add byte ptr [rax - 0x73], cl ; adc eax, 0xa1e52 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000e343b : add byte ptr [rax - 0x73], cl ; adc eax, 0xa49a9 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000d4a58 : add byte ptr [rax - 0x73], cl ; adc eax, 0xb2ed4 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000d3072 : add byte ptr [rax - 0x73], cl ; adc eax, 0xb47ca ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000d2a88 : add byte ptr [rax - 0x73], cl ; adc eax, 0xb4d34 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000cf6c0 : add byte ptr [rax - 0x73], cl ; adc eax, 0xb80a8 ; mov esi, esi ; movsxd rax, dword ptr [rdx + rsi*4] ; add rax, rdx ; jmp rax
0x00000000000cefb3 : add byte ptr [rax - 0x73], cl ; adc eax, 0xb83d9 ; movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x00000000000cec41 : add byte ptr [rax - 0x73], cl ; adc eax, 0xb86f7 ; mov esi, esi ; movsxd rax, dword ptr [rdx + rsi*4] ; add rax, rdx ; jmp rax
0x000000000012f24b : add byte ptr [rax - 0x73], cl ; adc eax, 0xe00d ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000087b50 : add byte ptr [rax - 0x73], cl ; adc eax, 0xfe0e8 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000004acc2 : add byte ptr [rax - 0x73], cl ; add al, 0x18 ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000ad19b : add byte ptr [rax - 0x73], cl ; add al, 0x4c ; lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x00000000000ac8f7 : add byte ptr [rax - 0x73], cl ; add al, 0xc3 ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000008be0a : add byte ptr [rax - 0x73], cl ; add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000aaa56 : add byte ptr [rax - 0x73], cl ; add dword ptr [r11 + 0x5d], ebx ; pop r12 ; pop r13 ; ret
0x000000000002cb27 : add byte ptr [rax - 0x73], cl ; add eax, 0x15def6 ; ret
0x00000000000204ef : add byte ptr [rax - 0x73], cl ; add eax, 0x16a074 ; ret
0x00000000000204ff : add byte ptr [rax - 0x73], cl ; add eax, 0x16bf78 ; ret
0x00000000001034cd : add byte ptr [rax - 0x73], cl ; add eax, 0x2c0d4b ; add rsp, 0x18 ; ret
0x0000000000102f55 : add byte ptr [rax - 0x73], cl ; add eax, 0x2c1273 ; add rsp, 8 ; ret
0x0000000000100e50 : add byte ptr [rax - 0x73], cl ; add eax, 0x2c32a8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ff8ef : add byte ptr [rax - 0x73], cl ; add eax, 0x2c46a1 ; ret
0x00000000000ff71f : add byte ptr [rax - 0x73], cl ; add eax, 0x2c4871 ; ret
0x00000000000ff539 : add byte ptr [rax - 0x73], cl ; add eax, 0x2c4a57 ; add rsp, 8 ; ret
0x0000000000045dc1 : add byte ptr [rax - 0x73], cl ; add eax, 0x37d817 ; mov byte ptr [rax + rdx], 0 ; ret
0x000000000003b34f : add byte ptr [rax - 0x73], cl ; add eax, 0x38b0ff ; add rsp, 8 ; ret
0x000000000012d7df : add byte ptr [rax - 0x73], cl ; add eax, 0x5d23e ; ret
0x0000000000062871 : add byte ptr [rax - 0x73], cl ; add qword ptr [rax - 0x77], rcx ; lea esi, dword ptr [rax - 0x77000005] ; add cl, byte ptr [rax - 0x7d] ; ret
0x00000000000a0986 : add byte ptr [rax - 0x73], cl ; add r8b, r11b ; nop dword ptr [rax] ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000bc96f : add byte ptr [rax - 0x73], cl ; and dword ptr [rcx + 8], 0x29490000 ; ror byte ptr [rax + 0x3d], 1 ; ret 0x10
0x00000000000ac66f : add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000ac67f : add byte ptr [rax - 0x73], cl ; cld ; ret
0x0000000000083943 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x10b835 ; mov edx, 0x236 ; call 0x7fb7f
0x00000000000838f9 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x10b91f ; mov edx, 0x246 ; call 0x7fb7f
0x00000000000418a3 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x14932c ; mov edx, 0x559 ; call 0x2dbbf
0x000000000003344b : add byte ptr [rax - 0x73], cl ; cmp eax, 0x14cc6d ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x0000000000122edf : add byte ptr [rax - 0x73], cl ; cmp eax, 0x2a2815 ; call rax
0x0000000000134b3c : add byte ptr [rax - 0x73], cl ; cmp eax, 0x554fc ; mov esi, esi ; movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x00000000000c5a60 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc16ec ; mov esi, edx ; movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x0000000000022b6f : add byte ptr [rax - 0x73], cl ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002b497 : add byte ptr [rax - 0x73], cl ; fdiv dword ptr gs:[rcx] ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000021eea : add byte ptr [rax - 0x73], cl ; fmul dword ptr gs:[rcx + 0x5c415bc8] ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013fde2 : add byte ptr [rax - 0x73], cl ; fmul dword ptr gs:[rcx + 0x5c415bd0] ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000644c0 : add byte ptr [rax - 0x73], cl ; fmul dword ptr gs:[rcx + 0x5c415bd8] ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ac65f : add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000006dabb : add byte ptr [rax - 0x73], cl ; or eax, 0x118019 ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x000000000006d36e : add byte ptr [rax - 0x73], cl ; or eax, 0x118522 ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x00000000000647cd : add byte ptr [rax - 0x73], cl ; or eax, 0x12083f ; movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x00000000000646ad : add byte ptr [rax - 0x73], cl ; or eax, 0x1208af ; movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x000000000006484b : add byte ptr [rax - 0x73], cl ; or eax, 0x120911 ; movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x0000000000064158 : add byte ptr [rax - 0x73], cl ; or eax, 0x120d48 ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000013815c : add byte ptr [rax - 0x73], cl ; or eax, 0x52340 ; mov esi, esi ; movsxd rax, dword ptr [rcx + rsi*4] ; add rax, rcx ; jmp rax
0x00000000001378cc : add byte ptr [rax - 0x73], cl ; or eax, 0x52b90 ; mov esi, esi ; movsxd rax, dword ptr [rcx + rsi*4] ; add rax, rcx ; jmp rax
0x000000000008ab8f : add byte ptr [rax - 0x73], cl ; or eax, 0xffe8e ; mov rdx, rcx ; jmp 0x8ab6a
0x00000000000ac8ff : add byte ptr [rax - 0x73], cl ; or r11b, r8b ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000147b35 : add byte ptr [rax - 0x73], cl ; or r14b, al ; movzx eax, byte ptr [rdi + rcx] ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000083e8a : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000005e786 : add byte ptr [rax - 0x73], cl ; push rax ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000001725bb : add byte ptr [rax - 0x73], cl ; sbb eax, 0x24b1dd ; sub rsp, 8 ; call 0x7e8ae
0x0000000000074133 : add byte ptr [rax - 0x73], cl ; test al, 0x28 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x00000000000b73df : add byte ptr [rax - 0x73], cl ; xor al, 0x83 ; sub r10, rax ; jmp 0xb7409
0x00000000000453ed : add byte ptr [rax - 0x73], cl ; xor eax, 0x1cb ; call rax
0x00000000000704c8 : add byte ptr [rax - 0x73], cl ; xor eax, 0x30 ; call rax
0x00000000000c59f0 : add byte ptr [rax - 0x73], cl ; xor eax, 0xc1570 ; mov edx, ecx ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000aac5f : add byte ptr [rax - 0x73], cl ; xor eax, 0xdb859 ; movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x000000000007ed42 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffdcd6 ; call rax
0x000000000007e882 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe196 ; call rax
0x000000000007e3c8 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe650 ; call rax
0x000000000007cf98 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffa80 ; call rax
0x000000000007cd28 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffcf0 ; call rax
0x00000000000707b2 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffd46 ; call rax
0x000000000008959f : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000ebf0f : add byte ptr [rax - 0x75], cl ; adc eax, 0x2d5051 ; mov dword ptr [rdx], ecx ; pop rdx ; pop rcx ; pop rbx ; ret
0x00000000000e8f4f : add byte ptr [rax - 0x75], cl ; adc eax, 0x2d8051 ; mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x000000000008b557 : add byte ptr [rax - 0x75], cl ; adc eax, 0x3359f9 ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x0000000000135ff6 : add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000487ea : add byte ptr [rax - 0x75], cl ; add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x4884c
0x000000000004a3fa : add byte ptr [rax - 0x75], cl ; add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x4a45c
0x00000000000f1287 : add byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000002de7d : add byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002de5d : add byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x75], cl ; pop rax ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000011151b : add byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 2
0x000000000008896b : add byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; lock add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000100ff2 : add byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x000000000003a991 : add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x0000000000134c97 : add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rdi] ; enter -0x7e77, -0x48 ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000001379af : add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rdi] ; enter 0x4789, 0x58 ; mov eax, 1 ; ret
0x0000000000163edf : add byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000016b68f : add byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rbx + 0x42890841] ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000146a9f : add byte ptr [rax - 0x75], cl ; add eax, 0x27a3d1 ; mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x00000000001469af : add byte ptr [rax - 0x75], cl ; add eax, 0x27a3f9 ; add rax, qword ptr fs:[0] ; ret
0x0000000000143b22 : add byte ptr [rax - 0x75], cl ; add eax, 0x27e8c6 ; call qword ptr [rax]
0x00000000001434f5 : add byte ptr [rax - 0x75], cl ; add eax, 0x27eef3 ; call qword ptr [rax]
0x000000000013b79f : add byte ptr [rax - 0x75], cl ; add eax, 0x2856d1 ; cmp dword ptr fs:[rax], 0x18 ; je 0x13b7be ; ret
0x000000000013abbf : add byte ptr [rax - 0x75], cl ; add eax, 0x2863c1 ; add rsp, 8 ; ret
0x000000000012b0bf : add byte ptr [rax - 0x75], cl ; add eax, 0x295f21 ; mov rax, qword ptr fs:[rax] ; ret
0x000000000011b53f : add byte ptr [rax - 0x75], cl ; add eax, 0x2a5919 ; add rax, qword ptr fs:[0] ; ret
0x000000000010b477 : add byte ptr [rax - 0x75], cl ; add eax, 0x2b8f59 ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x000000000010b367 : add byte ptr [rax - 0x75], cl ; add eax, 0x2b9069 ; mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x0000000000103adf : add byte ptr [rax - 0x75], cl ; add eax, 0x2bd391 ; mov dword ptr fs:[rax], 0x16 ; ret
0x0000000000102eb6 : add byte ptr [rax - 0x75], cl ; add eax, 0x2bf8ca ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fe94f : add byte ptr [rax - 0x75], cl ; add eax, 0x2c2521 ; mov dword ptr fs:[rax], 0x16 ; mov eax, edi ; ret
0x00000000000fe89f : add byte ptr [rax - 0x75], cl ; add eax, 0x2c25d1 ; mov dword ptr fs:[rax], 0x16 ; mov eax, edi ; ret
0x00000000000bbc0f : add byte ptr [rax - 0x75], cl ; add eax, 0x305261 ; mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x00000000000bd494 : add byte ptr [rax - 0x75], cl ; add eax, 0x30903c ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008575f : add byte ptr [rax - 0x75], cl ; add eax, 0x33b711 ; mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x0000000000080a31 : add byte ptr [rax - 0x75], cl ; add eax, 0x340477 ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x80a53 ; call rax
0x000000000007f13f : add byte ptr [rax - 0x75], cl ; add eax, 0x3433b9 ; ret
0x000000000002e07f : add byte ptr [rax - 0x75], cl ; add eax, 0x392e61 ; add rax, qword ptr fs:[0] ; ret
0x000000000002e09f : add byte ptr [rax - 0x75], cl ; add eax, 0x392e89 ; add rax, qword ptr fs:[0] ; ret
0x000000000002d93a : add byte ptr [rax - 0x75], cl ; add eax, 0x3934a6 ; mov qword ptr [rax], rdx ; ret
0x00000000000299ff : add byte ptr [rax - 0x75], cl ; add eax, 0x398ec9 ; ret
0x000000000002079f : add byte ptr [rax - 0x75], cl ; add eax, 0x3a06d1 ; add rax, qword ptr fs:[0] ; ret
0x00000000000215cf : add byte ptr [rax - 0x75], cl ; add eax, 0x3a4d39 ; ret
0x00000000000215bf : add byte ptr [rax - 0x75], cl ; add eax, 0x3a4d59 ; ret
0x0000000000081c46 : add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x29] ; ret
0x00000000000ad1df : add byte ptr [rax - 0x75], cl ; and al, 0x30 ; add rsp, 0x60 ; pop rbx ; pop rbp ; sub rax, r12 ; pop r12 ; ret
0x00000000001462d5 : add byte ptr [rax - 0x75], cl ; and al, 0x38 ; jne 0x1462c4 ; add rsp, 0x48 ; ret
0x00000000000ff3ee : add byte ptr [rax - 0x75], cl ; and al, 0xb0 ; ret
0x0000000000109d34 : add byte ptr [rax - 0x75], cl ; and al, 8 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003b2a7 : add byte ptr [rax - 0x75], cl ; and al, 8 ; add rsp, 0x18 ; ret
0x000000000013999e : add byte ptr [rax - 0x75], cl ; and al, 8 ; mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000012e90d : add byte ptr [rax - 0x75], cl ; and byte ptr [r8 - 0x75], cl ; cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x00000000001556af : add byte ptr [rax - 0x75], cl ; cmc ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000072a50 : add byte ptr [rax - 0x75], cl ; cmp al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; imul edi, esi, 0xc48148ff ; fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000075478 : add byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], cl ; ret 0x348
0x0000000000136db0 : add byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x0000000000134aea : add byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rcx + rcx + 0x48], 0x8d ; mov ebx, 0xc8 ; call rax
0x00000000000de84f : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000015588f : add byte ptr [rax - 0x75], cl ; hlt ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155e7f : add byte ptr [rax - 0x75], cl ; int1 ; mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000086dff : add byte ptr [rax - 0x75], cl ; je 0x86e2e ; call rax
0x00000000000877ef : add byte ptr [rax - 0x75], cl ; je 0x87821 ; sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000000877ee : add byte ptr [rax - 0x75], cl ; je 0x87822 ; sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000000b340c : add byte ptr [rax - 0x75], cl ; je 0xb3414 ; jo 0xb344b ; ror dword ptr [rax - 0x2d], 1 ; out 0x89, al ; ror dword ptr [rax - 0x77], 1 ; ret 0xd348
0x00000000000bc19e : add byte ptr [rax - 0x75], cl ; je 0xbc1d3 ; cmp byte ptr [rax - 0x75], cl ; jl 0xbc1d8 ; call r15
0x00000000000bc691 : add byte ptr [rax - 0x75], cl ; je 0xbc6c6 ; cmp byte ptr [rax - 0x75], cl ; jl 0xbc6cb ; call r15
0x00000000000f561d : add byte ptr [rax - 0x75], cl ; je 0xf564e ; cmp byte ptr [rax - 0x77], cl ; ret 0x4de9
0x000000000013564f : add byte ptr [rax - 0x75], cl ; jg 0x1356a5 ; mov rcx, rsi ; xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x00000000001358cf : add byte ptr [rax - 0x75], cl ; jg 0x13591f ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1358eb ; ret
0x00000000001358ce : add byte ptr [rax - 0x75], cl ; jg 0x135920 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1358ec ; ret
0x000000000013b80f : add byte ptr [rax - 0x75], cl ; jg 0x13b865 ; mov rcx, rsi ; xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x000000000013ba6f : add byte ptr [rax - 0x75], cl ; jg 0x13babf ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x13ba8b ; ret
0x000000000013ba6e : add byte ptr [rax - 0x75], cl ; jg 0x13bac0 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x13ba8c ; ret
0x000000000013bf2f : add byte ptr [rax - 0x75], cl ; jg 0x13bf8d ; mov rcx, rsi ; xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x00000000001236bf : add byte ptr [rax - 0x75], cl ; jl 0x1236f0 ; sub al, ch ; out dx, al ; ret 0xffef
0x00000000000b32e8 : add byte ptr [rax - 0x75], cl ; jl 0xb32bb ; jo 0xb3282 ; ror dword ptr [rax - 0x77], 1 ; ret 0xd348
0x00000000000e3aeb : add byte ptr [rax - 0x75], cl ; jl 0xe3b1b ; or al, ch ; ret 0xf3be
0x000000000002e01f : add byte ptr [rax - 0x75], cl ; jo 0x2e078 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000074676 : add byte ptr [rax - 0x75], cl ; jp 0x746c1 ; jmp 0x74646
0x000000000002e02f : add byte ptr [rax - 0x75], cl ; js 0x2e088 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000012c16b : add byte ptr [rax - 0x75], cl ; mov byte ptr [r8 - 0x77], r9b ; ret 0x8b48
0x000000000006eea8 : add byte ptr [rax - 0x75], cl ; mov byte ptr [rax + 0x48000000], ah ; mov dword ptr [rcx + 0x130], edx ; ret
0x00000000000d024f : add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffcf8 ; call r12
0x000000000007685f : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000002de80 : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + rdi*4 + 0x200] ; ret
0x0000000000155a7f : add byte ptr [rax - 0x75], cl ; mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155c7f : add byte ptr [rax - 0x75], cl ; mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000002e050 : add byte ptr [rax - 0x75], cl ; movzx eax, word ptr [rax + rdi*2 + 0x100] ; and eax, esi ; ret
0x000000000007c674 : add byte ptr [rax - 0x75], cl ; or byte ptr [r11 + 0x5d], bl ; movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007b50f : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 + 0x3b], r9b ; adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x00000000000d813f : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 + 0x63], r9b ; ret 0xb60f
0x0000000000130e1f : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x000000000013dd7f : add byte ptr [rax - 0x75], cl ; or byte ptr [r9 + r9*4 + 0x44], r9b ; and al, 8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000022f4f : add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000010775f : add byte ptr [rax - 0x75], cl ; or byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x000000000002de60 : add byte ptr [rax - 0x75], cl ; pop rax ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x0000000000107757 : add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x000000000010c897 : add byte ptr [rax - 0x75], cl ; push -0x48f00077 ; add al, 0x78 ; and eax, 1 ; ret
0x000000000010c917 : add byte ptr [rax - 0x75], cl ; push -0x48f00077 ; add al, 0x78 ; and eax, 2 ; movzx eax, ax ; ret
0x000000000010cb97 : add byte ptr [rax - 0x75], cl ; push -0x48f00077 ; add al, 0x78 ; and eax, 4 ; movzx eax, ax ; ret
0x000000000010c797 : add byte ptr [rax - 0x75], cl ; push -0x48f00077 ; add al, 0x78 ; and eax, 8 ; movzx eax, ax ; ret
0x000000000002deaf : add byte ptr [rax - 0x75], cl ; push 0xfff6348 ; mov bh, 4 ; js 0x2de4e ; loopne 0x2dece ; ret
0x00000000000818bf : add byte ptr [rax - 0x75], cl ; push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x000000000007ee9e : add byte ptr [rax - 0x75], cl ; push rax ; or byte ptr [rbp + 0xb], dh ; sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000008486f : add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0x7404
0x000000000007a12f : add byte ptr [rax - 0x75], cl ; push rdi ; and byte ptr [rax - 0x75], cl ; sub byte ptr [r8 + 0x39], r9b ; ret 0x850f
0x000000000015b1ff : add byte ptr [rax - 0x75], cl ; push rsi ; add al, 0x48 ; mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b18f : add byte ptr [rax - 0x75], cl ; push rsi ; add eax, 0x480e8b48 ; mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000015512f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015aadf : add byte ptr [rax - 0x75], cl ; push rsi ; cmc ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015aa5f : add byte ptr [rax - 0x75], cl ; push rsi ; hlt ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015a8af : add byte ptr [rax - 0x75], cl ; push rsi ; int1 ; mov rcx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000f7ee5 : add byte ptr [rax - 0x75], cl ; push rsi ; js 0xf7f3f ; mov dword ptr [rdi + 0x100], edx ; ret
0x000000000015a9cf : add byte ptr [rax - 0x75], cl ; push rsi ; mov rcx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015a93f : add byte ptr [rax - 0x75], cl ; push rsi ; mov rcx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015abdf : add byte ptr [rax - 0x75], cl ; push rsi ; test dword ptr [rbx - 0x76b703b2], 0x4f89f757 ; cld ; ret
0x0000000000146367 : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x38 ; add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000088477 : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x68 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000391ef : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 8 ; mov rsi, qword ptr [r15] ; mov rdi, qword ptr [r12] ; call r14
0x000000000003946f : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 8 ; mov rsi, r15 ; mov rdi, r12 ; call r14
0x0000000000021c9a : add byte ptr [rax - 0x75], cl ; ret
0x00000000000ca14f : add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000073494 : add byte ptr [rax - 0x75], cl ; sbb byte ptr [r9 + rcx*4 - 0x1a], r8b ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000ad86c : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x75], cl ; sub byte ptr [r8 - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000010b36e : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x000000000007a03f : add byte ptr [rax - 0x75], cl ; sub byte ptr [r8 - 0x75], r9b ; push rdi ; and byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x00000000000d97ff : add byte ptr [rax - 0x75], cl ; test dword ptr [rax - 0x74000002], esp ; cmp byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000000f793f : add byte ptr [rax - 0x75], cl ; test dword ptr [rax - 0x7c000002], ecx ; ret
0x00000000001552ef : add byte ptr [rax - 0x75], cl ; test qword ptr [rbx - 0x76b703aa], 0x5789f74f ; cld ; ret
0x00000000000740cf : add byte ptr [rax - 0x75], cl ; xchg dword ptr [rax + 0x48000000], esp ; cmp dword ptr [rax + 0x30], 0 ; je 0x740ef ; ret
0x000000000005e747 : add byte ptr [rax - 0x75], cl ; xchg eax, ebp ; sar bl, 0xff ; dec dword ptr [rcx + 0x63] ; ret 0xb60f
0x000000000007466f : add byte ptr [rax - 0x75], cl ; xchg eax, ebx ; movabs al, byte ptr [0xeb407a8b48000000] ; ret
0x0000000000086691 : add byte ptr [rax - 0x75], cl ; xchg eax, edx ; push 0x4c000008 ; cmp edx, eax ; jne 0x8666e ; ret
0x00000000000e2f3d : add byte ptr [rax - 0x75], cl ; xchg eax, esp ; and al, 0x10 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f4650 : add byte ptr [rax - 0x75], cl ; xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001046a7 : add byte ptr [rax - 0x75], cl ; xor byte ptr [rax - 0x75], cl ; jge 0x10467e ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000645d5 : add byte ptr [rax - 0x75], cl ; xor eax, 0x35c993 ; call rax
0x000000000005c93d : add byte ptr [rax - 0x75], cl ; xor eax, 0x36462b ; call rax
0x000000000005c321 : add byte ptr [rax - 0x75], cl ; xor eax, 0x364c47 ; call rax
0x000000000005969d : add byte ptr [rax - 0x75], cl ; xor eax, 0x3678cb ; call rax
0x00000000000509f9 : add byte ptr [rax - 0x75], cl ; xor eax, 0x37056f ; call rax
0x000000000004db1d : add byte ptr [rax - 0x75], cl ; xor eax, 0x37344b ; call rax
0x000000000010431a : add byte ptr [rax - 0x75], cl ; xor ecx, dword ptr [rax - 0x75] ; jl 0x104354 ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000001a5797 : add byte ptr [rax - 0x76], ch ; sti ; call qword ptr [rax]
0x00000000001009c6 : add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000001010b2 : add byte ptr [rax - 0x76b80000], al ; ret
0x000000000006f46c : add byte ptr [rax - 0x76b80000], al ; ret 0x3f75
0x0000000000119597 : add byte ptr [rax - 0x76b80000], al ; ret 0x4075
0x000000000006fa3d : add byte ptr [rax - 0x76b80000], al ; ret 0x4275
0x000000000003a8ae : add byte ptr [rax - 0x7760577], dl ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x0000000000146244 : add byte ptr [rax - 0x77], cl ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000003b545 : add byte ptr [rax - 0x77], cl ; adc byte ptr [rax + 0xb], r15b ; mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x00000000000fe46a : add byte ptr [rax - 0x77], cl ; adc byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0xfe4ac ; ret
0x0000000000143974 : add byte ptr [rax - 0x77], cl ; adc eax, 0x27ea74 ; add rsp, 8 ; ret
0x000000000007f1d0 : add byte ptr [rax - 0x77], cl ; adc eax, 0x344570 ; add dword ptr [rip + 0x344565], 1 ; ret
0x000000000001fa39 : add byte ptr [rax - 0x77], cl ; adc eax, 0x3a68c7 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000008b9e1 : add byte ptr [rax - 0x77], cl ; adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000ffab3 : add byte ptr [rax - 0x77], cl ; add eax, 0x2c2cc5 ; mov rdx, rax ; jmp 0xffa59
0x000000000008fb22 : add byte ptr [rax - 0x77], cl ; add eax, 0x333d5e ; add rsp, 8 ; ret
0x000000000008fae0 : add byte ptr [rax - 0x77], cl ; add eax, 0x333da0 ; ret
0x000000000014646f : add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000106d3c : add byte ptr [rax - 0x77], cl ; and al, 0x18 ; mov rdx, rax ; jmp 0x106d97
0x000000000008b55e : add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x0000000000084177 : add byte ptr [rax - 0x77], cl ; and al, 8 ; mov rdi, r14 ; mov qword ptr [rsp + 0x10], r14 ; call qword ptr [rax]
0x0000000000079667 : add byte ptr [rax - 0x77], cl ; and r11b, r13b ; jmp 0xffffffff835026e9
0x000000000003a91f : add byte ptr [rax - 0x77], cl ; clc ; cqo ; idiv rsi ; ret
0x0000000000100899 : add byte ptr [rax - 0x77], cl ; clc ; mov byte ptr [r9 - 1], 0 ; ret
0x0000000000108ebf : add byte ptr [rax - 0x77], cl ; clc ; movzx edi, dil ; shr rax, 0xc ; xor al, al ; or eax, edi ; ret
0x0000000000071da5 : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000003a8bf : add byte ptr [rax - 0x77], cl ; cli ; mov rax, rdi ; sar rdx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x00000000000801a6 : add byte ptr [rax - 0x77], cl ; cmc ; xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x0000000000146166 : add byte ptr [rax - 0x77], cl ; dec byte ptr [rax - 0x75] ; cmp al, 0x24 ; mov rax, qword ptr [rax + 0x128] ; jmp rax
0x000000000011b31b : add byte ptr [rax - 0x77], cl ; fbstp dword ptr [rcx] ; shr al, 0x9a ; mov dl, 0xf3 ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000002aa21 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000135ed1 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000070125 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000006bb6e : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000086cd0 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x000000000007c3ef : add byte ptr [rax - 0x77], cl ; fild word ptr [rcx - 1] ; xchg eax, edi ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000005d7d6 : add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x00000000000e9880 : add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x75] ; or cl, byte ptr [rax - 0x77] ; ret 0xc1e8
0x0000000000075f56 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x130] ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000103d78 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, ebp ; pop rbp ; pop r12 ; jmp rax
0x0000000000033f67 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x39] ; ret
0x0000000000145d19 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x000000000012fbde : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; or al, 0x24 ; call rcx
0x00000000000a0fee : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0xb6e8
0x000000000007830a : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 0xe] ; mov rsi, r13 ; call 0x4d8a1
0x0000000000021818 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx - 0x7d] ; in al, -0x10 ; mov qword ptr [r12], rbx ; call 0x8da3e
0x00000000000d03bf : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax + 3] ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000bf077 : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000000f22b5 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0x65
0x000000000006bc56 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; jno 0x6bc70 ; add byte ptr [rax], al ; test eax, eax ; jne 0x6bc81 ; mov rax, rbx ; pop rbx ; ret
0x00000000000eb197 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; nop ; sub dl, bh ; dec dword ptr [rax + 1] ; ret
0x00000000000dfca7 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; sal byte ptr [rdx - 1], 0xff ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000eb4a2 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; test dword ptr [rip + 0x148fffa], esp ; ret
0x0000000000075525 : add byte ptr [rax - 0x77], cl ; imul eax ; ret 0xfab1
0x000000000007fc7f : add byte ptr [rax - 0x77], cl ; imul edx, dword ptr [rax], 0x48 ; mov dword ptr [rbx + 0x18], ebp ; nop ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007ed9b : add byte ptr [rax - 0x77], cl ; imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000135f7f : add byte ptr [rax - 0x77], cl ; in eax, 0x74 ; sub eax, 0x8948f631 ; out -0x77, eax ; ret
0x000000000013e69f : add byte ptr [rax - 0x77], cl ; ja 0x13e6c9 ; mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000006c406 : add byte ptr [rax - 0x77], cl ; jb 0x6c41f ; mov dword ptr [rdx + 4], 1 ; ret
0x0000000000121ae2 : add byte ptr [rax - 0x77], cl ; jmp 0x121ae2
0x00000000000715af : add byte ptr [rax - 0x77], cl ; jmp 0x48f59f08
0x00000000000bead5 : add byte ptr [rax - 0x77], cl ; jmp 0xffffffffbece742b
0x0000000000060ed0 : add byte ptr [rax - 0x77], cl ; jp 0x60eed ; mov rsi, qword ptr [rbp - 0x660] ; xor edx, edx ; jmp 0x5d0fe
0x0000000000145c1d : add byte ptr [rax - 0x77], cl ; mov cl, 0xe9 ; add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000079ffc : add byte ptr [rax - 0x77], cl ; mov ebx, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x000000000007a003 : add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x0000000000107b96 : add byte ptr [rax - 0x77], cl ; mov edx, dword ptr [rax - 0x77000000] ; ret 0xe8c1
0x000000000010ff01 : add byte ptr [rax - 0x77], cl ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001378fd : add byte ptr [rax - 0x77], cl ; or byte ptr [r8 - 0x77], r9b ; push rdi ; adc byte ptr [rax + 1], bh ; ret
0x0000000000035616 : add byte ptr [rax - 0x77], cl ; out 0x48, al ; ror eax, 0x11 ; xor rax, qword ptr fs:[0x30] ; jmp rax
0x000000000008b03f : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, r12 ; call rax
0x000000000008a191 : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x00000000001309fc : add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000104ffe : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000012f196 : add byte ptr [rax - 0x77], cl ; out dx, eax ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013595c : add byte ptr [rax - 0x77], cl ; push r8 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000089ac5 : add byte ptr [rax - 0x77], cl ; push rbp ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000116289 : add byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000115a09 : add byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov rdx, r13 ; call rax
0x0000000000053721 : add byte ptr [rax - 0x77], cl ; push rsp ; and al, 8 ; call 0x1f988
0x00000000000bc505 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000110672 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x00000000000c86cc : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000023ca2 : add byte ptr [rax - 0x77], cl ; ret
0x000000000005e4f0 : add byte ptr [rax - 0x77], cl ; ret 0x148
0x0000000000096abf : add byte ptr [rax - 0x77], cl ; ret 0x149
0x00000000000905d0 : add byte ptr [rax - 0x77], cl ; ret 0x14c
0x000000000012a71f : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000008679c : add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00000000000b053c : add byte ptr [rax - 0x77], cl ; ret 0x2944
0x00000000000478a5 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000070246 : add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000011fd32 : add byte ptr [rax - 0x77], cl ; ret 0x2e66
0x000000000006f733 : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000003442a : add byte ptr [rax - 0x77], cl ; ret 0x394d
0x00000000001073ca : add byte ptr [rax - 0x77], cl ; ret 0x3be
0x0000000000047324 : add byte ptr [rax - 0x77], cl ; ret 0x3dbe
0x000000000006f46f : add byte ptr [rax - 0x77], cl ; ret 0x3f75
0x000000000011959a : add byte ptr [rax - 0x77], cl ; ret 0x4075
0x000000000006fa40 : add byte ptr [rax - 0x77], cl ; ret 0x4275
0x00000000000f13cf : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000010ed9b : add byte ptr [rax - 0x77], cl ; ret 0x850f
0x000000000008458a : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000000b5a9c : add byte ptr [rax - 0x77], cl ; ret 0x8941
0x000000000002326a : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000bd140 : add byte ptr [rax - 0x77], cl ; ret 0x8949
0x00000000000cef63 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000070378 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000ffaba : add byte ptr [rax - 0x77], cl ; ret 0x8feb
0x00000000000c94cc : add byte ptr [rax - 0x77], cl ; ret 0x9ee9
0x0000000000106d5c : add byte ptr [rax - 0x77], cl ; ret 0xabe
0x00000000000f1ec4 : add byte ptr [rax - 0x77], cl ; ret 0xbe9
0x00000000000908a2 : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000000450fa : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000045fba : add byte ptr [rax - 0x77], cl ; ret 0xde8
0x00000000001139b0 : add byte ptr [rax - 0x77], cl ; ret 0xe883
0x0000000000062466 : add byte ptr [rax - 0x77], cl ; ret 0xf1e8
0x0000000000032aa7 : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00000000000bf947 : add byte ptr [rax - 0x77], cl ; ret 0xfe9
0x000000000008b4a2 : add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000007c3f9 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000150b8f : add byte ptr [rax - 0x77], cl ; rol dword ptr [rax + 0xf], 1 ; mov dh, 0xc6 ; mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000011cec4 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rdi], -0x7b ; ret
0x0000000000091490 : add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000f825c : add byte ptr [rax - 0x77], cl ; salc ; syscall ; cmp rax, -0x1000 ; ja 0xf827f ; ret
0x00000000001461fc : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000147038 : add byte ptr [rax - 0x77], cl ; sbb byte ptr [rax + 1], bh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000007b7d0 : add byte ptr [rax - 0x77], cl ; scasd eax, dword ptr [rdi] ; nop ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000104acd : add byte ptr [rax - 0x77], cl ; std ; xor edx, edx ; xor esi, esi ; call rbx
0x000000000006eeaf : add byte ptr [rax - 0x77], cl ; xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000014719d : add byte ptr [rax - 0x77], cl ; xlatb ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000fe830 : add byte ptr [rax - 0x77], cl ; xlatb ; syscall ; cmp rax, -0x1000 ; ja 0xfe84f ; ret
0x00000000000fe8e0 : add byte ptr [rax - 0x77], cl ; xlatb ; syscall ; cmp rax, -0x1000 ; ja 0xfe8ff ; ret
0x000000000008681a : add byte ptr [rax - 0x77], cl ; xor byte ptr [rax - 0x75], cl ; add eax, 0x33a6bb ; mov qword ptr [rax], rdi ; ret
0x0000000000134b8c : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x134ba4 ; ret
0x000000000013791c : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x137934 ; ret
0x0000000000137934 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x13794c ; ret
0x00000000001381ac : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x1381c4 ; ret
0x00000000001381c4 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x1381dc ; ret
0x00000000001381f4 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x13820c ; ret
0x0000000000086918 : add byte ptr [rax - 0x77], cl ; xor eax, 0x33ceb8 ; xor eax, eax ; ret
0x000000000011b1bf : add byte ptr [rax - 0x77], cl ; xor eax, eax ; ret
0x00000000000ba3ff : add byte ptr [rax - 0x77], cl ; xor ecx, dword ptr [rax - 0x75] ; and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000100892 : add byte ptr [rax - 0x78], al ; xor eax, 0x2c3836 ; mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x00000000000ca2d1 : add byte ptr [rax - 0x7af10000], al ; ret
0x00000000001a773f : add byte ptr [rax - 0x7b], ah ; int1 ; jmp qword ptr [rcx]
0x000000000008dbcf : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000017256a : add byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rax - 0x77] ; sbb eax, 0x2511ab ; jne 0x172566 ; pop rbx ; ret
0x0000000000044f9a : add byte ptr [rax - 0x7b], cl ; in eax, dx ; je 0x44fb4 ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000004501a : add byte ptr [rax - 0x7b], cl ; in eax, dx ; je 0x45034 ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000450c8 : add byte ptr [rax - 0x7b], cl ; in eax, dx ; je 0x450e2 ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b650b : add byte ptr [rax - 0x7b], cl ; in eax, dx ; je 0xb6525 ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b65b9 : add byte ptr [rax - 0x7b], cl ; in eax, dx ; je 0xb65d3 ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b665b : add byte ptr [rax - 0x7b], cl ; in eax, dx ; je 0xb6675 ; mov qword ptr [rbp], rbx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001a7727 : add byte ptr [rax - 0x7b], cl ; int1 ; jmp qword ptr [rcx]
0x000000000007413a : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000098333 : add byte ptr [rax - 0x7b], cl ; push qword ptr [rdx + rdx*8 + 0x49] ; mov esi, dword ptr [rsp] ; test rsi, rsi ; jne 0x9835c ; jmp 0x98316
0x00000000000200ec : add byte ptr [rax - 0x7b], cl ; ret 0xf4c
0x0000000000128e26 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; ret 0xff81
0x000000000011673f : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000000ff5a0 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax - 0x73], 0x15 ; ret
0x00000000000e9651 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax - 0x77], 0x45 ; and byte ptr [rdi], cl ; test byte ptr [rcx - 0xa000000], dh ; ret
0x000000000005a775 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0x10
0x000000000011151e : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 2
0x00000000000872f2 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000008896e : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; lock add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000a3613 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x000000000002b3b4 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0
0x000000000006c2ae : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000114ead : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rbx + 0x48], 0x8b ; jp 0x114f14 ; mov rsi, rdx ; call rax
0x000000000013b7f3 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], 0x5b ; ret
0x00000000000ff6ae : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x2c], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000ff87f : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x2d], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000100ff5 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x00000000001177cc : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbx + rsi + 0x48], 0x8d ; jne 0x1177c7 ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x000000000012262b : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rcx + rcx + 0x48], 0x8d ; cmp eax, 0x2a3068 ; call rax
0x000000000006efa3 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rdi + rcx + 0x48], 0x8b ; mov edi, 0xe0 ; jmp rax
0x00000000000f8100 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rcx*2 + 0x31], 0xd2 ; xor esi, esi ; mov rdi, rbx ; call rax
0x00000000000f2083 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rbp + 0x48], 0x83 ; call 0xffffffffc298689d
0x000000000008d82e : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000169e97 : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x00000000001258fe : add byte ptr [rax - 0x7cf6b873], dl ; loopne 0x125909 ; add eax, 0x10 ; ret
0x0000000000040def : add byte ptr [rax - 0x7d], cl ; call 0x7c875609
0x00000000000446a7 : add byte ptr [rax - 0x7d], cl ; call 0x7c878ec1
0x00000000000afb37 : add byte ptr [rax - 0x7d], cl ; call 0x7c8e4351
0x00000000000ffc87 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc3494497
0x00000000000ffc86 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc3494498
0x00000000000872fb : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000089c1d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000002db04 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000009182d : add byte ptr [rax - 0x7d], cl ; cli ; and byte ptr [rdi + 0x64], dh ; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000009187d : add byte ptr [rax - 0x7d], cl ; cli ; and byte ptr [rdi + 0xb], dh ; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000002bc57 : add byte ptr [rax - 0x7d], cl ; cli ; or al, 0x76 ; ret 0x25e9
0x000000000012125f : add byte ptr [rax - 0x7d], cl ; in al, dx ; sub byte ptr [rcx - 0x77], cl ; enter -0x72b4, 0xd ; insb byte ptr [rdi], dx ; ret
0x0000000000172806 : add byte ptr [rax - 0x7d], cl ; inc dword ptr [rcx] ; ja 0x172817 ; ret
0x00000000000f138f : add byte ptr [rax - 0x7d], cl ; insb byte ptr [rdi], dx ; and al, 0x18 ; add dword ptr [rax - 0x75], ecx ; and al, 0x18 ; mov rdx, rax ; jmp 0xf13e1
0x0000000000087422 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000087927 : add byte ptr [rax - 0x7d], cl ; loopne 0x87934 ; test byte ptr [rdi + rax - 8], 1 ; je 0x87950 ; sub rax, 8 ; ret
0x00000000000ac62f : add byte ptr [rax - 0x7d], cl ; loopne 0xac662 ; je 0xac69f ; test al, 0xf0 ; jne 0xac66f ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000bb667 : add byte ptr [rax - 0x7d], cl ; mov byte ptr [rbx + rcx*4], 0x56 ; cld ; test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xbb678 ; ret
0x0000000000024587 : add byte ptr [rax - 0x7d], cl ; mov dword ptr [rcx], 0x83480b89 ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000023bbf : add byte ptr [rax - 0x7d], cl ; mov dword ptr [rcx], 0x83481389 ; rol dword ptr [rax + rcx*2], -0x7d ; ret
0x0000000000125147 : add byte ptr [rax - 0x7d], cl ; out dx, eax ; add ecx, dword ptr [rax - 0x7d] ; call qword ptr [rcx]
0x00000000001254f7 : add byte ptr [rax - 0x7d], cl ; out dx, eax ; add ecx, dword ptr [rcx + rcx*4 + 0x4d] ; mov byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x00000000000207ec : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000084b3f : add byte ptr [rax - 0x7d], cl ; ret 0x110
0x00000000000f307a : add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x0000000000125713 : add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x00000000000aa48f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000b5ad7 : add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x0000000000124e2a : add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x00000000000bf4af : add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x0000000000021485 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000282fa : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000000cddcf : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000172c3f : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000010a8ca : add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x00000000000a0b7f : add byte ptr [rax - 0x7d], cl ; ret 0x4840
0x00000000000da20f : add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x0000000000147bbf : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000004b794 : add byte ptr [rax - 0x7d], cl ; ret 0x491e
0x0000000000074037 : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000000d8b3f : add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00000000000fb94f : add byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x0000000000090d9f : add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x0000000000090d2f : add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000003e187 : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000002c5bf : add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000dae5f : add byte ptr [rax - 0x7d], cl ; ret 0x8304
0x00000000000e38ff : add byte ptr [rax - 0x7d], cl ; ret 0x8908
0x000000000006d8f7 : add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000003118c : add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x0000000000110187 : add byte ptr [rax - 0x7d], cl ; ret 0xc601
0x0000000000090168 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000149ba3 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d9c42 : add byte ptr [rax - 0x7d], cl ; ret 0xeb02
0x0000000000147be3 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000bcb1f : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000000a11af : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000008dd0f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000000adb5f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rbx + rcx*4], 0x10 ; cmp edx, esi ; je 0xadb7e ; test edx, edx ; jne 0xadb70 ; ret
0x000000000002955b : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret 0x860f
0x00000000000ac72c : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x89 ; add al, 0x24 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004818f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x39 ; ret 0xc07f
0x00000000000ac6d7 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x44 ; mov eax, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0xac6bf ; ret
0x000000000009671d : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x48 ; mov dword ptr [rbx], eax ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000004748f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x80 ; js 0x474a5 ; add byte ptr [rbp - 0xa], dh ; pop rbx ; ret
0x000000000002b19f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x00000000000246af : add byte ptr [rax - 0x7d], cl ; rol dword ptr [rcx], -0x77 ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000003c636 : add byte ptr [rax - 0x7d], cl ; sti ; xor dword ptr [rbp - 0x5f], 0xc6f7db31 ; add byte ptr [rax], al ; add byte ptr [rax], 0xf ; xchg eax, ebp ; ret
0x0000000000173a9f : add byte ptr [rax - 0x7e], al ; jmp 0x173aab
0x00000000001194af : add byte ptr [rax - 0x7f], cl ; cli ; dec dword ptr [rdi] ; add byte ptr [rax], al ; jbe 0x1194ca ; jmp 0x456dc
0x0000000000055a80 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000000bd481 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x598
0x0000000000072ccc : add byte ptr [rax - 0x7f], cl ; ret
0x0000000000158d9b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000011fea7 : add byte ptr [rax - 0x80], al ; jmp qword ptr [rax]
0x000000000007354f : add byte ptr [rax - 1], bh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000056847 : add byte ptr [rax - 1], bh ; mov qword ptr [rdi], r10 ; ret
0x00000000000fa3da : add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000036f62 : add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000029b4f : add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011b408 : add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00000000000341fd : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000000357cd : add byte ptr [rax - 1], bh ; ret
0x000000000019f207 : add byte ptr [rax - 1], bl ; in al, dx ; call rsp
0x0000000000036c16 : add byte ptr [rax - 1], dil ; ret
0x00000000001b8430 : add byte ptr [rax - 8], ah ; jmp qword ptr [rdi]
0x00000000000f744b : add byte ptr [rax - 9], cl ; fmul dword ptr [rax + 0x21] ; ret
0x0000000000194f5f : add byte ptr [rax*2 - 0x68330015], dl ; add byte ptr [rax], al ; je 0x194fbb ; jmp 0x194f77
0x0000000000195ecf : add byte ptr [rax*8 + 0x1c4ffef], dh ; add dword ptr [rax], eax ; xor al, 0xc6 ; out dx, eax ; jmp rsp
0x0000000000173332 : add byte ptr [rax], 0 ; add al, ch ; adc eax, 0x48fffa3a ; add esp, 0x80 ; ret
0x000000000004423b : add byte ptr [rax], 0 ; add al, ch ; in al, dx ; fdivp st(7) ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c8dc9 : add byte ptr [rax], 0 ; add al, ch ; jle 0xc8dc0 ; add al, 0 ; add rsp, 0x80 ; pop rbx ; ret
0x0000000000045689 : add byte ptr [rax], 0 ; add al, ch ; mov esi, 0x48000d16 ; add esp, 0x80 ; pop rbx ; ret
0x000000000007053a : add byte ptr [rax], 0 ; add al, ch ; or eax, 0x48000a68 ; add esp, 0x80 ; ret
0x0000000000077ee1 : add byte ptr [rax], 0 ; add al, ch ; out dx, al ; or dword ptr [rax], eax ; add rsp, 0x80 ; pop rbx ; ret
0x0000000000055a84 : add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000000bd485 : add byte ptr [rax], 0 ; add al, ch ; ret 0x598
0x0000000000071385 : add byte ptr [rax], 0 ; add al, ch ; ret 0xa59
0x0000000000118885 : add byte ptr [rax], 0 ; add al, ch ; ret 0xffe4
0x000000000007714a : add byte ptr [rax], 0 ; add al, ch ; std ; sti ; or dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x000000000007f21a : add byte ptr [rax], 0 ; add al, ch ; sub eax, 0x4800097b ; add esp, 0x80 ; ret
0x0000000000086714 : add byte ptr [rax], 0 ; add al, ch ; xor eax, dword ptr [rsi] ; or dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x0000000000077156 : add byte ptr [rax], 0 ; add bl, al ; nop dword ptr [rax + rax] ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x000000000006c45b : add byte ptr [rax], 0 ; add bl, dh ; ret
0x00000000000e663d : add byte ptr [rax], 0 ; add byte ptr [rax + 0x29], cl ; ret 0x634c
0x000000000003adb6 : add byte ptr [rax], 0 ; add byte ptr [rax + 0x63], cl ; and al, 0xc ; add rsp, 0x18 ; ret
0x000000000005713f : add byte ptr [rax], 0 ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000587d7 : add byte ptr [rax], 0 ; add byte ptr [rax + 0xf], cl ; ret 0x348
0x00000000000e1901 : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret
0x00000000000e4cc9 : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0xc748
0x000000000002f587 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x0000000000135ff3 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000143b1f : add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; add eax, 0x27e8c6 ; call qword ptr [rax]
0x00000000001434f2 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; add eax, 0x27eef3 ; call qword ptr [rax]
0x00000000000bd491 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; add eax, 0x30903c ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008668e : add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; xchg eax, edx ; push 0x4c000008 ; cmp edx, eax ; jne 0x86671 ; ret
0x0000000000070122 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000086ccd : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00000000000f22b2 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0x65
0x0000000000075522 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; imul eax ; ret 0xfab1
0x0000000000116286 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00000000000f4655 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007c3f6 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000008de5f : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x10] ; ret
0x0000000000091bff : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x80] ; ret
0x000000000008c003 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xc] ; ret
0x0000000000091c62 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xd] ; ret
0x0000000000090e69 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 8], dh ; lea rax, qword ptr [rip + 0x26] ; ret
0x00000000000ac919 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 8], dh ; lea rax, qword ptr [rip + 0xec76] ; ret
0x00000000000abd49 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 8], dh ; lea rax, qword ptr [rip + 0xf8f6] ; ret
0x000000000008de13 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0x1516c] ; ret
0x000000000008bbb3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0x157ac] ; ret
0x000000000008f6f3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd495c] ; ret
0x0000000000091a93 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd513c] ; ret
0x000000000008d493 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd540c] ; ret
0x0000000000091bb3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd682c] ; ret
0x0000000000098794 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000ac92d : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax + rcx + 0x48], dh ; lea eax, dword ptr [rip + 0xc03c2] ; ret
0x0000000000090e7d : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax + rcx + 0x48], dh ; lea eax, dword ptr [rip + 0xda832] ; ret
0x000000000008fda0 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xbd7ef] ; ret
0x000000000008fa10 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xbda4f] ; ret
0x000000000008d5a0 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xbfd7f] ; ret
0x000000000013ea2b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000013d87b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000114b43 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add rsp, 8 ; mov eax, 7 ; pop rbx ; pop rbp ; ret
0x00000000000fccbb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000350cb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; addss xmm0, xmm0 ; ret
0x0000000000090ddb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000090dfb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000090e0b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; bsf eax, eax ; sub rdx, rax ; jbe 0x90e60 ; add rax, rdi ; ret
0x00000000000a0c3b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x00000000000a0c4b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x000000000017338b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000000d24fb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; cmp byte ptr [rdi + 1], 0 ; jne 0xd2520 ; or esi, 2 ; mov eax, esi ; ret
0x00000000001177fb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; cmp eax, 0xff ; jne 0x117804 ; xor eax, eax ; leave ; ret
0x00000000000353fb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; fadd st(0) ; ret
0x000000000008ab8b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; lea rcx, qword ptr [rip + 0xffe8e] ; mov rdx, rcx ; jmp 0x8ab6e
0x00000000000a094b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x0000000000071d9b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov dword ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000008682b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov dword ptr [rip + 0x33cf6e], 0 ; ret
0x00000000000a849b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000dfc83 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, 0xc ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000126673 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000013f4fb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000abd1b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, 1 ; jg 0xabd37 ; neg eax ; ret
0x000000000013563b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x0000000000134c1b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000116e2b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0x116e4d ; ret
0x000000000013ea3b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x0000000000078ceb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x00000000000798fb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x00000000000f7f1b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rsi] ; mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x00000000000aacb3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, ecx ; shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x000000000007155b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, edi ; ret
0x00000000000a76ab : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000015b50b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi + 1] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b49b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi + 2] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b42b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi + 3] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b57b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000115a05 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x000000000005689b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov qword ptr [rdi], rcx ; mov eax, 0xffffffff ; ret
0x0000000000107753 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x000000000013d47b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rbx + 8] ; lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000130dbb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000002cb33 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rsi + rax*8 + 0x80] ; ret
0x000000000003aefb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, r8 ; mov qword ptr [rdi + 8], rdx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000104643 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a91b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rdi ; cqo ; idiv rsi ; ret
0x0000000000097c33 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000001236bb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rdi, qword ptr [rsp + 0x28] ; call 0x1f9c4
0x0000000000116e3b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rdx, qword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x000000000015b3bb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000088473 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rdx, qword ptr [rsp + 0x68] ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000a082b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov word ptr [rdi], r9w ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a616b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000aaceb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x000000000015b6cb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000015b65b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000002bae3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000007724b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; shr edx, 4 ; and edx, 1 ; mov eax, edx ; ret
0x000000000007733b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; shr edx, 5 ; and edx, 1 ; mov eax, edx ; ret
0x00000000000c7f53 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000121233 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000000001300ab : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000aae8b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000078cdb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x00000000000ca273 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor edx, edx ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000097fab : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000003ac67 : add byte ptr [rax], 0 ; add byte ptr [rax], bh ; cmp edx, 0xff ; cmovne rax, rbx ; pop rbx ; ret
0x000000000006dd64 : add byte ptr [rax], 0 ; add byte ptr [rbp - 0x76ba7ffc], cl ; ret 0x2945
0x0000000000071ec6 : add byte ptr [rax], 0 ; add byte ptr [rbx + 0x44], bl ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006edf7 : add byte ptr [rax], 0 ; add byte ptr [rbx + 0x48], bl ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000070d8b : add byte ptr [rax], 0 ; add byte ptr [rbx + 0x48], bl ; mov eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001027ae : add byte ptr [rax], 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000aad7b : add byte ptr [rax], 0 ; add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x0000000000041a09 : add byte ptr [rax], 0 ; add byte ptr [rbx - 0x76b2dbf4], cl ; ret
0x0000000000047ee5 : add byte ptr [rax], 0 ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000000587cc : add byte ptr [rax], 0 ; add byte ptr [rcx + 0x63], cl ; ret
0x00000000000d5e8f : add byte ptr [rax], 0 ; add byte ptr [rcx + 0x63], cl ; ret 0x8b48
0x0000000000036616 : add byte ptr [rax], 0 ; add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x394c
0x00000000000ca38e : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x00000000000ca458 : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x00000000000724aa : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x00000000000808f8 : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x40], cl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b0b3b : add byte ptr [rax], 0 ; add byte ptr [rcx], ch ; ror dword ptr [rax - 0x2d], 1 ; out 0x89, al ; ror dword ptr [rax - 0x77], 1 ; ret 0xd348
0x0000000000158ca7 : add byte ptr [rax], 0 ; add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000015a623 : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000000b5984 : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; mov gs, word ptr [rbx - 0x7cfffff8] ; ret
0x00000000000d81db : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; ret 0xf35b
0x000000000016b9e1 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000013ebe9 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; ror byte ptr [rdi], 0x11 ; and al, 0x28 ; call rdx
0x000000000016b9d9 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000ca537 : add byte ptr [rax], 0 ; add byte ptr [rsp + rax*2 - 0x77], ah ; add cl, byte ptr [rcx - 0x3b7cb710] ; ret
0x000000000011fbd2 : add byte ptr [rax], 0 ; add rsp, 0x90 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ffbed : add byte ptr [rax], 0 ; lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000100d42 : add byte ptr [rax], 0 ; mov eax, 1 ; add rsp, 8 ; ret
0x000000000003c643 : add byte ptr [rax], 0xf ; xchg eax, ebp ; ret
0x00000000001291e7 : add byte ptr [rax], ah ; add bl, ch ; ret 0xb8
0x0000000000131e94 : add byte ptr [rax], ah ; add byte ptr [rax], al ; jbe 0x131eb8 ; mov eax, 3 ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000077372 : add byte ptr [rax], ah ; add byte ptr [rax], al ; je 0x77396 ; mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x77396 ; ret
0x00000000001a137f : add byte ptr [rax], ah ; jp 0x1a1374 ; jmp qword ptr [rbx]
0x00000000001ae65f : add byte ptr [rax], ah ; lodsb al, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a43df : add byte ptr [rax], ah ; mov dh, 0xee ; jmp qword ptr [rdx]
0x00000000001b093f : add byte ptr [rax], ah ; movsxd rsi, esi ; jmp qword ptr [rsi]
0x000000000002dd84 : add byte ptr [rax], ah ; movzx eax, ax ; ret
0x0000000000195a2f : add byte ptr [rax], ah ; out dx, al ; jmp rsp
0x00000000001a74ef : add byte ptr [rax], ah ; pop rdi ; int1 ; call rbx
0x00000000001b7caf : add byte ptr [rax], ah ; push rcx ; clc ; call rdi
0x00000000001af06f : add byte ptr [rax], ah ; ret
0x00000000001ab67f : add byte ptr [rax], ah ; retf ; hlt ; jmp qword ptr [rsi]
0x00000000001b996a : add byte ptr [rax], al ; adc al, 0 ; add al, byte ptr [rax] ; loopne 0x1b993c ; clc ; call qword ptr [rbx]
0x00000000001ab866 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; adc al, 0x1f ; add dword ptr [rax], eax ; ror ch, 0xf4 ; jmp qword ptr [rcx]
0x00000000001ae466 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; adc al, 0x4b ; add dword ptr [rax], eax ; push rax ; stosb byte ptr [rdi], al ; cmc ; call qword ptr [rax]
0x00000000001ae566 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; adc al, 0x4c ; add dword ptr [rax], eax ; push rax ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001af066 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; adc al, 0x57 ; add dword ptr [rax], eax ; and bl, al ; cmc ; jmp qword ptr [rdi]
0x00000000001b0966 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; adc al, 0x70 ; add dword ptr [rax], eax ; push rax ; movsxd rsi, esi ; jmp qword ptr [rsi]
0x00000000001a6466 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; adc al, 0xcb ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001acb56 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; add al, 0x32 ; add dword ptr [rax], eax ; xor byte ptr [rsi], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001ae19e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; add qword ptr [rax], rax ; js 0x1ae14a ; cmc ; jmp qword ptr [rcx]
0x00000000001ab676 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; and al, 0x1d ; add dword ptr [rax], eax ; and bl, cl ; hlt ; jmp qword ptr [rsi]
0x00000000001a1376 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; and al, 0x7a ; add byte ptr [rax], al ; and byte ptr [rdx - 0x13], bh ; jmp qword ptr [rbx]
0x00000000001a2a76 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; and al, 0x91 ; add byte ptr [rax], al ; loopne 0x1a2a5b ; in eax, dx ; call qword ptr [rdx]
0x00000000001a5476 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; and al, 0xbb ; add byte ptr [rax], al ; xor bh, bl ; cld ; call qword ptr [rax]
0x00000000001b7776 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; and al, 0xde ; add dword ptr [rax], eax ; nop ; clc ; call qword ptr [rdx]
0x00000000001abe9e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; and rax, 0xe3480001 ; hlt ; jmp qword ptr [rcx]
0x00000000001a8f4e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; cmc ; add byte ptr [rax], al ; push rbp ; jmp qword ptr [rcx]
0x00000000001ad44e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; cmp al, byte ptr [rcx] ; add byte ptr [rax + 0x55], ch ; cmc ; call qword ptr [rdx]
0x00000000001b094e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; cmp byte ptr [rbx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001a644e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; retf 0 ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001ab74e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; sbb eax, 0xcce80001 ; hlt ; jmp qword ptr [rcx]
0x000000000019a98e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cmp al, 0x10 ; add byte ptr [rax], al ; js 0x19aa1d ; std ; jmp qword ptr [rdi]
0x00000000001ad58e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cmp al, 0x3c ; add dword ptr [rax], eax ; sub byte ptr [rax - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001a3f8e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cmp al, 0xa6 ; add byte ptr [rax], al ; fdivr dword ptr [rcx - 0x12] ; jmp qword ptr [rcx]
0x00000000001a8e8e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cmp al, 0xf5 ; add byte ptr [rax], al ; call 0x221a80fe
0x00000000001aea2e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; fcom qword ptr [rax + 1] ; add byte ptr [rax], bh ; mov cl, 0xf5 ; jmp qword ptr [rcx]
0x00000000001a8a2e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; fdivr st(0), st(0) ; add byte ptr [rax], al ; call 0x221a7c8e
0x00000000001ae22e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rax + 1] ; add byte ptr [rax], cl ; xchg eax, esp ; cmc ; jmp qword ptr [rcx]
0x00000000001ae72e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rbp + 1] ; add byte ptr [rax], ch ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae32e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rcx + 1] ; add byte ptr [rax - 0x57], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001ac72e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; fsubr qword ptr [rip + 0x1c680001] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae746 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; hlt ; add qword ptr [r8], r8 ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b6946 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; hlt ; iretd ; add dword ptr [rax], eax ; adc byte ptr [rax + rdi*8], cl ; jmp qword ptr [rax]
0x00000000001ac646 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; hlt ; sub al, 1 ; add al, al ; sbb ebp, esi ; jmp qword ptr [rcx]
0x00000000001a6436 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, -0x36 ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a4836 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, -0x52 ; add byte ptr [rax], al ; adc dl, dl ; out dx, al ; call qword ptr [rcx]
0x00000000001a8f36 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, -0xb ; add byte ptr [rax], al ; xor byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001b9936 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, -1 ; add dword ptr [rax], eax ; rol cl, 0xf8 ; call qword ptr [rdi]
0x00000000001aab36 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, 0x11 ; add dword ptr [rax], eax ; xor byte ptr [rdi], dl ; hlt ; call qword ptr [rdx]
0x00000000001ab736 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, 0x1d ; add dword ptr [rax], eax ; ror ah, 1 ; hlt ; jmp qword ptr [rcx]
0x00000000001abc36 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, 0x22 ; add dword ptr [rax], eax ; adc ch, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001ad636 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, 0x3c ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xb], bl ; jmp qword ptr [rdx]
0x00000000001b0936 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, 0x6f ; add dword ptr [rax], eax ; and byte ptr [rbx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001abe3e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; and al, 1 ; add al, ch ; loop 0x1abe4c ; jmp qword ptr [rcx]
0x00000000001a2a3e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; nop ; add byte ptr [rax], al ; fmul st(4) ; in eax, dx ; call qword ptr [rdx]
0x00000000001a493e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; shr rsi, cl ; jmp qword ptr [rsi]
0x00000000001acb3e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; xor dword ptr [rcx], eax ; add byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001ad5be : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp al, 1 ; add byte ptr [rax + 0x58], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a8abe : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; int1 ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0xe], al ; call qword ptr [rdx]
0x00000000001a12be : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jns 0x1a12d4 ; add al, cl ; jns 0x1a12c5 ; jmp qword ptr [rdi]
0x00000000001a57be : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov esi, 0xab880000 ; sti ; call qword ptr [rax]
0x00000000001a43be : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; mov bl, 0xee ; jmp rdx
0x00000000001a48c6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; je 0x1a488a ; add byte ptr [rax], al ; loopne 0x1a492d ; cli ; call qword ptr [rax]
0x00000000001a64c6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; je 0x1a64a6 ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001aa9c6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; je 0x1aa9eb ; add dword ptr [rax], eax ; adc byte ptr [rsi], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001aeec6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; je 0x1aef30 ; add dword ptr [rax], eax ; mov al, 0xb8 ; cmc ; jmp qword ptr [rcx]
0x00000000001b06c6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; je 0x1b0748 ; add dword ptr [rax], eax ; shl byte ptr [rcx - 0xa], 1 ; jmp qword ptr [rsi]
0x000000000019cece : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; jl 0x19cf18 ; add byte ptr [rax], al ; out -0x17, eax ; call qword ptr [rax]
0x00000000001b8bce : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; jl 0x1b8bd5 ; add dword ptr [rax], eax ; clc ; sahf ; sti ; jmp qword ptr [rdx]
0x00000000001ac7fe : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add dword ptr cs:[rax], eax ; js 0x1ac834 ; cmc ; jmp qword ptr [rcx]
0x00000000001ae6fe : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add qword ptr [r8], r8 ; clc ; lodsb al, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ad4fe : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; cmp eax, dword ptr [rcx] ; add byte ptr [rax + 0x57], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001b8afe : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; int1 ; add dword ptr [rax], eax ; cwde ; lahf ; sti ; jmp qword ptr [rdx]
0x00000000001ab806 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov ah, 0x1e ; add dword ptr [rax], eax ; xor ch, cl ; hlt ; jmp qword ptr [rcx]
0x00000000001ac406 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov ah, 0x2a ; add dword ptr [rax], eax ; jo 0x1ac434 ; cmc ; call qword ptr [rbx]
0x00000000001a8f06 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov ah, 0xf5 ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001a49b6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov al, 0 ; add byte ptr [rax - 0x5d], dh ; cli ; call qword ptr [rax]
0x00000000001a64de : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov ebx, cs ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001a72de : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov ecx, ds ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0xf], dl ; jmp qword ptr [rcx]
0x00000000001b7a0e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov esp, 0x180001e0 ; clc ; call qword ptr [rdx]
0x00000000001a650e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov esp, 0x280000cb ; ja 0x1a6518 ; call qword ptr [rdx]
0x000000000019ca0e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov esp, 0xa8000030 ; fsubp st(1) ; call qword ptr [rcx]
0x00000000001a7e0e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov esp, 0xb80000e4 ; adc dl, dh ; call qword ptr [rbx]
0x00000000001abe0e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov esp, 0xb8000124 ; loop 0x1abe1c ; jmp qword ptr [rcx]
0x00000000001aa80e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov esp, 0xd800010e ; stc ; jmp qword ptr [rdi]
0x00000000001ae60e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov esp, 0xd800014c ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001a45de : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov word ptr [rax + rax - 0x113ae800], gs ; call qword ptr [rax]
0x00000000001aa9de : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov word ptr [rax], ss ; add dword ptr [rax], eax ; sub byte ptr [rsi], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001ae5de : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov word ptr [rcx + rax], cs ; test al, 0xab ; cmc ; jmp qword ptr [rcx]
0x00000000001ae8de : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov word ptr [rdi + 1], cs ; add byte ptr [rax - 0x51], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001aa9f6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc byte ptr [rcx], al ; add byte ptr [rax + 0x16], al ; hlt ; jmp qword ptr [rcx]
0x00000000001b06f6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rdx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001a5bf6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x00000000001a64f6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001ab65e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; or al, 0x1d ; add dword ptr [rax], eax ; or bl, cl ; hlt ; jmp qword ptr [rcx]
0x00000000001ad55e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; or al, 0x3c ; add dword ptr [rax], eax ; clc ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001ae75e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; or al, 0x4e ; add dword ptr [rax], eax ; pop rax ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a415e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; or al, 0xa8 ; add byte ptr [rax], al ; clc ; xchg eax, edx ; out dx, al ; call qword ptr [rax]
0x000000000019f1b6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rax ; add byte ptr [rax], al ; sar dh, 1 ; in al, dx ; call qword ptr [rax]
0x00000000001a5bae : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; ret 0
0x00000000001a64ae : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; retf ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001a92ae : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; stc ; add byte ptr [rax], al ; js 0x1a9259 ; call rbx
0x00000000001a8ea6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; cmc ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001ad5a6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; cmp al, 1 ; add byte ptr [rax + 0x58], al ; cmc ; jmp qword ptr [rcx]
0x00000000001a47a6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; nop ; shr dh, 1 ; call qword ptr [rax]
0x00000000001a41a6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; test al, 0 ; add al, ah ; xchg eax, ebx ; out dx, al ; jmp qword ptr [rdx]
0x00000000001b1aee : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pushfq ; add dword ptr [rcx], 0xf6940800 ; call qword ptr [rdi]
0x00000000001ae3ee : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pushfq ; add qword ptr [rax], rax ; call 0x221ad9b3
0x00000000001b08ee : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pushfq ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; fsub dword ptr [rdx - 0xa] ; jmp qword ptr [rsi]
0x00000000001a6fee : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pushfq ; salc ; add byte ptr [rax], al ; mov byte ptr [rbp - 0xf], al ; call qword ptr [rsi]
0x00000000001a47ee : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pushfq ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; pop rax ; shr esi, 1 ; call rcx
0x00000000001a5b96 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000001a6496 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001abb6e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; sbb al, 0x22 ; add dword ptr [rax], eax ; js 0x1abb5c ; hlt ; jmp qword ptr [rcx]
0x00000000001abe6e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; sbb al, 0x25 ; add dword ptr [rax], eax ; sbb bl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001acb6e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; sbb al, 0x32 ; add dword ptr [rax], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001a596e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; sbb al, 0xc0 ; add byte ptr [rax], al ; clc ; jp 0x1a5982 ; jmp qword ptr [rdi]
0x00000000001a9296 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; stc ; add byte ptr [rax], al ; mov al, 0x91 ; call rbx
0x00000000001af07e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; sub al, 0x57 ; add dword ptr [rax], eax ; cmp bl, al ; cmc ; jmp rax
0x00000000001b067e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; sub al, 0x6d ; add dword ptr [rax], eax ; mov byte ptr [rcx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001b4b7e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; sub al, 0xb2 ; add dword ptr [rax], eax ; call 0x241b432c
0x00000000001a587e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; sub al, 0xbf ; add byte ptr [rax], al ; mov byte ptr [rax + rsi*8], al ; jmp qword ptr [rbx]
0x00000000001a647e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; sub al, 0xcb ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001b857e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; sub al, 0xec ; add dword ptr [rax], eax ; sub byte ptr [rcx - 8], ah ; jmp qword ptr [rbx]
0x00000000001b69d6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; test al, dl ; add dword ptr [rax], eax ; and byte ptr [rsi], cl ; clc ; jmp qword ptr [rax]
0x00000000001ad5d6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; test byte ptr [rcx + rax], bh ; add byte ptr [rax + 0x58], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001a43d6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; test byte ptr [rdx - 0x49e00000], ch ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a47d6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; test byte ptr [rsi - 0x2f800000], ch ; out dx, al ; jmp rbx
0x00000000001ac7e6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; add dword ptr cs:[rax], eax ; jo 0x1ac81c ; cmc ; call qword ptr [rsi]
0x00000000001a71e6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; fadd dword ptr [rax] ; add byte ptr [rax], dh ; int1 ; call qword ptr [rcx]
0x00000000001abe86 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xor al, 0x25 ; add dword ptr [rax], eax ; xor bl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001ae686 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xor al, 0x4d ; add dword ptr [rax], eax ; push rax ; lodsb al, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae986 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xor al, 0x50 ; add dword ptr [rax], eax ; mov al, 0xf5 ; call qword ptr [rsi]
0x00000000001aec86 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xor al, 0x53 ; add dword ptr [rax], eax ; nop ; mov ch, 0xf5 ; jmp qword ptr [rbx]
0x00000000001a4586 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xor al, 0xac ; add byte ptr [rax], al ; push rax ; ret
0x00000000001a4986 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xor al, 0xb0 ; add byte ptr [rax], al ; shr byte ptr [rcx - 6], 1 ; call qword ptr [rax]
0x00000000001ac99e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xor byte ptr [rcx], r8b ; add byte ptr [rax + 0x21], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001ab86a : add byte ptr [rax], al ; adc al, 0x1f ; add dword ptr [rax], eax ; ror ch, 0xf4 ; jmp qword ptr [rcx]
0x00000000001ae46a : add byte ptr [rax], al ; adc al, 0x4b ; add dword ptr [rax], eax ; push rax ; stosb byte ptr [rdi], al ; cmc ; call qword ptr [rax]
0x00000000001ae56a : add byte ptr [rax], al ; adc al, 0x4c ; add dword ptr [rax], eax ; push rax ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001af06a : add byte ptr [rax], al ; adc al, 0x57 ; add dword ptr [rax], eax ; and bl, al ; cmc ; jmp qword ptr [rdi]
0x0000000000195d46 : add byte ptr [rax], al ; adc al, 0x6a ; out dx, eax ; jmp rsp
0x00000000001b096a : add byte ptr [rax], al ; adc al, 0x70 ; add dword ptr [rax], eax ; push rax ; movsxd rsi, esi ; jmp qword ptr [rsi]
0x00000000001a226a : add byte ptr [rax], al ; adc al, 0x89 ; add byte ptr [rax], al ; nop ; mov dh, 0xed ; call qword ptr [rbx]
0x0000000000194486 : add byte ptr [rax], al ; adc al, 0xc3 ; call 0x706199
0x00000000001a646a : add byte ptr [rax], al ; adc al, 0xcb ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a716a : add byte ptr [rax], al ; adc al, 0xd8 ; add byte ptr [rax], al ; xor byte ptr [rbx - 0xf], cl ; jmp qword ptr [rcx]
0x00000000001a47de : add byte ptr [rax], al ; adc al, 0xee ; jmp rbx
0x0000000000007b1e : add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x00000000000075f6 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x00000000000007b8 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x000000000019999e : add byte ptr [rax], al ; adc byte ptr [rax - 0x18], ah ; call qword ptr [rax]
0x00000000000908f2 : add byte ptr [rax], al ; adc byte ptr [rax - 0x73], cl ; add eax, 0x19ab4 ; cmove rax, rdx ; ret
0x0000000000008076 : add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x45
0x000000000008d5a4 : add byte ptr [rax], al ; adc byte ptr [rax], al ; je 0x8d5be ; lea rax, qword ptr [rip + 0xbfd7f] ; ret
0x000000000008fa14 : add byte ptr [rax], al ; adc byte ptr [rax], al ; je 0x8fa2e ; lea rax, qword ptr [rip + 0xbda4f] ; ret
0x000000000008fda4 : add byte ptr [rax], al ; adc byte ptr [rax], al ; je 0x8fdbe ; lea rax, qword ptr [rip + 0xbd7ef] ; ret
0x000000000004a50e : add byte ptr [rax], al ; adc byte ptr [rax], al ; or rsi, rax ; mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x00000000001a145e : add byte ptr [rax], al ; adc byte ptr [rbp - 0x13], bh ; call rsi
0x00000000001a835e : add byte ptr [rax], al ; adc byte ptr [rcx], ah ; call rsi
0x00000000000360b3 : add byte ptr [rax], al ; adc byte ptr [rdi], cl ; ret 0x8b48
0x00000000000007b4 : add byte ptr [rax], al ; adc byte ptr [rdx], ah ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x00000000001a483e : add byte ptr [rax], al ; adc dl, dl ; out dx, al ; call qword ptr [rcx]
0x00000000001949be : add byte ptr [rax], al ; adc edx, ebp ; call rsp
0x00000000001a8f39 : add byte ptr [rax], al ; add ah, ah ; cmc ; add byte ptr [rax], al ; xor byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001ad639 : add byte ptr [rax], al ; add ah, ah ; cmp al, 1 ; add byte ptr [rax], al ; pop rcx ; cmc ; jmp qword ptr [rdx]
0x00000000001a7739 : add byte ptr [rax], al ; add ah, ah ; fld qword ptr [rax] ; add byte ptr [rax - 0x7b], ah ; int1 ; jmp qword ptr [rcx]
0x00000000001b0939 : add byte ptr [rax], al ; add ah, ah ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; and byte ptr [rbx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001a6439 : add byte ptr [rax], al ; add ah, ah ; retf 0 ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001ab739 : add byte ptr [rax], al ; add ah, ah ; sbb eax, 0xccd00001 ; hlt ; jmp qword ptr [rcx]
0x00000000001a4839 : add byte ptr [rax], al ; add ah, ah ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; adc dl, dl ; out dx, al ; call qword ptr [rcx]
0x00000000001a8c19 : add byte ptr [rax], al ; add ah, al ; add byte ptr [rax], al ; jmp qword ptr [rcx]
0x00000000001b8919 : add byte ptr [rax], al ; add ah, al ; out dx, eax ; add dword ptr [rax], eax ; loopne 0x1b8990 ; clc ; jmp qword ptr [rcx]
0x00000000001b9319 : add byte ptr [rax], al ; add ah, al ; stc ; add dword ptr [rax], eax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; clc ; jmp qword ptr [rcx]
0x00000000001a9e51 : add byte ptr [rax], al ; add ah, bh ; add al, 1 ; add byte ptr [rax + 0x41], cl ; call qword ptr [rdx]
0x000000000019ed11 : add byte ptr [rax], al ; add ah, bh ; add byte ptr [rax], al ; add byte ptr [rax], ch ; fsub st(4), st(0) ; jmp qword ptr [rcx]
0x000000000019e051 : add byte ptr [rax], al ; add ah, bh ; add byte ptr [rax], r8b ; shr rdx, 1 ; jmp rdi
0x00000000001a8f51 : add byte ptr [rax], al ; add ah, bh ; cmc ; add byte ptr [rax], al ; push rbp ; jmp qword ptr [rcx]
0x00000000001ad451 : add byte ptr [rax], al ; add ah, bh ; cmp al, byte ptr [rcx] ; add byte ptr [rax + 0x55], ch ; cmc ; call qword ptr [rdx]
0x00000000001a7251 : add byte ptr [rax], al ; add ah, bh ; fadd dword ptr [rax] ; add al, ch ; push rsp ; int1 ; jmp qword ptr [rax]
0x00000000001b0951 : add byte ptr [rax], al ; add ah, bh ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; cmp byte ptr [rbx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001af051 : add byte ptr [rax], al ; add ah, bh ; push rsi ; add dword ptr [rax], eax ; pop rax ; ret 0xfff5
0x00000000001a6451 : add byte ptr [rax], al ; add ah, bh ; retf 0 ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001b5a51 : add byte ptr [rax], al ; add ah, bh ; rol byte ptr [rcx], 0 ; pop rax ; ret 0xfff7
0x00000000001ab751 : add byte ptr [rax], al ; add ah, bh ; sbb eax, 0xcce80001 ; hlt ; jmp qword ptr [rcx]
0x00000000001a0df1 : add byte ptr [rax], al ; add ah, bl ; and dword ptr [rax], eax ; add al, ch ; push 0xed ; jmp qword ptr [rsi]
0x00000000001a8b31 : add byte ptr [rax], al ; add ah, bl ; int1 ; add byte ptr [rax], al ; test al, 0x46 ; jmp qword ptr [rcx]
0x00000000001a8a31 : add byte ptr [rax], al ; add ah, bl ; lock add byte ptr [rax], al ; call 0x221a7c8b
0x00000000001ac731 : add byte ptr [rax], al ; add ah, bl ; sub eax, 0x1c680001 ; cmc ; jmp qword ptr [rcx]
0x00000000001aca31 : add byte ptr [rax], al ; add ah, bl ; xor byte ptr [rcx], al ; add byte ptr [rax + 0x22], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a9a41 : add byte ptr [rax], al ; add ah, ch ; add byte ptr [rcx], al ; add byte ptr [rax + 0x17], ch ; call qword ptr [rsi]
0x00000000001ae941 : add byte ptr [rax], al ; add ah, ch ; add qword ptr [r8], r8 ; clc ; scasd eax, dword ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x00000000001abe41 : add byte ptr [rax], al ; add ah, ch ; and al, 1 ; add al, ch ; loop 0x1abe49 ; jmp qword ptr [rcx]
0x00000000001a2a41 : add byte ptr [rax], al ; add ah, ch ; nop ; add byte ptr [rax], al ; fmul st(4) ; in eax, dx ; call qword ptr [rdx]
0x00000000001a5c41 : add byte ptr [rax], al ; add ah, ch ; ret 0
0x00000000001a4941 : add byte ptr [rax], al ; add ah, ch ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; shr rsi, cl ; jmp qword ptr [rsi]
0x00000000001acb41 : add byte ptr [rax], al ; add ah, ch ; xor dword ptr [rcx], eax ; add byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a8f21 : add byte ptr [rax], al ; add ah, cl ; cmc ; add byte ptr [rax], al ; sbb byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001a7721 : add byte ptr [rax], al ; add ah, cl ; fld qword ptr [rax] ; add byte ptr [rax - 0x7b], cl ; int1 ; jmp qword ptr [rcx]
0x00000000001b0621 : add byte ptr [rax], al ; add ah, cl ; insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; sub byte ptr [rcx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001b0921 : add byte ptr [rax], al ; add ah, cl ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; or byte ptr [rbx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001a6421 : add byte ptr [rax], al ; add ah, cl ; retf 0 ; sub byte ptr [rdi - 0x10], dh ; jmp qword ptr [rax]
0x00000000001a7021 : add byte ptr [rax], al ; add ah, cl ; salc ; add byte ptr [rax], al ; clc ; xchg eax, esi ; cld ; jmp qword ptr [rbx]
0x00000000001ab421 : add byte ptr [rax], al ; add ah, cl ; sbb al, byte ptr [rcx] ; add byte ptr [rax], bh ; mov bh, 0xf9 ; call qword ptr [rax]
0x00000000001b2b21 : add byte ptr [rax], al ; add ah, cl ; xchg eax, ecx ; add dword ptr [rax], eax ; enter -0x91b, -1 ; ret
0x00000000001ae749 : add byte ptr [rax], al ; add ah, dh ; add qword ptr [r8], r8 ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ad549 : add byte ptr [rax], al ; add ah, dh ; cmp eax, dword ptr [rcx] ; add al, ah ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001b6949 : add byte ptr [rax], al ; add ah, dh ; iretd ; add dword ptr [rax], eax ; adc byte ptr [rax + rdi*8], cl ; jmp qword ptr [rax]
0x00000000001aa949 : add byte ptr [rax], al ; add ah, dh ; sgdt ptr [rax] ; adc byte ptr [rsi], dl ; hlt ; call qword ptr [rbx]
0x00000000001ac649 : add byte ptr [rax], al ; add ah, dh ; sub al, 1 ; add al, al ; sbb ebp, esi ; jmp qword ptr [rcx]
0x00000000001aaa29 : add byte ptr [rax], al ; add ah, dl ; adc byte ptr [rcx], al ; add byte ptr [rax + 0x16], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001abe29 : add byte ptr [rax], al ; add ah, dl ; and al, 1 ; add al, dl ; loop 0x1abe31 ; jmp qword ptr [rcx]
0x00000000001b0729 : add byte ptr [rax], al ; add ah, dl ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; xor byte ptr [rdx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001b3f29 : add byte ptr [rax], al ; add ah, dl ; movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; shr cl, 0xfb ; call rsi
0x00000000001a5c29 : add byte ptr [rax], al ; add ah, dl ; ret 0
0x00000000001b5c29 : add byte ptr [rax], al ; add ah, dl ; ret 1
0x00000000001a4929 : add byte ptr [rax], al ; add ah, dl ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; push rax ; shr esi, cl ; call qword ptr [rax]
0x00000000001ac329 : add byte ptr [rax], al ; add ah, dl ; sub dword ptr [rcx], eax ; add byte ptr [rax + 0xe], dh ; cmc ; jmp qword ptr [rax]
0x000000000011e8e3 : add byte ptr [rax], al ; add al, 0 ; add al, ch ; ret
0x000000000008bda2 : add byte ptr [rax], al ; add al, 0 ; add byte ptr [rax], al ; je 0x8bdc0 ; lea rax, qword ptr [rip + 0xe2edf] ; ret
0x000000000013533f : add byte ptr [rax], al ; add al, 0 ; add byte ptr [rax], al ; mov dword ptr [rbx + 0x98], eax ; jmp 0x13531c
0x00000000001acb5a : add byte ptr [rax], al ; add al, 0x32 ; add dword ptr [rax], eax ; xor byte ptr [rsi], ah ; cmc ; jmp qword ptr [rcx]
0x0000000000195896 : add byte ptr [rax], al ; add al, 0x62 ; out dx, al ; push qword ptr [rbp + rdx*8 + 0x62640000] ; out dx, al ; call rsp
0x00000000001a145a : add byte ptr [rax], al ; add al, 0x7b ; add byte ptr [rax], al ; adc byte ptr [rbp - 0x13], bh ; call rsi
0x000000000019531e : add byte ptr [rax], al ; add al, 0xb5 ; in eax, dx ; jmp rsp
0x00000000001a835a : add byte ptr [rax], al ; add al, 0xea ; add byte ptr [rax], al ; adc byte ptr [rcx], ah ; call rsi
0x00000000001b9a5a : add byte ptr [rax], al ; add al, 1 ; add al, byte ptr [rax] ; rol cl, 1 ; clc ; call rcx
0x0000000000185fcd : add byte ptr [rax], al ; add al, ah ; or dl, dh ; inc dword ptr [rax] ; or edx, esi ; jmp qword ptr [rax]
0x000000000011b24b : add byte ptr [rax], al ; add al, al ; cmp edx, 0x80000000 ; cmovne eax, edi ; ret
0x000000000011b2c9 : add byte ptr [rax], al ; add al, al ; shr eax, 0x10 ; cmp edx, 0x80000000 ; cmovne eax, edi ; ret
0x0000000000134ab0 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0xc8 ; jmp rcx
0x0000000000117f4a : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; jne 0x117f68 ; lea rax, qword ptr [rip + 0x3b747] ; ret
0x000000000011800a : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; jne 0x118028 ; lea rax, qword ptr [rip + 0x3e057] ; ret
0x00000000001180ca : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; jne 0x1180e8 ; lea rax, qword ptr [rip + 0x3b5a7] ; ret
0x0000000000091361 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; jne 0x9137f ; lea rax, qword ptr [rip + 0xc4d10] ; ret
0x0000000000091a11 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; jne 0x91a2f ; lea rax, qword ptr [rip + 0xc1c70] ; ret
0x00000000000966d1 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; jne 0x966ef ; lea rax, qword ptr [rip + 0xbcfd0] ; ret
0x0000000000118056 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0x564bc] ; ret
0x0000000000117f96 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0x5659c] ; ret
0x0000000000117ed6 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0x5665c] ; ret
0x000000000009665d : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0xd7ee5] ; ret
0x000000000009199d : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0xdcb85] ; ret
0x00000000000912ed : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0xdd255] ; ret
0x000000000008de62 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x10] ; ret
0x0000000000118152 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x56960] ; ret
0x0000000000091c02 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x80] ; ret
0x000000000008c006 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xc] ; ret
0x0000000000091c65 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xd] ; ret
0x00000000000917d5 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xdd2ed] ; ret
0x0000000000090e6c : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 8], dh ; lea rax, qword ptr [rip + 0x26] ; ret
0x00000000000ac91c : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 8], dh ; lea rax, qword ptr [rip + 0xec76] ; ret
0x00000000000abd4c : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 8], dh ; lea rax, qword ptr [rip + 0xf8f6] ; ret
0x000000000011807d : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0x386b5] ; ret
0x0000000000117fbd : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0x38795] ; ret
0x0000000000117efd : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0x38855] ; ret
0x0000000000096684 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0xba0de] ; ret
0x00000000000919c4 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0xbed7e] ; ret
0x0000000000091314 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0xbf44e] ; ret
0x000000000008de16 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0x1516c] ; ret
0x000000000008bbb6 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0x157ac] ; ret
0x000000000008f6f6 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd495c] ; ret
0x0000000000091a96 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd513c] ; ret
0x000000000008d496 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd540c] ; ret
0x0000000000091bb6 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd682c] ; ret
0x000000000009133b : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip + 0x107] ; ret
0x00000000000966ab : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip - 0x5269] ; ret
0x00000000000919eb : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip - 0x5c9] ; ret
0x0000000000117f24 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip - 0x86af2] ; ret
0x0000000000117fe4 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip - 0x86bb2] ; ret
0x00000000001180a4 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip - 0x86c92] ; ret
0x00000000001ac387 : add byte ptr [rax], al ; add al, byte ptr [rcx + 0x283100e] ; push rsp ; ret
0x0000000000113243 : add byte ptr [rax], al ; add al, byte ptr [rcx - 1] ; push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x00000000000e1fd6 : add byte ptr [rax], al ; add al, ch ; adc dh, byte ptr [rax - 0x76b70001] ; ret 0x848b
0x0000000000173333 : add byte ptr [rax], al ; add al, ch ; adc eax, 0x48fffa3a ; add esp, 0x80 ; ret
0x0000000000077237 : add byte ptr [rax], al ; add al, ch ; adc ebx, edi ; or dword ptr [rax], eax ; add rsp, 0x80 ; mov eax, edx ; ret
0x0000000000077327 : add byte ptr [rax], al ; add al, ch ; and edx, edi ; or dword ptr [rax], eax ; add rsp, 0x80 ; mov eax, edx ; ret
0x00000000000ebfcb : add byte ptr [rax], al ; add al, ch ; cmp eax, 0x48ffffec ; add esp, 0x18 ; ret
0x00000000000deed1 : add byte ptr [rax], al ; add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; or dh, ah ; dec dword ptr [rax - 0x77] ; ret
0x000000000004423c : add byte ptr [rax], al ; add al, ch ; in al, dx ; fdivp st(7) ; dec dword ptr [rax - 0x77] ; ret
0x000000000006be0c : add byte ptr [rax], al ; add al, ch ; in al, dx ; ret
0x000000000003a957 : add byte ptr [rax], al ; add al, ch ; int1 ; and al, 7 ; add byte ptr [rdx - 1], bh ; test eax, eax ; cmovs eax, edx ; pop rbx ; ret
0x00000000000c8dca : add byte ptr [rax], al ; add al, ch ; jle 0xc8dbf ; add al, 0 ; add rsp, 0x80 ; pop rbx ; ret
0x000000000006d0d9 : add byte ptr [rax], al ; add al, ch ; jmp qword ptr [rdi]
0x00000000000617bb : add byte ptr [rax], al ; add al, ch ; lea ebp, dword ptr [rbx + 0x40e9ffff] ; ret 0xffff
0x000000000004568a : add byte ptr [rax], al ; add al, ch ; mov esi, 0x48000d16 ; add esp, 0x80 ; pop rbx ; ret
0x00000000000e97f2 : add byte ptr [rax], al ; add al, ch ; mov esi, 0x48fff361 ; mov dword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x0000000000124705 : add byte ptr [rax], al ; add al, ch ; movsxd rcx, ecx ; idiv edi ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007053b : add byte ptr [rax], al ; add al, ch ; or eax, 0x48000a68 ; add esp, 0x80 ; ret
0x0000000000077ee2 : add byte ptr [rax], al ; add al, ch ; out dx, al ; or dword ptr [rax], eax ; add rsp, 0x80 ; pop rbx ; ret
0x0000000000055a85 : add byte ptr [rax], al ; add al, ch ; ret
0x00000000000bd486 : add byte ptr [rax], al ; add al, ch ; ret 0x598
0x00000000000775d6 : add byte ptr [rax], al ; add al, ch ; ret 0x80c
0x0000000000071386 : add byte ptr [rax], al ; add al, ch ; ret 0xa59
0x00000000001329e6 : add byte ptr [rax], al ; add al, ch ; ret 0xaf
0x00000000001734ee : add byte ptr [rax], al ; add al, ch ; ret 0xeac4
0x0000000000106e46 : add byte ptr [rax], al ; add al, ch ; ret 0xf8
0x0000000000118886 : add byte ptr [rax], al ; add al, ch ; ret 0xffe4
0x00000000000972ea : add byte ptr [rax], al ; add al, ch ; sahf ; xchg al, bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000007714b : add byte ptr [rax], al ; add al, ch ; std ; sti ; or dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x000000000007f21b : add byte ptr [rax], al ; add al, ch ; sub eax, 0x4800097b ; add esp, 0x80 ; ret
0x0000000000086715 : add byte ptr [rax], al ; add al, ch ; xor eax, dword ptr [rsi] ; or dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x0000000000034ab7 : add byte ptr [rax], al ; add al, dh ; jg 0x34b11 ; sub eax, edx ; shr rax, 0x3f ; ret
0x000000000012d698 : add byte ptr [rax], al ; add bh, al ; adc al, 0x10 ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000002147d : add byte ptr [rax], al ; add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000008a92a : add byte ptr [rax], al ; add bh, al ; add eax, 0x338eb1 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008a76d : add byte ptr [rax], al ; add bh, al ; add eax, 0x33906e ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000008682d : add byte ptr [rax], al ; add bh, al ; add eax, 0x33cf6e ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000ecdbb : add byte ptr [rax], al ; add bh, al ; or byte ptr [rsi], cl ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000005a0ff : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rbp*8 - 1], ecx ; call qword ptr [rax]
0x000000000017338d : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000134aba : add byte ptr [rax], al ; add bh, bh ; loope 0x134a57 ; ret
0x000000000006f07d : add byte ptr [rax], al ; add bh, bh ; loopne 0x6f0f6 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000012f630 : add byte ptr [rax], al ; add bh, bh ; mov ah, 0x24 ; enter 0, 0 ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00000000000c80dc : add byte ptr [rax], al ; add bh, bh ; ror byte ptr [rax - 0x77], 1 ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000645aa : add byte ptr [rax], al ; add bh, bh ; shr cl, 1 ; ret 0xfffe
0x00000000000d818f : add byte ptr [rax], al ; add bh, dh ; ret
0x00000000000cf9ba : add byte ptr [rax], al ; add bl, al ; mov eax, 0xffffffff ; ret
0x00000000000adb3f : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x0000000000089ae2 : add byte ptr [rax], al ; add bl, al ; mov rsi, rbx ; mov rdi, rax ; call rcx
0x00000000000ceb4a : add byte ptr [rax], al ; add bl, al ; nop ; cmp rax, 0x2f ; je 0xceb23 ; mov eax, 1 ; ret
0x00000000000d69db : add byte ptr [rax], al ; add bl, al ; nop ; mov byte ptr [rdi + 8], 0x1c ; mov eax, 2 ; ret
0x00000000000d691b : add byte ptr [rax], al ; add bl, al ; nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000ce97a : add byte ptr [rax], al ; add bl, al ; nop ; mov eax, 0xfffa ; ret
0x00000000001382bb : add byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x000000000006c40f : add byte ptr [rax], al ; add bl, al ; nop dword ptr [rax + rax] ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x0000000000077157 : add byte ptr [rax], al ; add bl, al ; nop dword ptr [rax + rax] ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x0000000000134cbf : add byte ptr [rax], al ; add bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000d6971 : add byte ptr [rax], al ; add bl, al ; nop dword ptr [rax] ; mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x00000000000ce971 : add byte ptr [rax], al ; add bl, al ; nop dword ptr [rax] ; mov eax, 0x7e ; ret
0x000000000013ea35 : add byte ptr [rax], al ; add bl, al ; nop dword ptr [rax] ; mov eax, dword ptr [rdi + 0x28] ; ret
0x0000000000146148 : add byte ptr [rax], al ; add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000130752 : add byte ptr [rax], al ; add bl, al ; nop word ptr cs:[rax + rax] ; ret
0x000000000012dea2 : add byte ptr [rax], al ; add bl, al ; nop word ptr cs:[rax + rax] ; xor eax, eax ; ret
0x000000000008b8ea : add byte ptr [rax], al ; add bl, al ; ret
0x00000000001379cc : add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x000000000008a5fa : add byte ptr [rax], al ; add bl, ch ; ret 0x4590
0x0000000000135348 : add byte ptr [rax], al ; add bl, ch ; ret 0x8b48
0x00000000000350cd : add byte ptr [rax], al ; add bl, dh ; addps xmm0, xmm0 ; ret
0x000000000012ffdb : add byte ptr [rax], al ; add bl, dh ; movq mm0, qword ptr [rdi + 0x20] ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x0000000000130013 : add byte ptr [rax], al ; add bl, dh ; movq mm0, qword ptr [rdi + 0x38] ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x00000000000a6e3d : add byte ptr [rax], al ; add bl, dh ; movq mm0, qword ptr [rsi] ; mov cl, byte ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a619d : add byte ptr [rax], al ; add bl, dh ; movq mm0, qword ptr [rsi] ; mov ecx, dword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a860d : add byte ptr [rax], al ; add bl, dh ; movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a77cd : add byte ptr [rax], al ; add bl, dh ; movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a616d : add byte ptr [rax], al ; add bl, dh ; movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000aa07d : add byte ptr [rax], al ; add bl, dh ; movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a711d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000a712d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000002014d : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000001abe71 : add byte ptr [rax], al ; add byte ptr [0xffffffffe3180001], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001abe89 : add byte ptr [rax], al ; add byte ptr [0xffffffffe3300001], dh ; hlt ; jmp qword ptr [rcx]
0x0000000000089add : add byte ptr [rax], al ; add byte ptr [rax + 0x16], bh ; ret
0x0000000000056ba8 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000d626e : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x1a8b
0x00000000000c18af : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x00000000000e663e : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x634c
0x00000000000534e7 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000003cab5 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8949
0x000000000008413f : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8d49
0x00000000000ffc7a : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000002bb44 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x4476
0x0000000000102308 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ror byte ptr [rcx + 0x450f48da], 1 ; call 0xffffffffffd31b0e
0x0000000000192acb : add byte ptr [rax], al ; add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x00000000001b7a11 : add byte ptr [rax], al ; add byte ptr [rax + 0x45180001], bh ; clc ; call qword ptr [rdx]
0x00000000001a3a11 : add byte ptr [rax], al ; add byte ptr [rax + 0x62c80000], bh ; out dx, al ; call rsi
0x000000000006d8e1 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rsi ; jmp rax
0x00000000000e13c2 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; add cl, byte ptr [rax - 0x77] ; ret
0x000000000003adb7 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; and al, 0xc ; add rsp, 0x18 ; ret
0x0000000000125bf2 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; fisttp dword ptr [rax + 1] ; ret
0x0000000000057140 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000012687e : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 1], 1 ; xlatb ; mov qword ptr [r9], rdi ; ret
0x0000000000130449 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; sbb byte ptr [r11 + 0xb7603f8], r8b ; mov eax, 2 ; ret
0x000000000013ac96 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; vpaddw xmm7, xmm15, xmm7 ; add eax, dword ptr [rax] ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8e0f
0x00000000000f732c : add byte ptr [rax], al ; add byte ptr [rax + 0x6607b70f], dl ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000ce19d : add byte ptr [rax], al ; add byte ptr [rax + 0x66], bh ; syscall ; ret
0x0000000000034b7a : add byte ptr [rax], al ; add byte ptr [rax + 0x66d02148], al ; movd mm0, rax ; ret
0x0000000000034bc6 : add byte ptr [rax], al ; add byte ptr [rax + 0x66d02148], al ; movd mm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x00000000000ce1bd : add byte ptr [rax], al ; add byte ptr [rax + 0x68], bh ; syscall ; ret
0x00000000000ce1ad : add byte ptr [rax], al ; add byte ptr [rax + 0x6b], bh ; syscall ; ret
0x00000000000ce1cd : add byte ptr [rax], al ; add byte ptr [rax + 0x6c], bh ; syscall ; ret
0x0000000000034b4d : add byte ptr [rax], al ; add byte ptr [rax + 0x7110ff2], al ; and rax, rdx ; movq xmm0, rax ; ret
0x00000000000d24fd : add byte ptr [rax], al ; add byte ptr [rax + 0x7500017f], al ; or al, byte ptr [rbx - 0xf76fd32] ; ret
0x00000000000a766d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000000ce8c8 : add byte ptr [rax], al ; add byte ptr [rax + 0x7f], bh ; ret
0x00000000000fb265 : add byte ptr [rax], al ; add byte ptr [rax + 0xa], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000abcad : add byte ptr [rax], al ; add byte ptr [rax + 0xb740fe6], al ; mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xabd30 ; ret
0x00000000000abcfd : add byte ptr [rax], al ; add byte ptr [rax + 0xb740fe6], al ; mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xabd30 ; ret
0x00000000000dfc85 : add byte ptr [rax], al ; add byte ptr [rax + 0xc], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dfd6d : add byte ptr [rax], al ; add byte ptr [rax + 0xc], bh ; ret
0x000000000011b1ad : add byte ptr [rax], al ; add byte ptr [rax + 0xca], bh ; ret
0x0000000000116d5f : add byte ptr [rax], al ; add byte ptr [rax + 0xca], bh ; syscall ; pop rdx ; pop rsi ; ret
0x000000000014637d : add byte ptr [rax], al ; add byte ptr [rax + 0xf247c], al ; jne 0x1463a0 ; xor eax, eax ; add rsp, 0x48 ; ret
0x00000000000aad35 : add byte ptr [rax], al ; add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x00000000000c9b2a : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x000000000010a4a8 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x31c3
0x00000000000587d8 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x348
0x0000000000143442 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x0000000000110b29 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8349
0x0000000000085649 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x894c
0x00000000000aad56 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x00000000000aaca8 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x00000000000ccf6b : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000000fad26 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x0000000000026434 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xf685
0x0000000000098d30 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000ce98d : add byte ptr [rax], al ; add byte ptr [rax + 0xfc17], bh ; ret
0x00000000000899b2 : add byte ptr [rax], al ; add byte ptr [rax + 0xfd63948], al ; xchg ebx, ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x00000000000abfed : add byte ptr [rax], al ; add byte ptr [rax + 0xfe580f5], cl ; je 0xac01e ; add rax, 2 ; ret
0x00000000000abd1d : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; jg 0xabd35 ; neg eax ; ret
0x000000000013a12c : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000004a4fa : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000000aaf80 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000003c2f5 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x000000000008405d : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x214c
0x00000000000e4cca : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0xc748
0x000000000013074d : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x00000000000ceb64 : add byte ptr [rax], al ; add byte ptr [rax + 7], bh ; ret
0x00000000001ad66d : add byte ptr [rax], al ; add byte ptr [rax + rax + 0x3d1c0000], cl ; add dword ptr [rax], eax ; sub byte ptr [rcx - 0xb], bl ; call rdx
0x000000000017a629 : add byte ptr [rax], al ; add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x00000000001a19e9 : add byte ptr [rax], al ; add byte ptr [rax + rax*4 - 0x73400000], dl ; in eax, dx ; jmp rcx
0x00000000000f7130 : add byte ptr [rax], al ; add byte ptr [rax + rax*8 + 0x9b81175], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001a5971 : add byte ptr [rax], al ; add byte ptr [rax + rax*8], bl ; add byte ptr [rax], al ; clc ; jp 0x1a597f ; jmp qword ptr [rdi]
0x00000000001a915d : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax + rdi*8], cl ; add byte ptr [rax], al ; sbb byte ptr [rdi - 0xe], ah ; call qword ptr [rax]
0x00000000001b35f5 : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pushfq ; add dword ptr [rax], eax ; xor byte ptr [rcx], 0xf7 ; jmp qword ptr [rsi]
0x00000000001a2b5d : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; or al, 0x92 ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; std ; jmp rdi
0x000000000019f3bd : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rdi + rax + 0x5180000], ch ; in eax, dx ; call qword ptr [rcx]
0x00000000001ad8f5 : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rdi + rdi + 0x61f00001], ah ; cmc ; jmp qword ptr [rbx]
0x00000000001a50bd : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rdi + rsi*4], ch ; add byte ptr [rax + 0x3d], cl ; out dx, eax ; jmp rsi
0x00000000001b2b1d : add byte ptr [rax], al ; add byte ptr [rax + rax], al ; add ah, cl ; xchg eax, ecx ; add dword ptr [rax], eax ; enter -0x91b, -1 ; ret
0x000000000019f1fd : add byte ptr [rax], al ; add byte ptr [rax + rax], al ; add byte ptr [rax + rbx*2 - 0xa80000], ch ; in al, dx ; call rsp
0x000000000008bda1 : add byte ptr [rax], al ; add byte ptr [rax + rax], al ; add byte ptr [rax], al ; je 0x8bdc1 ; lea rax, qword ptr [rip + 0xe2edf] ; ret
0x000000000013533e : add byte ptr [rax], al ; add byte ptr [rax + rax], al ; add byte ptr [rax], al ; mov dword ptr [rbx + 0x98], eax ; jmp 0x13531d
0x00000000001b2ad5 : add byte ptr [rax], al ; add byte ptr [rax + rax], al ; add byte ptr [rcx + rdx*4 - 0x1abfffff], al ; idiv bh ; ret
0x0000000000199fcd : add byte ptr [rax], al ; add byte ptr [rax + rax], al ; add byte ptr [rsi + rax], bh ; add al, ch ; test eax, ebp ; call rsp
0x00000000001a5c3d : add byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add ah, ch ; ret 0
0x00000000001b6fd5 : add byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; test dh, dl ; add dword ptr [rax], eax ; mov al, 0x2c ; clc ; jmp rdi
0x00000000001b40e5 : add byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; xchg eax, esp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; push rax ; jl 0x1b40f8 ; call rcx
0x00000000001a724d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; cld ; fadd dword ptr [rax] ; add al, ch ; push rsp ; int1 ; jmp qword ptr [rax]
0x00000000001aa945 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; hlt ; sgdt ptr [rax] ; adc byte ptr [rsi], dl ; hlt ; call qword ptr [rbx]
0x00000000001aa985 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; xor al, 0x10 ; add dword ptr [rax], eax ; adc byte ptr [rsi], dl ; hlt ; call qword ptr [rsi]
0x00000000001a3c5d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rbx], cl ; add byte ptr [rax], al ; pop rax ; outsd dx, dword ptr [rsi] ; out dx, al ; jmp qword ptr [rdi]
0x00000000001af87d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rdi + rbx*2], ch ; add dword ptr [rax], eax ; cmp bh, ah ; cmc ; jmp rsp
0x00000000001a1b85 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rdx + rax*4], dh ; add byte ptr [rax], al ; nop ; xchg eax, esp ; in eax, dx ; call qword ptr [rcx]
0x00000000001a9e4d : add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; cld ; add al, 1 ; add byte ptr [rax + 0x41], cl ; call qword ptr [rdx]
0x00000000001a908d : add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; cmp al, 0xf7 ; add byte ptr [rax], al ; pop rax ; pop rbp ; jmp rcx
0x00000000001a7dc5 : add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; je 0x1a7dc0 ; add byte ptr [rax], al ; mov al, 0x10 ; jmp qword ptr [rdi]
0x000000000019f8f5 : add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rdi ; add byte ptr [rax], al ; nop ; sbb ebp, ebp ; call rbx
0x000000000019e04d : add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add ah, bh ; add byte ptr [rax], r8b ; shr rdx, 1 ; jmp rdi
0x00000000001b3f25 : add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add ah, dl ; movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; shr cl, 0xfb ; call rsi
0x00000000001ac325 : add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add ah, dl ; sub dword ptr [rcx], eax ; add byte ptr [rax + 0xe], dh ; cmc ; jmp qword ptr [rax]
0x00000000001a3a0d : add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add byte ptr [rax + 0x62c80000], bh ; out dx, al ; call rsi
0x00000000001a2975 : add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; ror dl, 1 ; in eax, dx ; call rdi
0x00000000001b748d : add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add byte ptr [rbx + rbx*8], bh ; add dword ptr [rax], eax ; fdivr dword ptr [rcx] ; clc ; call rax
0x00000000001a1455 : add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add byte ptr [rbx + rdi*2], al ; add byte ptr [rax], al ; adc byte ptr [rbp - 0x13], bh ; call rsi
0x00000000001b9aa5 : add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add byte ptr [rcx + rax + 2], dl ; add byte ptr [rax - 0x3d], ah ; clc ; jmp rcx
0x00000000001b9a55 : add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add byte ptr [rcx + rax], al ; add al, byte ptr [rax] ; rol cl, 1 ; clc ; call rcx
0x00000000001a2265 : add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add byte ptr [rcx + rcx*4], dl ; add byte ptr [rax], al ; nop ; mov dh, 0xed ; call qword ptr [rbx]
0x000000000019ffcd : add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add byte ptr [rsi], bh ; add byte ptr [rax], bh ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001a9dad : add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add byte ptr [rsp + rax + 1], bl ; add byte ptr [rax + 0x36], ch ; call qword ptr [rcx]
0x000000000019ed0d : add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; cld ; add byte ptr [rax], al ; add byte ptr [rax], ch ; fsub st(4), st(0) ; jmp qword ptr [rcx]
0x00000000001a70c5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; je 0x1a70b3 ; add byte ptr [rax], al ; nop ; int1 ; call rdx
0x00000000001a70fd : add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; xlatb ; add byte ptr [rax], al ; cmp byte ptr [rdx - 0xf], cl ; jmp rcx
0x00000000001a11c5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; mov ah, 0x25 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x13], dh ; jmp qword ptr [rcx]
0x00000000001b5bed : add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; pushfq ; ret 1
0x00000000001a173d : add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; sub al, 0x2b ; add byte ptr [rax], al ; call 0x281a04dd
0x00000000001a74e5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; xchg eax, esp ; fild dword ptr [rax] ; add byte ptr [rax], ah ; pop rdi ; int1 ; call rbx
0x00000000001b9969 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add al, byte ptr [rax] ; loopne 0x1b993d ; clc ; call qword ptr [rbx]
0x00000000001ab865 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; adc al, 0x1f ; add dword ptr [rax], eax ; ror ch, 0xf4 ; jmp qword ptr [rcx]
0x00000000001ae465 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; adc al, 0x4b ; add dword ptr [rax], eax ; push rax ; stosb byte ptr [rdi], al ; cmc ; call qword ptr [rax]
0x00000000001ae565 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; adc al, 0x4c ; add dword ptr [rax], eax ; push rax ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001af065 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; adc al, 0x57 ; add dword ptr [rax], eax ; and bl, al ; cmc ; jmp qword ptr [rdi]
0x00000000001b0965 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; adc al, 0x70 ; add dword ptr [rax], eax ; push rax ; movsxd rsi, esi ; jmp qword ptr [rsi]
0x00000000001a6465 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; adc al, 0xcb ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001acb55 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; add al, 0x32 ; add dword ptr [rax], eax ; xor byte ptr [rsi], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001ae19d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; add qword ptr [rax], rax ; js 0x1ae14b ; cmc ; jmp qword ptr [rcx]
0x00000000001ab675 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; and al, 0x1d ; add dword ptr [rax], eax ; and bl, cl ; hlt ; jmp qword ptr [rsi]
0x00000000001a1375 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; and al, 0x7a ; add byte ptr [rax], al ; and byte ptr [rdx - 0x13], bh ; jmp qword ptr [rbx]
0x00000000001a2a75 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; and al, 0x91 ; add byte ptr [rax], al ; loopne 0x1a2a5c ; in eax, dx ; call qword ptr [rdx]
0x00000000001a5475 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; and al, 0xbb ; add byte ptr [rax], al ; xor bh, bl ; cld ; call qword ptr [rax]
0x00000000001b7775 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; and al, 0xde ; add dword ptr [rax], eax ; nop ; clc ; call qword ptr [rdx]
0x00000000001abe9d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; and rax, 0xe3480001 ; hlt ; jmp qword ptr [rcx]
0x00000000001a8f4d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; cmc ; add byte ptr [rax], al ; push rbp ; jmp qword ptr [rcx]
0x00000000001ad44d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; cmp al, byte ptr [rcx] ; add byte ptr [rax + 0x55], ch ; cmc ; call qword ptr [rdx]
0x00000000001b094d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; cmp byte ptr [rbx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001a644d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; retf 0 ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001ab74d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; sbb eax, 0xcce80001 ; hlt ; jmp qword ptr [rcx]
0x000000000019a98d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cmp al, 0x10 ; add byte ptr [rax], al ; js 0x19aa1e ; std ; jmp qword ptr [rdi]
0x00000000001ad58d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cmp al, 0x3c ; add dword ptr [rax], eax ; sub byte ptr [rax - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001a3f8d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cmp al, 0xa6 ; add byte ptr [rax], al ; fdivr dword ptr [rcx - 0x12] ; jmp qword ptr [rcx]
0x00000000001a8e8d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cmp al, 0xf5 ; add byte ptr [rax], al ; call 0x221a80ff
0x00000000001aea2d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; fcom qword ptr [rax + 1] ; add byte ptr [rax], bh ; mov cl, 0xf5 ; jmp qword ptr [rcx]
0x00000000001a8a2d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; fdivr st(0), st(0) ; add byte ptr [rax], al ; call 0x221a7c8f
0x00000000001ae22d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; fmul qword ptr [rax + 1] ; add byte ptr [rax], cl ; xchg eax, esp ; cmc ; jmp qword ptr [rcx]
0x00000000001ae72d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; fmul qword ptr [rbp + 1] ; add byte ptr [rax], ch ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae32d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; fmul qword ptr [rcx + 1] ; add byte ptr [rax - 0x57], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001ac72d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; fsubr qword ptr [rip + 0x1c680001] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae745 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; hlt ; add qword ptr [r8], r8 ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b6945 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; hlt ; iretd ; add dword ptr [rax], eax ; adc byte ptr [rax + rdi*8], cl ; jmp qword ptr [rax]
0x00000000001ac645 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; hlt ; sub al, 1 ; add al, al ; sbb ebp, esi ; jmp qword ptr [rcx]
0x00000000001a6435 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, -0x36 ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a4835 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, -0x52 ; add byte ptr [rax], al ; adc dl, dl ; out dx, al ; call qword ptr [rcx]
0x00000000001a8f35 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, -0xb ; add byte ptr [rax], al ; xor byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001b9935 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, -1 ; add dword ptr [rax], eax ; rol cl, 0xf8 ; call qword ptr [rdi]
0x00000000001ab735 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, 0x1d ; add dword ptr [rax], eax ; ror ah, 1 ; hlt ; jmp qword ptr [rcx]
0x00000000001abc35 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, 0x22 ; add dword ptr [rax], eax ; adc ch, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001ad635 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, 0x3c ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xb], bl ; jmp qword ptr [rdx]
0x00000000001b0935 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, 0x6f ; add dword ptr [rax], eax ; and byte ptr [rbx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001abe3d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; and al, 1 ; add al, ch ; loop 0x1abe4d ; jmp qword ptr [rcx]
0x00000000001a2a3d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; nop ; add byte ptr [rax], al ; fmul st(4) ; in eax, dx ; call qword ptr [rdx]
0x00000000001a493d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; shr rsi, cl ; jmp qword ptr [rsi]
0x00000000001acb3d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; xor dword ptr [rcx], eax ; add byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001ad5bd : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp al, 1 ; add byte ptr [rax + 0x58], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a12bd : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jns 0x1a12d5 ; add al, cl ; jns 0x1a12c6 ; jmp qword ptr [rdi]
0x00000000001a57bd : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov esi, 0xab880000 ; sti ; call qword ptr [rax]
0x00000000001a43bd : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; mov bl, 0xee ; jmp rdx
0x00000000001a48c5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; je 0x1a488b ; add byte ptr [rax], al ; loopne 0x1a492e ; cli ; call qword ptr [rax]
0x00000000001a64c5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; je 0x1a64a7 ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001aa9c5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; je 0x1aa9ec ; add dword ptr [rax], eax ; adc byte ptr [rsi], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001aeec5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; je 0x1aef31 ; add dword ptr [rax], eax ; mov al, 0xb8 ; cmc ; jmp qword ptr [rcx]
0x00000000001b06c5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; je 0x1b0749 ; add dword ptr [rax], eax ; shl byte ptr [rcx - 0xa], 1 ; jmp qword ptr [rsi]
0x000000000019cecd : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; jl 0x19cf19 ; add byte ptr [rax], al ; out -0x17, eax ; call qword ptr [rax]
0x00000000001b8bcd : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; jl 0x1b8bd6 ; add dword ptr [rax], eax ; clc ; sahf ; sti ; jmp qword ptr [rdx]
0x00000000001ac7fd : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add dword ptr cs:[rax], eax ; js 0x1ac835 ; cmc ; jmp qword ptr [rcx]
0x00000000001ae6fd : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add qword ptr [r8], r8 ; clc ; lodsb al, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ad4fd : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; cmp eax, dword ptr [rcx] ; add byte ptr [rax + 0x57], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001b8afd : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; int1 ; add dword ptr [rax], eax ; cwde ; lahf ; sti ; jmp qword ptr [rdx]
0x00000000001ab805 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov ah, 0x1e ; add dword ptr [rax], eax ; xor ch, cl ; hlt ; jmp qword ptr [rcx]
0x00000000001ac405 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov ah, 0x2a ; add dword ptr [rax], eax ; jo 0x1ac435 ; cmc ; call qword ptr [rbx]
0x00000000001a8f05 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov ah, 0xf5 ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001a49b5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov al, 0 ; add byte ptr [rax - 0x5d], dh ; cli ; call qword ptr [rax]
0x00000000001a64dd : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov ebx, cs ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001a72dd : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov ecx, ds ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0xf], dl ; jmp qword ptr [rcx]
0x00000000001b7a0d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov esp, 0x180001e0 ; clc ; call qword ptr [rdx]
0x00000000001a650d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov esp, 0x280000cb ; ja 0x1a6519 ; call qword ptr [rdx]
0x000000000019ca0d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov esp, 0xa8000030 ; fsubp st(1) ; call qword ptr [rcx]
0x00000000001a7e0d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov esp, 0xb80000e4 ; adc dl, dh ; call qword ptr [rbx]
0x00000000001abe0d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov esp, 0xb8000124 ; loop 0x1abe1d ; jmp qword ptr [rcx]
0x00000000001aa80d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov esp, 0xd800010e ; stc ; jmp qword ptr [rdi]
0x00000000001ae60d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov esp, 0xd800014c ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001a45dd : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov word ptr [rax + rax - 0x113ae800], gs ; call qword ptr [rax]
0x00000000001aa9dd : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov word ptr [rax], ss ; add dword ptr [rax], eax ; sub byte ptr [rsi], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001ae5dd : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov word ptr [rcx + rax], cs ; test al, 0xab ; cmc ; jmp qword ptr [rcx]
0x00000000001ae8dd : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov word ptr [rdi + 1], cs ; add byte ptr [rax - 0x51], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001aa9f5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc byte ptr [rcx], al ; add byte ptr [rax + 0x16], al ; hlt ; jmp qword ptr [rcx]
0x00000000001b06f5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rdx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001a5bf5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x00000000001a64f5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001ab65d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; or al, 0x1d ; add dword ptr [rax], eax ; or bl, cl ; hlt ; jmp qword ptr [rcx]
0x00000000001ad55d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; or al, 0x3c ; add dword ptr [rax], eax ; clc ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001ae75d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; or al, 0x4e ; add dword ptr [rax], eax ; pop rax ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a415d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; or al, 0xa8 ; add byte ptr [rax], al ; clc ; xchg eax, edx ; out dx, al ; call qword ptr [rax]
0x000000000019f1b5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rax ; add byte ptr [rax], al ; sar dh, 1 ; in al, dx ; call qword ptr [rax]
0x00000000001a5bad : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; ret 0
0x00000000001a64ad : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; retf ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001a92ad : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; stc ; add byte ptr [rax], al ; js 0x1a925a ; call rbx
0x00000000001a8ea5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; cmc ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001ad5a5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; cmp al, 1 ; add byte ptr [rax + 0x58], al ; cmc ; jmp qword ptr [rcx]
0x00000000001a47a5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; nop ; shr dh, 1 ; call qword ptr [rax]
0x00000000001a41a5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; test al, 0 ; add al, ah ; xchg eax, ebx ; out dx, al ; jmp qword ptr [rdx]
0x00000000001b1aed : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; add dword ptr [rcx], 0xf6940800 ; call qword ptr [rdi]
0x00000000001ae3ed : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; add qword ptr [rax], rax ; call 0x221ad9b4
0x00000000001b08ed : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; fsub dword ptr [rdx - 0xa] ; jmp qword ptr [rsi]
0x00000000001a6fed : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; salc ; add byte ptr [rax], al ; mov byte ptr [rbp - 0xf], al ; call qword ptr [rsi]
0x00000000001a47ed : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; pop rax ; shr esi, 1 ; call rcx
0x00000000001a5b95 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x00000000001a6495 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001abb6d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; sbb al, 0x22 ; add dword ptr [rax], eax ; js 0x1abb5d ; hlt ; jmp qword ptr [rcx]
0x00000000001abe6d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; sbb al, 0x25 ; add dword ptr [rax], eax ; sbb bl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001acb6d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; sbb al, 0x32 ; add dword ptr [rax], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001a596d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; sbb al, 0xc0 ; add byte ptr [rax], al ; clc ; jp 0x1a5983 ; jmp qword ptr [rdi]
0x00000000001a9295 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; stc ; add byte ptr [rax], al ; mov al, 0x91 ; call rbx
0x00000000001af07d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; sub al, 0x57 ; add dword ptr [rax], eax ; cmp bl, al ; cmc ; jmp rax
0x00000000001b067d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; sub al, 0x6d ; add dword ptr [rax], eax ; mov byte ptr [rcx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001b4b7d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; sub al, 0xb2 ; add dword ptr [rax], eax ; call 0x241b432d
0x00000000001a587d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; sub al, 0xbf ; add byte ptr [rax], al ; mov byte ptr [rax + rsi*8], al ; jmp qword ptr [rbx]
0x00000000001a647d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; sub al, 0xcb ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001b857d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; sub al, 0xec ; add dword ptr [rax], eax ; sub byte ptr [rcx - 8], ah ; jmp qword ptr [rbx]
0x00000000001b69d5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; test al, dl ; add dword ptr [rax], eax ; and byte ptr [rsi], cl ; clc ; jmp qword ptr [rax]
0x00000000001ad5d5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; test byte ptr [rcx + rax], bh ; add byte ptr [rax + 0x58], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001a43d5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; test byte ptr [rdx - 0x49e00000], ch ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a47d5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; test byte ptr [rsi - 0x2f800000], ch ; out dx, al ; jmp rbx
0x00000000001ac7e5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; add dword ptr cs:[rax], eax ; jo 0x1ac81d ; cmc ; call qword ptr [rsi]
0x00000000001a71e5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; fadd dword ptr [rax] ; add byte ptr [rax], dh ; int1 ; call qword ptr [rcx]
0x00000000001abe85 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xor al, 0x25 ; add dword ptr [rax], eax ; xor bl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001ae685 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xor al, 0x4d ; add dword ptr [rax], eax ; push rax ; lodsb al, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae985 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xor al, 0x50 ; add dword ptr [rax], eax ; mov al, 0xf5 ; call qword ptr [rsi]
0x00000000001aec85 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xor al, 0x53 ; add dword ptr [rax], eax ; nop ; mov ch, 0xf5 ; jmp qword ptr [rbx]
0x00000000001a4585 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xor al, 0xac ; add byte ptr [rax], al ; push rax ; ret
0x00000000001a4985 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xor al, 0xb0 ; add byte ptr [rax], al ; shr byte ptr [rcx - 6], 1 ; call qword ptr [rax]
0x00000000001ac99d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xor byte ptr [rcx], r8b ; add byte ptr [rax + 0x21], ch ; cmc ; jmp qword ptr [rcx]
0x000000000019f6a5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rdx + rcx + 0x12700000], dl ; in eax, dx ; call qword ptr [rax]
0x00000000001a25c5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rsp + rcx*4], dh ; add al, dl ; ret 0xffed
0x00000000001ac209 : add byte ptr [rax], al ; add byte ptr [rax + rbp + 0xbb00001], dh ; cmc ; jmp rcx
0x00000000000ac623 : add byte ptr [rax], al ; add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000001a4161 : add byte ptr [rax], al ; add byte ptr [rax + rbp*4], cl ; add byte ptr [rax], al ; clc ; xchg eax, edx ; out dx, al ; call qword ptr [rax]
0x00000000001a41a9 : add byte ptr [rax], al ; add byte ptr [rax + rbp*4], dl ; add al, ah ; xchg eax, ebx ; out dx, al ; jmp qword ptr [rdx]
0x000000000019f201 : add byte ptr [rax], al ; add byte ptr [rax + rbx*2 - 0xa80000], ch ; in al, dx ; call rsp
0x00000000001a71e9 : add byte ptr [rax], al ; add byte ptr [rax + rbx*8 + 0x4b300000], dl ; int1 ; call qword ptr [rcx]
0x00000000001a7169 : add byte ptr [rax], al ; add byte ptr [rax + rbx*8], dl ; add byte ptr [rax], al ; xor byte ptr [rbx - 0xf], cl ; jmp qword ptr [rcx]
0x00000000001ae1a1 : add byte ptr [rax], al ; add byte ptr [rax + rcx*2 + 1], cl ; add byte ptr [rax - 0x6d], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001ae1e9 : add byte ptr [rax], al ; add byte ptr [rax + rcx*2 - 0x6c3fffff], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001a9161 : add byte ptr [rax], al ; add byte ptr [rax + rdi*8], cl ; add byte ptr [rax], al ; sbb byte ptr [rdi - 0xe], ah ; call qword ptr [rax]
0x00000000001aa9e1 : add byte ptr [rax], al ; add byte ptr [rax + rdx + 0x16280001], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001aa9f9 : add byte ptr [rax], al ; add byte ptr [rax + rdx + 0x16400001], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001aaa11 : add byte ptr [rax], al ; add byte ptr [rax + rdx + 0x16580001], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001aea01 : add byte ptr [rax], al ; add byte ptr [rax + rdx*2 - 0x4ef7ffff], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001ae9e9 : add byte ptr [rax], al ; add byte ptr [rax + rdx*2 - 0x4f0fffff], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001ae989 : add byte ptr [rax], al ; add byte ptr [rax + rdx*2], dh ; add dword ptr [rax], eax ; mov al, 0xf5 ; call qword ptr [rsi]
0x00000000001a2979 : add byte ptr [rax], al ; add byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; ror dl, 1 ; in eax, dx ; call rdi
0x00000000001a29c9 : add byte ptr [rax], al ; add byte ptr [rax + rdx*4], dh ; add byte ptr [rax - 0x34], ah ; in eax, dx ; call qword ptr [rsi]
0x00000000001b69d9 : add byte ptr [rax], al ; add byte ptr [rax + rdx*8 + 0xe200001], al ; clc ; jmp qword ptr [rax]
0x000000000019a991 : add byte ptr [rax], al ; add byte ptr [rax + rdx], bh ; add byte ptr [rax], al ; js 0x19aa1a ; std ; jmp qword ptr [rdi]
0x00000000001aa989 : add byte ptr [rax], al ; add byte ptr [rax + rdx], dh ; add dword ptr [rax], eax ; adc byte ptr [rsi], dl ; hlt ; call qword ptr [rsi]
0x00000000001ac9a1 : add byte ptr [rax], al ; add byte ptr [rax + rsi + 1], cl ; add byte ptr [rax + 0x21], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001b0969 : add byte ptr [rax], al ; add byte ptr [rax + rsi*2], dl ; add dword ptr [rax], eax ; push rax ; movsxd rsi, esi ; jmp qword ptr [rsi]
0x00000000001a49e9 : add byte ptr [rax], al ; add byte ptr [rax + rsi*4 - 0xa800000], dl ; out dx, al ; call qword ptr [rax]
0x00000000001a49b9 : add byte ptr [rax], al ; add byte ptr [rax + rsi*4], ah ; add byte ptr [rax - 0x5d], dh ; cli ; call qword ptr [rax]
0x00000000001a4989 : add byte ptr [rax], al ; add byte ptr [rax + rsi*4], dh ; add byte ptr [rax], al ; shr byte ptr [rcx - 6], 1 ; call qword ptr [rax]
0x00000000001b8a09 : add byte ptr [rax], al ; add byte ptr [rax + rsi*8 - 0x5f9fffff], dh ; sti ; jmp qword ptr [rdx]
0x00000000000c3841 : add byte ptr [rax], al ; add byte ptr [rax + rsi], bh ; mov esi, eax ; mov ecx, eax ; jne 0xc3842 ; nop dword ptr [rax] ; mov r10d, eax ; jmp 0xc3833
0x000000000006d925 : add byte ptr [rax], al ; add byte ptr [rax - 0x14dff3b5], al ; retf -0x6f9a ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x6d908
0x000000000003639f : add byte ptr [rax], al ; add byte ptr [rax - 0x2d], cl ; loopne 0x363f9 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000003641f : add byte ptr [rax], al ; add byte ptr [rax - 0x2d], cl ; loopne 0x3647d ; test dword ptr [rdi], eax ; setne al ; movzx eax, al ; ret
0x0000000000034f33 : add byte ptr [rax], al ; add byte ptr [rax - 0x3791f09a], al ; movss dword ptr [rdi], xmm1 ; ret
0x0000000000143ecb : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdx - 1], bh ; mov eax, edx ; ret
0x00000000000742a3 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000010affe : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; add eax, 0x2b6214 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000007f241 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; add eax, 0x3444f9 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007dfa6 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000007d327 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000003c587 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000338ce : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xfff6
0x0000000000033740 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xfffa
0x0000000000033982 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xfffc
0x00000000000339c6 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xfffe
0x000000000009ed54 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000ac04d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000000ac02d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000000ac08d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000ac03d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000ac07d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x0000000000034f0a : add byte ptr [rax], al ; add byte ptr [rax - 0x3f91f09a], al ; ret
0x000000000002db60 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x000000000001fa2c : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000006f113 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x00000000000ac61d : add byte ptr [rax], al ; add byte ptr [rax - 0x57], cl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0xac69f ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000139c4d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; adc eax, 0x3609 ; mov rdi, rbx ; call qword ptr [rax]
0x000000000012f249 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; adc eax, 0xe00d ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000008be08 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000204ed : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add eax, 0x16a074 ; ret
0x00000000000204fd : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add eax, 0x16bf78 ; ret
0x0000000000100e4e : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add eax, 0x2c32a8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ac66d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000ac67d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x0000000000122edd : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cmp eax, 0x2a2815 ; call rax
0x0000000000022b6d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ac65d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000008ab8d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; or eax, 0xffe8e ; mov rdx, rcx ; jmp 0x8ab6c
0x00000000000b73dd : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor al, 0x83 ; sub r10, rax ; jmp 0xb740b
0x00000000000453eb : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor eax, 0x1cb ; call rax
0x00000000000704c6 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor eax, 0x30 ; call rax
0x000000000007ed40 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor eax, 0xffffdcd6 ; call rax
0x000000000007e880 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe196 ; call rax
0x000000000007e3c6 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe650 ; call rax
0x000000000007cf96 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffa80 ; call rax
0x000000000007cd26 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffcf0 ; call rax
0x00000000000707b0 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffd46 ; call rax
0x000000000008959d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000e8f4d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc eax, 0x2d8051 ; mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x0000000000135ff4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003a98f : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000001379ad : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rdi] ; enter 0x4789, 0x58 ; mov eax, 1 ; ret
0x0000000000163edd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000143b20 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x27e8c6 ; call qword ptr [rax]
0x00000000001434f3 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x27eef3 ; call qword ptr [rax]
0x000000000013b79d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x2856d1 ; cmp dword ptr fs:[rax], 0x18 ; je 0x13b7c0 ; ret
0x000000000012b0bd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x295f21 ; mov rax, qword ptr fs:[rax] ; ret
0x000000000010b475 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x2b8f59 ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000000bd492 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x30903c ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007f13d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x3433b9 ; ret
0x000000000002d938 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x3934a6 ; mov qword ptr [rax], rdx ; ret
0x00000000000215cd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x3a4d39 ; ret
0x00000000000215bd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x3a4d59 ; ret
0x0000000000081c44 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x29] ; ret
0x00000000000ff3ec : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; and al, 0xb0 ; ret
0x00000000001556ad : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmc ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000136dae : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x00000000000de84d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000015588d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; hlt ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000086dfd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; je 0x86e30 ; call rax
0x00000000000b340a : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; je 0xb3416 ; jo 0xb344d ; ror dword ptr [rax - 0x2d], 1 ; out 0x89, al ; ror dword ptr [rax - 0x77], 1 ; ret 0xd348
0x00000000000bc19c : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; je 0xbc1d5 ; cmp byte ptr [rax - 0x75], cl ; jl 0xbc1da ; call r15
0x00000000000bc68f : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; je 0xbc6c8 ; cmp byte ptr [rax - 0x75], cl ; jl 0xbc6cd ; call r15
0x00000000001236bd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jl 0x1236f2 ; sub al, ch ; out dx, al ; ret 0xffef
0x00000000000e3ae9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jl 0xe3b1d ; or al, ch ; ret 0xf3be
0x000000000002e01d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jo 0x2e07a ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000074674 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jp 0x746c3 ; jmp 0x74648
0x00000000000d024d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffcf8 ; call r12
0x000000000007685d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000007b50d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or byte ptr [r8 + 0x3b], r9b ; adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x0000000000022f4d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000107755 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x000000000002dead : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push 0xfff6348 ; mov bh, 4 ; js 0x2de50 ; loopne 0x2ded0 ; ret
0x00000000000818bd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x000000000008486d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0x7404
0x000000000015b1fd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsi ; add al, 0x48 ; mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b18d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsi ; add eax, 0x480e8b48 ; mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000015512d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015aadd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsi ; cmc ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015aa5d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsi ; hlt ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000f7ee3 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsi ; js 0xf7f41 ; mov dword ptr [rdi + 0x100], edx ; ret
0x000000000015abdd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsi ; test dword ptr [rbx - 0x76b703b2], 0x4f89f757 ; cld ; ret
0x0000000000088475 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x68 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000003946d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsp ; and al, 8 ; mov rsi, r15 ; mov rdi, r12 ; call r14
0x00000000000ca14d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000007a03d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sub byte ptr [r8 - 0x75], r9b ; push rdi ; and byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x00000000001552ed : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; test qword ptr [rbx - 0x76b703aa], 0x5789f74f ; cld ; ret
0x00000000000740cd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xchg dword ptr [rax + 0x48000000], esp ; cmp dword ptr [rax + 0x30], 0 ; je 0x740f1 ; ret
0x000000000007466d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xchg eax, ebx ; movabs al, byte ptr [0xeb407a8b48000000] ; ret
0x000000000008668f : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xchg eax, edx ; push 0x4c000008 ; cmp edx, eax ; jne 0x86670 ; ret
0x00000000000e2f3b : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xchg eax, esp ; and al, 0x10 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f4baf : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001046a5 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xor byte ptr [rax - 0x75], cl ; jge 0x104680 ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000645d3 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xor eax, 0x35c993 ; call rax
0x000000000005c93b : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xor eax, 0x36462b ; call rax
0x000000000005c31f : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xor eax, 0x364c47 ; call rax
0x000000000005969b : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xor eax, 0x3678cb ; call rax
0x00000000000509f7 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xor eax, 0x37056f ; call rax
0x000000000004db1b : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xor eax, 0x37344b ; call rax
0x000000000003a8ac : add byte ptr [rax], al ; add byte ptr [rax - 0x7760577], dl ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x000000000007f1ce : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; adc eax, 0x344570 ; add dword ptr [rip + 0x344565], 1 ; ret
0x000000000008b9df : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000ffab1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add eax, 0x2c2cc5 ; mov rdx, rax ; jmp 0xffa5b
0x000000000003a91d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; cqo ; idiv rsi ; ret
0x0000000000071da3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000084809 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000070123 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000086cce : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x000000000007c3ed : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fild word ptr [rcx - 1] ; xchg eax, edi ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000103d76 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, ebp ; pop rbp ; pop r12 ; jmp rax
0x0000000000145d17 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x0000000000021816 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx - 0x7d] ; in al, -0x10 ; mov qword ptr [r12], rbx ; call 0x8da40
0x00000000000bf075 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000000f22b3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0x65
0x00000000000dfca5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; sal byte ptr [rdx - 1], 0xff ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000075523 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; imul eax ; ret 0xfab1
0x000000000006c404 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jb 0x6c421 ; mov dword ptr [rdx + 4], 1 ; ret
0x000000000007a001 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x0000000000107b94 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; mov edx, dword ptr [rax - 0x77000000] ; ret 0xe8c1
0x00000000001378fb : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; or byte ptr [r8 - 0x77], r9b ; push rdi ; adc byte ptr [rax + 1], bh ; ret
0x000000000008b03d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, r12 ; call rax
0x000000000008a18f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x00000000001309fa : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000104ffc : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000012f194 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013595a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; push r8 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116287 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000115a07 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov rdx, r13 ; call rax
0x0000000000110670 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x00000000000c86ca : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000000444c7 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000008679a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00000000000b053a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2944
0x0000000000070244 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000001073c8 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x3be
0x00000000000f13cd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000b5a9a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8941
0x00000000000c05dd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000ede7c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000070376 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000586cd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000062464 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf1e8
0x000000000007c3f7 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000000f825a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; salc ; syscall ; cmp rax, -0x1000 ; ja 0xf8281 ; ret
0x000000000006eead : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000fe82e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xlatb ; syscall ; cmp rax, -0x1000 ; ja 0xfe851 ; ret
0x00000000000fe8de : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xlatb ; syscall ; cmp rax, -0x1000 ; ja 0xfe901 ; ret
0x0000000000134b8a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x134ba6 ; ret
0x000000000013791a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x137936 ; ret
0x0000000000137932 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x13794e ; ret
0x00000000001381aa : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x1381c6 ; ret
0x00000000001381c2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x1381de ; ret
0x00000000001381f2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x13820e ; ret
0x000000000011b1bd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xor eax, eax ; ret
0x00000000000ba3fd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xor ecx, dword ptr [rax - 0x75] ; and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000172568 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rax - 0x77] ; sbb eax, 0x2511ab ; jne 0x172568 ; pop rbx ; ret
0x00000000000200ea : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ret 0xf4c
0x000000000005a773 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0x10
0x000000000013b7f1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], 0x5b ; ret
0x000000000006efa1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rdi + rcx + 0x48], 0x8b ; mov edi, 0xe0 ; jmp rax
0x00000000000f80fe : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rcx*2 + 0x31], 0xd2 ; xor esi, esi ; mov rdi, rbx ; call rax
0x000000000008d82c : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x00000000001258fc : add byte ptr [rax], al ; add byte ptr [rax - 0x7cf6b873], dl ; loopne 0x12590b ; add eax, 0x10 ; ret
0x0000000000089c1b : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000012125d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; in al, dx ; sub byte ptr [rcx - 0x77], cl ; enter -0x72b4, 0xd ; insb byte ptr [rdi], dx ; ret
0x00000000000f138d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; insb byte ptr [rdi], dx ; and al, 0x18 ; add dword ptr [rax - 0x75], ecx ; and al, 0x18 ; mov rdx, rax ; jmp 0xf13e3
0x0000000000024945 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; mov dword ptr [rcx], 0x83480b89 ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000023bbd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; mov dword ptr [rcx], 0x83481389 ; rol dword ptr [rax + rcx*2], -0x7d ; ret
0x0000000000125145 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; out dx, eax ; add ecx, dword ptr [rax - 0x7d] ; call qword ptr [rcx]
0x0000000000022d7d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000aa48d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x0000000000021483 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000282f8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000000cddcd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000172c3d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000010a8c8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x00000000000da20d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x00000000001496e3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121f81 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000000d8b3d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x0000000000090d9d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x0000000000090d2d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000002c5bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000e38fd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8908
0x0000000000110185 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xc601
0x000000000014b261 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d9c40 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb02
0x000000000014970d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000bcb1d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000000a11ad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00000000000ac6d5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x44 ; mov eax, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0xac6c1 ; ret
0x000000000004748d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x80 ; js 0x474a7 ; add byte ptr [rbp - 0xa], dh ; pop rbx ; ret
0x0000000000173a9d : add byte ptr [rax], al ; add byte ptr [rax - 0x7e], al ; jmp 0x173aad
0x000000000015a594 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000007354d : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000fa3d8 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000036f60 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000029b4d : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011b406 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00000000000341fb : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000000357cb : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000003c641 : add byte ptr [rax], al ; add byte ptr [rax], 0xf ; xchg eax, ebp ; ret
0x00000000001ab864 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; adc al, 0x1f ; add dword ptr [rax], eax ; ror ch, 0xf4 ; jmp qword ptr [rcx]
0x00000000001ae464 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; adc al, 0x4b ; add dword ptr [rax], eax ; push rax ; stosb byte ptr [rdi], al ; cmc ; call qword ptr [rax]
0x00000000001ae564 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; adc al, 0x4c ; add dword ptr [rax], eax ; push rax ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001af064 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; adc al, 0x57 ; add dword ptr [rax], eax ; and bl, al ; cmc ; jmp qword ptr [rdi]
0x00000000001b0964 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; adc al, 0x70 ; add dword ptr [rax], eax ; push rax ; movsxd rsi, esi ; jmp qword ptr [rsi]
0x00000000001a6464 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; adc al, 0xcb ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001acb54 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; add al, 0x32 ; add dword ptr [rax], eax ; xor byte ptr [rsi], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001ae19c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; add qword ptr [rax], rax ; js 0x1ae14c ; cmc ; jmp qword ptr [rcx]
0x00000000001ab674 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; and al, 0x1d ; add dword ptr [rax], eax ; and bl, cl ; hlt ; jmp qword ptr [rsi]
0x00000000001a1374 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; and al, 0x7a ; add byte ptr [rax], al ; and byte ptr [rdx - 0x13], bh ; jmp qword ptr [rbx]
0x00000000001a2a74 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; and al, 0x91 ; add byte ptr [rax], al ; loopne 0x1a2a5d ; in eax, dx ; call qword ptr [rdx]
0x00000000001b7774 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; and al, 0xde ; add dword ptr [rax], eax ; nop ; clc ; call qword ptr [rdx]
0x00000000001abe9c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; and rax, 0xe3480001 ; hlt ; jmp qword ptr [rcx]
0x00000000001a8f4c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; cmc ; add byte ptr [rax], al ; push rbp ; jmp qword ptr [rcx]
0x00000000001b094c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; cmp byte ptr [rbx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001a644c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; retf 0 ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001ab74c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; sbb eax, 0xcce80001 ; hlt ; jmp qword ptr [rcx]
0x000000000019a98c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cmp al, 0x10 ; add byte ptr [rax], al ; js 0x19aa1f ; std ; jmp qword ptr [rdi]
0x00000000001ad58c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cmp al, 0x3c ; add dword ptr [rax], eax ; sub byte ptr [rax - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001a3f8c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cmp al, 0xa6 ; add byte ptr [rax], al ; fdivr dword ptr [rcx - 0x12] ; jmp qword ptr [rcx]
0x00000000001a8e8c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cmp al, 0xf5 ; add byte ptr [rax], al ; call 0x221a8100
0x00000000001aea2c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; fcom qword ptr [rax + 1] ; add byte ptr [rax], bh ; mov cl, 0xf5 ; jmp qword ptr [rcx]
0x00000000001a8a2c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; fdivr st(0), st(0) ; add byte ptr [rax], al ; call 0x221a7c90
0x00000000001ae22c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rax + 1] ; add byte ptr [rax], cl ; xchg eax, esp ; cmc ; jmp qword ptr [rcx]
0x00000000001ae72c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rbp + 1] ; add byte ptr [rax], ch ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae32c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rcx + 1] ; add byte ptr [rax - 0x57], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001ac72c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; fsubr qword ptr [rip + 0x1c680001] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae744 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; hlt ; add qword ptr [r8], r8 ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b6944 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; hlt ; iretd ; add dword ptr [rax], eax ; adc byte ptr [rax + rdi*8], cl ; jmp qword ptr [rax]
0x00000000001ac644 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; hlt ; sub al, 1 ; add al, al ; sbb ebp, esi ; jmp qword ptr [rcx]
0x00000000001a6434 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, -0x36 ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a4834 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, -0x52 ; add byte ptr [rax], al ; adc dl, dl ; out dx, al ; call qword ptr [rcx]
0x00000000001a8f34 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, -0xb ; add byte ptr [rax], al ; xor byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001b9934 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, -1 ; add dword ptr [rax], eax ; rol cl, 0xf8 ; call qword ptr [rdi]
0x00000000001ab734 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, 0x1d ; add dword ptr [rax], eax ; ror ah, 1 ; hlt ; jmp qword ptr [rcx]
0x00000000001abc34 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, 0x22 ; add dword ptr [rax], eax ; adc ch, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001ad634 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, 0x3c ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xb], bl ; jmp qword ptr [rdx]
0x00000000001b0934 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, 0x6f ; add dword ptr [rax], eax ; and byte ptr [rbx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001abe3c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; and al, 1 ; add al, ch ; loop 0x1abe4e ; jmp qword ptr [rcx]
0x00000000001a2a3c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; nop ; add byte ptr [rax], al ; fmul st(4) ; in eax, dx ; call qword ptr [rdx]
0x00000000001a493c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; shr rsi, cl ; jmp qword ptr [rsi]
0x00000000001acb3c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; xor dword ptr [rcx], eax ; add byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001ad5bc : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp al, 1 ; add byte ptr [rax + 0x58], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a12bc : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jns 0x1a12d6 ; add al, cl ; jns 0x1a12c7 ; jmp qword ptr [rdi]
0x00000000001a57bc : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov esi, 0xab880000 ; sti ; call qword ptr [rax]
0x00000000001a43bc : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; mov bl, 0xee ; jmp rdx
0x00000000001a48c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; je 0x1a488c ; add byte ptr [rax], al ; loopne 0x1a492f ; cli ; call qword ptr [rax]
0x00000000001a64c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; je 0x1a64a8 ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001aeec4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; je 0x1aef32 ; add dword ptr [rax], eax ; mov al, 0xb8 ; cmc ; jmp qword ptr [rcx]
0x00000000001b06c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; je 0x1b074a ; add dword ptr [rax], eax ; shl byte ptr [rcx - 0xa], 1 ; jmp qword ptr [rsi]
0x000000000019cecc : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; jl 0x19cf1a ; add byte ptr [rax], al ; out -0x17, eax ; call qword ptr [rax]
0x00000000001ac7fc : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add dword ptr cs:[rax], eax ; js 0x1ac836 ; cmc ; jmp qword ptr [rcx]
0x00000000001ae6fc : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add qword ptr [r8], r8 ; clc ; lodsb al, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ad4fc : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; cmp eax, dword ptr [rcx] ; add byte ptr [rax + 0x57], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001ab804 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov ah, 0x1e ; add dword ptr [rax], eax ; xor ch, cl ; hlt ; jmp qword ptr [rcx]
0x00000000001ac404 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov ah, 0x2a ; add dword ptr [rax], eax ; jo 0x1ac436 ; cmc ; call qword ptr [rbx]
0x00000000001a8f04 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov ah, 0xf5 ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001a49b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov al, 0 ; add byte ptr [rax - 0x5d], dh ; cli ; call qword ptr [rax]
0x00000000001a64dc : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov ebx, cs ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001a72dc : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov ecx, ds ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0xf], dl ; jmp qword ptr [rcx]
0x00000000001b7a0c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov esp, 0x180001e0 ; clc ; call qword ptr [rdx]
0x00000000001a650c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov esp, 0x280000cb ; ja 0x1a651a ; call qword ptr [rdx]
0x000000000019ca0c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov esp, 0xa8000030 ; fsubp st(1) ; call qword ptr [rcx]
0x00000000001a7e0c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov esp, 0xb80000e4 ; adc dl, dh ; call qword ptr [rbx]
0x00000000001abe0c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov esp, 0xb8000124 ; loop 0x1abe1e ; jmp qword ptr [rcx]
0x00000000001aa80c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov esp, 0xd800010e ; stc ; jmp qword ptr [rdi]
0x00000000001ae60c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov esp, 0xd800014c ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001a45dc : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov word ptr [rax + rax - 0x113ae800], gs ; call qword ptr [rax]
0x00000000001aa9dc : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov word ptr [rax], ss ; add dword ptr [rax], eax ; sub byte ptr [rsi], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001ae5dc : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov word ptr [rcx + rax], cs ; test al, 0xab ; cmc ; jmp qword ptr [rcx]
0x00000000001ae8dc : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov word ptr [rdi + 1], cs ; add byte ptr [rax - 0x51], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001aa9f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc byte ptr [rcx], al ; add byte ptr [rax + 0x16], al ; hlt ; jmp qword ptr [rcx]
0x00000000001b06f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rdx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001a5bf4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x00000000001a64f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001ab65c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; or al, 0x1d ; add dword ptr [rax], eax ; or bl, cl ; hlt ; jmp qword ptr [rcx]
0x00000000001ad55c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; or al, 0x3c ; add dword ptr [rax], eax ; clc ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001ae75c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; or al, 0x4e ; add dword ptr [rax], eax ; pop rax ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a415c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; or al, 0xa8 ; add byte ptr [rax], al ; clc ; xchg eax, edx ; out dx, al ; call qword ptr [rax]
0x000000000019f1b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rax ; add byte ptr [rax], al ; sar dh, 1 ; in al, dx ; call qword ptr [rax]
0x00000000001a5bac : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; ret 0
0x00000000001a64ac : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; retf ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001a92ac : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; stc ; add byte ptr [rax], al ; js 0x1a925b ; call rbx
0x00000000001a8ea4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; cmc ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001ad5a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; cmp al, 1 ; add byte ptr [rax + 0x58], al ; cmc ; jmp qword ptr [rcx]
0x00000000001a47a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; nop ; shr dh, 1 ; call qword ptr [rax]
0x00000000001a41a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; test al, 0 ; add al, ah ; xchg eax, ebx ; out dx, al ; jmp qword ptr [rdx]
0x00000000001b1aec : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pushfq ; add dword ptr [rcx], 0xf6940800 ; call qword ptr [rdi]
0x00000000001ae3ec : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pushfq ; add qword ptr [rax], rax ; call 0x221ad9b5
0x00000000001b08ec : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pushfq ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; fsub dword ptr [rdx - 0xa] ; jmp qword ptr [rsi]
0x00000000001a47ec : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pushfq ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; pop rax ; shr esi, 1 ; call rcx
0x00000000001a5b94 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000001a6494 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001abb6c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; sbb al, 0x22 ; add dword ptr [rax], eax ; js 0x1abb5e ; hlt ; jmp qword ptr [rcx]
0x00000000001abe6c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; sbb al, 0x25 ; add dword ptr [rax], eax ; sbb bl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001acb6c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; sbb al, 0x32 ; add dword ptr [rax], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001a596c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; sbb al, 0xc0 ; add byte ptr [rax], al ; clc ; jp 0x1a5984 ; jmp qword ptr [rdi]
0x00000000001af07c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; sub al, 0x57 ; add dword ptr [rax], eax ; cmp bl, al ; cmc ; jmp rax
0x00000000001b067c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; sub al, 0x6d ; add dword ptr [rax], eax ; mov byte ptr [rcx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001a587c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; sub al, 0xbf ; add byte ptr [rax], al ; mov byte ptr [rax + rsi*8], al ; jmp qword ptr [rbx]
0x00000000001a647c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; sub al, 0xcb ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001b857c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; sub al, 0xec ; add dword ptr [rax], eax ; sub byte ptr [rcx - 8], ah ; jmp qword ptr [rbx]
0x00000000001b69d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; test al, dl ; add dword ptr [rax], eax ; and byte ptr [rsi], cl ; clc ; jmp qword ptr [rax]
0x00000000001ad5d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; test byte ptr [rcx + rax], bh ; add byte ptr [rax + 0x58], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001a43d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; test byte ptr [rdx - 0x49e00000], ch ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a47d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; test byte ptr [rsi - 0x2f800000], ch ; out dx, al ; jmp rbx
0x00000000001ac7e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; add dword ptr cs:[rax], eax ; jo 0x1ac81e ; cmc ; call qword ptr [rsi]
0x00000000001a71e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; fadd dword ptr [rax] ; add byte ptr [rax], dh ; int1 ; call qword ptr [rcx]
0x00000000001abe84 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xor al, 0x25 ; add dword ptr [rax], eax ; xor bl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001ae684 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xor al, 0x4d ; add dword ptr [rax], eax ; push rax ; lodsb al, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae984 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xor al, 0x50 ; add dword ptr [rax], eax ; mov al, 0xf5 ; call qword ptr [rsi]
0x00000000001aec84 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xor al, 0x53 ; add dword ptr [rax], eax ; nop ; mov ch, 0xf5 ; jmp qword ptr [rbx]
0x00000000001a4584 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xor al, 0xac ; add byte ptr [rax], al ; push rax ; ret
0x00000000001a4984 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xor al, 0xb0 ; add byte ptr [rax], al ; shr byte ptr [rcx - 6], 1 ; call qword ptr [rax]
0x00000000001ac99c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xor byte ptr [rcx], r8b ; add byte ptr [rax + 0x21], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000007b1c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x00000000000075f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x0000000000008074 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x45
0x000000000008d5a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; je 0x8d5c0 ; lea rax, qword ptr [rip + 0xbfd7f] ; ret
0x000000000008fa12 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; je 0x8fa30 ; lea rax, qword ptr [rip + 0xbda4f] ; ret
0x000000000008fda2 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; je 0x8fdc0 ; lea rax, qword ptr [rip + 0xbd7ef] ; ret
0x000000000004a50c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; or rsi, rax ; mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x0000000000185fcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; or dl, dh ; inc dword ptr [rax] ; or edx, esi ; jmp qword ptr [rax]
0x0000000000118054 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0x564bc] ; ret
0x0000000000117f94 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0x5659c] ; ret
0x0000000000117ed4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0x5665c] ; ret
0x000000000009665b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0xd7ee5] ; ret
0x000000000009199b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0xdcb85] ; ret
0x00000000000912eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0xdd255] ; ret
0x000000000008de60 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x10] ; ret
0x0000000000118150 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x56960] ; ret
0x0000000000091c00 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x80] ; ret
0x000000000008c004 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xc] ; ret
0x0000000000091c63 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xd] ; ret
0x00000000000917d3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xdd2ed] ; ret
0x0000000000090e6a : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 8], dh ; lea rax, qword ptr [rip + 0x26] ; ret
0x00000000000ac91a : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 8], dh ; lea rax, qword ptr [rip + 0xec76] ; ret
0x00000000000abd4a : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 8], dh ; lea rax, qword ptr [rip + 0xf8f6] ; ret
0x000000000011807b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0x386b5] ; ret
0x0000000000117fbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0x38795] ; ret
0x0000000000117efb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0x38855] ; ret
0x0000000000096682 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0xba0de] ; ret
0x00000000000919c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0xbed7e] ; ret
0x0000000000091312 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rbp + rdx*2 + 0x48], dh ; lea eax, dword ptr [rip + 0xbf44e] ; ret
0x000000000008de14 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0x1516c] ; ret
0x000000000008bbb4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0x157ac] ; ret
0x000000000008f6f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd495c] ; ret
0x0000000000091a94 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd513c] ; ret
0x000000000008d494 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd540c] ; ret
0x0000000000091bb4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd682c] ; ret
0x0000000000091339 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip + 0x107] ; ret
0x00000000000966a9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip - 0x5269] ; ret
0x00000000000919e9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip - 0x5c9] ; ret
0x0000000000117f22 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip - 0x86af2] ; ret
0x0000000000117fe2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip - 0x86bb2] ; ret
0x00000000001180a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rsi + rbp + 0x48], dh ; lea eax, dword ptr [rip - 0x86c92] ; ret
0x00000000001ac385 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rcx + 0x283100e] ; push rsp ; ret
0x00000000000e1fd4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; adc dh, byte ptr [rax - 0x76b70001] ; ret 0x848b
0x00000000000972e8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; sahf ; xchg al, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000034ab5 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; jg 0x34b13 ; sub eax, edx ; shr rax, 0x3f ; ret
0x000000000002147b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000008a76b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, al ; add eax, 0x33906e ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000a860b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a77cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a711b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000a712b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000002014b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000089adb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x16], bh ; ret
0x0000000000192ac9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x000000000012687c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 1], 1 ; xlatb ; mov qword ptr [r9], rdi ; ret
0x00000000000f732a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x6607b70f], dl ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000ce19b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x66], bh ; syscall ; ret
0x0000000000034b78 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x66d02148], al ; movd mm0, rax ; ret
0x00000000000ce1bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x68], bh ; syscall ; ret
0x00000000000ce1ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x6b], bh ; syscall ; ret
0x00000000000ce1cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x6c], bh ; syscall ; ret
0x00000000000a766b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000000dfd6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xc], bh ; ret
0x000000000011b1ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xca], bh ; ret
0x00000000000ce98b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xfc17], bh ; ret
0x00000000000899b0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xfd63948], al ; xchg ebx, ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x00000000000abfeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xfe580f5], cl ; je 0xac020 ; add rax, 2 ; ret
0x00000000000ffc1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000008405b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x214c
0x000000000013074b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x00000000001ad66b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0x3d1c0000], cl ; add dword ptr [rax], eax ; sub byte ptr [rcx - 0xb], bl ; call rdx
0x00000000001a915b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax + rdi*8], cl ; add byte ptr [rax], al ; sbb byte ptr [rdi - 0xe], ah ; call qword ptr [rax]
0x00000000001b35f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pushfq ; add dword ptr [rax], eax ; xor byte ptr [rcx], 0xf7 ; jmp qword ptr [rsi]
0x00000000001a2b5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; or al, 0x92 ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; std ; jmp rdi
0x000000000019f3bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rdi + rax + 0x5180000], ch ; in eax, dx ; call qword ptr [rcx]
0x00000000001ad8f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rdi + rdi + 0x61f00001], ah ; cmc ; jmp qword ptr [rbx]
0x00000000001a50bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rdi + rsi*4], ch ; add byte ptr [rax + 0x3d], cl ; out dx, eax ; jmp rsi
0x000000000019f1fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], al ; add byte ptr [rax + rbx*2 - 0xa80000], ch ; in al, dx ; call rsp
0x00000000001b2ad3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], al ; add byte ptr [rcx + rdx*4 - 0x1abfffff], al ; idiv bh ; ret
0x0000000000199fcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], al ; add byte ptr [rsi + rax], bh ; add al, ch ; test eax, ebp ; call rsp
0x00000000001a5c3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add ah, ch ; ret 0
0x00000000001b6fd3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; test dh, dl ; add dword ptr [rax], eax ; mov al, 0x2c ; clc ; jmp rdi
0x00000000001b40e3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; xchg eax, esp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; push rax ; jl 0x1b40fa ; call rcx
0x00000000001aa943 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; hlt ; sgdt ptr [rax] ; adc byte ptr [rsi], dl ; hlt ; call qword ptr [rbx]
0x00000000001a1b83 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rdx + rax*4], dh ; add byte ptr [rax], al ; nop ; xchg eax, esp ; in eax, dx ; call qword ptr [rcx]
0x00000000001a908b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; cmp al, 0xf7 ; add byte ptr [rax], al ; pop rax ; pop rbp ; jmp rcx
0x00000000001a7dc3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; je 0x1a7dc2 ; add byte ptr [rax], al ; mov al, 0x10 ; jmp qword ptr [rdi]
0x000000000019f8f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rdi ; add byte ptr [rax], al ; nop ; sbb ebp, ebp ; call rbx
0x00000000001b3f23 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add ah, dl ; movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; shr cl, 0xfb ; call rsi
0x00000000001ac323 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add ah, dl ; sub dword ptr [rcx], eax ; add byte ptr [rax + 0xe], dh ; cmc ; jmp qword ptr [rax]
0x00000000001a2973 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; ror dl, 1 ; in eax, dx ; call rdi
0x00000000001b748b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add byte ptr [rbx + rbx*8], bh ; add dword ptr [rax], eax ; fdivr dword ptr [rcx] ; clc ; call rax
0x00000000001a1453 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add byte ptr [rbx + rdi*2], al ; add byte ptr [rax], al ; adc byte ptr [rbp - 0x13], bh ; call rsi
0x00000000001b9a53 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add byte ptr [rcx + rax], al ; add al, byte ptr [rax] ; rol cl, 1 ; clc ; call rcx
0x00000000001a2263 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add byte ptr [rcx + rcx*4], dl ; add byte ptr [rax], al ; nop ; mov dh, 0xed ; call qword ptr [rbx]
0x000000000019ffcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add byte ptr [rsi], bh ; add byte ptr [rax], bh ; in eax, dx ; jmp qword ptr [rdi]
0x000000000019ed0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; cld ; add byte ptr [rax], al ; add byte ptr [rax], ch ; fsub st(4), st(0) ; jmp qword ptr [rcx]
0x00000000001a70c3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; je 0x1a70b5 ; add byte ptr [rax], al ; nop ; int1 ; call rdx
0x00000000001a70fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; xlatb ; add byte ptr [rax], al ; cmp byte ptr [rdx - 0xf], cl ; jmp rcx
0x00000000001a11c3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; mov ah, 0x25 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x13], dh ; jmp qword ptr [rcx]
0x00000000001b5beb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; pushfq ; ret 1
0x00000000001a173b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; sub al, 0x2b ; add byte ptr [rax], al ; call 0x281a04df
0x00000000001ab863 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; adc al, 0x1f ; add dword ptr [rax], eax ; ror ch, 0xf4 ; jmp qword ptr [rcx]
0x00000000001ae463 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; adc al, 0x4b ; add dword ptr [rax], eax ; push rax ; stosb byte ptr [rdi], al ; cmc ; call qword ptr [rax]
0x00000000001ae563 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; adc al, 0x4c ; add dword ptr [rax], eax ; push rax ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001af063 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; adc al, 0x57 ; add dword ptr [rax], eax ; and bl, al ; cmc ; jmp qword ptr [rdi]
0x00000000001b0963 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; adc al, 0x70 ; add dword ptr [rax], eax ; push rax ; movsxd rsi, esi ; jmp qword ptr [rsi]
0x00000000001a6463 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; adc al, 0xcb ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001acb53 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; add al, 0x32 ; add dword ptr [rax], eax ; xor byte ptr [rsi], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001ae19b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; add qword ptr [rax], rax ; js 0x1ae14d ; cmc ; jmp qword ptr [rcx]
0x00000000001ab673 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; and al, 0x1d ; add dword ptr [rax], eax ; and bl, cl ; hlt ; jmp qword ptr [rsi]
0x00000000001a1373 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; and al, 0x7a ; add byte ptr [rax], al ; and byte ptr [rdx - 0x13], bh ; jmp qword ptr [rbx]
0x00000000001a2a73 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; and al, 0x91 ; add byte ptr [rax], al ; loopne 0x1a2a5e ; in eax, dx ; call qword ptr [rdx]
0x00000000001b7773 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; and al, 0xde ; add dword ptr [rax], eax ; nop ; clc ; call qword ptr [rdx]
0x00000000001abe9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; and rax, 0xe3480001 ; hlt ; jmp qword ptr [rcx]
0x00000000001a8f4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; cmc ; add byte ptr [rax], al ; push rbp ; jmp qword ptr [rcx]
0x00000000001b094b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; cmp byte ptr [rbx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001a644b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; retf 0 ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001ab74b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; sbb eax, 0xcce80001 ; hlt ; jmp qword ptr [rcx]
0x000000000019a98b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cmp al, 0x10 ; add byte ptr [rax], al ; js 0x19aa20 ; std ; jmp qword ptr [rdi]
0x00000000001ad58b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cmp al, 0x3c ; add dword ptr [rax], eax ; sub byte ptr [rax - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001a3f8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cmp al, 0xa6 ; add byte ptr [rax], al ; fdivr dword ptr [rcx - 0x12] ; jmp qword ptr [rcx]
0x00000000001aea2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; fcom qword ptr [rax + 1] ; add byte ptr [rax], bh ; mov cl, 0xf5 ; jmp qword ptr [rcx]
0x00000000001a8a2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; fdivr st(0), st(0) ; add byte ptr [rax], al ; call 0x221a7c91
0x00000000001ae22b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; fmul qword ptr [rax + 1] ; add byte ptr [rax], cl ; xchg eax, esp ; cmc ; jmp qword ptr [rcx]
0x00000000001ae72b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; fmul qword ptr [rbp + 1] ; add byte ptr [rax], ch ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae32b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; fmul qword ptr [rcx + 1] ; add byte ptr [rax - 0x57], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001ac72b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; fsubr qword ptr [rip + 0x1c680001] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae743 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; hlt ; add qword ptr [r8], r8 ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ac643 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; hlt ; sub al, 1 ; add al, al ; sbb ebp, esi ; jmp qword ptr [rcx]
0x00000000001a6433 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, -0x36 ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a4833 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, -0x52 ; add byte ptr [rax], al ; adc dl, dl ; out dx, al ; call qword ptr [rcx]
0x00000000001a8f33 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, -0xb ; add byte ptr [rax], al ; xor byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001ab733 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, 0x1d ; add dword ptr [rax], eax ; ror ah, 1 ; hlt ; jmp qword ptr [rcx]
0x00000000001abc33 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, 0x22 ; add dword ptr [rax], eax ; adc ch, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001ad633 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, 0x3c ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xb], bl ; jmp qword ptr [rdx]
0x00000000001b0933 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, 0x6f ; add dword ptr [rax], eax ; and byte ptr [rbx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001abe3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; and al, 1 ; add al, ch ; loop 0x1abe4f ; jmp qword ptr [rcx]
0x00000000001a2a3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; nop ; add byte ptr [rax], al ; fmul st(4) ; in eax, dx ; call qword ptr [rdx]
0x00000000001a493b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; shr rsi, cl ; jmp qword ptr [rsi]
0x00000000001acb3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; xor dword ptr [rcx], eax ; add byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001ad5bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp al, 1 ; add byte ptr [rax + 0x58], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a12bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jns 0x1a12d7 ; add al, cl ; jns 0x1a12c8 ; jmp qword ptr [rdi]
0x00000000001a57bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov esi, 0xab880000 ; sti ; call qword ptr [rax]
0x00000000001a43bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; mov bl, 0xee ; jmp rdx
0x00000000001a48c3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; je 0x1a488d ; add byte ptr [rax], al ; loopne 0x1a4930 ; cli ; call qword ptr [rax]
0x00000000001a64c3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; je 0x1a64a9 ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001aeec3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; je 0x1aef33 ; add dword ptr [rax], eax ; mov al, 0xb8 ; cmc ; jmp qword ptr [rcx]
0x00000000001b06c3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; je 0x1b074b ; add dword ptr [rax], eax ; shl byte ptr [rcx - 0xa], 1 ; jmp qword ptr [rsi]
0x000000000019cecb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; jl 0x19cf1b ; add byte ptr [rax], al ; out -0x17, eax ; call qword ptr [rax]
0x00000000001ac7fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add dword ptr cs:[rax], eax ; js 0x1ac837 ; cmc ; jmp qword ptr [rcx]
0x00000000001ae6fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add qword ptr [r8], r8 ; clc ; lodsb al, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ab803 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov ah, 0x1e ; add dword ptr [rax], eax ; xor ch, cl ; hlt ; jmp qword ptr [rcx]
0x00000000001ac403 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov ah, 0x2a ; add dword ptr [rax], eax ; jo 0x1ac437 ; cmc ; call qword ptr [rbx]
0x00000000001a8f03 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov ah, 0xf5 ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001a49b3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov al, 0 ; add byte ptr [rax - 0x5d], dh ; cli ; call qword ptr [rax]
0x00000000001a64db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov ebx, cs ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001a72db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov ecx, ds ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0xf], dl ; jmp qword ptr [rcx]
0x00000000001b7a0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov esp, 0x180001e0 ; clc ; call qword ptr [rdx]
0x00000000001a650b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov esp, 0x280000cb ; ja 0x1a651b ; call qword ptr [rdx]
0x000000000019ca0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov esp, 0xa8000030 ; fsubp st(1) ; call qword ptr [rcx]
0x00000000001a7e0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov esp, 0xb80000e4 ; adc dl, dh ; call qword ptr [rbx]
0x00000000001abe0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov esp, 0xb8000124 ; loop 0x1abe1f ; jmp qword ptr [rcx]
0x00000000001aa80b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov esp, 0xd800010e ; stc ; jmp qword ptr [rdi]
0x00000000001ae60b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov esp, 0xd800014c ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001a45db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov word ptr [rax + rax - 0x113ae800], gs ; call qword ptr [rax]
0x00000000001aa9db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov word ptr [rax], ss ; add dword ptr [rax], eax ; sub byte ptr [rsi], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001ae5db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov word ptr [rcx + rax], cs ; test al, 0xab ; cmc ; jmp qword ptr [rcx]
0x00000000001ae8db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov word ptr [rdi + 1], cs ; add byte ptr [rax - 0x51], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001aa9f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc byte ptr [rcx], al ; add byte ptr [rax + 0x16], al ; hlt ; jmp qword ptr [rcx]
0x00000000001b06f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rdx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001a5bf3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x00000000001a64f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001ad55b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; or al, 0x3c ; add dword ptr [rax], eax ; clc ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001ae75b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; or al, 0x4e ; add dword ptr [rax], eax ; pop rax ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a415b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; or al, 0xa8 ; add byte ptr [rax], al ; clc ; xchg eax, edx ; out dx, al ; call qword ptr [rax]
0x000000000019f1b3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rax ; add byte ptr [rax], al ; sar dh, 1 ; in al, dx ; call qword ptr [rax]
0x00000000001a5bab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; ret 0
0x00000000001a64ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; retf ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001a92ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; stc ; add byte ptr [rax], al ; js 0x1a925c ; call rbx
0x00000000001a8ea3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; cmc ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001ad5a3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; cmp al, 1 ; add byte ptr [rax + 0x58], al ; cmc ; jmp qword ptr [rcx]
0x00000000001a47a3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; nop ; shr dh, 1 ; call qword ptr [rax]
0x00000000001a41a3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; test al, 0 ; add al, ah ; xchg eax, ebx ; out dx, al ; jmp qword ptr [rdx]
0x00000000001ae3eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; add qword ptr [rax], rax ; call 0x221ad9b6
0x00000000001b08eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; fsub dword ptr [rdx - 0xa] ; jmp qword ptr [rsi]
0x00000000001a47eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; pop rax ; shr esi, 1 ; call rcx
0x00000000001a5b93 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x00000000001a6493 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001abb6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; sbb al, 0x22 ; add dword ptr [rax], eax ; js 0x1abb5f ; hlt ; jmp qword ptr [rcx]
0x00000000001abe6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; sbb al, 0x25 ; add dword ptr [rax], eax ; sbb bl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001acb6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; sbb al, 0x32 ; add dword ptr [rax], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001a596b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; sbb al, 0xc0 ; add byte ptr [rax], al ; clc ; jp 0x1a5985 ; jmp qword ptr [rdi]
0x00000000001af07b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; sub al, 0x57 ; add dword ptr [rax], eax ; cmp bl, al ; cmc ; jmp rax
0x00000000001b067b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; sub al, 0x6d ; add dword ptr [rax], eax ; mov byte ptr [rcx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001a587b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; sub al, 0xbf ; add byte ptr [rax], al ; mov byte ptr [rax + rsi*8], al ; jmp qword ptr [rbx]
0x00000000001a647b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; sub al, 0xcb ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001b857b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; sub al, 0xec ; add dword ptr [rax], eax ; sub byte ptr [rcx - 8], ah ; jmp qword ptr [rbx]
0x00000000001ad5d3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; test byte ptr [rcx + rax], bh ; add byte ptr [rax + 0x58], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001a43d3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; test byte ptr [rdx - 0x49e00000], ch ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a47d3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; test byte ptr [rsi - 0x2f800000], ch ; out dx, al ; jmp rbx
0x00000000001ac7e3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; add dword ptr cs:[rax], eax ; jo 0x1ac81f ; cmc ; call qword ptr [rsi]
0x00000000001a71e3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; fadd dword ptr [rax] ; add byte ptr [rax], dh ; int1 ; call qword ptr [rcx]
0x00000000001abe83 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xor al, 0x25 ; add dword ptr [rax], eax ; xor bl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001ae683 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xor al, 0x4d ; add dword ptr [rax], eax ; push rax ; lodsb al, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae983 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xor al, 0x50 ; add dword ptr [rax], eax ; mov al, 0xf5 ; call qword ptr [rsi]
0x00000000001aec83 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xor al, 0x53 ; add dword ptr [rax], eax ; nop ; mov ch, 0xf5 ; jmp qword ptr [rbx]
0x00000000001a4983 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xor al, 0xb0 ; add byte ptr [rax], al ; shr byte ptr [rcx - 6], 1 ; call qword ptr [rax]
0x00000000001a25c3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rsp + rcx*4], dh ; add al, dl ; ret 0xffed
0x000000000007f23f : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; add eax, 0x3444f9 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000011c49b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000ac04b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000000ac02b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000000ac08b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000ac03b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000ac07b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000000ac61b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x57], cl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0xac6a1 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000204eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add eax, 0x16a074 ; ret
0x00000000000204fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add eax, 0x16bf78 ; ret
0x00000000000ac66b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000ac67b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000ac65b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000008959b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000003a98d : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x0000000000163edb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000012b0bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x295f21 ; mov rax, qword ptr fs:[rax] ; ret
0x000000000007f13b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x3433b9 ; ret
0x00000000000215cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x3a4d39 ; ret
0x00000000000215bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x3a4d59 ; ret
0x00000000000ff3ea : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; and al, 0xb0 ; ret
0x00000000000de84b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000086dfb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; je 0x86e32 ; call rax
0x000000000002e01b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jo 0x2e07c ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000007685b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000022f4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000818bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x000000000008486b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0x7404
0x000000000015512b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000003946b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsp ; and al, 8 ; mov rsi, r15 ; mov rdi, r12 ; call r14
0x00000000000ca14b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000007466b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xchg eax, ebx ; movabs al, byte ptr [0xeb407a8b48000000] ; ret
0x000000000003a8aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7760577], dl ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x000000000007f16b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000100c67 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000098797 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000086798 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00000000000c05db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000586cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000062462 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf1e8
0x000000000011b1bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xor eax, eax ; ret
0x00000000001258fa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7cf6b873], dl ; loopne 0x12590d ; add eax, 0x10 ; ret
0x000000000012125b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; in al, dx ; sub byte ptr [rcx - 0x77], cl ; enter -0x72b4, 0xd ; insb byte ptr [rdi], dx ; ret
0x000000000002b80b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000aa48b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000002328b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000cddcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000172c3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000da20b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x00000000000d8b3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x0000000000090d9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x0000000000090d2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000002c5bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000bcb1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000000a11ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000004748b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x80 ; js 0x474a9 ; add byte ptr [rbp - 0xa], dh ; pop rbx ; ret
0x0000000000173a9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7e], al ; jmp 0x173aaf
0x000000000007354b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007d88b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000001ab862 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; adc al, 0x1f ; add dword ptr [rax], eax ; ror ch, 0xf4 ; jmp qword ptr [rcx]
0x00000000001ae462 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; adc al, 0x4b ; add dword ptr [rax], eax ; push rax ; stosb byte ptr [rdi], al ; cmc ; call qword ptr [rax]
0x00000000001ae562 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; adc al, 0x4c ; add dword ptr [rax], eax ; push rax ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001af062 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; adc al, 0x57 ; add dword ptr [rax], eax ; and bl, al ; cmc ; jmp qword ptr [rdi]
0x00000000001b0962 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; adc al, 0x70 ; add dword ptr [rax], eax ; push rax ; movsxd rsi, esi ; jmp qword ptr [rsi]
0x00000000001a6462 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; adc al, 0xcb ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001acb52 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; add al, 0x32 ; add dword ptr [rax], eax ; xor byte ptr [rsi], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001ae19a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; add qword ptr [rax], rax ; js 0x1ae14e ; cmc ; jmp qword ptr [rcx]
0x00000000001ab672 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; and al, 0x1d ; add dword ptr [rax], eax ; and bl, cl ; hlt ; jmp qword ptr [rsi]
0x00000000001a1372 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; and al, 0x7a ; add byte ptr [rax], al ; and byte ptr [rdx - 0x13], bh ; jmp qword ptr [rbx]
0x00000000001a2a72 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; and al, 0x91 ; add byte ptr [rax], al ; loopne 0x1a2a5f ; in eax, dx ; call qword ptr [rdx]
0x00000000001b7772 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; and al, 0xde ; add dword ptr [rax], eax ; nop ; clc ; call qword ptr [rdx]
0x00000000001abe9a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; and rax, 0xe3480001 ; hlt ; jmp qword ptr [rcx]
0x00000000001a8f4a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; cmc ; add byte ptr [rax], al ; push rbp ; jmp qword ptr [rcx]
0x00000000001b094a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; cmp byte ptr [rbx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001a644a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; retf 0 ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001ab74a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; sbb eax, 0xcce80001 ; hlt ; jmp qword ptr [rcx]
0x000000000019a98a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cmp al, 0x10 ; add byte ptr [rax], al ; js 0x19aa21 ; std ; jmp qword ptr [rdi]
0x00000000001ad58a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cmp al, 0x3c ; add dword ptr [rax], eax ; sub byte ptr [rax - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001a3f8a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cmp al, 0xa6 ; add byte ptr [rax], al ; fdivr dword ptr [rcx - 0x12] ; jmp qword ptr [rcx]
0x00000000001aea2a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; fcom qword ptr [rax + 1] ; add byte ptr [rax], bh ; mov cl, 0xf5 ; jmp qword ptr [rcx]
0x00000000001a8a2a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; fdivr st(0), st(0) ; add byte ptr [rax], al ; call 0x221a7c92
0x00000000001ae22a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rax + 1] ; add byte ptr [rax], cl ; xchg eax, esp ; cmc ; jmp qword ptr [rcx]
0x00000000001ae72a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rbp + 1] ; add byte ptr [rax], ch ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae32a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; fmul qword ptr [rcx + 1] ; add byte ptr [rax - 0x57], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001ac72a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; fsubr qword ptr [rip + 0x1c680001] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae742 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; hlt ; add qword ptr [r8], r8 ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ac642 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; hlt ; sub al, 1 ; add al, al ; sbb ebp, esi ; jmp qword ptr [rcx]
0x00000000001a6432 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, -0x36 ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a4832 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, -0x52 ; add byte ptr [rax], al ; adc dl, dl ; out dx, al ; call qword ptr [rcx]
0x00000000001a8f32 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, -0xb ; add byte ptr [rax], al ; xor byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001ab732 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, 0x1d ; add dword ptr [rax], eax ; ror ah, 1 ; hlt ; jmp qword ptr [rcx]
0x00000000001ad632 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, 0x3c ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xb], bl ; jmp qword ptr [rdx]
0x00000000001b0932 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, 0x6f ; add dword ptr [rax], eax ; and byte ptr [rbx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001abe3a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; and al, 1 ; add al, ch ; loop 0x1abe50 ; jmp qword ptr [rcx]
0x00000000001a493a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; shr rsi, cl ; jmp qword ptr [rsi]
0x00000000001acb3a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; xor dword ptr [rcx], eax ; add byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001ad5ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp al, 1 ; add byte ptr [rax + 0x58], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a12ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jns 0x1a12d8 ; add al, cl ; jns 0x1a12c9 ; jmp qword ptr [rdi]
0x00000000001a57ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov esi, 0xab880000 ; sti ; call qword ptr [rax]
0x00000000001a43ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; mov bl, 0xee ; jmp rdx
0x00000000001a48c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; je 0x1a488e ; add byte ptr [rax], al ; loopne 0x1a4931 ; cli ; call qword ptr [rax]
0x00000000001a64c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; je 0x1a64aa ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001aeec2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; je 0x1aef34 ; add dword ptr [rax], eax ; mov al, 0xb8 ; cmc ; jmp qword ptr [rcx]
0x00000000001b06c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; je 0x1b074c ; add dword ptr [rax], eax ; shl byte ptr [rcx - 0xa], 1 ; jmp qword ptr [rsi]
0x000000000019ceca : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; jl 0x19cf1c ; add byte ptr [rax], al ; out -0x17, eax ; call qword ptr [rax]
0x00000000001ac7fa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add dword ptr cs:[rax], eax ; js 0x1ac838 ; cmc ; jmp qword ptr [rcx]
0x00000000001ae6fa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add qword ptr [r8], r8 ; clc ; lodsb al, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ab802 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov ah, 0x1e ; add dword ptr [rax], eax ; xor ch, cl ; hlt ; jmp qword ptr [rcx]
0x00000000001ac402 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov ah, 0x2a ; add dword ptr [rax], eax ; jo 0x1ac438 ; cmc ; call qword ptr [rbx]
0x00000000001a8f02 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov ah, 0xf5 ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001a49b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov al, 0 ; add byte ptr [rax - 0x5d], dh ; cli ; call qword ptr [rax]
0x00000000001a64da : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov ebx, cs ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001b7a0a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov esp, 0x180001e0 ; clc ; call qword ptr [rdx]
0x00000000001a650a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov esp, 0x280000cb ; ja 0x1a651c ; call qword ptr [rdx]
0x000000000019ca0a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov esp, 0xa8000030 ; fsubp st(1) ; call qword ptr [rcx]
0x00000000001a7e0a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov esp, 0xb80000e4 ; adc dl, dh ; call qword ptr [rbx]
0x00000000001abe0a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov esp, 0xb8000124 ; loop 0x1abe20 ; jmp qword ptr [rcx]
0x00000000001aa80a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov esp, 0xd800010e ; stc ; jmp qword ptr [rdi]
0x00000000001ae60a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov esp, 0xd800014c ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001a45da : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov word ptr [rax + rax - 0x113ae800], gs ; call qword ptr [rax]
0x00000000001aa9da : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov word ptr [rax], ss ; add dword ptr [rax], eax ; sub byte ptr [rsi], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001ae5da : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov word ptr [rcx + rax], cs ; test al, 0xab ; cmc ; jmp qword ptr [rcx]
0x00000000001ae8da : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov word ptr [rdi + 1], cs ; add byte ptr [rax - 0x51], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001aa9f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc byte ptr [rcx], al ; add byte ptr [rax + 0x16], al ; hlt ; jmp qword ptr [rcx]
0x00000000001b06f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rdx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001a5bf2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x00000000001a64f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001ad55a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; or al, 0x3c ; add dword ptr [rax], eax ; clc ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001ae75a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; or al, 0x4e ; add dword ptr [rax], eax ; pop rax ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a415a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; or al, 0xa8 ; add byte ptr [rax], al ; clc ; xchg eax, edx ; out dx, al ; call qword ptr [rax]
0x000000000019f1b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rax ; add byte ptr [rax], al ; sar dh, 1 ; in al, dx ; call qword ptr [rax]
0x00000000001a5baa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; ret 0
0x00000000001a64aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; retf ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001a92aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; stc ; add byte ptr [rax], al ; js 0x1a925d ; call rbx
0x00000000001a8ea2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; cmc ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001ad5a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; cmp al, 1 ; add byte ptr [rax + 0x58], al ; cmc ; jmp qword ptr [rcx]
0x00000000001a47a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; nop ; shr dh, 1 ; call qword ptr [rax]
0x00000000001a41a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; test al, 0 ; add al, ah ; xchg eax, ebx ; out dx, al ; jmp qword ptr [rdx]
0x00000000001ae3ea : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pushfq ; add qword ptr [rax], rax ; call 0x221ad9b7
0x00000000001b08ea : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pushfq ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; fsub dword ptr [rdx - 0xa] ; jmp qword ptr [rsi]
0x00000000001a47ea : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pushfq ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; pop rax ; shr esi, 1 ; call rcx
0x00000000001a5b92 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000001a6492 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001abb6a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; sbb al, 0x22 ; add dword ptr [rax], eax ; js 0x1abb60 ; hlt ; jmp qword ptr [rcx]
0x00000000001abe6a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; sbb al, 0x25 ; add dword ptr [rax], eax ; sbb bl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001acb6a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; sbb al, 0x32 ; add dword ptr [rax], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001a596a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; sbb al, 0xc0 ; add byte ptr [rax], al ; clc ; jp 0x1a5986 ; jmp qword ptr [rdi]
0x00000000001af07a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; sub al, 0x57 ; add dword ptr [rax], eax ; cmp bl, al ; cmc ; jmp rax
0x00000000001b067a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; sub al, 0x6d ; add dword ptr [rax], eax ; mov byte ptr [rcx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001a587a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; sub al, 0xbf ; add byte ptr [rax], al ; mov byte ptr [rax + rsi*8], al ; jmp qword ptr [rbx]
0x00000000001a647a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; sub al, 0xcb ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001b857a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; sub al, 0xec ; add dword ptr [rax], eax ; sub byte ptr [rcx - 8], ah ; jmp qword ptr [rbx]
0x00000000001ad5d2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; test byte ptr [rcx + rax], bh ; add byte ptr [rax + 0x58], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001a43d2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; test byte ptr [rdx - 0x49e00000], ch ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a47d2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; test byte ptr [rsi - 0x2f800000], ch ; out dx, al ; jmp rbx
0x00000000001ac7e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; add dword ptr cs:[rax], eax ; jo 0x1ac820 ; cmc ; call qword ptr [rsi]
0x00000000001a71e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; fadd dword ptr [rax] ; add byte ptr [rax], dh ; int1 ; call qword ptr [rcx]
0x00000000001abe82 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xor al, 0x25 ; add dword ptr [rax], eax ; xor bl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001ae682 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xor al, 0x4d ; add dword ptr [rax], eax ; push rax ; lodsb al, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae982 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xor al, 0x50 ; add dword ptr [rax], eax ; mov al, 0xf5 ; call qword ptr [rsi]
0x00000000001a4982 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xor al, 0xb0 ; add byte ptr [rax], al ; shr byte ptr [rcx - 6], 1 ; call qword ptr [rax]
0x0000000000185fc9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; or dl, dh ; inc dword ptr [rax] ; or edx, esi ; jmp qword ptr [rax]
0x00000000000e1fd2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; adc dh, byte ptr [rax - 0x76b70001] ; ret 0x848b
0x00000000000ec1fd : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000034b76 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x66d02148], al ; movd mm0, rax ; ret
0x00000000001a5c39 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add ah, ch ; ret 0
0x00000000001a5bf1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x00000000001a5ba9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; ret 0
0x00000000001a5b91 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x0000000000098795 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000173a99 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7e], al ; jmp 0x173ab1
0x00000000001a5bf0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x00000000001a5ba8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; ret 0
0x00000000001a5b90 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000001a5c37 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add ah, ch ; ret 0
0x00000000001a5bef : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x00000000001a5ba7 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; ret 0
0x00000000001a5b8f : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x0000000000173a97 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7e], al ; jmp 0x173ab3
0x00000000001a5bee : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x00000000001a5ba6 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; ret 0
0x00000000001a5b8e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000001a5bed : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x00000000001a5ba5 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; ret 0
0x00000000001a5b8d : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x00000000001852b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x12], bh ; jmp qword ptr [rax]
0x00000000001852b5 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jnp 0x1852bf ; jmp qword ptr [rax]
0x00000000001852b6 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x12], bh ; jmp qword ptr [rax]
0x00000000001a5c36 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jl 0x1a5c51 ; add byte ptr [rax], al ; in al, dx ; ret 0
0x00000000001852b7 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jnp 0x1852bd ; jmp qword ptr [rax]
0x00000000001bc8a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001852b8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x12], bh ; jmp qword ptr [rax]
0x00000000001bb72f : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx + 6], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x000000000001bbf9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rdi]
0x00000000001bbf44 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cmp dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 8
0x00000000001a5c38 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jl 0x1a5c4f ; add byte ptr [rax], al ; in al, dx ; ret 0
0x00000000001852b9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jnp 0x1852bb ; jmp qword ptr [rax]
0x0000000000185fc8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; loopne 0x185fe9 ; inc dword ptr [rax] ; or edx, esi ; jmp qword ptr [rax]
0x0000000000192688 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x000000000001dab9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001ac322 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, dl ; sub dword ptr [rcx], eax ; add byte ptr [rax + 0xe], dh ; cmc ; jmp qword ptr [rax]
0x000000000019f1fa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rax + rbx*2 - 0xa80000], ch ; in al, dx ; call rsp
0x00000000001a2972 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; ror dl, 1 ; in eax, dx ; call rdi
0x00000000001b748a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rbx + rbx*8], bh ; add dword ptr [rax], eax ; fdivr dword ptr [rcx] ; clc ; call rax
0x00000000001a1452 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rbx + rdi*2], al ; add byte ptr [rax], al ; adc byte ptr [rbp - 0x13], bh ; call rsi
0x00000000001b9a52 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rcx + rax], al ; add al, byte ptr [rax] ; rol cl, 1 ; clc ; call rcx
0x00000000001a2262 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rcx + rcx*4], dl ; add byte ptr [rax], al ; nop ; mov dh, 0xed ; call qword ptr [rbx]
0x0000000000199fca : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rsi + rax], bh ; add al, ch ; test eax, ebp ; call rsp
0x000000000019ffca : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rsi], bh ; add byte ptr [rax], bh ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001852ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x12], bh ; jmp qword ptr [rax]
0x0000000000192689 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x00000000001bb731 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx + 6], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x00000000001a915a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr fs:[rax], al ; add byte ptr [rax + rdi*8], cl ; add byte ptr [rax], al ; sbb byte ptr [rdi - 0xe], ah ; call qword ptr [rax]
0x00000000001ad8f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr fs:[rax], al ; add byte ptr [rdi + rdi + 0x61f00001], ah ; cmc ; jmp qword ptr [rbx]
0x000000000001a441 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, al ; ret
0x00000000001bb6f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add eax, dword ptr [rcx] ; add byte ptr [rax], al ; ret
0x0000000000074b6e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001b35f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pushfq ; add dword ptr [rax], eax ; xor byte ptr [rcx], 0xf7 ; jmp qword ptr [rsi]
0x000000000001bbfb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rdi]
0x00000000001b6fd2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cmp al, 0 ; add byte ptr [rax], al ; test dh, dl ; add dword ptr [rax], eax ; mov al, 0x2c ; clc ; jmp rdi
0x00000000001b40e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cmp al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; push rax ; jl 0x1b40fb ; call rcx
0x00000000001bbf46 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cmp dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 8
0x00000000001a5c3a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jl 0x1a5c4d ; add byte ptr [rax], al ; in al, dx ; ret 0
0x000000000000defa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rcx]
0x00000000001852bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jnp 0x1852b9 ; jmp qword ptr [rax]
0x0000000000185fca : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; loopne 0x185fe7 ; inc dword ptr [rax] ; or edx, esi ; jmp qword ptr [rax]
0x0000000000034d6c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; loopne 0x34dc3 ; or rax, rdx ; movq xmm0, rax ; ret
0x00000000001ad66a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rax], es ; add byte ptr [rax], al ; sbb al, 0x3d ; add dword ptr [rax], eax ; sub byte ptr [rcx - 0xb], bl ; call rdx
0x0000000000034b77 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rax + 0x21], 0xd0 ; movq xmm0, rax ; ret
0x00000000000adf81 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x000000000019268a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x00000000001a1b82 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rsp ; add byte ptr [rax], al ; add byte ptr [rdx + rax*4], dh ; add byte ptr [rax], al ; nop ; xchg eax, esp ; in eax, dx ; call qword ptr [rcx]
0x0000000000192ac8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x00000000000062aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001df52 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18a6
0x000000000000fef2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d
0x000000000017c4b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000007b22 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x0000000000000548 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x0000000000003f9a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x000000000017c9a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000000a552 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x34
0x000000000000f66a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x35
0x0000000000010e6a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x42
0x000000000000807a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x45
0x000000000001053a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x49
0x0000000000005b5a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4e
0x0000000000010fd2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x51
0x00000000001bca0a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000000075fa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x00000000001bb73a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x000000000000ddda : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x00000000001bbf4e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 8
0x00000000001aa942 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; sgdt ptr [rax] ; adc byte ptr [rsi], dl ; hlt ; call qword ptr [rbx]
0x000000000017c4aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000001a908a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; cmp al, 0xf7 ; add byte ptr [rax], al ; pop rax ; pop rbp ; jmp rcx
0x00000000001a7dc2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; je 0x1a7dc3 ; add byte ptr [rax], al ; mov al, 0x10 ; jmp qword ptr [rdi]
0x000000000019f8f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rdi ; add byte ptr [rax], al ; nop ; sbb ebp, ebp ; call rbx
0x000000000019ed0a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; cld ; add byte ptr [rax], al ; add byte ptr [rax], ch ; fsub st(4), st(0) ; jmp qword ptr [rcx]
0x00000000001a70fa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; xlatb ; add byte ptr [rax], al ; cmp byte ptr [rdx - 0xf], cl ; jmp rcx
0x00000000001a11c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; mov ah, 0x25 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x13], dh ; jmp qword ptr [rcx]
0x00000000001a173a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; sub al, 0x2b ; add byte ptr [rax], al ; call 0x281a04e0
0x0000000000003f93 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x00000000000ac92e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax + rcx + 0x48], dh ; lea eax, dword ptr [rip + 0xc03c2] ; ret
0x0000000000090e7e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax + rcx + 0x48], dh ; lea eax, dword ptr [rip + 0xda832] ; ret
0x000000000001bbf3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rdi]
0x000000000001dab3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001a43b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, al ; ret
0x00000000000a9eeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000008fda1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xbd7ef] ; ret
0x000000000008fa11 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xbda4f] ; ret
0x000000000008d5a1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xbfd7f] ; ret
0x00000000001b2b1c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, cl ; xchg eax, ecx ; add dword ptr [rax], eax ; enter -0x91b, -1 ; ret
0x00000000001b3f24 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, dl ; movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; shr cl, 0xfb ; call rsi
0x00000000001ac324 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, dl ; sub dword ptr [rcx], eax ; add byte ptr [rax + 0xe], dh ; cmc ; jmp qword ptr [rax]
0x00000000001a3a0c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rax + 0x62c80000], bh ; out dx, al ; call rsi
0x000000000019f1fc : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rax + rbx*2 - 0xa80000], ch ; in al, dx ; call rsp
0x00000000001a2974 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; ror dl, 1 ; in eax, dx ; call rdi
0x00000000001b748c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rbx + rbx*8], bh ; add dword ptr [rax], eax ; fdivr dword ptr [rcx] ; clc ; call rax
0x00000000001a1454 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rbx + rdi*2], al ; add byte ptr [rax], al ; adc byte ptr [rbp - 0x13], bh ; call rsi
0x00000000001b9a54 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rcx + rax], al ; add al, byte ptr [rax] ; rol cl, 1 ; clc ; call rcx
0x00000000001a2264 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rcx + rcx*4], dl ; add byte ptr [rax], al ; nop ; mov dh, 0xed ; call qword ptr [rbx]
0x00000000001b2ad4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rcx + rdx*4 - 0x1abfffff], al ; idiv bh ; ret
0x0000000000199fcc : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rsi + rax], bh ; add al, ch ; test eax, ebp ; call rsp
0x000000000019ffcc : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rsi], bh ; add byte ptr [rax], bh ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001a9dac : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rsp + rax + 1], bl ; add byte ptr [rax + 0x36], ch ; call qword ptr [rcx]
0x000000000011765b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], dl ; ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x000000000013ed7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x47f38a2e], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000f6fab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000000a54b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x34
0x000000000000def3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rcx]
0x00000000000a9f3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x30178916], cl ; in eax, dx ; mov byte ptr [rdi + 4], ch ; ret
0x000000000008807b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x3390be05], cl ; add byte ptr [rbp - 0xcf98740], al ; ret
0x00000000000a6d7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x4568a0e], cl ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000abbdb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x463b0447], cl ; add al, 0xf ; test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x00000000000abc0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x463b0c47], cl ; or al, 0xf ; test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x0000000000170bfb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x463bf447], cl ; hlt ; jne 0x170d31 ; ret
0x0000000000170c2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x463bfc47], cl ; cld ; jne 0x170d31 ; ret
0x00000000000a60ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x00000000001682bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x000000000016b66b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x48028901], cl ; mov eax, edi ; ret
0x00000000000a84cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x48178916], cl ; lea eax, dword ptr [rdi + 4] ; ret
0x0000000000155e9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x4e8bf956], cl ; cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155c9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x4e8bfa56], cl ; cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155a9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x4e8bfb56], cl ; cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015ae5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000098528 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000010fc13 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x64], bl ; mov eax, dword ptr [r14] ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f735b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x6890447], cl ; xor eax, eax ; ret
0x0000000000078cbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x8042507], cl ; add byte ptr [rax], al ; ret
0x0000000000136aab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0xb74023e], al ; mov eax, 1 ; ret
0x00000000001852bc : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x12], bh ; jmp qword ptr [rax]
0x0000000000075edb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x3b7cb7fe], cl ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000013ea6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x47fbd7b9], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000003ab09 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x0000000000102f6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x0000000000165f7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3518911], cl ; ret
0x00000000000a090b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x447c60f], cl ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000165f5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x4518811], cl ; ret
0x00000000000a707b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x4578817], cl ; ret
0x00000000000a095b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x4789440f], cl ; add al, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x00000000000aa6cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x0000000000007c3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 2], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000008fd3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + rax], bl ; add byte ptr [rax], al ; ret
0x00000000000f736b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x000000000012652b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; rol dword ptr [rax - 0x69f0fe07], cl ; ret 0x8341
0x00000000000b1afb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000aed3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4104
0x0000000000111c3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4d30
0x0000000000147b9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000008c1ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000019268b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x000000000000e133 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000010fcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x51
0x000000000011276b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; clc ; ret
0x000000000013131b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000002de9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x000000000007c36b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x7c38c ; ret
0x000000000003b0bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000008d44b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000016b6eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000a0c2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000a0cab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov ebp, 0xea8348c0 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x00000000000a0c8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x00000000000a05eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esi, 0x74c08407 ; sub edi, dword ptr [rcx] ; ret 0x2774
0x00000000000a068b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esi, 0x89c63907 ; ret 0xb8
0x0000000000097f6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x0000000000090deb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000100d7e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000a9efb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx + 0x30178816], cl ; in eax, dx ; mov byte ptr [rdi + 1], ch ; ret
0x000000000016827b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx + 0x48028801], cl ; lea eax, dword ptr [rdx] ; ret
0x0000000000163f4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x00000000000a848b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx + 0x48178816], cl ; lea eax, dword ptr [rdi + 1] ; ret
0x00000000001bb733 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx + 6], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x00000000000a081b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0x44], ah ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000008123b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x4466
0x00000000000798e9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x0000000000036bb9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rip + 0x38a4c6] ; ret
0x0000000000163f5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x75], ah ; add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000001a915c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr fs:[rax], al ; add byte ptr [rax + rdi*8], cl ; add byte ptr [rax], al ; sbb byte ptr [rdi - 0xe], ah ; call qword ptr [rax]
0x000000000019f3bc : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr fs:[rax], al ; add byte ptr [rdi + rax + 0x5180000], ch ; in eax, dx ; call qword ptr [rcx]
0x00000000001ad8f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr fs:[rax], al ; add byte ptr [rdi + rdi + 0x61f00001], ah ; cmc ; jmp qword ptr [rbx]
0x00000000001a50bc : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr fs:[rax], al ; add byte ptr [rdi + rsi*4], ch ; add byte ptr [rax + 0x3d], cl ; out dx, eax ; jmp rsi
0x000000000001a443 : add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, al ; ret
0x000000000011b28b : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, al ; out 0x10, eax ; movzx eax, si ; or eax, edi ; bswap eax ; ret
0x00000000001258eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000017e4d3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000013ea6c : add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x000000000013ea2c : add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x00000000001bb6f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add eax, dword ptr [rcx] ; add byte ptr [rax], al ; ret
0x000000000004748c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 1 ; cmp byte ptr [rax + 1], 0 ; jne 0x474a0 ; pop rbx ; ret
0x00000000000ac00c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x00000000000c8964 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000127852 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ccaa8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000a0fad : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013d87c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000c86c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x98 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000036cb3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000fe33c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x98 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012e65c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x00000000001439a9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000114b44 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; mov eax, 7 ; pop rbx ; pop rbp ; ret
0x000000000013519c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009673f : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000074b70 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000021625 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ff9fc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000fccbc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008d80c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000350cc : add byte ptr [rax], al ; add byte ptr [rax], al ; addss xmm0, xmm0 ; ret
0x00000000001b35f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pushfq ; add dword ptr [rax], eax ; xor byte ptr [rcx], 0xf7 ; jmp qword ptr [rsi]
0x00000000001a2b5c : add byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; or al, 0x92 ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; std ; jmp rdi
0x00000000000aad34 : add byte ptr [rax], al ; add byte ptr [rax], al ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000000abcac : add byte ptr [rax], al ; add byte ptr [rax], al ; and dh, 0xf ; je 0xabcd1 ; mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xabd31 ; ret
0x00000000000abcfc : add byte ptr [rax], al ; add byte ptr [rax], al ; and dh, 0xf ; je 0xabd21 ; mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xabd31 ; ret
0x000000000000feec : add byte ptr [rax], al ; add byte ptr [rax], al ; and dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d
0x0000000000010e64 : add byte ptr [rax], al ; add byte ptr [rax], al ; and dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x42
0x00000000000798dc : add byte ptr [rax], al ; add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x0000000000090ddc : add byte ptr [rax], al ; add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000090dec : add byte ptr [rax], al ; add byte ptr [rax], al ; bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000090dfc : add byte ptr [rax], al ; add byte ptr [rax], al ; bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000097f6c : add byte ptr [rax], al ; add byte ptr [rax], al ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x0000000000090e0c : add byte ptr [rax], al ; add byte ptr [rax], al ; bsf eax, eax ; sub rdx, rax ; jbe 0x90e5f ; add rax, rdi ; ret
0x00000000000a0c2c : add byte ptr [rax], al ; add byte ptr [rax], al ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x00000000000a0c3c : add byte ptr [rax], al ; add byte ptr [rax], al ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x00000000000a0c4c : add byte ptr [rax], al ; add byte ptr [rax], al ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x000000000011b22c : add byte ptr [rax], al ; add byte ptr [rax], al ; bswap edi ; test edi, edi ; js 0x11b251 ; mov eax, edi ; and eax, 0xffffff ; ret
0x0000000000050da4 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0xad066
0x000000000017338c : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000001bbfd : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rdi]
0x000000000014663c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000017e4dc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000017d68c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000001175f8 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmova eax, edx ; add rsp, 0x28 ; ret
0x00000000000fcec7 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmova eax, edx ; ret
0x0000000000126aa7 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovae rax, rdx ; ret
0x000000000010a4a7 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovb rax, rdx ; ret
0x00000000000ff235 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00000000000aaca7 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x0000000000098d2f : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000cbb90 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovle eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000143441 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; add rsp, 8 ; ret
0x000000000011082d : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000001b6fd4 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp al, 0 ; add byte ptr [rax], al ; test dh, dl ; add dword ptr [rax], eax ; mov al, 0x2c ; clc ; jmp rdi
0x00000000001b40e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; push rax ; jl 0x1b40f9 ; call rcx
0x00000000000d24fc : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp byte ptr [rdi + 1], 0 ; jne 0xd251f ; or esi, 2 ; mov eax, esi ; ret
0x000000000014637c : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp byte ptr [rsp + 0xf], 0 ; jne 0x1463a1 ; xor eax, eax ; add rsp, 0x48 ; ret
0x00000000001bbf48 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 8
0x000000000013605c : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp dword ptr [rsi + 0x10], 0xc ; je 0x13607c ; xor eax, eax ; ret
0x0000000000136aac : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp dword ptr [rsi], 2 ; je 0x136ace ; mov eax, 1 ; ret
0x00000000001177fc : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp eax, 0xff ; jne 0x117803 ; xor eax, eax ; leave ; ret
0x000000000003ac6c : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp edx, 0xff ; cmovne rax, rbx ; pop rbx ; ret
0x00000000000e98cc : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp qword ptr [rip + 0x2da588], 0 ; je 0xe9920 ; xor eax, eax ; ret
0x000000000008b25c : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp qword ptr [rip + 0x3385e8], 0 ; je 0x8b27e ; ret
0x0000000000089c1a : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp rax, 0xff ; cmove rax, rdx ; add rsp, 8 ; ret
0x00000000000353fc : add byte ptr [rax], al ; add byte ptr [rax], al ; fadd st(0) ; ret
0x00000000001a5c3c : add byte ptr [rax], al ; add byte ptr [rax], al ; jl 0x1a5c4b ; add byte ptr [rax], al ; in al, dx ; ret 0
0x000000000000defc : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rcx]
0x000000000004dca9 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000000def4 : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xdf06 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rcx]
0x00000000001852bd : add byte ptr [rax], al ; add byte ptr [rax], al ; jnp 0x1852b7 ; jmp qword ptr [rax]
0x0000000000010fcc : add byte ptr [rax], al ; add byte ptr [rax], al ; jns 0x10fde ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x51
0x0000000000008584 : add byte ptr [rax], al ; add byte ptr [rax], al ; lea eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000016ef5c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000016ef6c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000016ef7c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000016ef8c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000016ef9c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000016eedc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000016eeec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000016eefc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000016ef0c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000016ef1c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000016ef2c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000016ef3c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000016ef4c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000008be07 : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + rax] ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000ac65c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000ac67c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000ac66c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x000000000016eecc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x00000000000204ec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x16a074] ; ret
0x00000000000204fc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x16bf78] ; ret
0x000000000008ab8c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rcx, qword ptr [rip + 0xffe8e] ; mov rdx, rcx ; jmp 0x8ab6d
0x0000000000188ac5 : add byte ptr [rax], al ; add byte ptr [rax], al ; loope 0x188ad7 ; add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000185fcc : add byte ptr [rax], al ; add byte ptr [rax], al ; loopne 0x185fe5 ; inc dword ptr [rax] ; or edx, esi ; jmp qword ptr [rax]
0x0000000000034d6e : add byte ptr [rax], al ; add byte ptr [rax], al ; loopne 0x34dc1 ; or rax, rdx ; movq xmm0, rax ; ret
0x000000000016827c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000163f4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000016828c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000163f5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000000fdd4b : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rax + 0xc], 0 ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000165f1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000d694c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x0000000000079d0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000a766c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000a606c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000a703c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00000000000abfec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov ch, dh ; and ch, 0xf ; je 0xac01f ; add rax, 2 ; ret
0x00000000000a6d5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov cx, word ptr [rsi] ; mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000a608c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000a848c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a6d3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000a9efc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x000000000004e5f6 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rbp - 0x4b8], 1 ; jmp rax
0x00000000000dadaa : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx + 0x40], 0xffffffff ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000165f5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x0000000000165f7c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x0000000000165f6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x0000000000165f4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000f736c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000a705c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x0000000000071d9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000a099c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a090c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000a095c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a707c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a708c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a706c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x000000000008a76c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rip + 0x33906e], 1 ; ret
0x000000000008682c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rip + 0x33cf6e], 0 ; ret
0x000000000013002c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rsi], 0xa ; ret
0x000000000013004c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rsi], 0xc ; ret
0x000000000013003c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rsi], 8 ; ret
0x00000000000ec1f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr fs:[0x40], 0 ; ret
0x00000000000a767c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a849c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a607c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000089adc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x00000000000ce19c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x66 ; syscall ; ret
0x00000000000ce1bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x68 ; syscall ; ret
0x00000000000ce1ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6b ; syscall ; ret
0x00000000000ce1cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6c ; syscall ; ret
0x00000000000dfc84 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dfd6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xc ; ret
0x000000000011b1ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xca ; ret
0x00000000000ce98c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x000000000007354c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001439fa : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000126674 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007d88c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000abd1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; jg 0xabd36 ; neg eax ; ret
0x000000000004a4f9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000013074c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x00000000001682bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x0000000000163f8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000134c1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000016b66c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000007ee7c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000116e2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0x116e4c ; ret
0x00000000000abc3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x14] ; cmp eax, dword ptr [rsi + 0x14] ; jne 0xabd30 ; ret
0x00000000000abc6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x1c] ; cmp eax, dword ptr [rsi + 0x1c] ; jne 0xabd30 ; ret
0x00000000000abc9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0xabd2c ; ret
0x000000000013ea3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000abcec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xabd2c ; ret
0x00000000000abc0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0xc] ; cmp eax, dword ptr [rsi + 0xc] ; jne 0xabd30 ; ret
0x00000000000abbdc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; cmp eax, dword ptr [rsi + 4] ; jne 0xabd30 ; ret
0x00000000000f735c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000fd96c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x0000000000170bfc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi - 0xc] ; cmp eax, dword ptr [rsi - 0xc] ; jne 0x170d30 ; ret
0x0000000000170c2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi - 4] ; cmp eax, dword ptr [rsi - 4] ; jne 0x170d30 ; ret
0x0000000000078cec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x0000000000078cbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x00000000000798fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x0000000000075edc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000014713c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x27f5ea] ; test eax, eax ; jne 0x147160 ; xor eax, eax ; ret
0x000000000014710c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x27f61a] ; test eax, eax ; jne 0x147130 ; xor eax, eax ; ret
0x00000000001470dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x27f64a] ; test eax, eax ; jne 0x147100 ; xor eax, eax ; ret
0x00000000001470ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x27f67a] ; test eax, eax ; jne 0x1470d0 ; xor eax, eax ; ret
0x000000000014707c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x27f6aa] ; test eax, eax ; jne 0x1470a0 ; xor eax, eax ; ret
0x000000000014704c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x27f6da] ; test eax, eax ; jne 0x147070 ; xor eax, eax ; ret
0x0000000000116cec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afa3a] ; test eax, eax ; jne 0x116d10 ; xor eax, eax ; ret
0x0000000000116cbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afa6a] ; test eax, eax ; jne 0x116ce0 ; xor eax, eax ; ret
0x0000000000116c8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afa9a] ; test eax, eax ; jne 0x116cb0 ; xor eax, eax ; ret
0x0000000000116c5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afaca] ; test eax, eax ; jne 0x116c80 ; xor eax, eax ; ret
0x0000000000116c2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afafa] ; test eax, eax ; jne 0x116c50 ; xor eax, eax ; ret
0x0000000000116bfc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afb2a] ; test eax, eax ; jne 0x116c20 ; xor eax, eax ; ret
0x0000000000116bcc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afb5a] ; test eax, eax ; jne 0x116bf0 ; xor eax, eax ; ret
0x0000000000116b9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afb8a] ; test eax, eax ; jne 0x116bc0 ; xor eax, eax ; ret
0x0000000000116b0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afc1a] ; test eax, eax ; jne 0x116b30 ; xor eax, eax ; ret
0x0000000000116adc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afc4a] ; test eax, eax ; jne 0x116b00 ; xor eax, eax ; ret
0x0000000000116aac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afc7a] ; test eax, eax ; jne 0x116ad0 ; xor eax, eax ; ret
0x0000000000116a7c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afcaa] ; test eax, eax ; jne 0x116aa0 ; xor eax, eax ; ret
0x0000000000116a4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afcda] ; test eax, eax ; jne 0x116a70 ; xor eax, eax ; ret
0x0000000000116a1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afd0a] ; test eax, eax ; jne 0x116a40 ; xor eax, eax ; ret
0x00000000001169ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afd3a] ; test eax, eax ; jne 0x116a10 ; xor eax, eax ; ret
0x00000000001169bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afd6a] ; test eax, eax ; jne 0x1169e0 ; xor eax, eax ; ret
0x000000000011698c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afd9a] ; test eax, eax ; jne 0x1169b0 ; xor eax, eax ; ret
0x000000000011695c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afdca] ; test eax, eax ; jne 0x116980 ; xor eax, eax ; ret
0x000000000011692c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afdfa] ; test eax, eax ; jne 0x116950 ; xor eax, eax ; ret
0x00000000001168fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afe2a] ; test eax, eax ; jne 0x116920 ; xor eax, eax ; ret
0x00000000001168cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afe5a] ; test eax, eax ; jne 0x1168f0 ; xor eax, eax ; ret
0x000000000011689c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afe8a] ; test eax, eax ; jne 0x1168c0 ; xor eax, eax ; ret
0x000000000011686c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afeba] ; test eax, eax ; jne 0x116890 ; xor eax, eax ; ret
0x000000000011683c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afeea] ; test eax, eax ; jne 0x116860 ; xor eax, eax ; ret
0x000000000011680c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2aff1a] ; test eax, eax ; jne 0x116830 ; xor eax, eax ; ret
0x00000000001167dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2aff4a] ; test eax, eax ; jne 0x116800 ; xor eax, eax ; ret
0x00000000001167ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2aff7a] ; test eax, eax ; jne 0x1167d0 ; xor eax, eax ; ret
0x000000000011677c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2affaa] ; test eax, eax ; jne 0x1167a0 ; xor eax, eax ; ret
0x000000000008807c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x3390be] ; test eax, eax ; js 0x8809f ; ret
0x0000000000036bcc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x38a4b2] ; ret
0x00000000000f7f1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rsi] ; mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x000000000013e8b8 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000aacb4 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x000000000007155c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edi ; ret
0x000000000010e9ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x00000000000a76ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a60ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000a6d7c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a60bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov dx, word ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000143ed1 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, 0xffffffff ; mov eax, edx ; ret
0x000000000015b50c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi + 1] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b49c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi + 2] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b42c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi + 3] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015ae5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155a9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi - 5] ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155c9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi - 6] ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155e9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi - 7] ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000a84cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000015b57c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000a9f3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000742a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000007dfa5 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rax + 8], 0 ; ret
0x0000000000115a06 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x000000000007d326 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x00000000000ba3fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbx], rsi ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000165f9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x0000000000165fbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x0000000000165fcc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x0000000000165fdc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x0000000000165fec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x0000000000165ffc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000016600c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x0000000000165fac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x0000000000165f8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000013ee10 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x20], 0 ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000100783 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 8], 0 ; ret
0x000000000013ee18 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a709c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x000000000005689c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rcx ; mov eax, 0xffffffff ; ret
0x00000000000a70bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a70dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a70ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a70fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a710c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a70cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a70ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000010affd : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rip + 0x2b6214], 0 ; pop rbp ; ret
0x000000000007f240 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rip + 0x3444f9], 0 ; ret
0x000000000013006a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000ea1c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 8], 0 ; ret
0x000000000011b1bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00000000000d0934 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov r12, qword ptr [r15 + 0x10] ; xor eax, eax ; jmp 0xd04f3
0x000000000007f0fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, -1 ; ret
0x00000000000ac02c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, 1 ; ret
0x00000000000ac03c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, 2 ; ret
0x00000000000ac04c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, 3 ; ret
0x00000000000ac05c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000000ac06c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, 5 ; ret
0x00000000000ac07c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000000ac08c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, 7 ; ret
0x0000000000107754 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x000000000003a98e : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000013d47c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbx + 8] ; lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x000000000016820c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000163edc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000013e65c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000007685c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007f15c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000007b50c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; cmp rax, qword ptr [rdi + 0x10] ; jae 0x7b531 ; movzx eax, byte ptr [rax] ; ret
0x0000000000130dbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x00000000001379ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdx] ; bswap eax ; mov dword ptr [rdi + 0x58], eax ; mov eax, 1 ; ret
0x000000000013b79c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2856d1] ; cmp dword ptr fs:[rax], 0x18 ; je 0x13b7c1 ; ret
0x000000000012b0bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x295f21] ; mov rax, qword ptr fs:[rax] ; ret
0x000000000007f13c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3433b9] ; ret
0x00000000000215cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3a4d39] ; ret
0x00000000000215bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3a4d59] ; ret
0x000000000002e01c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002cb34 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rsi + rax*8 + 0x80] ; ret
0x00000000000ff3eb : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rsp - 0x50] ; ret
0x000000000003aefc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, r8 ; mov qword ptr [rdi + 8], rdx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000100c68 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a91c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; cqo ; idiv rsi ; ret
0x0000000000071da2 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000000a60ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000000a6dbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rcx, qword ptr [rsi] ; mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000001236bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rsp + 0x28] ; call 0x1f9c3
0x0000000000021815 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rbx ; and r12, 0xfffffffffffffff0 ; mov qword ptr [r12], rbx ; call 0x8da41
0x000000000007466c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdx, qword ptr [rbx + 0xa0] ; mov rdi, qword ptr [rdx + 0x40] ; jmp 0x74650
0x0000000000116e3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdx, qword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x00000000000e8f4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdx, qword ptr [rip + 0x2d8051] ; mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x000000000015512c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015b3bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000088474 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdx, qword ptr [rsp + 0x68] ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000003946c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdx, qword ptr [rsp + 8] ; mov rsi, r15 ; mov rdi, r12 ; call r14
0x0000000000050d68 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdx, r8 ; mov qword ptr [rbp - 0x88], r8 ; call 0xad070
0x0000000000086dfc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, qword ptr [rsp + 0x48] ; call rax
0x00000000001ad66c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rax], es ; add byte ptr [rax], al ; sbb al, 0x3d ; add dword ptr [rax], eax ; sub byte ptr [rcx - 0xb], bl ; call rdx
0x0000000000165f3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x0000000000165f2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00000000000a704c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x00000000000a081c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], r9w ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a082c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], r9w ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a097c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], si ; mov byte ptr [rdi + 2], 0 ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a08ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], si ; mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x00000000000a08dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x0000000000035320 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x00000000000352fe : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000a860c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a77cc : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a616c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000aa07c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a711c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000a712c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000124a8c : add byte ptr [rax], al ; add byte ptr [rax], al ; movsxd rdi, dword ptr [rdi] ; mov eax, 3 ; syscall ; ret
0x000000000012687d : add byte ptr [rax], al ; add byte ptr [rax], al ; movsxd rdx, eax ; add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x00000000001701cc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 0x10] ; movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x000000000016b6ec : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000aacec : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x000000000008d44c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000015afec : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000015b6cc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000015af6c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000015b65c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000001258fb : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; lea eax, dword ptr [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00000000000798ea : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x0000000000036bba : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, dword ptr [rip + 0x38a4c6] ; ret
0x000000000011b21b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, edi ; ror ax, 8 ; ret
0x000000000003a8ab : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov edx, edi ; mov eax, edi ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x00000000000f732b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000000ce3d7 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x6f ; syscall ; ret
0x0000000000109147 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0xe4 ; syscall ; ret
0x000000000013e647 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x000000000012e5d8 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x00000000000102dc : add byte ptr [rax], al ; add byte ptr [rax], al ; or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000034b79 : add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rax + 0x21], 0xd0 ; movq xmm0, rax ; ret
0x0000000000034bc5 : add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rax + 0x21], 0xd0 ; movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x00000000000adf83 : add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x000000000001b03c : add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001df4c : add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18a6
0x0000000000090e7f : add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rax], al ; je 0x90e9e ; lea rax, qword ptr [rip + 0xda832] ; ret
0x00000000000ac92f : add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rax], al ; je 0xac94e ; lea rax, qword ptr [rip + 0xc03c2] ; ret
0x000000000007a69c : add byte ptr [rax], al ; add byte ptr [rax], al ; or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000000ddd4 : add byte ptr [rax], al ; add byte ptr [rax], al ; or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x000000000008197e : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; mov dword ptr [r12 + 0x10], eax ; pop r12 ; ret
0x000000000010b008 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000125ae4 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003ab0a : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000010fc14 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr fs:[r14] ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fcb2 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000098529 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002a495 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000019268c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x00000000001a1b84 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rsp ; add byte ptr [rax], al ; add byte ptr [rdx + rax*4], dh ; add byte ptr [rax], al ; nop ; xchg eax, esp ; in eax, dx ; call qword ptr [rcx]
0x0000000000192aca : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x000000000011765c : add byte ptr [rax], al ; add byte ptr [rax], al ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x00000000001a25c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; push rsp ; add byte ptr [rax], al ; add byte ptr [rsp + rcx*4], dh ; add al, dl ; ret 0xffed
0x00000000000062ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001df54 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18a6
0x000000000000fef4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d
0x000000000017d4ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x000000000017dc44 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x000000000017c4b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000007b24 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x000000000000054a : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x0000000000003f9c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x000000000017c9a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000000a554 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x34
0x000000000000f66c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x35
0x0000000000010e6c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x42
0x000000000000807c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x45
0x000000000001053c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x49
0x0000000000005b5c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4e
0x0000000000010fd4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x51
0x000000000000c88c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x00000000001bca0c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000000075fc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x00000000001bb73c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x000000000000dddc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x00000000001bbf50 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 8
0x00000000001aa944 : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; sgdt ptr [rax] ; adc byte ptr [rsi], dl ; hlt ; call qword ptr [rbx]
0x0000000000100d7f : add byte ptr [rax], al ; add byte ptr [rax], al ; setne al ; add rsp, 8 ; movzx eax, al ; ret
0x000000000017c4ac : add byte ptr [rax], al ; add byte ptr [rax], al ; shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x000000000011b28c : add byte ptr [rax], al ; add byte ptr [rax], al ; shl edi, 0x10 ; movzx eax, si ; or eax, edi ; bswap eax ; ret
0x000000000007724c : add byte ptr [rax], al ; add byte ptr [rax], al ; shr edx, 4 ; and edx, 1 ; mov eax, edx ; ret
0x000000000007733c : add byte ptr [rax], al ; add byte ptr [rax], al ; shr edx, 5 ; and edx, 1 ; mov eax, edx ; ret
0x00000000001a908c : add byte ptr [rax], al ; add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; cmp al, 0xf7 ; add byte ptr [rax], al ; pop rax ; pop rbp ; jmp rcx
0x00000000001a7dc4 : add byte ptr [rax], al ; add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; je 0x1a7dc1 ; add byte ptr [rax], al ; mov al, 0x10 ; jmp qword ptr [rdi]
0x000000000019f8f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rdi ; add byte ptr [rax], al ; nop ; sbb ebp, ebp ; call rbx
0x000000000011276c : add byte ptr [rax], al ; add byte ptr [rax], al ; sub eax, edi ; ret
0x00000000000f138c : add byte ptr [rax], al ; add byte ptr [rax], al ; sub qword ptr [rsp + 0x18], 1 ; mov rax, qword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xf13e4
0x000000000007450c : add byte ptr [rax], al ; add byte ptr [rax], al ; sub rdx, qword ptr [rax + 8] ; mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x00000000000f888a : add byte ptr [rax], al ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf88d7 ; ret
0x000000000007e11a : add byte ptr [rax], al ; add byte ptr [rax], al ; test byte ptr [rbx], 0x80 ; jne 0x7e13f ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007e119 : add byte ptr [rax], al ; add byte ptr [rax], al ; test byte ptr [rbx], 0x80 ; jne 0x7e140 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007e118 : add byte ptr [rax], al ; add byte ptr [rax], al ; test byte ptr [rbx], 0x80 ; jne 0x7e141 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000012feed : add byte ptr [rax], al ; add byte ptr [rax], al ; test eax, eax ; je 0x12ff0a ; xor eax, eax ; ret
0x0000000000089bec : add byte ptr [rax], al ; add byte ptr [rax], al ; test edi, edi ; je 0x89c0d ; mov eax, 0x16 ; ret
0x000000000013ed7c : add byte ptr [rax], al ; add byte ptr [rax], al ; test edx, edx ; jne 0x13ed9d ; mov eax, 1 ; ret
0x00000000000ac61c : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, 1 ; je 0xac6a0 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000f733c : add byte ptr [rax], al ; add byte ptr [rax], al ; test si, 0xff80 ; mov eax, 0x16 ; je 0xf7361 ; ret
0x00000000000a2dbc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor ah, ah ; mov byte ptr [rdx + 1], ah ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000000a2dfc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor ah, ah ; mov byte ptr [rdx + 4], ah ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000019ed0c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; cld ; add byte ptr [rax], al ; add byte ptr [rax], ch ; fsub st(4), st(0) ; jmp qword ptr [rcx]
0x00000000001a70c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; je 0x1a70b4 ; add byte ptr [rax], al ; nop ; int1 ; call rdx
0x00000000001a70fc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; xlatb ; add byte ptr [rax], al ; cmp byte ptr [rdx - 0xf], cl ; jmp rcx
0x00000000001a11c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; mov ah, 0x25 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x13], dh ; jmp qword ptr [rcx]
0x00000000001b5bec : add byte ptr [rax], al ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; pushfq ; ret 1
0x00000000001a173c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; sub al, 0x2b ; add byte ptr [rax], al ; call 0x281a04de
0x00000000000a9eec : add byte ptr [rax], al ; add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x0000000000034b4c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor dl, 0xf ; adc dword ptr [rdi], eax ; and rax, rdx ; movq xmm0, rax ; ret
0x00000000000c7f54 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000121234 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x000000000003b0bc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002de9c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x00000000000e0b25 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001300ac : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003aa12 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000003b02c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000078ccc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000078cdc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x000000000007c36c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; test rdx, rdx ; jne 0x7c38b ; ret
0x000000000006bc6c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; ret
0x00000000000f77ed : add byte ptr [rax], al ; add byte ptr [rax], al ; xor edx, edx ; mov rsi, r13 ; mov edi, ebx ; call 0x35811
0x00000000000ca274 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor edx, edx ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000097fac : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000003ac68 : add byte ptr [rax], al ; add byte ptr [rax], bh ; cmp edx, 0xff ; cmovne rax, rbx ; pop rbx ; ret
0x0000000000003f95 : add byte ptr [rax], al ; add byte ptr [rax], ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x000000000019ed15 : add byte ptr [rax], al ; add byte ptr [rax], ch ; fsub st(4), st(0) ; jmp qword ptr [rcx]
0x00000000000ac930 : add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax + rcx + 0x48], dh ; lea eax, dword ptr [rip + 0xc03c2] ; ret
0x0000000000090e80 : add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax + rcx + 0x48], dh ; lea eax, dword ptr [rip + 0xda832] ; ret
0x000000000001bbf5 : add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rdi]
0x000000000001dab5 : add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001a43d : add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, al ; ret
0x00000000000a9eed : add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000008fda3 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xbd7ef] ; ret
0x000000000008fa13 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xbda4f] ; ret
0x000000000008d5a3 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xbfd7f] ; ret
0x00000000000908f1 : add byte ptr [rax], al ; add byte ptr [rax], dl ; lea rax, qword ptr [rip + 0x19ab4] ; cmove rax, rdx ; ret
0x000000000019e04e : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, bh ; add byte ptr [rax], r8b ; shr rdx, 1 ; jmp rdi
0x00000000001b2b1e : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, cl ; xchg eax, ecx ; add dword ptr [rax], eax ; enter -0x91b, -1 ; ret
0x00000000001b3f26 : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, dl ; movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; shr cl, 0xfb ; call rsi
0x00000000001ac326 : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, dl ; sub dword ptr [rcx], eax ; add byte ptr [rax + 0xe], dh ; cmc ; jmp qword ptr [rax]
0x00000000001a3a0e : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rax + 0x62c80000], bh ; out dx, al ; call rsi
0x000000000019f1fe : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rax + rbx*2 - 0xa80000], ch ; in al, dx ; call rsp
0x00000000001a2976 : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; ror dl, 1 ; in eax, dx ; call rdi
0x00000000001b748e : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rbx + rbx*8], bh ; add dword ptr [rax], eax ; fdivr dword ptr [rcx] ; clc ; call rax
0x00000000001a1456 : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rbx + rdi*2], al ; add byte ptr [rax], al ; adc byte ptr [rbp - 0x13], bh ; call rsi
0x00000000001b9aa6 : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rcx + rax + 2], dl ; add byte ptr [rax - 0x3d], ah ; clc ; jmp rcx
0x00000000001b9a56 : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rcx + rax], al ; add al, byte ptr [rax] ; rol cl, 1 ; clc ; call rcx
0x00000000001a2266 : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rcx + rcx*4], dl ; add byte ptr [rax], al ; nop ; mov dh, 0xed ; call qword ptr [rbx]
0x00000000001b2ad6 : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rcx + rdx*4 - 0x1abfffff], al ; idiv bh ; ret
0x0000000000199fce : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rsi + rax], bh ; add al, ch ; test eax, ebp ; call rsp
0x000000000019ffce : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rsi], bh ; add byte ptr [rax], bh ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001a9dae : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rsp + rax + 1], bl ; add byte ptr [rax + 0x36], ch ; call qword ptr [rcx]
0x000000000002986f : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000000c381c : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000967e1 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x000000000011765d : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], dl ; ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x000000000008197f : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; mov dword ptr [rsp + 0x10], eax ; pop r12 ; ret
0x000000000005590c : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000559dc : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x000000000008a761 : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000143d6e : add byte ptr [rax], al ; add byte ptr [rbp + 0x482b78c0], al ; mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000d7f16 : add byte ptr [rax], al ; add byte ptr [rbp + 0x63], cl ; ret
0x00000000001a11c9 : add byte ptr [rax], al ; add byte ptr [rbp + 0x75000000], dh ; in eax, dx ; jmp qword ptr [rcx]
0x00000000000f7016 : add byte ptr [rax], al ; add byte ptr [rbp + 0xd], dh ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000a0699 : add byte ptr [rax], al ; add byte ptr [rbp + 0xd], dh ; nop ; add rax, 1 ; cmp byte ptr [rdi + rax], dl ; je 0xa06b1 ; ret
0x0000000000076d85 : add byte ptr [rax], al ; add byte ptr [rbp + 0xe], dh ; mov edx, dword ptr [rdi + 0xc0] ; mov eax, edx ; ret
0x00000000001abea1 : add byte ptr [rax], al ; add byte ptr [rbp + 1], cl ; add byte ptr [rax - 0x1d], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001180cd : add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x3b5a7] ; ret
0x0000000000117f4d : add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x3b747] ; ret
0x000000000011800d : add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x3e057] ; ret
0x00000000000966d4 : add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xbcfd0] ; ret
0x0000000000091a14 : add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xc1c70] ; ret
0x0000000000091364 : add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xc4d10] ; ret
0x000000000019f701 : add byte ptr [rax], al ; add byte ptr [rbp + rbx*2 + 0x14280000], ch ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001ae6d1 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*2 + 1], bh ; add al, cl ; lodsb al, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae701 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*2 - 0x5307ffff], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000056ba0 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x2c], cl ; test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000076a8f : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x00000000000769ac : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000012f637 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call qword ptr [rax]
0x00000000000487e5 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4], cl ; mov rax, qword ptr [rsi + rbx*8] ; lea r9, qword ptr [rdx] ; jmp 0x48851
0x000000000004a3f5 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4], cl ; mov rax, qword ptr [rsi + rbx*8] ; lea r9, qword ptr [rdx] ; jmp 0x4a461
0x00000000001aeee1 : add byte ptr [rax], al ; add byte ptr [rbp + rdx*2 - 0x4737ffff], cl ; cmc ; jmp qword ptr [rax]
0x000000000019eed9 : add byte ptr [rax], al ; add byte ptr [rbp + rdx*2 - 0xc100000], al ; in al, dx ; jmp qword ptr [rax]
0x00000000001a8f09 : add byte ptr [rax], al ; add byte ptr [rbp + rsi*8 + 0x55000000], dh ; jmp qword ptr [rcx]
0x00000000001a8ea9 : add byte ptr [rax], al ; add byte ptr [rbp + rsi*8], dl ; add byte ptr [rax], al ; push rbp ; jmp qword ptr [rcx]
0x00000000001a11ce : add byte ptr [rax], al ; add byte ptr [rbp - 0x13], dh ; jmp qword ptr [rcx]
0x000000000013e894 : add byte ptr [rax], al ; add byte ptr [rbp - 0x33], dh ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010b009 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3d], bl ; mov qword ptr [rip + 0x2b6207], 2 ; pop rbp ; ret
0x000000000013ed7d : add byte ptr [rax], al ; add byte ptr [rbp - 0x47f38a2e], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000125bea : add byte ptr [rax], al ; add byte ptr [rbp - 0x647af025], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; fisttp dword ptr [rax + 1] ; ret
0x00000000000aa9a1 : add byte ptr [rax], al ; add byte ptr [rbp - 0x6bf0be13], al ; ret 0xfe83
0x00000000000d3fe9 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; mov cl, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret
0x000000000006dd65 : add byte ptr [rax], al ; add byte ptr [rbp - 0x76ba7ffc], cl ; ret 0x2945
0x00000000000d3ff0 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret
0x00000000000983ef : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; sub al, 0x24 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f2e0b : add byte ptr [rax], al ; add byte ptr [rbp - 0x78], al ; je 0xf2e39 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000002a0bc : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; in al, 0xf ; test byte ptr [rip - 0x76000002], al ; ret
0x00000000000dc0d3 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7fead], cl ; ret
0x00000000000dcd45 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000001a8eae : add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x000000000000a54d : add byte ptr [rax], al ; add byte ptr [rbp], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x34
0x00000000001a7ec9 : add byte ptr [rax], al ; add byte ptr [rbp], dh ; add byte ptr [rax + 0x11], ah ; jmp qword ptr [rdi]
0x000000000000def5 : add byte ptr [rax], al ; add byte ptr [rbp], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rcx]
0x0000000000078ced : add byte ptr [rax], al ; add byte ptr [rbx + 0x2002507], cl ; add byte ptr [rax], al ; ret
0x000000000009ab82 : add byte ptr [rax], al ; add byte ptr [rbx + 0x294803e0], al ; ret 0x148
0x00000000000d63d8 : add byte ptr [rax], al ; add byte ptr [rbx + 0x294803e0], al ; ret 0x14c
0x00000000000a9f3d : add byte ptr [rax], al ; add byte ptr [rbx + 0x30178916], cl ; in eax, dx ; mov byte ptr [rdi + 4], ch ; ret
0x0000000000125a3d : add byte ptr [rax], al ; add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x000000000008807d : add byte ptr [rax], al ; add byte ptr [rbx + 0x3390be05], cl ; add byte ptr [rbp - 0xcf98740], al ; ret
0x00000000000a76dd : add byte ptr [rax], al ; add byte ptr [rbx + 0x3568b0e], cl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a850d : add byte ptr [rax], al ; add byte ptr [rbx + 0x3568b0e], cl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000bba49 : add byte ptr [rax], al ; add byte ptr [rbx + 0x415b01c7], al ; mov dword ptr [rbx + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000000299ee : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ce36e : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000006e589 : add byte ptr [rax], al ; add byte ptr [rbx + 0x42894c03], cl ; or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x0000000000071ec7 : add byte ptr [rax], al ; add byte ptr [rbx + 0x44], bl ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a84dd : add byte ptr [rax], al ; add byte ptr [rbx + 0x4568a0e], cl ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a6d7d : add byte ptr [rax], al ; add byte ptr [rbx + 0x4568a0e], cl ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000abbdd : add byte ptr [rax], al ; add byte ptr [rbx + 0x463b0447], cl ; add al, 0xf ; test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x00000000000abc0d : add byte ptr [rax], al ; add byte ptr [rbx + 0x463b0c47], cl ; or al, 0xf ; test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x0000000000170bfd : add byte ptr [rax], al ; add byte ptr [rbx + 0x463bf447], cl ; hlt ; jne 0x170d2f ; ret
0x0000000000170c2d : add byte ptr [rax], al ; add byte ptr [rbx + 0x463bfc47], cl ; cld ; jne 0x170d2f ; ret
0x00000000000a76ad : add byte ptr [rax], al ; add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a60ad : add byte ptr [rax], al ; add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x00000000001682bd : add byte ptr [rax], al ; add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x000000000016b66d : add byte ptr [rax], al ; add byte ptr [rbx + 0x48028901], cl ; mov eax, edi ; ret
0x000000000013e8b9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x48082444], cl ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a84cd : add byte ptr [rax], al ; add byte ptr [rbx + 0x48178916], cl ; lea eax, dword ptr [rdi + 4] ; ret
0x000000000006edf8 : add byte ptr [rax], al ; add byte ptr [rbx + 0x48], bl ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000070d8c : add byte ptr [rax], al ; add byte ptr [rbx + 0x48], bl ; mov eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007af7c : add byte ptr [rax], al ; add byte ptr [rbx + 0x48], bl ; sub ebp, eax ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000155e9d : add byte ptr [rax], al ; add byte ptr [rbx + 0x4e8bf956], cl ; cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155c9d : add byte ptr [rax], al ; add byte ptr [rbx + 0x4e8bfa56], cl ; cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155a9d : add byte ptr [rax], al ; add byte ptr [rbx + 0x4e8bfb56], cl ; cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016da6a : add byte ptr [rax], al ; add byte ptr [rbx + 0x4f3bfc4e], cl ; cld ; jne 0x16db27 ; xor eax, eax ; ret
0x000000000015ae5d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000029625 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000001fcb3 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000036f3f : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000029b1d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000036ca4 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000798fd : add byte ptr [rax], al ; add byte ptr [rbx + 0x5e8c107], cl ; and eax, 1 ; ret
0x000000000002bc03 : add byte ptr [rax], al ; add byte ptr [rbx + 0x63], cl ; xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x000000000010fc15 : add byte ptr [rax], al ; add byte ptr [rbx + 0x64], bl ; mov eax, dword ptr [r14] ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f735d : add byte ptr [rax], al ; add byte ptr [rbx + 0x6890447], cl ; xor eax, eax ; ret
0x000000000006f75b : add byte ptr [rax], al ; add byte ptr [rbx + 0x7401046e], al ; mov rax, rdx ; pop rbx ; ret
0x000000000005091c : add byte ptr [rax], al ; add byte ptr [rbx + 0x7501046a], al ; ret
0x0000000000078cbd : add byte ptr [rax], al ; add byte ptr [rbx + 0x8042507], cl ; add byte ptr [rax], al ; ret
0x00000000000accc6 : add byte ptr [rax], al ; add byte ptr [rbx + 0xa777fff], al ; mov eax, edi ; ret
0x0000000000107b8e : add byte ptr [rax], al ; add byte ptr [rbx + 0xb080], cl ; add byte ptr [rax - 0x77], cl ; mov edx, dword ptr [rax - 0x77000000] ; ret 0xe8c1
0x0000000000136aad : add byte ptr [rax], al ; add byte ptr [rbx + 0xb74023e], al ; mov eax, 1 ; ret
0x00000000000351fd : add byte ptr [rax], al ; add byte ptr [rbx + 0xd102444], cl ; add byte ptr [rax - 0x3f000001], al ; shr eax, 0x1f ; ret
0x000000000015b50d : add byte ptr [rax], al ; add byte ptr [rbx + 0xe8b0156], cl ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b49d : add byte ptr [rax], al ; add byte ptr [rbx + 0xe8b0256], cl ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b42d : add byte ptr [rax], al ; add byte ptr [rbx + 0xe8b0356], cl ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000003ac6d : add byte ptr [rax], al ; add byte ptr [rbx + 0xf48fffa], al ; ret
0x00000000001b7ca9 : add byte ptr [rax], al ; add byte ptr [rbx + 1], dl ; add byte ptr [rax], ah ; push rcx ; clc ; call rdi
0x00000000001ba721 : add byte ptr [rax], al ; add byte ptr [rbx + 6], dl ; add byte ptr [rax], al ; ret 2
0x000000000016db18 : add byte ptr [rax], al ; add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x00000000001a1741 : add byte ptr [rax], al ; add byte ptr [rbx + rbp], ch ; add byte ptr [rax], al ; call 0x281a04d9
0x00000000001a74e9 : add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 + 0x5f200000], dl ; int1 ; call rbx
0x00000000001b7491 : add byte ptr [rax], al ; add byte ptr [rbx + rbx*8], bh ; add dword ptr [rax], eax ; fdivr dword ptr [rcx] ; clc ; call rax
0x000000000010e3d8 : add byte ptr [rax], al ; add byte ptr [rbx + rcx + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000001ae509 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*2 - 0x54ffffff], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001ae469 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*2], dl ; add dword ptr [rax], eax ; push rax ; stosb byte ptr [rdi], al ; cmc ; call qword ptr [rax]
0x00000000000eb3cb : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x2c], cl ; ret
0x00000000000483ae : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x46], cl ; sub byte ptr [rbx + rcx*4 + 0x4e], cl ; xor byte ptr [rax - 0x75], cl ; jbe 0x4843e ; xor eax, eax ; ret
0x000000000004807e : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x47], cl ; sub byte ptr [rbx + rcx*4 + 0x4f], cl ; xor byte ptr [rax - 0x75], cl ; jg 0x48106 ; xor eax, eax ; ret
0x0000000000041a02 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 - 0x5c], cl ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rbx - 0x76b2dbf4], cl ; ret
0x0000000000047125 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 - 0x64], cl ; and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x8b4c
0x00000000001a6499 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*8], al ; add byte ptr [rax], dh ; ja 0x1a649d ; call qword ptr [rax]
0x00000000001a64b1 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*8], bl ; add byte ptr [rax], ch ; ja 0x1a64b5 ; call qword ptr [rdx]
0x00000000001a6481 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*8], ch ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001a64c9 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*8], dh ; add byte ptr [rax], dh ; ja 0x1a64cd ; call qword ptr [rax]
0x00000000001a6469 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*8], dl ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001ad501 : add byte ptr [rax], al ; add byte ptr [rbx + rdi + 0x57680001], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a1459 : add byte ptr [rax], al ; add byte ptr [rbx + rdi*2], al ; add byte ptr [rax], al ; adc byte ptr [rbp - 0x13], bh ; call rsi
0x00000000001a5479 : add byte ptr [rax], al ; add byte ptr [rbx + rdi*4], ah ; add byte ptr [rax], al ; xor bh, bl ; cld ; call qword ptr [rax]
0x00000000001aec89 : add byte ptr [rax], al ; add byte ptr [rbx + rdx*2], dh ; add dword ptr [rax], eax ; nop ; mov ch, 0xf5 ; jmp qword ptr [rbx]
0x00000000001852be : add byte ptr [rax], al ; add byte ptr [rbx - 0x12], bh ; jmp qword ptr [rax]
0x0000000000124bb2 : add byte ptr [rax], al ; add byte ptr [rbx - 0x17fe47bb], al ; ret 0xfffb
0x00000000000d81d3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x1e7efe1e], al ; add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; ret 0xf35b
0x00000000001ab679 : add byte ptr [rax], al ; add byte ptr [rbx - 0x34dfffff], ah ; hlt ; jmp qword ptr [rsi]
0x00000000001ab661 : add byte ptr [rax], al ; add byte ptr [rbx - 0x34f7ffff], cl ; hlt ; jmp qword ptr [rcx]
0x0000000000138257 : add byte ptr [rax], al ; add byte ptr [rbx - 0x37f0fe18], al ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000075edd : add byte ptr [rax], al ; add byte ptr [rbx - 0x3b7cb7fe], cl ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000aad60 : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x00000000000aad6e : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x00000000000aad67 : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x00000000000aad83 : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x00000000000aad7c : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x00000000000aad75 : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x0000000000146fd7 : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; nop dword ptr [rax] ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000001074a9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x3f7ac7c0], cl ; cmove eax, edx ; ret
0x0000000000116e2d : add byte ptr [rax], al ; add byte ptr [rbx - 0x3f7aefb9], cl ; jne 0x116e4b ; ret
0x000000000013ea6d : add byte ptr [rax], al ; add byte ptr [rbx - 0x47fbd7b9], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000134c1d : add byte ptr [rax], al ; add byte ptr [rbx - 0x47fd76ff], cl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000010bda9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x48f0f440], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010c269 : add byte ptr [rax], al ; add byte ptr [rbx - 0x48f0f540], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010bf69 : add byte ptr [rax], al ; add byte ptr [rbx - 0x48f0f640], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010bed9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x48f0f740], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010c129 : add byte ptr [rax], al ; add byte ptr [rbx - 0x48f0f840], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010c1c9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x48f0f940], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010c2f9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x48f0fa40], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010c429 : add byte ptr [rax], al ; add byte ptr [rbx - 0x48f0fb40], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010bff9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x48f0fc40], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010be39 : add byte ptr [rax], al ; add byte ptr [rbx - 0x48f0fd40], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010c089 : add byte ptr [rax], al ; add byte ptr [rbx - 0x48f0fe40], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000000d69cd : add byte ptr [rax], al ; add byte ptr [rbx - 0x6c8bfb1e], al ; mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x000000000003ab0b : add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000001682cd : add byte ptr [rax], al ; add byte ptr [rbx - 0x75fd76ff], cl ; add al, 0x88 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x0000000000163f8d : add byte ptr [rax], al ; add byte ptr [rbx - 0x75fd76ff], cl ; add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x0000000000138234 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7637f100], cl ; ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x0000000000041a0a : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b2dbf4], cl ; ret
0x0000000000047ee6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000000ddc7e : add byte ptr [rax], al ; add byte ptr [rbx - 0x7af7db8c], cl ; div byte ptr [rdi - 0xa] ; ret
0x00000000000dd249 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fb01], al ; ret
0x00000000000eb0e5 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x4108
0x0000000000102f6d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x00000000001177fd : add byte ptr [rax], al ; add byte ptr [rbx - 0xd8a0008], al ; xor eax, eax ; leave ; ret
0x000000000002a496 : add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x00000000001a3c61 : add byte ptr [rax], al ; add byte ptr [rbx], cl ; add byte ptr [rax], al ; pop rax ; outsd dx, dword ptr [rsi] ; out dx, al ; jmp qword ptr [rdi]
0x00000000000d6bf1 : add byte ptr [rax], al ; add byte ptr [rcx + 0x1b828], cl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005b2f2 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; ret 0x8949
0x0000000000165f7d : add byte ptr [rax], al ; add byte ptr [rcx + 0x3518911], cl ; ret
0x00000000001321b2 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x00000000000996a0 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bc8], cl ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000146f0f : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca1e8 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000098830 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f8acc : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x0000000000102aff : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x0000000000034392 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007805f : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000715f0 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000011883d : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x00000000000a090d : add byte ptr [rax], al ; add byte ptr [rcx + 0x447c60f], cl ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000165f5d : add byte ptr [rax], al ; add byte ptr [rcx + 0x4518811], cl ; ret
0x00000000000a707d : add byte ptr [rax], al ; add byte ptr [rcx + 0x4578817], cl ; ret
0x00000000000a095d : add byte ptr [rax], al ; add byte ptr [rcx + 0x4789440f], cl ; add al, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x00000000000741aa : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x00000000000587cd : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret
0x00000000000d5e90 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8b48
0x00000000001a0db9 : add byte ptr [rax], al ; add byte ptr [rcx + 0x69f00000], ah ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000135342 : add byte ptr [rax], al ; add byte ptr [rcx + 0x9883], cl ; add bl, ch ; ret 0x8b48
0x00000000001a7306 : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], al ; adc byte ptr [rbx - 0x1ff1b8fe], al ; add dword ptr [rdx], eax ; ret
0x00000000001a0bde : add byte ptr [rax], al ; add byte ptr [rcx + 0xe], ch ; adc byte ptr [rbx + 0xe610202], al ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000000aacb5 : add byte ptr [rax], al ; add byte ptr [rcx + 0xee8c1c8], cl ; and eax, 0x3fc00 ; pop rbx ; ret
0x00000000000575b6 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x47 ; or al, 0x83 ; ret
0x0000000000036617 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x394c
0x00000000000aa9c0 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000136ee0 : add byte ptr [rax], al ; add byte ptr [rcx + 0xfffb], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret
0x00000000000aa6cd : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x0000000000007c3d : add byte ptr [rax], al ; add byte ptr [rcx + 2], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001b9aa9 : add byte ptr [rax], al ; add byte ptr [rcx + rax + 2], dl ; add byte ptr [rax - 0x3d], ah ; clc ; jmp rcx
0x00000000001b9b11 : add byte ptr [rax], al ; add byte ptr [rcx + rax - 0x39b7fffe], bh ; clc ; call qword ptr [rdi]
0x00000000000c5507 : add byte ptr [rax], al ; add byte ptr [rcx + rax - 0xb], cl ; call 0x91818
0x00000000001b5ab9 : add byte ptr [rax], al ; add byte ptr [rcx + rax*8 + 1], ah ; add al, al ; ret
0x00000000001b9a59 : add byte ptr [rax], al ; add byte ptr [rcx + rax], al ; add al, byte ptr [rax] ; rol cl, 1 ; clc ; call rcx
0x0000000000008fd5 : add byte ptr [rax], al ; add byte ptr [rcx + rax], bl ; add byte ptr [rax], al ; ret
0x00000000001a3309 : add byte ptr [rax], al ; add byte ptr [rcx + rbx*4 + 0x35300000], dh ; out dx, al ; jmp rbx
0x00000000001a72e1 : add byte ptr [rax], al ; add byte ptr [rcx + rbx*8 + 0x56180000], cl ; int1 ; jmp qword ptr [rcx]
0x000000000010fbc2 : add byte ptr [rax], al ; add byte ptr [rcx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ca38f : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x00000000000ca459 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x00000000000a4ff8 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x4a], al ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000007b4ab : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x6b], cl ; sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x000000000007a83a : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x7b], cl ; sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x000000000003f6d2 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0xc], al ; and al, 0xe8 ; ret 0x97
0x000000000002f5fa : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000104c3e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x000000000012f0ba : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000008b192 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; mov rdx, rbp ; mov rsi, r12 ; call rax
0x00000000000c9129 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x13], cl ; mov rdi, rbx ; call r12
0x00000000001369b2 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x18], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000104d72 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000089f22 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x0000000000138b5a : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000257c4 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x28], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000125101 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x2e], cl ; mov word ptr [r14 + 0x38], r9w ; mov qword ptr [rbp - 0x78], r10 ; call 0x913c1
0x0000000000050d69 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x3e], cl ; mov qword ptr [rbp - 0x88], r8 ; call 0xad06f
0x00000000000724ab : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x00000000000808f9 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003aefd : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; mov qword ptr [rdi + 8], rdx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000e787f : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x5c], al ; and al, 0xa4 ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x0000000000089d21 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x000000000007bd44 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0x97fc8
0x0000000000104ba7 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x000000000012eef2 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000013a96b : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x0000000000024f3b : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 8], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c3937 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 8], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000104bb6 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x00000000001a2269 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4], dl ; add byte ptr [rax], al ; nop ; mov dh, 0xed ; call qword ptr [rbx]
0x00000000001a12c1 : add byte ptr [rax], al ; add byte ptr [rcx + rdi*2], ch ; add al, cl ; jns 0x1a12c2 ; jmp qword ptr [rdi]
0x00000000001b92e1 : add byte ptr [rax], al ; add byte ptr [rcx + rdi*8 - 0x5a07ffff], cl ; clc ; call qword ptr [rbx]
0x00000000001a92b1 : add byte ptr [rax], al ; add byte ptr [rcx + rdi*8], bl ; add byte ptr [rax - 0x6e], bh ; call rbx
0x00000000001b2ad9 : add byte ptr [rax], al ; add byte ptr [rcx + rdx*4 - 0x1abfffff], al ; idiv bh ; ret
0x00000000001a2a79 : add byte ptr [rax], al ; add byte ptr [rcx + rdx*4], ah ; add byte ptr [rax], al ; loopne 0x1a2a58 ; in eax, dx ; call qword ptr [rdx]
0x00000000001acb11 : add byte ptr [rax], al ; add byte ptr [rcx + rsi + 0x25380001], bh ; cmc ; jmp rdx
0x00000000001acaa9 : add byte ptr [rax], al ; add byte ptr [rcx + rsi + 1], dl ; add byte ptr [rax + 0x23], al ; cmc ; jmp qword ptr [rcx]
0x00000000001b8b01 : add byte ptr [rax], al ; add byte ptr [rcx + rsi*8 - 0x6067ffff], ch ; sti ; jmp qword ptr [rdx]
0x00000000001a8ac1 : add byte ptr [rax], al ; add byte ptr [rcx + rsi*8], ch ; add byte ptr [rax], bl ; call qword ptr [rdx]
0x00000000001aca79 : add byte ptr [rax], al ; add byte ptr [rcx + rsi], ah ; add dword ptr [rax], eax ; loopne 0x1acaae ; cmc ; jmp qword ptr [rcx]
0x000000000019cab1 : add byte ptr [rax], al ; add byte ptr [rcx + rsi], bl ; add byte ptr [rax], bl ; fucompi st(1) ; jmp qword ptr [rsi]
0x00000000001abb11 : add byte ptr [rax], al ; add byte ptr [rcx - 0x2b17ffff], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001abaf9 : add byte ptr [rax], al ; add byte ptr [rcx - 0x2b2fffff], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001abae1 : add byte ptr [rax], al ; add byte ptr [rcx - 0x2b47ffff], cl ; hlt ; jmp qword ptr [rcx]
0x000000000013fe70 : add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret
0x00000000000f736d : add byte ptr [rax], al ; add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x000000000004ee08 : add byte ptr [rax], al ; add byte ptr [rcx - 0x48], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x000000000002d162 : add byte ptr [rax], al ; add byte ptr [rcx - 0x73], al ; pop rcx ; dec dword ptr [rax + 0x63] ; ret
0x000000000004626a : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x0000000000145a14 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; sub byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x00000000000dd447 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc141
0x000000000012652d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; rol dword ptr [rax - 0x69f0fe07], cl ; ret 0x8341
0x000000000004d10b : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000d7af8 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x34d
0x00000000000b798a : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8948
0x00000000000e0e26 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b49
0x000000000002b8fd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x0000000000075139 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; call qword ptr [rax]
0x0000000000054143 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000009684f : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x00000000000aed3d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4104
0x00000000000e8d66 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x00000000000d62e5 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x0000000000054302 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c05
0x0000000000111c3d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4d30
0x0000000000147b9d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000008c1ad : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000003b96c : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; vpsubsw xmm9, xmm15, xmmword ptr [rbp - 0x8000003] ; ret 0xffef
0x0000000000123e77 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000085f68 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000019268d : add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x00000000000b2fc0 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; fisttp dword ptr [rcx - 0x39] ; ret 0xffff
0x0000000000090ec0 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x0000000000090ee6 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x00000000001ae689 : add byte ptr [rax], al ; add byte ptr [rcx*2 - 0x53afffff], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001ae671 : add byte ptr [rax], al ; add byte ptr [rcx*2 - 0x53c7ffff], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001ae659 : add byte ptr [rax], al ; add byte ptr [rcx*2 - 0x53dfffff], al ; cmc ; jmp qword ptr [rcx]
0x000000000000e135 : add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000180dad : add byte ptr [rax], al ; add byte ptr [rcx], al ; lock sbb dword ptr [rcx], ebp ; jb 0x180df2 ; pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000013ea2d : add byte ptr [rax], al ; add byte ptr [rcx], al ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x0000000000046a8c : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x8b44
0x000000000004712d : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x8b4c
0x00000000000d6ab5 : add byte ptr [rax], al ; add byte ptr [rcx], al ; setg dl ; jmp 0xd6a53
0x0000000000010fcd : add byte ptr [rax], al ; add byte ptr [rcx], bh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x51
0x00000000000ba1f5 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x00000000000dc246 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000000e7924 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x000000000011276d : add byte ptr [rax], al ; add byte ptr [rcx], ch ; clc ; ret
0x000000000008fd04 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x00000000000c2dcd : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x2941
0x00000000000c6d34 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8944
0x00000000000c4c7d : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000c2d90 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xbe0f
0x00000000000fe376 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xc085
0x000000000014d56b : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xca39
0x00000000000c48cc : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x00000000000c2b5e : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd629
0x00000000000b0b3c : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ror dword ptr [rax - 0x2d], 1 ; out 0x89, al ; ror dword ptr [rax - 0x77], 1 ; ret 0xd348
0x00000000000e7887 : add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x00000000000371d6 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; imul al ; push rax ; add byte ptr [rax], r8b ; add rsp, 8 ; ret
0x0000000000049144 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; imul al ; ret 0x486
0x0000000000077f64 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; imul cl ; ret 0xff92
0x000000000013580e : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000089e10 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000bb982 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000003a4ea : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000ca275 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000128e15 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rol bl, 0xf3 ; ret
0x00000000000d808a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rol byte ptr [rbx + 0x5c740afb], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002de9d : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x000000000012e712 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x75], 0x74 ; and al, 0x10 ; mov rdi, rbp ; call r14
0x000000000007c36d : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x7c38a ; ret
0x00000000001039f6 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0x3e ; add byte ptr [rdi + rax - 0xd], dh ; ret
0x00000000000bccfd : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003b0bd : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000003a309 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000879f8 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000f77ee : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 0x12], cl ; mov edi, ebx ; call 0x35810
0x000000000012592a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rcx - 0x76b7f3a9], 0x3e ; ret
0x00000000001725a2 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; sal al, 0x48 ; cmpxchg dword ptr [rip + 0x2512b0], edx ; je 0x1725c3 ; ret
0x0000000000029a39 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; sal byte ptr [rcx], cl ; test byte ptr [rax - 0x73], 0x3d ; jmp 0xffffffff8902b09f
0x00000000001109fa : add byte ptr [rax], al ; add byte ptr [rcx], dh ; test byte ptr [rax - 0x75], 0x54 ; and al, 0x10 ; mov edi, 0x2000004 ; call rax
0x000000000005371a : add byte ptr [rax], al ; add byte ptr [rdi + 0x100], bh ; mov qword ptr [rsp + 8], rdx ; call 0x1f98f
0x00000000001ad671 : add byte ptr [rax], al ; add byte ptr [rdi + 0x59280001], bl ; cmc ; call rdx
0x0000000000158ca8 : add byte ptr [rax], al ; add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x00000000001a40e9 : add byte ptr [rax], al ; add byte ptr [rdi + 0x7ca00000], dl ; out dx, al ; jmp qword ptr [rdx]
0x00000000000f76b3 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x00000000000abd22 : add byte ptr [rax], al ; add byte ptr [rdi + 2], bh ; neg eax ; ret
0x00000000001ba5d9 : add byte ptr [rax], al ; add byte ptr [rdi + 4], bl ; add byte ptr [rax], al ; mov dh, 2 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000170d22 : add byte ptr [rax], al ; add byte ptr [rdi + 9], bh ; neg eax ; ret
0x000000000008bda5 : add byte ptr [rax], al ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xe2edf] ; ret
0x000000000019f3c1 : add byte ptr [rax], al ; add byte ptr [rdi + rax + 0x5180000], ch ; in eax, dx ; call qword ptr [rcx]
0x00000000000ec1f5 : add byte ptr [rax], al ; add byte ptr [rdi + rax*8 + 4], ah ; and eax, 0x40 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001ac8f1 : add byte ptr [rax], al ; add byte ptr [rdi + rbp + 0x20b80001], bl ; cmc ; jmp qword ptr [rdx]
0x00000000001a48f9 : add byte ptr [rax], al ; add byte ptr [rdi + rbp*4 - 0x72400000], ah ; cli ; call qword ptr [rax]
0x00000000001a48c9 : add byte ptr [rax], al ; add byte ptr [rdi + rbp*4], dh ; add al, ah ; cli ; call qword ptr [rax]
0x00000000001a8861 : add byte ptr [rax], al ; add byte ptr [rdi + rbp*8], cl ; add byte ptr [rax], al ; sbb byte ptr [rcx], bh ; call rsi
0x000000000019f8f9 : add byte ptr [rax], al ; add byte ptr [rdi + rbx*2 + 0x1b900000], ah ; in eax, dx ; call rbx
0x00000000001af881 : add byte ptr [rax], al ; add byte ptr [rdi + rbx*2], ch ; add dword ptr [rax], eax ; cmp bh, ah ; cmc ; jmp rsp
0x00000000001ab869 : add byte ptr [rax], al ; add byte ptr [rdi + rbx], dl ; add dword ptr [rax], eax ; ror ch, 0xf4 ; jmp qword ptr [rcx]
0x00000000001ae8b1 : add byte ptr [rax], al ; add byte ptr [rdi + rcx*2 + 1], bl ; add byte ptr [rax], bh ; scasd eax, dword ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae8f9 : add byte ptr [rax], al ; add byte ptr [rdi + rcx*2 - 0x507fffff], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001ae8e1 : add byte ptr [rax], al ; add byte ptr [rdi + rcx*2 - 0x5097ffff], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a28f1 : add byte ptr [rax], al ; add byte ptr [rdi + rcx*4 - 0x36c80000], bl ; in eax, dx ; jmp qword ptr [rax]
0x00000000001ad8f9 : add byte ptr [rax], al ; add byte ptr [rdi + rdi + 0x61f00001], ah ; cmc ; jmp qword ptr [rbx]
0x00000000001a5881 : add byte ptr [rax], al ; add byte ptr [rdi + rdi*4], ch ; add byte ptr [rax], al ; mov byte ptr [rax + rsi*8], al ; jmp qword ptr [rbx]
0x00000000001af081 : add byte ptr [rax], al ; add byte ptr [rdi + rdx*2], ch ; add dword ptr [rax], eax ; cmp bl, al ; cmc ; jmp rax
0x00000000001af069 : add byte ptr [rax], al ; add byte ptr [rdi + rdx*2], dl ; add dword ptr [rax], eax ; and bl, al ; cmc ; jmp qword ptr [rdi]
0x00000000001a7101 : add byte ptr [rax], al ; add byte ptr [rdi + rdx*8 + 0x4a380000], ch ; int1 ; jmp rcx
0x00000000001ad101 : add byte ptr [rax], al ; add byte ptr [rdi + rsi + 0x3c980001], ch ; cmc ; call qword ptr [rdi]
0x00000000001a50c1 : add byte ptr [rax], al ; add byte ptr [rdi + rsi*4], ch ; add byte ptr [rax + 0x3d], cl ; out dx, eax ; jmp rsi
0x00000000001a9091 : add byte ptr [rax], al ; add byte ptr [rdi + rsi*8], bh ; add byte ptr [rax], al ; pop rax ; pop rbp ; jmp rcx
0x000000000019d689 : add byte ptr [rax], al ; add byte ptr [rdi - 0x6c000000], dh ; cli ; jmp qword ptr [rcx]
0x00000000000350be : add byte ptr [rax], al ; add byte ptr [rdi], bh ; movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x00000000001bb311 : add byte ptr [rax], al ; add byte ptr [rdi], bh ; or byte ptr [rax], al ; add byte ptr [rdx + 4], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000124330 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x1024448b ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003577a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x48c08944 ; add esp, 0x90 ; ret
0x00000000000f7f3a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x66c3d8f7 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000116d37 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x787d089 ; test eax, eax ; jne 0x116d44 ; pop rdx ; pop r10 ; ret
0x000000000015a624 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000013ed1e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; enter -0x3f77, 0x48 ; mov dword ptr [rbx], eax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x0000000000134c53 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; enter -0x3f77, 0x48 ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000013ecde : add byte ptr [rax], al ; add byte ptr [rdi], cl ; enter 0x389, 0x48 ; add esp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x0000000000138297 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; enter 0x4289, 0x10 ; mov eax, 1 ; ret
0x0000000000138177 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; enter 0x4289, 0xc ; mov eax, 1 ; ret
0x00000000000aac35 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000015b65d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000015b6cd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000012b525 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000003cf01 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x48 ; or byte ptr [rbp - 0x57f2faf], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003cf41 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x48 ; or cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003cf21 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x48 ; or dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000d27dd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4b ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000006dc5d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x0000000000040146 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x70 ; or byte ptr [rbp - 0x57f2faa], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040186 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x70 ; or cl, byte ptr [rbp - 0x57f2faa] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040166 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x70 ; or dword ptr [rbp - 0x57f2faa], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000ace22 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000aaced : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x00000000000aac9d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xc2 ; and dh, 0xf0 ; mov edx, 0 ; cmove rax, rdx ; pop rbx ; ret
0x000000000008d44d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000016b6ed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000a0c3d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000a0c4d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x00000000000a0c2d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000a0cad : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov ebp, 0xea8348c0 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x00000000000a0c8d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x00000000000a05ed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esi, 0x74c08407 ; sub edi, dword ptr [rcx] ; ret 0x2774
0x00000000000a068d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esi, 0x89c63907 ; ret 0xb8
0x0000000000097f6d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x0000000000090dfd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000090ded : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000090e0d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xc22948c0 ; jbe 0x90e5e ; add rax, rdi ; ret
0x0000000000090ddd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000000b5985 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov gs, word ptr [rbx - 0x7cfffff8] ; ret
0x00000000000ac23f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; sal bh, 0xd8 ; cmp ecx, r8d ; cmovg eax, edx ; ret
0x00000000000c5a94 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x00000000000c3c41 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x144
0x000000000013fd1f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3145
0x00000000000bca95 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3bba
0x000000000002a60e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4389
0x0000000000084f73 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x489
0x00000000000eef0f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x66e9
0x00000000000e2c04 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x833b
0x00000000001175f9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8348
0x00000000000459ac : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8539
0x00000000000fcec8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x90c3
0x00000000000b671c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc3f3
0x00000000000ed121 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xd5e9
0x00000000000d81dc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xf35b
0x0000000000105220 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test bh, dl ; add eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x0000000000105187 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test byte ptr [rax + 5], dh ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000001051a7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test byte ptr [rax + 6], dh ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000aed24 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test byte ptr [rbx + 0x45000003], ah ; test ebp, ebp ; mov r10, rbp ; setne dl ; jmp 0xaed58
0x0000000000104e4c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test byte ptr [rbx + 0xa], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000001052bc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test byte ptr [rbx + 3], bl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000000b1713 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test byte ptr [rbx], ch ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x7b], al ; in eax, dx ; mov r10, rbp ; setne dl ; jmp 0xb1748
0x0000000000104bce : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test byte ptr [rcx], cl ; or eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x0000000000104ed8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test byte ptr [rdi + 7], bh ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000104ef8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test byte ptr [rdi + 9], bl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000105425 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test byte ptr [rdx + 3], dh ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104b55 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test byte ptr [rdx], ah ; or eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x00000000001050fb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test byte ptr [rsi + rax], bh ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000105019 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test byte ptr [rsi], bh ; add eax, 0xf6310000 ; mov rdi, r12 ; call rbx
0x0000000000104cf3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test byte ptr [rsp + rcx], al ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000e7875 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x0000000000100d80 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000136ee6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret
0x000000000010b3a4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; cmp qword ptr [rcx + 0x10], rsi ; cmovb eax, edx ; ret
0x000000000014d4b5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xf40
0x0000000000062223 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000046f7c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b44
0x000000000003e6fb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x00000000000a9efd : add byte ptr [rax], al ; add byte ptr [rdx + 0x30178816], cl ; in eax, dx ; mov byte ptr [rdi + 1], ch ; ret
0x000000000016827d : add byte ptr [rax], al ; add byte ptr [rdx + 0x48028801], cl ; lea eax, dword ptr [rdx] ; ret
0x0000000000163f4d : add byte ptr [rax], al ; add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x00000000000a848d : add byte ptr [rax], al ; add byte ptr [rdx + 0x48178816], cl ; lea eax, dword ptr [rdi + 1] ; ret
0x0000000000103440 : add byte ptr [rax], al ; add byte ptr [rdx + 0x48], bl ; mov eax, dword ptr [rip + 0x2bf345] ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116d5a : add byte ptr [rax], al ; add byte ptr [rdx + 1], bh ; mov eax, 0xca ; syscall ; pop rdx ; pop rsi ; ret
0x00000000001bb735 : add byte ptr [rax], al ; add byte ptr [rdx + 6], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x00000000001a1b89 : add byte ptr [rax], al ; add byte ptr [rdx + rax*4], dh ; add byte ptr [rax], al ; nop ; xchg eax, esp ; in eax, dx ; call qword ptr [rcx]
0x00000000001a5bf9 : add byte ptr [rax], al ; add byte ptr [rdx + rax*8 - 0x70f00000], ah ; cld ; call qword ptr [rax]
0x00000000001ac409 : add byte ptr [rax], al ; add byte ptr [rdx + rbp + 0x15700001], dh ; cmc ; call qword ptr [rbx]
0x00000000001a43d9 : add byte ptr [rax], al ; add byte ptr [rdx + rbp*4 - 0x49e00000], al ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a43c1 : add byte ptr [rax], al ; add byte ptr [rdx + rbp*4], ch ; add byte ptr [rax - 0x4d], cl ; out dx, al ; jmp rdx
0x00000000001a8359 : add byte ptr [rax], al ; add byte ptr [rdx + rbp*8], al ; add byte ptr [rax], al ; adc byte ptr [rcx], ah ; call rsi
0x00000000001ab401 : add byte ptr [rax], al ; add byte ptr [rdx + rbx - 0x4077ffff], ch ; hlt ; call qword ptr [rax]
0x00000000001ab3e1 : add byte ptr [rax], al ; add byte ptr [rdx + rbx - 0x4897ffff], cl ; stc ; call qword ptr [rax]
0x000000000019f6a9 : add byte ptr [rax], al ; add byte ptr [rdx + rcx + 0x12700000], dl ; in eax, dx ; call qword ptr [rax]
0x00000000001ae409 : add byte ptr [rax], al ; add byte ptr [rdx + rcx*2 - 0x55ffffff], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001ae3f1 : add byte ptr [rax], al ; add byte ptr [rdx + rcx*2 - 0x5617ffff], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a1379 : add byte ptr [rax], al ; add byte ptr [rdx + rdi*2], ah ; add byte ptr [rax], al ; and byte ptr [rdx - 0x13], bh ; jmp qword ptr [rbx]
0x00000000001a13d1 : add byte ptr [rax], al ; add byte ptr [rdx + rdi*2], bh ; add al, bh ; jns 0x1a13d2 ; call rcx
0x00000000001aeba9 : add byte ptr [rax], al ; add byte ptr [rdx + rdx*2 + 1], dl ; add al, dl ; mov bl, 0xf5 ; jmp qword ptr [rcx]
0x000000000019eb99 : add byte ptr [rax], al ; add byte ptr [rdx + rdx*2], al ; add byte ptr [rax - 0x29], ah ; in al, dx ; jmp qword ptr [rcx]
0x00000000001a2b61 : add byte ptr [rax], al ; add byte ptr [rdx + rdx*4], cl ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; std ; jmp rdi
0x00000000001b4b81 : add byte ptr [rax], al ; add byte ptr [rdx + rsi*4], ch ; add dword ptr [rax], eax ; call 0x241b4329
0x00000000001b8bd1 : add byte ptr [rax], al ; add byte ptr [rdx + rsi*8 + 1], bh ; add al, bh ; sahf ; sti ; jmp qword ptr [rdx]
0x00000000001acb59 : add byte ptr [rax], al ; add byte ptr [rdx + rsi], al ; add dword ptr [rax], eax ; xor byte ptr [rsi], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001acb71 : add byte ptr [rax], al ; add byte ptr [rdx + rsi], bl ; add dword ptr [rax], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001a3c01 : add byte ptr [rax], al ; add byte ptr [rdx - 0x16880000], ch ; cld ; call qword ptr [rdx]
0x0000000000091a3d : add byte ptr [rax], al ; add byte ptr [rdx - 1], bh ; bsf eax, edi ; cmove eax, edx ; add eax, 1 ; ret
0x0000000000143ed2 : add byte ptr [rax], al ; add byte ptr [rdx - 1], bh ; mov eax, edx ; ret
0x00000000001aee81 : add byte ptr [rax], al ; add byte ptr [rdx*2 - 0x4797ffff], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001180c9 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x3b5a7] ; ret
0x0000000000117f49 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x3b747] ; ret
0x0000000000118009 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x3e057] ; ret
0x00000000000966d0 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xbcfd0] ; ret
0x0000000000091a10 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xc1c70] ; ret
0x0000000000091360 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xc4d10] ; ret
0x0000000000117efc : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x117f68 ; lea rax, qword ptr [rip + 0x38855] ; ret
0x0000000000117f23 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x117f68 ; lea rax, qword ptr [rip - 0x86af2] ; ret
0x0000000000117fbc : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x118028 ; lea rax, qword ptr [rip + 0x38795] ; ret
0x0000000000117fe3 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x118028 ; lea rax, qword ptr [rip - 0x86bb2] ; ret
0x000000000011807c : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x1180e8 ; lea rax, qword ptr [rip + 0x386b5] ; ret
0x00000000001180a3 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x1180e8 ; lea rax, qword ptr [rip - 0x86c92] ; ret
0x000000000008bbb5 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x8bbd3 ; lea rax, qword ptr [rip + 0x157ac] ; ret
0x000000000008d495 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x8d4b3 ; lea rax, qword ptr [rip + 0xd540c] ; ret
0x000000000008de15 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x8de33 ; lea rax, qword ptr [rip + 0x1516c] ; ret
0x000000000008f6f5 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x8f713 ; lea rax, qword ptr [rip + 0xd495c] ; ret
0x000000000009133a : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x9137f ; lea rax, qword ptr [rip + 0x107] ; ret
0x0000000000091313 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x9137f ; lea rax, qword ptr [rip + 0xbf44e] ; ret
0x00000000000919c3 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x91a2f ; lea rax, qword ptr [rip + 0xbed7e] ; ret
0x00000000000919ea : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x91a2f ; lea rax, qword ptr [rip - 0x5c9] ; ret
0x0000000000091a95 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x91ab3 ; lea rax, qword ptr [rip + 0xd513c] ; ret
0x0000000000091bb5 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x91bd3 ; lea rax, qword ptr [rip + 0xd682c] ; ret
0x0000000000096683 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x966ef ; lea rax, qword ptr [rip + 0xba0de] ; ret
0x00000000000966aa : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x966ef ; lea rax, qword ptr [rip - 0x5269] ; ret
0x0000000000117ed5 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x117f68 ; lea rax, qword ptr [rip + 0x5665c] ; ret
0x0000000000117f95 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x118028 ; lea rax, qword ptr [rip + 0x5659c] ; ret
0x0000000000118055 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x1180e8 ; lea rax, qword ptr [rip + 0x564bc] ; ret
0x0000000000118151 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x11816f ; lea rax, qword ptr [rip + 0x56960] ; ret
0x000000000008c005 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x8c023 ; lea rax, qword ptr [rip + 0xc] ; ret
0x000000000008de61 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x8de7f ; lea rax, qword ptr [rip + 0x10] ; ret
0x0000000000090e6b : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x90e8a ; lea rax, qword ptr [rip + 0x26] ; ret
0x00000000000912ec : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x9137f ; lea rax, qword ptr [rip + 0xdd255] ; ret
0x00000000000917d4 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x917f2 ; lea rax, qword ptr [rip + 0xdd2ed] ; ret
0x000000000009199c : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x91a2f ; lea rax, qword ptr [rip + 0xdcb85] ; ret
0x0000000000091c01 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x91c1f ; lea rax, qword ptr [rip + 0x80] ; ret
0x0000000000091c64 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x91c82 ; lea rax, qword ptr [rip + 0xd] ; ret
0x0000000000093ef1 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x93f0f ; lea rax, qword ptr [rip + 0x80] ; ret
0x0000000000093f54 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x93f72 ; lea rax, qword ptr [rip + 0xd] ; ret
0x000000000009665c : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x966ef ; lea rax, qword ptr [rip + 0xd7ee5] ; ret
0x00000000000abd4b : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0xabd6a ; lea rax, qword ptr [rip + 0xf8f6] ; ret
0x00000000000ac91b : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0xac93a ; lea rax, qword ptr [rip + 0xec76] ; ret
0x00000000001ac386 : add byte ptr [rax], al ; add byte ptr [rdx], al ; or dword ptr [rsi], 0x54028310 ; ret
0x00000000001abb71 : add byte ptr [rax], al ; add byte ptr [rdx], bl ; add dword ptr [rax], eax ; js 0x1abb59 ; hlt ; jmp qword ptr [rcx]
0x00000000000a081d : add byte ptr [rax], al ; add byte ptr [rsi + 0x44], ah ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a082d : add byte ptr [rax], al ; add byte ptr [rsi + 0x44], ah ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000014d373 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp ah, byte ptr [rbx - 0x35] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x000000000016b9e2 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000013ebea : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; ror byte ptr [rdi], 0x11 ; and al, 0x28 ; call rdx
0x000000000016b9da : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ba97 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016b9f5 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ba46 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008123d : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x4466
0x0000000000090cf2 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000000a0b6f : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000104b80 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x0000000000104d6d : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rbx
0x0000000000104c39 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; mov rdi, r13 ; call rbx
0x0000000000104bb1 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x0000000000104feb : add byte ptr [rax], al ; add byte ptr [rsi + 2], bh ; mov rdi, r12 ; call rbx
0x0000000000104d5e : add byte ptr [rax], al ; add byte ptr [rsi + 2], bh ; mov rdi, r13 ; call rbx
0x0000000000104c2a : add byte ptr [rax], al ; add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x0000000000104ba2 : add byte ptr [rax], al ; add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x00000000000f7f05 : add byte ptr [rax], al ; add byte ptr [rsi + 6], dh ; ret
0x0000000000199fd1 : add byte ptr [rax], al ; add byte ptr [rsi + rax], bh ; add al, ch ; test eax, ebp ; call rsp
0x00000000001ac7e9 : add byte ptr [rax], al ; add byte ptr [rsi + rbp + 0x1d700001], dl ; cmc ; call qword ptr [rsi]
0x00000000001ac801 : add byte ptr [rax], al ; add byte ptr [rsi + rbp + 0x1d780001], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001b07e9 : add byte ptr [rax], al ; add byte ptr [rsi + rbp*2 + 0x68c00001], dl ; stc ; jmp qword ptr [rsi]
0x00000000001a47f1 : add byte ptr [rax], al ; add byte ptr [rsi + rbp*4 - 0x2ea80000], bl ; out dx, al ; call rcx
0x00000000001a47d9 : add byte ptr [rax], al ; add byte ptr [rsi + rbp*4 - 0x2f800000], al ; out dx, al ; jmp rbx
0x00000000001ab809 : add byte ptr [rax], al ; add byte ptr [rsi + rbx - 0x32cfffff], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001ab7f1 : add byte ptr [rax], al ; add byte ptr [rsi + rbx - 0x32e7ffff], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001af7d9 : add byte ptr [rax], al ; add byte ptr [rsi + rbx*2 - 0x1c0fffff], al ; cmc ; call rsi
0x00000000001b7779 : add byte ptr [rax], al ; add byte ptr [rsi + rbx*8], ah ; add dword ptr [rax], eax ; nop ; clc ; call qword ptr [rdx]
0x00000000001aa811 : add byte ptr [rax], al ; add byte ptr [rsi + rcx - 0x627ffff], bh ; jmp qword ptr [rdi]
0x00000000001ae761 : add byte ptr [rax], al ; add byte ptr [rsi + rcx*2], cl ; add dword ptr [rax], eax ; pop rax ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001aafb9 : add byte ptr [rax], al ; add byte ptr [rsi + rdx + 1], ah ; add byte ptr [rax], dl ; jge 0x1aafc1 ; jmp rdi
0x00000000001b2f91 : add byte ptr [rax], al ; add byte ptr [rsi + rdx*4], bh ; add dword ptr [rax], eax ; add rdi, rsi ; call rsi
0x00000000001b6fd9 : add byte ptr [rax], al ; add byte ptr [rsi + rdx*8 + 0x2cb00001], al ; clc ; jmp rdi
0x00000000001a6ff1 : add byte ptr [rax], al ; add byte ptr [rsi + rdx*8 + 0x45880000], bl ; int1 ; call qword ptr [rsi]
0x00000000001b8fc9 : add byte ptr [rax], al ; add byte ptr [rsi + rsi*8 + 1], dh ; add byte ptr [rax], dl ; cdq ; clc ; call qword ptr [rax]
0x00000000000798eb : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x0000000000036bbb : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rip + 0x38a4c6] ; ret
0x0000000000163f5d : add byte ptr [rax], al ; add byte ptr [rsi - 0x75], ah ; add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000035321 : add byte ptr [rax], al ; add byte ptr [rsi - 0x77], ah ; and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x00000000000352ff : add byte ptr [rax], al ; add byte ptr [rsi - 0x77], ah ; and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000134c0c : add byte ptr [rax], al ; add byte ptr [rsi - 0x77], ah ; insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x00000000000f733d : add byte ptr [rax], al ; add byte ptr [rsi - 9], ah ; mov byte ptr [rax + 0x16b8ff], 0 ; add byte ptr [rsp + rax - 0xd], dh ; ret
0x00000000001a8e91 : add byte ptr [rax], al ; add byte ptr [rsi*8 + 0x54e80000], bh ; jmp qword ptr [rcx]
0x00000000001b8e61 : add byte ptr [rax], al ; add byte ptr [rsi*8 - 0x6337ffff], cl ; sti ; jmp qword ptr [rdx]
0x00000000001a3f91 : add byte ptr [rax], al ; add byte ptr [rsi], bh ; add byte ptr [rax], al ; fdivr dword ptr [rcx - 0x12] ; jmp qword ptr [rcx]
0x000000000019ffd1 : add byte ptr [rax], al ; add byte ptr [rsi], bh ; add byte ptr [rax], bh ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001a7df9 : add byte ptr [rax], al ; add byte ptr [rsp + 0x10b00000], ah ; call qword ptr [rbx]
0x00000000001a7e11 : add byte ptr [rax], al ; add byte ptr [rsp + 0x10b80000], bh ; call qword ptr [rbx]
0x00000000001a9db1 : add byte ptr [rax], al ; add byte ptr [rsp + rax + 1], bl ; add byte ptr [rax + 0x36], ch ; call qword ptr [rcx]
0x00000000000f7347 : add byte ptr [rax], al ; add byte ptr [rsp + rax - 0xd], dh ; ret
0x00000000000ca538 : add byte ptr [rax], al ; add byte ptr [rsp + rax*2 - 0x77], ah ; add cl, byte ptr [rcx - 0x3b7cb710] ; ret
0x00000000001a45e1 : add byte ptr [rax], al ; add byte ptr [rsp + rbp*4 - 0x3ae80000], cl ; out dx, al ; call qword ptr [rax]
0x00000000001a4589 : add byte ptr [rax], al ; add byte ptr [rsp + rbp*4], dh ; add byte ptr [rax], al ; push rax ; ret
0x00000000001b8581 : add byte ptr [rax], al ; add byte ptr [rsp + rbp*8], ch ; add dword ptr [rax], eax ; sub byte ptr [rcx - 8], ah ; jmp qword ptr [rbx]
0x00000000001ab601 : add byte ptr [rax], al ; add byte ptr [rsp + rbx - 0x3557ffff], ch ; hlt ; call qword ptr [rcx]
0x00000000001ab5e9 : add byte ptr [rax], al ; add byte ptr [rsp + rbx - 0x356fffff], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001ae611 : add byte ptr [rax], al ; add byte ptr [rsp + rcx*2 - 0x5427ffff], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001ae5f9 : add byte ptr [rax], al ; add byte ptr [rsp + rcx*2 - 0x543fffff], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001ae5e1 : add byte ptr [rax], al ; add byte ptr [rsp + rcx*2 - 0x5457ffff], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001ae569 : add byte ptr [rax], al ; add byte ptr [rsp + rcx*2], dl ; add dword ptr [rax], eax ; push rax ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001a25c9 : add byte ptr [rax], al ; add byte ptr [rsp + rcx*4], dh ; add al, dl ; ret 0xffed
0x00000000001ad5d9 : add byte ptr [rax], al ; add byte ptr [rsp + rdi + 0x58700001], al ; cmc ; jmp qword ptr [rcx]
0x00000000001ad5c1 : add byte ptr [rax], al ; add byte ptr [rsp + rdi + 1], ch ; add byte ptr [rax + 0x58], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001ad5a9 : add byte ptr [rax], al ; add byte ptr [rsp + rdi + 1], dl ; add byte ptr [rax + 0x58], al ; cmc ; jmp qword ptr [rcx]
0x00000000001ad591 : add byte ptr [rax], al ; add byte ptr [rsp + rdi], bh ; add dword ptr [rax], eax ; sub byte ptr [rax - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001ad561 : add byte ptr [rax], al ; add byte ptr [rsp + rdi], cl ; add dword ptr [rax], eax ; clc ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001aee09 : add byte ptr [rax], al ; add byte ptr [rsp + rdx*2 - 0x480fffff], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001aedf1 : add byte ptr [rax], al ; add byte ptr [rsp + rdx*2 - 0x4827ffff], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001b6e01 : add byte ptr [rax], al ; add byte ptr [rsp + rdx*8 + 0x27580001], ch ; clc ; jmp rdi
0x00000000001b6dc1 : add byte ptr [rax], al ; add byte ptr [rsp + rdx*8 + 1], ch ; add byte ptr [rax + 0x25], ch ; clc ; jmp qword ptr [rdx]
0x00000000001ace09 : add byte ptr [rax], al ; add byte ptr [rsp + rsi + 0x2df00001], dh ; cmc ; jmp qword ptr [rsi]
0x00000000001abe11 : add byte ptr [rax], al ; add byte ptr [rsp - 0x1d47ffff], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001abde1 : add byte ptr [rax], al ; add byte ptr [rsp - 0x1d77ffff], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001a915e : add byte ptr [rax], al ; add byte ptr fs:[rax], al ; add byte ptr [rax + rdi*8], cl ; add byte ptr [rax], al ; sbb byte ptr [rdi - 0xe], ah ; call qword ptr [rax]
0x000000000019f3be : add byte ptr [rax], al ; add byte ptr fs:[rax], al ; add byte ptr [rdi + rax + 0x5180000], ch ; in eax, dx ; call qword ptr [rcx]
0x00000000001ad8f6 : add byte ptr [rax], al ; add byte ptr fs:[rax], al ; add byte ptr [rdi + rdi + 0x61f00001], ah ; cmc ; jmp qword ptr [rbx]
0x00000000001a50be : add byte ptr [rax], al ; add byte ptr fs:[rax], al ; add byte ptr [rdi + rsi*4], ch ; add byte ptr [rax + 0x3d], cl ; out dx, eax ; jmp rsi
0x000000000001a445 : add byte ptr [rax], al ; add ch, al ; ret
0x000000000011b28d : add byte ptr [rax], al ; add cl, al ; out 0x10, eax ; movzx eax, si ; or eax, edi ; bswap eax ; ret
0x00000000001108f8 : add byte ptr [rax], al ; add cl, byte ptr [rax - 0x75] ; push rsp ; and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000001b35bf : add byte ptr [rax], al ; add cl, byte ptr [rdi + 0xe] ; adc byte ptr [rbx + 0xa930202], al ; ret
0x000000000009fe46 : add byte ptr [rax], al ; add cl, ch ; int 0xfd
0x00000000000cf135 : add byte ptr [rax], al ; add cl, ch ; int 0xfe
0x000000000002709e : add byte ptr [rax], al ; add cl, ch ; mov edi, 0x89fffffc ; ret 0xe283
0x0000000000112a71 : add byte ptr [rax], al ; add cl, ch ; movabs al, byte ptr [0xffffffffb8fffffe] ; ret
0x000000000006b021 : add byte ptr [rax], al ; add cl, ch ; not dword ptr [rbx - 0x7cb70001] ; ret 0xbe08
0x0000000000061f36 : add byte ptr [rax], al ; add cl, ch ; or ch, byte ptr [rcx - 0x7cb70001] ; ret 0xbe08
0x00000000000614e7 : add byte ptr [rax], al ; add cl, ch ; pop rcx ; mov bl, 0xff ; inc dword ptr [rcx - 0x77] ; ret 0xcbe9
0x0000000000026753 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000009f957 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffb
0x000000000013a592 : add byte ptr [rax], al ; add dh, al ; add byte ptr [rax], al ; jle 0x13a5b6 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000fdd4c : add byte ptr [rax], al ; add dh, al ; or al, 0 ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x000000000017e4d5 : add byte ptr [rax], al ; add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000027bfe : add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000023ae6 : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x0000000000170191 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000000de98e : add byte ptr [rax], al ; add dh, dh ; ret 0x7540
0x000000000007f9b9 : add byte ptr [rax], al ; add dh, dh ; ret 0xf08
0x00000000000a15f0 : add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x00000000000a15f9 : add byte ptr [rax], al ; add dh, dh ; ret 0xf40
0x000000000003b282 : add byte ptr [rax], al ; add dl, dh ; movups xmm0, xmmword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000df2af : add byte ptr [rax], al ; add dword ptr [rbp - 0x7cb7febd], ecx ; ret
0x000000000013ea6e : add byte ptr [rax], al ; add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x000000000013ea2e : add byte ptr [rax], al ; add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x00000000000d6ab6 : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; lahf ; ret 0x8feb
0x000000000006c416 : add byte ptr [rax], al ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x00000000001bb6f6 : add byte ptr [rax], al ; add eax, dword ptr [rcx] ; add byte ptr [rax], al ; ret
0x000000000008b97e : add byte ptr [rax], al ; add eax, dword ptr [rdx] ; sub eax, edx ; mov rdx, qword ptr [rdx + 8] ; test rdx, rdx ; jne 0x8b990 ; ret
0x0000000000180dae : add byte ptr [rax], al ; add eax, esi ; sbb dword ptr [rcx], ebp ; jb 0x180df1 ; pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000050b1d : add byte ptr [rax], al ; add ebp, 0x30 ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000bba4a : add byte ptr [rax], al ; add edi, 1 ; pop rbx ; mov dword ptr [r11 + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000001ae1a2 : add byte ptr [rax], al ; add qword ptr [rax], rax ; js 0x1ae146 ; cmc ; jmp qword ptr [rcx]
0x000000000009872e : add byte ptr [rax], al ; add qword ptr [rbp], r12 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003b96d : add byte ptr [rax], al ; add r13, 1 ; jmp 0x3b711
0x000000000003be1d : add byte ptr [rax], al ; add r13, 1 ; jmp 0x3bc21
0x000000000004748e : add byte ptr [rax], al ; add rax, 1 ; cmp byte ptr [rax + 1], 0 ; jne 0x4749e ; pop rbx ; ret
0x00000000000ac6d6 : add byte ptr [rax], al ; add rax, 1 ; mov r8d, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0xac6c0 ; ret
0x00000000000ac00e : add byte ptr [rax], al ; add rax, 3 ; ret
0x00000000000adb5e : add byte ptr [rax], al ; add rax, 4 ; mov edx, dword ptr [rax] ; cmp edx, esi ; je 0xadb7f ; test edx, edx ; jne 0xadb71 ; ret
0x00000000000ac72b : add byte ptr [rax], al ; add rax, 4 ; mov qword ptr [r12], rax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004bb1c : add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x0000000000059c06 : add byte ptr [rax], al ; add rax, rcx ; mov dword ptr [rbp - 0x1088], 1 ; jmp rax
0x000000000004e1fb : add byte ptr [rax], al ; add rax, rcx ; mov dword ptr [rbp - 0x4a8], 1 ; jmp rax
0x000000000004e855 : add byte ptr [rax], al ; add rax, rcx ; mov dword ptr [rbp - 0x4f8], 1 ; jmp rax
0x0000000000090ba4 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x00000000000c5508 : add byte ptr [rax], al ; add rbp, r14 ; call 0x91817
0x0000000000135681 : add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x0000000000138131 : add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x0000000000137851 : add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x0000000000134ab4 : add byte ptr [rax], al ; add rdi, 0xc8 ; jmp rcx
0x00000000001368c2 : add byte ptr [rax], al ; add rsi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000142e71 : add byte ptr [rax], al ; add rsp, 0x10 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002a5ed : add byte ptr [rax], al ; add rsp, 0x10 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000088799 : add byte ptr [rax], al ; add rsp, 0x10 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000127854 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000048546 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000131205 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000006bcce : add byte ptr [rax], al ; add rsp, 0x1000 ; xor eax, eax ; pop rbx ; ret
0x0000000000035d2a : add byte ptr [rax], al ; add rsp, 0x108 ; ret
0x00000000000356a6 : add byte ptr [rax], al ; add rsp, 0x148 ; ret
0x000000000013a252 : add byte ptr [rax], al ; add rsp, 0x158 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000cbbf4 : add byte ptr [rax], al ; add rsp, 0x18 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00000000000769ee : add byte ptr [rax], al ; add rsp, 0x18 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012292d : add byte ptr [rax], al ; add rsp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000005370a : add byte ptr [rax], al ; add rsp, 0x18 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000047700 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ba7c0 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000079f0f : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f7389 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000000a0faf : add byte ptr [rax], al ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013d7fe : add byte ptr [rax], al ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000008044e : add byte ptr [rax], al ; add rsp, 0x18 ; xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000112c4f : add byte ptr [rax], al ; add rsp, 0x190 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f8ec4 : add byte ptr [rax], al ; add rsp, 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000008b0b0 : add byte ptr [rax], al ; add rsp, 0x20 ; mov rax, r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000080087 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000076d1f : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000136416 : add byte ptr [rax], al ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ccb3 : add byte ptr [rax], al ; add rsp, 0x200 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010e88b : add byte ptr [rax], al ; add rsp, 0x268 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002074b : add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x00000000000f0e4c : add byte ptr [rax], al ; add rsp, 0x28 ; mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000bf596 : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000020277 : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007cc9c : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000034e24 : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000000000007977b : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000131e9d : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000079804 : add byte ptr [rax], al ; add rsp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000124366 : add byte ptr [rax], al ; add rsp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000072ce2 : add byte ptr [rax], al ; add rsp, 0x330 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000081b7d : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006b909 : add byte ptr [rax], al ; add rsp, 0x400 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011909a : add byte ptr [rax], al ; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001433c8 : add byte ptr [rax], al ; add rsp, 0x510 ; mov rax, rbx ; pop rbx ; ret
0x00000000001435a4 : add byte ptr [rax], al ; add rsp, 0x518 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010de75 : add byte ptr [rax], al ; add rsp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ad157 : add byte ptr [rax], al ; add rsp, 0x60 ; mov rax, -1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f8764 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ef113 : add byte ptr [rax], al ; add rsp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000082752 : add byte ptr [rax], al ; add rsp, 0x78 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010dae9 : add byte ptr [rax], al ; add rsp, 0x80 ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x000000000010dbb3 : add byte ptr [rax], al ; add rsp, 0x80 ; mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x000000000010e996 : add byte ptr [rax], al ; add rsp, 0x80 ; mov eax, edx ; add rsp, 8 ; ret
0x0000000000145404 : add byte ptr [rax], al ; add rsp, 0x88 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000011fbd3 : add byte ptr [rax], al ; add rsp, 0x90 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006e363 : add byte ptr [rax], al ; add rsp, 0x90 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c86c4 : add byte ptr [rax], al ; add rsp, 0x98 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000036cb5 : add byte ptr [rax], al ; add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000002056c : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x00000000000c9004 : add byte ptr [rax], al ; add rsp, 0x98 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000118837 : add byte ptr [rax], al ; add rsp, 0xd0 ; mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006c5ca : add byte ptr [rax], al ; add rsp, 0xd0 ; mov eax, esi ; pop rbx ; ret
0x00000000000359d7 : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x00000000001189f0 : add byte ptr [rax], al ; add rsp, 0xd8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000045fc1 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x00000000001278a1 : add byte ptr [rax], al ; add rsp, 0xe0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000715ea : add byte ptr [rax], al ; add rsp, 0xf8 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008fb6a : add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x000000000012e65e : add byte ptr [rax], al ; add rsp, 8 ; mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x000000000011b136 : add byte ptr [rax], al ; add rsp, 8 ; mov eax, 0xca ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003a09c : add byte ptr [rax], al ; add rsp, 8 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000073761 : add byte ptr [rax], al ; add rsp, 8 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000013cb17 : add byte ptr [rax], al ; add rsp, 8 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012d746 : add byte ptr [rax], al ; add rsp, 8 ; mov eax, 1 ; pop rbx ; pop rbp ; ret
0x0000000000114b46 : add byte ptr [rax], al ; add rsp, 8 ; mov eax, 7 ; pop rbx ; pop rbp ; ret
0x000000000010794f : add byte ptr [rax], al ; add rsp, 8 ; mov eax, 9 ; pop rbx ; pop rbp ; ret
0x0000000000071780 : add byte ptr [rax], al ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000070a76 : add byte ptr [rax], al ; add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000557c4 : add byte ptr [rax], al ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006ea2a : add byte ptr [rax], al ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006f34e : add byte ptr [rax], al ; add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006c71b : add byte ptr [rax], al ; add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000013519e : add byte ptr [rax], al ; add rsp, 8 ; mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000137d6e : add byte ptr [rax], al ; add rsp, 8 ; mov edx, r13d ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008fc0d : add byte ptr [rax], al ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000077075 : add byte ptr [rax], al ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c8b26 : add byte ptr [rax], al ; add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000869e6 : add byte ptr [rax], al ; add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000071004 : add byte ptr [rax], al ; add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003a44d : add byte ptr [rax], al ; add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000000495a6 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000711bc : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000021627 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000035476 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000022685 : add byte ptr [rax], al ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008d7b6 : add byte ptr [rax], al ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000350ce : add byte ptr [rax], al ; addss xmm0, xmm0 ; ret
0x00000000001b5a4e : add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cld ; rol byte ptr [rcx], 0 ; pop rax ; ret 0xfff7
0x00000000001b35f6 : add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pushfq ; add dword ptr [rax], eax ; xor byte ptr [rcx], 0xf7 ; jmp qword ptr [rsi]
0x00000000001a2b5e : add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; or al, 0x92 ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; std ; jmp rdi
0x00000000001ab67a : add byte ptr [rax], al ; and al, 0x1d ; add dword ptr [rax], eax ; and bl, cl ; hlt ; jmp qword ptr [rsi]
0x00000000001aca7a : add byte ptr [rax], al ; and al, 0x31 ; add dword ptr [rax], eax ; loopne 0x1acaad ; cmc ; jmp qword ptr [rcx]
0x0000000000194f2e : add byte ptr [rax], al ; and al, 0x41 ; jmp 0x194f38
0x0000000000195d26 : add byte ptr [rax], al ; and al, 0x65 ; out dx, eax ; jmp rsp
0x00000000001a137a : add byte ptr [rax], al ; and al, 0x7a ; add byte ptr [rax], al ; and byte ptr [rdx - 0x13], bh ; jmp qword ptr [rbx]
0x00000000001a297a : add byte ptr [rax], al ; and al, 0x90 ; add byte ptr [rax], al ; ror dl, 1 ; in eax, dx ; call rdi
0x00000000001a2a7a : add byte ptr [rax], al ; and al, 0x91 ; add byte ptr [rax], al ; loopne 0x1a2a57 ; in eax, dx ; call qword ptr [rdx]
0x0000000000195a2e : add byte ptr [rax], al ; and al, 0xa0 ; out dx, al ; jmp rsp
0x00000000001a547a : add byte ptr [rax], al ; and al, 0xbb ; add byte ptr [rax], al ; xor bh, bl ; cld ; call qword ptr [rax]
0x00000000001b777a : add byte ptr [rax], al ; and al, 0xde ; add dword ptr [rax], eax ; nop ; clc ; call qword ptr [rdx]
0x00000000001bca06 : add byte ptr [rax], al ; and al, 4 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000001bb362 : add byte ptr [rax], al ; and al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001291e6 : add byte ptr [rax], al ; and byte ptr [rax], al ; jmp 0x1291b3
0x00000000001a74ee : add byte ptr [rax], al ; and byte ptr [rdi - 0xf], bl ; call rbx
0x00000000001a137e : add byte ptr [rax], al ; and byte ptr [rdx - 0x13], bh ; jmp qword ptr [rbx]
0x00000000000aad36 : add byte ptr [rax], al ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000000abcae : add byte ptr [rax], al ; and dh, 0xf ; je 0xabccf ; mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xabd2f ; ret
0x00000000000abcfe : add byte ptr [rax], al ; and dh, 0xf ; je 0xabd1f ; mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xabd2f ; ret
0x000000000000feee : add byte ptr [rax], al ; and dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d
0x0000000000010e66 : add byte ptr [rax], al ; and dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x42
0x00000000000798de : add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x000000000003521c : add byte ptr [rax], al ; and eax, 0x7fff ; or eax, edx ; mov dword ptr [rsp + 0x10], eax ; fld xword ptr [rsp + 8] ; ret
0x000000000016c421 : add byte ptr [rax], al ; and eax, 0xffff ; and ecx, 0xffff ; sub eax, ecx ; ret
0x000000000002e05b : add byte ptr [rax], al ; and eax, esi ; ret
0x000000000016ccf3 : add byte ptr [rax], al ; and ecx, 0xff ; sub eax, ecx ; ret
0x000000000016c426 : add byte ptr [rax], al ; and ecx, 0xffff ; sub eax, ecx ; ret
0x000000000007715e : add byte ptr [rax], al ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x000000000003af1b : add byte ptr [rax], al ; and edx, 0x7fffffff ; mov dword ptr [r8], edx ; mov dword ptr [rsi], edx ; ret
0x00000000000d81d4 : add byte ptr [rax], al ; and edx, 1 ; and ecx, 0x80 ; cmovne eax, edx ; pop rbx ; ret
0x00000000000d69ce : add byte ptr [rax], al ; and edx, 4 ; je 0xd6978 ; mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x00000000001abea2 : add byte ptr [rax], al ; and rax, 0xe3480001 ; hlt ; jmp qword ptr [rcx]
0x0000000000090dde : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000090dee : add byte ptr [rax], al ; bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000090dfe : add byte ptr [rax], al ; bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000097f6e : add byte ptr [rax], al ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x0000000000090e0e : add byte ptr [rax], al ; bsf eax, eax ; sub rdx, rax ; jbe 0x90e5d ; add rax, rdi ; ret
0x000000000008dab0 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000008d42e : add byte ptr [rax], al ; bsf rdx, rdx ; movzx ecx, byte ptr [rsi + rdx] ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x00000000000a0c2e : add byte ptr [rax], al ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x00000000000a0c3e : add byte ptr [rax], al ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x00000000000a0c4e : add byte ptr [rax], al ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x00000000000a0c5e : add byte ptr [rax], al ; bsr eax, eax ; sub rdx, 0x40 ; add rdx, rax ; jl 0xa0ce1 ; add rax, rdi ; ret
0x000000000008f764 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x000000000008f7f2 : add byte ptr [rax], al ; bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000013ecdf : add byte ptr [rax], al ; bswap eax ; mov dword ptr [rbx], eax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x0000000000138298 : add byte ptr [rax], al ; bswap eax ; mov dword ptr [rdx + 0x10], eax ; mov eax, 1 ; ret
0x0000000000138178 : add byte ptr [rax], al ; bswap eax ; mov dword ptr [rdx + 0xc], eax ; mov eax, 1 ; ret
0x000000000013ed1f : add byte ptr [rax], al ; bswap eax ; mov eax, eax ; mov qword ptr [rbx], rax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x0000000000134c54 : add byte ptr [rax], al ; bswap eax ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x000000000011b22e : add byte ptr [rax], al ; bswap edi ; test edi, edi ; js 0x11b24f ; mov eax, edi ; and eax, 0xffffff ; ret
0x000000000019b116 : add byte ptr [rax], al ; call 0x13199a4f
0x00000000001a7256 : add byte ptr [rax], al ; call 0x211a63b6
0x00000000001a8a36 : add byte ptr [rax], al ; call 0x221a7c86
0x00000000001a8e96 : add byte ptr [rax], al ; call 0x221a80f6
0x00000000001a0df6 : add byte ptr [rax], al ; call 0x2719fb6c
0x00000000001a1746 : add byte ptr [rax], al ; call 0x281a04d4
0x00000000000418ae : add byte ptr [rax], al ; call 0x2dbb4
0x0000000000044dd0 : add byte ptr [rax], al ; call 0x2dbba
0x00000000000423c4 : add byte ptr [rax], al ; call 0x2dbbb
0x0000000000055f7e : add byte ptr [rax], al ; call 0x721f4
0x000000000010ff76 : add byte ptr [rax], al ; call 0x72529
0x000000000007d576 : add byte ptr [rax], al ; call 0x79874
0x0000000000083904 : add byte ptr [rax], al ; call 0x7fb74
0x0000000000050da6 : add byte ptr [rax], al ; call 0xad064
0x0000000000144efb : add byte ptr [rax], al ; call 0xcd1ea
0x000000000002c028 : add byte ptr [rax], al ; call 0xf8254
0x0000000000199fd6 : add byte ptr [rax], al ; call 0xffffffffd5198867
0x000000000017338e : add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000001bbff : add byte ptr [rax], al ; call qword ptr [rdi]
0x00000000000bc657 : add byte ptr [rax], al ; call r15
0x00000000000645ab : add byte ptr [rax], al ; call rax
0x0000000000104b86 : add byte ptr [rax], al ; call rbx
0x000000000017e4de : add byte ptr [rax], al ; call rdi
0x000000000003a244 : add byte ptr [rax], al ; call rdx
0x000000000017d68e : add byte ptr [rax], al ; call rsp
0x00000000000aad4d : add byte ptr [rax], al ; clc ; jg 0xaace1 ; out 0xf0, al ; mov edx, 0 ; cmove rax, rdx ; ret
0x00000000000aad4d : add byte ptr [rax], al ; clc ; jg 0xaace2 ; out 0xf0, al ; mov edx, 0 ; cmove rax, rdx ; ret
0x00000000000aadb5 : add byte ptr [rax], al ; clc ; jg 0xaadb9 ; int1 ; mov eax, eax ; ret
0x00000000001a13d6 : add byte ptr [rax], al ; clc ; jns 0x1a13cd ; call rcx
0x00000000001a5976 : add byte ptr [rax], al ; clc ; jp 0x1a597a ; jmp qword ptr [rdi]
0x00000000001a4166 : add byte ptr [rax], al ; clc ; xchg eax, edx ; out dx, al ; call qword ptr [rax]
0x00000000001a7026 : add byte ptr [rax], al ; clc ; xchg eax, esi ; cld ; jmp qword ptr [rbx]
0x00000000001a9e52 : add byte ptr [rax], al ; cld ; add al, 1 ; add byte ptr [rax + 0x41], cl ; call qword ptr [rdx]
0x000000000019ed12 : add byte ptr [rax], al ; cld ; add byte ptr [rax], al ; add byte ptr [rax], ch ; fsub st(4), st(0) ; jmp qword ptr [rcx]
0x000000000019e052 : add byte ptr [rax], al ; cld ; add byte ptr [rax], r8b ; shr rdx, 1 ; jmp rdi
0x00000000001a8f52 : add byte ptr [rax], al ; cld ; cmc ; add byte ptr [rax], al ; push rbp ; jmp qword ptr [rcx]
0x00000000001ad452 : add byte ptr [rax], al ; cld ; cmp al, byte ptr [rcx] ; add byte ptr [rax + 0x55], ch ; cmc ; call qword ptr [rdx]
0x00000000001a7252 : add byte ptr [rax], al ; cld ; fadd dword ptr [rax] ; add al, ch ; push rsp ; int1 ; jmp qword ptr [rax]
0x00000000001b0952 : add byte ptr [rax], al ; cld ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; cmp byte ptr [rbx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001af052 : add byte ptr [rax], al ; cld ; push rsi ; add dword ptr [rax], eax ; pop rax ; ret 0xfff5
0x00000000001a6452 : add byte ptr [rax], al ; cld ; retf 0 ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001b5a52 : add byte ptr [rax], al ; cld ; rol byte ptr [rcx], 0 ; pop rax ; ret 0xfff7
0x00000000001ab752 : add byte ptr [rax], al ; cld ; sbb eax, 0xcce80001 ; hlt ; jmp qword ptr [rcx]
0x00000000001175fa : add byte ptr [rax], al ; cmova eax, edx ; add rsp, 0x28 ; ret
0x00000000000fcec9 : add byte ptr [rax], al ; cmova eax, edx ; ret
0x0000000000126aa9 : add byte ptr [rax], al ; cmovae rax, rdx ; ret
0x000000000010a4a9 : add byte ptr [rax], al ; cmovb rax, rdx ; ret
0x000000000013ec0a : add byte ptr [rax], al ; cmove eax, dword ptr [rsp + 0x38] ; add rsp, 0x90 ; pop rbx ; mov eax, eax ; ret
0x00000000000b671d : add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000ff237 : add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00000000000aace1 : add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x00000000000aaca9 : add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x0000000000098d31 : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000cbb92 : add byte ptr [rax], al ; cmovle eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000d81dd : add byte ptr [rax], al ; cmovne eax, edx ; pop rbx ; ret
0x0000000000117499 : add byte ptr [rax], al ; cmovne eax, edx ; ret
0x0000000000143443 : add byte ptr [rax], al ; cmovne rax, rdx ; add rsp, 8 ; ret
0x000000000011082f : add byte ptr [rax], al ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000000fe9c6 : add byte ptr [rax], al ; cmovns rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000001a8356 : add byte ptr [rax], al ; cmp al, 0 ; add byte ptr [rax], al ; add al, 0xea ; add byte ptr [rax], al ; adc byte ptr [rcx], ah ; call rsi
0x00000000001b2f8e : add byte ptr [rax], al ; cmp al, 0 ; add byte ptr [rax], al ; cmp al, 0x96 ; add dword ptr [rax], eax ; add rdi, rsi ; call rsi
0x00000000001a885e : add byte ptr [rax], al ; cmp al, 0 ; add byte ptr [rax], al ; or al, 0xef ; add byte ptr [rax], al ; sbb byte ptr [rcx], bh ; call rsi
0x00000000001af7d6 : add byte ptr [rax], al ; cmp al, 0 ; add byte ptr [rax], al ; test byte ptr [rsi + 1], bl ; add al, dh ; jrcxz 0x1af7e5 ; call rsi
0x00000000001b6fd6 : add byte ptr [rax], al ; cmp al, 0 ; add byte ptr [rax], al ; test dh, dl ; add dword ptr [rax], eax ; mov al, 0x2c ; clc ; jmp rdi
0x00000000001b40e6 : add byte ptr [rax], al ; cmp al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; push rax ; jl 0x1b40f7 ; call rcx
0x000000000019a992 : add byte ptr [rax], al ; cmp al, 0x10 ; add byte ptr [rax], al ; js 0x19aa19 ; std ; jmp qword ptr [rdi]
0x00000000000d259e : add byte ptr [rax], al ; cmp al, 0x2a ; je 0xd25b7 ; cmp al, 0x3f ; jne 0xd258d ; mov eax, 1 ; ret
0x00000000000c3842 : add byte ptr [rax], al ; cmp al, 0x30 ; mov esi, eax ; mov ecx, eax ; jne 0xc3841 ; nop dword ptr [rax] ; mov r10d, eax ; jmp 0xc3832
0x00000000001ad592 : add byte ptr [rax], al ; cmp al, 0x3c ; add dword ptr [rax], eax ; sub byte ptr [rax - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001b2f92 : add byte ptr [rax], al ; cmp al, 0x96 ; add dword ptr [rax], eax ; add rdi, rsi ; call rsi
0x00000000001a3f92 : add byte ptr [rax], al ; cmp al, 0xa6 ; add byte ptr [rax], al ; fdivr dword ptr [rcx - 0x12] ; jmp qword ptr [rcx]
0x00000000001b7492 : add byte ptr [rax], al ; cmp al, 0xdb ; add dword ptr [rax], eax ; fdivr dword ptr [rcx] ; clc ; call rax
0x00000000001a8e92 : add byte ptr [rax], al ; cmp al, 0xf5 ; add byte ptr [rax], al ; call 0x221a80fa
0x00000000001a9092 : add byte ptr [rax], al ; cmp al, 0xf7 ; add byte ptr [rax], al ; pop rax ; pop rbp ; jmp rcx
0x00000000000d81ee : add byte ptr [rax], al ; cmp al, 1 ; jne 0xd81f5 ; xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xd8196 ; ret
0x0000000000169e96 : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000000d832e : add byte ptr [rax], al ; cmp byte ptr [rbx + 0x63], 0 ; jne 0xd87c0 ; mov dword ptr [rbx + 0x2c], eax ; jmp 0xd8312
0x0000000000034ea5 : add byte ptr [rax], al ; cmp byte ptr [rdi + 0x2d], 0 ; add byte ptr [rax + 0x1fe8c17f], al ; ret
0x00000000000d24fe : add byte ptr [rax], al ; cmp byte ptr [rdi + 1], 0 ; jne 0xd251d ; or esi, 2 ; mov eax, esi ; ret
0x0000000000034e61 : add byte ptr [rax], al ; cmp byte ptr [rdi - 0x77], 0xd0 ; neg eax ; or eax, edx ; sar eax, 0x1f ; not eax ; and eax, ecx ; ret
0x00000000001a7106 : add byte ptr [rax], al ; cmp byte ptr [rdx - 0xf], cl ; jmp rcx
0x000000000019ffd6 : add byte ptr [rax], al ; cmp byte ptr [rsi], ch ; in eax, dx ; jmp qword ptr [rdi]
0x000000000014637e : add byte ptr [rax], al ; cmp byte ptr [rsp + 0xf], 0 ; jne 0x14639f ; xor eax, eax ; add rsp, 0x48 ; ret
0x00000000001a28f6 : add byte ptr [rax], al ; cmp cl, cl ; in eax, dx ; jmp qword ptr [rax]
0x00000000000d24de : add byte ptr [rax], al ; cmp dl, 0x2a ; je 0xd24e3 ; cmp dl, 0x3f ; jne 0xd248d ; mov eax, 1 ; ret
0x000000000004a92e : add byte ptr [rax], al ; cmp dword ptr [r8], edx ; je 0x4a951 ; sub r8, 4 ; cmp rdi, r8 ; jbe 0x4a941 ; ret
0x00000000001bbf4a : add byte ptr [rax], al ; cmp dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 8
0x000000000013605e : add byte ptr [rax], al ; cmp dword ptr [rsi + 0x10], 0xc ; je 0x13607a ; xor eax, eax ; ret
0x0000000000136aae : add byte ptr [rax], al ; cmp dword ptr [rsi], 2 ; je 0x136acc ; mov eax, 1 ; ret
0x00000000001177fe : add byte ptr [rax], al ; cmp eax, 0xff ; jne 0x117801 ; xor eax, eax ; leave ; ret
0x0000000000075f47 : add byte ptr [rax], al ; cmp eax, 0xff ; jne 0x75f58 ; pop rbx ; ret
0x00000000000cd6e0 : add byte ptr [rax], al ; cmp eax, 0xfffff001 ; jae 0xcd6f3 ; ret
0x000000000013d36e : add byte ptr [rax], al ; cmp eax, 1 ; jne 0x13d36c ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x0000000000170648 : add byte ptr [rax], al ; cmp eax, ecx ; jne 0x170711 ; xor eax, eax ; ret
0x0000000000194ee6 : add byte ptr [rax], al ; cmp ebp, ebx ; call rsp
0x0000000000114e8e : add byte ptr [rax], al ; cmp edi, 0x56 ; je 0x114eac ; mov eax, 7 ; ret
0x00000000000accc7 : add byte ptr [rax], al ; cmp edi, 0x7f ; ja 0xacce1 ; mov eax, edi ; ret
0x00000000000bfd57 : add byte ptr [rax], al ; cmp edi, edx ; sete al ; add eax, 0x16d ; ret
0x00000000000ce156 : add byte ptr [rax], al ; cmp edx, 0 ; mov eax, edx ; jle 0xce172 ; ret
0x000000000003ac6e : add byte ptr [rax], al ; cmp edx, 0xff ; cmovne rax, rbx ; pop rbx ; ret
0x00000000000fcbde : add byte ptr [rax], al ; cmp edx, 4 ; ja 0xfcbfd ; mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x00000000000740d5 : add byte ptr [rax], al ; cmp qword ptr [rax + 0x30], 0 ; je 0x740e9 ; ret
0x00000000000e98ce : add byte ptr [rax], al ; cmp qword ptr [rip + 0x2da588], 0 ; je 0xe991e ; xor eax, eax ; ret
0x000000000008b25e : add byte ptr [rax], al ; cmp qword ptr [rip + 0x3385e8], 0 ; je 0x8b27c ; ret
0x0000000000089c1c : add byte ptr [rax], al ; cmp rax, 0xff ; cmove rax, rdx ; add rsp, 8 ; ret
0x0000000000079889 : add byte ptr [rax], al ; cmp rax, rdi ; je 0x798ab ; cmp qword ptr [rip + 0x34ca48], 0 ; je 0x798b1 ; ret
0x0000000000102309 : add byte ptr [rax], al ; cmp rax, rdx ; mov edx, ebx ; cmovne rbp, rax ; call 0xfe61d
0x0000000000086697 : add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x86668 ; ret
0x0000000000150c5f : add byte ptr [rax], al ; cmp rdx, rcx ; jne 0x150c51 ; vzeroupper ; ret
0x000000000016ec12 : add byte ptr [rax], al ; cmp rdx, rcx ; jne 0x16ebfc ; vzeroupper ; ret
0x00000000000cea04 : add byte ptr [rax], al ; cmp rdx, rcx ; jne 0xcea37 ; ret
0x000000000019ccf6 : add byte ptr [rax], al ; cwde ; in eax, -0x17 ; jmp qword ptr [rdx]
0x00000000001add32 : add byte ptr [rax], al ; fadd qword ptr [rbx + 1] ; add byte ptr [rax], cl ; test ch, dh ; jmp rax
0x00000000000353fe : add byte ptr [rax], al ; fadd st(0) ; ret
0x00000000001aea32 : add byte ptr [rax], al ; fcom qword ptr [rax + 1] ; add byte ptr [rax], bh ; mov cl, 0xf5 ; jmp qword ptr [rcx]
0x00000000001a3f96 : add byte ptr [rax], al ; fdivr dword ptr [rcx - 0x12] ; jmp qword ptr [rcx]
0x00000000001a8a32 : add byte ptr [rax], al ; fdivr st(0), st(0) ; add byte ptr [rax], al ; call 0x221a7c8a
0x00000000001a8b32 : add byte ptr [rax], al ; fdivr st(1), st(0) ; add byte ptr [rax], al ; test al, 0x46 ; jmp qword ptr [rcx]
0x00000000001ae232 : add byte ptr [rax], al ; fmul qword ptr [rax + 1] ; add byte ptr [rax], cl ; xchg eax, esp ; cmc ; jmp qword ptr [rcx]
0x00000000001ae732 : add byte ptr [rax], al ; fmul qword ptr [rbp + 1] ; add byte ptr [rax], ch ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae332 : add byte ptr [rax], al ; fmul qword ptr [rcx + 1] ; add byte ptr [rax - 0x57], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a2a46 : add byte ptr [rax], al ; fmul st(4) ; in eax, dx ; call qword ptr [rdx]
0x00000000001a0df2 : add byte ptr [rax], al ; fsub qword ptr [rcx] ; add byte ptr [rax], al ; call 0x2719fb70
0x00000000001ac732 : add byte ptr [rax], al ; fsubr qword ptr [rip + 0x1c680001] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae74a : add byte ptr [rax], al ; hlt ; add qword ptr [r8], r8 ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000019551e : add byte ptr [rax], al ; hlt ; cld ; in eax, dx ; jmp rsp
0x00000000001ad54a : add byte ptr [rax], al ; hlt ; cmp eax, dword ptr [rcx] ; add al, ah ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001b694a : add byte ptr [rax], al ; hlt ; iretd ; add dword ptr [rax], eax ; adc byte ptr [rax + rdi*8], cl ; jmp qword ptr [rax]
0x0000000000195e6e : add byte ptr [rax], al ; hlt ; mov dl, 0xef ; dec esp ; inc dword ptr [rax] ; add byte ptr [rbx + rsi*4], dh ; out dx, eax ; jmp rsp
0x0000000000195a26 : add byte ptr [rax], al ; hlt ; pushfq ; out dx, al ; dec dword ptr [rax - 0x5fdc0000] ; out dx, al ; jmp rsp
0x000000000019505e : add byte ptr [rax], al ; hlt ; ret
0x00000000001aa94a : add byte ptr [rax], al ; hlt ; sgdt ptr [rax] ; adc byte ptr [rsi], dl ; hlt ; call qword ptr [rbx]
0x00000000001ac64a : add byte ptr [rax], al ; hlt ; sub al, 1 ; add al, al ; sbb ebp, esi ; jmp qword ptr [rcx]
0x0000000000194666 : add byte ptr [rax], al ; hlt ; xchg eax, ecx ; jmp 0x82db7b
0x00000000001a643a : add byte ptr [rax], al ; in al, -0x36 ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a483a : add byte ptr [rax], al ; in al, -0x52 ; add byte ptr [rax], al ; adc dl, dl ; out dx, al ; call qword ptr [rcx]
0x0000000000195e16 : add byte ptr [rax], al ; in al, -0x6f ; out dx, eax ; jmp rsp
0x00000000001a8f3a : add byte ptr [rax], al ; in al, -0xb ; add byte ptr [rax], al ; xor byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001b993a : add byte ptr [rax], al ; in al, -1 ; add dword ptr [rax], eax ; rol cl, 0xf8 ; call qword ptr [rdi]
0x000000000019554e : add byte ptr [rax], al ; in al, -1 ; in eax, dx ; jmp rsp
0x00000000001aab3a : add byte ptr [rax], al ; in al, 0x11 ; add dword ptr [rax], eax ; xor byte ptr [rdi], dl ; hlt ; call qword ptr [rdx]
0x00000000001ab73a : add byte ptr [rax], al ; in al, 0x1d ; add dword ptr [rax], eax ; ror ah, 1 ; hlt ; jmp qword ptr [rcx]
0x00000000001abc3a : add byte ptr [rax], al ; in al, 0x22 ; add dword ptr [rax], eax ; adc ch, bl ; hlt ; jmp qword ptr [rcx]
0x000000000019d23a : add byte ptr [rax], al ; in al, 0x38 ; add byte ptr [rax], al ; push rax ; and dl, ch ; call rcx
0x00000000001ad63a : add byte ptr [rax], al ; in al, 0x3c ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xb], bl ; jmp qword ptr [rdx]
0x000000000019572e : add byte ptr [rax], al ; in al, 0x42 ; out dx, al ; call rsp
0x000000000019584e : add byte ptr [rax], al ; in al, 0x57 ; out dx, al ; call rsp
0x0000000000195d3e : add byte ptr [rax], al ; in al, 0x67 ; out dx, eax ; inc dword ptr [rax + rdi*8 + 0x6a140000] ; out dx, eax ; jmp rsp
0x00000000001b093a : add byte ptr [rax], al ; in al, 0x6f ; add dword ptr [rax], eax ; and byte ptr [rbx - 0xa], ah ; jmp qword ptr [rsi]
0x0000000000195d7e : add byte ptr [rax], al ; in al, 0x70 ; out dx, eax ; lcall ptr [rdx + rdi*8 + 0x71940000] ; out dx, eax ; call rsp
0x00000000001a9a42 : add byte ptr [rax], al ; in al, dx ; add byte ptr [rcx], al ; add byte ptr [rax + 0x17], ch ; call qword ptr [rsi]
0x00000000001ae942 : add byte ptr [rax], al ; in al, dx ; add qword ptr [r8], r8 ; clc ; scasd eax, dword ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x00000000001abe42 : add byte ptr [rax], al ; in al, dx ; and al, 1 ; add al, ch ; loop 0x1abe48 ; jmp qword ptr [rcx]
0x000000000019eede : add byte ptr [rax], al ; in al, dx ; jmp qword ptr [rax]
0x00000000001a2a42 : add byte ptr [rax], al ; in al, dx ; nop ; add byte ptr [rax], al ; fmul st(4) ; in eax, dx ; call qword ptr [rdx]
0x00000000001a5c42 : add byte ptr [rax], al ; in al, dx ; ret 0
0x00000000001a4942 : add byte ptr [rax], al ; in al, dx ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; shr rsi, cl ; jmp qword ptr [rsi]
0x00000000001acb42 : add byte ptr [rax], al ; in al, dx ; xor dword ptr [rcx], eax ; add byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x000000000010a4ed : add byte ptr [rax], al ; inc dword ptr [rax] ; or eax, edx ; or eax, ebx ; add rsp, 0x90 ; pop rbx ; ret
0x00000000001ad5c2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp al, 1 ; add byte ptr [rax + 0x58], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a8ac2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; int1 ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0xe], al ; call qword ptr [rdx]
0x00000000001a12c2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jns 0x1a12d0 ; add al, cl ; jns 0x1a12c1 ; jmp qword ptr [rdi]
0x00000000001a50c2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov bh, 0 ; add byte ptr [rax + 0x3d], cl ; out dx, eax ; jmp rsi
0x00000000001a57c2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov esi, 0xab880000 ; sti ; call qword ptr [rax]
0x00000000001a5cc2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x00000000001a43c2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; mov bl, 0xee ; jmp rdx
0x000000000011aec5 : add byte ptr [rax], al ; ja 0x11aedc ; mov rax, rdi ; sar rax, 6 ; ret
0x0000000000195926 : add byte ptr [rax], al ; ja 0x195926 ; inc dword ptr [rcx + rbx*8 + 0x7ed40000] ; out dx, al ; call rsp
0x00000000001194b5 : add byte ptr [rax], al ; jbe 0x1194c4 ; jmp 0x456d6
0x000000000011b401 : add byte ptr [rax], al ; jbe 0x11b4a4 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000131e96 : add byte ptr [rax], al ; jbe 0x131eb6 ; mov eax, 3 ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000139f38 : add byte ptr [rax], al ; jbe 0x139f61 ; xor eax, eax ; add rsp, 0x100 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a0e4a : add byte ptr [rax], al ; jbe 0xa0e2c ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f7f06 : add byte ptr [rax], al ; jbe 0xf7f15 ; ret
0x000000000010501a : add byte ptr [rax], al ; je 0x10556d ; xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000104aed : add byte ptr [rax], al ; je 0x10558d ; xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000104d90 : add byte ptr [rax], al ; je 0x1055cd ; xor esi, esi ; mov rdi, r13 ; call rbx
0x000000000010503f : add byte ptr [rax], al ; je 0x1055ed ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000104b12 : add byte ptr [rax], al ; je 0x10560d ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000001052bd : add byte ptr [rax], al ; je 0x10562d ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000104b36 : add byte ptr [rax], al ; je 0x10564d ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000104ed9 : add byte ptr [rax], al ; je 0x10566d ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000104db4 : add byte ptr [rax], al ; je 0x10568d ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000104c5b : add byte ptr [rax], al ; je 0x1056ad ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000105406 : add byte ptr [rax], al ; je 0x1056cd ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000001052e1 : add byte ptr [rax], al ; je 0x1056ed ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000105188 : add byte ptr [rax], al ; je 0x10570d ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000105063 : add byte ptr [rax], al ; je 0x10572d ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000001050fc : add byte ptr [rax], al ; je 0x10574d ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000105083 : add byte ptr [rax], al ; je 0x10576d ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000010549f : add byte ptr [rax], al ; je 0x10578d ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000105426 : add byte ptr [rax], al ; je 0x1057ad ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000010537a : add byte ptr [rax], al ; je 0x1057cd ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000105301 : add byte ptr [rax], al ; je 0x1057ed ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000105221 : add byte ptr [rax], al ; je 0x10580d ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000001051a8 : add byte ptr [rax], al ; je 0x10582d ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104f72 : add byte ptr [rax], al ; je 0x10584d ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104ef9 : add byte ptr [rax], al ; je 0x10586d ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104b56 : add byte ptr [rax], al ; je 0x10588d ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104e4d : add byte ptr [rax], al ; je 0x1058ad ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104dd4 : add byte ptr [rax], al ; je 0x1058cd ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104bcf : add byte ptr [rax], al ; je 0x1058ed ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104cf4 : add byte ptr [rax], al ; je 0x10590d ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104c7b : add byte ptr [rax], al ; je 0x10592d ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000010e3d9 : add byte ptr [rax], al ; je 0x10e3f2 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000010fbc3 : add byte ptr [rax], al ; je 0x10fbdc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000117f00 : add byte ptr [rax], al ; je 0x117f64 ; lea rax, qword ptr [rip + 0x38855] ; ret
0x0000000000117f27 : add byte ptr [rax], al ; je 0x117f64 ; lea rax, qword ptr [rip - 0x86af2] ; ret
0x0000000000117fc0 : add byte ptr [rax], al ; je 0x118024 ; lea rax, qword ptr [rip + 0x38795] ; ret
0x0000000000117fe7 : add byte ptr [rax], al ; je 0x118024 ; lea rax, qword ptr [rip - 0x86bb2] ; ret
0x0000000000118080 : add byte ptr [rax], al ; je 0x1180e4 ; lea rax, qword ptr [rip + 0x386b5] ; ret
0x00000000001180a7 : add byte ptr [rax], al ; je 0x1180e4 ; lea rax, qword ptr [rip - 0x86c92] ; ret
0x0000000000139b79 : add byte ptr [rax], al ; je 0x139b99 ; lock dec dword ptr [rip + 0x28c3cc] ; jne 0x139ba1 ; jmp 0x139bbb
0x0000000000194ece : add byte ptr [rax], al ; je 0x194f0b ; jmp 0x194ed8
0x0000000000194f66 : add byte ptr [rax], al ; je 0x194fb4 ; jmp 0x194f70
0x000000000019514e : add byte ptr [rax], al ; je 0x1951de ; in al, dx ; lcall ptr [rbx + 0x7fd40000] ; in al, dx ; call rsp
0x0000000000195c66 : add byte ptr [rax], al ; je 0x195ca0 ; out dx, eax ; call rsp
0x000000000019e3f6 : add byte ptr [rax], al ; je 0x19e3eb ; call rdi
0x000000000019e3f5 : add byte ptr [rax], al ; je 0x19e3ec ; call rdi
0x00000000001a48ca : add byte ptr [rax], al ; je 0x1a4886 ; add byte ptr [rax], al ; loopne 0x1a4929 ; cli ; call qword ptr [rax]
0x00000000001a64ca : add byte ptr [rax], al ; je 0x1a64a2 ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a70ca : add byte ptr [rax], al ; je 0x1a70ae ; add byte ptr [rax], al ; nop ; int1 ; call rdx
0x00000000001a7dca : add byte ptr [rax], al ; je 0x1a7dbb ; add byte ptr [rax], al ; mov al, 0x10 ; jmp qword ptr [rdi]
0x00000000001aa9ca : add byte ptr [rax], al ; je 0x1aa9e7 ; add dword ptr [rax], eax ; adc byte ptr [rsi], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001aeeca : add byte ptr [rax], al ; je 0x1aef2c ; add dword ptr [rax], eax ; mov al, 0xb8 ; cmc ; jmp qword ptr [rcx]
0x00000000001b06ca : add byte ptr [rax], al ; je 0x1b0744 ; add dword ptr [rax], eax ; shl byte ptr [rcx - 0xa], 1 ; jmp qword ptr [rsi]
0x000000000003ad89 : add byte ptr [rax], al ; je 0x3ada9 ; lock dec dword ptr [rip + 0x3886cc] ; jne 0x3adb1 ; jmp 0x3adcb
0x000000000004a57f : add byte ptr [rax], al ; je 0x4a598 ; mov dword ptr [rdx], 0 ; mov eax, 1 ; ret
0x0000000000077374 : add byte ptr [rax], al ; je 0x77394 ; mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x77394 ; ret
0x0000000000079896 : add byte ptr [rax], al ; je 0x798a4 ; ret
0x000000000007f272 : add byte ptr [rax], al ; je 0x7f298 ; mov rax, qword ptr [rdi + 8] ; cmp rax, rdx ; jae 0x7f2b0 ; movzx eax, byte ptr [rax] ; ret
0x0000000000089947 : add byte ptr [rax], al ; je 0x89954 ; ret
0x000000000008b266 : add byte ptr [rax], al ; je 0x8b274 ; ret
0x000000000008bbb9 : add byte ptr [rax], al ; je 0x8bbcf ; lea rax, qword ptr [rip + 0x157ac] ; ret
0x000000000008bda6 : add byte ptr [rax], al ; je 0x8bdbc ; lea rax, qword ptr [rip + 0xe2edf] ; ret
0x000000000008d499 : add byte ptr [rax], al ; je 0x8d4af ; lea rax, qword ptr [rip + 0xd540c] ; ret
0x000000000008de19 : add byte ptr [rax], al ; je 0x8de2f ; lea rax, qword ptr [rip + 0x1516c] ; ret
0x000000000008f6f9 : add byte ptr [rax], al ; je 0x8f70f ; lea rax, qword ptr [rip + 0xd495c] ; ret
0x000000000009133e : add byte ptr [rax], al ; je 0x9137b ; lea rax, qword ptr [rip + 0x107] ; ret
0x0000000000091317 : add byte ptr [rax], al ; je 0x9137b ; lea rax, qword ptr [rip + 0xbf44e] ; ret
0x00000000000919c7 : add byte ptr [rax], al ; je 0x91a2b ; lea rax, qword ptr [rip + 0xbed7e] ; ret
0x00000000000919ee : add byte ptr [rax], al ; je 0x91a2b ; lea rax, qword ptr [rip - 0x5c9] ; ret
0x0000000000091a99 : add byte ptr [rax], al ; je 0x91aaf ; lea rax, qword ptr [rip + 0xd513c] ; ret
0x0000000000091bb9 : add byte ptr [rax], al ; je 0x91bcf ; lea rax, qword ptr [rip + 0xd682c] ; ret
0x0000000000096687 : add byte ptr [rax], al ; je 0x966eb ; lea rax, qword ptr [rip + 0xba0de] ; ret
0x00000000000966ae : add byte ptr [rax], al ; je 0x966eb ; lea rax, qword ptr [rip - 0x5269] ; ret
0x00000000000ac574 : add byte ptr [rax], al ; je 0xac4e1 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac624 : add byte ptr [rax], al ; je 0xac698 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac644 : add byte ptr [rax], al ; je 0xac6a0 ; test ah, ah ; jne 0xac680 ; test al, 0xf0 ; jne 0xac670 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000aed25 : add byte ptr [rax], al ; je 0xaf0e0 ; test r13d, r13d ; mov r10, rbp ; setne dl ; jmp 0xaed57
0x00000000000b1714 : add byte ptr [rax], al ; je 0xb1a57 ; test r13d, r13d ; mov r10, rbp ; setne dl ; jmp 0xb1747
0x00000000000ce8c3 : add byte ptr [rax], al ; je 0xce9ad ; mov eax, 0x7f ; ret
0x00000000000cea2b : add byte ptr [rax], al ; je 0xcea7e ; mov eax, 0x20 ; ret
0x00000000000ceb06 : add byte ptr [rax], al ; je 0xceb20 ; cmp rax, 0x7275 ; jne 0xceaf9 ; xor eax, eax ; ret
0x00000000000e98d6 : add byte ptr [rax], al ; je 0xe9916 ; xor eax, eax ; ret
0x00000000000f7348 : add byte ptr [rax], al ; je 0xf7355 ; ret
0x0000000000125c42 : add byte ptr [rax], al ; jg 0x125cc9 ; mov byte ptr [rbp + 0x11], bl ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000170d23 : add byte ptr [rax], al ; jg 0x170d36 ; neg eax ; ret
0x00000000000abd23 : add byte ptr [rax], al ; jg 0xabd2f ; neg eax ; ret
0x000000000016db19 : add byte ptr [rax], al ; jl 0x16db26 ; neg eax ; ret
0x0000000000199fd2 : add byte ptr [rax], al ; jl 0x199fe5 ; add byte ptr [rax], al ; call 0xffffffffd519886b
0x000000000019ced2 : add byte ptr [rax], al ; jl 0x19cf14 ; add byte ptr [rax], al ; out -0x17, eax ; call qword ptr [rax]
0x000000000019ffd2 : add byte ptr [rax], al ; jl 0x1a0045 ; add byte ptr [rax], al ; cmp byte ptr [rsi], ch ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001a13d2 : add byte ptr [rax], al ; jl 0x1a1459 ; add byte ptr [rax], al ; clc ; jns 0x1a13d1 ; call rcx
0x00000000001a5c3e : add byte ptr [rax], al ; jl 0x1a5c49 ; add byte ptr [rax], al ; in al, dx ; ret 0
0x00000000001b8bd2 : add byte ptr [rax], al ; jl 0x1b8bd1 ; add dword ptr [rax], eax ; clc ; sahf ; sti ; jmp qword ptr [rdx]
0x000000000013a596 : add byte ptr [rax], al ; jle 0x13a5b2 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000135349 : add byte ptr [rax], al ; jmp 0x135312
0x000000000002612e : add byte ptr [rax], al ; jmp 0x25fcd
0x000000000004e6d5 : add byte ptr [rax], al ; jmp 0x4e672
0x00000000000eeb6b : add byte ptr [rax], al ; jmp 0xed48a
0x000000000000defe : add byte ptr [rax], al ; jmp qword ptr [rcx]
0x0000000000035625 : add byte ptr [rax], al ; jmp rax
0x0000000000134abb : add byte ptr [rax], al ; jmp rcx
0x0000000000196987 : add byte ptr [rax], al ; jmp rsp
0x00000000001148cc : add byte ptr [rax], al ; jne 0x114909 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000116d8d : add byte ptr [rax], al ; jne 0x116d86 ; and r11d, 0xffffffbb ; cmp r11d, 0xa ; je 0x116daa ; ret
0x0000000000116df0 : add byte ptr [rax], al ; jne 0x116def ; mov eax, r11d ; and eax, 0xc ; cmp eax, 4 ; je 0x116e0f ; ret
0x0000000000117f4e : add byte ptr [rax], al ; jne 0x117f64 ; lea rax, qword ptr [rip + 0x3b747] ; ret
0x0000000000117ed9 : add byte ptr [rax], al ; jne 0x117f64 ; lea rax, qword ptr [rip + 0x5665c] ; ret
0x000000000011800e : add byte ptr [rax], al ; jne 0x118024 ; lea rax, qword ptr [rip + 0x3e057] ; ret
0x0000000000117f99 : add byte ptr [rax], al ; jne 0x118024 ; lea rax, qword ptr [rip + 0x5659c] ; ret
0x00000000001180ce : add byte ptr [rax], al ; jne 0x1180e4 ; lea rax, qword ptr [rip + 0x3b5a7] ; ret
0x0000000000118059 : add byte ptr [rax], al ; jne 0x1180e4 ; lea rax, qword ptr [rip + 0x564bc] ; ret
0x0000000000118155 : add byte ptr [rax], al ; jne 0x11816b ; lea rax, qword ptr [rip + 0x56960] ; ret
0x000000000013e895 : add byte ptr [rax], al ; jne 0x13e872 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001a11cf : add byte ptr [rax], al ; jne 0x1a11c4 ; jmp qword ptr [rcx]
0x0000000000076d86 : add byte ptr [rax], al ; jne 0x76da4 ; mov edx, dword ptr [rdi + 0xc0] ; mov eax, edx ; ret
0x0000000000078c9d : add byte ptr [rax], al ; jne 0x78cc3 ; xor eax, eax ; cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x000000000008c009 : add byte ptr [rax], al ; jne 0x8c01f ; lea rax, qword ptr [rip + 0xc] ; ret
0x000000000008de65 : add byte ptr [rax], al ; jne 0x8de7b ; lea rax, qword ptr [rip + 0x10] ; ret
0x0000000000090e6f : add byte ptr [rax], al ; jne 0x90e86 ; lea rax, qword ptr [rip + 0x26] ; ret
0x0000000000091365 : add byte ptr [rax], al ; jne 0x9137b ; lea rax, qword ptr [rip + 0xc4d10] ; ret
0x00000000000912f0 : add byte ptr [rax], al ; jne 0x9137b ; lea rax, qword ptr [rip + 0xdd255] ; ret
0x00000000000917d8 : add byte ptr [rax], al ; jne 0x917ee ; lea rax, qword ptr [rip + 0xdd2ed] ; ret
0x0000000000091a15 : add byte ptr [rax], al ; jne 0x91a2b ; lea rax, qword ptr [rip + 0xc1c70] ; ret
0x00000000000919a0 : add byte ptr [rax], al ; jne 0x91a2b ; lea rax, qword ptr [rip + 0xdcb85] ; ret
0x0000000000091c05 : add byte ptr [rax], al ; jne 0x91c1b ; lea rax, qword ptr [rip + 0x80] ; ret
0x0000000000091c68 : add byte ptr [rax], al ; jne 0x91c7e ; lea rax, qword ptr [rip + 0xd] ; ret
0x0000000000093ef5 : add byte ptr [rax], al ; jne 0x93f0b ; lea rax, qword ptr [rip + 0x80] ; ret
0x0000000000093f58 : add byte ptr [rax], al ; jne 0x93f6e ; lea rax, qword ptr [rip + 0xd] ; ret
0x00000000000966d5 : add byte ptr [rax], al ; jne 0x966eb ; lea rax, qword ptr [rip + 0xbcfd0] ; ret
0x0000000000096660 : add byte ptr [rax], al ; jne 0x966eb ; lea rax, qword ptr [rip + 0xd7ee5] ; ret
0x00000000000a069a : add byte ptr [rax], al ; jne 0xa06bb ; nop ; add rax, 1 ; cmp byte ptr [rdi + rax], dl ; je 0xa06b0 ; ret
0x00000000000abd4f : add byte ptr [rax], al ; jne 0xabd66 ; lea rax, qword ptr [rip + 0xf8f6] ; ret
0x00000000000ac91f : add byte ptr [rax], al ; jne 0xac936 ; lea rax, qword ptr [rip + 0xec76] ; ret
0x00000000000ce8ff : add byte ptr [rax], al ; jne 0xce8d0 ; ret
0x00000000000ce967 : add byte ptr [rax], al ; jne 0xce8d8 ; mov eax, 0xfa ; ret
0x00000000000ceb0e : add byte ptr [rax], al ; jne 0xceaf1 ; xor eax, eax ; ret
0x00000000000d11dc : add byte ptr [rax], al ; jne 0xd10de ; jmp 0xd112e
0x00000000000d11db : add byte ptr [rax], al ; jne 0xd10df ; jmp 0xd112f
0x00000000000d823a : add byte ptr [rax], al ; jne 0xd8193 ; ret
0x000000000000def6 : add byte ptr [rax], al ; jne 0xdf04 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rcx]
0x00000000000f7017 : add byte ptr [rax], al ; jne 0xf7034 ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000001852bf : add byte ptr [rax], al ; jnp 0x1852b5 ; jmp qword ptr [rax]
0x0000000000010fce : add byte ptr [rax], al ; jns 0x10fdc ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x51
0x000000000019f6ae : add byte ptr [rax], al ; jo 0x19f6c9 ; in eax, dx ; call qword ptr [rax]
0x00000000001a49be : add byte ptr [rax], al ; jo 0x1a496a ; cli ; call qword ptr [rax]
0x000000000019a996 : add byte ptr [rax], al ; js 0x19aa15 ; std ; jmp qword ptr [rdi]
0x00000000001a3c06 : add byte ptr [rax], al ; js 0x1a3bf8 ; cld ; call qword ptr [rdx]
0x00000000001a92b6 : add byte ptr [rax], al ; js 0x1a9251 ; call rbx
0x00000000000ceb65 : add byte ptr [rax], al ; js 0xceb75 ; ret
0x0000000000008586 : add byte ptr [rax], al ; lea eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000036c06 : add byte ptr [rax], al ; lea eax, dword ptr [rdx + 1] ; mov dword ptr [rip + 0x38a47b], eax ; mov eax, edx ; ret
0x000000000015b709 : add byte ptr [rax], al ; lea r11, qword ptr [rip + 0x3879e] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000a9ace : add byte ptr [rax], al ; lea r11, qword ptr [rip + 0xdc8ad] ; movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a7dfe : add byte ptr [rax], al ; lea r11, qword ptr [rip + 0xde3a9] ; movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a675e : add byte ptr [rax], al ; lea r11, qword ptr [rip + 0xdf869] ; movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000487e6 : add byte ptr [rax], al ; lea r8, qword ptr [rax] ; mov rax, qword ptr [rsi + rbx*8] ; lea r9, qword ptr [rdx] ; jmp 0x48850
0x000000000004a3f6 : add byte ptr [rax], al ; lea r8, qword ptr [rax] ; mov rax, qword ptr [rsi + rbx*8] ; lea r9, qword ptr [rdx] ; jmp 0x4a460
0x0000000000076a90 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000012f251 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00000000000769ad : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x000000000012f638 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x0000000000130938 : add byte ptr [rax], al ; lea rax, qword ptr [rbx + 0x2260] ; pop rbx ; ret
0x00000000000aaa55 : add byte ptr [rax], al ; lea rax, qword ptr [rbx + 1] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000016ef5e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000016ef6e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000016ef7e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000016ef8e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000016ef9e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000016eebd : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000016eede : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000016eeee : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000016eefe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000016ef0e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000016ef1e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000016ef2e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000016ee6a : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000016ef3e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000016ef4e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000008be09 : add byte ptr [rax], al ; lea rax, qword ptr [rdi + rax] ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000ac4fb : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac65e : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000ac67e : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000ac66e : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x000000000016eece : add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000002cb26 : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x15def6] ; ret
0x00000000000204ee : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x16a074] ; ret
0x00000000000204fe : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x16bf78] ; ret
0x00000000001034cc : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x2c0d4b] ; add rsp, 0x18 ; ret
0x0000000000102f54 : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x2c1273] ; add rsp, 8 ; ret
0x0000000000100e4f : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x2c32a8] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003b34e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x38b0ff] ; add rsp, 8 ; ret
0x000000000012d7de : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x5d23e] ; ret
0x0000000000147b34 : add byte ptr [rax], al ; lea rcx, qword ptr [rdx + rcx - 0x10] ; movzx eax, byte ptr [rdi + rcx] ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000006daba : add byte ptr [rax], al ; lea rcx, qword ptr [rip + 0x118019] ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x000000000006d36d : add byte ptr [rax], al ; lea rcx, qword ptr [rip + 0x118522] ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x00000000000647cc : add byte ptr [rax], al ; lea rcx, qword ptr [rip + 0x12083f] ; movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x00000000000646ac : add byte ptr [rax], al ; lea rcx, qword ptr [rip + 0x1208af] ; movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x000000000006484a : add byte ptr [rax], al ; lea rcx, qword ptr [rip + 0x120911] ; movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x0000000000064157 : add byte ptr [rax], al ; lea rcx, qword ptr [rip + 0x120d48] ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000008ab8e : add byte ptr [rax], al ; lea rcx, qword ptr [rip + 0xffe8e] ; mov rdx, rcx ; jmp 0x8ab6b
0x000000000003344a : add byte ptr [rax], al ; lea rdi, qword ptr [rip + 0x14cc6d] ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x0000000000122ede : add byte ptr [rax], al ; lea rdi, qword ptr [rip + 0x2a2815] ; call rax
0x000000000006cc1b : add byte ptr [rax], al ; lea rdx, qword ptr [rip + 0x11869c] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000013045e : add byte ptr [rax], al ; lea rdx, qword ptr [rip + 0x290719] ; jmp qword ptr [rdx + rax*8]
0x0000000000139c4e : add byte ptr [rax], al ; lea rdx, qword ptr [rip + 0x3609] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000e6039 : add byte ptr [rax], al ; lea rdx, qword ptr [rip + 0xa1e52] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000e343a : add byte ptr [rax], al ; lea rdx, qword ptr [rip + 0xa49a9] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000d4a57 : add byte ptr [rax], al ; lea rdx, qword ptr [rip + 0xb2ed4] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000d3071 : add byte ptr [rax], al ; lea rdx, qword ptr [rip + 0xb47ca] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000d2a87 : add byte ptr [rax], al ; lea rdx, qword ptr [rip + 0xb4d34] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000cefb2 : add byte ptr [rax], al ; lea rdx, qword ptr [rip + 0xb83d9] ; movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x000000000012f24a : add byte ptr [rax], al ; lea rdx, qword ptr [rip + 0xe00d] ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000087b4f : add byte ptr [rax], al ; lea rdx, qword ptr [rip + 0xfe0e8] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000b73de : add byte ptr [rax], al ; lea rsi, qword ptr [rbx + rax*4] ; sub r10, rax ; jmp 0xb740a
0x00000000000453ec : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x00000000000704c7 : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x30] ; call rax
0x00000000000aac5e : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0xdb859] ; movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x000000000007e3c7 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x19b0] ; call rax
0x000000000007e881 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x1e6a] ; call rax
0x000000000007ed41 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x232a] ; call rax
0x00000000000707b1 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x2ba] ; call rax
0x000000000007cd27 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x310] ; call rax
0x000000000007cf97 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x580] ; call rax
0x0000000000039b3f : add byte ptr [rax], al ; lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000ce366 : add byte ptr [rax], al ; lea rsp, qword ptr [rbp - 0x18] ; mov eax, 1 ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000022b6e : add byte ptr [rax], al ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001bca02 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rsp + rax], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000001ac802 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add dword ptr cs:[rax], eax ; js 0x1ac830 ; cmc ; jmp qword ptr [rcx]
0x00000000001ae702 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add qword ptr [r8], r8 ; clc ; lodsb al, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ad502 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; cmp eax, dword ptr [rcx] ; add byte ptr [rax + 0x57], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001b8b02 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; int1 ; add dword ptr [rax], eax ; cwde ; lahf ; sti ; jmp qword ptr [rdx]
0x00000000001a7102 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; xlatb ; add byte ptr [rax], al ; cmp byte ptr [rdx - 0xf], cl ; jmp rcx
0x0000000000188ac7 : add byte ptr [rax], al ; loope 0x188ad5 ; add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000185fce : add byte ptr [rax], al ; loopne 0x185fe3 ; inc dword ptr [rax] ; or edx, esi ; jmp qword ptr [rax]
0x00000000001a2a7e : add byte ptr [rax], al ; loopne 0x1a2a53 ; in eax, dx ; call qword ptr [rdx]
0x00000000001a41ae : add byte ptr [rax], al ; loopne 0x1a414a ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a48ce : add byte ptr [rax], al ; loopne 0x1a4925 ; cli ; call qword ptr [rax]
0x0000000000034d70 : add byte ptr [rax], al ; loopne 0x34dbf ; or rax, rdx ; movq xmm0, rax ; ret
0x00000000001ab80a : add byte ptr [rax], al ; mov ah, 0x1e ; add dword ptr [rax], eax ; xor ch, cl ; hlt ; jmp qword ptr [rcx]
0x00000000001a11ca : add byte ptr [rax], al ; mov ah, 0x25 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x13], dh ; jmp qword ptr [rcx]
0x00000000001ac20a : add byte ptr [rax], al ; mov ah, 0x28 ; add dword ptr [rax], eax ; mov al, 0xb ; cmc ; jmp rcx
0x00000000001ac40a : add byte ptr [rax], al ; mov ah, 0x2a ; add dword ptr [rax], eax ; jo 0x1ac430 ; cmc ; call qword ptr [rbx]
0x0000000000195666 : add byte ptr [rax], al ; mov ah, 0x2d ; out dx, al ; call rsp
0x0000000000194596 : add byte ptr [rax], al ; mov ah, 0x40 ; jmp 0x7bbaab
0x0000000000195756 : add byte ptr [rax], al ; mov ah, 0x48 ; out dx, al ; jmp rsp
0x0000000000195e0e : add byte ptr [rax], al ; mov ah, 0x91 ; out dx, eax ; dec esp ; std ; add byte ptr [rax], al ; in al, -0x6f ; out dx, eax ; jmp rsp
0x00000000001a8f0a : add byte ptr [rax], al ; mov ah, 0xf5 ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001a49ba : add byte ptr [rax], al ; mov al, 0 ; add byte ptr [rax - 0x5d], dh ; cli ; call qword ptr [rax]
0x00000000001a7dfe : add byte ptr [rax], al ; mov al, 0x10 ; call qword ptr [rbx]
0x00000000001a7dce : add byte ptr [rax], al ; mov al, 0x10 ; jmp qword ptr [rdi]
0x00000000001a80be : add byte ptr [rax], al ; mov al, 0x16 ; call rcx
0x00000000001a781e : add byte ptr [rax], al ; mov al, 0x8c ; int1 ; call qword ptr [rdx]
0x00000000001a929e : add byte ptr [rax], al ; mov al, 0x91 ; call rbx
0x000000000016827e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000163f4e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000016828e : add byte ptr [rax], al ; mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000163f6e : add byte ptr [rax], al ; mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000163f5e : add byte ptr [rax], al ; mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000001a43c6 : add byte ptr [rax], al ; mov bl, 0xee ; jmp rdx
0x00000000000fdd4d : add byte ptr [rax], al ; mov byte ptr [rax + 0xc], 0 ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x00000000001a5886 : add byte ptr [rax], al ; mov byte ptr [rax + rsi*8], al ; jmp qword ptr [rbx]
0x000000000013a593 : add byte ptr [rax], al ; mov byte ptr [rax], 0 ; jle 0x13a5b5 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001a6ff6 : add byte ptr [rax], al ; mov byte ptr [rbp - 0xf], al ; call qword ptr [rsi]
0x00000000001a5f16 : add byte ptr [rax], al ; mov byte ptr [rcx - 0x10], ah ; call rdx
0x000000000019b6e6 : add byte ptr [rax], al ; mov byte ptr [rcx - 0x17], dh ; call qword ptr [rdi]
0x0000000000165f1e : add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000d694e : add byte ptr [rax], al ; mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x0000000000079d0e : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000a766e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000a606e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000a703e : add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00000000000a080e : add byte ptr [rax], al ; mov byte ptr [rdi], sil ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000abfee : add byte ptr [rax], al ; mov ch, dh ; and ch, 0xf ; je 0xac01d ; add rax, 2 ; ret
0x00000000000a6d5e : add byte ptr [rax], al ; mov cx, word ptr [rsi] ; mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000a768e : add byte ptr [rax], al ; mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a608e : add byte ptr [rax], al ; mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000001b553f : add byte ptr [rax], al ; mov dh, 0xf7 ; jmp rsi
0x00000000001ba5de : add byte ptr [rax], al ; mov dh, 2 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000a848e : add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a6d3e : add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000a9efe : add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000d6bf2 : add byte ptr [rax], al ; mov dword ptr [rax], ebp ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000076d19 : add byte ptr [rax], al ; mov dword ptr [rbp + 0xc0], eax ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000059c65 : add byte ptr [rax], al ; mov dword ptr [rbp - 0x1090], 0x20 ; jmp rax
0x0000000000059c9b : add byte ptr [rax], al ; mov dword ptr [rbp - 0x1098], 1 ; jmp rax
0x000000000005a6b8 : add byte ptr [rax], al ; mov dword ptr [rbp - 0x10b0], 0 ; jmp rax
0x00000000000598cb : add byte ptr [rax], al ; mov dword ptr [rbp - 0x10b4], 0 ; jmp rax
0x000000000005a75c : add byte ptr [rax], al ; mov dword ptr [rbp - 0x10b4], 1 ; jmp rax
0x000000000004e5f8 : add byte ptr [rax], al ; mov dword ptr [rbp - 0x4b8], 1 ; jmp rax
0x000000000004e297 : add byte ptr [rax], al ; mov dword ptr [rbp - 0x4f0], 1 ; jmp rax
0x0000000000035c1e : add byte ptr [rax], al ; mov dword ptr [rbp], ecx ; add rsp, 0x88 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000d8338 : add byte ptr [rax], al ; mov dword ptr [rbx + 0x2c], eax ; jmp 0xd8308
0x000000000007b790 : add byte ptr [rax], al ; mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000741ab : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000135343 : add byte ptr [rax], al ; mov dword ptr [rbx + 0x98], eax ; jmp 0x135318
0x00000000000dadac : add byte ptr [rax], al ; mov dword ptr [rcx + 0x40], 0xffffffff ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000134c2e : add byte ptr [rax], al ; mov dword ptr [rcx + 4], 1 ; mov eax, 1 ; ret
0x0000000000165f5e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x0000000000165f7e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x0000000000165f6e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x0000000000165f4e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x000000000013794e : add byte ptr [rax], al ; mov dword ptr [rdi + 4], 1 ; mov eax, 1 ; ret
0x00000000000f736e : add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000a705e : add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x0000000000071d9e : add byte ptr [rax], al ; mov dword ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000a099e : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a090e : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000a095e : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a08be : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x00000000000a08fe : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00000000000a09ae : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a09be : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a091e : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a08ae : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00000000000a707e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a708e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a706e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x0000000000056475 : add byte ptr [rax], al ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000008a92b : add byte ptr [rax], al ; mov dword ptr [rip + 0x338eb1], 1 ; xor eax, eax ; ret
0x000000000008a76e : add byte ptr [rax], al ; mov dword ptr [rip + 0x33906e], 1 ; ret
0x000000000008682e : add byte ptr [rax], al ; mov dword ptr [rip + 0x33cf6e], 0 ; ret
0x000000000013002e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xa ; ret
0x000000000013004e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xc ; ret
0x000000000012ffd6 : add byte ptr [rax], al ; mov dword ptr [rsi], 6 ; movdqu xmm0, xmmword ptr [rdi + 0x20] ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x000000000013003e : add byte ptr [rax], al ; mov dword ptr [rsi], 8 ; ret
0x000000000013000e : add byte ptr [rax], al ; mov dword ptr [rsi], 9 ; movdqu xmm0, xmmword ptr [rdi + 0x38] ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x00000000000f7e24 : add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000108d71 : add byte ptr [rax], al ; mov dword ptr fs:[0x2d0], eax ; pop rax ; pop rdi ; call rax
0x00000000000ec1f6 : add byte ptr [rax], al ; mov dword ptr fs:[0x40], 0 ; ret
0x000000000008bb23 : add byte ptr [rax], al ; mov dword ptr fs:[rax], 0xc ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ca390 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000ca45a : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x00000000000ca539 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x00000000000c9cee : add byte ptr [rax], al ; mov dword ptr fs:[rdx], r8d ; mov rax, rsi ; add rsp, 8 ; ret
0x000000000015b5ee : add byte ptr [rax], al ; mov dx, word ptr [rsi + 1] ; mov cx, word ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000000a767e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a849e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a607e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000a9f0e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x000000000003ac69 : add byte ptr [rax], al ; mov eax, 0 ; cmp edx, 0xff ; cmovne rax, rbx ; pop rbx ; ret
0x00000000000fdde5 : add byte ptr [rax], al ; mov eax, 0x10 ; syscall ; cmp rax, -0x1000 ; ja 0xfde11 ; ret
0x00000000000fe57e : add byte ptr [rax], al ; mov eax, 0x10 ; syscall ; cmp rax, -0xfff ; jae 0xfe5a1 ; ret
0x00000000000f862e : add byte ptr [rax], al ; mov eax, 0x102 ; syscall ; cmp rax, -0xfff ; jae 0xf8651 ; ret
0x00000000000fa1be : add byte ptr [rax], al ; mov eax, 0x107 ; syscall ; cmp rax, -0xfff ; jae 0xfa1e1 ; ret
0x00000000000fa0fe : add byte ptr [rax], al ; mov eax, 0x10a ; syscall ; cmp rax, -0xfff ; jae 0xfa121 ; ret
0x00000000001092de : add byte ptr [rax], al ; mov eax, 0x123 ; syscall ; cmp rax, -0xfff ; jae 0x109301 ; ret
0x00000000000f8fce : add byte ptr [rax], al ; mov eax, 0x124 ; syscall ; cmp rax, -0xfff ; jae 0xf8ff1 ; ret
0x00000000000f902e : add byte ptr [rax], al ; mov eax, 0x125 ; syscall ; cmp rax, -0xfff ; jae 0xf9051 ; ret
0x000000000010945e : add byte ptr [rax], al ; mov eax, 0x126 ; syscall ; cmp rax, -0xfff ; jae 0x109481 ; ret
0x000000000010987e : add byte ptr [rax], al ; mov eax, 0x12c ; syscall ; cmp rax, -0xfff ; jae 0x1098a1 ; ret
0x000000000010921e : add byte ptr [rax], al ; mov eax, 0x131 ; syscall ; cmp rax, -0xfff ; jae 0x109241 ; ret
0x00000000000fedee : add byte ptr [rax], al ; mov eax, 0x132 ; syscall ; cmp rax, -0xfff ; jae 0xfee11 ; ret
0x000000000010993e : add byte ptr [rax], al ; mov eax, 0x134 ; syscall ; cmp rax, -0xfff ; jae 0x109961 ; ret
0x00000000000f893e : add byte ptr [rax], al ; mov eax, 0x15 ; syscall ; cmp rax, -0xfff ; jae 0xf8961 ; ret
0x0000000000089ade : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x00000000000f8ffe : add byte ptr [rax], al ; mov eax, 0x16 ; syscall ; cmp rax, -0xfff ; jae 0xf9021 ; ret
0x00000000000ec09e : add byte ptr [rax], al ; mov eax, 0x18 ; syscall ; cmp rax, -0xfff ; jae 0xec0c1 ; ret
0x0000000000102d5e : add byte ptr [rax], al ; mov eax, 0x1b ; syscall ; cmp rax, -0xfff ; jae 0x102d81 ; ret
0x0000000000102d2e : add byte ptr [rax], al ; mov eax, 0x1c ; syscall ; cmp rax, -0xfff ; jae 0x102d51 ; ret
0x000000000010a74e : add byte ptr [rax], al ; mov eax, 0x1d ; syscall ; cmp rax, -0xfff ; jae 0x10a771 ; ret
0x000000000010a77e : add byte ptr [rax], al ; mov eax, 0x1f ; syscall ; cmp rax, -0xfff ; jae 0x10a7a1 ; ret
0x00000000000f8f6e : add byte ptr [rax], al ; mov eax, 0x20 ; syscall ; cmp rax, -0xfff ; jae 0xf8f91 ; ret
0x00000000000f8f9e : add byte ptr [rax], al ; mov eax, 0x21 ; syscall ; cmp rax, -0xfff ; jae 0xf8fc1 ; ret
0x00000000000cd1de : add byte ptr [rax], al ; mov eax, 0x25 ; syscall ; cmp rax, -0xfff ; jae 0xcd201 ; ret
0x00000000000bfc9e : add byte ptr [rax], al ; mov eax, 0x26 ; syscall ; cmp rax, -0xfff ; jae 0xbfcc1 ; ret
0x0000000000109f7e : add byte ptr [rax], al ; mov eax, 0x29 ; syscall ; cmp rax, -0xfff ; jae 0x109fa1 ; ret
0x0000000000109a4e : add byte ptr [rax], al ; mov eax, 0x31 ; syscall ; cmp rax, -0xfff ; jae 0x109a71 ; ret
0x0000000000109b0e : add byte ptr [rax], al ; mov eax, 0x33 ; syscall ; cmp rax, -0xfff ; jae 0x109b31 ; ret
0x0000000000109ade : add byte ptr [rax], al ; mov eax, 0x34 ; syscall ; cmp rax, -0xfff ; jae 0x109b01 ; ret
0x00000000000cd75e : add byte ptr [rax], al ; mov eax, 0x3b ; syscall ; cmp rax, -0xfff ; jae 0xcd781 ; ret
0x000000000010a65e : add byte ptr [rax], al ; mov eax, 0x40 ; syscall ; cmp rax, -0xfff ; jae 0x10a681 ; ret
0x000000000010a62e : add byte ptr [rax], al ; mov eax, 0x41 ; syscall ; cmp rax, -0xfff ; jae 0x10a651 ; ret
0x000000000010a71e : add byte ptr [rax], al ; mov eax, 0x43 ; syscall ; cmp rax, -0xfff ; jae 0x10a741 ; ret
0x000000000010a5fe : add byte ptr [rax], al ; mov eax, 0x47 ; syscall ; cmp rax, -0xfff ; jae 0x10a621 ; ret
0x00000000000f8dce : add byte ptr [rax], al ; mov eax, 0x49 ; syscall ; cmp rax, -0xfff ; jae 0xf8df1 ; ret
0x00000000001006ee : add byte ptr [rax], al ; mov eax, 0x4d ; syscall ; cmp rax, -0xfff ; jae 0x100711 ; ret
0x00000000000f90be : add byte ptr [rax], al ; mov eax, 0x50 ; syscall ; cmp rax, -0xfff ; jae 0xf90e1 ; ret
0x00000000000f90ee : add byte ptr [rax], al ; mov eax, 0x51 ; syscall ; cmp rax, -0xfff ; jae 0xf9111 ; ret
0x00000000000fa1ee : add byte ptr [rax], al ; mov eax, 0x54 ; syscall ; cmp rax, -0xfff ; jae 0xfa211 ; ret
0x00000000000fa06e : add byte ptr [rax], al ; mov eax, 0x56 ; syscall ; cmp rax, -0xfff ; jae 0xfa091 ; ret
0x00000000000fa12e : add byte ptr [rax], al ; mov eax, 0x59 ; syscall ; cmp rax, -0xfff ; jae 0xfa151 ; ret
0x00000000000f850e : add byte ptr [rax], al ; mov eax, 0x5a ; syscall ; cmp rax, -0xfff ; jae 0xf8531 ; ret
0x00000000000f853e : add byte ptr [rax], al ; mov eax, 0x5b ; syscall ; cmp rax, -0xfff ; jae 0xf8561 ; ret
0x00000000000f997e : add byte ptr [rax], al ; mov eax, 0x5d ; syscall ; cmp rax, -0xfff ; jae 0xf99a1 ; ret
0x00000000000f99ae : add byte ptr [rax], al ; mov eax, 0x5e ; syscall ; cmp rax, -0xfff ; jae 0xf99d1 ; ret
0x00000000000fdfae : add byte ptr [rax], al ; mov eax, 0x61 ; syscall ; cmp rax, -0xfff ; jae 0xfdfd1 ; ret
0x00000000000fe00e : add byte ptr [rax], al ; mov eax, 0x62 ; syscall ; cmp rax, -0xfff ; jae 0xfe031 ; ret
0x00000000000ce19e : add byte ptr [rax], al ; mov eax, 0x66 ; syscall ; ret
0x00000000001094be : add byte ptr [rax], al ; mov eax, 0x67 ; syscall ; cmp rax, -0xfff ; jae 0x1094e1 ; ret
0x00000000000ce1be : add byte ptr [rax], al ; mov eax, 0x68 ; syscall ; ret
0x00000000000ce1ae : add byte ptr [rax], al ; mov eax, 0x6b ; syscall ; ret
0x00000000000ce1ce : add byte ptr [rax], al ; mov eax, 0x6c ; syscall ; ret
0x00000000000ce3ae : add byte ptr [rax], al ; mov eax, 0x6d ; syscall ; cmp rax, -0xfff ; jae 0xce3d1 ; ret
0x00000000000ce3de : add byte ptr [rax], al ; mov eax, 0x6f ; syscall ; ret
0x00000000000ce43e : add byte ptr [rax], al ; mov eax, 0x70 ; syscall ; cmp rax, -0xfff ; jae 0xce461 ; ret
0x00000000000ce1de : add byte ptr [rax], al ; mov eax, 0x73 ; syscall ; cmp rax, -0xfff ; jae 0xce201 ; ret
0x00000000000ce46e : add byte ptr [rax], al ; mov eax, 0x76 ; syscall ; cmp rax, -0xfff ; jae 0xce491 ; ret
0x00000000000ce49e : add byte ptr [rax], al ; mov eax, 0x78 ; syscall ; cmp rax, -0xfff ; jae 0xce4c1 ; ret
0x00000000000ce37e : add byte ptr [rax], al ; mov eax, 0x79 ; syscall ; cmp rax, -0xfff ; jae 0xce3a1 ; ret
0x0000000000108e3e : add byte ptr [rax], al ; mov eax, 0x7a ; syscall ; cmp rax, -0xfff ; jae 0x108e61 ; ret
0x0000000000108e6e : add byte ptr [rax], al ; mov eax, 0x7b ; syscall ; cmp rax, -0xfff ; jae 0x108e91 ; ret
0x00000000000ce40e : add byte ptr [rax], al ; mov eax, 0x7c ; syscall ; cmp rax, -0xfff ; jae 0xce431 ; ret
0x00000000001091be : add byte ptr [rax], al ; mov eax, 0x7d ; syscall ; cmp rax, -0xfff ; jae 0x1091e1 ; ret
0x00000000001091ee : add byte ptr [rax], al ; mov eax, 0x7e ; syscall ; cmp rax, -0xfff ; jae 0x109211 ; ret
0x00000000000ce8c9 : add byte ptr [rax], al ; mov eax, 0x7f ; ret
0x0000000000035b1d : add byte ptr [rax], al ; mov eax, 0x82 ; syscall ; cmp rax, -0x1000 ; ja 0x35b41 ; ret
0x00000000000f816e : add byte ptr [rax], al ; mov eax, 0x84 ; syscall ; cmp rax, -0xfff ; jae 0xf8191 ; ret
0x000000000010975e : add byte ptr [rax], al ; mov eax, 0x86 ; syscall ; cmp rax, -0xfff ; jae 0x109781 ; ret
0x00000000000f843e : add byte ptr [rax], al ; mov eax, 0x8a ; syscall ; cmp rax, -0xfff ; jae 0xf8461 ; ret
0x00000000000fe39e : add byte ptr [rax], al ; mov eax, 0x8d ; syscall ; cmp rax, -0xfff ; jae 0xfe3c1 ; ret
0x00000000000ebfde : add byte ptr [rax], al ; mov eax, 0x8e ; syscall ; cmp rax, -0xfff ; jae 0xec001 ; ret
0x00000000000ec00e : add byte ptr [rax], al ; mov eax, 0x8f ; syscall ; cmp rax, -0xfff ; jae 0xec031 ; ret
0x00000000000ec03e : add byte ptr [rax], al ; mov eax, 0x90 ; syscall ; cmp rax, -0xfff ; jae 0xec061 ; ret
0x00000000000ec06e : add byte ptr [rax], al ; mov eax, 0x91 ; syscall ; cmp rax, -0xfff ; jae 0xec091 ; ret
0x00000000000ec0ce : add byte ptr [rax], al ; mov eax, 0x92 ; syscall ; cmp rax, -0xfff ; jae 0xec0f1 ; ret
0x00000000000ec0fe : add byte ptr [rax], al ; mov eax, 0x93 ; syscall ; cmp rax, -0xfff ; jae 0xec121 ; ret
0x00000000000ec12e : add byte ptr [rax], al ; mov eax, 0x94 ; syscall ; cmp rax, -0xfff ; jae 0xec151 ; ret
0x0000000000102dee : add byte ptr [rax], al ; mov eax, 0x96 ; syscall ; cmp rax, -0xfff ; jae 0x102e11 ; ret
0x0000000000102e1e : add byte ptr [rax], al ; mov eax, 0x97 ; syscall ; cmp rax, -0xfff ; jae 0x102e41 ; ret
0x0000000000102e4e : add byte ptr [rax], al ; mov eax, 0x98 ; syscall ; cmp rax, -0xfff ; jae 0x102e71 ; ret
0x000000000010911e : add byte ptr [rax], al ; mov eax, 0x9a ; syscall ; cmp rax, -0xfff ; jae 0x109141 ; ret
0x000000000010957e : add byte ptr [rax], al ; mov eax, 0x9b ; syscall ; cmp rax, -0xfff ; jae 0x1095a1 ; ret
0x00000000001090ee : add byte ptr [rax], al ; mov eax, 0x9e ; syscall ; cmp rax, -0xfff ; jae 0x109111 ; ret
0x00000000000fb266 : add byte ptr [rax], al ; mov eax, 0xa ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000102c9e : add byte ptr [rax], al ; mov eax, 0xa ; syscall ; cmp rax, -0xfff ; jae 0x102cc1 ; ret
0x00000000000fdfde : add byte ptr [rax], al ; mov eax, 0xa0 ; syscall ; cmp rax, -0xfff ; jae 0xfe001 ; ret
0x00000000000fecce : add byte ptr [rax], al ; mov eax, 0xa1 ; syscall ; cmp rax, -0xfff ; jae 0xfecf1 ; ret
0x00000000000fed5e : add byte ptr [rax], al ; mov eax, 0xa2 ; syscall ; cmp rax, -0xfff ; jae 0xfed81 ; ret
0x00000000000fec9e : add byte ptr [rax], al ; mov eax, 0xa3 ; syscall ; cmp rax, -0xfff ; jae 0xfecc1 ; ret
0x00000000000bc8fe : add byte ptr [rax], al ; mov eax, 0xa4 ; syscall ; cmp rax, -0xfff ; jae 0xbc921 ; ret
0x0000000000108dde : add byte ptr [rax], al ; mov eax, 0xa6 ; syscall ; cmp rax, -0xfff ; jae 0x108e01 ; ret
0x00000000000ff18e : add byte ptr [rax], al ; mov eax, 0xa7 ; syscall ; cmp rax, -0xfff ; jae 0xff1b1 ; ret
0x00000000000ff1be : add byte ptr [rax], al ; mov eax, 0xa8 ; syscall ; cmp rax, -0xfff ; jae 0xff1e1 ; ret
0x00000000000fea6e : add byte ptr [rax], al ; mov eax, 0xaa ; syscall ; cmp rax, -0xfff ; jae 0xfea91 ; ret
0x00000000000feb0e : add byte ptr [rax], al ; mov eax, 0xab ; syscall ; cmp rax, -0xfff ; jae 0xfeb31 ; ret
0x0000000000108c7e : add byte ptr [rax], al ; mov eax, 0xac ; syscall ; cmp rax, -0xfff ; jae 0x108ca1 ; ret
0x000000000010924e : add byte ptr [rax], al ; mov eax, 0xae ; syscall ; cmp rax, -0xfff ; jae 0x109271 ; ret
0x0000000000102c6e : add byte ptr [rax], al ; mov eax, 0xb ; syscall ; cmp rax, -0xfff ; jae 0x102c91 ; ret
0x000000000010927e : add byte ptr [rax], al ; mov eax, 0xb0 ; syscall ; cmp rax, -0xfff ; jae 0x1092a1 ; ret
0x0000000000108e0e : add byte ptr [rax], al ; mov eax, 0xbb ; syscall ; cmp rax, -0xfff ; jae 0x108e31 ; ret
0x00000000000dfc86 : add byte ptr [rax], al ; mov eax, 0xc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dfd6e : add byte ptr [rax], al ; mov eax, 0xc ; ret
0x000000000010763e : add byte ptr [rax], al ; mov eax, 0xc6 ; syscall ; cmp rax, -0xfff ; jae 0x107661 ; ret
0x000000000010751e : add byte ptr [rax], al ; mov eax, 0xc7 ; syscall ; cmp rax, -0xfff ; jae 0x107541 ; ret
0x000000000011b1ae : add byte ptr [rax], al ; mov eax, 0xca ; ret
0x0000000000116d60 : add byte ptr [rax], al ; mov eax, 0xca ; syscall ; pop rdx ; pop rsi ; ret
0x00000000001092ae : add byte ptr [rax], al ; mov eax, 0xd5 ; syscall ; cmp rax, -0xfff ; jae 0x1092d1 ; ret
0x000000000010914e : add byte ptr [rax], al ; mov eax, 0xe4 ; syscall ; ret
0x00000000000ce98e : add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x000000000010942e : add byte ptr [rax], al ; mov eax, 0xfd ; syscall ; cmp rax, -0xfff ; jae 0x109451 ; ret
0x000000000010948e : add byte ptr [rax], al ; mov eax, 0xff ; syscall ; cmp rax, -0xfff ; jae 0x1094b1 ; ret
0x000000000007354e : add byte ptr [rax], al ; mov eax, 0xffffffff ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000056846 : add byte ptr [rax], al ; mov eax, 0xffffffff ; mov qword ptr [rdi], r10 ; ret
0x00000000000fa3d9 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000036f61 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000029b4e : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011b407 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00000000000341fc : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000357cc : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000ba7bb : add byte ptr [rax], al ; mov eax, 1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006f8b5 : add byte ptr [rax], al ; mov eax, 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000100d43 : add byte ptr [rax], al ; mov eax, 1 ; add rsp, 8 ; ret
0x0000000000170d1e : add byte ptr [rax], al ; mov eax, 1 ; jg 0x170d3b ; neg eax ; ret
0x00000000000abd1e : add byte ptr [rax], al ; mov eax, 1 ; jg 0xabd34 ; neg eax ; ret
0x0000000000132534 : add byte ptr [rax], al ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013a12d : add byte ptr [rax], al ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000004a4fb : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000013074e : add byte ptr [rax], al ; mov eax, 2 ; ret
0x0000000000108d9e : add byte ptr [rax], al ; mov eax, 8 ; syscall ; cmp rax, -0xfff ; jae 0x108dc1 ; ret
0x0000000000138275 : add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x10] ; bswap eax ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x00000000001074aa : add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x00000000001382ad : add byte ptr [rax], al ; mov eax, dword ptr [rax + 0xc] ; bswap eax ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x0000000000138235 : add byte ptr [rax], al ; mov eax, dword ptr [rax] ; bswap eax ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x00000000001682be : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x00000000001682ce : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x0000000000163f8e : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000134c1e : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000001682fe : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x000000000016b66e : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000000f7e2e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x108] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000007ee7e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000116e2e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0x116e4a ; ret
0x00000000000abc3e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x14] ; cmp eax, dword ptr [rsi + 0x14] ; jne 0xabd2e ; ret
0x00000000000abc6e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x1c] ; cmp eax, dword ptr [rsi + 0x1c] ; jne 0xabd2e ; ret
0x000000000012ff8c : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x00000000000abc9e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0xabd2a ; ret
0x000000000013ea3e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000012ffa6 : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x30] ; test eax, eax ; jne 0x12ffff ; mov dword ptr [rsi], 0 ; ret
0x00000000000abcee : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xabd2a ; ret
0x00000000000d8106 : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x0000000000137996 : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x58] ; bswap eax ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x00000000000abc0e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0xc] ; cmp eax, dword ptr [rsi + 0xc] ; jne 0xabd2e ; ret
0x00000000000abbde : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; cmp eax, dword ptr [rsi + 4] ; jne 0xabd2e ; ret
0x00000000000f735e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000fd96e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x0000000000170bfe : add byte ptr [rax], al ; mov eax, dword ptr [rdi - 0xc] ; cmp eax, dword ptr [rsi - 0xc] ; jne 0x170d2e ; ret
0x0000000000170c2e : add byte ptr [rax], al ; mov eax, dword ptr [rdi - 4] ; cmp eax, dword ptr [rsi - 4] ; jne 0x170d2e ; ret
0x0000000000078cee : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x0000000000078cbe : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x000000000012fee6 : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; mov dword ptr [rsi + 8], 0 ; test eax, eax ; je 0x12ff11 ; xor eax, eax ; ret
0x00000000000798fe : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x00000000000fd97e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; js 0xfd9a0 ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x0000000000075ede : add byte ptr [rax], al ; mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000014713e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x27f5ea] ; test eax, eax ; jne 0x14715e ; xor eax, eax ; ret
0x000000000014710e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x27f61a] ; test eax, eax ; jne 0x14712e ; xor eax, eax ; ret
0x00000000001470de : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x27f64a] ; test eax, eax ; jne 0x1470fe ; xor eax, eax ; ret
0x00000000001470ae : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x27f67a] ; test eax, eax ; jne 0x1470ce ; xor eax, eax ; ret
0x000000000014707e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x27f6aa] ; test eax, eax ; jne 0x14709e ; xor eax, eax ; ret
0x000000000014704e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x27f6da] ; test eax, eax ; jne 0x14706e ; xor eax, eax ; ret
0x0000000000116cee : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afa3a] ; test eax, eax ; jne 0x116d0e ; xor eax, eax ; ret
0x0000000000116cbe : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afa6a] ; test eax, eax ; jne 0x116cde ; xor eax, eax ; ret
0x0000000000116c8e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afa9a] ; test eax, eax ; jne 0x116cae ; xor eax, eax ; ret
0x0000000000116c5e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afaca] ; test eax, eax ; jne 0x116c7e ; xor eax, eax ; ret
0x0000000000116c2e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afafa] ; test eax, eax ; jne 0x116c4e ; xor eax, eax ; ret
0x0000000000116bfe : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afb2a] ; test eax, eax ; jne 0x116c1e ; xor eax, eax ; ret
0x0000000000116bce : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afb5a] ; test eax, eax ; jne 0x116bee ; xor eax, eax ; ret
0x0000000000116b9e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afb8a] ; test eax, eax ; jne 0x116bbe ; xor eax, eax ; ret
0x0000000000116b6e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afbba] ; test eax, eax ; jne 0x116b8e ; xor eax, eax ; ret
0x0000000000116b0e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afc1a] ; test eax, eax ; jne 0x116b2e ; xor eax, eax ; ret
0x0000000000116ade : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afc4a] ; test eax, eax ; jne 0x116afe ; xor eax, eax ; ret
0x0000000000116aae : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afc7a] ; test eax, eax ; jne 0x116ace ; xor eax, eax ; ret
0x0000000000116a7e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afcaa] ; test eax, eax ; jne 0x116a9e ; xor eax, eax ; ret
0x0000000000116a4e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afcda] ; test eax, eax ; jne 0x116a6e ; xor eax, eax ; ret
0x0000000000116a1e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afd0a] ; test eax, eax ; jne 0x116a3e ; xor eax, eax ; ret
0x00000000001169ee : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afd3a] ; test eax, eax ; jne 0x116a0e ; xor eax, eax ; ret
0x00000000001169be : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afd6a] ; test eax, eax ; jne 0x1169de ; xor eax, eax ; ret
0x000000000011698e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afd9a] ; test eax, eax ; jne 0x1169ae ; xor eax, eax ; ret
0x000000000011695e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afdca] ; test eax, eax ; jne 0x11697e ; xor eax, eax ; ret
0x000000000011692e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afdfa] ; test eax, eax ; jne 0x11694e ; xor eax, eax ; ret
0x00000000001168fe : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afe2a] ; test eax, eax ; jne 0x11691e ; xor eax, eax ; ret
0x00000000001168ce : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afe5a] ; test eax, eax ; jne 0x1168ee ; xor eax, eax ; ret
0x000000000011689e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afe8a] ; test eax, eax ; jne 0x1168be ; xor eax, eax ; ret
0x000000000011686e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afeba] ; test eax, eax ; jne 0x11688e ; xor eax, eax ; ret
0x000000000011683e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2afeea] ; test eax, eax ; jne 0x11685e ; xor eax, eax ; ret
0x000000000011680e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2aff1a] ; test eax, eax ; jne 0x11682e ; xor eax, eax ; ret
0x00000000001167de : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2aff4a] ; test eax, eax ; jne 0x1167fe ; xor eax, eax ; ret
0x00000000001167ae : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2aff7a] ; test eax, eax ; jne 0x1167ce ; xor eax, eax ; ret
0x000000000011677e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2affaa] ; test eax, eax ; jne 0x11679e ; xor eax, eax ; ret
0x000000000008807e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x3390be] ; test eax, eax ; js 0x8809d ; ret
0x0000000000036bce : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x38a4b2] ; ret
0x00000000000f7f1e : add byte ptr [rax], al ; mov eax, dword ptr [rsi] ; mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x00000000000a084e : add byte ptr [rax], al ; mov eax, dword ptr [rsp + 0x10] ; mov byte ptr [rdi + 4], cl ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000351fe : add byte ptr [rax], al ; mov eax, dword ptr [rsp + 0x10] ; or eax, 0xffff8000 ; inc eax ; shr eax, 0x1f ; ret
0x000000000004539d : add byte ptr [rax], al ; mov eax, dword ptr [rsp + 0x30] ; add rsp, 0x170 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010a2c9 : add byte ptr [rax], al ; mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013e8ba : add byte ptr [rax], al ; mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cd24e : add byte ptr [rax], al ; mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000034393 : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000078060 : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000715f1 : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000334ec : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f8acd : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000102b00 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000035c28 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000008aa4f : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x00000000000996a1 : add byte ptr [rax], al ; mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000aacb6 : add byte ptr [rax], al ; mov eax, ecx ; shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x000000000003a8fe : add byte ptr [rax], al ; mov eax, edi ; cdq ; idiv esi ; shl rdx, 0x20 ; mov eax, eax ; or rax, rdx ; ret
0x0000000000020dac : add byte ptr [rax], al ; mov eax, edi ; ret
0x000000000010e99d : add byte ptr [rax], al ; mov eax, edx ; add rsp, 8 ; ret
0x0000000000034f2e : add byte ptr [rax], al ; mov eax, edx ; and eax, 0x80000000 ; movd xmm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x00000000000c9553 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ca1e9 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000055a92 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000076d8e : add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000011883e : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001189f7 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000006c5d1 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x0000000000053769 : add byte ptr [rax], al ; mov eax, esi ; ret
0x000000000011b29e : add byte ptr [rax], al ; mov eax, esi ; shl edi, 0x18 ; and eax, 0xffffff ; or eax, edi ; bswap eax ; ret
0x00000000000257c5 : add byte ptr [rax], al ; mov eax, r11d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f5d82 : add byte ptr [rax], al ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000508f2 : add byte ptr [rax], al ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001369b3 : add byte ptr [rax], al ; mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fea3c : add byte ptr [rax], al ; mov eax, r14d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000024f3c : add byte ptr [rax], al ; mov eax, r15d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000724ac : add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; ret
0x000000000017b682 : add byte ptr [rax], al ; mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x0000000000071fbe : add byte ptr [rax], al ; mov ebp, 0xffffffff ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010e8c5 : add byte ptr [rax], al ; mov ebp, 0xffffffff ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001a64e2 : add byte ptr [rax], al ; mov ebx, cs ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x000000000017b3d2 : add byte ptr [rax], al ; mov ecx, 0xbc00000d ; or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x00000000001a72e2 : add byte ptr [rax], al ; mov ecx, ds ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0xf], dl ; jmp qword ptr [rcx]
0x00000000000e25e0 : add byte ptr [rax], al ; mov ecx, dword ptr [rbp + 4] ; test ecx, ecx ; jle 0xe266d ; xor ebx, ebx ; mov rdx, rax ; jmp 0xe260c
0x00000000000abba6 : add byte ptr [rax], al ; mov ecx, dword ptr [rsi + 0xc] ; cmp dword ptr [rdi + 0xc], ecx ; jne 0xabd30 ; xor eax, eax ; ret
0x000000000016d8df : add byte ptr [rax], al ; mov ecx, dword ptr [rsi - 4] ; cmp ecx, dword ptr [rdi - 4] ; jne 0x16db26 ; xor eax, eax ; ret
0x00000000000a76ae : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a60ae : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000a84de : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a6d7e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a9f4e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a60be : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov dx, word ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a76de : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a850e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a9f7e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x000000000005371b : add byte ptr [rax], al ; mov edi, 0x100 ; mov qword ptr [rsp + 8], rdx ; call 0x1f98e
0x00000000000f76b4 : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000047bc7 : add byte ptr [rax], al ; mov edi, dword ptr [rsp + 0x3c] ; call rax
0x0000000000091a3e : add byte ptr [rax], al ; mov edx, 0xffffffff ; bsf eax, edi ; cmove eax, edx ; add eax, 1 ; ret
0x0000000000143ed3 : add byte ptr [rax], al ; mov edx, 0xffffffff ; mov eax, edx ; ret
0x00000000000ca197 : add byte ptr [rax], al ; mov edx, 0xffffffff ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000116d5b : add byte ptr [rax], al ; mov edx, 1 ; mov eax, 0xca ; syscall ; pop rdx ; pop rsi ; ret
0x00000000000ac9f6 : add byte ptr [rax], al ; mov edx, dword ptr [rax + rcx] ; add rax, 4 ; test edx, edx ; mov dword ptr [rax], edx ; jne 0xaca08 ; ret
0x000000000015b50e : add byte ptr [rax], al ; mov edx, dword ptr [rsi + 1] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b49e : add byte ptr [rax], al ; mov edx, dword ptr [rsi + 2] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b42e : add byte ptr [rax], al ; mov edx, dword ptr [rsi + 3] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015ae5e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155a9e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 5] ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155c9e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 6] ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155e9e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 7] ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000a84ce : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a609e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000a9f3e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x0000000000072655 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x725fd
0x00000000000727de : add byte ptr [rax], al ; mov edx, eax ; jmp 0x72784
0x0000000000077479 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x77422
0x0000000000077dc9 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x77d72
0x0000000000104b81 : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000104d6e : add byte ptr [rax], al ; mov esi, 1 ; mov rdi, r12 ; call rbx
0x0000000000104c3a : add byte ptr [rax], al ; mov esi, 1 ; mov rdi, r13 ; call rbx
0x0000000000104bb2 : add byte ptr [rax], al ; mov esi, 1 ; mov rdi, r14 ; call rbx
0x0000000000104fec : add byte ptr [rax], al ; mov esi, 2 ; mov rdi, r12 ; call rbx
0x0000000000104d5f : add byte ptr [rax], al ; mov esi, 2 ; mov rdi, r13 ; call rbx
0x0000000000104c2b : add byte ptr [rax], al ; mov esi, 2 ; mov rdi, r14 ; call rbx
0x0000000000104ba3 : add byte ptr [rax], al ; mov esi, 2 ; mov rdi, r15 ; call rbx
0x000000000013a967 : add byte ptr [rax], al ; mov esi, 3 ; mov rdi, r15 ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000012f190 : add byte ptr [rax], al ; mov esi, 4 ; mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00000000001b7a12 : add byte ptr [rax], al ; mov esp, 0x180001e0 ; clc ; call qword ptr [rdx]
0x00000000001a6512 : add byte ptr [rax], al ; mov esp, 0x280000cb ; ja 0x1a6514 ; call qword ptr [rdx]
0x000000000019ca12 : add byte ptr [rax], al ; mov esp, 0xa8000030 ; fsubp st(1) ; call qword ptr [rcx]
0x00000000001a7e12 : add byte ptr [rax], al ; mov esp, 0xb80000e4 ; adc dl, dh ; call qword ptr [rbx]
0x00000000001abe12 : add byte ptr [rax], al ; mov esp, 0xb8000124 ; loop 0x1abe18 ; jmp qword ptr [rcx]
0x000000000017f076 : add byte ptr [rax], al ; mov esp, 0xbe000005 ; add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x00000000001aa812 : add byte ptr [rax], al ; mov esp, 0xd800010e ; stc ; jmp qword ptr [rdi]
0x00000000001ae612 : add byte ptr [rax], al ; mov esp, 0xd800014c ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000000983f0 : add byte ptr [rax], al ; mov qword ptr [r12], r13 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000742a4 : add byte ptr [rax], al ; mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000007dfa7 : add byte ptr [rax], al ; mov qword ptr [rax + 8], 0 ; ret
0x000000000013595b : add byte ptr [rax], al ; mov qword ptr [rbp + 0x50], rax ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000059801 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x1078], 0 ; jmp rax
0x0000000000116288 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x70], rdx ; mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000115a08 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x00000000001251a0 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x78], r10 ; call 0x913b8
0x0000000000146243 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000001461fb : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000001319c1 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rcx ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000c85e3 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rdx ; add rsp, 0xd0 ; pop rbx ; ret
0x000000000010ff00 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x40], rax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007d328 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x000000000007a682 : add byte ptr [rax], al ; mov qword ptr [rbx + 8], rax ; mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000021620 : add byte ptr [rax], al ; mov qword ptr [rbx], 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014646e : add byte ptr [rax], al ; mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000008b9e0 : add byte ptr [rax], al ; mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ba3fe : add byte ptr [rax], al ; mov qword ptr [rbx], rsi ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000006eeae : add byte ptr [rax], al ; mov qword ptr [rcx + 0x130], rdx ; ret
0x0000000000165f9e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x0000000000165fbe : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x0000000000165fce : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x0000000000165fde : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x0000000000165fee : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x0000000000165ffe : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000016600e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x0000000000165fae : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x0000000000165f8e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000013e69e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x18], rsi ; mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000013ee12 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x20], 0 ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000100785 : add byte ptr [rax], al ; mov qword ptr [rdi + 8], 0 ; ret
0x00000000001378fc : add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; mov qword ptr [rdi + 0x10], rdx ; mov eax, 1 ; ret
0x000000000013ee1a : add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a709e : add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x000000000005689e : add byte ptr [rax], al ; mov qword ptr [rdi], rcx ; mov eax, 0xffffffff ; ret
0x00000000000a70be : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a70de : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a70ee : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a70fe : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a710e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a70ce : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a70ae : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000004a518 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000007a002 : add byte ptr [rax], al ; mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x000000000006c3b1 : add byte ptr [rax], al ; mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; ret
0x0000000000060ecf : add byte ptr [rax], al ; mov qword ptr [rdx + 8], rdi ; mov rsi, qword ptr [rbp - 0x660] ; xor edx, edx ; jmp 0x5d0ff
0x000000000006c405 : add byte ptr [rax], al ; mov qword ptr [rdx + 8], rsi ; mov dword ptr [rdx + 4], 1 ; ret
0x0000000000143ecc : add byte ptr [rax], al ; mov qword ptr [rdx], 0 ; mov edx, 0xffffffff ; mov eax, edx ; ret
0x0000000000077b7c : add byte ptr [rax], al ; mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000134b8b : add byte ptr [rax], al ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x000000000010afff : add byte ptr [rax], al ; mov qword ptr [rip + 0x2b6214], 0 ; pop rbp ; ret
0x00000000000ffab2 : add byte ptr [rax], al ; mov qword ptr [rip + 0x2c2cc5], rax ; mov rdx, rax ; jmp 0xffa5a
0x0000000000101040 : add byte ptr [rax], al ; mov qword ptr [rip + 0x2c30a3], 0 ; add rsp, 8 ; ret
0x000000000007f242 : add byte ptr [rax], al ; mov qword ptr [rip + 0x3444f9], 0 ; ret
0x000000000007f1cf : add byte ptr [rax], al ; mov qword ptr [rip + 0x344570], rdx ; add dword ptr [rip + 0x344565], 1 ; ret
0x000000000003b544 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; mov eax, 0xb ; mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x000000000012ffcc : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000003b503 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x00000000000f728c : add byte ptr [rax], al ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x0000000000130064 : add byte ptr [rax], al ; mov qword ptr [rsi + 8], 0 ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000ea1c4 : add byte ptr [rax], al ; mov qword ptr [rsi + 8], 0 ; ret
0x000000000012ffc4 : add byte ptr [rax], al ; mov qword ptr [rsi + 8], 1 ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000012ff9c : add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x0000000000134a83 : add byte ptr [rax], al ; mov qword ptr [rsi + 8], rdx ; mov rax, qword ptr [rax + 0xa0] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000011b1be : add byte ptr [rax], al ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x0000000000053720 : add byte ptr [rax], al ; mov qword ptr [rsp + 8], rdx ; call 0x1f989
0x000000000008000e : add byte ptr [rax], al ; mov qword ptr fs:[r9], rdx ; mov rax, rdx ; add rsp, 8 ; ret
0x000000000003a876 : add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x000000000013ab3b : add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000002e0fe : add byte ptr [rax], al ; mov qword ptr fs:[rcx], rdx ; mov rdx, qword ptr [rip + 0x392e25] ; mov qword ptr fs:[rdx], rax ; ret
0x00000000000d0936 : add byte ptr [rax], al ; mov r12, qword ptr [r15 + 0x10] ; xor eax, eax ; jmp 0xd04f1
0x000000000001ff0f : add byte ptr [rax], al ; mov r12, rax ; call 0xaac2b
0x000000000004807f : add byte ptr [rax], al ; mov r8, qword ptr [rdi + 0x28] ; mov r9, qword ptr [rdi + 0x30] ; mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x00000000000483af : add byte ptr [rax], al ; mov r8, qword ptr [rsi + 0x28] ; mov r9, qword ptr [rsi + 0x30] ; mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x000000000004ee09 : add byte ptr [rax], al ; mov r8d, 1 ; jmp rax
0x00000000000356d4 : add byte ptr [rax], al ; mov rax, -1 ; ret
0x00000000000ac02e : add byte ptr [rax], al ; mov rax, 1 ; ret
0x00000000000ac03e : add byte ptr [rax], al ; mov rax, 2 ; ret
0x00000000000ac04e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x00000000000ac05e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000000ac06e : add byte ptr [rax], al ; mov rax, 5 ; ret
0x00000000000ac07e : add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000000ac08e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x00000000000204a4 : add byte ptr [rax], al ; mov rax, qword ptr [r13 + 0x18] ; test rax, rax ; je 0x204c2 ; mov rdi, rbp ; call rax
0x0000000000075f60 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000116676 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000012f973 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12f991 ; mov rdi, rbx ; call rax
0x000000000012fce5 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12fd03 ; mov rdi, rbx ; call rax
0x00000000001354e1 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x1354ff ; mov rdi, r12 ; call rax
0x0000000000136daf : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x136dcd ; mov rdi, rbp ; call rax
0x0000000000107756 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x000000000003a990 : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000073493 : add byte ptr [rax], al ; mov rax, qword ptr [rbp + 0x18] ; mov esi, r12d ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000007d42e : add byte ptr [rax], al ; mov rax, qword ptr [rbp + 0x20] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000007366a : add byte ptr [rax], al ; mov rax, qword ptr [rbp + 0x28] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000013d47e : add byte ptr [rax], al ; mov rax, qword ptr [rbx + 8] ; lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000130e1e : add byte ptr [rax], al ; mov rax, qword ptr [rbx + 8] ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x000000000007c673 : add byte ptr [rax], al ; mov rax, qword ptr [rbx + 8] ; pop rbx ; pop rbp ; movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000139429 : add byte ptr [rax], al ; mov rax, qword ptr [rbx] ; add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x00000000000cd4d6 : add byte ptr [rax], al ; mov rax, qword ptr [rbx] ; mov rdx, qword ptr [rax + 0x18] ; test rdx, rdx ; je 0xcd4f7 ; call rdx
0x000000000016820e : add byte ptr [rax], al ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x000000000016b68e : add byte ptr [rax], al ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000163ede : add byte ptr [rax], al ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000013e65e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000007685e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007f15e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x00000000000740ce : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; cmp qword ptr [rax + 0x30], 0 ; je 0x740f0 ; ret
0x000000000007b50e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; cmp rax, qword ptr [rdi + 0x10] ; jae 0x7b52f ; movzx eax, byte ptr [rax] ; ret
0x0000000000130dbe : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013dd7e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; mov qword ptr [rsp + 8], r8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013d466 : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x0000000000078d7f : add byte ptr [rax], al ; mov rax, qword ptr [rdx + 0x20] ; sub rax, qword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x0000000000078c6f : add byte ptr [rax], al ; mov rax, qword ptr [rdx + 0x38] ; sub rax, qword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x00000000001379ae : add byte ptr [rax], al ; mov rax, qword ptr [rdx] ; bswap eax ; mov dword ptr [rdi + 0x58], eax ; mov eax, 1 ; ret
0x0000000000143b21 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x27e8c6] ; call qword ptr [rax]
0x00000000001434f4 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x27eef3] ; call qword ptr [rax]
0x000000000013b79e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2856d1] ; cmp dword ptr fs:[rax], 0x18 ; je 0x13b7bf ; ret
0x000000000013abbe : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2863c1] ; add rsp, 8 ; ret
0x000000000012b0be : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x295f21] ; mov rax, qword ptr fs:[rax] ; ret
0x000000000010b476 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2b8f59] ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x000000000010b366 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2b9069] ; mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x0000000000103ade : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2bd391] ; mov dword ptr fs:[rax], 0x16 ; ret
0x0000000000102eb5 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2bf8ca] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bd493 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x30903c] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000080a30 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x340477] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x80a54 ; call rax
0x000000000007f13e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3433b9] ; ret
0x000000000002d939 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3934a6] ; mov qword ptr [rax], rdx ; ret
0x00000000000215ce : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3a4d39] ; ret
0x00000000000215be : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3a4d59] ; ret
0x000000000002deae : add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000002e01e : add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e02e : add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002cb36 : add byte ptr [rax], al ; mov rax, qword ptr [rsi + rax*8 + 0x80] ; ret
0x0000000000109d33 : add byte ptr [rax], al ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003b2a6 : add byte ptr [rax], al ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000ff3ed : add byte ptr [rax], al ; mov rax, qword ptr [rsp - 0x50] ; ret
0x0000000000135ff5 : add byte ptr [rax], al ; mov rax, qword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000fb82d : add byte ptr [rax], al ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ad39a : add byte ptr [rax], al ; mov rax, r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ffdd0 : add byte ptr [rax], al ; mov rax, r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ad659 : add byte ptr [rax], al ; mov rax, r15 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000808fa : add byte ptr [rax], al ; mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003aefe : add byte ptr [rax], al ; mov rax, r8 ; mov qword ptr [rdi + 8], rdx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000776d8 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007af4c : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002aa20 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000135ed0 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000070124 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006bb6d : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000003ad1c : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000034194 : add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000003a91e : add byte ptr [rax], al ; mov rax, rdi ; cqo ; idiv rsi ; ret
0x0000000000108ebe : add byte ptr [rax], al ; mov rax, rdi ; movzx edi, dil ; shr rax, 0xc ; xor al, al ; or eax, edi ; ret
0x0000000000071da4 : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000010937d : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x1093a0 ; ret
0x000000000010967d : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x1096a0 ; ret
0x000000000010970d : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x109730 ; ret
0x00000000001097cd : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x1097f0 ; ret
0x0000000000109917 : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x10993a ; ret
0x0000000000109a27 : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x109a4a ; ret
0x0000000000109ab7 : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x109ada ; ret
0x0000000000109c9d : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x109cc0 ; ret
0x0000000000109efd : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x109f20 ; ret
0x000000000010a54d : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x10a570 ; ret
0x000000000010a5ad : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x10a5d0 ; ret
0x0000000000143c9a : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000bc504 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000110671 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c86cb : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000006f7e4 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x00000000000c870e : add byte ptr [rax], al ; mov rax, rdx ; ret
0x0000000000076ef6 : add byte ptr [rax], al ; mov rax, rdx ; sar rax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000858de : add byte ptr [rax], al ; mov rax, rsi ; ret
0x00000000000c912a : add byte ptr [rax], al ; mov rbp, r13 ; mov rdi, rbx ; call r12
0x0000000000104acc : add byte ptr [rax], al ; mov rbp, rdi ; xor edx, edx ; xor esi, esi ; call rbx
0x00000000000fe081 : add byte ptr [rax], al ; mov rbx, -1 ; add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000fe502 : add byte ptr [rax], al ; mov rbx, -1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006eea7 : add byte ptr [rax], al ; mov rcx, qword ptr [rax + 0xa0] ; mov qword ptr [rcx + 0x130], rdx ; ret
0x00000000001554ce : add byte ptr [rax], al ; mov rcx, qword ptr [rsi - 0xa] ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001556ae : add byte ptr [rax], al ; mov rcx, qword ptr [rsi - 0xb] ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015588e : add byte ptr [rax], al ; mov rcx, qword ptr [rsi - 0xc] ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001552ee : add byte ptr [rax], al ; mov rcx, qword ptr [rsi - 9] ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a76fe : add byte ptr [rax], al ; mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a60ee : add byte ptr [rax], al ; mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000000a6dbe : add byte ptr [rax], al ; mov rcx, qword ptr [rsi] ; mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a60fe : add byte ptr [rax], al ; mov rcx, qword ptr [rsi] ; mov dx, word ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000150b8e : add byte ptr [rax], al ; mov rcx, rdx ; movzx eax, sil ; mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000009148f : add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000d024e : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x308] ; call r12
0x0000000000074675 : add byte ptr [rax], al ; mov rdi, qword ptr [rdx + 0x40] ; jmp 0x74647
0x00000000001236be : add byte ptr [rax], al ; mov rdi, qword ptr [rsp + 0x28] ; call 0x1f9c1
0x0000000000104d73 : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x000000000002f5fb : add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x0000000000104c3f : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x000000000012f0bb : add byte ptr [rax], al ; mov rdi, r13 ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000008b193 : add byte ptr [rax], al ; mov rdi, r13 ; mov rdx, rbp ; mov rsi, r12 ; call rax
0x0000000000104bb7 : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x000000000007bd45 : add byte ptr [rax], al ; mov rdi, r15 ; call 0x97fc7
0x0000000000104ba8 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x000000000012eef3 : add byte ptr [rax], al ; mov rdi, r15 ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000013a96c : add byte ptr [rax], al ; mov rdi, r15 ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x00000000001396d1 : add byte ptr [rax], al ; mov rdi, rax ; call qword ptr [r10]
0x00000000001397c3 : add byte ptr [rax], al ; mov rdi, rax ; lea r9, qword ptr [rsp + 0x14] ; call qword ptr [r10]
0x0000000000139d04 : add byte ptr [rax], al ; mov rdi, rax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x00000000001309fb : add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x0000000000104ffd : add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x000000000012f195 : add byte ptr [rax], al ; mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000021817 : add byte ptr [rax], al ; mov rdi, rbx ; and r12, 0xfffffffffffffff0 ; mov qword ptr [r12], rbx ; call 0x8da3f
0x0000000000139c55 : add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x000000000006da76 : add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x000000000006d76f : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000145d18 : add byte ptr [rax], al ; mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000012fbdd : add byte ptr [rax], al ; mov rdi, rbx ; mov rcx, qword ptr [rsp] ; call rcx
0x0000000000075f55 : add byte ptr [rax], al ; mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x130] ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000103d77 : add byte ptr [rax], al ; mov rdi, rbx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; jmp rax
0x00000000000fe82f : add byte ptr [rax], al ; mov rdi, rdx ; syscall ; cmp rax, -0x1000 ; ja 0xfe850 ; ret
0x00000000000fe8df : add byte ptr [rax], al ; mov rdi, rdx ; syscall ; cmp rax, -0x1000 ; ja 0xfe900 ; ret
0x000000000013d24e : add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x000000000006c3aa : add byte ptr [rax], al ; mov rdx, qword ptr [r9 + 0x88] ; mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; ret
0x000000000007ee9d : add byte ptr [rax], al ; mov rdx, qword ptr [rax + 8] ; jne 0x7eec0 ; sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000007466e : add byte ptr [rax], al ; mov rdx, qword ptr [rbx + 0xa0] ; mov rdi, qword ptr [rdx + 0x40] ; jmp 0x7464e
0x0000000000116e3e : add byte ptr [rax], al ; mov rdx, qword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x0000000000086690 : add byte ptr [rax], al ; mov rdx, qword ptr [rdx + 0x868] ; cmp rdx, r8 ; jne 0x8666f ; ret
0x00000000000e8f4e : add byte ptr [rax], al ; mov rdx, qword ptr [rip + 0x2d8051] ; mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x00000000000f7ee4 : add byte ptr [rax], al ; mov rdx, qword ptr [rsi + 0x78] ; mov qword ptr [rdi + 0x100], rdx ; ret
0x000000000015b34e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi + 1] ; mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b2de : add byte ptr [rax], al ; mov rdx, qword ptr [rsi + 2] ; mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b26e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi + 3] ; mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b1fe : add byte ptr [rax], al ; mov rdx, qword ptr [rsi + 4] ; mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b18e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi + 5] ; mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b11e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi + 6] ; mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b0ae : add byte ptr [rax], al ; mov rdx, qword ptr [rsi + 7] ; mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015ab5e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi - 0xa] ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015aade : add byte ptr [rax], al ; mov rdx, qword ptr [rsi - 0xb] ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015aa5e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi - 0xc] ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015512e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015abde : add byte ptr [rax], al ; mov rdx, qword ptr [rsi - 9] ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000a60de : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000088476 : add byte ptr [rax], al ; mov rdx, qword ptr [rsp + 0x68] ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000391ee : add byte ptr [rax], al ; mov rdx, qword ptr [rsp + 8] ; mov rsi, qword ptr [r15] ; mov rdi, qword ptr [r12] ; call r14
0x000000000003946e : add byte ptr [rax], al ; mov rdx, qword ptr [rsp + 8] ; mov rsi, r15 ; mov rdi, r12 ; call r14
0x0000000000125102 : add byte ptr [rax], al ; mov rdx, r10 ; mov word ptr [r14 + 0x38], r9w ; mov qword ptr [rbp - 0x78], r10 ; call 0x913c0
0x0000000000089f23 : add byte ptr [rax], al ; mov rdx, r12 ; mov rdi, r15 ; call rax
0x0000000000037614 : add byte ptr [rax], al ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, qword ptr [rsp + 0x18] ; call r15
0x00000000000715cb : add byte ptr [rax], al ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rsp ; call 0x4d89d
0x000000000007510f : add byte ptr [rax], al ; mov rdx, r15 ; mov rdi, r12 ; call 0x913ba
0x000000000008a443 : add byte ptr [rax], al ; mov rdx, r15 ; mov rdi, r8 ; call rax
0x000000000011f6bc : add byte ptr [rax], al ; mov rdx, r15 ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000050d6a : add byte ptr [rax], al ; mov rdx, r8 ; mov qword ptr [rbp - 0x88], r8 ; call 0xad06e
0x000000000008ac74 : add byte ptr [rax], al ; mov rdx, rbp ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000001046a6 : add byte ptr [rax], al ; mov rsi, qword ptr [rax] ; mov rdi, qword ptr [rbp - 0x40] ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000104319 : add byte ptr [rax], al ; mov rsi, qword ptr [rbx] ; mov rdi, qword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000645d4 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x35c993] ; call rax
0x000000000005c93c : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x36462b] ; call rax
0x000000000005c320 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x364c47] ; call rax
0x000000000005969c : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x3678cb] ; call rax
0x00000000000509f8 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x37056f] ; call rax
0x000000000004db1c : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x37344b] ; call rax
0x0000000000086a86 : add byte ptr [rax], al ; mov rsi, qword ptr [rsp + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000000bc19d : add byte ptr [rax], al ; mov rsi, qword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000086dfe : add byte ptr [rax], al ; mov rsi, qword ptr [rsp + 0x48] ; call rax
0x0000000000089d22 : add byte ptr [rax], al ; mov rsi, r14 ; call rax
0x0000000000145c1c : add byte ptr [rax], al ; mov rsi, rax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000008b03e : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, r12 ; call rax
0x000000000008a190 : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x00000000000f825b : add byte ptr [rax], al ; mov rsi, rdx ; syscall ; cmp rax, -0x1000 ; ja 0xf8280 ; ret
0x00000000001a45e2 : add byte ptr [rax], al ; mov word ptr [rax + rax - 0x113ae800], gs ; call qword ptr [rax]
0x00000000001ad66e : add byte ptr [rax], al ; mov word ptr [rax], es ; add byte ptr [rax], al ; sbb al, 0x3d ; add dword ptr [rax], eax ; sub byte ptr [rcx - 0xb], bl ; call rdx
0x00000000001aa9e2 : add byte ptr [rax], al ; mov word ptr [rax], ss ; add dword ptr [rax], eax ; sub byte ptr [rsi], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001b35e2 : add byte ptr [rax], al ; mov word ptr [rcx + rax - 0x8cf4800], ds ; call rcx
0x00000000001ae5e2 : add byte ptr [rax], al ; mov word ptr [rcx + rax], cs ; test al, 0xab ; cmc ; jmp qword ptr [rcx]
0x0000000000165f3e : add byte ptr [rax], al ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x0000000000165f2e : add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00000000001ae8e2 : add byte ptr [rax], al ; mov word ptr [rdi + 1], cs ; add byte ptr [rax - 0x51], ch ; cmc ; jmp qword ptr [rcx]
0x00000000000a704e : add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x00000000000a081e : add byte ptr [rax], al ; mov word ptr [rdi], r9w ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a082e : add byte ptr [rax], al ; mov word ptr [rdi], r9w ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a096e : add byte ptr [rax], al ; mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a097e : add byte ptr [rax], al ; mov word ptr [rdi], si ; mov byte ptr [rdi + 2], 0 ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a08ee : add byte ptr [rax], al ; mov word ptr [rdi], si ; mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x00000000000a08de : add byte ptr [rax], al ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x0000000000134c0d : add byte ptr [rax], al ; mov word ptr [rdx + 0x6c], ax ; mov eax, 1 ; ret
0x000000000003b54d : add byte ptr [rax], al ; mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x000000000003b594 : add byte ptr [rax], al ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x0000000000035322 : add byte ptr [rax], al ; mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000035300 : add byte ptr [rax], al ; mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000353eb : add byte ptr [rax], al ; mov word ptr [rsp - 0x10], ax ; mov dword ptr [rdi], edx ; fld xword ptr [rsp - 0x18] ; ret
0x00000000001861ae : add byte ptr [rax], al ; movabs al, byte ptr [0xe0fff21dc0fff21d] ; sbb eax, 0x1e00fff2 ; jmp qword ptr [rax]
0x000000000012ffdc : add byte ptr [rax], al ; movdqu xmm0, xmmword ptr [rdi + 0x20] ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x0000000000130014 : add byte ptr [rax], al ; movdqu xmm0, xmmword ptr [rdi + 0x38] ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x00000000000a6e3e : add byte ptr [rax], al ; movdqu xmm0, xmmword ptr [rsi] ; mov cl, byte ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a619e : add byte ptr [rax], al ; movdqu xmm0, xmmword ptr [rsi] ; mov ecx, dword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a860e : add byte ptr [rax], al ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a77ce : add byte ptr [rax], al ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a616e : add byte ptr [rax], al ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000aa07e : add byte ptr [rax], al ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a711e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000a712e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a2d50 : add byte ptr [rax], al ; movlpd xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x0000000000103379 : add byte ptr [rax], al ; movmskpd eax, xmm0 ; and eax, 1 ; jmp 0x103351
0x00000000001aa9fa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc byte ptr [rcx], al ; add byte ptr [rax + 0x16], al ; hlt ; jmp qword ptr [rcx]
0x00000000001b06fa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rdx - 0xa], ah ; jmp qword ptr [rsi]
0x0000000000194d9e : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ja 0x194d92 ; call rsp
0x0000000000194d96 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jb 0x194d92 ; call qword ptr [rbx + rcx*4]
0x00000000001950a6 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x1950b0
0x000000000019491e : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or ch, dl ; call rsp
0x000000000019f8fa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rdi ; add byte ptr [rax], al ; nop ; sbb ebp, ebp ; call rbx
0x00000000001b35fa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pushfq ; add dword ptr [rax], eax ; xor byte ptr [rcx], 0xf7 ; jmp qword ptr [rsi]
0x00000000001a5bfa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x00000000001a64fa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x000000000003b256 : add byte ptr [rax], al ; movsd xmm0, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x000000000002c17c : add byte ptr [rax], al ; movsxd r8, dword ptr [r11 + r9*4] ; add r8, r11 ; jmp r8
0x0000000000158ca9 : add byte ptr [rax], al ; movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000013044a : add byte ptr [rax], al ; movsxd rax, dword ptr [rdi + 0x18] ; cmp eax, 3 ; jbe 0x130470 ; mov eax, 2 ; ret
0x000000000006d8e2 : add byte ptr [rax], al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000003adb8 : add byte ptr [rax], al ; movsxd rax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x000000000007a607 : add byte ptr [rax], al ; movsxd rdi, dword ptr [rbx + 0x70] ; syscall ; cmp rax, -0x1000 ; ja 0x7a631 ; pop rbx ; ret
0x0000000000124a8e : add byte ptr [rax], al ; movsxd rdi, dword ptr [rdi] ; mov eax, 3 ; syscall ; ret
0x000000000012687f : add byte ptr [rax], al ; movsxd rdx, eax ; add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x00000000001266fe : add byte ptr [rax], al ; movsxd rdx, edx ; mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x000000000002bc04 : add byte ptr [rax], al ; movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x00000000000ace23 : add byte ptr [rax], al ; movzx eax, al ; ret
0x00000000001701ce : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 0x10] ; movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x000000000017022e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 0xa] ; movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x000000000017021e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 0xb] ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000017020e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 0xc] ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000001701fe : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 0xd] ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x00000000001701ee : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 0xe] ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x00000000001701de : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 0xf] ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000170588 : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 1] ; cmp al, byte ptr [rsi - 1] ; jne 0x170716 ; xor eax, eax ; ret
0x000000000016c58e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 1] ; movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x000000000016c341 : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 1] ; movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000016b6ee : add byte ptr [rax], al ; movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000aacee : add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x00000000000aac9e : add byte ptr [rax], al ; movzx eax, dl ; and dh, 0xf0 ; mov edx, 0 ; cmove rax, rdx ; pop rbx ; ret
0x000000000002369e : add byte ptr [rax], al ; movzx eax, sil ; test sil, sil ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000008d44e : add byte ptr [rax], al ; movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000015afee : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000015b6ce : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000015af6e : add byte ptr [rax], al ; movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000015b65e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000035c11 : add byte ptr [rax], al ; neg ebx ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000019ccde : add byte ptr [rax], al ; nop ; in eax, -0x17 ; jmp qword ptr [rax]
0x00000000001a70ce : add byte ptr [rax], al ; nop ; int1 ; call rdx
0x00000000001258fd : add byte ptr [rax], al ; nop ; lea eax, dword ptr [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00000000001a226e : add byte ptr [rax], al ; nop ; mov dh, 0xed ; call qword ptr [rbx]
0x00000000000798ec : add byte ptr [rax], al ; nop ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x0000000000036bbc : add byte ptr [rax], al ; nop ; mov eax, dword ptr [rip + 0x38a4c6] ; ret
0x000000000011b21d : add byte ptr [rax], al ; nop ; mov eax, edi ; ror ax, 8 ; ret
0x000000000003a8ad : add byte ptr [rax], al ; nop ; mov edx, edi ; mov eax, edi ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x00000000000f732d : add byte ptr [rax], al ; nop ; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x000000000017258d : add byte ptr [rax], al ; nop ; ret
0x000000000019f8fe : add byte ptr [rax], al ; nop ; sbb ebp, ebp ; call rbx
0x00000000001a47ae : add byte ptr [rax], al ; nop ; shr dh, 1 ; call qword ptr [rax]
0x00000000001a1b8e : add byte ptr [rax], al ; nop ; xchg eax, esp ; in eax, dx ; call qword ptr [rcx]
0x000000000008d7b1 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000ce3d9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x6f ; syscall ; ret
0x0000000000109149 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0xe4 ; syscall ; ret
0x000000000013e649 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x00000000000f7efa : add byte ptr [rax], al ; nop dword ptr [rax] ; cmp esi, 2 ; mov eax, 0x16 ; jbe 0xf7f21 ; ret
0x00000000001194ab : add byte ptr [rax], al ; nop dword ptr [rax] ; cmp rdx, 0xfff ; jbe 0x1194ce ; jmp 0x456e0
0x00000000000f7e1a : add byte ptr [rax], al ; nop dword ptr [rax] ; mov eax, dword ptr [rdi + 0x10c] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000012ec9a : add byte ptr [rax], al ; nop dword ptr [rax] ; mov eax, dword ptr [rip + 0x297116] ; test eax, eax ; je 0x12ecc0 ; ret
0x00000000000355fa : add byte ptr [rax], al ; nop dword ptr [rax] ; mov eax, dword ptr [rip + 0x39112a] ; test eax, eax ; jne 0x35621 ; ret
0x000000000002badf : add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x00000000001300a7 : add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000165f14 : add byte ptr [rax], al ; nop word ptr cs:[rax + rax] ; mov byte ptr [rcx], dl ; ret
0x00000000000a7034 : add byte ptr [rax], al ; nop word ptr cs:[rax + rax] ; mov byte ptr [rdi], dl ; ret
0x00000000000a6d34 : add byte ptr [rax], al ; nop word ptr cs:[rax + rax] ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000a5ba4 : add byte ptr [rax], al ; nop word ptr cs:[rax + rax] ; mov rax, rdi ; ret
0x00000000000a6d24 : add byte ptr [rax], al ; nop word ptr cs:[rax + rax] ; ret
0x0000000000170d34 : add byte ptr [rax], al ; nop word ptr cs:[rax + rax] ; xor eax, eax ; ret
0x00000000001ab662 : add byte ptr [rax], al ; or al, 0x1d ; add dword ptr [rax], eax ; or bl, cl ; hlt ; jmp qword ptr [rcx]
0x00000000001ad562 : add byte ptr [rax], al ; or al, 0x3c ; add dword ptr [rax], eax ; clc ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001ae762 : add byte ptr [rax], al ; or al, 0x4e ; add dword ptr [rax], eax ; pop rax ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a2b62 : add byte ptr [rax], al ; or al, 0x92 ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; std ; jmp rdi
0x00000000001a3c62 : add byte ptr [rax], al ; or al, 0xa3 ; add byte ptr [rax], al ; pop rax ; outsd dx, dword ptr [rsi] ; out dx, al ; jmp qword ptr [rdi]
0x00000000001a4162 : add byte ptr [rax], al ; or al, 0xa8 ; add byte ptr [rax], al ; clc ; xchg eax, edx ; out dx, al ; call qword ptr [rax]
0x00000000001a8862 : add byte ptr [rax], al ; or al, 0xef ; add byte ptr [rax], al ; sbb byte ptr [rcx], bh ; call rsi
0x00000000001a9162 : add byte ptr [rax], al ; or al, 0xf8 ; add byte ptr [rax], al ; sbb byte ptr [rdi - 0xe], ah ; call qword ptr [rax]
0x00000000000102de : add byte ptr [rax], al ; or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000034b7b : add byte ptr [rax], al ; or byte ptr [rax + 0x21], 0xd0 ; movq xmm0, rax ; ret
0x0000000000034bc7 : add byte ptr [rax], al ; or byte ptr [rax + 0x21], 0xd0 ; movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x00000000000adf85 : add byte ptr [rax], al ; or byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x000000000004a5d7 : add byte ptr [rax], al ; or byte ptr [rax - 0x77], 7 ; mov dword ptr [rdx], 0xffffc002 ; mov eax, 1 ; ret
0x000000000001b03e : add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001df4e : add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18a6
0x0000000000090e81 : add byte ptr [rax], al ; or byte ptr [rax], al ; je 0x90e9c ; lea rax, qword ptr [rip + 0xda832] ; ret
0x00000000000ac931 : add byte ptr [rax], al ; or byte ptr [rax], al ; je 0xac94c ; lea rax, qword ptr [rip + 0xc03c2] ; ret
0x000000000019b4f6 : add byte ptr [rax], al ; or byte ptr [rcx - 0x17], dl ; call qword ptr [rsi]
0x00000000000360a5 : add byte ptr [rax], al ; or byte ptr [rdi], cl ; ret 0xc289
0x0000000000075e9f : add byte ptr [rax], al ; or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000007a69e : add byte ptr [rax], al ; or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000000ddd6 : add byte ptr [rax], al ; or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x0000000000108eb4 : add byte ptr [rax], al ; or eax, edi ; ret
0x0000000000035221 : add byte ptr [rax], al ; or eax, edx ; mov dword ptr [rsp + 0x10], eax ; fld xword ptr [rsp + 8] ; ret
0x000000000019ced6 : add byte ptr [rax], al ; out -0x17, eax ; call qword ptr [rax]
0x000000000019ceee : add byte ptr [rax], al ; out -0x17, eax ; call qword ptr [rdx]
0x000000000019ce2e : add byte ptr [rax], al ; out 0xe9, al ; call qword ptr [rsi]
0x00000000001babf6 : add byte ptr [rax], al ; out 1, al ; add byte ptr [rax], al ; ret
0x00000000000a0c0d : add byte ptr [rax], al ; pcmpeqb xmm1, xmmword ptr [rdi + 0x20] ; pmovmskb eax, xmm1 ; test eax, eax ; jne 0xa0ca1 ; xor eax, eax ; ret
0x0000000000090d19 : add byte ptr [rax], al ; pmovmskb eax, xmm1 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000a0b70 : add byte ptr [rax], al ; pmovmskb eax, xmm1 ; bsr eax, eax ; add rax, rdi ; ret
0x000000000019f1ba : add byte ptr [rax], al ; pop rax ; add byte ptr [rax], al ; sar dh, 1 ; in al, dx ; call qword ptr [rax]
0x00000000001a3c66 : add byte ptr [rax], al ; pop rax ; outsd dx, dword ptr [rsi] ; out dx, al ; jmp qword ptr [rdi]
0x00000000001a9096 : add byte ptr [rax], al ; pop rax ; pop rbp ; jmp rcx
0x0000000000108d79 : add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00000000001a47f6 : add byte ptr [rax], al ; pop rax ; shr esi, 1 ; call rcx
0x0000000000081980 : add byte ptr [rax], al ; pop rbp ; mov dword ptr [r12 + 0x10], eax ; pop r12 ; ret
0x000000000005590d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000559dd : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008a762 : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000010b00a : add byte ptr [rax], al ; pop rbp ; ret
0x00000000000e0a86 : add byte ptr [rax], al ; pop rbx ; mov dword ptr [r12 + 4], r14d ; xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000125ae6 : add byte ptr [rax], al ; pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003ab0c : add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000010fc16 : add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr fs:[r14] ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013ec16 : add byte ptr [rax], al ; pop rbx ; mov eax, eax ; ret
0x0000000000047ee7 : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000118b4b : add byte ptr [rax], al ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000071ec8 : add byte ptr [rax], al ; pop rbx ; mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000087688 : add byte ptr [rax], al ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006edf9 : add byte ptr [rax], al ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x0000000000070d8d : add byte ptr [rax], al ; pop rbx ; mov rax, rsi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000299ef : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ce36f : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000029626 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000001fcb4 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fb94 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000029b1e : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000036ca5 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000002a497 : add byte ptr [rax], al ; pop rbx ; ret
0x000000000007af7d : add byte ptr [rax], al ; pop rbx ; sub rbp, rax ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000125a3e : add byte ptr [rax], al ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000019268e : add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x00000000001ad63f : add byte ptr [rax], al ; pop rcx ; cmc ; jmp qword ptr [rdx]
0x0000000000103441 : add byte ptr [rax], al ; pop rdx ; mov rax, qword ptr [rip + 0x2bf345] ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001a9db2 : add byte ptr [rax], al ; pop rsp ; add al, 1 ; add byte ptr [rax + 0x36], ch ; call qword ptr [rcx]
0x00000000001a3c5e : add byte ptr [rax], al ; pop rsp ; add byte ptr [rax], al ; add byte ptr [rbx], cl ; add byte ptr [rax], al ; pop rax ; outsd dx, dword ptr [rsi] ; out dx, al ; jmp qword ptr [rdi]
0x00000000001af87e : add byte ptr [rax], al ; pop rsp ; add byte ptr [rax], al ; add byte ptr [rdi + rbx*2], ch ; add dword ptr [rax], eax ; cmp bh, ah ; cmc ; jmp rsp
0x00000000001a1b86 : add byte ptr [rax], al ; pop rsp ; add byte ptr [rax], al ; add byte ptr [rdx + rax*4], dh ; add byte ptr [rax], al ; nop ; xchg eax, esp ; in eax, dx ; call qword ptr [rcx]
0x00000000001a5bb2 : add byte ptr [rax], al ; pop rsp ; ret 0
0x00000000001a64b2 : add byte ptr [rax], al ; pop rsp ; retf ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001a92b2 : add byte ptr [rax], al ; pop rsp ; stc ; add byte ptr [rax], al ; js 0x1a9255 ; call rbx
0x000000000019cab2 : add byte ptr [rax], al ; pop rsp ; xor dword ptr [rax], eax ; add byte ptr [rax], bl ; fucompi st(1) ; jmp qword ptr [rsi]
0x000000000012f631 : add byte ptr [rax], al ; push qword ptr [rsp + 0xc8] ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00000000001ae9ba : add byte ptr [rax], al ; push rax ; add dword ptr [rax], eax ; nop ; mov al, 0xf5 ; jmp qword ptr [rcx]
0x000000000019d23e : add byte ptr [rax], al ; push rax ; and dl, ch ; call rcx
0x0000000000192acc : add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x00000000001a458e : add byte ptr [rax], al ; push rax ; ret
0x00000000001a492e : add byte ptr [rax], al ; push rax ; shr esi, cl ; call qword ptr [rax]
0x00000000001a8eaf : add byte ptr [rax], al ; push rbp ; jmp qword ptr [rcx]
0x000000000011765e : add byte ptr [rax], al ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x00000000001b7ca6 : add byte ptr [rax], al ; push rsp ; add byte ptr [rax], al ; add byte ptr [rbx + 1], dl ; add byte ptr [rax], ah ; push rcx ; clc ; call rdi
0x000000000019f6a6 : add byte ptr [rax], al ; push rsp ; add byte ptr [rax], al ; add byte ptr [rdx + rcx + 0x12700000], dl ; in eax, dx ; call qword ptr [rax]
0x00000000001a25c6 : add byte ptr [rax], al ; push rsp ; add byte ptr [rax], al ; add byte ptr [rsp + rcx*4], dh ; add al, dl ; ret 0xffed
0x00000000001b9aaa : add byte ptr [rax], al ; push rsp ; add dword ptr [rdx], eax ; add byte ptr [rax - 0x3d], ah ; clc ; jmp rcx
0x00000000001a8eaa : add byte ptr [rax], al ; push rsp ; cmc ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001ad5aa : add byte ptr [rax], al ; push rsp ; cmp al, 1 ; add byte ptr [rax + 0x58], al ; cmc ; jmp qword ptr [rcx]
0x0000000000195206 : add byte ptr [rax], al ; push rsp ; jg 0x1951fd ; call rsp
0x00000000001b7caa : add byte ptr [rax], al ; push rsp ; jrcxz 0x1b7cb9 ; add byte ptr [rax], ah ; push rcx ; clc ; call rdi
0x0000000000195726 : add byte ptr [rax], al ; push rsp ; out dx, al ; push qword ptr [rbp + rcx*8 + 0x42e40000] ; out dx, al ; call rsp
0x000000000019448e : add byte ptr [rax], al ; push rsp ; ret
0x00000000001a47aa : add byte ptr [rax], al ; push rsp ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; nop ; shr dh, 1 ; call qword ptr [rax]
0x0000000000194b1e : add byte ptr [rax], al ; push rsp ; sub dl, ch ; jmp rsp
0x00000000001a41aa : add byte ptr [rax], al ; push rsp ; test al, 0 ; add al, ah ; xchg eax, ebx ; out dx, al ; jmp qword ptr [rdx]
0x00000000001acaaa : add byte ptr [rax], al ; push rsp ; xor dword ptr [rcx], eax ; add byte ptr [rax + 0x23], al ; cmc ; jmp qword ptr [rcx]
0x000000000019e3f2 : add byte ptr [rax], al ; pushfq ; add byte ptr [rax], al ; je 0x19e3ef ; call rdi
0x00000000001b1af2 : add byte ptr [rax], al ; pushfq ; add dword ptr [rcx], 0xf6940800 ; call qword ptr [rdi]
0x00000000001ae3f2 : add byte ptr [rax], al ; pushfq ; add qword ptr [rax], rax ; call 0x221ad9af
0x00000000001b08f2 : add byte ptr [rax], al ; pushfq ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; fsub dword ptr [rdx - 0xa] ; jmp qword ptr [rsi]
0x00000000001a28f2 : add byte ptr [rax], al ; pushfq ; pop qword ptr [rax] ; add byte ptr [rax], bh ; leave ; in eax, dx ; jmp qword ptr [rax]
0x00000000001b5bf2 : add byte ptr [rax], al ; pushfq ; ret 1
0x00000000001a6ff2 : add byte ptr [rax], al ; pushfq ; salc ; add byte ptr [rax], al ; mov byte ptr [rbp - 0xf], al ; call qword ptr [rsi]
0x00000000001a47f2 : add byte ptr [rax], al ; pushfq ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; pop rax ; shr esi, 1 ; call rcx
0x000000000013ebeb : add byte ptr [rax], al ; pxor xmm0, xmm0 ; movups xmmword ptr [rsp + 0x28], xmm0 ; call rdx
0x0000000000000977 : add byte ptr [rax], al ; ret
0x0000000000174866 : add byte ptr [rax], al ; ret 0
0x000000000017b7de : add byte ptr [rax], al ; ret 0x10
0x000000000001df56 : add byte ptr [rax], al ; ret 0x18a6
0x000000000000fef6 : add byte ptr [rax], al ; ret 0x1d
0x000000000017d4ae : add byte ptr [rax], al ; ret 0x1d4
0x000000000017dc46 : add byte ptr [rax], al ; ret 0x1d5
0x000000000017c4b6 : add byte ptr [rax], al ; ret 0x24
0x0000000000007b26 : add byte ptr [rax], al ; ret 0x26
0x000000000000054c : add byte ptr [rax], al ; ret 0x2800
0x0000000000003f9e : add byte ptr [rax], al ; ret 0x31
0x000000000017c9a6 : add byte ptr [rax], al ; ret 0x33
0x000000000000a556 : add byte ptr [rax], al ; ret 0x34
0x000000000000f66e : add byte ptr [rax], al ; ret 0x35
0x0000000000010e6e : add byte ptr [rax], al ; ret 0x42
0x0000000000000886 : add byte ptr [rax], al ; ret 0x440c
0x000000000000807e : add byte ptr [rax], al ; ret 0x45
0x000000000001053e : add byte ptr [rax], al ; ret 0x49
0x0000000000005b5e : add byte ptr [rax], al ; ret 0x4e
0x0000000000010fd6 : add byte ptr [rax], al ; ret 0x51
0x000000000017afde : add byte ptr [rax], al ; ret 0xa
0x000000000017b3de : add byte ptr [rax], al ; ret 0xd
0x0000000000194846 : add byte ptr [rax], al ; ret 0xffe9
0x000000000017e882 : add byte ptr [rax], al ; ret 1
0x000000000000c88e : add byte ptr [rax], al ; ret 2
0x00000000000011c6 : add byte ptr [rax], al ; ret 3
0x00000000000075fe : add byte ptr [rax], al ; ret 4
0x000000000017f082 : add byte ptr [rax], al ; ret 5
0x000000000000ddde : add byte ptr [rax], al ; ret 6
0x00000000000018c2 : add byte ptr [rax], al ; ret 7
0x000000000017f682 : add byte ptr [rax], al ; ret 8
0x000000000017f882 : add byte ptr [rax], al ; ret 9
0x00000000001a649a : add byte ptr [rax], al ; retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x000000000017ee7e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x000000000011b24c : add byte ptr [rax], al ; rol byte ptr [rcx + 0xfa], 0x80 ; cmovne eax, edi ; ret
0x000000000017b286 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x00000000001a297e : add byte ptr [rax], al ; ror dl, 1 ; in eax, dx ; call rdi
0x000000000002db61 : add byte ptr [rax], al ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x000000000019f1be : add byte ptr [rax], al ; sar dh, 1 ; in al, dx ; call qword ptr [rax]
0x00000000000351a5 : add byte ptr [rax], al ; sar eax, 0x1f ; sub ecx, edx ; not eax ; and eax, ecx ; ret
0x000000000008dc64 : add byte ptr [rax], al ; sar rdx, cl ; test rdx, rdx ; je 0x8dd21 ; bsf rax, rdx ; ret
0x00000000001a724e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cld ; fadd dword ptr [rax] ; add al, ch ; push rsp ; int1 ; jmp qword ptr [rax]
0x00000000001aa946 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; sgdt ptr [rax] ; adc byte ptr [rsi], dl ; hlt ; call qword ptr [rbx]
0x00000000001aa986 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; xor al, 0x10 ; add dword ptr [rax], eax ; adc byte ptr [rsi], dl ; hlt ; call qword ptr [rsi]
0x00000000001abb72 : add byte ptr [rax], al ; sbb al, 0x22 ; add dword ptr [rax], eax ; js 0x1abb58 ; hlt ; jmp qword ptr [rcx]
0x00000000001abe72 : add byte ptr [rax], al ; sbb al, 0x25 ; add dword ptr [rax], eax ; sbb bl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001acb72 : add byte ptr [rax], al ; sbb al, 0x32 ; add dword ptr [rax], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001ad672 : add byte ptr [rax], al ; sbb al, 0x3d ; add dword ptr [rax], eax ; sub byte ptr [rcx - 0xb], bl ; call rdx
0x00000000001a5972 : add byte ptr [rax], al ; sbb al, 0xc0 ; add byte ptr [rax], al ; clc ; jp 0x1a597e ; jmp qword ptr [rdi]
0x00000000001a8f26 : add byte ptr [rax], al ; sbb byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x000000000019b4c6 : add byte ptr [rax], al ; sbb byte ptr [rcx - 0x17], dl ; call qword ptr [rax]
0x00000000001a8866 : add byte ptr [rax], al ; sbb byte ptr [rcx], bh ; call rsi
0x00000000001a9166 : add byte ptr [rax], al ; sbb byte ptr [rdi - 0xe], ah ; call qword ptr [rax]
0x00000000001a2b66 : add byte ptr [rax], al ; sbb byte ptr [rdi], al ; std ; jmp rdi
0x00000000001a8ac6 : add byte ptr [rax], al ; sbb byte ptr [rsi - 0xe], al ; call qword ptr [rdx]
0x00000000001a72e6 : add byte ptr [rax], al ; sbb byte ptr [rsi - 0xf], dl ; jmp qword ptr [rcx]
0x00000000001a45e6 : add byte ptr [rax], al ; sbb ch, al ; out dx, al ; call qword ptr [rax]
0x000000000010b3a5 : add byte ptr [rax], al ; seta al ; movzx eax, al ; neg eax ; cmp qword ptr [rcx + 0x10], rsi ; cmovb eax, edx ; ret
0x00000000000ac240 : add byte ptr [rax], al ; setl al ; neg eax ; cmp ecx, r8d ; cmovg eax, edx ; ret
0x0000000000100d81 : add byte ptr [rax], al ; setne al ; add rsp, 8 ; movzx eax, al ; ret
0x000000000017c4ae : add byte ptr [rax], al ; shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x000000000011b28e : add byte ptr [rax], al ; shl edi, 0x10 ; movzx eax, si ; or eax, edi ; bswap eax ; ret
0x00000000000363a0 : add byte ptr [rax], al ; shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000036420 : add byte ptr [rax], al ; shl rax, cl ; test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x00000000001a498e : add byte ptr [rax], al ; shr byte ptr [rcx - 6], 1 ; call qword ptr [rax]
0x00000000000f71f6 : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000007724e : add byte ptr [rax], al ; shr edx, 4 ; and edx, 1 ; mov eax, edx ; ret
0x000000000007733e : add byte ptr [rax], al ; shr edx, 5 ; and edx, 1 ; mov eax, edx ; ret
0x00000000000aacfd : add byte ptr [rax], al ; shr edx, 6 ; and edx, 0x3fffc00 ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x000000000019e056 : add byte ptr [rax], al ; shr rdx, 1 ; jmp rdi
0x00000000001a4946 : add byte ptr [rax], al ; shr rsi, cl ; jmp qword ptr [rsi]
0x0000000000188ac2 : add byte ptr [rax], al ; sldt word ptr [rax] ; add byte ptr [rax], al ; loope 0x188ada ; add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001a929a : add byte ptr [rax], al ; stc ; add byte ptr [rax], al ; mov al, 0x91 ; call rbx
0x00000000001ae40f : add byte ptr [rax], al ; stosb byte ptr [rdi], al ; cmc ; jmp qword ptr [rcx]
0x00000000001ae50f : add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x000000000019ed16 : add byte ptr [rax], al ; sub ah, bl ; in al, dx ; jmp qword ptr [rcx]
0x00000000001a9e4e : add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; cld ; add al, 1 ; add byte ptr [rax + 0x41], cl ; call qword ptr [rdx]
0x00000000001a908e : add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; cmp al, 0xf7 ; add byte ptr [rax], al ; pop rax ; pop rbp ; jmp rcx
0x00000000001a7dc6 : add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; je 0x1a7dbf ; add byte ptr [rax], al ; mov al, 0x10 ; jmp qword ptr [rdi]
0x00000000001a13ce : add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; jl 0x1a145d ; add byte ptr [rax], al ; clc ; jns 0x1a13d5 ; call rcx
0x000000000019f8f6 : add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rdi ; add byte ptr [rax], al ; nop ; sbb ebp, ebp ; call rbx
0x00000000001a1742 : add byte ptr [rax], al ; sub al, 0x2b ; add byte ptr [rax], al ; call 0x281a04d8
0x00000000001af082 : add byte ptr [rax], al ; sub al, 0x57 ; add dword ptr [rax], eax ; cmp bl, al ; cmc ; jmp rax
0x00000000001af882 : add byte ptr [rax], al ; sub al, 0x5f ; add dword ptr [rax], eax ; cmp bh, ah ; cmc ; jmp rsp
0x00000000001b0682 : add byte ptr [rax], al ; sub al, 0x6d ; add dword ptr [rax], eax ; mov byte ptr [rcx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001b4b82 : add byte ptr [rax], al ; sub al, 0xb2 ; add dword ptr [rax], eax ; call 0x241b4328
0x00000000001a5882 : add byte ptr [rax], al ; sub al, 0xbf ; add byte ptr [rax], al ; mov byte ptr [rax + rsi*8], al ; jmp qword ptr [rbx]
0x00000000001a6482 : add byte ptr [rax], al ; sub al, 0xcb ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001b8582 : add byte ptr [rax], al ; sub al, 0xec ; add dword ptr [rax], eax ; sub byte ptr [rcx - 8], ah ; jmp qword ptr [rbx]
0x00000000001a6456 : add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001a6426 : add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; jmp qword ptr [rax]
0x000000000006f75c : add byte ptr [rax], al ; sub dword ptr [rsi + 4], 1 ; je 0x6f79e ; mov rax, rdx ; pop rbx ; ret
0x000000000007889c : add byte ptr [rax], al ; sub dword ptr [rsi + 4], 1 ; je 0x788de ; mov rax, rdx ; pop rbx ; ret
0x0000000000138258 : add byte ptr [rax], al ; sub eax, 1 ; bswap eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000016c42c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x000000000011276e : add byte ptr [rax], al ; sub eax, edi ; ret
0x00000000000351f1 : add byte ptr [rax], al ; sub eax, edx ; sar eax, 0x10 ; ret
0x000000000010c056 : add byte ptr [rax], al ; sub edi, 0x30 ; xor eax, eax ; cmp edi, 9 ; setbe al ; ret
0x00000000000fe377 : add byte ptr [rax], al ; sub edx, eax ; test eax, eax ; cmovns eax, edx ; ret
0x00000000000f138e : add byte ptr [rax], al ; sub qword ptr [rsp + 0x18], 1 ; mov rax, qword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xf13e2
0x000000000007e546 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x00000000000743f6 : add byte ptr [rax], al ; sub r8, rcx ; sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000008d651 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000019ae36 : add byte ptr [rax], al ; sub rbp, rcx ; call qword ptr [rdi]
0x000000000007450e : add byte ptr [rax], al ; sub rdx, qword ptr [rax + 8] ; mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x00000000000c7c4f : add byte ptr [rax], al ; syscall ; cmp eax, 0xfffff000 ; setbe al ; movzx eax, al ; pop rbx ; ret
0x0000000000100503 : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0x100525 ; ret
0x0000000000100597 : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0x1005b5 ; ret
0x0000000000100637 : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0x100655 ; ret
0x000000000010068b : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0x1006ad ; ret
0x0000000000106baa : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0x106bcd ; ret
0x0000000000108f2c : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0x108f4c ; ret
0x0000000000108fde : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0x108ffd ; ret
0x0000000000109bb9 : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0x109bdc ; ret
0x0000000000109cd3 : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0x109cec ; ret
0x0000000000109d79 : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0x109d9c ; ret
0x0000000000109e33 : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0x109e4c ; ret
0x000000000010a263 : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0x10a27c ; ret
0x000000000010a305 : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0x10a324 ; ret
0x000000000010a3b5 : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0x10a3d4 ; ret
0x00000000001174b6 : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0x1174d5 ; ret
0x0000000000117563 : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0x117597 ; ret
0x0000000000119408 : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0x11942d ; ret
0x0000000000035a6c : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0x35a8d ; ret
0x0000000000035ad8 : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0x35afd ; ret
0x0000000000035b22 : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0x35b3c ; ret
0x0000000000079f57 : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0x79f75 ; ret
0x00000000000bc823 : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xbc845 ; ret
0x00000000000c89f3 : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xc8a15 ; pop rbx ; ret
0x00000000000c9bdd : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xc9bfc ; ret
0x00000000000ccfbc : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xccfdc ; ret
0x00000000000cd056 : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xcd074 ; ret
0x00000000000cd147 : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xcd164 ; ret
0x00000000000ce21f : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xce23c ; ret
0x00000000000ce28f : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xce2ac ; ret
0x00000000000ce4e3 : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xce4fc ; ret
0x00000000000ce563 : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xce57c ; ret
0x00000000000f8211 : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xf822d ; ret
0x00000000000f82b1 : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xf82cd ; ret
0x00000000000f830c : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xf832d ; ret
0x00000000000f836d : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xf838d ; ret
0x00000000000f83c7 : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xf83e5 ; ret
0x00000000000f85a5 : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xf85c5 ; ret
0x00000000000f8c6f : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xf8cbd ; ret
0x00000000000f8d13 : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xf8d71 ; add rsp, 0x60 ; pop rbx ; ret
0x00000000000fd10e : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xfd12d ; ret
0x00000000000fd162 : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xfd17d ; ret
0x00000000000fd8d6 : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xfd8f4 ; ret
0x00000000000fddea : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xfde0c ; ret
0x00000000000fe741 : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xfe75c ; ret
0x00000000000fe7b1 : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xfe7cc ; ret
0x00000000000fee32 : add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xfee4d ; ret
0x00000000001006c3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x1006dc ; ret
0x00000000001006f3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10070c ; ret
0x0000000000102c73 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x102c8c ; ret
0x0000000000102ca3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x102cbc ; ret
0x0000000000102cdc : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x102d25 ; ret
0x0000000000102d33 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x102d4c ; ret
0x0000000000102d63 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x102d7c ; ret
0x0000000000102d96 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x102daf ; ret
0x0000000000102dc3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x102ddc ; ret
0x0000000000102df3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x102e0c ; ret
0x0000000000102e23 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x102e3c ; ret
0x0000000000102e53 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x102e6c ; ret
0x00000000001074c6 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x1074df ; ret
0x00000000001074f3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10750c ; ret
0x0000000000107523 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10753c ; ret
0x0000000000107556 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10756f ; ret
0x0000000000107586 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10759f ; ret
0x00000000001075b3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x1075cc ; ret
0x00000000001075e6 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x1075ff ; ret
0x0000000000107613 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10762c ; ret
0x0000000000107643 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10765c ; ret
0x0000000000107676 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10768f ; ret
0x00000000001076a3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x1076bc ; ret
0x00000000001076d6 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x1076ef ; ret
0x0000000000108c53 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x108c6c ; ret
0x0000000000108c83 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x108c9c ; ret
0x0000000000108da3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x108dbc ; ret
0x0000000000108de3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x108dfc ; ret
0x0000000000108e13 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x108e2c ; ret
0x0000000000108e43 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x108e5c ; ret
0x0000000000108e73 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x108e8c ; ret
0x0000000000109013 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10902c ; ret
0x0000000000109096 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x1090af ; ret
0x00000000001090c3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x1090dc ; ret
0x00000000001090f3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10910c ; ret
0x0000000000109123 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10913c ; ret
0x0000000000109166 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10917f ; ret
0x0000000000109193 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x1091ac ; ret
0x00000000001091c3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x1091dc ; ret
0x00000000001091f3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10920c ; ret
0x0000000000109223 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10923c ; ret
0x0000000000109253 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10926c ; ret
0x0000000000109283 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10929c ; ret
0x00000000001092b3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x1092cc ; ret
0x00000000001092e3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x1092fc ; ret
0x0000000000109316 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10932f ; ret
0x000000000010934f : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10939b ; ret
0x00000000001093a3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x1093bc ; ret
0x00000000001093d6 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x1093ef ; ret
0x0000000000109403 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10941c ; ret
0x0000000000109433 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10944c ; ret
0x0000000000109463 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10947c ; ret
0x0000000000109493 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x1094ac ; ret
0x00000000001094c3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x1094dc ; ret
0x00000000001094f6 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10950f ; ret
0x0000000000109526 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10953f ; ret
0x0000000000109553 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10956c ; ret
0x0000000000109583 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10959c ; ret
0x00000000001095b6 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x1095cf ; ret
0x00000000001095e6 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x1095ff ; ret
0x0000000000109616 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10962f ; ret
0x000000000010964f : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10969b ; ret
0x00000000001096a3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x1096bc ; ret
0x00000000001096df : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10972b ; ret
0x0000000000109733 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10974c ; ret
0x0000000000109763 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10977c ; ret
0x000000000010979f : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x1097eb ; ret
0x00000000001097f3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10980c ; ret
0x0000000000109826 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10983f ; ret
0x0000000000109853 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10986c ; ret
0x0000000000109883 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10989c ; ret
0x00000000001098b6 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x1098cf ; ret
0x00000000001098ec : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x109935 ; ret
0x0000000000109943 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10995c ; ret
0x0000000000109976 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10998f ; ret
0x00000000001099a6 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x1099bf ; ret
0x00000000001099fc : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x109a45 ; ret
0x0000000000109a53 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x109a6c ; ret
0x0000000000109a8c : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x109ad5 ; ret
0x0000000000109ae3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x109afc ; ret
0x0000000000109b13 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x109b2c ; ret
0x0000000000109b46 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x109b5f ; ret
0x0000000000109b73 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x109b8c ; ret
0x0000000000109c6f : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x109cbb ; ret
0x0000000000109ecf : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x109f1b ; ret
0x0000000000109f26 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x109f3f ; ret
0x0000000000109f53 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x109f6c ; ret
0x0000000000109f83 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x109f9c ; ret
0x0000000000109fb6 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x109fcf ; ret
0x000000000010a51f : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10a56b ; ret
0x000000000010a57f : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10a5cb ; ret
0x000000000010a5d3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10a5ec ; ret
0x000000000010a603 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10a61c ; ret
0x000000000010a633 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10a64c ; ret
0x000000000010a663 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10a67c ; ret
0x000000000010a696 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10a6af ; ret
0x000000000010a6c6 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10a6df ; ret
0x000000000010a6f3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10a70c ; ret
0x000000000010a723 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10a73c ; ret
0x000000000010a753 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10a76c ; ret
0x000000000010a783 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10a79c ; ret
0x0000000000143286 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x14329f ; ret
0x00000000001432d6 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x1432ef ; ret
0x0000000000035aa3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x35abc ; ret
0x0000000000036173 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x3618c ; ret
0x0000000000047fed : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x4800a ; xor eax, eax ; ret
0x000000000006c303 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x6c31c ; ret
0x000000000006c336 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x6c34f ; ret
0x00000000000bc903 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xbc91c ; ret
0x00000000000bfc73 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xbfc8c ; ret
0x00000000000bfca3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xbfcbc ; ret
0x00000000000ccf23 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xccf3c ; ret
0x00000000000cd106 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xcd11f ; ret
0x00000000000cd1e3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xcd1fc ; ret
0x00000000000cd26c : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xcd2b5 ; ret
0x00000000000cd2cc : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xcd315 ; ret
0x00000000000cd763 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xcd77c ; ret
0x00000000000ce1e3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xce1fc ; ret
0x00000000000ce383 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xce39c ; ret
0x00000000000ce3b3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xce3cc ; ret
0x00000000000ce413 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xce42c ; ret
0x00000000000ce443 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xce45c ; ret
0x00000000000ce473 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xce48c ; ret
0x00000000000ce4a3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xce4bc ; ret
0x00000000000ebfe3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xebffc ; ret
0x00000000000ec013 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xec02c ; ret
0x00000000000ec043 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xec05c ; ret
0x00000000000ec073 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xec08c ; ret
0x00000000000ec0a3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xec0bc ; ret
0x00000000000ec0d3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xec0ec ; ret
0x00000000000ec103 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xec11c ; ret
0x00000000000ec133 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xec14c ; ret
0x00000000000f6e6f : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf6ebb ; ret
0x00000000000f6ecf : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf6f1b ; ret
0x00000000000f8173 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf818c ; ret
0x00000000000f8413 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf842c ; ret
0x00000000000f8443 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf845c ; ret
0x00000000000f8513 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf852c ; ret
0x00000000000f8543 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf855c ; ret
0x00000000000f8603 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf861c ; ret
0x00000000000f8633 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf864c ; ret
0x00000000000f866c : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf86b5 ; ret
0x00000000000f888c : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf88d5 ; ret
0x00000000000f88ec : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf8935 ; ret
0x00000000000f8943 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf895c ; ret
0x00000000000f8dd3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf8dec ; ret
0x00000000000f8f1c : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf8f65 ; ret
0x00000000000f8f73 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf8f8c ; ret
0x00000000000f8fa3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf8fbc ; ret
0x00000000000f8fd3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf8fec ; ret
0x00000000000f9003 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf901c ; ret
0x00000000000f9033 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf904c ; ret
0x00000000000f906c : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf90b5 ; ret
0x00000000000f90c3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf90dc ; ret
0x00000000000f90f3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf910c ; ret
0x00000000000f9953 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf996c ; ret
0x00000000000f9983 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf999c ; ret
0x00000000000f99b3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf99cc ; ret
0x00000000000f99e6 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf99ff ; ret
0x00000000000fa073 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfa08c ; ret
0x00000000000fa0a6 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfa0bf ; ret
0x00000000000fa0d3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfa0ec ; ret
0x00000000000fa103 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfa11c ; ret
0x00000000000fa133 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfa14c ; ret
0x00000000000fa166 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfa17f ; ret
0x00000000000fa193 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfa1ac ; ret
0x00000000000fa1c3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfa1dc ; ret
0x00000000000fa1f3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfa20c ; ret
0x00000000000fcd6c : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfcdb5 ; ret
0x00000000000fd0d6 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfd0ef ; ret
0x00000000000fd86f : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfd8bb ; ret
0x00000000000fdfb3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfdfcc ; ret
0x00000000000fdfe3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfdffc ; ret
0x00000000000fe013 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfe02c ; ret
0x00000000000fe3a3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfe3bc ; ret
0x00000000000fe583 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfe59c ; ret
0x00000000000fe5bc : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfe605 ; ret
0x00000000000fe61c : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfe665 ; ret
0x00000000000fe67f : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfe6cb ; ret
0x00000000000fe6df : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfe72b ; ret
0x00000000000fea73 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfea8c ; ret
0x00000000000feb13 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfeb2c ; ret
0x00000000000feb4f : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfeb9b ; ret
0x00000000000feca3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfecbc ; ret
0x00000000000fecd3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfecec ; ret
0x00000000000fed0c : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfed55 ; ret
0x00000000000fed63 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfed7c ; ret
0x00000000000fed9c : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfede5 ; ret
0x00000000000fedf3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfee0c ; ret
0x00000000000ff163 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xff17c ; ret
0x00000000000ff193 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xff1ac ; ret
0x00000000000ff1c3 : add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xff1dc ; ret
0x000000000014483e : add byte ptr [rax], al ; syscall ; mov dword ptr [rip + 0x27caa4], 0xffffffff ; ret
0x0000000000124331 : add byte ptr [rax], al ; syscall ; mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ff0c5 : add byte ptr [rax], al ; syscall ; mov eax, edx ; ret
0x0000000000116d38 : add byte ptr [rax], al ; syscall ; mov eax, edx ; xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x116d43 ; pop rdx ; pop r10 ; ret
0x000000000003577b : add byte ptr [rax], al ; syscall ; mov eax, r8d ; add rsp, 0x90 ; ret
0x00000000000f7f3b : add byte ptr [rax], al ; syscall ; neg eax ; ret
0x0000000000116d65 : add byte ptr [rax], al ; syscall ; pop rdx ; pop rsi ; ret
0x00000000000bc763 : add byte ptr [rax], al ; syscall ; ret
0x0000000000108d4d : add byte ptr [rax], al ; syscall ; test rax, rax ; jl 0x108d92 ; je 0x108d64 ; ret
0x000000000016eeb4 : add byte ptr [rax], al ; test ah, 0x40 ; jne 0x16efaf ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000016ee62 : add byte ptr [rax], al ; test al, 0x40 ; jne 0x16ef3e ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000001a8b36 : add byte ptr [rax], al ; test al, 0x46 ; jmp qword ptr [rcx]
0x00000000000ac4f3 : add byte ptr [rax], al ; test al, 0xf0 ; jne 0xac66e ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000f7131 : add byte ptr [rax], al ; test al, al ; jne 0xf7157 ; mov eax, 9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001b69da : add byte ptr [rax], al ; test al, dl ; add dword ptr [rax], eax ; and byte ptr [rsi], cl ; clc ; jmp qword ptr [rax]
0x000000000019eeda : add byte ptr [rax], al ; test byte ptr [rbp], dl ; add al, dh ; in al, dx ; jmp qword ptr [rax]
0x000000000007e11c : add byte ptr [rax], al ; test byte ptr [rbx], 0x80 ; jne 0x7e13d ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000019ccda : add byte ptr [rax], al ; test byte ptr [rbx], dh ; add byte ptr [rax], al ; nop ; in eax, -0x17 ; jmp qword ptr [rax]
0x00000000001ad5da : add byte ptr [rax], al ; test byte ptr [rcx + rax], bh ; add byte ptr [rax + 0x58], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001b2ada : add byte ptr [rax], al ; test byte ptr [rcx - 0x1abfffff], dl ; idiv bh ; ret
0x0000000000195846 : add byte ptr [rax], al ; test byte ptr [rdi - 0x12], dl ; lcall ptr [rbx + rdx*8 + 0x57e40000] ; out dx, al ; call rsp
0x00000000000748be : add byte ptr [rax], al ; test byte ptr [rdi], 8 ; je 0x748e1 ; cmp esi, 0xff ; je 0x748e1 ; mov eax, 0xffffffff ; ret
0x000000000019570e : add byte ptr [rax], al ; test byte ptr [rdi], bh ; out dx, al ; jmp rsp
0x00000000001a43da : add byte ptr [rax], al ; test byte ptr [rdx - 0x49e00000], ch ; out dx, al ; jmp qword ptr [rdx]
0x00000000001af7da : add byte ptr [rax], al ; test byte ptr [rsi + 1], bl ; add al, dh ; jrcxz 0x1af7e1 ; call rsi
0x00000000001a47da : add byte ptr [rax], al ; test byte ptr [rsi - 0x2f800000], ch ; out dx, al ; jmp rbx
0x000000000016edd5 : add byte ptr [rax], al ; test dh, 0x40 ; jne 0x16ed1f ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000016ee1b : add byte ptr [rax], al ; test dh, 4 ; jne 0x16ed1f ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000001b6fda : add byte ptr [rax], al ; test dh, dl ; add dword ptr [rax], eax ; mov al, 0x2c ; clc ; jmp rdi
0x000000000016ed52 : add byte ptr [rax], al ; test dl, 0x40 ; jne 0x16ed1b ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000016ed80 : add byte ptr [rax], al ; test dl, 4 ; jne 0x16ed1b ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000012feef : add byte ptr [rax], al ; test eax, eax ; je 0x12ff08 ; xor eax, eax ; ret
0x00000000001463ed : add byte ptr [rax], al ; test eax, eax ; je 0x146411 ; cmp byte ptr [rsp + 0x1f], 0 ; jne 0x146421 ; add rsp, 0x38 ; ret
0x000000000012e0cf : add byte ptr [rax], al ; test eax, eax ; jne 0x12e0ee ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012e0ce : add byte ptr [rax], al ; test eax, eax ; jne 0x12e0ef ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012f2bf : add byte ptr [rax], al ; test eax, eax ; jne 0x12f2de ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012f428 : add byte ptr [rax], al ; test eax, eax ; jne 0x12f44e ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012fd52 : add byte ptr [rax], al ; test eax, eax ; jne 0x12fd76 ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012fd8f : add byte ptr [rax], al ; test eax, eax ; jne 0x12fdae ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012fe3f : add byte ptr [rax], al ; test eax, eax ; jne 0x12fe5e ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012fe8f : add byte ptr [rax], al ; test eax, eax ; jne 0x12feae ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012ff0f : add byte ptr [rax], al ; test eax, eax ; jne 0x12ff2e ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000131c7f : add byte ptr [rax], al ; test eax, eax ; jne 0x131c9e ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000132a84 : add byte ptr [rax], al ; test eax, eax ; jne 0x132aa6 ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000132b1f : add byte ptr [rax], al ; test eax, eax ; jne 0x132b3e ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000132bba : add byte ptr [rax], al ; test eax, eax ; jne 0x132bde ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000132c39 : add byte ptr [rax], al ; test eax, eax ; jne 0x132c5e ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000006bc5d : add byte ptr [rax], al ; test eax, eax ; jne 0x6bc7a ; mov rax, rbx ; pop rbx ; ret
0x0000000000143918 : add byte ptr [rax], al ; test eax, eax ; js 0x14395f ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x0000000000143d6f : add byte ptr [rax], al ; test eax, eax ; js 0x143db0 ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000143dcf : add byte ptr [rax], al ; test eax, eax ; js 0x143e10 ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000cd238 : add byte ptr [rax], al ; test eax, eax ; js 0xcd261 ; mov dword ptr fs:[rbx], ebp ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000fdd93 : add byte ptr [rax], al ; test eax, eax ; js 0xfddb6 ; mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00000000000fa05a : add byte ptr [rax], al ; test eax, eax ; sete al ; add rsp, 0x48 ; movzx eax, al ; ret
0x0000000000131c5f : add byte ptr [rax], al ; test eax, eax ; setne al ; add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000001329c7 : add byte ptr [rax], al ; test eax, eax ; setne al ; add rsp, 8 ; movzx eax, al ; ret
0x0000000000131cd9 : add byte ptr [rax], al ; test eax, eax ; setne al ; movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007cc94 : add byte ptr [rax], al ; test ebp, ebp ; jne 0x7cd71 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007cf45 : add byte ptr [rax], al ; test ebp, ebp ; jne 0x7d001 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000019b89e : add byte ptr [rax], al ; test ecx, ebp ; jmp rax
0x0000000000089bee : add byte ptr [rax], al ; test edi, edi ; je 0x89c0b ; mov eax, 0x16 ; ret
0x000000000013ed7e : add byte ptr [rax], al ; test edx, edx ; jne 0x13ed9b ; mov eax, 1 ; ret
0x000000000013edbe : add byte ptr [rax], al ; test edx, edx ; jne 0x13eddb ; mov eax, 1 ; ret
0x000000000002a44e : add byte ptr [rax], al ; test esi, esi ; je 0x2a46b ; cmp esi, 3 ; je 0x2a46b ; ret
0x00000000000aed2b : add byte ptr [rax], al ; test r13d, r13d ; mov r10, rbp ; setne dl ; jmp 0xaed51
0x00000000000b171a : add byte ptr [rax], al ; test r13d, r13d ; mov r10, rbp ; setne dl ; jmp 0xb1741
0x00000000000e992e : add byte ptr [rax], al ; test r8d, 0xfffffff8 ; je 0xe9950 ; mov eax, 2 ; ret
0x00000000000ac61e : add byte ptr [rax], al ; test rax, 1 ; je 0xac69e ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000001174fd : add byte ptr [rax], al ; test rax, rax ; je 0x117537 ; call rax
0x0000000000122222 : add byte ptr [rax], al ; test rax, rax ; je 0x122238 ; mov rdi, rbx ; call rax
0x000000000012251a : add byte ptr [rax], al ; test rax, rax ; je 0x122530 ; mov rdi, rbx ; call rax
0x000000000012262a : add byte ptr [rax], al ; test rax, rax ; je 0x122648 ; lea rdi, qword ptr [rip + 0x2a3068] ; call rax
0x000000000006efa2 : add byte ptr [rax], al ; test rax, rax ; je 0x6efc6 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006f072 : add byte ptr [rax], al ; test rax, rax ; je 0x6f096 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000008d82d : add byte ptr [rax], al ; test rax, rax ; je 0x8d84b ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c7c2b : add byte ptr [rax], al ; test rax, rax ; je 0xc7c53 ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000f80ff : add byte ptr [rax], al ; test rax, rax ; je 0xf815e ; xor edx, edx ; xor esi, esi ; mov rdi, rbx ; call rax
0x000000000013b7f2 : add byte ptr [rax], al ; test rax, rax ; jne 0x13b7e8 ; pop rbx ; ret
0x00000000000ff6ad : add byte ptr [rax], al ; test rax, rax ; jne 0xff695 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000ff87e : add byte ptr [rax], al ; test rax, rax ; jne 0xff865 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000006c2ad : add byte ptr [rax], al ; test rax, rax ; sete al ; add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
0x0000000000172569 : add byte ptr [rax], al ; test rbx, rbx ; mov qword ptr [rip + 0x2511ab], rbx ; jne 0x172567 ; pop rbx ; ret
0x00000000001a7726 : add byte ptr [rax], al ; test rcx, rsi ; jmp qword ptr [rcx]
0x0000000000098332 : add byte ptr [rax], al ; test rdi, rdi ; je 0x9831c ; mov rsi, qword ptr [r12] ; test rsi, rsi ; jne 0x9835d ; jmp 0x98317
0x00000000000ace0e : add byte ptr [rax], al ; test rdi, rdi ; je 0xace31 ; mov eax, dword ptr [rdi] ; test eax, eax ; sete al ; movzx eax, al ; ret
0x000000000003a92e : add byte ptr [rax], al ; test rdi, rdi ; push rbx ; je 0x3a980 ; xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x3a950 ; pop rbx ; ret
0x00000000000f733e : add byte ptr [rax], al ; test si, 0xff80 ; mov eax, 0x16 ; je 0xf735f ; ret
0x000000000008993e : add byte ptr [rax], al ; test sil, 7 ; mov eax, 0x16 ; je 0x8995d ; ret
0x00000000001aafb6 : add byte ptr [rax], al ; xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rsi + rdx + 1], ah ; add byte ptr [rax], dl ; jge 0x1aafc4 ; jmp rdi
0x00000000001ac7ea : add byte ptr [rax], al ; xchg eax, esp ; add dword ptr cs:[rax], eax ; jo 0x1ac818 ; cmc ; call qword ptr [rsi]
0x0000000000194ad6 : add byte ptr [rax], al ; xchg eax, esp ; and dl, ch ; jmp rsp
0x000000000019510e : add byte ptr [rax], al ; xchg eax, esp ; and ebp, esp ; jmp rsp
0x000000000019d68f : add byte ptr [rax], al ; xchg eax, esp ; cli ; jmp qword ptr [rcx]
0x00000000001b40ea : add byte ptr [rax], al ; xchg eax, esp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; push rax ; jl 0x1b40f3 ; call rcx
0x00000000001a71ea : add byte ptr [rax], al ; xchg eax, esp ; fadd dword ptr [rax] ; add byte ptr [rax], dh ; int1 ; call qword ptr [rcx]
0x00000000001a74ea : add byte ptr [rax], al ; xchg eax, esp ; fild dword ptr [rax] ; add byte ptr [rax], ah ; pop rdi ; int1 ; call rbx
0x0000000000194dde : add byte ptr [rax], al ; xchg eax, esp ; jl 0x194dd2 ; jmp rsp
0x0000000000195d86 : add byte ptr [rax], al ; xchg eax, esp ; jno 0x195d7f ; call rsp
0x000000000019f6aa : add byte ptr [rax], al ; xchg eax, esp ; or al, byte ptr [rax] ; add byte ptr [rax + 0x12], dh ; in eax, dx ; call qword ptr [rax]
0x0000000000195e36 : add byte ptr [rax], al ; xchg eax, esp ; out dx, eax ; dec dword ptr [rsi + rdi*8 - 0x6b2c0000] ; out dx, eax ; call rsp
0x0000000000194b36 : add byte ptr [rax], al ; xchg eax, esp ; sub ebp, edx ; jmp qword ptr [rdi + rdi*2 + 0x2be40000]
0x00000000000a2dbe : add byte ptr [rax], al ; xor ah, ah ; mov byte ptr [rdx + 1], ah ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000000a2dfe : add byte ptr [rax], al ; xor ah, ah ; mov byte ptr [rdx + 4], ah ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000019ed0e : add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; cld ; add byte ptr [rax], al ; add byte ptr [rax], ch ; fsub st(4), st(0) ; jmp qword ptr [rcx]
0x00000000001a70c6 : add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; je 0x1a70b2 ; add byte ptr [rax], al ; nop ; int1 ; call rdx
0x00000000001a70fe : add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; xlatb ; add byte ptr [rax], al ; cmp byte ptr [rdx - 0xf], cl ; jmp rcx
0x00000000001a11c6 : add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; mov ah, 0x25 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x13], dh ; jmp qword ptr [rcx]
0x00000000001b5bee : add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; pushfq ; ret 1
0x00000000001b5c96 : add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; ret
0x00000000001a173e : add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; sub al, 0x2b ; add byte ptr [rax], al ; call 0x281a04dc
0x00000000001a74e6 : add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; fild dword ptr [rax] ; add byte ptr [rax], ah ; pop rdi ; int1 ; call rbx
0x00000000001aa98a : add byte ptr [rax], al ; xor al, 0x10 ; add dword ptr [rax], eax ; adc byte ptr [rsi], dl ; hlt ; call qword ptr [rsi]
0x00000000001abe8a : add byte ptr [rax], al ; xor al, 0x25 ; add dword ptr [rax], eax ; xor bl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001ae68a : add byte ptr [rax], al ; xor al, 0x4d ; add dword ptr [rax], eax ; push rax ; lodsb al, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae98a : add byte ptr [rax], al ; xor al, 0x50 ; add dword ptr [rax], eax ; mov al, 0xf5 ; call qword ptr [rsi]
0x00000000001aec8a : add byte ptr [rax], al ; xor al, 0x53 ; add dword ptr [rax], eax ; nop ; mov ch, 0xf5 ; jmp qword ptr [rbx]
0x0000000000195d1e : add byte ptr [rax], al ; xor al, 0x64 ; out dx, eax ; push qword ptr [rdi + rsi*8 + 0x65240000] ; out dx, eax ; jmp rsp
0x00000000001a1b8a : add byte ptr [rax], al ; xor al, 0x82 ; add byte ptr [rax], al ; nop ; xchg eax, esp ; in eax, dx ; call qword ptr [rcx]
0x00000000001a458a : add byte ptr [rax], al ; xor al, 0xac ; add byte ptr [rax], al ; push rax ; ret
0x00000000001a498a : add byte ptr [rax], al ; xor al, 0xb0 ; add byte ptr [rax], al ; shr byte ptr [rcx - 6], 1 ; call qword ptr [rax]
0x0000000000195e76 : add byte ptr [rax], al ; xor al, 0xb3 ; out dx, eax ; jmp rsp
0x00000000001a547e : add byte ptr [rax], al ; xor bh, bl ; cld ; call qword ptr [rax]
0x00000000001a8f3e : add byte ptr [rax], al ; xor byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001a71ee : add byte ptr [rax], al ; xor byte ptr [rbx - 0xf], cl ; call qword ptr [rcx]
0x00000000001a716e : add byte ptr [rax], al ; xor byte ptr [rbx - 0xf], cl ; jmp qword ptr [rcx]
0x00000000000fda2a : add byte ptr [rax], al ; xor byte ptr [rcx], 0xc0 ; ret
0x00000000001ac9a2 : add byte ptr [rax], al ; xor byte ptr [rcx], r8b ; add byte ptr [rax + 0x21], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a643e : add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a49ee : add byte ptr [rax], al ; xor ch, 0xee ; call qword ptr [rax]
0x00000000000a9eee : add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x0000000000034b4e : add byte ptr [rax], al ; xor dl, 0xf ; adc dword ptr [rdi], eax ; and rax, rdx ; movq xmm0, rax ; ret
0x00000000000bccfe : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c7f56 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000cca4a : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f9c1e : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x198 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000879f9 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000121236 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000000000146a56 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x38 ; ret
0x000000000003b0be : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003a30a : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bbbfc : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x000000000002de9e : add byte ptr [rax], al ; xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x00000000000d808b : add byte ptr [rax], al ; xor eax, eax ; cmp ebx, 0xa ; je 0xd8100 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001039f7 : add byte ptr [rax], al ; xor eax, eax ; cmp qword ptr [rsi], 0 ; je 0x103a13 ; ret
0x00000000001307ee : add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x00000000001725a3 : add byte ptr [rax], al ; xor eax, eax ; lock cmpxchg qword ptr [rip + 0x2512b0], rdx ; je 0x1725c2 ; ret
0x000000000012592b : add byte ptr [rax], al ; xor eax, eax ; mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x000000000008ba04 : add byte ptr [rax], al ; xor eax, eax ; mov qword ptr [rbx + 8], rbp ; mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e713 : add byte ptr [rax], al ; xor eax, eax ; mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x0000000000138466 : add byte ptr [rax], al ; xor eax, eax ; mov rsi, qword ptr [rsp + 0x30] ; mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000134dee : add byte ptr [rax], al ; xor eax, eax ; mov rsi, qword ptr [rsp + 0x38] ; mov rdi, r12 ; mov rcx, qword ptr [rsp + 0x30] ; call rcx
0x00000000001307a6 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x0000000000089921 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000089e11 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013a397 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000bb983 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000003a4eb : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c900b : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000003a153 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000144b45 : add byte ptr [rax], al ; xor eax, eax ; rep movsq qword ptr [rdi], qword ptr [rsi] ; mov qword ptr [rbp], rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000365b6 : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000f849b : add byte ptr [rax], al ; xor eax, eax ; sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000078cce : add byte ptr [rax], al ; xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000078cde : add byte ptr [rax], al ; xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x000000000007c36e : add byte ptr [rax], al ; xor eax, eax ; test rdx, rdx ; jne 0x7c389 ; ret
0x000000000003b236 : add byte ptr [rax], al ; xor eax, ecx ; ret
0x0000000000103343 : add byte ptr [rax], al ; xor ebx, ebx ; mov dword ptr [rdx], eax ; add dword ptr [rbp], ebx ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c8176 : add byte ptr [rax], al ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006bc6e : add byte ptr [rax], al ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; ret
0x0000000000071cae : add byte ptr [rax], al ; xor edx, edx ; mov rax, rdx ; ret
0x00000000000f77ef : add byte ptr [rax], al ; xor edx, edx ; mov rsi, r13 ; mov edi, ebx ; call 0x3580f
0x000000000008fac1 : add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x00000000000ca276 : add byte ptr [rax], al ; xor edx, edx ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000004daeb : add byte ptr [rax], al ; xor esi, esi ; call rax
0x0000000000119216 : add byte ptr [rax], al ; xor esi, esi ; mov rax, rsi ; ret
0x0000000000104af3 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000104b18 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000104b3c : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000104b5c : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000001109fb : add byte ptr [rax], al ; xor esi, esi ; mov rdx, qword ptr [rsp + 0x10] ; mov edi, 0x2000004 ; call rax
0x0000000000035523 : add byte ptr [rax], al ; xor esi, esi ; test eax, eax ; sete sil ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x0000000000029870 : add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x0000000000090d8d : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000001a58e6 : add byte ptr [rax], al ; xor sil, al ; jmp rbx
0x00000000001ba71f : add byte ptr [rax], bh ; add byte ptr [rax], al ; add byte ptr [rbx + 6], dl ; add byte ptr [rax], al ; ret 2
0x000000000011082b : add byte ptr [rax], bh ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x000000000003ac6a : add byte ptr [rax], bh ; cmp edx, 0xff ; cmovne rax, rbx ; pop rbx ; ret
0x000000000019ffd7 : add byte ptr [rax], bh ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001a7107 : add byte ptr [rax], bh ; int1 ; jmp rcx
0x00000000001a28f7 : add byte ptr [rax], bh ; leave ; in eax, dx ; jmp qword ptr [rax]
0x00000000001ae677 : add byte ptr [rax], bh ; lodsb al, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ab427 : add byte ptr [rax], bh ; mov bh, 0xf9 ; call qword ptr [rax]
0x00000000001aea37 : add byte ptr [rax], bh ; mov cl, 0xf5 ; jmp qword ptr [rcx]
0x00000000001b0957 : add byte ptr [rax], bh ; movsxd rsi, esi ; jmp qword ptr [rsi]
0x00000000001af887 : add byte ptr [rax], bh ; out -0xb, eax ; jmp rsp
0x00000000001af087 : add byte ptr [rax], bh ; ret
0x00000000001ae8b7 : add byte ptr [rax], bh ; scasd eax, dword ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae267 : add byte ptr [rax], bh ; xchg eax, esp ; cmc ; jmp qword ptr [rcx]
0x00000000001ac957 : add byte ptr [rax], bl ; and ebp, esi ; jmp qword ptr [rcx]
0x00000000001a9167 : add byte ptr [rax], bl ; call qword ptr [eax]
0x00000000001a8ac7 : add byte ptr [rax], bl ; call qword ptr [rdx]
0x00000000001b7a17 : add byte ptr [rax], bl ; clc ; call qword ptr [rdx]
0x00000000001acb47 : add byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a8867 : add byte ptr [rax], bl ; cmp edx, esi ; call rsi
0x000000000019cab7 : add byte ptr [rax], bl ; fucompi st(1) ; jmp qword ptr [rsi]
0x00000000001abe77 : add byte ptr [rax], bl ; jrcxz 0x1abe73 ; jmp qword ptr [rcx]
0x000000000019cde7 : add byte ptr [rax], bl ; out 0xe9, al ; call qword ptr [rsi]
0x00000000001a8f27 : add byte ptr [rax], bl ; push rbp ; jmp qword ptr [rcx]
0x00000000001a72e7 : add byte ptr [rax], bl ; push rsi ; int1 ; jmp qword ptr [rcx]
0x00000000001ae427 : add byte ptr [rax], bl ; stosb byte ptr [rdi], al ; cmc ; jmp qword ptr [rcx]
0x000000000019f707 : add byte ptr [rax], ch ; adc al, 0xed ; jmp qword ptr [rdi]
0x0000000000003f97 : add byte ptr [rax], ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x000000000019ed17 : add byte ptr [rax], ch ; fsub st(4), st(0) ; jmp qword ptr [rcx]
0x00000000001a6427 : add byte ptr [rax], ch ; ja 0x1a641f ; jmp qword ptr [rax]
0x00000000001a6457 : add byte ptr [rax], ch ; ja 0x1a644f ; call qword ptr [rdx]
0x00000000001a6487 : add byte ptr [rax], ch ; ja 0x1a647f ; call qword ptr [rdx]
0x00000000001a64b7 : add byte ptr [rax], ch ; ja 0x1a64af ; call qword ptr [rdx]
0x00000000001a64e7 : add byte ptr [rax], ch ; ja 0x1a64df ; call qword ptr [rdx]
0x00000000001a6517 : add byte ptr [rax], ch ; ja 0x1a650f ; call qword ptr [rdx]
0x00000000001ae737 : add byte ptr [rax], ch ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ad597 : add byte ptr [rax], ch ; pop rax ; cmc ; jmp qword ptr [rcx]
0x00000000001ad677 : add byte ptr [rax], ch ; pop rcx ; cmc ; call rdx
0x00000000000ac932 : add byte ptr [rax], cl ; add byte ptr [rax + rcx + 0x48], dh ; lea eax, dword ptr [rip + 0xc03c2] ; ret
0x0000000000090e82 : add byte ptr [rax], cl ; add byte ptr [rax + rcx + 0x48], dh ; lea eax, dword ptr [rip + 0xda832] ; ret
0x000000000001bbf7 : add byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rdi]
0x000000000001dab7 : add byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001a43f : add byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, al ; ret
0x00000000001ae647 : add byte ptr [rax], cl ; lodsb al, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a5b87 : add byte ptr [rax], cl ; mov al, 0xfa ; call qword ptr [rax]
0x00000000001aea07 : add byte ptr [rax], cl ; mov cl, 0xf5 ; jmp qword ptr [rcx]
0x00000000001b0927 : add byte ptr [rax], cl ; movsxd rsi, esi ; jmp qword ptr [rsi]
0x000000000002dce4 : add byte ptr [rax], cl ; movzx eax, ax ; ret
0x00000000001ab667 : add byte ptr [rax], cl ; retf ; hlt ; jmp qword ptr [rcx]
0x00000000001b6e47 : add byte ptr [rax], cl ; sub al, bh ; jmp rdi
0x00000000001add37 : add byte ptr [rax], cl ; test ch, dh ; jmp rax
0x00000000001ae237 : add byte ptr [rax], cl ; xchg eax, esp ; cmc ; jmp qword ptr [rcx]
0x00000000001acb5f : add byte ptr [rax], dh ; cmc ; jmp qword ptr [rcx]
0x0000000000007c37 : add byte ptr [rax], dh ; in al, 0x10 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 2], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000a9eef : add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x00000000001a71ef : add byte ptr [rax], dh ; int1 ; call qword ptr [rcx]
0x00000000001a716f : add byte ptr [rax], dh ; int1 ; jmp qword ptr [rcx]
0x00000000001a643f : add byte ptr [rax], dh ; ja 0x1a6437 ; call qword ptr [rax]
0x00000000001a646f : add byte ptr [rax], dh ; ja 0x1a6467 ; call qword ptr [rax]
0x00000000001a649f : add byte ptr [rax], dh ; ja 0x1a6497 ; call qword ptr [rax]
0x00000000001a64cf : add byte ptr [rax], dh ; ja 0x1a64c7 ; call qword ptr [rax]
0x00000000001a64ff : add byte ptr [rax], dh ; ja 0x1a64f7 ; call qword ptr [rax]
0x00000000001abe8f : add byte ptr [rax], dh ; jrcxz 0x1abe8b ; jmp qword ptr [rcx]
0x00000000001a8f3f : add byte ptr [rax], dh ; push rbp ; jmp qword ptr [rcx]
0x00000000000085f7 : add byte ptr [rax], dh ; ret
0x00000000001ae43f : add byte ptr [rax], dh ; stosb byte ptr [rdi], al ; cmc ; jmp qword ptr [rcx]
0x00000000001291e0 : add byte ptr [rax], dl ; add bl, ch ; leave ; mov eax, 0x200000 ; jmp 0x1291b9
0x00000000000f9879 : add byte ptr [rax], dl ; add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001173c4 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006bcc5 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000006bcd3 : add byte ptr [rax], dl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000008fda5 : add byte ptr [rax], dl ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xbd7ef] ; ret
0x000000000008fa15 : add byte ptr [rax], dl ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xbda4f] ; ret
0x000000000008d5a5 : add byte ptr [rax], dl ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xbfd7f] ; ret
0x00000000001a835f : add byte ptr [rax], dl ; and edx, esi ; call rsi
0x000000000018610c : add byte ptr [rax], dl ; call qword ptr [rax]
0x00000000001b8fcf : add byte ptr [rax], dl ; cdq ; clc ; call qword ptr [rax]
0x00000000001a145f : add byte ptr [rax], dl ; jge 0x1a1454 ; call rsi
0x00000000001aafbf : add byte ptr [rax], dl ; jge 0x1aafbb ; jmp rdi
0x00000000001a598f : add byte ptr [rax], dl ; jl 0x1a5991 ; call qword ptr [rdi]
0x00000000000908f3 : add byte ptr [rax], dl ; lea rax, qword ptr [rip + 0x19ab4] ; cmove rax, rdx ; ret
0x00000000001ae71f : add byte ptr [rax], dl ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x0000000000003f8f : add byte ptr [rax], dl ; loop 0x3fb0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x000000000002ddc4 : add byte ptr [rax], dl ; movzx eax, ax ; ret
0x00000000001b694f : add byte ptr [rax], dl ; or al, 0xf8 ; jmp qword ptr [rax]
0x00000000001b5a1f : add byte ptr [rax], dl ; ret 0xfff7
0x00000000001a483f : add byte ptr [rax], dl ; shr dh, cl ; call qword ptr [rcx]
0x000000000019e050 : add byte ptr [rax], r8b ; add ah, bh ; add byte ptr [rax], r8b ; shr rdx, 1 ; jmp rdi
0x00000000001a9a40 : add byte ptr [rax], r8b ; add ah, ch ; add byte ptr [rcx], al ; add byte ptr [rax + 0x17], ch ; call qword ptr [rsi]
0x00000000001b2b20 : add byte ptr [rax], r8b ; add ah, cl ; xchg eax, ecx ; add dword ptr [rax], eax ; enter -0x91b, -1 ; ret
0x00000000001b3f28 : add byte ptr [rax], r8b ; add ah, dl ; movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; shr cl, 0xfb ; call rsi
0x00000000001ac328 : add byte ptr [rax], r8b ; add ah, dl ; sub dword ptr [rcx], eax ; add byte ptr [rax + 0xe], dh ; cmc ; jmp qword ptr [rax]
0x00000000001a3a10 : add byte ptr [rax], r8b ; add byte ptr [rax + 0x62c80000], bh ; out dx, al ; call rsi
0x00000000001a19e8 : add byte ptr [rax], r8b ; add byte ptr [rax + rax*4 - 0x73400000], dl ; in eax, dx ; jmp rcx
0x00000000001ac208 : add byte ptr [rax], r8b ; add byte ptr [rax + rbp + 0xbb00001], dh ; cmc ; jmp rcx
0x000000000019f200 : add byte ptr [rax], r8b ; add byte ptr [rax + rbx*2 - 0xa80000], ch ; in al, dx ; call rsp
0x00000000001a2978 : add byte ptr [rax], r8b ; add byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; ror dl, 1 ; in eax, dx ; call rdi
0x00000000001b7490 : add byte ptr [rax], r8b ; add byte ptr [rbx + rbx*8], bh ; add dword ptr [rax], eax ; fdivr dword ptr [rcx] ; clc ; call rax
0x00000000001a1458 : add byte ptr [rax], r8b ; add byte ptr [rbx + rdi*2], al ; add byte ptr [rax], al ; adc byte ptr [rbp - 0x13], bh ; call rsi
0x00000000001b9aa8 : add byte ptr [rax], r8b ; add byte ptr [rcx + rax + 2], dl ; add byte ptr [rax - 0x3d], ah ; clc ; jmp rcx
0x00000000001b9a58 : add byte ptr [rax], r8b ; add byte ptr [rcx + rax], al ; add al, byte ptr [rax] ; rol cl, 1 ; clc ; call rcx
0x00000000001a2268 : add byte ptr [rax], r8b ; add byte ptr [rcx + rcx*4], dl ; add byte ptr [rax], al ; nop ; mov dh, 0xed ; call qword ptr [rbx]
0x00000000001b2ad8 : add byte ptr [rax], r8b ; add byte ptr [rcx + rdx*4 - 0x1abfffff], al ; idiv bh ; ret
0x00000000001ad100 : add byte ptr [rax], r8b ; add byte ptr [rdi + rsi + 0x3c980001], ch ; cmc ; call qword ptr [rdi]
0x0000000000199fd0 : add byte ptr [rax], r8b ; add byte ptr [rsi + rax], bh ; add al, ch ; test eax, ebp ; call rsp
0x000000000019ffd0 : add byte ptr [rax], r8b ; add byte ptr [rsi], bh ; add byte ptr [rax], bh ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001a9db0 : add byte ptr [rax], r8b ; add byte ptr [rsp + rax + 1], bl ; add byte ptr [rax + 0x36], ch ; call qword ptr [rcx]
0x000000000006c415 : add byte ptr [rax], r8b ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x000000000008b97d : add byte ptr [rax], r8b ; add eax, dword ptr [rdx] ; sub eax, edx ; mov rdx, qword ptr [rdx + 8] ; test rdx, rdx ; jne 0x8b991 ; ret
0x000000000009872d : add byte ptr [rax], r8b ; add qword ptr [rbp], r12 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000048545 : add byte ptr [rax], r8b ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006bccd : add byte ptr [rax], r8b ; add rsp, 0x1000 ; xor eax, eax ; pop rbx ; ret
0x000000000013d7fd : add byte ptr [rax], r8b ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000008044d : add byte ptr [rax], r8b ; add rsp, 0x18 ; xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000136415 : add byte ptr [rax], r8b ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012d745 : add byte ptr [rax], r8b ; add rsp, 8 ; mov eax, 1 ; pop rbx ; pop rbp ; ret
0x00000000000495a5 : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000371dd : add byte ptr [rax], r8b ; add rsp, 8 ; ret
0x000000000010c6d5 : add byte ptr [rax], r8b ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008d7b5 : add byte ptr [rax], r8b ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000007715d : add byte ptr [rax], r8b ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x000000000014879d : add byte ptr [rax], r8b ; bsf rdx, rdx ; movzx ecx, byte ptr [rsi + rdx] ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000055f7d : add byte ptr [rax], r8b ; call 0x721f5
0x000000000007d575 : add byte ptr [rax], r8b ; call 0x79875
0x00000000000d259d : add byte ptr [rax], r8b ; cmp al, 0x2a ; je 0xd25b8 ; cmp al, 0x3f ; jne 0xd258e ; mov eax, 1 ; ret
0x00000000000d81ed : add byte ptr [rax], r8b ; cmp al, 1 ; jne 0xd81f6 ; xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xd8197 ; ret
0x00000000000d832d : add byte ptr [rax], r8b ; cmp byte ptr [rbx + 0x63], 0 ; jne 0xd87c1 ; mov dword ptr [rbx + 0x2c], eax ; jmp 0xd8313
0x000000000013d36d : add byte ptr [rax], r8b ; cmp eax, 1 ; jne 0x13d36d ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x0000000000114e8d : add byte ptr [rax], r8b ; cmp edi, 0x56 ; je 0x114ead ; mov eax, 7 ; ret
0x00000000000fcbdd : add byte ptr [rax], r8b ; cmp edx, 4 ; ja 0xfcbfe ; mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x0000000000036c05 : add byte ptr [rax], r8b ; lea eax, dword ptr [rdx + 1] ; mov dword ptr [rip + 0x38a47b], eax ; mov eax, edx ; ret
0x000000000002cb25 : add byte ptr [rax], r8b ; lea rax, qword ptr [rip + 0x15def6] ; ret
0x000000000012d7dd : add byte ptr [rax], r8b ; lea rax, qword ptr [rip + 0x5d23e] ; ret
0x000000000013045d : add byte ptr [rax], r8b ; lea rdx, qword ptr [rip + 0x290719] ; jmp qword ptr [rdx + rax*8]
0x00000000000a08cd : add byte ptr [rax], r8b ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000a080d : add byte ptr [rax], r8b ; mov byte ptr [rdi], sil ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a768d : add byte ptr [rax], r8b ; mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000035c1d : add byte ptr [rax], r8b ; mov dword ptr [rbp], ecx ; add rsp, 0x88 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000134c2d : add byte ptr [rax], r8b ; mov dword ptr [rcx + 4], 1 ; mov eax, 1 ; ret
0x000000000013794d : add byte ptr [rax], r8b ; mov dword ptr [rdi + 4], 1 ; mov eax, 1 ; ret
0x00000000000a08bd : add byte ptr [rax], r8b ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x00000000000a08fd : add byte ptr [rax], r8b ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00000000000a09ad : add byte ptr [rax], r8b ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a09bd : add byte ptr [rax], r8b ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a091d : add byte ptr [rax], r8b ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a08ad : add byte ptr [rax], r8b ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00000000000a9f0d : add byte ptr [rax], r8b ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000ce3dd : add byte ptr [rax], r8b ; mov eax, 0x6f ; syscall ; ret
0x000000000010914d : add byte ptr [rax], r8b ; mov eax, 0xe4 ; syscall ; ret
0x0000000000056845 : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; mov qword ptr [rdi], r10 ; ret
0x000000000007f29d : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x0000000000170d1d : add byte ptr [rax], r8b ; mov eax, 1 ; jg 0x170d3c ; neg eax ; ret
0x00000000000cf9b5 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x000000000013b7fd : add byte ptr [rax], r8b ; mov eax, 2 ; ret
0x00000000000f7e2d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x108] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000012ffa5 : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x30] ; test eax, eax ; jne 0x130000 ; mov dword ptr [rsi], 0 ; ret
0x00000000000d8105 : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x0000000000116b6d : add byte ptr [rax], r8b ; mov eax, dword ptr [rip + 0x2afbba] ; test eax, eax ; jne 0x116b8f ; xor eax, eax ; ret
0x00000000000a084d : add byte ptr [rax], r8b ; mov eax, dword ptr [rsp + 0x10] ; mov byte ptr [rdi + 4], cl ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000cd24d : add byte ptr [rax], r8b ; mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003a8fd : add byte ptr [rax], r8b ; mov eax, edi ; cdq ; idiv esi ; shl rdx, 0x20 ; mov eax, eax ; or rax, rdx ; ret
0x000000000011b29d : add byte ptr [rax], r8b ; mov eax, esi ; shl edi, 0x18 ; and eax, 0xffffff ; or eax, edi ; bswap eax ; ret
0x00000000000a6d8d : add byte ptr [rax], r8b ; mov ecx, dword ptr [rsi] ; mov dx, word ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000ac9f5 : add byte ptr [rax], r8b ; mov edx, dword ptr [rax + rcx] ; add rax, 4 ; test edx, edx ; mov dword ptr [rax], edx ; jne 0xaca09 ; ret
0x00000000000a609d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000013e69d : add byte ptr [rax], r8b ; mov qword ptr [rdi + 0x18], rsi ; mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000006efb5 : add byte ptr [rax], r8b ; mov rax, -1 ; ret
0x0000000000116675 : add byte ptr [rax], r8b ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000130e1d : add byte ptr [rax], r8b ; mov rax, qword ptr [rbx + 8] ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000cd4d5 : add byte ptr [rax], r8b ; mov rax, qword ptr [rbx] ; mov rdx, qword ptr [rax + 0x18] ; test rdx, rdx ; je 0xcd4f8 ; call rdx
0x000000000013dd7d : add byte ptr [rax], r8b ; mov rax, qword ptr [rdi + 8] ; mov qword ptr [rsp + 8], r8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013d465 : add byte ptr [rax], r8b ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000013abbd : add byte ptr [rax], r8b ; mov rax, qword ptr [rip + 0x2863c1] ; add rsp, 8 ; ret
0x0000000000103add : add byte ptr [rax], r8b ; mov rax, qword ptr [rip + 0x2bd391] ; mov dword ptr fs:[rax], 0x16 ; ret
0x000000000002e02d : add byte ptr [rax], r8b ; mov rax, qword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000003419d : add byte ptr [rax], r8b ; mov rax, rcx ; ret
0x00000000000a730d : add byte ptr [rax], r8b ; mov rax, rdi ; ret
0x00000000000a76fd : add byte ptr [rax], r8b ; mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a60fd : add byte ptr [rax], r8b ; mov rcx, qword ptr [rsi] ; mov dx, word ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a60dd : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000086a85 : add byte ptr [rax], r8b ; mov rsi, qword ptr [rsp + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000000a096d : add byte ptr [rax], r8b ; mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000001266fd : add byte ptr [rax], r8b ; movsxd rdx, edx ; mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x000000000017022d : add byte ptr [rax], r8b ; movzx eax, byte ptr [rdi - 0xa] ; movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x000000000017021d : add byte ptr [rax], r8b ; movzx eax, byte ptr [rdi - 0xb] ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000017020d : add byte ptr [rax], r8b ; movzx eax, byte ptr [rdi - 0xc] ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000001701fd : add byte ptr [rax], r8b ; movzx eax, byte ptr [rdi - 0xd] ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x00000000001701ed : add byte ptr [rax], r8b ; movzx eax, byte ptr [rdi - 0xe] ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x00000000001701dd : add byte ptr [rax], r8b ; movzx eax, byte ptr [rdi - 0xf] ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000002369d : add byte ptr [rax], r8b ; movzx eax, sil ; test sil, sil ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x0000000000165f13 : add byte ptr [rax], r8b ; nop word ptr cs:[rax + rax] ; mov byte ptr [rcx], dl ; ret
0x00000000000a7033 : add byte ptr [rax], r8b ; nop word ptr cs:[rax + rax] ; mov byte ptr [rdi], dl ; ret
0x00000000000a6d33 : add byte ptr [rax], r8b ; nop word ptr cs:[rax + rax] ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000a5ba3 : add byte ptr [rax], r8b ; nop word ptr cs:[rax + rax] ; mov rax, rdi ; ret
0x00000000000a6d23 : add byte ptr [rax], r8b ; nop word ptr cs:[rax + rax] ; ret
0x0000000000170d33 : add byte ptr [rax], r8b ; nop word ptr cs:[rax + rax] ; xor eax, eax ; ret
0x0000000000049c95 : add byte ptr [rax], r8b ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012ec8d : add byte ptr [rax], r8b ; pop rbx ; ret
0x00000000000474e5 : add byte ptr [rax], r8b ; ret
0x000000000019e055 : add byte ptr [rax], r8b ; shr rdx, 1 ; jmp rdi
0x000000000010c055 : add byte ptr [rax], r8b ; sub edi, 0x30 ; xor eax, eax ; cmp edi, 9 ; setbe al ; ret
0x000000000007e545 : add byte ptr [rax], r8b ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x00000000000743f5 : add byte ptr [rax], r8b ; sub r8, rcx ; sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000013edbd : add byte ptr [rax], r8b ; test edx, edx ; jne 0x13eddc ; mov eax, 1 ; ret
0x000000000002a44d : add byte ptr [rax], r8b ; test esi, esi ; je 0x2a46c ; cmp esi, 3 ; je 0x2a46c ; ret
0x000000000008993d : add byte ptr [rax], r8b ; test sil, 7 ; mov eax, 0x16 ; je 0x8995e ; ret
0x0000000000146a55 : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000000000e8f3d : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 8 ; ret
0x000000000003aa6d : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x00000000000365b5 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x00000000000c8175 : add byte ptr [rax], r8b ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000071cad : add byte ptr [rax], r8b ; xor edx, edx ; mov rax, rdx ; ret
0x0000000000119215 : add byte ptr [rax], r8b ; xor esi, esi ; mov rax, rsi ; ret
0x00000000000abd2d : add byte ptr [rax], r8b ; xor rax, rax ; ret
0x00000000000868cb : add byte ptr [rbp + 0x12], dh ; add rax, 8 ; cmp rdx, rax ; ja 0x868d7 ; xor eax, eax ; ret
0x0000000000126a63 : add byte ptr [rbp + 0x12], dh ; movzx eax, byte ptr [rdi + 1] ; shl eax, 3 ; cdqe ; shr rax, 4 ; ret
0x00000000000ceb5f : add byte ptr [rbp + 0x1b8ff], al ; add byte ptr [rax], al ; js 0xceb7b ; ret
0x00000000000ceb5e : add byte ptr [rbp + 0x1b8ff], al ; add byte ptr [rax], al ; js 0xceb7c ; ret
0x000000000007b0bf : add byte ptr [rbp + 0x29], cl ; dec byte ptr [rax - 0x77] ; ret 0x294c
0x000000000012e0d0 : add byte ptr [rbp + 0x310b75c0], al ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000132bbb : add byte ptr [rbp + 0x311075c0], al ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000ae1fe : add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x63] ; ret
0x00000000000c381e : add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000acd87 : add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx + rcx*4 - 0x12], 0x4c ; lea ecx, dword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x000000000011765f : add byte ptr [rbp + 0x31], dl ; ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x000000000012dfa8 : add byte ptr [rbp + 0x481374c0], al ; add esp, 0x30 ; lea rax, qword ptr [rip + 0x297d88] ; pop rbx ; ret
0x0000000000025f78 : add byte ptr [rbp + 0x52880fd2], al ; add dword ptr [rax], eax ; add bh, dh ; ret 0xf800
0x0000000000036c07 : add byte ptr [rbp + 0x5890142], cl ; jnp 0x36bbf ; cmp byte ptr [rax], al ; mov eax, edx ; ret
0x000000000007a71e : add byte ptr [rbp + 0x58d48c0], al ; fdivr dword ptr [rsp + rsi] ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000007b4dd : add byte ptr [rbp + 0x6b894cc9], al ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000ed269 : add byte ptr [rbp + 0x798e0fc0], al ; or al, byte ptr [rax] ; add byte ptr [rcx - 0x75], al ; add al, 0x85 ; ror byte ptr [rdi], 0x94 ; ret 0xf883
0x000000000007a86c : add byte ptr [rbp + 0x7b894cc9], al ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000011805a : add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0x564bc] ; ret
0x0000000000117f9a : add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0x5659c] ; ret
0x0000000000117eda : add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0x5665c] ; ret
0x0000000000096661 : add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0xd7ee5] ; ret
0x00000000000919a1 : add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0xdcb85] ; ret
0x00000000000912f1 : add byte ptr [rbp + 0x7c], dh ; lea rax, qword ptr [rip + 0xdd255] ; ret
0x00000000000c04a8 : add byte ptr [rbp + 0xd], dh ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000a069b : add byte ptr [rbp + 0xd], dh ; nop ; add rax, 1 ; cmp byte ptr [rdi + rax], dl ; je 0xa06af ; ret
0x0000000000096fc2 : add byte ptr [rbp + 0xf], al ; mov dh, 0xc ; xchg byte ptr [rax - 0x73], cl ; add dword ptr [r9 + 0x39], ecx ; ret 0x8949
0x00000000000da818 : add byte ptr [rbp + 0xf], al ; mov dh, 0xff ; movsxd rax, dword ptr [rdx + r15*4] ; add rax, rdx ; jmp rax
0x000000000008194e : add byte ptr [rbp + 1], al ; and al, 0x18 ; cmp rbx, rax ; je 0x8196d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001abea3 : add byte ptr [rbp + 1], cl ; add byte ptr [rax - 0x1d], cl ; hlt ; jmp qword ptr [rcx]
0x000000000008de66 : add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x10] ; ret
0x00000000001180cf : add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x3b5a7] ; ret
0x0000000000117f4f : add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x3b747] ; ret
0x000000000011800f : add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x3e057] ; ret
0x0000000000118156 : add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x56960] ; ret
0x0000000000091c06 : add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x80] ; ret
0x00000000000966d6 : add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xbcfd0] ; ret
0x0000000000091a16 : add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xc1c70] ; ret
0x0000000000091366 : add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xc4d10] ; ret
0x000000000008c00a : add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xc] ; ret
0x0000000000091c69 : add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xd] ; ret
0x00000000000917d9 : add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xdd2ed] ; ret
0x0000000000090e70 : add byte ptr [rbp + 8], dh ; lea rax, qword ptr [rip + 0x26] ; ret
0x00000000000ac920 : add byte ptr [rbp + 8], dh ; lea rax, qword ptr [rip + 0xec76] ; ret
0x00000000000abd50 : add byte ptr [rbp + 8], dh ; lea rax, qword ptr [rip + 0xf8f6] ; ret
0x00000000000798c2 : add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x38 ; ret
0x0000000000194f67 : add byte ptr [rbp + rax*2 - 0x15], dh ; jmp rsp
0x00000000001986af : add byte ptr [rbp + rax*2 - 7], dh ; call rsp
0x0000000000199397 : add byte ptr [rbp + rcx + 0x5384fffb], dh ; add al, byte ptr [rax] ; in al, 0xe ; sti ; call rsp
0x000000000017b3d7 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x0000000000156154 : add byte ptr [rbp + rcx*4 + 0x1d], cl ; adc al, 0xd8 ; add eax, dword ptr [rax] ; movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x0000000000153723 : add byte ptr [rbp + rcx*4 + 0x1d], cl ; add byte ptr [r8 + rax], r8b ; movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000015478f : add byte ptr [rbp + rcx*4 + 0x1d], cl ; cdq ; out dx, al ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001572af : add byte ptr [rbp + rcx*4 + 0x1d], cl ; cmp ebp, eax ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001544ef : add byte ptr [rbp + rcx*4 + 0x1d], cl ; cmp ecx, esi ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015700f : add byte ptr [rbp + rcx*4 + 0x1d], cl ; fld st(7) ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015424f : add byte ptr [rbp + rcx*4 + 0x1d], cl ; fpatan ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001548df : add byte ptr [rbp + rcx*4 + 0x1d], cl ; in eax, dx ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156f76 : add byte ptr [rbp + rcx*4 + 0x1d], cl ; jb 0x156f54 ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153faf : add byte ptr [rbp + rcx*4 + 0x1d], cl ; jns 0x153fbb ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156d6f : add byte ptr [rbp + rcx*4 + 0x1d], cl ; jns 0x156d4f ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156c1f : add byte ptr [rbp + rcx*4 + 0x1d], cl ; leave ; retf ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015439f : add byte ptr [rbp + rcx*4 + 0x1d], cl ; mov edx, esi ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015715f : add byte ptr [rbp + rcx*4 + 0x1d], cl ; mov esi, eax ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154e1f : add byte ptr [rbp + rcx*4 + 0x1d], cl ; or eax, ebp ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001566df : add byte ptr [rbp + rcx*4 + 0x1d], cl ; or ecx, edx ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156acf : add byte ptr [rbp + rcx*4 + 0x1d], cl ; sbb ebp, ecx ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000153d0f : add byte ptr [rbp + rcx*4 + 0x1d], cl ; sbb ecx, edi ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001540ff : add byte ptr [rbp + rcx*4 + 0x1d], cl ; sub ebp, esi ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156ebf : add byte ptr [rbp + rcx*4 + 0x1d], cl ; sub ecx, ecx ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000056ba2 : add byte ptr [rbp + rcx*4 + 0x2c], cl ; test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000081be6 : add byte ptr [rbp + rcx*4 + 0x34], cl ; sub ecx, dword ptr [rax + 0x39] ; ret
0x000000000012f252 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; call qword ptr [rax]
0x000000000012f639 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call qword ptr [rax]
0x000000000012b615 : add byte ptr [rbp + rcx*4 + 0x67], cl ; xor byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x00000000000487e7 : add byte ptr [rbp + rcx*4], cl ; mov rax, qword ptr [rsi + rbx*8] ; lea r9, qword ptr [rdx] ; jmp 0x4884f
0x000000000004a3f7 : add byte ptr [rbp + rcx*4], cl ; mov rax, qword ptr [rsi + rbx*8] ; lea r9, qword ptr [rdx] ; jmp 0x4a45f
0x00000000001aeee3 : add byte ptr [rbp + rdx*2 - 0x4737ffff], cl ; cmc ; jmp qword ptr [rax]
0x000000000019eedb : add byte ptr [rbp + rdx*2 - 0xc100000], al ; in al, dx ; jmp qword ptr [rax]
0x000000000019841f : add byte ptr [rbp + rsi*4 - 0x1b6b0008], al ; add dword ptr [rax], eax ; mov ah, 0xb6 ; clc ; jmp rsp
0x00000000001a8eab : add byte ptr [rbp + rsi*8], dl ; add byte ptr [rax], al ; push rbp ; jmp qword ptr [rcx]
0x000000000007fe5c : add byte ptr [rbp - 0x17], dh ; add rsp, 8 ; mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001259ae : add byte ptr [rbp - 0x2e7af025], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000025d9a : add byte ptr [rbp - 0x3d77f02e], al ; add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x000000000017b683 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x000000000013ed7f : add byte ptr [rbp - 0x47f38a2e], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000116755 : add byte ptr [rbp - 0x47f98a40], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000017a623 : add byte ptr [rbp - 0x48000000], dh ; add byte ptr [rax], al ; add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x00000000000ae1f6 : add byte ptr [rbp - 0x547bf037], al ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x63] ; ret
0x00000000000258b1 : add byte ptr [rbp - 0x5677f02e], al ; add eax, dword ptr [rax] ; add bh, dh ; ret 0xf800
0x0000000000125bec : add byte ptr [rbp - 0x647af025], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; fisttp dword ptr [rax + 1] ; ret
0x00000000001934d8 : add byte ptr [rbp - 0x6a6f0003], dl ; std ; jmp qword ptr [rax]
0x000000000003eb33 : add byte ptr [rbp - 0x6e7bf00a], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000041af5 : add byte ptr [rbp - 0x707bf037], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000032b9b : add byte ptr [rbp - 0x73], cl ; jl 0x32bb2 ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x0000000000146672 : add byte ptr [rbp - 0x73], cl ; lodsb al, byte ptr [rsi] ; and al, 0x70 ; add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000004b361 : add byte ptr [rbp - 0x75], cl ; jl 0x4b392 ; and byte ptr [rax + 1], cl ; ret
0x0000000000056d01 : add byte ptr [rbp - 0x75], cl ; jl 0x56d32 ; and byte ptr [rax + 1], cl ; ret
0x00000000000d3feb : add byte ptr [rbp - 0x75], cl ; mov cl, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret
0x0000000000031269 : add byte ptr [rbp - 0x77], al ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000a089c : add byte ptr [rbp - 0x77], al ; leave ; movsxd r9, dword ptr [rax + r9*4] ; add r9, rax ; jmp r9
0x00000000000a093c : add byte ptr [rbp - 0x77], al ; leave ; movsxd rax, dword ptr [r10 + r9*4] ; add rax, r10 ; jmp rax
0x00000000000bd012 : add byte ptr [rbp - 0x77], cl ; sub al, 0x24 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f2e0d : add byte ptr [rbp - 0x78], al ; je 0xf2e37 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000b0817 : add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x84 ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000dc239 : add byte ptr [rbp - 0x7cb7fea9], cl ; mov dword ptr [rcx], 0x24bc8948 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x000000000011f94c : add byte ptr [rbp - 0xd], ch ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000000a54f : add byte ptr [rbp], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x34
0x00000000001a7ecb : add byte ptr [rbp], dh ; add byte ptr [rax + 0x11], ah ; jmp qword ptr [rdi]
0x000000000000def7 : add byte ptr [rbp], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rcx]
0x00000000000f7eff : add byte ptr [rbx + 0x16b802fe], al ; add byte ptr [rax], al ; add byte ptr [rsi + 6], dh ; ret
0x0000000000078cef : add byte ptr [rbx + 0x2002507], cl ; add byte ptr [rax], al ; ret
0x00000000000459a6 : add byte ptr [rbx + 0x28ba28f8], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8539
0x000000000010b863 : add byte ptr [rbx + 0x29f08930], cl ; fmul dword ptr [rdi] ; test dword ptr [rax], esp ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x000000000010b0ad : add byte ptr [rbx + 0x2b92ec0d], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000847f2 : add byte ptr [rbx + 0x33efd305], cl ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a76df : add byte ptr [rbx + 0x3568b0e], cl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a850f : add byte ptr [rbx + 0x3568b0e], cl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a84df : add byte ptr [rbx + 0x4568a0e], cl ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000abbdf : add byte ptr [rbx + 0x463b0447], cl ; add al, 0xf ; test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x00000000000abc0f : add byte ptr [rbx + 0x463b0c47], cl ; or al, 0xf ; test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x00000000000a76af : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000007af7e : add byte ptr [rbx + 0x48], bl ; sub ebp, eax ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000002c34f : add byte ptr [rbx + 0x48], dl ; mov eax, dword ptr [rdi + 0x20] ; mov rbx, rdi ; test rax, rax ; je 0x2c36d ; call rax
0x000000000002c34e : add byte ptr [rbx + 0x48], dl ; mov eax, dword ptr [rdi + 0x20] ; mov rbx, rdi ; test rax, rax ; je 0x2c36e ; call rax
0x00000000000783ff : add byte ptr [rbx + 0x49], bl ; mov dword ptr [rsp + 0x28], eax ; mov rax, r13 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000088b67 : add byte ptr [rbx + 0x4c], bl ; mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x00000000000874e7 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x000000000006f75d : add byte ptr [rbx + 0x7401046e], al ; mov rax, rdx ; pop rbx ; ret
0x0000000000078cbf : add byte ptr [rbx + 0x8042507], cl ; add byte ptr [rax], al ; ret
0x000000000012fee7 : add byte ptr [rbx + 0x846c707], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; test eax, eax ; je 0x12ff10 ; xor eax, eax ; ret
0x0000000000107b90 : add byte ptr [rbx + 0xb080], cl ; add byte ptr [rax - 0x77], cl ; mov edx, dword ptr [rax - 0x77000000] ; ret 0xe8c1
0x000000000010b0e0 : add byte ptr [rbx + 0xc], dh ; mov rdx, qword ptr [rip + 0x2b92ce] ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000000351ff : add byte ptr [rbx + 0xd102444], cl ; add byte ptr [rax - 0x3f000001], al ; shr eax, 0x1f ; ret
0x00000000001b7cab : add byte ptr [rbx + 1], dl ; add byte ptr [rax], ah ; push rcx ; clc ; call rdi
0x00000000001ba723 : add byte ptr [rbx + 6], dl ; add byte ptr [rax], al ; ret 2
0x0000000000198567 : add byte ptr [rbx + rax - 7], ah ; push qword ptr [rsi + rbp*8 + 0x3a40001] ; stc ; jmp rsp
0x000000000016db1a : add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x000000000019898f : add byte ptr [rbx + rax*8 + 0x100cfff9], al ; add al, byte ptr [rax] ; xchg eax, esp ; ret
0x0000000000199657 : add byte ptr [rbx + rax*8 + 0x1684fffb], al ; add dword ptr [rax], eax ; xchg eax, esp ; ret
0x000000000019616f : add byte ptr [rbx + rax*8 + 0xfd4fff0], dl ; add dword ptr [rax], eax ; hlt ; ret
0x000000000019747f : add byte ptr [rbx + rax*8 - 0xa], ah ; call rsp
0x0000000000199647 : add byte ptr [rbx + rax*8 - 5], ah ; call qword ptr [rsi + rdx + 1]
0x0000000000194487 : add byte ptr [rbx + rax*8], dl ; call 0x706198
0x0000000000098dc2 : add byte ptr [rbx + rbp + 0x48], dh ; add ecx, 1 ; sub rax, 1 ; jne 0x98dcf ; pop rbx ; pop rbp ; ret
0x00000000001a1743 : add byte ptr [rbx + rbp], ch ; add byte ptr [rax], al ; call 0x281a04d7
0x00000000001b7493 : add byte ptr [rbx + rbx*8], bh ; add dword ptr [rax], eax ; fdivr dword ptr [rcx] ; clc ; call rax
0x00000000001ae46b : add byte ptr [rbx + rcx*2], dl ; add dword ptr [rax], eax ; push rax ; stosb byte ptr [rdi], al ; cmc ; call qword ptr [rax]
0x000000000008019f : add byte ptr [rbx + rcx*4 + 0x3d], cl ; and dword ptr [rsp + rsi], ecx ; add byte ptr [rax - 0x77], cl ; cmc ; xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x00000000000483b0 : add byte ptr [rbx + rcx*4 + 0x46], cl ; sub byte ptr [rbx + rcx*4 + 0x4e], cl ; xor byte ptr [rax - 0x75], cl ; jbe 0x4843c ; xor eax, eax ; ret
0x0000000000048080 : add byte ptr [rbx + rcx*4 + 0x47], cl ; sub byte ptr [rbx + rcx*4 + 0x4f], cl ; xor byte ptr [rax - 0x75], cl ; jg 0x48104 ; xor eax, eax ; ret
0x00000000000e0a1d : add byte ptr [rbx + rcx*4 + 0x53], cl ; or byte ptr [rbp - 0x75], cl ; or byte ptr [rax - 0x77], r9b ; ret 0x1bb
0x0000000000041a04 : add byte ptr [rbx + rcx*4 - 0x5c], cl ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rbx - 0x76b2dbf4], cl ; ret
0x0000000000047127 : add byte ptr [rbx + rcx*4 - 0x64], cl ; and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x8b4c
0x00000000001963e7 : add byte ptr [rbx + rcx*8 + 0x2384fff1], dl ; add dword ptr [rax], eax ; in al, -0x33 ; int1 ; call rsp
0x00000000001a649b : add byte ptr [rbx + rcx*8], al ; add byte ptr [rax], dh ; ja 0x1a649b ; call qword ptr [rax]
0x00000000001a64b3 : add byte ptr [rbx + rcx*8], bl ; add byte ptr [rax], ch ; ja 0x1a64b3 ; call qword ptr [rdx]
0x00000000001a6483 : add byte ptr [rbx + rcx*8], ch ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001a64cb : add byte ptr [rbx + rcx*8], dh ; add byte ptr [rax], dh ; ja 0x1a64cb ; call qword ptr [rax]
0x00000000001a646b : add byte ptr [rbx + rcx*8], dl ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x000000000019800f : add byte ptr [rbx + rdi - 0x36330008], al ; add dword ptr [rax], eax ; cmp al, 0xf8 ; jmp rsp
0x00000000001a145b : add byte ptr [rbx + rdi*2], al ; add byte ptr [rax], al ; adc byte ptr [rbp - 0x13], bh ; call rsi
0x00000000001a547b : add byte ptr [rbx + rdi*4], ah ; add byte ptr [rax], al ; xor bh, bl ; cld ; call qword ptr [rax]
0x00000000001aec8b : add byte ptr [rbx + rdx*2], dh ; add dword ptr [rax], eax ; nop ; mov ch, 0xf5 ; jmp qword ptr [rbx]
0x00000000001963ff : add byte ptr [rbx + rsi*8 + 0x24bcfff1], ah ; add dword ptr [rax], eax ; mov ah, 0xf3 ; int1 ; call rsp
0x000000000019509f : add byte ptr [rbx + rsi*8 - 0x61330015], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x1950b7
0x0000000000197fdf : add byte ptr [rbx + rsi], ah ; clc ; lcall ptr [rax + rcx*8 + 0x33b40001] ; clc ; jmp rsp
0x00000000001852c0 : add byte ptr [rbx - 0x12], bh ; jmp qword ptr [rax]
0x000000000013d36f : add byte ptr [rbx - 0x138afe08], al ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x0000000000071d87 : add byte ptr [rbx - 0x1876b3ed], cl ; mov rax, rdi ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d81d5 : add byte ptr [rbx - 0x1e7efe1e], al ; add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; ret 0xf35b
0x00000000000e25e1 : add byte ptr [rbx - 0x367afbb3], cl ; jle 0xe266c ; xor ebx, ebx ; mov rdx, rax ; jmp 0xe260b
0x0000000000137997 : add byte ptr [rbx - 0x37f0a7b9], cl ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x000000000013796f : add byte ptr [rbx - 0x37f0b7b9], cl ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x0000000000138276 : add byte ptr [rbx - 0x37f0efc0], cl ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x00000000001382ae : add byte ptr [rbx - 0x37f0f3c0], cl ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x0000000000146fd9 : add byte ptr [rbx - 0x3d], bl ; nop dword ptr [rax] ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000013ea6f : add byte ptr [rbx - 0x47fbd7b9], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000013793f : add byte ptr [rbx - 0x47fd76f9], cl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000134c1f : add byte ptr [rbx - 0x47fd76ff], cl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000010bdab : add byte ptr [rbx - 0x48f0f440], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010c26b : add byte ptr [rbx - 0x48f0f540], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010bf6b : add byte ptr [rbx - 0x48f0f640], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010bedb : add byte ptr [rbx - 0x48f0f740], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010c12b : add byte ptr [rbx - 0x48f0f840], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010c1cb : add byte ptr [rbx - 0x48f0f940], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010c2fb : add byte ptr [rbx - 0x48f0fa40], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010c42b : add byte ptr [rbx - 0x48f0fb40], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010bffb : add byte ptr [rbx - 0x48f0fc40], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010be3b : add byte ptr [rbx - 0x48f0fd40], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000010c08b : add byte ptr [rbx - 0x48f0fe40], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x0000000000194328 : add byte ptr [rbx - 0x6d8f0004], dl ; cld ; call rax
0x000000000003a994 : add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x0000000000138236 : add byte ptr [rbx - 0x7637f100], cl ; ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x000000000007402f : add byte ptr [rbx - 0x76be69c4], cl ; jl 0x73fd7 ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000007402e : add byte ptr [rbx - 0x76be69c4], cl ; jl 0x73fd8 ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000000b42d9 : add byte ptr [rbx - 0x7ae7dba4], cl ; fisttp dword ptr [rdi] ; test byte ptr [rdi + rcx], dl ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000000accbf : add byte ptr [rbx - 0x7bf00001], al ; inc dword ptr [rax] ; add byte ptr [rax], al ; cmp edi, 0x7f ; ja 0xacce9 ; mov eax, edi ; ret
0x0000000000020564 : add byte ptr [rbx - 0x7bf00008], al ; in eax, 0 ; add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x00000000000e00a3 : add byte ptr [rbx - 0x7bf0f607], al ; pop rcx ; add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; ret
0x00000000000ac9f7 : add byte ptr [rbx - 0x7cb7f7ec], cl ; rol byte ptr [rax*4 + 0x751089d2], 0xf3 ; ret
0x0000000000193bc4 : add byte ptr [rbx - 4], bh ; call qword ptr [rax + 0x20fffc7a]
0x00000000001932a4 : add byte ptr [rbx - 5], ah ; push rax ; movsxd rdi, ebx ; jmp qword ptr [rax]
0x00000000001963af : add byte ptr [rbx*4 + 0x21ccfff1], dh ; add dword ptr [rax], eax ; popfq ; int1 ; jmp rsp
0x0000000000186254 : add byte ptr [rbx], ah ; jmp qword ptr [rax]
0x000000000008b97f : add byte ptr [rbx], al ; add ch, byte ptr [rcx] ; ror byte ptr [rax - 0x75], 1 ; push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x000000000002cb16 : add byte ptr [rbx], bh ; jp 0x2cb5d ; jae 0x2cb3a ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000000bbb0b : add byte ptr [rbx], cl ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x00000000001a3c63 : add byte ptr [rbx], cl ; add byte ptr [rax], al ; pop rax ; outsd dx, dword ptr [rsi] ; out dx, al ; jmp qword ptr [rdi]
0x00000000000bbbf9 : add byte ptr [rbx], cl ; add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x00000000000bb980 : add byte ptr [rbx], cl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000186014 : add byte ptr [rbx], cl ; jmp qword ptr [rax]
0x000000000012fffb : add byte ptr [rcx + 0x146349c1], cl ; mov byte ptr [rcx + rax - 0x3e], cl ; jmp rdx
0x0000000000056476 : add byte ptr [rcx + 0x1b802], cl ; add byte ptr [rax], al ; ret
0x00000000000d6bf3 : add byte ptr [rcx + 0x1b828], cl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000036c10 : add byte ptr [rcx + 0x1f0fc3d0], cl ; add byte ptr [rax - 1], dil ; ret
0x000000000007b7ca : add byte ptr [rcx + 0x240c0f], al ; add byte ptr [rax - 0x77], cl ; scasd eax, dword ptr [rdi] ; nop ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000034f2f : add byte ptr [rcx + 0x25d0], cl ; add byte ptr [rax - 0x3791f09a], al ; movss dword ptr [rdi], xmm1 ; ret
0x00000000000bc976 : add byte ptr [rcx + 0x29], cl ; ror byte ptr [rax + 0x3d], 1 ; ret 0x10
0x00000000000a090f : add byte ptr [rcx + 0x447c60f], cl ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000c59f7 : add byte ptr [rcx + 0x46348ca], cl ; xchg eax, esi ; add rax, rsi ; jmp rax
0x00000000000c5a67 : add byte ptr [rcx + 0x46348d6], cl ; mov bh, 0x48 ; add eax, edi ; jmp rax
0x0000000000134b43 : add byte ptr [rcx + 0x46348f6], cl ; mov bh, 0x48 ; add eax, edi ; jmp rax
0x00000000001378d3 : add byte ptr [rcx + 0x46348f6], cl ; mov cl, 0x48 ; add eax, ecx ; jmp rax
0x00000000000cec48 : add byte ptr [rcx + 0x46348f6], cl ; mov dl, 0x48 ; add eax, edx ; jmp rax
0x00000000000c04be : add byte ptr [rcx + 0x48d23102], cl ; add esp, 8 ; mov rax, rdx ; ret
0x00000000000ff8e7 : add byte ptr [rcx + 0x5c], al ; mov dword ptr [rip + 0x2c46d4], eax ; lea rax, qword ptr [rip + 0x2c46a1] ; ret
0x00000000000ff717 : add byte ptr [rcx + 0x5c], al ; mov dword ptr [rip + 0x2c48a4], eax ; lea rax, qword ptr [rip + 0x2c4871] ; ret
0x00000000000a07ea : add byte ptr [rcx + 0x63], cl ; add al, 0x82 ; add rax, r10 ; jmp rax
0x00000000001010af : add byte ptr [rcx + 0x800008], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007264f : add byte ptr [rcx + 0xdd9e8d6], cl ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x72603
0x0000000000007c3f : add byte ptr [rcx + 2], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000000881 : add byte ptr [rcx + 4], cl ; or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x0000000000000e13 : add byte ptr [rcx + rax + 0x1c00000], bh ; add byte ptr [rax], al ; ret
0x000000000009872f : add byte ptr [rcx + rax + 0x65], cl ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000001b9aab : add byte ptr [rcx + rax + 2], dl ; add byte ptr [rax - 0x3d], ah ; clc ; jmp rcx
0x00000000001b9b13 : add byte ptr [rcx + rax - 0x39b7fffe], bh ; clc ; call qword ptr [rdi]
0x00000000000c5509 : add byte ptr [rcx + rax - 0xb], cl ; call 0x91816
0x0000000000037657 : add byte ptr [rcx + rax - 0xd], cl ; mov rdx, r13 ; mov rsi, rbx ; mov rdi, r12 ; call r15
0x00000000001966d7 : add byte ptr [rcx + rax*2 + 0x37acfff3], ah ; add dword ptr [rax], eax ; and al, 0x42 ; call rsp
0x0000000000194f2f : add byte ptr [rcx + rax*2], ah ; jmp 0x194f37
0x00000000001b5abb : add byte ptr [rcx + rax*8 + 1], ah ; add al, al ; ret
0x000000000019447f : add byte ptr [rcx + rax*8 - 0x18], al ; call rsp
0x00000000001b9a5b : add byte ptr [rcx + rax], al ; add al, byte ptr [rax] ; rol cl, 1 ; clc ; call rcx
0x00000000000d81ef : add byte ptr [rcx + rax], bh ; jne 0xd81f4 ; xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xd8195 ; ret
0x0000000000008fd7 : add byte ptr [rcx + rax], bl ; add byte ptr [rax], al ; ret
0x000000000008426f : add byte ptr [rcx + rcx*4 + 0x44], cl ; and al, 8 ; xor edi, edi ; call qword ptr [rax]
0x00000000000a4ffa : add byte ptr [rcx + rcx*4 + 0x4a], al ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000007b4ad : add byte ptr [rcx + rcx*4 + 0x6b], cl ; sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x000000000007a83c : add byte ptr [rcx + rcx*4 + 0x7b], cl ; sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x0000000000108d72 : add byte ptr [rcx + rcx*4 + 4], ah ; and eax, 0x2d0 ; pop rax ; pop rdi ; call rax
0x000000000002f5fc : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000012f0bc : add byte ptr [rcx + rcx*4 - 0x11], cl ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000008b194 : add byte ptr [rcx + rcx*4 - 0x11], cl ; mov rdx, rbp ; mov rsi, r12 ; call rax
0x000000000002f2a6 : add byte ptr [rcx + rcx*4 - 0x11], cl ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000ca1c0 : add byte ptr [rcx + rcx*4 - 0x19], cl ; cmove rcx, rax ; xor eax, eax ; call 0x5648c
0x0000000000089f24 : add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x00000000000cd650 : add byte ptr [rcx + rcx*4 - 0x31], cl ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x000000000003aeff : add byte ptr [rcx + rcx*4 - 0x40], cl ; mov qword ptr [rdi + 8], rdx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000e7881 : add byte ptr [rcx + rcx*4 - 0x5c], al ; and al, 0xa4 ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x0000000000089d23 : add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x000000000012eef4 : add byte ptr [rcx + rcx*4 - 1], cl ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000013a96d : add byte ptr [rcx + rcx*4 - 1], cl ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000008a444 : add byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, r8 ; call rax
0x000000000011f6bd : add byte ptr [rcx + rcx*4 - 6], cl ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000001a226b : add byte ptr [rcx + rcx*4], dl ; add byte ptr [rax], al ; nop ; mov dh, 0xed ; call qword ptr [rbx]
0x00000000001a92b3 : add byte ptr [rcx + rdi*8], bl ; add byte ptr [rax - 0x6e], bh ; call rbx
0x0000000000195e0f : add byte ptr [rcx + rdx*4 - 0x2330011], dh ; add byte ptr [rax], al ; in al, -0x6f ; out dx, eax ; jmp rsp
0x00000000001a2a7b : add byte ptr [rcx + rdx*4], ah ; add byte ptr [rax], al ; loopne 0x1a2a56 ; in eax, dx ; call qword ptr [rdx]
0x00000000001acaab : add byte ptr [rcx + rsi + 1], dl ; add byte ptr [rax + 0x23], al ; cmc ; jmp qword ptr [rcx]
0x00000000001a8ac3 : add byte ptr [rcx + rsi*8], ch ; add byte ptr [rax], bl ; call qword ptr [rdx]
0x00000000001aca7b : add byte ptr [rcx + rsi], ah ; add dword ptr [rax], eax ; loopne 0x1acaac ; cmc ; jmp qword ptr [rcx]
0x000000000019cab3 : add byte ptr [rcx + rsi], bl ; add byte ptr [rax], bl ; fucompi st(1) ; jmp qword ptr [rsi]
0x000000000003a8ff : add byte ptr [rcx - 0x1086608], cl ; shl rdx, 0x20 ; mov eax, eax ; or rax, rdx ; ret
0x000000000003af1c : add byte ptr [rcx - 0x1e], al ; jg 0x3af71 ; mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x0000000000143f70 : add byte ptr [rcx - 0x3b7cb730], cl ; or bl, al ; nop dword ptr [rax + rax] ; ret
0x000000000017b3d3 : add byte ptr [rcx - 0x43fffff3], bh ; or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x000000000004ee0a : add byte ptr [rcx - 0x48], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x000000000002d164 : add byte ptr [rcx - 0x73], al ; pop rcx ; dec dword ptr [rax + 0x63] ; ret
0x00000000000232c7 : add byte ptr [rcx - 0x73], cl ; je 0x232f8 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x000000000013b2a7 : add byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x00000000000e9216 : add byte ptr [rcx - 0x75], cl ; push rsi ; adc byte ptr [rcx - 0x75], cl ; or byte ptr [rax + 0x63], r9b ; ret
0x00000000000204a5 : add byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7b], r9b ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x0000000000075790 : add byte ptr [rcx - 0x75], cl ; xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000006c3ab : add byte ptr [rcx - 0x75], cl ; xchg eax, ecx ; mov byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; ret
0x000000000012652f : add byte ptr [rcx - 0x77], al ; rol dword ptr [rax - 0x69f0fe07], cl ; ret 0x8341
0x000000000017209a : add byte ptr [rcx - 0x77], cl ; sbb al, 0x24 ; mov rdx, qword ptr [rax + rbp*8] ; test rdx, rdx ; je 0x1720b8 ; call rdx
0x0000000000125f1c : add byte ptr [rcx - 0x78f033a3], cl ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007513b : add byte ptr [rcx - 0x7d], cl ; call qword ptr [rax]
0x0000000000129887 : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rax]
0x00000000000ec1be : add byte ptr [rcx - 9], al ; fsub dword ptr [rsp + rax*2 - 0x77] ; add byte ptr [rax - 1], bh ; ret
0x0000000000198f67 : add byte ptr [rcx*4 + 0x3974fffa], dh ; add al, byte ptr [rax] ; mov ah, 0x8d ; cli ; jmp rsp
0x0000000000027b85 : add byte ptr [rcx], 0 ; add al, ch ; and ah, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0xc8e9
0x0000000000145c1a : add byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; mov cl, 0xe9 ; add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000193740 : add byte ptr [rcx], ah ; cld ; call rax
0x0000000000188acb : add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001a9a45 : add byte ptr [rcx], al ; add byte ptr [rax + 0x17], ch ; call qword ptr [rsi]
0x000000000000e137 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000008a75f : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000101505 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000002e059 : add byte ptr [rcx], al ; add byte ptr [rax], al ; and eax, esi ; ret
0x00000000000fe9c4 : add byte ptr [rcx], al ; add byte ptr [rax], al ; cmovns rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x000000000016ec10 : add byte ptr [rcx], al ; add byte ptr [rax], al ; cmp rdx, rcx ; jne 0x16ebfe ; vzeroupper ; ret
0x00000000000cea02 : add byte ptr [rcx], al ; add byte ptr [rax], al ; cmp rdx, rcx ; jne 0xcea39 ; ret
0x00000000000f7e07 : add byte ptr [rcx], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x000000000005371e : add byte ptr [rcx], al ; add byte ptr [rax], al ; mov qword ptr [rsp + 8], rdx ; call 0x1f98b
0x0000000000139f41 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000909f1 : add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000008d64f : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000008fabf : add byte ptr [rcx], al ; add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x000000000013ea2f : add byte ptr [rcx], al ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x0000000000010fcf : add byte ptr [rcx], bh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x51
0x00000000000b0b3e : add byte ptr [rcx], ch ; ror dword ptr [rax - 0x2d], 1 ; out 0x89, al ; ror dword ptr [rax - 0x77], 1 ; ret 0xd348
0x00000000000341f9 : add byte ptr [rcx], cl ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000000753c6 : add byte ptr [rcx], cl ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000185fd4 : add byte ptr [rcx], cl ; jmp qword ptr [rax]
0x000000000002aefd : add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x3f] ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x00000000000c8177 : add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000371d8 : add byte ptr [rcx], dh ; imul al ; push rax ; add byte ptr [rax], r8b ; add rsp, 8 ; ret
0x00000000000858d6 : add byte ptr [rcx], dh ; mul byte ptr [rdi + rax*8] ; or al, 0 ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x000000000003daa7 : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; call 0x48c66cc8
0x00000000000b4c67 : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; fmul dword ptr [rdi] ; xchg eax, edx ; ret 0x2948
0x0000000000039d33 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x73], 0x65 ; fcomp dword ptr [rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012e714 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x75], 0x74 ; and al, 0x10 ; mov rdi, rbp ; call r14
0x0000000000138467 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x75], 0x74 ; and al, 0x30 ; mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000134def : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x75], 0x74 ; and al, 0x38 ; mov rdi, r12 ; mov rcx, qword ptr [rsp + 0x30] ; call rcx
0x000000000008ba05 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], 0x6b ; or byte ptr [rax - 0x77], cl ; adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000007c36f : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x7c388 ; ret
0x00000000001039f8 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0x3e ; add byte ptr [rdi + rax - 0xd], dh ; ret
0x00000000000bccff : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001119e6 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003b0bf : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000003a30b : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000009040f : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007059a : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d6f17 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cca4b : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000003b845 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000879fa : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000f849c : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xec ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000f9c1f : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7f], 0xc4 ; cwde ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000008fac2 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x00000000000365b7 : add byte ptr [rcx], dh ; sal bl, 0xc3 ; nop dword ptr [rax] ; mov eax, ecx ; ret
0x0000000000029a3b : add byte ptr [rcx], dh ; sal byte ptr [rcx], cl ; test byte ptr [rax - 0x73], 0x3d ; jmp 0xffffffff8902b09d
0x00000000001307ef : add byte ptr [rcx], dh ; sar bh, 0xe1 ; nop dword ptr [rax] ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000c8706 : add byte ptr [rcx], dh ; shl byte ptr [rdi + rax*8], cl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rdx ; ret
0x000000000003a5d8 : add byte ptr [rcx], dh ; test byte ptr [rax - 0x3f], 0xca ; adc dword ptr [rax + rcx*2 + 0x33], esp ; adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00000000001109fc : add byte ptr [rcx], dh ; test byte ptr [rax - 0x75], 0x54 ; and al, 0x10 ; mov edi, 0x2000004 ; call rax
0x0000000000119217 : add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xf0 ; ret
0x000000000001ff0b : add byte ptr [rdi + 0xbf], bh ; mov r12, rax ; call 0xaac2f
0x00000000000f76b5 : add byte ptr [rdi + 1], bh ; call rax
0x0000000000102305 : add byte ptr [rdi + 2], bh ; cmp rax, rdx ; mov edx, ebx ; cmovne rbp, rax ; call 0xfe621
0x00000000001ba5db : add byte ptr [rdi + 4], bl ; add byte ptr [rax], al ; mov dh, 2 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000011aec6 : add byte ptr [rdi + 8], dh ; mov rax, rdi ; sar rax, 6 ; ret
0x000000000008de1a : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0x1516c] ; ret
0x000000000008bbba : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0x157ac] ; ret
0x000000000008fda7 : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xbd7ef] ; ret
0x000000000008fa17 : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xbda4f] ; ret
0x000000000008d5a7 : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xbfd7f] ; ret
0x000000000008f6fa : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd495c] ; ret
0x0000000000091a9a : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd513c] ; ret
0x000000000008d49a : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd540c] ; ret
0x0000000000091bba : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd682c] ; ret
0x000000000008bda7 : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xe2edf] ; ret
0x000000000019f3c3 : add byte ptr [rdi + rax + 0x5180000], ch ; in eax, dx ; call qword ptr [rcx]
0x00000000001039fe : add byte ptr [rdi + rax - 0xd], dh ; ret
0x00000000000ec1f7 : add byte ptr [rdi + rax*8 + 4], ah ; and eax, 0x40 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000cddae : add byte ptr [rdi + rax*8], ah ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000107746 : add byte ptr [rdi + rax*8], ah ; add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000bb97d : add byte ptr [rdi + rax*8], ah ; add byte ptr [r8], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x00000000000ff3e7 : add byte ptr [rdi + rax*8], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rsp - 0x50] ; ret
0x0000000000036456 : add byte ptr [rdi + rax*8], ah ; add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000034e1e : add byte ptr [rdi + rax*8], ah ; and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000000000035470 : add byte ptr [rdi + rax*8], ah ; and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000110586 : add byte ptr [rdi + rax*8], ah ; or al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000fe4a6 : add byte ptr [rdi + rax*8], ah ; or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000008bb24 : add byte ptr [rdi + rax*8], ah ; or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000085766 : add byte ptr [rdi + rax*8], ah ; or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000341f6 : add byte ptr [rdi + rax*8], ah ; or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000753c3 : add byte ptr [rdi + rax*8], ah ; or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000020da6 : add byte ptr [rdi + rax*8], ah ; or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edi ; ret
0x00000000000f85ee : add byte ptr [rdi + rax*8], ah ; pop rdi ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000795d6 : add byte ptr [rdi + rax*8], ah ; sbb al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003418e : add byte ptr [rdi + rax*8], ah ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x00000000001a48fb : add byte ptr [rdi + rbp*4 - 0x72400000], ah ; cli ; call qword ptr [rax]
0x00000000001a48cb : add byte ptr [rdi + rbp*4], dh ; add al, ah ; cli ; call qword ptr [rax]
0x00000000001a8863 : add byte ptr [rdi + rbp*8], cl ; add byte ptr [rax], al ; sbb byte ptr [rcx], bh ; call rsi
0x00000000000d1600 : add byte ptr [rdi + rbx + 0x31], dh ; fisttp dword ptr [rax - 0x77] ; fmul dword ptr [rcx + 3] ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000000001af883 : add byte ptr [rdi + rbx*2], ch ; add dword ptr [rax], eax ; cmp bh, ah ; cmc ; jmp rsp
0x000000000019947f : add byte ptr [rdi + rbx], ah ; sti ; ljmp ptr [rax + rbx*2 + 0x1fd40002] ; sti ; call rsp
0x00000000001ab86b : add byte ptr [rdi + rbx], dl ; add dword ptr [rax], eax ; ror ch, 0xf4 ; jmp qword ptr [rcx]
0x00000000001ae8b3 : add byte ptr [rdi + rcx*2 + 1], bl ; add byte ptr [rax], bh ; scasd eax, dword ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a28f3 : add byte ptr [rdi + rcx*4 - 0x36c80000], bl ; in eax, dx ; jmp qword ptr [rax]
0x00000000001a5883 : add byte ptr [rdi + rdi*4], ch ; add byte ptr [rax], al ; mov byte ptr [rax + rsi*8], al ; jmp qword ptr [rbx]
0x00000000001993f7 : add byte ptr [rdi + rdx + 0x55bcfffb], ah ; add al, byte ptr [rax] ; mov ah, 0x17 ; sti ; call rsp
0x0000000000195847 : add byte ptr [rdi + rdx*2 - 0x2c630012], al ; add byte ptr [rax], al ; in al, 0x57 ; out dx, al ; call rsp
0x00000000001af083 : add byte ptr [rdi + rdx*2], ch ; add dword ptr [rax], eax ; cmp bl, al ; cmc ; jmp rax
0x00000000001af06b : add byte ptr [rdi + rdx*2], dl ; add dword ptr [rax], eax ; and bl, al ; cmc ; jmp qword ptr [rdi]
0x00000000001a50c3 : add byte ptr [rdi + rsi*4], ch ; add byte ptr [rax + 0x3d], cl ; out dx, eax ; jmp rsi
0x00000000001a9093 : add byte ptr [rdi + rsi*8], bh ; add byte ptr [rax], al ; pop rax ; pop rbp ; jmp rcx
0x000000000017b67b : add byte ptr [rdi - 0x45fffff1], dh ; sldt word ptr [rax] ; mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x00000000000ceae8 : add byte ptr [rdi - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000193e18 : add byte ptr [rdi - 4], ch ; inc dword ptr [rax + 0xfffc6e] ; outsb dx, byte ptr [rsi] ; cld ; push qword ptr [rax + 0x6d] ; cld ; jmp rax
0x00000000001937bc : add byte ptr [rdi], 0xfc ; call rax
0x000000000006ba6c : add byte ptr [rdi], ah ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001bb313 : add byte ptr [rdi], bh ; or byte ptr [rax], al ; add byte ptr [rdx + 4], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000f85f1 : add byte ptr [rdi], bl ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000188ac3 : add byte ptr [rdi], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; loope 0x188ad9 ; add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000000f7f3c : add byte ptr [rdi], cl ; add eax, 0x66c3d8f7 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000015a626 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000000bf071 : add byte ptr [rdi], cl ; cmp dword ptr [rsi + 0x48000000], -0x77 ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000001860bc : add byte ptr [rdi], cl ; jmp qword ptr [rax]
0x000000000005413d : add byte ptr [rdi], cl ; mov bh, 0x84 ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000010a461 : add byte ptr [rdi], cl ; mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000001166c1 : add byte ptr [rdi], cl ; mov bh, 4 ; push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x00000000000d087a : add byte ptr [rdi], cl ; mov dh, 0x41 ; add dword ptr [rax - 0x7d], ecx ; rol dword ptr [rcx], -0x7c ; sal byte ptr [rbp - 0x2b], 0xf6 ; ret 0xf05
0x00000000000cfb07 : add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x000000000012b527 : add byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000003ce83 : add byte ptr [rdi], cl ; mov dh, 0x48 ; add al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000000d27df : add byte ptr [rdi], cl ; mov dh, 0x4b ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000400c8 : add byte ptr [rdi], cl ; mov dh, 0x70 ; add al, 0x8d ; push rsi ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000005c804 : add byte ptr [rdi], cl ; mov dh, 0xc0 ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x00000000000c1669 : add byte ptr [rdi], cl ; mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000006d283 : add byte ptr [rdi], cl ; mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000aac9f : add byte ptr [rdi], cl ; mov dh, 0xc2 ; and dh, 0xf0 ; mov edx, 0 ; cmove rax, rdx ; pop rbx ; ret
0x000000000005cc72 : add byte ptr [rdi], cl ; mov dh, 0xdb ; movsxd rax, dword ptr [rcx + rbx*4] ; add rax, rcx ; jmp rax
0x00000000000c3963 : add byte ptr [rdi], cl ; mov dh, 0xfa ; movsxd rax, dword ptr [r8 + rdi*4] ; add rax, r8 ; jmp rax
0x00000000000a0c3f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000a0c4f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x00000000000a0c2f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000a0caf : add byte ptr [rdi], cl ; mov ebp, 0xea8348c0 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x00000000000a0c5f : add byte ptr [rdi], cl ; mov ebp, 0xea8348c0 ; add rdx, rax ; jl 0xa0ce0 ; add rax, rdi ; ret
0x00000000000a0c8f : add byte ptr [rdi], cl ; mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x0000000000090dff : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000090def : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000090e0f : add byte ptr [rdi], cl ; mov esp, 0xc22948c0 ; jbe 0x90e5c ; add rax, rdi ; ret
0x0000000000090e1f : add byte ptr [rdi], cl ; mov esp, 0xc22948c0 ; jbe 0x90e5e ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000090e1e : add byte ptr [rdi], cl ; mov esp, 0xc22948c0 ; jbe 0x90e5f ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000006cc8b : add byte ptr [rdi], cl ; ror dword ptr [rax - 0x73], 0x4a ; add cl, byte ptr [rcx + 0x440f48c3] ; rol dword ptr [rax], 1 ; ret
0x0000000000089f1e : add byte ptr [rdi], cl ; test bl, ch ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x000000000008a43e : add byte ptr [rdi], cl ; test bl, cl ; add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, r8 ; call rax
0x000000000008b039 : add byte ptr [rdi], cl ; test byte ptr [rax + 0x48000000], cl ; mov esi, ebp ; mov rdi, r12 ; call rax
0x0000000000105189 : add byte ptr [rdi], cl ; test byte ptr [rax + 5], dh ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000001051a9 : add byte ptr [rdi], cl ; test byte ptr [rax + 6], dh ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000166264 : add byte ptr [rdi], cl ; test byte ptr [rbp + 0x48fffffb], ah ; mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000104e4e : add byte ptr [rdi], cl ; test byte ptr [rbx + 0xa], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000001052be : add byte ptr [rdi], cl ; test byte ptr [rbx + 3], bl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000000b1715 : add byte ptr [rdi], cl ; test byte ptr [rbx], ch ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x7b], al ; in eax, dx ; mov r10, rbp ; setne dl ; jmp 0xb1746
0x0000000000104eda : add byte ptr [rdi], cl ; test byte ptr [rdi + 7], bh ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000104efa : add byte ptr [rdi], cl ; test byte ptr [rdi + 9], bl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000105427 : add byte ptr [rdi], cl ; test byte ptr [rdx + 3], dh ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000260d8 : add byte ptr [rdi], cl ; test byte ptr [rdx], ah ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf08
0x00000000001050fd : add byte ptr [rdi], cl ; test byte ptr [rsi + rax], bh ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104cf5 : add byte ptr [rdi], cl ; test byte ptr [rsp + rcx], al ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000ce8c4 : add byte ptr [rdi], cl ; test ch, dl ; add byte ptr [rax], al ; add byte ptr [rax + 0x7f], bh ; ret
0x0000000000104ac7 : add byte ptr [rdi], cl ; test dl, dl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; std ; xor edx, edx ; xor esi, esi ; call rbx
0x00000000001056a4 : add byte ptr [rdi], cl ; test dword ptr [rax - 0x4100000b], edi ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000105704 : add byte ptr [rdi], cl ; test dword ptr [rbp - 0x41000006], eax ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000105824 : add byte ptr [rdi], cl ; test dword ptr [rbp - 0x41000007], eax ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000001057a4 : add byte ptr [rdi], cl ; test dword ptr [rbx - 0x41000004], eax ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000105744 : add byte ptr [rdi], cl ; test dword ptr [rcx - 0x41000007], edi ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000001057c4 : add byte ptr [rdi], cl ; test dword ptr [rdi - 0x41000005], esi ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000105784 : add byte ptr [rdi], cl ; test dword ptr [rdi*8 + 0x3beffff], ebx ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000105624 : add byte ptr [rdi], cl ; test dword ptr [rdx - 0x41000004], ebx ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00000000001058a4 : add byte ptr [rdi], cl ; test dword ptr [rdx - 0x4100000b], ebp ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000000d8333 : add byte ptr [rdi], cl ; test dword ptr [rsi + 4], esi ; add byte ptr [rax], al ; mov dword ptr [rbx + 0x2c], eax ; jmp 0xd830d
0x0000000000105565 : add byte ptr [rdi], cl ; test dword ptr [rsi - 0x41000006], esi ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000105864 : add byte ptr [rdi], cl ; test dword ptr [rsi - 0x4100000a], edx ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x000000000002a0b8 : add byte ptr [rdi], cl ; test eax, edx ; add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; in al, 0xf ; test byte ptr [rip - 0x76000002], al ; ret
0x0000000000025d94 : add byte ptr [rdi], cl ; xchg dl, cl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x3d77f02e], al ; add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x00000000000207e6 : add byte ptr [rdi], cl ; xchg dword ptr [rdx], eax ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000100d82 : add byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000008791d : add byte ptr [rdx + 0x13], dh ; sub rax, 0x10 ; ret
0x000000000012ebab : add byte ptr [rdx + 0x19], ch ; call qword ptr [rax]
0x00000000001074a6 : add byte ptr [rdx + 0x64], bh ; mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x00000000001bb317 : add byte ptr [rdx + 4], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001bb737 : add byte ptr [rdx + 6], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x0000000000087914 : add byte ptr [rdx + 9], dh ; cmp rcx, qword ptr [rip + 0x33beba] ; jb 0x87943 ; sub rax, 0x10 ; ret
0x00000000001bca03 : add byte ptr [rdx + rax + 0x4240000], ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x000000000010af93 : add byte ptr [rdx + rax + 0x5d], dh ; ret
0x00000000001b9fc4 : add byte ptr [rdx + rax - 0xfffffb], ch ; inc dword ptr [rcx] ; or ch, byte ptr [rdi + 5] ; ret
0x0000000000195727 : add byte ptr [rdx + rax*2 - 0x12], dl ; push qword ptr [rbp + rcx*8 + 0x42e40000] ; out dx, al ; call rsp
0x00000000001966df : add byte ptr [rdx + rax*2], ah ; call rsp
0x00000000001a1b8b : add byte ptr [rdx + rax*4], dh ; add byte ptr [rax], al ; nop ; xchg eax, esp ; in eax, dx ; call qword ptr [rcx]
0x00000000001a5bfb : add byte ptr [rdx + rax*8 - 0x70f00000], ah ; cld ; call qword ptr [rax]
0x0000000000197f7f : add byte ptr [rdx + rbp - 8], dh ; inc dword ptr [rsi + rax*8 + 0x2ad40001] ; clc ; call rsp
0x00000000001a43c3 : add byte ptr [rdx + rbp*4], ch ; add byte ptr [rax - 0x4d], cl ; out dx, al ; jmp rdx
0x0000000000198ae7 : add byte ptr [rdx + rbp*8 + 0x197cfff9], al ; add al, byte ptr [rax] ; in al, -0x14 ; stc ; jmp rsp
0x00000000001a835b : add byte ptr [rdx + rbp*8], al ; add byte ptr [rax], al ; adc byte ptr [rcx], ah ; call rsi
0x00000000001ab403 : add byte ptr [rdx + rbx - 0x4077ffff], ch ; hlt ; call qword ptr [rax]
0x00000000001ab3e3 : add byte ptr [rdx + rbx - 0x4897ffff], cl ; stc ; call qword ptr [rax]
0x000000000019f6ab : add byte ptr [rdx + rcx + 0x12700000], dl ; in eax, dx ; call qword ptr [rax]
0x000000000017afd7 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x00000000001a137b : add byte ptr [rdx + rdi*2], ah ; add byte ptr [rax], al ; and byte ptr [rdx - 0x13], bh ; jmp qword ptr [rbx]
0x0000000000198947 : add byte ptr [rdx + rdi*4 + 0xe9cfff9], ah ; add al, byte ptr [rax] ; add al, 0xbb ; stc ; call rsp
0x000000000007f273 : add byte ptr [rdx + rdx + 0x48], dh ; mov eax, dword ptr [rdi + 8] ; cmp rax, rdx ; jae 0x7f2af ; movzx eax, byte ptr [rax] ; ret
0x000000000019eb9b : add byte ptr [rdx + rdx*2], al ; add byte ptr [rax - 0x29], ah ; in al, dx ; jmp qword ptr [rcx]
0x00000000001a2b63 : add byte ptr [rdx + rdx*4], cl ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; std ; jmp rdi
0x0000000000194d97 : add byte ptr [rdx + rsi*2 - 0x74ab0016], ah ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ja 0x194d99 ; call rsp
0x00000000001b4b83 : add byte ptr [rdx + rsi*4], ch ; add dword ptr [rax], eax ; call 0x241b4327
0x00000000001acb5b : add byte ptr [rdx + rsi], al ; add dword ptr [rax], eax ; xor byte ptr [rsi], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001acb73 : add byte ptr [rdx + rsi], bl ; add dword ptr [rax], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001940bc : add byte ptr [rdx - 0x5e6f0004], ah ; cld ; jmp qword ptr [rax]
0x00000000001976bf : add byte ptr [rdx - 0x65530009], al ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0xf7 ; jmp rsp
0x00000000000bf1ed : add byte ptr [rdx - 0x73], cl ; or al, 8 ; mov rdx, rax ; jmp 0xbf202
0x00000000000aff39 : add byte ptr [rdx - 0x73], cl ; sbb al, 0x9d ; xor al, byte ptr [rax + rax] ; add cl, ch ; ret 0xfff3
0x000000000002adf7 : add byte ptr [rdx - 0x75], cl ; add al, 0xe0 ; test rax, rax ; je 0x2ae0d ; call rax
0x00000000000f808f : add byte ptr [rdx - 0x80000000], 0x48 ; lea eax, dword ptr [rip - 0x4c] ; cmove rax, rdx ; ret
0x0000000000193880 : add byte ptr [rdx - 4], cl ; jmp rax
0x000000000019325c : add byte ptr [rdx - 5], dl ; call rax
0x000000000003c585 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000ffaaf : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add eax, 0x2c2cc5 ; mov rdx, rax ; jmp 0xffa5d
0x00000000000cddb1 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000001180cb : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x3b5a7] ; ret
0x0000000000117f4b : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x3b747] ; ret
0x000000000011800b : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0x3e057] ; ret
0x00000000000966d2 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xbcfd0] ; ret
0x0000000000091a12 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xc1c70] ; ret
0x0000000000091362 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; lea rax, qword ptr [rip + 0xc4d10] ; ret
0x000000000003a307 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000117efe : add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x117f66 ; lea rax, qword ptr [rip + 0x38855] ; ret
0x0000000000117f25 : add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x117f66 ; lea rax, qword ptr [rip - 0x86af2] ; ret
0x0000000000117fbe : add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x118026 ; lea rax, qword ptr [rip + 0x38795] ; ret
0x0000000000117fe5 : add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x118026 ; lea rax, qword ptr [rip - 0x86bb2] ; ret
0x000000000011807e : add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x1180e6 ; lea rax, qword ptr [rip + 0x386b5] ; ret
0x00000000001180a5 : add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x1180e6 ; lea rax, qword ptr [rip - 0x86c92] ; ret
0x000000000008bbb7 : add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x8bbd1 ; lea rax, qword ptr [rip + 0x157ac] ; ret
0x000000000008d497 : add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x8d4b1 ; lea rax, qword ptr [rip + 0xd540c] ; ret
0x000000000008de17 : add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x8de31 ; lea rax, qword ptr [rip + 0x1516c] ; ret
0x000000000008f6f7 : add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x8f711 ; lea rax, qword ptr [rip + 0xd495c] ; ret
0x000000000009133c : add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x9137d ; lea rax, qword ptr [rip + 0x107] ; ret
0x0000000000091315 : add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x9137d ; lea rax, qword ptr [rip + 0xbf44e] ; ret
0x00000000000919c5 : add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x91a2d ; lea rax, qword ptr [rip + 0xbed7e] ; ret
0x00000000000919ec : add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x91a2d ; lea rax, qword ptr [rip - 0x5c9] ; ret
0x0000000000091a97 : add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x91ab1 ; lea rax, qword ptr [rip + 0xd513c] ; ret
0x0000000000091bb7 : add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x91bd1 ; lea rax, qword ptr [rip + 0xd682c] ; ret
0x0000000000096685 : add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x966ed ; lea rax, qword ptr [rip + 0xba0de] ; ret
0x00000000000966ac : add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x966ed ; lea rax, qword ptr [rip - 0x5269] ; ret
0x00000000001148ca : add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x11490b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000117ed7 : add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x117f66 ; lea rax, qword ptr [rip + 0x5665c] ; ret
0x0000000000117f97 : add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x118026 ; lea rax, qword ptr [rip + 0x5659c] ; ret
0x0000000000118057 : add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x1180e6 ; lea rax, qword ptr [rip + 0x564bc] ; ret
0x0000000000118153 : add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x11816d ; lea rax, qword ptr [rip + 0x56960] ; ret
0x000000000008c007 : add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x8c021 ; lea rax, qword ptr [rip + 0xc] ; ret
0x000000000008de63 : add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x8de7d ; lea rax, qword ptr [rip + 0x10] ; ret
0x0000000000090e6d : add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x90e88 ; lea rax, qword ptr [rip + 0x26] ; ret
0x00000000000912ee : add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x9137d ; lea rax, qword ptr [rip + 0xdd255] ; ret
0x00000000000917d6 : add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x917f0 ; lea rax, qword ptr [rip + 0xdd2ed] ; ret
0x000000000009199e : add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x91a2d ; lea rax, qword ptr [rip + 0xdcb85] ; ret
0x0000000000091c03 : add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x91c1d ; lea rax, qword ptr [rip + 0x80] ; ret
0x0000000000091c66 : add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x91c80 ; lea rax, qword ptr [rip + 0xd] ; ret
0x0000000000093ef3 : add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x93f0d ; lea rax, qword ptr [rip + 0x80] ; ret
0x0000000000093f56 : add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x93f70 ; lea rax, qword ptr [rip + 0xd] ; ret
0x000000000009665e : add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x966ed ; lea rax, qword ptr [rip + 0xd7ee5] ; ret
0x00000000000abd4d : add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0xabd68 ; lea rax, qword ptr [rip + 0xf8f6] ; ret
0x00000000000ac91d : add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0xac938 ; lea rax, qword ptr [rip + 0xec76] ; ret
0x000000000006ccb8 : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002ddf6 : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x000000000012e06a : add byte ptr [rdx], al ; add rsp, 0x30 ; lea rax, qword ptr [rip + 0x297cc9] ; pop rbx ; ret
0x0000000000110a07 : add byte ptr [rdx], al ; call rax
0x00000000001108f9 : add byte ptr [rdx], al ; mov rdx, qword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; call rax
0x0000000000020da4 : add byte ptr [rdx], bh ; add byte ptr [rdi + rax*8], ah ; or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edi ; ret
0x000000000014343f : add byte ptr [rdx], bh ; cmovne rax, rdx ; add rsp, 8 ; ret
0x00000000001abb73 : add byte ptr [rdx], bl ; add dword ptr [rax], eax ; js 0x1abb57 ; hlt ; jmp qword ptr [rcx]
0x000000000012fbdb : add byte ptr [rdx], ch ; add byte ptr [rax], al ; mov rdi, rbx ; mov rcx, qword ptr [rsp] ; call rcx
0x0000000000185ff4 : add byte ptr [rdx], cl ; jmp qword ptr [rax]
0x0000000000186058 : add byte ptr [rip + 0xd10fff2], cl ; jmp qword ptr [rax]
0x0000000000186048 : add byte ptr [rip + 0xd30fff2], cl ; jmp rax
0x0000000000165f15 : add byte ptr [rsi + 0x2e], ah ; nop dword ptr [rax + rax] ; mov byte ptr [rcx], dl ; ret
0x00000000000a7035 : add byte ptr [rsi + 0x2e], ah ; nop dword ptr [rax + rax] ; mov byte ptr [rdi], dl ; ret
0x00000000000a6d35 : add byte ptr [rsi + 0x2e], ah ; nop dword ptr [rax + rax] ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000165f55 : add byte ptr [rsi + 0x2e], ah ; nop dword ptr [rax + rax] ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x00000000000a7075 : add byte ptr [rsi + 0x2e], ah ; nop dword ptr [rax + rax] ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a6075 : add byte ptr [rsi + 0x2e], ah ; nop dword ptr [rax + rax] ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000007f115 : add byte ptr [rsi + 0x2e], ah ; nop dword ptr [rax + rax] ; mov eax, 0xffffffff ; ret
0x000000000012de95 : add byte ptr [rsi + 0x2e], ah ; nop dword ptr [rax + rax] ; mov eax, 1 ; ret
0x000000000015ae55 : add byte ptr [rsi + 0x2e], ah ; nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000007f155 : add byte ptr [rsi + 0x2e], ah ; nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi + 0x68] ; ret
0x00000000000a5ba5 : add byte ptr [rsi + 0x2e], ah ; nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x0000000000165f25 : add byte ptr [rsi + 0x2e], ah ; nop dword ptr [rax + rax] ; mov word ptr [rcx], dx ; ret
0x00000000000a7045 : add byte ptr [rsi + 0x2e], ah ; nop dword ptr [rax + rax] ; mov word ptr [rdi], dx ; ret
0x00000000000a6d25 : add byte ptr [rsi + 0x2e], ah ; nop dword ptr [rax + rax] ; ret
0x00000000000a9ee5 : add byte ptr [rsi + 0x2e], ah ; nop dword ptr [rax + rax] ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000000aa835 : add byte ptr [rsi + 0x2e], ah ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000a0cc5 : add byte ptr [rsi + 0x2e], ah ; nop dword ptr [rax + rax] ; xor rax, rax ; ret
0x000000000012e5e4 : add byte ptr [rsi + 0x2e], spl ; nop dword ptr [rax + rax] ; ret
0x00000000000aa834 : add byte ptr [rsi + 0x2e], spl ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000a0cc4 : add byte ptr [rsi + 0x2e], spl ; nop dword ptr [rax + rax] ; xor rax, rax ; ret
0x00000000000a081f : add byte ptr [rsi + 0x44], ah ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a082f : add byte ptr [rsi + 0x44], ah ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000001995a7 : add byte ptr [rsi + 0x65cfffb], al ; add al, byte ptr [rax] ; je 0x1995f3 ; sti ; jmp rsp
0x00000000000a2d51 : add byte ptr [rsi + 0xf], ah ; adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x000000000014d39f : add byte ptr [rsi + 0xf], ah ; cmp ah, byte ptr [rbx - 0x25] ; cmp cl, byte ptr [rax + 0x63] ; leave ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x000000000016b9dc : add byte ptr [rsi + 0xf], ah ; out dx, eax ; xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ba99 : add byte ptr [rsi + 0xf], ah ; out dx, eax ; xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016b9f7 : add byte ptr [rsi + 0xf], ah ; out dx, eax ; xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ba48 : add byte ptr [rsi + 0xf], ah ; out dx, eax ; xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000014d4f7 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fsub dword ptr [rsi + 0xf] ; cmp byte ptr [rax], al ; fldenv dword ptr [rsi + 0xf] ; cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x00000000000a0b71 : add byte ptr [rsi + 0xf], ah ; xlatb ; ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000012eeef : add byte ptr [rsi + 1], bh ; mov rdi, r15 ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000012f0b7 : add byte ptr [rsi + 2], bh ; mov rdi, r13 ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000013a968 : add byte ptr [rsi + 3], bh ; mov rdi, r15 ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000012f191 : add byte ptr [rsi + 4], bh ; mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000172587 : add byte ptr [rsi + rax - 0x17], dh ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; ret
0x000000000004a580 : add byte ptr [rsi + rax - 0x39], dh ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000001029c7 : add byte ptr [rsi + rax - 0x77], dh ; cmp eax, 0x2be838 ; ret
0x000000000019808f : add byte ptr [rsi + rax*2 - 0x33730008], al ; add dword ptr [rax], eax ; in al, 0x47 ; clc ; call rsp
0x00000000000cea2c : add byte ptr [rsi + rax*2 - 0x48], dh ; and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000195ed7 : add byte ptr [rsi + rax*8], dh ; out dx, eax ; jmp rsp
0x0000000000199fd3 : add byte ptr [rsi + rax], bh ; add al, ch ; test eax, ebp ; call rsp
0x0000000000198707 : add byte ptr [rsi + rbx*2], al ; stc ; inc dword ptr [rax + rdi*8 + 0x66240001] ; stc ; call rsp
0x00000000001b777b : add byte ptr [rsi + rbx*8], ah ; add dword ptr [rax], eax ; nop ; clc ; call qword ptr [rdx]
0x0000000000198d37 : add byte ptr [rsi + rcx*2 + 0x29bcfffa], ah ; add al, byte ptr [rax] ; push rsp ; cli ; jmp rsp
0x00000000001ae763 : add byte ptr [rsi + rcx*2], cl ; add dword ptr [rax], eax ; pop rax ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001aafbb : add byte ptr [rsi + rdx + 1], ah ; add byte ptr [rax], dl ; jge 0x1aafbf ; jmp rdi
0x00000000001b2f93 : add byte ptr [rsi + rdx*4], bh ; add dword ptr [rax], eax ; add rdi, rsi ; call rsi
0x00000000001b8fcb : add byte ptr [rsi + rsi*8 + 1], dh ; add byte ptr [rax], dl ; cdq ; clc ; call qword ptr [rax]
0x000000000017b7cf : add byte ptr [rsi - 0x46fffff0], dh ; adc byte ptr [rax], al ; add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x000000000017afcf : add byte ptr [rsi - 0x46fffff6], dh ; or al, byte ptr [rax] ; add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x0000000000193ee4 : add byte ptr [rsi - 0x626f0004], bl ; cld ; jmp qword ptr [rax]
0x0000000000163f5f : add byte ptr [rsi - 0x75], ah ; add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000163f6f : add byte ptr [rsi - 0x75], ah ; add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rdx + 0x42880241] ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000002adf2 : add byte ptr [rsi - 0x77], cl ; jl 0x2adeb ; add byte ptr [rdx - 0x75], cl ; add al, 0xe0 ; test rax, rax ; je 0x2ae12 ; call rax
0x000000000005375e : add byte ptr [rsi - 1], bh ; mov dword ptr fs:[rax], 0x16 ; mov eax, esi ; ret
0x0000000000193e20 : add byte ptr [rsi - 4], ch ; push qword ptr [rax + 0x6d] ; cld ; jmp rax
0x00000000000f733f : add byte ptr [rsi - 9], ah ; mov byte ptr [rax + 0x16b8ff], 0 ; add byte ptr [rsp + rax - 0xd], dh ; ret
0x0000000000036459 : add byte ptr [rsi], ah ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000001862e0 : add byte ptr [rsi], ah ; call qword ptr [rax]
0x0000000000169efc : add byte ptr [rsi], al ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000001a3f93 : add byte ptr [rsi], bh ; add byte ptr [rax], al ; fdivr dword ptr [rcx - 0x12] ; jmp qword ptr [rcx]
0x000000000019ffd3 : add byte ptr [rsi], bh ; add byte ptr [rax], bh ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001936d8 : add byte ptr [rsi], bl ; cld ; jmp rax
0x00000000001861bc : add byte ptr [rsi], bl ; jmp qword ptr [rax]
0x0000000000186098 : add byte ptr [rsi], cl ; jmp qword ptr [rax]
0x00000000001458e9 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax + 0x16], bh ; ret
0x00000000000fcbf9 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000000fe07e : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000039f59 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000357c9 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000ca1e6 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000006f18b : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000017ee77 : add byte ptr [rsp + rax + 0x4be0000], bh ; add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000001a9db3 : add byte ptr [rsp + rax + 1], bl ; add byte ptr [rax + 0x36], ch ; call qword ptr [rcx]
0x00000000000ba72f : add byte ptr [rsp + rax - 0x7d], dh ; adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f7349 : add byte ptr [rsp + rax - 0xd], dh ; ret
0x00000000000ca53a : add byte ptr [rsp + rax*2 - 0x77], ah ; add cl, byte ptr [rcx - 0x3b7cb710] ; ret
0x0000000000196587 : add byte ptr [rsp + rax*4 - 0xe], al ; dec esp ; add dword ptr cs:[rax], eax ; je 0x196522 ; jmp rsp
0x000000000019658f : add byte ptr [rsp + rax*4 - 0xe], dh ; jmp rsp
0x00000000001bca07 : add byte ptr [rsp + rax], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000001a45e3 : add byte ptr [rsp + rbp*4 - 0x3ae80000], cl ; out dx, al ; call qword ptr [rax]
0x00000000001a458b : add byte ptr [rsp + rbp*4], dh ; add byte ptr [rax], al ; push rax ; ret
0x00000000001b8583 : add byte ptr [rsp + rbp*8], ch ; add dword ptr [rax], eax ; sub byte ptr [rcx - 8], ah ; jmp qword ptr [rbx]
0x00000000001ae56b : add byte ptr [rsp + rcx*2], dl ; add dword ptr [rax], eax ; push rax ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x000000000019688f : add byte ptr [rsp + rcx*4 - 0xd], ah ; ljmp ptr [rsi + rax*2 - 0x72fbffff] ; jmp rsp
0x00000000001ad5c3 : add byte ptr [rsp + rdi + 1], ch ; add byte ptr [rax + 0x58], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001ad5ab : add byte ptr [rsp + rdi + 1], dl ; add byte ptr [rax + 0x58], al ; cmc ; jmp qword ptr [rcx]
0x0000000000194dd7 : add byte ptr [rsp + rdi*2 - 0x73330016], al ; add byte ptr [rax], al ; xchg eax, esp ; jl 0x194dd9 ; jmp rsp
0x0000000000194124 : add byte ptr [rsp + rdi*8 - 0x36c8f01], dl ; jmp rax
0x00000000001ad593 : add byte ptr [rsp + rdi], bh ; add dword ptr [rax], eax ; sub byte ptr [rax - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001ad563 : add byte ptr [rsp + rdi], cl ; add dword ptr [rax], eax ; clc ; push rdi ; cmc ; jmp qword ptr [rcx]
0x0000000000195057 : add byte ptr [rsp + rdx*4 - 0x630b0015], dh ; add byte ptr [rax], al ; hlt ; ret
0x00000000001b6dc3 : add byte ptr [rsp + rdx*8 + 1], ch ; add byte ptr [rax + 0x25], ch ; clc ; jmp qword ptr [rdx]
0x000000000019867f : add byte ptr [rsp + rsi - 0xb8b0007], ah ; add dword ptr [rax], eax ; and al, 0x36 ; stc ; call rsp
0x0000000000195317 : add byte ptr [rsp + rsi*4 - 0x504b0013], al ; add byte ptr [rax], al ; add al, 0xb5 ; in eax, dx ; jmp rsp
0x000000000004af27 : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001039fd : add byte ptr ds:[rdi + rax - 0xd], dh ; ret
0x000000000003645a : add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000001a9160 : add byte ptr fs:[rax], al ; add byte ptr [rax + rdi*8], cl ; add byte ptr [rax], al ; sbb byte ptr [rdi - 0xe], ah ; call qword ptr [rax]
0x00000000001074a8 : add byte ptr fs:[rax], al ; add byte ptr [rbx - 0x3f7ac7c0], cl ; cmove eax, edx ; ret
0x000000000019f3c0 : add byte ptr fs:[rax], al ; add byte ptr [rdi + rax + 0x5180000], ch ; in eax, dx ; call qword ptr [rcx]
0x00000000001ad8f8 : add byte ptr fs:[rax], al ; add byte ptr [rdi + rdi + 0x61f00001], ah ; cmc ; jmp qword ptr [rbx]
0x00000000001a50c0 : add byte ptr fs:[rax], al ; add byte ptr [rdi + rsi*4], ch ; add byte ptr [rax + 0x3d], cl ; out dx, eax ; jmp rsi
0x000000000004deb6 : add byte ptr ss:[rax - 0x77], cl ; ret 0x2948
0x0000000000055a7f : add byte ptr ss:[rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000139c54 : add byte ptr ss:[rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000043635 : add byte ptr ss:[rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000005375d : add byte ptr ss:[rsi - 1], bh ; mov dword ptr fs:[rax], 0x16 ; mov eax, esi ; ret
0x00000000000c8f7a : add ch, bl ; salc ; nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; ret
0x00000000000575b4 : add ch, byte ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x47 ; or al, 0x83 ; ret
0x000000000008b981 : add ch, byte ptr [rcx] ; ror byte ptr [rax - 0x75], 1 ; push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000c7cfa : add ch, byte ptr [rdi + rbp - 0x373eb800] ; adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000000362e6 : add cl, 0xe9 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x00000000001ba09e : add cl, al ; add dword ptr [rax], eax ; add al, bl ; add al, 5 ; ret 0xb
0x000000000003b4a7 : add cl, byte ptr [r8 - 0x77] ; add byte ptr [r9], r14b ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000ea1d9 : add cl, byte ptr [rax + 0x16893847] ; mov qword ptr [rsi + 8], rcx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x000000000004038b : add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000003d149 : add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x0000000000043210 : add cl, byte ptr [rax + 0x29] ; ret 0x894c
0x000000000003d172 : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000125db6 : add cl, byte ptr [rax + 0x39] ; ret 0x1472
0x0000000000125dc4 : add cl, byte ptr [rax + 0x39] ; ret 0xc019
0x0000000000107326 : add cl, byte ptr [rax + 0x39] ; ret 0xf48
0x0000000000150c84 : add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x0000000000075952 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000075848 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000029ff0 : add cl, byte ptr [rax + 1] ; ret 0x394c
0x000000000010748b : add cl, byte ptr [rax - 0x39] ; ret 0xffff
0x00000000000a7698 : add cl, byte ptr [rax - 0x73] ; add r8b, r11b ; nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000002bf3b : add cl, byte ptr [rax - 0x73] ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000bce8d : add cl, byte ptr [rax - 0x73] ; je 0xbcf07 ; add byte ptr [rax + 1], cl ; ret
0x00000000000a68d9 : add cl, byte ptr [rax - 0x73] ; jg 0xa68eb ; jne 0xa717b ; ret
0x00000000000a7f7d : add cl, byte ptr [rax - 0x73] ; jg 0xa7f8f ; jne 0xa898b ; ret
0x00000000000ac8da : add cl, byte ptr [rax - 0x73] ; or byte ptr [r10 + r10 + 0x3b], r14b ; ja 0xac8fa ; cmove rax, rcx ; ret
0x0000000000168395 : add cl, byte ptr [rax - 0x75] ; add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000164005 : add cl, byte ptr [rax - 0x75] ; add eax, 0x5428948 ; mov rax, rdi ; ret
0x000000000011bd67 : add cl, byte ptr [rax - 0x75] ; and al, 8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012f1ce : add cl, byte ptr [rax - 0x75] ; and al, 8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000163f35 : add cl, byte ptr [rax - 0x75] ; or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000001108fa : add cl, byte ptr [rax - 0x75] ; push rsp ; and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000000a2ded : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x000000000003b4a8 : add cl, byte ptr [rax - 0x77] ; add byte ptr [r9], r14b ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000a2d59 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000074c73 : add cl, byte ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011f947 : add cl, byte ptr [rax - 0x77] ; fucompi st(0) ; add byte ptr [rbp - 0xd], ch ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000000720ff : add cl, byte ptr [rax - 0x77] ; ret
0x0000000000059a81 : add cl, byte ptr [rax - 0x77] ; ret 0x51ff
0x000000000006a070 : add cl, byte ptr [rax - 0x77] ; test dword ptr [rax - 0x16000006], edx ; wait ; sar edi, cl ; dec dword ptr [rax - 0x7d] ; ret 0xbf08
0x000000000008b93b : add cl, byte ptr [rax - 0x7b] ; in eax, dx ; jne 0x8b92a ; test r12, r12 ; jne 0x8b974 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d7ccb : add cl, byte ptr [rax - 0x7b] ; leave ; je 0xd7ce2 ; mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000007ee62 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x0000000000100fce : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rsi + rsi + 0x48], 0x83 ; ret 0x4808
0x000000000012b13b : add cl, byte ptr [rax - 0x7d] ; in al, dx ; cmp byte ptr [rax - 1], 0x5b ; pop rbp ; pop r12 ; ret
0x00000000000627ec : add cl, byte ptr [rax - 0x7d] ; ret
0x0000000000025a46 : add cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000000000008bd00 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000069976 : add cl, byte ptr [rax - 0x7d] ; ret 0x8304
0x00000000000d01b6 : add cl, byte ptr [rax - 0x7d] ; ret 0xe901
0x000000000008bd63 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x000000000013e785 : add cl, byte ptr [rax - 0x7d] ; ret 0xf04
0x00000000000007b0 : add cl, byte ptr [rax] ; or byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rdx], ah ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x00000000000a2e58 : add cl, byte ptr [rbx + 0x42890341] ; add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x00000000000a2efc : add cl, byte ptr [rbx + 0x42890841] ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000104b3a : add cl, byte ptr [rbx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000000bf1ea : add cl, byte ptr [rcx + 0x30] ; add byte ptr [rdx - 0x73], cl ; or al, 8 ; mov rdx, rax ; jmp 0xbf205
0x000000000006cc92 : add cl, byte ptr [rcx + 0x440f48c3] ; rol dword ptr [rax], 1 ; ret
0x000000000019f90e : add cl, byte ptr [rcx + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; add bl, byte ptr [rax + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000118358 : add cl, byte ptr [rcx + rcx*4 - 0x2f] ; test r8b, r8b ; mov byte ptr [r9 + 3], r8b ; jne 0x118308 ; mov rax, rdi ; ret
0x000000000004b50f : add cl, byte ptr [rcx - 0x73] ; or al, 0x17 ; add rdx, r13 ; call qword ptr [r10 + rax*8]
0x0000000000134c9a : add cl, byte ptr [rdi] ; enter -0x7e77, -0x48 ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x0000000000134b52 : add cl, byte ptr [rdi] ; enter -0x7e77, -0x4c ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x0000000000112fe5 : add cl, byte ptr [rdi] ; test bh, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000016a121 : add cl, byte ptr [rdi] ; test eax, ebx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x000000000013d1b5 : add cl, byte ptr [rdi] ; xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x0000000000130da9 : add cl, byte ptr [rdi] ; xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000013e127 : add cl, byte ptr [rdi] ; xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000a2dea : add cl, byte ptr [rdx + 0x42880241] ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000a2e9c : add cl, byte ptr [rdx + 0x42880841] ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000b7d8b : add cl, byte ptr [rdx - 0x73] ; je 0xb7d9e ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000004b0 : add cl, byte ptr [rdx] ; add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x000000000013a594 : add dh, al ; add byte ptr [rax], al ; jle 0x13a5b4 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000abd26 : add dh, bh ; fadd st(3) ; nop word ptr [rax + rax] ; xor rax, rax ; ret
0x000000000017e4d7 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000013cfed : add dh, byte ptr [rax + rbx*2 + 0x48] ; add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013dbed : add dh, byte ptr [rax + rsi*2 + 0x31] ; ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000a9f2b : add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000ac7ef : add dh, byte ptr [rbp + 0x7a] ; test eax, eax ; jne 0xac7db ; mov rax, rdi ; ret
0x000000000007625a : add dh, byte ptr [rbp + rax - 0x7d] ; std ; or dh, byte ptr [rax + rdi*4 + 0x48] ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000007c874 : add dh, byte ptr [rbp + rax - 0x7d] ; std ; or dh, byte ptr [rsp + rdi*2 + 0x40] ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000136ab2 : add dh, byte ptr [rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000adb21 : add dh, byte ptr [rcx + rcx + 0x44] ; mov ecx, dword ptr [rdi + rdx*4] ; test r9d, r9d ; jne 0xadaf0 ; mov rax, rdx ; ret
0x00000000000dff2c : add dh, byte ptr [rcx] ; imul al ; fcomp qword ptr [rax] ; sti ; call rcx
0x00000000000da74b : add dh, byte ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013daa6 : add dh, byte ptr [rdi + rsi*2 + 0x31] ; ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000136ab1 : add dh, byte ptr ds:[rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000019fb60 : add dl, byte ptr [rax + 0xa] ; ret
0x000000000002d7fa : add dl, byte ptr [rcx + 0x39] ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x00000000001bc9ff : add dl, ch ; add eax, dword ptr [rax] ; add byte ptr [rdx + rax + 0x4240000], ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x000000000008194f : add dword ptr [r12 + 0x18], r9d ; cmp rbx, rax ; je 0x8196c ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010f973 : add dword ptr [r8 + 0x3c63af9], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000ba732 : add dword ptr [rax + 0x10], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d69bd : add dword ptr [rax + 0x1b807], ecx ; add byte ptr [rax], al ; ret
0x0000000000168281 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x00000000000ac2b6 : add dword ptr [rax + 0x29], ecx ; fmul dword ptr [rax - 0x3f] ; clc ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000010a673 : add dword ptr [rax + 0x2b], ebp ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000014013f : add dword ptr [rax + 0x39], ecx ; fmul dword ptr [rax + 0xf] ; ret
0x00000000000474d9 : add dword ptr [rax + 0x39], ecx ; ret
0x00000000000b86a4 : add dword ptr [rax + 0x39], ecx ; ret 0x840f
0x00000000000ba0a5 : add dword ptr [rax + 0x39], ecx ; ret 0x850f
0x0000000000046776 : add dword ptr [rax + 0x39], ecx ; ret 0x8841
0x00000000000529fb : add dword ptr [rax + 0x39], ecx ; ret 0x8d0f
0x00000000000e0590 : add dword ptr [rax + 0x39], ecx ; ret 0xe275
0x00000000000c9645 : add dword ptr [rax + 0x39], ecx ; ret 0xed75
0x00000000000484eb : add dword ptr [rax + 0x39], ecx ; sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x0000000000048683 : add dword ptr [rax + 0x39], ecx ; salc ; jne 0x48680 ; xor eax, eax ; ret
0x000000000010f974 : add dword ptr [rax + 0x3c63af9], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000c6862 : add dword ptr [rax + 0x63], ecx ; fisttp dword ptr [rax + 0x39] ; ret
0x0000000000103201 : add dword ptr [rax + 0x63], ecx ; ret 0x8941
0x0000000000047493 : add dword ptr [rax + 0x75000178], eax ; neg byte ptr [rbx - 0xd] ; ret
0x00000000000e0cb1 : add dword ptr [rax + 0x75040878], eax ; mov eax, 0xf708588b ; ret
0x000000000007e533 : add dword ptr [rax + 0xf740a39], eax ; cmp rsi, rcx ; jne 0x7e53e ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000079920 : add dword ptr [rax + 0xf], eax ; mov dh, 0xc7 ; mov qword ptr [rsi + 0x28], rcx ; mov byte ptr [rdx], dil ; ret
0x00000000000bc33a : add dword ptr [rax + 1], ecx ; ret
0x0000000000063923 : add dword ptr [rax + 1], ecx ; ret 0x149
0x00000000000201e0 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000033ede : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000d6bc0 : add dword ptr [rax + 1], edi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d6940 : add dword ptr [rax + 1], edi ; ret
0x00000000001320fd : add dword ptr [rax + 9], ecx ; ret 0x8948
0x0000000000085656 : add dword ptr [rax + 9], ecx ; ret 0x8949
0x00000000000004b2 : add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x000000000012683c : add dword ptr [rax + rax*8 + 0x38414f74], eax ; ret 0x5a74
0x0000000000098bd8 : add dword ptr [rax + rax*8 - 0x76b79c8b], eax ; clc ; ret
0x00000000000d3c37 : add dword ptr [rax + rax], eax ; or byte ptr [rax + 0xf], 0xa3 ; ret 0x830f
0x000000000008194c : add dword ptr [rax + rax], esi ; add dword ptr [r12 + 0x18], r9d ; cmp rbx, rax ; je 0x8196f ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001a02de : add dword ptr [rax + rbp*2], 0xa ; ret
0x00000000001a220e : add dword ptr [rax + rdi*2], 0xa ; ret
0x000000000009d7be : add dword ptr [rax + rsi*8 + 0x31], esi ; ror byte ptr [rax - 0x3f], 0xe0 ; or byte ptr [rsi + 0xf], al ; mov dh, 0xc ; add dword ptr [rcx - 0x77], ecx ; ret 0xf43
0x000000000011d736 : add dword ptr [rax - 0x18], edx ; ret
0x0000000000108df3 : add dword ptr [rax - 0x2708ffd5], 0x48018964 ; or eax, 0xffffffff ; ret
0x000000000009f971 : add dword ptr [rax - 0x39], ecx ; ret 0xffff
0x00000000000c1a85 : add dword ptr [rax - 0x47], ecx ; ret
0x00000000000d4a99 : add dword ptr [rax - 0x6bf0a206], eax ; ret 0xb60f
0x000000000002f3fd : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x0000000000107322 : add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x0000000000165d5a : add dword ptr [rax - 0x73], ecx ; add qword ptr [rdi], rcx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000000d9bb8 : add dword ptr [rax - 0x73], ecx ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000a68b5 : add dword ptr [rax - 0x73], ecx ; jg 0xa68c6 ; jne 0xa717b ; ret
0x00000000000a7f58 : add dword ptr [rax - 0x73], ecx ; jg 0xa7f69 ; jne 0xa898b ; ret
0x00000000000f1395 : add dword ptr [rax - 0x75], ecx ; and al, 0x18 ; mov rdx, rax ; jmp 0xf13db
0x00000000000d7dc8 : add dword ptr [rax - 0x75], ecx ; push rbp ; or byte ptr [rcx - 0x75], cl ; je 0xd7e00 ; or byte ptr [rcx], ch ; ret
0x00000000000a2dc6 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x000000000005c38c : add dword ptr [rax - 0x77], ecx ; adc eax, dword ptr [rax - 0x78] ; sub byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000a04a5 : add dword ptr [rax - 0x77], ecx ; adc eax, esi ; add byte ptr [rax], al ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000168392 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x75] ; add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000164002 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x75] ; add eax, 0x5428948 ; mov rax, rdi ; ret
0x0000000000163f32 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x75] ; or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000163ee2 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000168312 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rbx + 0x42890541] ; add eax, 0x8428d48 ; ret
0x0000000000163ff2 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rbx + 0x42890841] ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000050a95 : add dword ptr [rax - 0x77], ecx ; jae 0x50ac3 ; mov qword ptr [rcx + rdx*8], rax ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000627e3 : add dword ptr [rax - 0x77], ecx ; lea esi, dword ptr [rax - 0x77000005] ; add cl, byte ptr [rax - 0x7d] ; ret
0x00000000000dc240 : add dword ptr [rax - 0x77], ecx ; mov esp, 0x9824 ; add byte ptr [rcx], bh ; ret 0x8d0f
0x0000000000110748 : add dword ptr [rax - 0x77], ecx ; push rbp ; cmp byte ptr [rax - 0x3c41f0e8], cl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007d65c : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007994d : add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000001064a3 : add dword ptr [rax - 0x77], ecx ; push rdi ; sub dh, al ; add byte ptr [rdx], cl ; add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000106119 : add dword ptr [rax - 0x77], ecx ; push rdi ; sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008d7e1 : add dword ptr [rax - 0x77], ecx ; ret
0x00000000000f208c : add dword ptr [rax - 0x77], ecx ; ret 0x349
0x00000000000d07d8 : add dword ptr [rax - 0x77], ecx ; ret 0x57e9
0x000000000013f80b : add dword ptr [rax - 0x77], ecx ; ret 0x6348
0x000000000007b28f : add dword ptr [rax - 0x77], ecx ; ret 0x850f
0x0000000000030461 : add dword ptr [rax - 0x77], ecx ; ret 0x8948
0x00000000000d14d0 : add dword ptr [rax - 0x77], ecx ; ret 0x9aeb
0x0000000000044012 : add dword ptr [rax - 0x77], ecx ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret
0x000000000004119a : add dword ptr [rax - 0x77], ecx ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0xc148
0x0000000000072854 : add dword ptr [rax - 0x77], ecx ; sub byte ptr [rax - 0x78], al ; cmp al, byte ptr [rax + 0xf] ; mov dh, 0xc7 ; ret
0x0000000000122093 : add dword ptr [rax - 0x77], ecx ; xor byte ptr [r8 + 1], dil ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000126510 : add dword ptr [rax - 0x78], eax ; ja 0x12651b ; ret
0x0000000000099211 : add dword ptr [rax - 0x7b], ecx ; ror byte ptr [rax - 0x77], 0xd8 ; pop rbx ; cmovne rax, rdx ; ret
0x0000000000169e9a : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x00000000000a5a0b : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000dc23c : add dword ptr [rax - 0x7d], ecx ; mov dword ptr [rcx], 0x24bc8948 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x0000000000098cc8 : add dword ptr [rax - 0x7d], ecx ; out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x0000000000098c08 : add dword ptr [rax - 0x7d], ecx ; out dx, al ; add dword ptr [rbp - 0xf], esi ; xor edi, edi ; mov rax, rdi ; ret
0x000000000002281c : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000124f44 : add dword ptr [rax - 0x7d], ecx ; ret 0x3904
0x00000000000dedaf : add dword ptr [rax - 0x7d], ecx ; ret 0x3920
0x00000000000e6607 : add dword ptr [rax - 0x7d], ecx ; ret 0x4001
0x0000000000046514 : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000000e0a47 : add dword ptr [rax - 0x7d], ecx ; ret 0x4104
0x00000000000eb0ea : add dword ptr [rax - 0x7d], ecx ; ret 0x4108
0x000000000006dfb1 : add dword ptr [rax - 0x7d], ecx ; ret 0x4504
0x0000000000038129 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000e8d6c : add dword ptr [rax - 0x7d], ecx ; ret 0x4c10
0x00000000000c7f04 : add dword ptr [rax - 0x7d], ecx ; ret 0x4c48
0x000000000003cd46 : add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x00000000001255a3 : add dword ptr [rax - 0x7d], ecx ; ret 0x8301
0x00000000000cfb0b : add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x000000000006d636 : add dword ptr [rax - 0x7d], ecx ; ret 0x8502
0x000000000006dec3 : add dword ptr [rax - 0x7d], ecx ; ret 0x8504
0x00000000000232cc : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x00000000000d087e : add dword ptr [rax - 0x7d], ecx ; rol dword ptr [rcx], -0x7c ; sal byte ptr [rbp - 0x2b], 0xf6 ; ret 0xf05
0x000000000004583e : add dword ptr [rax - 0x7f], ecx ; ret
0x000000000006c27e : add dword ptr [rax - 1], edi ; cmove eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x0000000000032ba0 : add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x000000000010e995 : add dword ptr [rax], 0 ; add rsp, 0x80 ; mov eax, edx ; add rsp, 8 ; ret
0x0000000000121f80 : add dword ptr [rax], 0x83480000 ; ret 0x4c01
0x000000000008d82b : add dword ptr [rax], 0x85480000 ; sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x00000000000f1761 : add dword ptr [rax], 1 ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010b374 : add dword ptr [rax], 1 ; ret
0x0000000000196afe : add dword ptr [rax], eax ; adc al, 0x4a ; hlt ; dec dword ptr [rsp + rdx*2 + 0x52440001] ; hlt ; call rsp
0x0000000000198186 : add dword ptr [rax], eax ; adc al, 0x57 ; clc ; inc dword ptr [rcx + rdx*8 + 0x58040001] ; clc ; call rsp
0x0000000000196b4e : add dword ptr [rax], eax ; adc al, 0x76 ; hlt ; inc dword ptr [rdi + rdx*2 + 0x78640001] ; hlt ; call rsp
0x0000000000196b7e : add dword ptr [rax], eax ; adc al, 0x8c ; hlt ; inc dword ptr [rcx + rbx*2 - 0x6fbbffff] ; hlt ; call rsp
0x00000000001969fe : add dword ptr [rax], eax ; adc al, 0xaa ; push qword ptr [rsp + rcx*2 - 0x54fbffff] ; jmp rsp
0x00000000001b694e : add dword ptr [rax], eax ; adc byte ptr [rax + rdi*8], cl ; jmp qword ptr [rax]
0x00000000001aafbe : add dword ptr [rax], eax ; adc byte ptr [rbp - 0xc], bh ; jmp rdi
0x00000000001aa94e : add dword ptr [rax], eax ; adc byte ptr [rsi], dl ; hlt ; call qword ptr [rbx]
0x00000000001aa98e : add dword ptr [rax], eax ; adc byte ptr [rsi], dl ; hlt ; call qword ptr [rsi]
0x00000000001aa9ce : add dword ptr [rax], eax ; adc byte ptr [rsi], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001abc3e : add dword ptr [rax], eax ; adc ch, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001986a6 : add dword ptr [rax], eax ; add al, 0x39 ; stc ; inc dword ptr [rbp + rsi*8 + 0x45740001] ; stc ; call rsp
0x0000000000196716 : add dword ptr [rax], eax ; add al, 0x4a ; lcall ptr [rcx + rdi + 0x4a940001] ; call rsp
0x000000000019818e : add dword ptr [rax], eax ; add al, 0x58 ; clc ; call rsp
0x000000000019646e : add dword ptr [rax], eax ; add al, 0x5e ; push qword ptr [rdi + 0x5e540001] ; jmp rsp
0x0000000000198706 : add dword ptr [rax], eax ; add al, 0x5e ; stc ; inc dword ptr [rax + rdi*8 + 0x66240001] ; stc ; call rsp
0x0000000000196896 : add dword ptr [rax], eax ; add al, 0x8d ; jmp rsp
0x000000000019637e : add dword ptr [rax], eax ; add al, 0x98 ; int1 ; call rsp
0x0000000000196986 : add dword ptr [rax], eax ; add al, 0xa0 ; jmp rsp
0x0000000000196a06 : add dword ptr [rax], eax ; add al, 0xab ; jmp rsp
0x00000000001983d6 : add dword ptr [rax], eax ; add al, 0xaf ; clc ; jmp rsp
0x00000000001ba0a0 : add dword ptr [rax], eax ; add al, bl ; add al, 5 ; ret 0xb
0x0000000000027b86 : add dword ptr [rax], eax ; add al, ch ; and ah, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0xc8e9
0x0000000000024dae : add dword ptr [rax], eax ; add al, ch ; cli ; lea eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0xbbe9
0x00000000000270df : add dword ptr [rax], eax ; add al, ch ; leave ; push 0 ; add byte ptr [rcx - 0x77], al ; ret 0x7be9
0x000000000012162f : add dword ptr [rax], eax ; add al, ch ; stc ; ret
0x0000000000025f8a : add dword ptr [rax], eax ; add bh, dh ; ret 0
0x0000000000025f7e : add dword ptr [rax], eax ; add bh, dh ; ret 0xf800
0x000000000012621c : add dword ptr [rax], eax ; add bl, al ; mov eax, 0x100 ; ret
0x0000000000126222 : add dword ptr [rax], eax ; add bl, al ; mov eax, 0x102 ; ret
0x0000000000126214 : add dword ptr [rax], eax ; add bl, al ; ret
0x000000000006eeb4 : add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000007036d : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000dc984 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x000000000006cd08 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x3948
0x00000000000fe9c5 : add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; add al, 0x24 ; add rsp, 0x18 ; ret
0x000000000008f763 : add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x000000000010e72a : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000899bc : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000010031c : add dword ptr [rax], eax ; add byte ptr [rax - 0x3f7cb7f0], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000087b4e : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; adc eax, 0xfe0e8 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000003b34d : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; add eax, 0x38b0ff ; add rsp, 8 ; ret
0x000000000014654a : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000083e88 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x0000000000074131 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; test al, 0x28 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x00000000000aac5d : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; xor eax, 0xdb859 ; movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x000000000003b2a5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; and al, 8 ; add rsp, 0x18 ; ret
0x00000000000f561b : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; je 0xf5650 ; cmp byte ptr [rax - 0x77], cl ; ret 0x4de9
0x00000000000b32e6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; jl 0xb32bd ; jo 0xb3284 ; ror dword ptr [rax - 0x77], 1 ; ret 0xd348
0x000000000007ee9c : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; push rax ; or byte ptr [rbp + 0xb], dh ; sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000000391ed : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; push rsp ; and al, 8 ; mov rsi, qword ptr [r15] ; mov rdi, qword ptr [r12] ; call r14
0x0000000000146242 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000014646d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000002aa1f : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000eb195 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; nop ; sub dl, bh ; dec dword ptr [rax + 1] ; ret
0x0000000000145c1b : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; mov cl, 0xe9 ; add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000005371f : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; push rsp ; and al, 8 ; call 0x1f98a
0x00000000000bc503 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000792ca : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000988f7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000cef61 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000009148e : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001461fa : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000074138 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x000000000016a31d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x00000000000872f9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000087420 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000000556b8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000125711 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x00000000000e67c1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000014863d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121e30 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000090166 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000014eaef : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000148591 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000fffcc : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000029559 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret 0x860f
0x0000000000072cca : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000001b842e : add dword ptr [rax], eax ; add byte ptr [rax - 8], ah ; jmp qword ptr [rdi]
0x00000000000f7449 : add dword ptr [rax], eax ; add byte ptr [rax - 9], cl ; fmul dword ptr [rax + 0x21] ; ret
0x00000000001a6fec : add dword ptr [rax], eax ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pushfq ; salc ; add byte ptr [rax], al ; mov byte ptr [rbp - 0xf], al ; call qword ptr [rsi]
0x0000000000021481 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001a5c35 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add ah, ch ; ret 0
0x000000000017e4da : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000017d68a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x000000000017d4b2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000017d4aa : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x000000000017dc42 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000001b35bd : add dword ptr [rax], eax ; add byte ptr [rax], al ; add cl, byte ptr [rdi + 0xe] ; adc byte ptr [rbx + 0xa930202], al ; ret
0x0000000000050b1b : add dword ptr [rax], eax ; add byte ptr [rax], al ; add ebp, 0x30 ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000bba48 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add edi, 1 ; pop rbx ; mov dword ptr [r11 + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000003b96b : add dword ptr [rax], eax ; add byte ptr [rax], al ; add r13, 1 ; jmp 0x3b713
0x000000000003be1b : add dword ptr [rax], eax ; add byte ptr [rax], al ; add r13, 1 ; jmp 0x3bc23
0x000000000002a5eb : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000131203 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ba7be : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013d7ef : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013e973 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000087de5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000145402 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x88 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000006e361 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x90 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006f8b8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ff440 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000013ecdd : add dword ptr [rax], eax ; add byte ptr [rax], al ; bswap eax ; mov dword ptr [rbx], eax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000002c026 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0xf8256
0x00000000000f76b7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x0000000000104b84 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x0000000000105018 : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0x10556f ; xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000104aeb : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0x10558f ; xor esi, esi ; mov rdi, r12 ; call rbx
0x00000000000ac572 : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0xac4e3 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac622 : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0xac69a ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000170d21 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x170d38 ; neg eax ; ret
0x00000000000abd21 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0xabd31 ; neg eax ; ret
0x000000000016db17 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jl 0x16db28 ; neg eax ; ret
0x000000000004dd7f : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x000000000013e893 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x13e874 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ceb63 : add dword ptr [rax], eax ; add byte ptr [rax], al ; js 0xceb77 ; ret
0x0000000000059c63 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov dword ptr [rbp - 0x1090], 0x20 ; jmp rax
0x000000000005a6b6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov dword ptr [rbp - 0x10b0], 0 ; jmp rax
0x00000000000598c9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov dword ptr [rbp - 0x10b4], 0 ; jmp rax
0x000000000005a75a : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov dword ptr [rbp - 0x10b4], 1 ; jmp rax
0x00000000000741a9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116d5e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xca ; syscall ; pop rdx ; pop rsi ; ret
0x0000000000134c33 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000008aa4d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x0000000000104d6c : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov esi, 1 ; mov rdi, r12 ; call rbx
0x0000000000104fea : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov esi, 2 ; mov rdi, r12 ; call rbx
0x00000000001319bf : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rcx ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000008b9de : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001378fa : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; mov qword ptr [rdi + 0x10], rdx ; mov eax, 1 ; ret
0x000000000004a516 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000134b89 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x000000000012ffca : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000004ee07 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov r8d, 1 ; jmp rax
0x0000000000104d71 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000104c3d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000104bb5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x000000000012eef1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r15 ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x0000000000104ffb : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x000000000006da74 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x000000000006d76d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000003b592 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x00000000000ace21 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movzx eax, al ; ret
0x000000000005590b : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000559db : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008a760 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000299ed : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ce36d : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000bcc0f : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000076925 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000769f5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007def3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000110577 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000f71c9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000484cc : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000002db5f : add dword ptr [rax], eax ; add byte ptr [rax], al ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000351a3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; sar eax, 0x1f ; sub ecx, edx ; not eax ; and eax, ecx ; ret
0x00000000000ac23e : add dword ptr [rax], eax ; add byte ptr [rax], al ; setl al ; neg eax ; cmp ecx, r8d ; cmovg eax, edx ; ret
0x000000000003639e : add dword ptr [rax], eax ; add byte ptr [rax], al ; shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000003641e : add dword ptr [rax], eax ; add byte ptr [rax], al ; shl rax, cl ; test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x00000000000f88ea : add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf8937 ; ret
0x00000000001725a1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; lock cmpxchg qword ptr [rip + 0x2512b0], rdx ; je 0x1725c4 ; ret
0x000000000008a933 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008410c : add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x0000000000143dce : add dword ptr [rax], eax ; add byte ptr [rbp + 0x482b78c0], al ; mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000025f76 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x52880fd2], al ; add dword ptr [rax], eax ; add bh, dh ; ret 0xf800
0x000000000013052a : add dword ptr [rax], eax ; add byte ptr [rbp + 0xf1374d2], al ; mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x00000000001259ac : add dword ptr [rax], eax ; add byte ptr [rbp - 0x2e7af025], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000146670 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x73], cl ; lodsb al, byte ptr [rsi] ; and al, 0x70 ; add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000000459a4 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x28ba28f8], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8539
0x0000000000087687 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x48], bl ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000873df : add dword ptr [rax], eax ; add byte ptr [rbx + 0x48], bl ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000016d959 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x4f3bfc4e], cl ; cld ; jne 0x16db27 ; xor eax, eax ; ret
0x000000000003c9a3 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000078333 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f9c26 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000453a7 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000e0a1b : add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0x53], cl ; or byte ptr [rbp - 0x75], cl ; or byte ptr [rax - 0x77], r9b ; ret 0x1bb
0x0000000000054585 : add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 4], al ; and al, 0x83 ; ret
0x00000000000d9c08 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x72bed3af], cl ; add dword ptr [rcx], edi ; ret 0x8e0f
0x0000000000056474 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x1b802], cl ; add byte ptr [rax], al ; ret
0x0000000000053be4 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fcf03 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bd741 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x76bc2], al ; add byte ptr [rdi], cl ; ret 0xf8c1
0x00000000001010ad : add dword ptr [rax], eax ; add byte ptr [rcx + 0x800008], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000000e11 : add dword ptr [rax], eax ; add byte ptr [rcx + rax + 0x1c00000], bh ; add byte ptr [rax], al ; ret
0x00000000000fea3b : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x10], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ad399 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x10], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000144a19 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x18], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f5d81 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fb82c : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007510e : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, r12 ; call 0x913bb
0x000000000008a442 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, r8 ; call rax
0x0000000000121488 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 8], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ad658 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 8], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bbe98 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; ret 0x4489
0x0000000000067912 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000067929 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4504
0x0000000000085f5e : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000111e51 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf10
0x00000000001ad63e : add dword ptr [rax], eax ; add byte ptr [rcx - 0xb], bl ; jmp qword ptr [rdx]
0x00000000000bfd56 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; xlatb ; sete al ; add eax, 0x16d ; ret
0x00000000000bd7c8 : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x000000000013a396 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000cca49 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000008fac0 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000002c17b : add dword ptr [rax], eax ; add byte ptr [rdi + 0x63], cl ; add al, 0x8b ; add r8, r11 ; jmp r8
0x00000000000cfb05 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x000000000003ce81 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x48 ; add al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000003ce41 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x48 ; add cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003ce21 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x48 ; add dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003cea1 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x48 ; add eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003ce61 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x48 ; add ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000400c6 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x70 ; add al, 0x8d ; push rsi ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000040086 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x70 ; add cl, byte ptr [rbp - 0x57f2faa] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040066 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x70 ; add dword ptr [rbp - 0x57f2faa], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000400e6 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x70 ; add eax, 0x80d0568d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000400a6 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x70 ; add ecx, dword ptr [rbp - 0x57f2faa] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000126209 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xf3c3
0x00000000001261ae : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xfc3
0x00000000001261e9 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xff83
0x00000000001b06fe : add dword ptr [rax], eax ; add byte ptr [rdx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001108f7 : add dword ptr [rax], eax ; add byte ptr [rdx], al ; mov rdx, qword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000000a2d4f : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000a0b4a : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000012f18f : add dword ptr [rax], eax ; add byte ptr [rsi + 4], bh ; mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00000000001abb2e : add dword ptr [rax], eax ; add ch, dl ; hlt ; jmp qword ptr [rcx]
0x0000000000086f7c : add dword ptr [rax], eax ; add dh, dh ; ret
0x000000000016ed65 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x000000000016ed72 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x000000000016ed7f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x000000000016ed37 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000016ed44 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000016ed51 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x00000000001255ae : add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x000000000003b255 : add dword ptr [rax], eax ; add dl, dh ; movups xmm0, xmmword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x0000000000198566 : add dword ptr [rax], eax ; add edi, ecx ; push qword ptr [rsi + rbp*8 + 0x3a40001] ; stc ; jmp rsp
0x0000000000079280 : add dword ptr [rax], eax ; add qword ptr [rbx + 0x18], rbp ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001b2f96 : add dword ptr [rax], eax ; add rdi, rsi ; call rsi
0x000000000010299e : add dword ptr [rax], eax ; add rsp, 0x80 ; add rsp, 8 ; ret
0x00000000001027a9 : add dword ptr [rax], eax ; add rsp, 0x80 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010153d : add dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x00000000000566d5 : add dword ptr [rax], eax ; add rsp, 0xd8 ; ret
0x0000000000033045 : add dword ptr [rax], eax ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000197fde : add dword ptr [rax], eax ; and al, 0x33 ; clc ; lcall ptr [rax + rcx*8 + 0x33b40001] ; clc ; jmp rsp
0x0000000000198686 : add dword ptr [rax], eax ; and al, 0x36 ; stc ; call rsp
0x000000000019804e : add dword ptr [rax], eax ; and al, 0x40 ; clc ; call rsp
0x00000000001966de : add dword ptr [rax], eax ; and al, 0x42 ; call rsp
0x000000000019814e : add dword ptr [rax], eax ; and al, 0x54 ; clc ; dec esp ; rol byte ptr [rcx], 1 ; add byte ptr [rsp + rdx*2 - 8], ah ; jmp rsp
0x0000000000198236 : add dword ptr [rax], eax ; and al, 0x65 ; clc ; lcall ptr [rbp + rdx*8 + 0x66240001] ; clc ; jmp rsp
0x000000000019823e : add dword ptr [rax], eax ; and al, 0x66 ; clc ; jmp rsp
0x000000000019870e : add dword ptr [rax], eax ; and al, 0x66 ; stc ; call rsp
0x000000000019710e : add dword ptr [rax], eax ; and al, 0x68 ; idiv bh ; movsb byte ptr [rdi], byte ptr [rsi] ; jnp 0x197125 ; add byte ptr [rbp + rbp*2 - 0xa], dh ; call rsp
0x0000000000197e36 : add dword ptr [rax], eax ; and bh, al ; dec esp ; rol dword ptr [rcx], 0 ; movsb byte ptr [rdi], byte ptr [rsi] ; and bh, al ; jmp rsp
0x00000000001af06e : add dword ptr [rax], eax ; and bl, al ; cmc ; jmp qword ptr [rdi]
0x00000000001ab67e : add dword ptr [rax], eax ; and bl, cl ; hlt ; jmp qword ptr [rsi]
0x00000000001b093e : add dword ptr [rax], eax ; and byte ptr [rbx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001b7cae : add dword ptr [rax], eax ; and byte ptr [rcx - 8], dl ; call rdi
0x00000000001aca4e : add dword ptr [rax], eax ; and byte ptr [rdx], 0xf5 ; jmp qword ptr [rcx]
0x00000000001b69de : add dword ptr [rax], eax ; and byte ptr [rsi], cl ; clc ; jmp qword ptr [rax]
0x00000000001acaae : add dword ptr [rax], eax ; and esi, ebp ; jmp qword ptr [rcx]
0x00000000001b1806 : add dword ptr [rax], eax ; call 0x141b0e9e
0x00000000001ab756 : add dword ptr [rax], eax ; call 0x221aac2e
0x00000000001abb16 : add dword ptr [rax], eax ; call 0x221aaff6
0x00000000001abe46 : add dword ptr [rax], eax ; call 0x221ab334
0x00000000001ae3f6 : add dword ptr [rax], eax ; call 0x221ad9ab
0x00000000001b4b86 : add dword ptr [rax], eax ; call 0x241b4324
0x00000000001b06e6 : add dword ptr [rax], eax ; call 0x271afd53
0x00000000001a9e56 : add dword ptr [rax], eax ; call qword ptr [rdx]
0x0000000000196666 : add dword ptr [rax], eax ; call rsp
0x0000000000197ed6 : add dword ptr [rax], eax ; clc ; inc esp ; ret
0x00000000001ae706 : add dword ptr [rax], eax ; clc ; lodsb al, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b92e6 : add dword ptr [rax], eax ; clc ; movsd dword ptr [rdi], dword ptr [rsi] ; clc ; call qword ptr [rbx]
0x00000000001ad566 : add dword ptr [rax], eax ; clc ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001b8bd6 : add dword ptr [rax], eax ; clc ; sahf ; sti ; jmp qword ptr [rdx]
0x00000000001ae946 : add dword ptr [rax], eax ; clc ; scasd eax, dword ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x00000000001acb76 : add dword ptr [rax], eax ; cmc ; jmp qword ptr [rcx]
0x00000000000908fa : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x0000000000198016 : add dword ptr [rax], eax ; cmp al, 0xf8 ; jmp rsp
0x00000000001af886 : add dword ptr [rax], eax ; cmp bh, ah ; cmc ; jmp rsp
0x00000000001af086 : add dword ptr [rax], eax ; cmp bl, al ; cmc ; jmp rax
0x00000000001b0956 : add dword ptr [rax], eax ; cmp byte ptr [rbx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001b931e : add dword ptr [rax], eax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; clc ; jmp qword ptr [rcx]
0x00000000001b7c56 : add dword ptr [rax], eax ; cwde ; clc ; call rdi
0x00000000001ad106 : add dword ptr [rax], eax ; cwde ; cmp al, 0xf5 ; call qword ptr [rdi]
0x00000000001b1156 : add dword ptr [rax], eax ; cwde ; jge 0x1b1156 ; call qword ptr [rax]
0x00000000001b8b06 : add dword ptr [rax], eax ; cwde ; lahf ; sti ; jmp qword ptr [rdx]
0x00000000001b2b26 : add dword ptr [rax], eax ; enter -0x91b, -1 ; ret
0x00000000001b7496 : add dword ptr [rax], eax ; fdivr dword ptr [rcx] ; clc ; call rax
0x00000000001aa816 : add dword ptr [rax], eax ; fdivr st(1) ; jmp qword ptr [rdi]
0x00000000001aad06 : add dword ptr [rax], eax ; fimul dword ptr [rdi - 0x19] ; jmp qword ptr [rbx]
0x00000000001b08f6 : add dword ptr [rax], eax ; fsub dword ptr [rdx - 0xa] ; jmp qword ptr [rsi]
0x0000000000195fce : add dword ptr [rax], eax ; fsubr st(7) ; call rsp
0x0000000000196a8e : add dword ptr [rax], eax ; hlt ; and al, 0xf4 ; call rsp
0x000000000019807e : add dword ptr [rax], eax ; hlt ; clc ; jmp rsp
0x0000000000196176 : add dword ptr [rax], eax ; hlt ; ret
0x000000000019847e : add dword ptr [rax], eax ; in al, -0x32 ; clc ; dec esp ; out 1, eax ; add byte ptr [rdi + rcx*8], dh ; clc ; jmp rsp
0x00000000001963ee : add dword ptr [rax], eax ; in al, -0x33 ; int1 ; call rsp
0x000000000019968e : add dword ptr [rax], eax ; in al, -0x38 ; sti ; call rsp
0x000000000019644e : add dword ptr [rax], eax ; in al, 0x22 ; dec esp ; add dword ptr es:[rax], eax ; push rsp ; and esi, edx ; jmp rsp
0x0000000000198096 : add dword ptr [rax], eax ; in al, 0x47 ; clc ; call rsp
0x000000000019825e : add dword ptr [rax], eax ; in al, 0x6a ; clc ; jmp rsp
0x0000000000196216 : add dword ptr [rax], eax ; int1 ; jmp rsp
0x0000000000195f7e : add dword ptr [rax], eax ; je 0x195f5b ; out dx, eax ; jmp rsp
0x000000000019658e : add dword ptr [rax], eax ; je 0x19651b ; jmp rsp
0x0000000000196c9e : add dword ptr [rax], eax ; je 0x196d14 ; cmc ; dec dword ptr [rsp + 0x68340001] ; cmc ; call rsp
0x0000000000197ede : add dword ptr [rax], eax ; je 0x197f0f ; clc ; push rsp ; ret
0x0000000000197f7e : add dword ptr [rax], eax ; je 0x197fb9 ; clc ; inc dword ptr [rsi + rax*8 + 0x2ad40001] ; clc ; call rsp
0x00000000001986ae : add dword ptr [rax], eax ; je 0x1986fc ; stc ; call rsp
0x000000000019970e : add dword ptr [rax], eax ; je 0x1996d6 ; cld ; jmp rsp
0x0000000000199806 : add dword ptr [rax], eax ; je 0x1997e0 ; std ; ljmp ptr [rcx + rbx*2] ; add byte ptr [rdx + rcx*8 - 3], dl ; jmp rsp
0x0000000000047496 : add dword ptr [rax], eax ; jne 0x47496 ; pop rbx ; ret
0x00000000000d2502 : add dword ptr [rax], eax ; jne 0xd2519 ; or esi, 2 ; mov eax, esi ; ret
0x00000000000d25d2 : add dword ptr [rax], eax ; jne 0xd25f7 ; or esi, 2 ; xor eax, eax ; cmp esi, 1 ; sete al ; ret
0x00000000001aaa2e : add dword ptr [rax], eax ; jo 0x1aaa4d ; hlt ; jmp qword ptr [rcx]
0x00000000001ac32e : add dword ptr [rax], eax ; jo 0x1ac345 ; cmc ; jmp qword ptr [rax]
0x00000000001ac40e : add dword ptr [rax], eax ; jo 0x1ac42c ; cmc ; call qword ptr [rbx]
0x00000000001ac7ee : add dword ptr [rax], eax ; jo 0x1ac814 ; cmc ; call qword ptr [rsi]
0x00000000001ad5de : add dword ptr [rax], eax ; jo 0x1ad63f ; cmc ; jmp qword ptr [rcx]
0x00000000001abea6 : add dword ptr [rax], eax ; jrcxz 0x1abea4 ; jmp qword ptr [rcx]
0x0000000000196b56 : add dword ptr [rax], eax ; js 0x196b54 ; call rsp
0x00000000001abb76 : add dword ptr [rax], eax ; js 0x1abb54 ; hlt ; jmp qword ptr [rcx]
0x00000000001ac806 : add dword ptr [rax], eax ; js 0x1ac82c ; cmc ; jmp qword ptr [rcx]
0x00000000001ae1a6 : add dword ptr [rax], eax ; js 0x1ae142 ; cmc ; jmp qword ptr [rcx]
0x00000000001ae74e : add dword ptr [rax], eax ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001aca7e : add dword ptr [rax], eax ; loopne 0x1acaa9 ; cmc ; jmp qword ptr [rcx]
0x00000000001ad54e : add dword ptr [rax], eax ; loopne 0x1ad5ae ; cmc ; jmp qword ptr [rcx]
0x00000000001b891e : add dword ptr [rax], eax ; loopne 0x1b898b ; clc ; jmp qword ptr [rcx]
0x0000000000197fe6 : add dword ptr [rax], eax ; mov ah, 0x33 ; clc ; jmp rsp
0x0000000000198426 : add dword ptr [rax], eax ; mov ah, 0xb6 ; clc ; jmp rsp
0x0000000000196406 : add dword ptr [rax], eax ; mov ah, 0xf3 ; int1 ; call rsp
0x00000000001b6fde : add dword ptr [rax], eax ; mov al, 0x2c ; clc ; jmp rdi
0x00000000001ac20e : add dword ptr [rax], eax ; mov al, 0xb ; cmc ; jmp rcx
0x00000000001aeece : add dword ptr [rax], eax ; mov al, 0xb8 ; cmc ; jmp qword ptr [rcx]
0x00000000001ae98e : add dword ptr [rax], eax ; mov al, 0xf5 ; call qword ptr [rsi]
0x00000000001b0686 : add dword ptr [rax], eax ; mov byte ptr [rcx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001aaa46 : add dword ptr [rax], eax ; mov byte ptr [rsi], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001abde6 : add dword ptr [rax], eax ; mov dl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000000fde4d : add dword ptr [rax], eax ; mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000fd942 : add dword ptr [rax], eax ; mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fce63 : add dword ptr [rax], eax ; mov eax, dword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f87d9 : add dword ptr [rax], eax ; mov eax, dword ptr [rsp + 8] ; add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000160321 : add dword ptr [rax], eax ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000000a051c : add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x0000000000102d07 : add dword ptr [rax], eax ; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x102d2a ; ret
0x00000000000f6e9d : add dword ptr [rax], eax ; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xf6ec0 ; ret
0x00000000000f6efd : add dword ptr [rax], eax ; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xf6f20 ; ret
0x00000000000f8697 : add dword ptr [rax], eax ; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xf86ba ; ret
0x00000000000f88b7 : add dword ptr [rax], eax ; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xf88da ; ret
0x00000000000f8917 : add dword ptr [rax], eax ; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xf893a ; ret
0x00000000000f8f47 : add dword ptr [rax], eax ; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xf8f6a ; ret
0x00000000000f9097 : add dword ptr [rax], eax ; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xf90ba ; ret
0x00000000000fcd97 : add dword ptr [rax], eax ; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xfcdba ; ret
0x00000000000fd89d : add dword ptr [rax], eax ; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xfd8c0 ; ret
0x00000000000fe5e7 : add dword ptr [rax], eax ; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xfe60a ; ret
0x00000000000fe647 : add dword ptr [rax], eax ; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xfe66a ; ret
0x00000000000fe6ad : add dword ptr [rax], eax ; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xfe6d0 ; ret
0x00000000000fe70d : add dword ptr [rax], eax ; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xfe730 ; ret
0x00000000000feb7d : add dword ptr [rax], eax ; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xfeba0 ; ret
0x00000000000fed37 : add dword ptr [rax], eax ; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xfed5a ; ret
0x00000000000fedc7 : add dword ptr [rax], eax ; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xfedea ; ret
0x000000000019856e : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; add edi, ecx ; jmp rsp
0x00000000001976c6 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0xf7 ; jmp rsp
0x0000000000197e3e : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; and bh, al ; jmp rsp
0x00000000001966d6 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ljmp ptr [rdi + rsi + 0x42240001] ; call rsp
0x0000000000197d86 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000019745e : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff6
0x000000000019867e : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; xor al, 0xf9 ; push qword ptr [rsp + rsi*8 + 1] ; add byte ptr [rsi + rsi], ah ; stc ; call rsp
0x00000000001b777e : add dword ptr [rax], eax ; nop ; clc ; call qword ptr [rdx]
0x0000000000196b86 : add dword ptr [rax], eax ; nop ; hlt ; call rsp
0x00000000001ae9be : add dword ptr [rax], eax ; nop ; mov al, 0xf5 ; jmp qword ptr [rcx]
0x00000000001aec8e : add dword ptr [rax], eax ; nop ; mov ch, 0xf5 ; jmp qword ptr [rbx]
0x00000000001b0a4e : add dword ptr [rax], eax ; nop ; sbb al, 0xfc ; jmp qword ptr [rsi]
0x00000000001ac61e : add dword ptr [rax], eax ; nop ; sbb ebp, esi ; jmp qword ptr [rcx]
0x00000000001ab666 : add dword ptr [rax], eax ; or bl, cl ; hlt ; jmp qword ptr [rcx]
0x00000000001b6e46 : add dword ptr [rax], eax ; or byte ptr [rax], ch ; clc ; jmp rdi
0x00000000001b0926 : add dword ptr [rax], eax ; or byte ptr [rbx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001967a6 : add dword ptr [rax], eax ; pop rax ; call rsp
0x00000000001ad5ae : add dword ptr [rax], eax ; pop rax ; cmc ; jmp qword ptr [rcx]
0x00000000001ae766 : add dword ptr [rax], eax ; pop rax ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ad5c6 : add dword ptr [rax], eax ; pop rax ; pop rax ; cmc ; jmp qword ptr [rcx]
0x00000000001af056 : add dword ptr [rax], eax ; pop rax ; ret 0xfff5
0x00000000001b5a56 : add dword ptr [rax], eax ; pop rax ; ret 0xfff7
0x00000000000a059b : add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00000000001963b6 : add dword ptr [rax], eax ; popfq ; int1 ; jmp rsp
0x0000000000198726 : add dword ptr [rax], eax ; push 0xf9 ; push qword ptr [rcx + rdi*8 + 0x6ac40001] ; stc ; jmp rsp
0x00000000001b40ee : add dword ptr [rax], eax ; push rax ; jl 0x1b40ef ; call rcx
0x00000000001ae68e : add dword ptr [rax], eax ; push rax ; lodsb al, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b096e : add dword ptr [rax], eax ; push rax ; movsxd rsi, esi ; jmp qword ptr [rsi]
0x00000000001ae46e : add dword ptr [rax], eax ; push rax ; stosb byte ptr [rdi], al ; cmc ; call qword ptr [rax]
0x00000000001ae56e : add dword ptr [rax], eax ; push rax ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x0000000000196b06 : add dword ptr [rax], eax ; push rdx ; hlt ; call rsp
0x00000000001985fe : add dword ptr [rax], eax ; push rsp ; and ecx, edi ; call rsp
0x0000000000196456 : add dword ptr [rax], eax ; push rsp ; and esi, edx ; jmp rsp
0x0000000000198156 : add dword ptr [rax], eax ; push rsp ; clc ; jmp rsp
0x0000000000196a4e : add dword ptr [rax], eax ; push rsp ; loope 0x196a4b ; call rsp
0x000000000019630e : add dword ptr [rax], eax ; push rsp ; mov dh, cl ; call rsp
0x0000000000197c3e : add dword ptr [rax], eax ; push rsp ; mov edi, esi ; jmp rsp
0x000000000019978e : add dword ptr [rax], eax ; push rsp ; movabs eax, dword ptr [0xa164000116ccfffd] ; std ; jmp rsp
0x0000000000196476 : add dword ptr [rax], eax ; push rsp ; pop rsi ; jmp rsp
0x0000000000196166 : add dword ptr [rax], eax ; push rsp ; ret
0x0000000000196146 : add dword ptr [rax], eax ; push rsp ; ret 0xfff0
0x00000000001abafe : add dword ptr [rax], eax ; rcl ah, 1 ; hlt ; jmp qword ptr [rcx]
0x00000000001ac64e : add dword ptr [rax], eax ; rcr byte ptr [rcx], 0xf5 ; jmp qword ptr [rcx]
0x000000000008bbc2 : add dword ptr [rax], eax ; ret
0x00000000001b993e : add dword ptr [rax], eax ; rol cl, 0xf8 ; call qword ptr [rdi]
0x00000000001ab73e : add dword ptr [rax], eax ; ror ah, 1 ; hlt ; jmp qword ptr [rcx]
0x00000000001ab86e : add dword ptr [rax], eax ; ror ch, 0xf4 ; jmp qword ptr [rcx]
0x00000000001b731e : add dword ptr [rax], eax ; sal byte ptr [rdi], 0xf8 ; call qword ptr [rbx]
0x00000000001abe76 : add dword ptr [rax], eax ; sbb bl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001b812e : add dword ptr [rax], eax ; sbb byte ptr [rax - 8], 0xff ; ret
0x00000000001b8446 : add dword ptr [rax], eax ; sbb byte ptr [rax - 8], ah ; jmp qword ptr [rdi]
0x00000000001b7a16 : add dword ptr [rax], eax ; sbb byte ptr [rbp - 8], al ; call qword ptr [rdx]
0x00000000001ac956 : add dword ptr [rax], eax ; sbb byte ptr [rcx], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001b0716 : add dword ptr [rax], eax ; sbb byte ptr [rdx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001acb46 : add dword ptr [rax], eax ; sbb byte ptr [rsi], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001ab7f6 : add dword ptr [rax], eax ; sbb ch, cl ; hlt ; jmp qword ptr [rcx]
0x00000000001b06ce : add dword ptr [rax], eax ; shl byte ptr [rcx - 0xa], 1 ; jmp qword ptr [rsi]
0x00000000001abe2e : add dword ptr [rax], eax ; shl dl, 1 ; hlt ; jmp qword ptr [rcx]
0x00000000001b3f2e : add dword ptr [rax], eax ; shr cl, 0xfb ; call rsi
0x00000000001ad596 : add dword ptr [rax], eax ; sub byte ptr [rax - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001b0626 : add dword ptr [rax], eax ; sub byte ptr [rcx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001ad676 : add dword ptr [rax], eax ; sub byte ptr [rcx - 0xb], bl ; call rdx
0x00000000001b8586 : add dword ptr [rax], eax ; sub byte ptr [rcx - 8], ah ; jmp qword ptr [rbx]
0x00000000001aa9e6 : add dword ptr [rax], eax ; sub byte ptr [rsi], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001abc56 : add dword ptr [rax], eax ; sub ch, bl ; hlt ; jmp qword ptr [rcx]
0x0000000000197f56 : add dword ptr [rax], eax ; sub eax, r15d ; call rsp
0x00000000001ac636 : add dword ptr [rax], eax ; test al, 0x19 ; cmc ; jmp qword ptr [rcx]
0x00000000001ae5e6 : add dword ptr [rax], eax ; test al, 0xab ; cmc ; jmp qword ptr [rcx]
0x00000000001ab606 : add dword ptr [rax], eax ; test al, 0xca ; hlt ; call qword ptr [rcx]
0x00000000001ab856 : add dword ptr [rax], eax ; test al, 0xcd ; hlt ; jmp qword ptr [rcx]
0x00000000001afc56 : add dword ptr [rax], eax ; test al, 0xf7 ; cmc ; call rsi
0x000000000019841e : add dword ptr [rax], eax ; test byte ptr [rbp - 0x1b6b0008], dh ; add dword ptr [rax], eax ; mov ah, 0xb6 ; clc ; jmp rsp
0x000000000019800e : add dword ptr [rax], eax ; test byte ptr [rbx], bh ; clc ; dec esp ; leave ; add dword ptr [rax], eax ; cmp al, 0xf8 ; jmp rsp
0x0000000000196836 : add dword ptr [rax], eax ; test byte ptr [rdx - 0xd], bh ; call rsp
0x000000000019808e : add dword ptr [rax], eax ; test byte ptr [rsi - 8], al ; dec dword ptr [rsp + rcx*8 + 0x47e40001] ; clc ; call rsp
0x0000000000196586 : add dword ptr [rax], eax ; test dl, r14b ; dec esp ; add dword ptr cs:[rax], eax ; je 0x196523 ; jmp rsp
0x0000000000197e8e : add dword ptr [rax], eax ; xchg eax, esp ; and al, 0xf8 ; call rsp
0x000000000019671e : add dword ptr [rax], eax ; xchg eax, esp ; call rsp
0x000000000019625e : add dword ptr [rax], eax ; xchg eax, esp ; jns 0x196261 ; push qword ptr [rdx + rbx + 0x79d40001] ; int1 ; jmp rsp
0x0000000000198386 : add dword ptr [rax], eax ; xchg eax, esp ; pushfq ; clc ; call rsp
0x000000000019616e : add dword ptr [rax], eax ; xchg eax, esp ; ret
0x00000000001963e6 : add dword ptr [rax], eax ; xchg eax, esp ; retf ; int1 ; inc dword ptr [rbx - 0x321bffff] ; int1 ; call rsp
0x0000000000198636 : add dword ptr [rax], eax ; xor al, 0x25 ; stc ; push qword ptr [rdx + rsi*8 + 0x25840001] ; stc ; jmp rsp
0x0000000000196ca6 : add dword ptr [rax], eax ; xor al, 0x68 ; cmc ; call rsp
0x00000000001963ae : add dword ptr [rax], eax ; xor al, 0x9d ; int1 ; dec esp ; and dword ptr [rcx], eax ; add byte ptr [rbp + rbx*4 - 0xf], al ; jmp rsp
0x0000000000199706 : add dword ptr [rax], eax ; xor al, 0x9e ; cld ; dec esp ; adc eax, dword ptr [rcx] ; add byte ptr [rdi + rdi*4 - 4], dh ; jmp rsp
0x0000000000195ece : add dword ptr [rax], eax ; xor al, 0xc5 ; out dx, eax ; inc esp ; add dword ptr [rcx], eax ; add byte ptr [rsi + rax*8], dh ; out dx, eax ; jmp rsp
0x0000000000195ed6 : add dword ptr [rax], eax ; xor al, 0xc6 ; out dx, eax ; jmp rsp
0x0000000000198486 : add dword ptr [rax], eax ; xor al, 0xcf ; clc ; jmp rsp
0x00000000001abe8e : add dword ptr [rax], eax ; xor bl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001b35fe : add dword ptr [rax], eax ; xor byte ptr [rcx], 0xf7 ; jmp qword ptr [rsi]
0x00000000001aab3e : add dword ptr [rax], eax ; xor byte ptr [rdi], dl ; hlt ; call qword ptr [rdx]
0x00000000001b072e : add dword ptr [rax], eax ; xor byte ptr [rdx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001acb5e : add dword ptr [rax], eax ; xor byte ptr [rsi], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001ab80e : add dword ptr [rax], eax ; xor ch, cl ; hlt ; jmp qword ptr [rcx]
0x00000000001ba0f3 : add dword ptr [rax], ebp ; movabs dword ptr [0x503d4000001cc01], eax ; ret 0xa
0x00000000001ba09b : add dword ptr [rax], ebp ; stosd dword ptr [rdi], eax ; add cl, al ; add dword ptr [rax], eax ; add al, bl ; add al, 5 ; ret 0xb
0x00000000000a06a3 : add dword ptr [rax], edi ; adc al, 7 ; je 0xa06a7 ; ret
0x000000000011f8f1 : add dword ptr [rax], esp ; je 0x11f8df ; pop rbx ; xor eax, eax ; mov byte ptr [rdx], 0 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000196895 : add dword ptr [rax], r8d ; add al, 0x8d ; jmp rsp
0x0000000000160320 : add dword ptr [rax], r8d ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000000aa807 : add dword ptr [rbp + 0x16], esi ; movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xaa810 ; sub rax, 1 ; ret
0x00000000000aa6b7 : add dword ptr [rbp + 0x16], esi ; movzx edx, byte ptr [rsi + rax + 3] ; test dl, dl ; jne 0xaa6c0 ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000000ffa81 : add dword ptr [rbp + 0x2c], 0 ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000ad196 : add dword ptr [rbp + 0x31], eax ; shr byte ptr [rdx], 0x48 ; lea ecx, dword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000016b63b : add dword ptr [rbp + 0x32], esi ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000000d9eca : add dword ptr [rbp + 0x38], eax ; loope 0xd9f4c ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000129893 : add dword ptr [rbp + 0xf], eax ; mov dh, 0x7d ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rax]
0x000000000006dfa9 : add dword ptr [rbp + rcx*4 + 0x40], eax ; dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4504
0x000000000013d372 : add dword ptr [rbp - 0x14], esi ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x0000000000098c0c : add dword ptr [rbp - 0xf], esi ; xor edi, edi ; mov rax, rdi ; ret
0x0000000000140e6b : add dword ptr [rbp - 0xffa7640], eax ; pop rdx ; sub byte ptr [rax], al ; jle 0x140a17 ; jmp 0x140e4e
0x0000000000079283 : add dword ptr [rbx + 0x18], ebp ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001106de : add dword ptr [rbx + 0x38], ebp ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000036373 : add dword ptr [rbx - 0x389bffc8], ebp ; add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000be352 : add dword ptr [rbx], eax ; add rsp, 0x10 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000134c21 : add dword ptr [rcx + 0x1b802], ecx ; add byte ptr [rax], al ; ret
0x0000000000168301 : add dword ptr [rcx + 0x3418b02], ecx ; mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x00000000000a2e56 : add dword ptr [rcx + 0x3418b02], ecx ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000000ac7ec : add dword ptr [rcx + 0x39], eax ; add dh, byte ptr [rbp + 0x7a] ; test eax, eax ; jne 0xac7de ; mov rax, rdi ; ret
0x00000000001682e1 : add dword ptr [rcx + 0x418b6602], ecx ; add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x00000000000a2e36 : add dword ptr [rcx + 0x418b6602], ecx ; add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000001682d1 : add dword ptr [rcx + 0x4418a02], ecx ; mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x00000000000a2e16 : add dword ptr [rcx + 0x4418a02], ecx ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000f8573 : add dword ptr [rcx - 0x389bffd4], ecx ; add byte ptr [rsi], ah ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000126879 : add dword ptr [rcx - 0x39], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 1], 1 ; xlatb ; mov qword ptr [r9], rdi ; ret
0x00000000000847b2 : add dword ptr [rcx - 0x75], ecx ; push rax ; or dh, dh ; ret 0xf04
0x000000000004e3fc : add dword ptr [rcx - 0x7d], eax ; xlatb ; inc dword ptr [rax - 0x4e743] ; jmp qword ptr [rax]
0x000000000004400e : add dword ptr [rcx - 0x7d], ecx ; out dx, al ; add dword ptr [rax - 0x77], ecx ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret
0x0000000000041196 : add dword ptr [rcx - 0x7d], ecx ; out dx, al ; add dword ptr [rax - 0x77], ecx ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0xc148
0x00000000000302db : add dword ptr [rcx - 0x7d], ecx ; std ; dec dword ptr [rdi] ; test bl, ah ; add al, byte ptr [rax] ; add byte ptr [rcx], dh ; imul al ; ret
0x00000000001b1b0d : add dword ptr [rcx], 0xf6941000 ; call qword ptr [rax]
0x0000000000195ecd : add dword ptr [rcx], eax ; add byte ptr [rax*8 + 0x1c4ffef], dh ; add dword ptr [rax], eax ; xor al, 0xc6 ; out dx, eax ; jmp rsp
0x00000000000ac55b : add dword ptr [rcx], eax ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000012621b : add dword ptr [rcx], eax ; add byte ptr [rax], al ; ret
0x0000000000195ed5 : add dword ptr [rcx], eax ; add byte ptr [rsi + rax*8], dh ; out dx, eax ; jmp rsp
0x00000000000aa6b6 : add dword ptr [rcx], eax ; jne 0xaa6e1 ; movzx edx, byte ptr [rsi + rax + 3] ; test dl, dl ; jne 0xaa6c1 ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000116fc0 : add dword ptr [rcx], ebx ; ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx - 0x7d], bl ; loopne 0x116fe5 ; pop rbp ; pop r12 ; ret
0x000000000005646d : add dword ptr [rcx], ebx ; sal byte ptr [rax], 0xc0 ; add eax, 0x107 ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000328e1 : add dword ptr [rcx], edi ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x00000000000fed73 : add dword ptr [rcx], esp ; sub al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000013eabf : add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000109773 : add dword ptr [rdi + 0x2b], esi ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000128f0b : add dword ptr [rdi + rcx - 0x4a], eax ; cmp eax, dword ptr [rcx - 0x80] ; jmp qword ptr [rax]
0x0000000000134c6d : add dword ptr [rdi], ecx ; enter -0x7e77, -0x58 ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000013825c : add dword ptr [rdi], ecx ; enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000ddc7a : add dword ptr [rdi], ecx ; test bh, cl ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7af7db8c], cl ; div byte ptr [rdi - 0xa] ; ret
0x00000000000fc57d : add dword ptr [rdi], ecx ; test byte ptr [rbx + rax], ch ; add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x00000000000eb49c : add dword ptr [rdi], ecx ; test byte ptr [rdx + rax], dh ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; test dword ptr [rip + 0x148fffa], esp ; ret
0x0000000000114adb : add dword ptr [rdi], ecx ; test byte ptr [rsi + 0x31000000], dl ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000165d5e : add dword ptr [rdi], ecx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x0000000000083305 : add dword ptr [rdi], ecx ; test dword ptr [rsi], ebx ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000016a0fe : add dword ptr [rdi], ecx ; test ebx, edi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x0000000000085f64 : add dword ptr [rdi], ecx ; test esp, ebp ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x00000000001000e8 : add dword ptr [rdi], ecx ; xchg cl, dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000100088 : add dword ptr [rdi], ecx ; xchg cl, dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000013edae : add dword ptr [rdi], ecx ; xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000013ec57 : add dword ptr [rdi], ecx ; xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000109473 : add dword ptr [rdx + 0x2b], edi ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000014b2f6 : add dword ptr [rdx + 0x610d8d48], edx ; xchg eax, esi ; add al, byte ptr [rax] ; mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000010b0eb : add dword ptr [rdx + rax*2], 1 ; ret
0x0000000000098d2b : add dword ptr [rdx + rdx*8 + 0xba], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000015066b : add dword ptr [rdx - 0x13f272b8], edx ; add al, byte ptr [rax] ; mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000014ecc6 : add dword ptr [rdx - 0x6ef272b8], edx ; pop rsp ; add al, byte ptr [rax] ; mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000001b9b15 : add dword ptr [rdx], eax ; add byte ptr [rax - 0x3a], cl ; clc ; call qword ptr [rdi]
0x00000000001b9aad : add dword ptr [rdx], eax ; add byte ptr [rax - 0x3d], ah ; clc ; jmp rcx
0x00000000000ff173 : add dword ptr [rip - 0x2708ffd4], ebx ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000a2e98 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x00000000000a2eb8 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov ax, word ptr [rcx + 8] ; mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x00000000000a2ed8 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000a2ef8 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000000a2d55 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x00000000000a5b29 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x0000000000037597 : add dword ptr [rsi + 0xf], esp ; out dx, eax ; ror byte ptr [rax + 0xf], 0xaf ; ret 0x8949
0x00000000000a0cf3 : add dword ptr [rsi + 0xf], esp ; xlatb ; shl dword ptr [rcx], -0x30 ; test eax, eax ; je 0xa0ce1 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000001a4ef7 : add dword ptr [rsi + rax*4], 3 ; mov word ptr [rdx], es ; push rdx ; ret
0x000000000019f912 : add dword ptr [rsi + rcx + 0x10], ecx ; add bl, byte ptr [rax + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000001a0deb : add dword ptr [rsi + rcx + 0x10], ecx ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; fsub qword ptr [rcx] ; add byte ptr [rax], al ; call 0x2719fb77
0x00000000001a28ec : add dword ptr [rsi + rcx + 8], ecx ; adc al, 0 ; add byte ptr [rax], al ; pushfq ; pop qword ptr [rax] ; add byte ptr [rax], bh ; leave ; in eax, dx ; jmp qword ptr [rax]
0x00000000000c8873 : add dword ptr [rsi - 0x2dceffd1], eax ; mov dword ptr fs:[rax], 2 ; mov rax, rdx ; ret
0x00000000000a2dd7 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000a2de7 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rdx + 0x42880241] ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000081950 : add dword ptr [rsp + 0x18], ecx ; cmp rbx, rax ; je 0x8196b ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019658d : add dword ptr cs:[rax], eax ; je 0x19651c ; jmp rsp
0x00000000001ac7ed : add dword ptr cs:[rax], eax ; jo 0x1ac815 ; cmc ; call qword ptr [rsi]
0x00000000001ac805 : add dword ptr cs:[rax], eax ; js 0x1ac82d ; cmc ; jmp qword ptr [rcx]
0x0000000000196585 : add dword ptr cs:[rax], eax ; test dl, r14b ; dec esp ; add dword ptr cs:[rax], eax ; je 0x196524 ; jmp rsp
0x0000000000150587 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000097c5d : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000019644d : add dword ptr es:[rax], eax ; in al, 0x22 ; dec esp ; add dword ptr es:[rax], eax ; push rsp ; and esi, edx ; jmp rsp
0x0000000000196455 : add dword ptr es:[rax], eax ; push rsp ; and esi, edx ; jmp rsp
0x00000000001b35bc : add dword ptr fs:[rax], eax ; add byte ptr [rax], al ; add cl, byte ptr [rdi + 0xe] ; adc byte ptr [rbx + 0xa930202], al ; ret
0x0000000000196c9d : add dword ptr fs:[rax], eax ; je 0x196d15 ; cmc ; dec dword ptr [rsp + 0x68340001] ; cmc ; call rsp
0x0000000000196c9c : add dword ptr fs:[rax], eax ; je 0x196d16 ; cmc ; dec dword ptr [rsp + 0x68340001] ; cmc ; call rsp
0x0000000000196ca5 : add dword ptr fs:[rax], eax ; xor al, 0x68 ; cmc ; call rsp
0x00000000000391ec : add dword ptr gs:[rax], eax ; add byte ptr [rax - 0x75], cl ; push rsp ; and al, 8 ; mov rsi, qword ptr [r15] ; mov rdi, qword ptr [r12] ; call r14
0x000000000005a700 : add eax, 0x12a03b ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, rcx ; mov edx, 1 ; jmp rax
0x000000000002cb12 : add eax, 0x15df0e ; cmp edi, dword ptr [rdx + 0x38] ; jae 0x2cb3e ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000000908f7 : add eax, 0x19ab4 ; cmove rax, rdx ; ret
0x00000000001babf5 : add eax, 0x1e60000 ; add byte ptr [rax], al ; ret
0x0000000000131a7f : add eax, 0x24448b48 ; or byte ptr [rax - 0x77], cl ; fimul dword ptr [rcx + rcx*4 - 0x1a] ; mov rdi, rbp ; call rax
0x000000000017247e : add eax, 0x250779 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000172029 : add eax, 0x2508ae ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000172645 : add eax, 0x251402 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001727f3 : add eax, 0x25291c ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000017281b : add eax, 0x25292c ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000146b22 : add eax, 0x27a351 ; neg r8d ; mov dword ptr fs:[rax], r8d ; mov eax, 0xffffffff ; ret
0x0000000000146aa2 : add eax, 0x27a3d1 ; mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x00000000001469b2 : add eax, 0x27a3f9 ; add rax, qword ptr fs:[0] ; ret
0x00000000001458e2 : add eax, 0x27b591 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0x16 ; ret
0x00000000001438c2 : add eax, 0x27d5b1 ; mov dword ptr fs:[rax], 0x26 ; mov eax, 0xffffffff ; ret
0x0000000000143322 : add eax, 0x27db51 ; mov dword ptr fs:[rax], 0x26 ; mov eax, 0xffffffff ; ret
0x0000000000143302 : add eax, 0x27db71 ; mov dword ptr fs:[rax], 0x26 ; mov eax, 0xffffffff ; ret
0x00000000001432b2 : add eax, 0x27dbc1 ; mov dword ptr fs:[rax], 0x26 ; mov eax, 0xffffffff ; ret
0x0000000000143262 : add eax, 0x27dc11 ; mov dword ptr fs:[rax], 0x26 ; mov eax, 0xffffffff ; ret
0x0000000000143b25 : add eax, 0x27e8c6 ; call qword ptr [rax]
0x00000000001434f8 : add eax, 0x27eef3 ; call qword ptr [rax]
0x000000000013b7a2 : add eax, 0x2856d1 ; cmp dword ptr fs:[rax], 0x18 ; je 0x13b7bb ; ret
0x0000000000140964 : add eax, 0x286003 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013aae2 : add eax, 0x2862c1 ; lea rdx, qword ptr [rip + 0x28b4b2] ; mov qword ptr fs:[rax], rdx ; ret
0x00000000000a2e14 : add eax, 0x289018b ; mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000013ab34 : add eax, 0x28b443 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000012b0c2 : add eax, 0x295f21 ; mov rax, qword ptr fs:[rax] ; ret
0x000000000012ae42 : add eax, 0x295ff1 ; mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x12ae5c ; ret
0x000000000012aa62 : add eax, 0x2963d1 ; test byte ptr [rax + 0x40], 8 ; je 0x12aa84 ; cmp dword ptr [rdi + 0x10], 2 ; je 0x12aa89 ; ret
0x000000000012a1ba : add eax, 0x296c79 ; and dword ptr [rax + 0x40], 0xfffffff9 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011b542 : add eax, 0x2a5919 ; add rax, qword ptr fs:[0] ; ret
0x000000000011a4aa : add eax, 0x2a69c9 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x000000000011e8df : add eax, 0x2a6bb8 ; add byte ptr [rax + rax], al ; add al, ch ; ret
0x00000000001175a2 : add eax, 0x2a98d1 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x0000000000117222 : add eax, 0x2adee1 ; test rax, rax ; je 0x11723a ; ret
0x0000000000116e9f : add eax, 0x2af888 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000010bcc2 : add eax, 0x2b51a1 ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000010b010 : add eax, 0x2b6207 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000010b003 : add eax, 0x2b6214 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000010acf1 : add eax, 0x2b6526 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000010b47a : add eax, 0x2b8f59 ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x000000000010b36a : add eax, 0x2b9069 ; mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x0000000000107742 : add eax, 0x2b9731 ; mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x00000000001074a2 : add eax, 0x2b99c1 ; mov edx, 0x64 ; mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x0000000000106bda : add eax, 0x2ba299 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x0000000000106a7a : add eax, 0x2ba4e1 ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x106b91 ; call rax
0x0000000000106903 : add eax, 0x2ba658 ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x1069b9 ; call rax
0x0000000000103ae2 : add eax, 0x2bd391 ; mov dword ptr fs:[rax], 0x16 ; ret
0x0000000000103aac : add eax, 0x2bd3c7 ; mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x0000000000103a9b : add eax, 0x2bd3d8 ; mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x0000000000103249 : add eax, 0x2bdc2a ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x000000000010066a : add eax, 0x2c0809 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000001005ca : add eax, 0x2c08a9 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000000ff292 : add eax, 0x2c1be1 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000000ff262 : add eax, 0x2c1c11 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000000ff142 : add eax, 0x2c1d31 ; mov dword ptr fs:[rax], 0x26 ; mov eax, 0xffffffff ; ret
0x00000000000fe972 : add eax, 0x2c24f1 ; mov rax, qword ptr [rax + 0x18] ; test rax, rax ; je 0xfe991 ; ret
0x00000000000fe952 : add eax, 0x2c2521 ; mov dword ptr fs:[rax], 0x16 ; mov eax, edi ; ret
0x00000000000fe8a2 : add eax, 0x2c25d1 ; mov dword ptr fs:[rax], 0x16 ; mov eax, edi ; ret
0x00000000000fe4a2 : add eax, 0x2c29d1 ; mov dword ptr fs:[rax], 0xc ; mov eax, 0xffffffff ; ret
0x00000000000fe48e : add eax, 0x2c2a35 ; mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x00000000000fe466 : add eax, 0x2c2a5d ; mov qword ptr [rax], rdx ; xor eax, eax ; cmp rdi, rdx ; ja 0xfe4b0 ; ret
0x00000000000ffab6 : add eax, 0x2c2cc5 ; mov rdx, rax ; jmp 0xffa56
0x0000000000101044 : add eax, 0x2c30a3 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000fda32 : add eax, 0x2c3441 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x0000000000100c63 : add eax, 0x2c345c ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fd9d2 : add eax, 0x2c34a1 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000000fd18a : add eax, 0x2c3ce9 ; mov dword ptr fs:[rax], 9 ; mov eax, 0xffffffff ; ret
0x00000000000fd134 : add eax, 0x2c3d3f ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000000fcd42 : add eax, 0x2c4131 ; mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x00000000000fcbf2 : add eax, 0x2c4281 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 1 ; ret
0x00000000000ff9f7 : add eax, 0x2c4560 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000ff8eb : add eax, 0x2c46d4 ; lea rax, qword ptr [rip + 0x2c46a1] ; ret
0x00000000000ff71b : add eax, 0x2c48a4 ; lea rax, qword ptr [rip + 0x2c4871] ; ret
0x00000000000ff535 : add eax, 0x2c4a8a ; lea rax, qword ptr [rip + 0x2c4a57] ; add rsp, 8 ; ret
0x0000000000165de4 : add eax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00000000000fb182 : add eax, 0x2c5cf1 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000000f85ea : add eax, 0x2c8889 ; mov dword ptr fs:[rax], 0x5f ; mov eax, 0xffffffff ; ret
0x00000000000f85d2 : add eax, 0x2c88a1 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000000f8572 : add eax, 0x2c8901 ; mov dword ptr fs:[rax], 0x26 ; mov eax, 0xffffffff ; ret
0x00000000000f83f2 : add eax, 0x2c8a81 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000000f839a : add eax, 0x2c8ad9 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000000f833a : add eax, 0x2c8b39 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000000f82da : add eax, 0x2c8b99 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000000f828a : add eax, 0x2c8be9 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000000f823a : add eax, 0x2c8c39 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000000ec212 : add eax, 0x2d4c61 ; neg edx ; mov dword ptr fs:[rax], edx ; mov eax, 0xffffffff ; ret
0x00000000000ec1ba : add eax, 0x2d4cb9 ; neg r8d ; mov dword ptr fs:[rax], r8d ; mov eax, 0xffffffff ; ret
0x00000000000c517d : add eax, 0x2e ; mov rdx, r14 ; mov rsi, qword ptr [rdi + rax*8] ; mov rdi, rbp ; call 0x913bf
0x000000000016ef23 : add eax, 0x2e6690c3 ; nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000cddaa : add eax, 0x2f30c9 ; mov dword ptr fs:[rax], 2 ; mov eax, 0xffffffff ; ret
0x00000000000cd832 : add eax, 0x2f3641 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000000cba82 : add eax, 0x2f53f1 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000000c8a22 : add eax, 0x2f8451 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000000c8872 : add eax, 0x2f8601 ; xor edx, edx ; mov dword ptr fs:[rax], 2 ; mov rax, rdx ; ret
0x00000000000c8702 : add eax, 0x2f8771 ; xor edx, edx ; mov dword ptr fs:[rax], 2 ; mov rax, rdx ; ret
0x00000000000bfd02 : add eax, 0x301171 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000000bf1e9 : add eax, 0x304902 ; lea rcx, qword ptr [rax + r9] ; mov rdx, rax ; jmp 0xbf206
0x00000000000bbc12 : add eax, 0x305261 ; mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x0000000000145877 : add eax, 0x312b8964 ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000008fb1e : add eax, 0x333d7d ; mov qword ptr [rip + 0x333d5e], rax ; add rsp, 8 ; ret
0x000000000008fadc : add eax, 0x333dbf ; mov qword ptr [rip + 0x333da0], rax ; ret
0x000000000008aa48 : add eax, 0x338d9b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000008a92e : add eax, 0x338eb1 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008a771 : add eax, 0x33906e ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000008a75b : add eax, 0x339084 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000087dd0 : add eax, 0x33909b ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x87dec ; call rax
0x0000000000086820 : add eax, 0x33a6bb ; mov qword ptr [rax], rdi ; ret
0x00000000000858d2 : add eax, 0x33b5a1 ; xor esi, esi ; mov dword ptr fs:[rax], 0xc ; mov rax, rsi ; ret
0x0000000000085762 : add eax, 0x33b711 ; mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x00000000000843e3 : add eax, 0x33c9e0 ; xor edi, edi ; call qword ptr [rax]
0x000000000008426b : add eax, 0x33cb58 ; mov qword ptr [rsp + 8], r8 ; xor edi, edi ; call qword ptr [rax]
0x0000000000086831 : add eax, 0x33cf6e ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000867b7 : add eax, 0x33cff8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000080a34 : add eax, 0x340477 ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x80a50 ; call rax
0x00000000000801cc : add eax, 0x340cdf ; mov rax, qword ptr [rax] ; test rax, rax ; jne 0x80213 ; xor edi, edi ; call qword ptr [r15]
0x000000000008040a : add eax, 0x343389 ; add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000007f246 : add eax, 0x3444f9 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007c797 : add eax, 0x3446dc ; mov dword ptr fs:[rax], 9 ; mov eax, 0xffffffff ; ret
0x0000000000079132 : add eax, 0x347d41 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x000000000007738a : add eax, 0x349ae9 ; mov dword ptr fs:[rax], 9 ; mov eax, 0xffffffff ; ret
0x0000000000075ef7 : add eax, 0x34af7c ; mov dword ptr fs:[rax], 9 ; mov eax, 0xffffffff ; ret
0x00000000000753bf : add eax, 0x34bab4 ; mov dword ptr fs:[rax], 9 ; mov eax, 0xffffffff ; ret
0x00000000001995a5 : add eax, 0x35040002 ; sti ; lcall ptr [rsi + rax + 2] ; add byte ptr [rbp + rsi - 5], dh ; jmp rsp
0x000000000006bc20 : add eax, 0x357acb ; add rsp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000016a195 : add eax, 0x364850f ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000045dc4 : add eax, 0x37d817 ; mov byte ptr [rax + rdx], 0 ; ret
0x0000000000045dbd : add eax, 0x37d823 ; lea rax, qword ptr [rip + 0x37d817] ; mov byte ptr [rax + rdx], 0 ; ret
0x000000000003af32 : add eax, 0x385f41 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x000000000003ae9a : add eax, 0x385fd9 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x000000000003aa59 : add eax, 0x3889f6 ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000003a989 : add eax, 0x388abe ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000036ba2 : add eax, 0x38a2d1 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000000368b2 : add eax, 0x38a5c1 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000000365c5 : add eax, 0x38a8ae ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x0000000000036452 : add eax, 0x38aa21 ; mov dword ptr fs:[rax], 0x26 ; mov eax, 0xffffffff ; ret
0x0000000000036432 : add eax, 0x38aa41 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000000363f2 : add eax, 0x38aa81 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000000363b2 : add eax, 0x38aac1 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x0000000000036372 : add eax, 0x38ab01 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000000362f2 : add eax, 0x38ab81 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x0000000000035a42 : add eax, 0x38b431 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000000357c2 : add eax, 0x38b6b1 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x000000000003ab05 : add eax, 0x38b93a ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000003546c : add eax, 0x38ba07 ; mov dword ptr fs:[rax], 0x22 ; add rsp, 8 ; ret
0x0000000000035137 : add eax, 0x38bd3c ; mov dword ptr fs:[rax], 0x22 ; add rsp, 0x28 ; ret
0x0000000000034e1a : add eax, 0x38c059 ; mov dword ptr fs:[rax], 0x22 ; add rsp, 0x28 ; ret
0x000000000003418a : add eax, 0x38cce9 ; mov dword ptr fs:[rax], 0x2a ; mov rax, rcx ; ret
0x000000000002e062 : add eax, 0x392da9 ; add rax, qword ptr fs:[0] ; ret
0x000000000002e082 : add eax, 0x392e61 ; add rax, qword ptr fs:[0] ; ret
0x000000000002e0a2 : add eax, 0x392e89 ; add rax, qword ptr fs:[0] ; ret
0x000000000002d93d : add eax, 0x3934a6 ; mov qword ptr [rax], rdx ; ret
0x000000000002af78 : add eax, 0x395823 ; mov qword ptr [r14], rcx ; mov rcx, qword ptr [rax + r15*8] ; test rcx, rcx ; je 0x2af9c ; call rcx
0x0000000000020da2 : add eax, 0x3a00d1 ; mov dword ptr fs:[rax], 9 ; mov eax, edi ; ret
0x00000000000207a2 : add eax, 0x3a06d1 ; add rax, qword ptr fs:[0] ; ret
0x000000000001fa35 : add eax, 0x3a2e66 ; mov qword ptr [rip + 0x3a68c7], rdx ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000116667 : add eax, 0x48 ; cmp rax, rdx ; jb 0x11666a ; xor eax, eax ; ret
0x00000000000a7776 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a85b6 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000010c64c : add eax, 0x48104623 ; lea eax, dword ptr [rsi + rax*4] ; mov eax, dword ptr [rax + rdx] ; shr eax, cl ; and eax, 1 ; ret
0x0000000000172097 : add eax, 0x490024e7 ; mov dword ptr [rsp], ebx ; mov rdx, qword ptr [rax + rbp*8] ; test rdx, rdx ; je 0x1720bb ; call rdx
0x0000000000168399 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000164009 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x000000000017f07d : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x0000000000147f06 : add eax, 0x633a0f66 ; add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000f7f3e : add eax, 0x66c3d8f7 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000010a45d : add eax, 0x7e7be ; movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000a693e : add eax, 0x82b850f ; add byte ptr [rax], al ; ret
0x000000000013ede8 : add eax, 0x8348fff3 ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000ce196 : add eax, 0x841f0fc3 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x66], bh ; syscall ; ret
0x00000000000ce1b6 : add eax, 0x841f0fc3 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x68], bh ; syscall ; ret
0x00000000000ce1a6 : add eax, 0x841f0fc3 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x6b], bh ; syscall ; ret
0x00000000000ce1c6 : add eax, 0x841f0fc3 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x6c], bh ; syscall ; ret
0x0000000000031267 : add eax, 0x89450000 ; dec dword ptr [rax - 0x7d] ; ret
0x000000000005e784 : add eax, 0x8d480000 ; push rax ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000004e294 : add eax, 0x8e7 ; mov dword ptr [rbp - 0x4f0], 1 ; jmp rax
0x0000000000059c98 : add eax, 0x963 ; mov dword ptr [rbp - 0x1098], 1 ; jmp rax
0x00000000000a7fe2 : add eax, 0x997850f ; add byte ptr [rax], al ; ret
0x0000000000029bf3 : add eax, 0xa0c48148 ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c395f : add eax, 0xc3418 ; movzx edi, dl ; movsxd rax, dword ptr [r8 + rdi*4] ; add rax, r8 ; jmp rax
0x000000000012f247 : add eax, 0xc4 ; lea rdx, qword ptr [rip + 0xe00d] ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000030ff8 : add eax, 0xc7834900 ; or byte ptr [rax + 1], cl ; ret
0x000000000003a27f : add eax, 0xc8c14818 ; adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000098297 : add eax, 0xd0f74801 ; add rbx, rax ; jne 0x98299 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012a361 : add eax, 0xda834800 ; add ecx, dword ptr [rax + 0x29] ; ret 0x3949
0x00000000000a0898 : add eax, 0xe555f ; mov r9d, r9d ; movsxd r9, dword ptr [rax + r9*4] ; add r9, rax ; jmp r9
0x0000000000082fe4 : add eax, 0xf05f883 ; test byte ptr [rdi], dl ; or byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000085eb1 : add eax, 0xf05f883 ; test byte ptr [rdx + rax], bl ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000000879e3 : add eax, 0xf05f883 ; test ch, al ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000085f57 : add eax, 0xf05f883 ; test dh, bl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000010af36 : add eax, 0xfff874e8 ; dec dword ptr [rax + 0x63] ; fisttp dword ptr [rax - 0x77] ; sbb eax, 0x2b62da ; pop rbx ; ret
0x00000000001395d1 : add eax, 0xffff93ea ; mov rdi, rax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x00000000001396c9 : add eax, 0xffff95a2 ; mov esi, 9 ; mov rdi, rax ; call qword ptr [r10]
0x000000000008a19c : add eax, 0xffffff2f ; mov qword ptr [r12], rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f8097 : add eax, 0xffffffb4 ; cmove rax, rdx ; ret
0x0000000000047491 : add eax, 1 ; cmp byte ptr [rax + 1], 0 ; jne 0x4749b ; pop rbx ; ret
0x00000000000a06a1 : add eax, 1 ; cmp byte ptr [rdi + rax], dl ; je 0xa06a9 ; ret
0x00000000000484e9 : add eax, 1 ; cmp rax, rdx ; jne 0x484ea ; xor eax, eax ; ret
0x000000000009671f : add eax, 1 ; mov qword ptr [rbx], rax ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000ac6d9 : add eax, 1 ; mov r8d, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0xac6bd ; ret
0x00000000000a06c1 : add eax, 1 ; movsx ecx, byte ptr [rdi + rax] ; cmp ecx, edx ; je 0xa06d0 ; cmp ecx, esi ; je 0xa06d0 ; ret
0x00000000000a0611 : add eax, 1 ; movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0xa0614 ; ret
0x00000000000a05cd : add eax, 1 ; movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0xa05d4 ; ret
0x00000000000a0669 : add eax, 1 ; movsx r8d, byte ptr [rdi + rax] ; test r8b, r8b ; jne 0xa065e ; ret
0x0000000000021465 : add eax, 1 ; push rax ; call rbx
0x0000000000098d29 : add eax, 1 ; test dl, dl ; mov edx, 0 ; cmove rax, rdx ; ret
0x000000000000ddd1 : add eax, 3 ; add byte ptr [rax], al ; or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x000000000013e727 : add eax, 4 ; bswap edx ; mov dword ptr [rsi], edx ; mov qword ptr [rdi + 0x18], rax ; mov eax, 1 ; ret
0x00000000000adb61 : add eax, 4 ; mov edx, dword ptr [rax] ; cmp edx, esi ; je 0xadb7c ; test edx, edx ; jne 0xadb6e ; ret
0x00000000000ac72e : add eax, 4 ; mov qword ptr [r12], rax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000131a16 : add eax, 4 ; mov qword ptr [rbx + 0x20], rax ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000ac9fc : add eax, 4 ; test edx, edx ; mov dword ptr [rax], edx ; jne 0xaca02 ; ret
0x00000000000868cf : add eax, 8 ; cmp rdx, rax ; ja 0x868d3 ; xor eax, eax ; ret
0x00000000000aad07 : add eax, dword ptr [rax + 0xf48f0e5] ; ret 0xc35b
0x00000000000b62e6 : add eax, dword ptr [rax] ; add al, ch ; ret 0xf778
0x00000000000eb599 : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000014623c : add eax, dword ptr [rax] ; add bh, bh ; nop ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000025dac : add eax, dword ptr [rax] ; add bh, dh ; ret 0
0x00000000000258b7 : add eax, dword ptr [rax] ; add bh, dh ; ret 0xf800
0x00000000000d4a56 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; adc eax, 0xb2ed4 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000d2a86 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; adc eax, 0xb4d34 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000001034cb : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; add eax, 0x2c0d4b ; add rsp, 0x18 ; ret
0x0000000000102f53 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; add eax, 0x2c1273 ; add rsp, 8 ; ret
0x000000000006d36c : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; or eax, 0x118522 ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000011fd30 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x2e66
0x00000000000ff87d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x2d], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000016a102 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x00000000000207ea : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000124e28 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x00000000001483cd : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000003118a : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x000000000014af21 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001483f1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001439f9 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000007b1a : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x000000000000ddd2 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x000000000013592e : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000131e9b : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000107800 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010acf6 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000117497 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; cmovne eax, edx ; ret
0x0000000000104b34 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; je 0x10564f ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000104ed7 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; je 0x10566f ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000104db2 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; je 0x10568f ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000104c59 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; je 0x1056af ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000105404 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; je 0x1056cf ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000001052df : add eax, dword ptr [rax] ; add byte ptr [rax], al ; je 0x1056ef ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000105186 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; je 0x10570f ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000105061 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; je 0x10572f ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000104bb0 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov esi, 1 ; mov rdi, r14 ; call rbx
0x0000000000104c29 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov esi, 2 ; mov rdi, r14 ; call rbx
0x000000000010556d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00000000001055cc : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x000000000010564c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x000000000010574c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x000000000013a96a : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x00000000001398c1 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, rax ; lea r9, qword ptr [rsp + 0x14] ; call qword ptr [r10]
0x00000000001a3c5c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rsp ; add byte ptr [rax], al ; add byte ptr [rbx], cl ; add byte ptr [rax], al ; pop rax ; outsd dx, dword ptr [rsi] ; out dx, al ; jmp qword ptr [rdi]
0x00000000000ac053 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000079f55 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0x79f77 ; ret
0x00000000000c89f1 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xc8a17 ; pop rbx ; ret
0x00000000000f8f1a : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf8f67 ; ret
0x000000000014483c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; mov dword ptr [rip + 0x27caa4], 0xffffffff ; ret
0x00000000000ff0c3 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; mov eax, edx ; ret
0x0000000000124a94 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; ret
0x0000000000116def : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x14], dh ; mov eax, r11d ; and eax, 0xc ; cmp eax, 4 ; je 0x116e10 ; ret
0x0000000000116d8c : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x19], dh ; and r11d, 0xffffffbb ; cmp r11d, 0xa ; je 0x116dab ; ret
0x00000000000258af : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x5677f02e], al ; add eax, dword ptr [rax] ; add bh, dh ; ret 0xf800
0x00000000000aed2a : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x7b], al ; in eax, dx ; mov r10, rbp ; setne dl ; jmp 0xaed52
0x00000000000b1719 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x7b], al ; in eax, dx ; mov r10, rbp ; setne dl ; jmp 0xb1742
0x0000000000119bb4 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000072ce8 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000aaab0 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe3e], al ; ror dword ptr [rdi], -0x51 ; ret 0x78e9
0x00000000000e00a1 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0f607], al ; pop rcx ; add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; ret
0x00000000000fc581 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x000000000013ac9f : add eax, dword ptr [rax] ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8e0f
0x00000000000e9214 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], cl ; push rsi ; adc byte ptr [rcx - 0x75], cl ; or byte ptr [rax + 0x63], r9b ; ret
0x0000000000116d75 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x00000000000dd491 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0x3945
0x000000000001fe16 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; rol dword ptr [rcx - 0x77], cl ; ret 0x8341
0x0000000000084bee : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x79f0dbfc], cl ; ret 0xfffa
0x0000000000083309 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x00000000000e00aa : add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; ret
0x000000000011aec4 : add eax, dword ptr [rax] ; add byte ptr [rdi + 8], dh ; mov rax, rdi ; sar rax, 6 ; ret
0x00000000000d0878 : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x41 ; add dword ptr [rax - 0x7d], ecx ; rol dword ptr [rcx], -0x7c ; sal byte ptr [rbp - 0x2b], 0xf6 ; ret 0xf05
0x00000000001bca01 : add eax, dword ptr [rax] ; add byte ptr [rdx + rax + 0x4240000], ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x000000000016be6c : add eax, dword ptr [rax] ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; push rdi ; and byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016be81 : add eax, dword ptr [rax] ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000055b78 : add eax, dword ptr [rax] ; add cl, bl ; in eax, -0x21 ; loopne 0x55b11 ; ret 0xe680
0x0000000000081a30 : add eax, dword ptr [rax] ; add dh, dh ; ret
0x00000000000cf008 : add eax, dword ptr [rax] ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000aacdb : add eax, dword ptr [rax] ; cmp edx, 0xff ; cmove rax, rcx ; pop rbx ; ret
0x000000000004ab4e : add eax, dword ptr [rax] ; mov rax, rbx ; add rsp, 0x440 ; pop rbx ; ret
0x00000000000ff207 : add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x0000000000150d3f : add eax, dword ptr [rax] ; movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000156100 : add eax, dword ptr [rax] ; movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x00000000001537fd : add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000aacc0 : add eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000117f09 : add eax, dword ptr [rax] ; ret
0x0000000000158ca2 : add eax, dword ptr [rax] ; sub rdx, 0x80 ; movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000007ef1a : add eax, dword ptr [rbp + 0x10] ; mov qword ptr [rbp + 8], rax ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000007eee9 : add eax, dword ptr [rbp + 0x18] ; mov qword ptr [rbp + 8], rax ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000132ad6 : add eax, dword ptr [rbp - 0x47ea8b40] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000801b9 : add eax, dword ptr [rbp] ; cmp r14, rax ; jne 0x8019a ; mov rdi, r12 ; neg rdi ; call qword ptr [r15]
0x000000000014013c : add eax, dword ptr [rbx + 0x394801e0] ; fmul dword ptr [rax + 0xf] ; ret
0x0000000000165da9 : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x00000000001b0b74 : add eax, dword ptr [rcx + rax + 0x41200e0a] ; ret
0x00000000000fe440 : add eax, dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000a2d4e : add eax, dword ptr [rcx] ; add byte ptr [rax], al ; movlpd xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000001bb6f8 : add eax, dword ptr [rcx] ; add byte ptr [rax], al ; ret
0x00000000000f836b : add eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xf838f ; ret
0x0000000000165ea9 : add eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x0000000000151fbe : add eax, dword ptr ds:[rax] ; movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000016a198 : add eax, dword ptr fs:[rax] ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x00000000000c396c : add eax, eax ; jmp rax
0x000000000003d181 : add eax, eax ; sub rdx, rax ; jmp 0x3d1c0
0x00000000000403cb : add eax, eax ; sub rdx, rax ; jmp 0x4040a
0x000000000009089d : add eax, ebp ; insd dword ptr [rdi], dx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000000f7395 : add eax, ebp ; test dword ptr [rcx], ecx ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000016ef03 : add eax, ebx ; nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000ac013 : add eax, ebx ; nop ; nop word ptr cs:[rax + rax] ; xor rax, rax ; ret
0x00000000000a60d9 : add eax, ebx ; nop dword ptr [rax + rax] ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a083a : add eax, ebx ; nop dword ptr [rax] ; mov eax, dword ptr [rsp + 0x10] ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000165f84 : add eax, ebx ; nop word ptr cs:[rax + rax] ; mov qword ptr [rcx], rdx ; ret
0x000000000004bb1f : add eax, ecx ; jmp rax
0x000000000005a660 : add eax, ecx ; mov dword ptr [rbp - 0x1080], 1 ; jmp rax
0x0000000000059c09 : add eax, ecx ; mov dword ptr [rbp - 0x1088], 1 ; jmp rax
0x000000000005a9e2 : add eax, ecx ; mov dword ptr [rbp - 0x10a8], 1 ; jmp rax
0x000000000005a92b : add eax, ecx ; mov dword ptr [rbp - 0x10b0], 1 ; jmp rax
0x000000000005aa34 : add eax, ecx ; mov dword ptr [rbp - 0x10b8], 1 ; jmp rax
0x000000000004e1fe : add eax, ecx ; mov dword ptr [rbp - 0x4a8], 1 ; jmp rax
0x000000000004e858 : add eax, ecx ; mov dword ptr [rbp - 0x4f8], 1 ; jmp rax
0x000000000004ef84 : add eax, ecx ; mov dword ptr [rbp - 0x508], 1 ; jmp rax
0x000000000004f0a7 : add eax, ecx ; mov dword ptr [rbp - 0x510], 1 ; jmp rax
0x000000000004efe0 : add eax, ecx ; mov dword ptr [rbp - 0x518], 1 ; jmp rax
0x000000000005a70a : add eax, ecx ; mov edx, 1 ; jmp rax
0x00000000000598c6 : add eax, ecx ; mov edx, 1 ; mov dword ptr [rbp - 0x10b4], 0 ; jmp rax
0x000000000005a757 : add eax, ecx ; mov edx, 1 ; mov dword ptr [rbp - 0x10b4], 1 ; jmp rax
0x000000000004ee04 : add eax, ecx ; mov edx, 1 ; mov r8d, 1 ; jmp rax
0x000000000004dd79 : add eax, ecx ; xor r8d, r8d ; mov edx, 1 ; jmp rax
0x00000000000a0d65 : add eax, edi ; add rax, r8 ; ret
0x0000000000090ba7 : add eax, edi ; add rax, rcx ; ret
0x00000000000c5a6f : add eax, edi ; jmp rax
0x000000000014d38b : add eax, edi ; sub rax, r8 ; ret
0x000000000014d5e0 : add eax, edi ; sub rax, rdx ; ret
0x0000000000020c41 : add eax, edx ; jmp rax
0x000000000008dbc6 : add eax, edx ; sub rax, rdi ; ret
0x00000000000ff205 : add eax, esi ; add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x0000000000117047 : add eax, esi ; cmpxchg qword ptr [rip + 0x2af6f7], rdi ; cmp rdx, rax ; jne 0x117040 ; ret
0x00000000000c0743 : add eax, esi ; jmp rax
0x000000000000395d : add ebp, dword ptr [rax + rsi*4] ; std ; sub ah, dh ; test edi, ecx ; adc byte ptr [rdx + 0x71], bh ; xchg eax, ebx ; and cl, ah ; ret
0x00000000000c7d4e : add ebp, eax ; lodsb al, byte ptr [rsi] ; jnp 0xc7d50 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ffb27 : add ebp, ebx ; mov ebp, 0x441f0f66 ; add byte ptr [rax], al ; ret
0x00000000000d6341 : add ebp, ecx ; imul ebp, esi, 0x8b48ffff ; mov esp, 0x8824 ; add byte ptr [rax + 0x63], cl ; ret
0x00000000001168b3 : add ebp, edi ; sub al, byte ptr [rax] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; jmp rax
0x00000000000d14ce : add ebx, 1 ; mov rdx, rax ; jmp 0xd1475
0x0000000000146472 : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000015a3e9 : add ebx, dword ptr [rax + 0x63490003] ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000009829d : add ebx, eax ; jne 0x98293 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000423a1 : add ebx, eax ; movsx rax, byte ptr [rbx] ; jmp 0x4219c
0x00000000000ac003 : add ebx, eax ; nop ; nop word ptr cs:[rax + rax] ; add rax, 3 ; ret
0x000000000016eee3 : add ebx, eax ; nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000798f7 : add ebx, eax ; nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x00000000000488d4 : add ebx, eax ; nop word ptr cs:[rax + rax] ; xor eax, eax ; ret
0x00000000000d14ec : add ebx, ebp ; adc dword ptr [rax + 0x17b80], 0x8348a874 ; ret
0x00000000000f71f2 : add ecx, 0x150 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000145c18 : add ecx, 0x180 ; mov rsi, rax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000f6f7f : add ecx, 0x50 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000098dc6 : add ecx, 1 ; sub rax, 1 ; jne 0x98dcb ; pop rbx ; pop rbp ; ret
0x0000000000098c06 : add ecx, 1 ; sub rsi, 1 ; jne 0x98c0e ; xor edi, edi ; mov rax, rdi ; ret
0x000000000016ec0b : add ecx, dword ptr [r8 - 0x7f] ; rol dword ptr [rax], 1 ; add byte ptr [rax], al ; cmp rdx, rcx ; jne 0x16ec03 ; vzeroupper ; ret
0x0000000000080e49 : add ecx, dword ptr [rax + 0x29] ; ret
0x00000000000997dd : add ecx, dword ptr [rax + 0x29] ; ret 0x148
0x00000000000d63dd : add ecx, dword ptr [rax + 0x29] ; ret 0x14c
0x00000000001134b5 : add ecx, dword ptr [rax + 0x29] ; ret 0x3949
0x0000000000113553 : add ecx, dword ptr [rax + 0x29] ; ret 0x394c
0x00000000001215c8 : add ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x00000000000984af : add ecx, dword ptr [rax + 0x29] ; ret 0x8949
0x00000000001aa5ea : add ecx, dword ptr [rax + 0xe] ; and byte ptr [rbx + 0xa7a0204], al ; ret
0x000000000013efec : add ecx, dword ptr [rax + 1] ; enter -0x1f01, 0x66 ; nop dword ptr [rax + rax] ; ret
0x00000000000ac93b : add ecx, dword ptr [rax + rax] ; ret
0x0000000000090f8f : add ecx, dword ptr [rax - 0x2d] ; clc ; movzx eax, al ; sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000126a6c : add ecx, dword ptr [rax - 0x68] ; shr rax, 4 ; ret
0x00000000000a68fc : add ecx, dword ptr [rax - 0x73] ; jg 0xa690f ; jne 0xa717b ; ret
0x00000000000a7fa0 : add ecx, dword ptr [rax - 0x73] ; jg 0xa7fb3 ; jne 0xa898b ; ret
0x0000000000146364 : add ecx, dword ptr [rax - 0x75] ; add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x38 ; add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x00000000001007a4 : add ecx, dword ptr [rax - 0x77] ; adc bl, dh ; ret
0x00000000000d7cc8 : add ecx, dword ptr [rax - 0x77] ; add cl, byte ptr [rax - 0x7b] ; leave ; je 0xd7ce5 ; mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000a2e5e : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000008bb63 : add ecx, dword ptr [rax - 0x77] ; imul ecx, dword ptr [rax], -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000106d24 : add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], cl ; ret 0xc148
0x000000000012514b : add ecx, dword ptr [rax - 0x7d] ; call qword ptr [rcx]
0x00000000000c1777 : add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000049f45 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4101
0x00000000000392ae : add ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000016ec0c : add ecx, dword ptr [rax - 0x7f] ; rol dword ptr [rax], 1 ; add byte ptr [rax], al ; cmp rdx, rcx ; jne 0x16ec02 ; vzeroupper ; ret
0x00000000001a5cbc : add ecx, dword ptr [rbp + 0x4c0002] ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x0000000000146739 : add ecx, dword ptr [rbp - 0x88] ; call rax
0x00000000000a76e4 : add ecx, dword ptr [rcx + 0x357890f] ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a8514 : add ecx, dword ptr [rcx + 0x357890f] ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000001254fb : add ecx, dword ptr [rcx + rcx*4 + 0x4d] ; mov byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x0000000000114e28 : add ecx, dword ptr [rcx - 0x75] ; sbb byte ptr [rax + 1], r9b ; ret 0x8949
0x0000000000126732 : add ecx, dword ptr [rcx - 0xc3fce3f] ; stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x0000000000089d1d : add ecx, dword ptr [rdi] ; test ah, bh ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x00000000000a6900 : add ecx, dword ptr [rdi] ; test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x000000000016a147 : add ecx, dword ptr [rdi] ; test dword ptr [rdx - 0x7ffffffd], esi ; cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x00000000001ba095 : add ecx, dword ptr [rip - 0x10000] ; add dword ptr [rax], ebp ; stosd dword ptr [rdi], eax ; add cl, al ; add dword ptr [rax], eax ; add al, bl ; add al, 5 ; ret 0xb
0x00000000000494f7 : add ecx, eax ; adc rdx, r8 ; mov qword ptr [rdi + r11*8 + 8], r9 ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000126a69 : add ecx, eax ; loopne 0x126a7a ; cdqe ; shr rax, 4 ; ret
0x000000000012672c : add ecx, eax ; mov eax, ecx ; shr eax, 3 ; mov ecx, eax ; xor eax, eax ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x0000000000102d73 : add ecx, esp ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000014d44c : add edi, 0x10 ; sub edx, eax ; cmp edx, ecx ; jle 0x14d378 ; movsxd rax, ecx ; ret
0x000000000010074d : add edi, 0x26 ; mov dword ptr fs:[rax], edi ; mov eax, 0xffffffff ; ret
0x0000000000131201 : add edi, dword ptr [rax + 1] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000aad1d : add edi, dword ptr [rax - 0x153efff3] ; or al, 0x83 ; loop 0xaad47 ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x0000000000126606 : add edx, 2 ; mov qword ptr [rax], r10 ; lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x000000000010a4a1 : add edx, eax ; cmp rcx, rdx ; mov edx, 0 ; cmovb rax, rdx ; ret
0x00000000000a0c68 : add edx, eax ; jl 0xa0cd7 ; add rax, rdi ; ret
0x00000000000a0c78 : add edx, eax ; jl 0xa0cd9 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000000a0c98 : add edx, eax ; jl 0xa0cd9 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00000000000a0cb8 : add edx, eax ; jl 0xa0cd9 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000004888d : add edx, eax ; mov qword ptr [rdi + 8], r10 ; mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000049502 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x000000000004b515 : add edx, ebp ; call qword ptr [r10 + rax*8]
0x00000000000bbc75 : add edx, ecx ; mov rax, rdx ; add rsp, 0x18 ; ret
0x00000000001563e9 : add edx, esp ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000118361 : add esi, dword ptr [r13 - 0x6d] ; mov rax, rdi ; ret
0x00000000000a9f89 : add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x0000000000118362 : add esi, dword ptr [rbp - 0x6d] ; mov rax, rdi ; ret
0x000000000016db12 : add esi, dword ptr [rcx] ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jl 0x16db2d ; neg eax ; ret
0x00000000001399a6 : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x000000000003b44c : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000139e57 : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000126943 : add esi, eax ; add al, byte ptr [r8] ; mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a051a : add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x00000000000a0599 : add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x000000000011018b : add esi, eax ; jmp qword ptr [rax]
0x00000000000362e9 : add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x0000000000102ef4 : add esp, 0x10 ; lea rax, qword ptr [rip + 0x2c12f2] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000be355 : add esp, 0x10 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002a5f0 : add esp, 0x10 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008879c : add esp, 0x10 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000088e49 : add esp, 0x10 ; mov rsi, r12 ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000000888b9 : add esp, 0x10 ; mov rsi, r12 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000007d381 : add esp, 0x10 ; pop rbx ; jmp rax
0x00000000000be4e1 : add esp, 0x10 ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002a693 : add esp, 0x10 ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008d64d : add esp, 0x100 ; sub rax, rdx ; ret
0x000000000008fabd : add esp, 0x100 ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x00000000000f9877 : add esp, 0x1000 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006bb69 : add esp, 0x1008 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000097d3c : add esp, 0x18 ; add rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001196e8 : add esp, 0x18 ; div rbp ; mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000006d4c9 : add esp, 0x18 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000037539 : add esp, 0x18 ; mov rax, r15 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008a4fe : add esp, 0x18 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000079bf6 : add esp, 0x18 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003c24d : add esp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000a0f16 : add esp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001196bb : add esp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000002e733 : add esp, 0x18 ; mov rax, rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000080410 : add esp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000070bb1 : add esp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000006d559 : add esp, 0x18 ; pop rbx ; mov rax, r12 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007ad9b : add esp, 0x18 ; pop rbx ; pop rbp ; sub rax, r12 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007d9f6 : add esp, 0x18 ; pop rbx ; pop rbp ; sub rax, r14 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007dbaa : add esp, 0x18 ; pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000080451 : add esp, 0x18 ; xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000007de6d : add esp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x000000000008b0b3 : add esp, 0x20 ; mov rax, r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013bcaa : add esp, 0x20 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013c951 : add esp, 0x20 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006f1f6 : add esp, 0x20 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007da4d : add esp, 0x20 ; pop rbx ; jmp rax
0x000000000007dea6 : add esp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x00000000000bbadc : add esp, 0x20 ; test eax, eax ; js 0xbbb28 ; cmp eax, 0x19 ; jg 0xbbb10 ; mov rax, rbx ; pop rbx ; ret
0x000000000002074e : add esp, 0x28 ; jmp rax
0x0000000000072146 : add esp, 0x28 ; lea rax, qword ptr [rbx + r12] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008ad42 : add esp, 0x28 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008b214 : add esp, 0x28 ; mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e7364 : add esp, 0x28 ; mov rax, r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e7621 : add esp, 0x28 ; mov rax, r15 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006fbfd : add esp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006bbe6 : add esp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000104579 : add esp, 0x28 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003b821 : add esp, 0x28 ; neg rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e1e66 : add esp, 0x28 ; pop rbx ; pop rbp ; mov rax, rcx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000073bbd : add esp, 0x28 ; pop rbx ; pop rbp ; sub rax, r12 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000073d35 : add esp, 0x28 ; pop rbx ; pop rbp ; sub rax, r14 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012e0a5 : add esp, 0x30 ; lea rax, qword ptr [rip + 0x297c91] ; pop rbx ; ret
0x000000000012e06d : add esp, 0x30 ; lea rax, qword ptr [rip + 0x297cc9] ; pop rbx ; ret
0x000000000012dfae : add esp, 0x30 ; lea rax, qword ptr [rip + 0x297d88] ; pop rbx ; ret
0x000000000008926e : add esp, 0x30 ; mov rax, r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fc13c : add esp, 0x38 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000086fec : add esp, 0x38 ; mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000111114 : add esp, 0x38 ; mov rax, r15 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ffdcc : add esp, 0x400 ; mov rax, r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000306a8 : add esp, 0x48 ; mov rax, r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000085b83 : add esp, 0x48 ; mov rax, r15 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000032e4a : add esp, 0x48 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004b509 : add esp, 0x48 ; shl rdx, 2 ; lea rcx, qword ptr [r15 + rdx] ; add rdx, r13 ; call qword ptr [r10 + rax*8]
0x00000000001433cb : add esp, 0x510 ; mov rax, rbx ; pop rbx ; ret
0x00000000000ddcfa : add esp, 0x58 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000722e1 : add esp, 0x58 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000090429 : add esp, 0x58 ; mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ad15a : add esp, 0x60 ; mov rax, -1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e94a : add esp, 0x60 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fe08b : add esp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000fe0db : add esp, 0x60 ; mov rbx, rax ; mov rax, rbx ; pop rbx ; ret
0x00000000000ad1e6 : add esp, 0x60 ; pop rbx ; pop rbp ; sub rax, r12 ; pop r12 ; ret
0x00000000000ea37e : add esp, 0x68 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013552a : add esp, 0x78 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003a449 : add esp, 0x80 ; add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000000c9cea : add esp, 0x80 ; mov dword ptr fs:[rdx], r8d ; mov rax, rsi ; add rsp, 8 ; ret
0x000000000008000a : add esp, 0x80 ; mov qword ptr fs:[r9], rdx ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000143b1d : add esp, 0x80 ; mov rax, qword ptr [rip + 0x27e8c6] ; call qword ptr [rax]
0x00000000001434f0 : add esp, 0x80 ; mov rax, qword ptr [rip + 0x27eef3] ; call qword ptr [rax]
0x0000000000135ff1 : add esp, 0x80 ; mov rax, qword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000808f6 : add esp, 0x80 ; mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000070120 : add esp, 0x80 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003ad18 : add esp, 0x80 ; mov rax, rbx ; pop rbx ; ret
0x0000000000143c96 : add esp, 0x80 ; mov rax, rdx ; add rsp, 8 ; ret
0x000000000003adb4 : add esp, 0x80 ; movsxd rax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x000000000006edf5 : add esp, 0x80 ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x0000000000070d89 : add esp, 0x80 ; pop rbx ; mov rax, rsi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000776d4 : add esp, 0x90 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011fb1a : add esp, 0x90 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c86c7 : add esp, 0x98 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000011066d : add esp, 0xd8 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001181a3 : add esp, 8 ; add rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000102d0d : add esp, 8 ; cmp rax, -0xfff ; jae 0x102d24 ; ret
0x0000000000109383 : add esp, 8 ; cmp rax, -0xfff ; jae 0x10939a ; ret
0x0000000000109683 : add esp, 8 ; cmp rax, -0xfff ; jae 0x10969a ; ret
0x0000000000109713 : add esp, 8 ; cmp rax, -0xfff ; jae 0x10972a ; ret
0x00000000001097d3 : add esp, 8 ; cmp rax, -0xfff ; jae 0x1097ea ; ret
0x000000000010991d : add esp, 8 ; cmp rax, -0xfff ; jae 0x109934 ; ret
0x0000000000109a2d : add esp, 8 ; cmp rax, -0xfff ; jae 0x109a44 ; ret
0x0000000000109abd : add esp, 8 ; cmp rax, -0xfff ; jae 0x109ad4 ; ret
0x0000000000109ca3 : add esp, 8 ; cmp rax, -0xfff ; jae 0x109cba ; ret
0x0000000000109ca3 : add esp, 8 ; cmp rax, -0xfff ; jae 0x109cbe ; ret
0x0000000000109f03 : add esp, 8 ; cmp rax, -0xfff ; jae 0x109f1a ; ret
0x000000000010a553 : add esp, 8 ; cmp rax, -0xfff ; jae 0x10a56a ; ret
0x000000000010a5b3 : add esp, 8 ; cmp rax, -0xfff ; jae 0x10a5ca ; ret
0x00000000000cd29d : add esp, 8 ; cmp rax, -0xfff ; jae 0xcd2b4 ; ret
0x00000000000cd2fd : add esp, 8 ; cmp rax, -0xfff ; jae 0xcd314 ; ret
0x00000000000f6ea3 : add esp, 8 ; cmp rax, -0xfff ; jae 0xf6eba ; ret
0x00000000000f6ea3 : add esp, 8 ; cmp rax, -0xfff ; jae 0xf6ebe ; ret
0x00000000000f6f03 : add esp, 8 ; cmp rax, -0xfff ; jae 0xf6f1a ; ret
0x00000000000f869d : add esp, 8 ; cmp rax, -0xfff ; jae 0xf86b4 ; ret
0x00000000000f88bd : add esp, 8 ; cmp rax, -0xfff ; jae 0xf88d4 ; ret
0x00000000000f891d : add esp, 8 ; cmp rax, -0xfff ; jae 0xf8934 ; ret
0x00000000000f8f4d : add esp, 8 ; cmp rax, -0xfff ; jae 0xf8f64 ; ret
0x00000000000f909d : add esp, 8 ; cmp rax, -0xfff ; jae 0xf90b4 ; ret
0x00000000000fcd9d : add esp, 8 ; cmp rax, -0xfff ; jae 0xfcdb4 ; ret
0x00000000000fd8a3 : add esp, 8 ; cmp rax, -0xfff ; jae 0xfd8ba ; ret
0x00000000000fd8a3 : add esp, 8 ; cmp rax, -0xfff ; jae 0xfd8be ; ret
0x00000000000fe5ed : add esp, 8 ; cmp rax, -0xfff ; jae 0xfe604 ; ret
0x00000000000fe64d : add esp, 8 ; cmp rax, -0xfff ; jae 0xfe664 ; ret
0x00000000000fe6b3 : add esp, 8 ; cmp rax, -0xfff ; jae 0xfe6ca ; ret
0x00000000000fe713 : add esp, 8 ; cmp rax, -0xfff ; jae 0xfe72a ; ret
0x00000000000feb83 : add esp, 8 ; cmp rax, -0xfff ; jae 0xfeb9a ; ret
0x00000000000fed3d : add esp, 8 ; cmp rax, -0xfff ; jae 0xfed54 ; ret
0x00000000000fedcd : add esp, 8 ; cmp rax, -0xfff ; jae 0xfede4 ; ret
0x000000000008fb6d : add esp, 8 ; jmp rax
0x00000000000c8f54 : add esp, 8 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006e6b7 : add esp, 8 ; mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002d6ff : add esp, 8 ; mov rax, r15 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002e12e : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000791f3 : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008fc10 : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000105530 : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000039a57 : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006f4c5 : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000328f4 : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007fe60 : add esp, 8 ; mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000032821 : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8b29 : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000869e9 : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000c04c4 : add esp, 8 ; mov rax, rdx ; ret
0x0000000000071007 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003a450 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000098470 : add esp, 8 ; mov rbp, rdx ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000006f4d9 : add esp, 8 ; mov rbx, r13 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008822f : add esp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000073671 : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000086a8e : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000001597e9 : add esp, dword ptr [rbx + rax + 0x14634900] ; xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000a2de4 : add esp, dword ptr [rsi - 0x75] ; add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rdx + 0x42880241] ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000f561a : add qword ptr [r8], r8 ; add byte ptr [rax - 0x75], cl ; je 0xf5651 ; cmp byte ptr [rax - 0x77], cl ; ret 0x4de9
0x00000000001ae68d : add qword ptr [r8], r8 ; push rax ; lodsb al, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000000dc983 : add qword ptr [r8], rax ; add byte ptr [rax + 0x63], cl ; ret
0x000000000003b2d1 : add qword ptr [r8], rax ; add byte ptr [rax - 0x75], cl ; and al, 8 ; add rsp, 0x18 ; ret
0x00000000001ae46d : add qword ptr [r8], rax ; push rax ; stosb byte ptr [rdi], al ; cmc ; call qword ptr [rax]
0x000000000007991f : add qword ptr [rax + 0xf], rax ; mov dh, 0xc7 ; mov qword ptr [rsi + 0x28], rcx ; mov byte ptr [rdx], dil ; ret
0x00000000000627e2 : add qword ptr [rax - 0x77], rcx ; lea esi, dword ptr [rax - 0x77000005] ; add cl, byte ptr [rax - 0x7d] ; ret
0x0000000000072853 : add qword ptr [rax - 0x77], rcx ; sub byte ptr [rax - 0x78], al ; cmp al, byte ptr [rax + 0xf] ; mov dh, 0xc7 ; ret
0x000000000011f8f0 : add qword ptr [rax], r12 ; je 0x11f8e0 ; pop rbx ; xor eax, eax ; mov byte ptr [rdx], 0 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011f8ef : add qword ptr [rax], r12 ; je 0x11f8e1 ; pop rbx ; xor eax, eax ; mov byte ptr [rdx], 0 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001969fd : add qword ptr [rax], r8 ; adc al, 0xaa ; push qword ptr [rsp + rcx*2 - 0x54fbffff] ; jmp rsp
0x0000000000196a05 : add qword ptr [rax], r8 ; add al, 0xab ; jmp rsp
0x00000000001ae765 : add qword ptr [rax], r8 ; pop rax ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae56d : add qword ptr [rax], r8 ; push rax ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x0000000000196a4d : add qword ptr [rax], r8 ; push rsp ; loope 0x196a4c ; call rsp
0x00000000001ae5e5 : add qword ptr [rax], r8 ; test al, 0xab ; cmc ; jmp qword ptr [rcx]
0x0000000000196985 : add qword ptr [rax], rax ; add al, 0xa0 ; jmp rsp
0x00000000000e4d7d : add qword ptr [rax], rax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000053be3 : add qword ptr [rax], rax ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ddc74 : add qword ptr [rax], rax ; add dh, dh ; ret
0x00000000001ae3f5 : add qword ptr [rax], rax ; call 0x221ad9ac
0x00000000001ae1a5 : add qword ptr [rax], rax ; js 0x1ae143 ; cmc ; jmp qword ptr [rcx]
0x00000000001ae1a4 : add qword ptr [rax], rax ; js 0x1ae144 ; cmc ; jmp qword ptr [rcx]
0x0000000000079282 : add qword ptr [rbx + 0x18], rbp ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001106dd : add qword ptr [rbx + 0x38], rbp ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d6d66 : add qword ptr [rbx - 0x7cb7fe3b], rax ; ret
0x0000000000165d5d : add qword ptr [rdi], rcx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x000000000016a0fd : add qword ptr [rdi], rcx ; test ebx, edi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x0000000000126605 : add r10, 2 ; mov qword ptr [rax], r10 ; lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x000000000004888c : add r10, rax ; mov qword ptr [rdi + 8], r10 ; mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000000bdc53 : add r11b, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000098520 : add r12, rax ; jne 0x98519 ; mov qword ptr [rbp], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bc64e : add r12, rax ; mov qword ptr [rsp + 0xa8], r12 ; call r15
0x000000000014cfb0 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000e9213 : add r8, qword ptr [r8] ; add byte ptr [rcx - 0x75], cl ; push rsi ; adc byte ptr [rcx - 0x75], cl ; or byte ptr [rax + 0x63], r9b ; ret
0x0000000000149444 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000a0984 : add r8b, byte ptr [r8] ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a08f4 : add r8b, byte ptr [r8] ; mov rax, rdi ; ret
0x0000000000083902 : add r8b, byte ptr [rax] ; add al, ch ; ret 0xffff
0x00000000001991ad : add r8b, byte ptr [rax] ; xchg eax, esp ; mov cl, 0xfa ; call rsp
0x00000000000a769b : add r8b, r11b ; nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a0989 : add r8b, r11b ; nop dword ptr [rax] ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a0839 : add r8d, r11d ; nop dword ptr [rax] ; mov eax, dword ptr [rsp + 0x10] ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000146738 : add r9, qword ptr [rbp - 0x88] ; call rax
0x00000000000a08a4 : add r9, rax ; jmp r9
0x000000000011f946 : add r9b, byte ptr [r8 - 0x77] ; fucompi st(0) ; add byte ptr [rbp - 0xd], ch ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x0000000000118357 : add r9b, byte ptr [rcx + r9*4 - 0x2f] ; test r8b, r8b ; mov byte ptr [r9 + 3], r8b ; jne 0x118309 ; mov rax, rdi ; ret
0x0000000000126a68 : add r9d, r8d ; loopne 0x126a7b ; cdqe ; shr rax, 4 ; ret
0x0000000000150162 : add rax, -0x7cb80000 ; ret 0xe910
0x000000000003cea6 : add rax, -0x7f2fae73 ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000165de3 : add rax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00000000000c517c : add rax, 0x2e ; mov rdx, r14 ; mov rsi, qword ptr [rdi + rax*8] ; mov rdi, rbp ; call 0x913c0
0x000000000019959c : add rax, 0x34a40002 ; sti ; call rsp
0x000000000016a194 : add rax, 0x364850f ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000116666 : add rax, 0x48 ; cmp rax, rdx ; jb 0x11666b ; xor eax, eax ; ret
0x000000000013ac15 : add rax, 0xa0 ; add rsp, 8 ; ret
0x000000000013ac45 : add rax, 0xa8 ; add rsp, 8 ; ret
0x0000000000047490 : add rax, 1 ; cmp byte ptr [rax + 1], 0 ; jne 0x4749c ; pop rbx ; ret
0x00000000000a06a0 : add rax, 1 ; cmp byte ptr [rdi + rax], dl ; je 0xa06aa ; ret
0x0000000000048190 : add rax, 1 ; cmp edx, eax ; jg 0x48161 ; ret
0x00000000000484e8 : add rax, 1 ; cmp rax, rdx ; jne 0x484eb ; xor eax, eax ; ret
0x000000000009671e : add rax, 1 ; mov qword ptr [rbx], rax ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000ac6d8 : add rax, 1 ; mov r8d, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0xac6be ; ret
0x00000000000a06c0 : add rax, 1 ; movsx ecx, byte ptr [rdi + rax] ; cmp ecx, edx ; je 0xa06d1 ; cmp ecx, esi ; je 0xa06d1 ; ret
0x00000000000a0610 : add rax, 1 ; movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0xa0615 ; ret
0x00000000000a05cc : add rax, 1 ; movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0xa05d5 ; ret
0x00000000000a0668 : add rax, 1 ; movsx r8d, byte ptr [rdi + rax] ; test r8b, r8b ; jne 0xa065f ; ret
0x00000000000ac000 : add rax, 1 ; ret
0x0000000000098cc5 : add rax, 1 ; sub rsi, 1 ; jne 0x98ccc ; xor eax, eax ; ret
0x0000000000098d28 : add rax, 1 ; test dl, dl ; mov edx, 0 ; cmove rax, rdx ; ret
0x00000000000abff7 : add rax, 2 ; ret
0x00000000000ac010 : add rax, 3 ; ret
0x00000000000adb60 : add rax, 4 ; mov edx, dword ptr [rax] ; cmp edx, esi ; je 0xadb7d ; test edx, edx ; jne 0xadb6f ; ret
0x00000000000ac72d : add rax, 4 ; mov qword ptr [r12], rax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000131a15 : add rax, 4 ; mov qword ptr [rbx + 0x20], rax ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000ac9fb : add rax, 4 ; test edx, edx ; mov dword ptr [rax], edx ; jne 0xaca03 ; ret
0x00000000000868ce : add rax, 8 ; cmp rdx, rax ; ja 0x868d4 ; xor eax, eax ; ret
0x00000000000207a8 : add rax, qword ptr [0] ; ret
0x000000000007ef19 : add rax, qword ptr [rbp + 0x10] ; mov qword ptr [rbp + 8], rax ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000007eee8 : add rax, qword ptr [rbp + 0x18] ; mov qword ptr [rbp + 8], rax ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000801b8 : add rax, qword ptr [rbp] ; cmp r14, rax ; jne 0x8019b ; mov rdi, r12 ; neg rdi ; call qword ptr [r15]
0x000000000003417f : add rax, qword ptr [rdi + 0x20] ; ret
0x0000000000146a49 : add rax, qword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x000000000014636d : add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x00000000000207a7 : add rax, qword ptr fs:[0] ; ret
0x00000000000a07ef : add rax, r10 ; jmp rax
0x0000000000097d3f : add rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002eb43 : add rax, r14 ; jmp rax
0x00000000000c396b : add rax, r8 ; jmp rax
0x00000000000a0d67 : add rax, r8 ; ret
0x000000000003d180 : add rax, rax ; sub rdx, rax ; jmp 0x3d1c1
0x00000000000403ca : add rax, rax ; sub rdx, rax ; jmp 0x4040b
0x00000000001181a6 : add rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004bb1e : add rax, rcx ; jmp rax
0x000000000005a65f : add rax, rcx ; mov dword ptr [rbp - 0x1080], 1 ; jmp rax
0x0000000000059c08 : add rax, rcx ; mov dword ptr [rbp - 0x1088], 1 ; jmp rax
0x000000000005a9e1 : add rax, rcx ; mov dword ptr [rbp - 0x10a8], 1 ; jmp rax
0x000000000005a92a : add rax, rcx ; mov dword ptr [rbp - 0x10b0], 1 ; jmp rax
0x000000000005aa33 : add rax, rcx ; mov dword ptr [rbp - 0x10b8], 1 ; jmp rax
0x000000000004e1fd : add rax, rcx ; mov dword ptr [rbp - 0x4a8], 1 ; jmp rax
0x000000000004e857 : add rax, rcx ; mov dword ptr [rbp - 0x4f8], 1 ; jmp rax
0x000000000004ef83 : add rax, rcx ; mov dword ptr [rbp - 0x508], 1 ; jmp rax
0x000000000004f0a6 : add rax, rcx ; mov dword ptr [rbp - 0x510], 1 ; jmp rax
0x000000000004efdf : add rax, rcx ; mov dword ptr [rbp - 0x518], 1 ; jmp rax
0x000000000005a709 : add rax, rcx ; mov edx, 1 ; jmp rax
0x000000000004ee03 : add rax, rcx ; mov edx, 1 ; mov r8d, 1 ; jmp rax
0x0000000000090ba9 : add rax, rcx ; ret
0x000000000004dd78 : add rax, rcx ; xor r8d, r8d ; mov edx, 1 ; jmp rax
0x00000000000a0d64 : add rax, rdi ; add rax, r8 ; ret
0x0000000000090ba6 : add rax, rdi ; add rax, rcx ; ret
0x00000000000c5a6e : add rax, rdi ; jmp rax
0x000000000008f76a : add rax, rdi ; ret
0x000000000014d38a : add rax, rdi ; sub rax, r8 ; ret
0x000000000014d5df : add rax, rdi ; sub rax, rdx ; ret
0x0000000000020c40 : add rax, rdx ; jmp rax
0x000000000008dbc5 : add rax, rdx ; sub rax, rdi ; ret
0x00000000000c0742 : add rax, rsi ; jmp rax
0x00000000000d14cd : add rbx, 1 ; mov rdx, rax ; jmp 0xd1476
0x000000000009829c : add rbx, rax ; jne 0x98294 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000423a0 : add rbx, rax ; movsx rax, byte ptr [rbx] ; jmp 0x4219d
0x0000000000098dc5 : add rcx, 1 ; sub rax, 1 ; jne 0x98dcc ; pop rbx ; pop rbp ; ret
0x0000000000098c05 : add rcx, 1 ; sub rsi, 1 ; jne 0x98c0f ; xor edi, edi ; mov rax, rdi ; ret
0x000000000016a146 : add rcx, qword ptr [rdi] ; test dword ptr [rdx - 0x7ffffffd], esi ; cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x000000000014d44b : add rdi, 0x10 ; sub edx, eax ; cmp edx, ecx ; jle 0x14d379 ; movsxd rax, ecx ; ret
0x000000000004b514 : add rdx, r13 ; call qword ptr [r10 + rax*8]
0x0000000000049501 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000010a4a0 : add rdx, rax ; cmp rcx, rdx ; mov edx, 0 ; cmovb rax, rdx ; ret
0x00000000000a0c67 : add rdx, rax ; jl 0xa0cd8 ; add rax, rdi ; ret
0x00000000000a0c66 : add rdx, rax ; jl 0xa0cd9 ; add rax, rdi ; ret
0x00000000000a0c77 : add rdx, rax ; jl 0xa0cda ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000000a0c97 : add rdx, rax ; jl 0xa0cda ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00000000000a0cb7 : add rdx, rax ; jl 0xa0cda ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000bbc74 : add rdx, rcx ; mov rax, rdx ; add rsp, 0x18 ; ret
0x0000000000130e96 : add rsi, rax ; cmp rsi, qword ptr [rdx + 0x28] ; ja 0x130e95 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000013e6c2 : add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x0000000000102ef3 : add rsp, 0x10 ; lea rax, qword ptr [rip + 0x2c12f2] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000be354 : add rsp, 0x10 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002a5ef : add rsp, 0x10 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008879b : add rsp, 0x10 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000088e48 : add rsp, 0x10 ; mov rsi, r12 ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000000888b8 : add rsp, 0x10 ; mov rsi, r12 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000007d380 : add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000000be4e0 : add rsp, 0x10 ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002a692 : add rsp, 0x10 ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008d64c : add rsp, 0x100 ; sub rax, rdx ; ret
0x000000000008fabc : add rsp, 0x100 ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x00000000000f9876 : add rsp, 0x1000 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006bb68 : add rsp, 0x1008 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000097d3b : add rsp, 0x18 ; add rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001196e7 : add rsp, 0x18 ; div rbp ; mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000006d4c8 : add rsp, 0x18 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000037538 : add rsp, 0x18 ; mov rax, r15 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008a4fd : add rsp, 0x18 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000079bf5 : add rsp, 0x18 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003c24c : add rsp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000a0f15 : add rsp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001196ba : add rsp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000002e732 : add rsp, 0x18 ; mov rax, rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008040f : add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000070bb0 : add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000006d558 : add rsp, 0x18 ; pop rbx ; mov rax, r12 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007ad9a : add rsp, 0x18 ; pop rbx ; pop rbp ; sub rax, r12 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007d9f5 : add rsp, 0x18 ; pop rbx ; pop rbp ; sub rax, r14 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007dba9 : add rsp, 0x18 ; pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000080450 : add rsp, 0x18 ; xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000007de6c : add rsp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x000000000008b0b2 : add rsp, 0x20 ; mov rax, r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013bca9 : add rsp, 0x20 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013c950 : add rsp, 0x20 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006f1f5 : add rsp, 0x20 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007da4c : add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000007dea5 : add rsp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x00000000000bbadb : add rsp, 0x20 ; test eax, eax ; js 0xbbb29 ; cmp eax, 0x19 ; jg 0xbbb11 ; mov rax, rbx ; pop rbx ; ret
0x000000000002074d : add rsp, 0x28 ; jmp rax
0x000000000008ad41 : add rsp, 0x28 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008b213 : add rsp, 0x28 ; mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e7363 : add rsp, 0x28 ; mov rax, r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e7620 : add rsp, 0x28 ; mov rax, r15 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006fbfc : add rsp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006bbe5 : add rsp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000104578 : add rsp, 0x28 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003b820 : add rsp, 0x28 ; neg rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e1e65 : add rsp, 0x28 ; pop rbx ; pop rbp ; mov rax, rcx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000073bbc : add rsp, 0x28 ; pop rbx ; pop rbp ; sub rax, r12 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000073d34 : add rsp, 0x28 ; pop rbx ; pop rbp ; sub rax, r14 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012e0a4 : add rsp, 0x30 ; lea rax, qword ptr [rip + 0x297c91] ; pop rbx ; ret
0x000000000012e06c : add rsp, 0x30 ; lea rax, qword ptr [rip + 0x297cc9] ; pop rbx ; ret
0x000000000012dfad : add rsp, 0x30 ; lea rax, qword ptr [rip + 0x297d88] ; pop rbx ; ret
0x000000000008926d : add rsp, 0x30 ; mov rax, r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fc13b : add rsp, 0x38 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000086feb : add rsp, 0x38 ; mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000111113 : add rsp, 0x38 ; mov rax, r15 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000306a7 : add rsp, 0x48 ; mov rax, r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000085b82 : add rsp, 0x48 ; mov rax, r15 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000032e49 : add rsp, 0x48 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001433ca : add rsp, 0x510 ; mov rax, rbx ; pop rbx ; ret
0x00000000000ddcf9 : add rsp, 0x58 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000722e0 : add rsp, 0x58 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000090428 : add rsp, 0x58 ; mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ad159 : add rsp, 0x60 ; mov rax, -1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e949 : add rsp, 0x60 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fe08a : add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000fe0da : add rsp, 0x60 ; mov rbx, rax ; mov rax, rbx ; pop rbx ; ret
0x00000000000ad1e5 : add rsp, 0x60 ; pop rbx ; pop rbp ; sub rax, r12 ; pop r12 ; ret
0x00000000000ea37d : add rsp, 0x68 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000135529 : add rsp, 0x78 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003a448 : add rsp, 0x80 ; add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000143b1c : add rsp, 0x80 ; mov rax, qword ptr [rip + 0x27e8c6] ; call qword ptr [rax]
0x00000000001434ef : add rsp, 0x80 ; mov rax, qword ptr [rip + 0x27eef3] ; call qword ptr [rax]
0x0000000000135ff0 : add rsp, 0x80 ; mov rax, qword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000808f5 : add rsp, 0x80 ; mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007011f : add rsp, 0x80 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003ad17 : add rsp, 0x80 ; mov rax, rbx ; pop rbx ; ret
0x0000000000143c95 : add rsp, 0x80 ; mov rax, rdx ; add rsp, 8 ; ret
0x000000000003adb3 : add rsp, 0x80 ; movsxd rax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x000000000006edf4 : add rsp, 0x80 ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x000000000011fb19 : add rsp, 0x90 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c86c6 : add rsp, 0x98 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000011066c : add rsp, 0xd8 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001181a2 : add rsp, 8 ; add rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000102d0c : add rsp, 8 ; cmp rax, -0xfff ; jae 0x102d25 ; ret
0x0000000000109382 : add rsp, 8 ; cmp rax, -0xfff ; jae 0x10939b ; ret
0x0000000000109682 : add rsp, 8 ; cmp rax, -0xfff ; jae 0x10969b ; ret
0x0000000000109712 : add rsp, 8 ; cmp rax, -0xfff ; jae 0x10972b ; ret
0x00000000001097d2 : add rsp, 8 ; cmp rax, -0xfff ; jae 0x1097eb ; ret
0x000000000010991c : add rsp, 8 ; cmp rax, -0xfff ; jae 0x109935 ; ret
0x0000000000109a2c : add rsp, 8 ; cmp rax, -0xfff ; jae 0x109a45 ; ret
0x0000000000109abc : add rsp, 8 ; cmp rax, -0xfff ; jae 0x109ad5 ; ret
0x0000000000109ca2 : add rsp, 8 ; cmp rax, -0xfff ; jae 0x109cbb ; ret
0x0000000000109ca2 : add rsp, 8 ; cmp rax, -0xfff ; jae 0x109cbf ; ret
0x0000000000109f02 : add rsp, 8 ; cmp rax, -0xfff ; jae 0x109f1b ; ret
0x000000000010a552 : add rsp, 8 ; cmp rax, -0xfff ; jae 0x10a56b ; ret
0x000000000010a5b2 : add rsp, 8 ; cmp rax, -0xfff ; jae 0x10a5cb ; ret
0x00000000000cd29c : add rsp, 8 ; cmp rax, -0xfff ; jae 0xcd2b5 ; ret
0x00000000000cd2fc : add rsp, 8 ; cmp rax, -0xfff ; jae 0xcd315 ; ret
0x00000000000f6ea2 : add rsp, 8 ; cmp rax, -0xfff ; jae 0xf6ebb ; ret
0x00000000000f6ea2 : add rsp, 8 ; cmp rax, -0xfff ; jae 0xf6ebf ; ret
0x00000000000f6f02 : add rsp, 8 ; cmp rax, -0xfff ; jae 0xf6f1b ; ret
0x00000000000f869c : add rsp, 8 ; cmp rax, -0xfff ; jae 0xf86b5 ; ret
0x00000000000f88bc : add rsp, 8 ; cmp rax, -0xfff ; jae 0xf88d5 ; ret
0x00000000000f891c : add rsp, 8 ; cmp rax, -0xfff ; jae 0xf8935 ; ret
0x00000000000f8f4c : add rsp, 8 ; cmp rax, -0xfff ; jae 0xf8f65 ; ret
0x00000000000f909c : add rsp, 8 ; cmp rax, -0xfff ; jae 0xf90b5 ; ret
0x00000000000fcd9c : add rsp, 8 ; cmp rax, -0xfff ; jae 0xfcdb5 ; ret
0x00000000000fd8a2 : add rsp, 8 ; cmp rax, -0xfff ; jae 0xfd8bb ; ret
0x00000000000fd8a2 : add rsp, 8 ; cmp rax, -0xfff ; jae 0xfd8bf ; ret
0x00000000000fe5ec : add rsp, 8 ; cmp rax, -0xfff ; jae 0xfe605 ; ret
0x00000000000fe64c : add rsp, 8 ; cmp rax, -0xfff ; jae 0xfe665 ; ret
0x00000000000fe6b2 : add rsp, 8 ; cmp rax, -0xfff ; jae 0xfe6cb ; ret
0x00000000000fe712 : add rsp, 8 ; cmp rax, -0xfff ; jae 0xfe72b ; ret
0x00000000000feb82 : add rsp, 8 ; cmp rax, -0xfff ; jae 0xfeb9b ; ret
0x00000000000fed3c : add rsp, 8 ; cmp rax, -0xfff ; jae 0xfed55 ; ret
0x00000000000fedcc : add rsp, 8 ; cmp rax, -0xfff ; jae 0xfede5 ; ret
0x000000000008fb6c : add rsp, 8 ; jmp rax
0x00000000000c8f53 : add rsp, 8 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006e6b6 : add rsp, 8 ; mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002d6fe : add rsp, 8 ; mov rax, r15 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002e12d : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000791f2 : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008fc0f : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000010552f : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000039a56 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006f4c4 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000328f3 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007fe5f : add rsp, 8 ; mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000032820 : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8b28 : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000869e8 : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000c04c3 : add rsp, 8 ; mov rax, rdx ; ret
0x0000000000071006 : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003a44f : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000009846f : add rsp, 8 ; mov rbp, rdx ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000006f4d8 : add rsp, 8 ; mov rbx, r13 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008822e : add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000073670 : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000086a8d : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000010b373 : add word ptr [rax], 1 ; ret
0x000000000010b0ea : add word ptr [rdx + rax*2], 1 ; ret
0x000000000019369d : and ah, bh ; jmp qword ptr [rax]
0x00000000001936bd : and ah, bh ; push rax ; and esp, edi ; call rax
0x0000000000027b8a : and ah, byte ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0xc8e9
0x000000000007b7ce : and al, 0 ; add byte ptr [rax - 0x77], cl ; scasd eax, dword ptr [rdi] ; nop ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000000a3611 : and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x000000000013e8b7 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rbx + 0x48082444], cl ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009841d : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000053e93 : and al, 0 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000001b5a50 : and al, 0 ; add byte ptr [rax], al ; cld ; rol byte ptr [rcx], 0 ; pop rax ; ret 0xfff7
0x00000000001b35f8 : and al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pushfq ; add dword ptr [rax], eax ; xor byte ptr [rcx], 0xf7 ; jmp qword ptr [rsi]
0x00000000001a2b60 : and al, 0 ; add byte ptr [rax], al ; or al, 0x92 ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; std ; jmp rdi
0x00000000000bfc71 : and al, 0 ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xbfc8e ; ret
0x0000000000172099 : and al, 0 ; mov qword ptr [r12], rbx ; mov rdx, qword ptr [rax + rbp*8] ; test rdx, rdx ; je 0x1720b9 ; call rdx
0x000000000012fbda : and al, 0 ; sub al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; or al, 0x24 ; call rcx
0x00000000000e2f41 : and al, 0x10 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000105563 : and al, 0x10 ; add byte ptr [rdi], cl ; test dword ptr [rsi - 0x41000006], esi ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000084183 : and al, 0x10 ; call qword ptr [rax]
0x0000000000145d20 : and al, 0x10 ; call rax
0x00000000001372eb : and al, 0x10 ; lea rdx, qword ptr [rip + 0x52d8c] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000a0852 : and al, 0x10 ; mov byte ptr [rdi + 4], cl ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a0842 : and al, 0x10 ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a07fa : and al, 0x10 ; mov dword ptr [rdi], eax ; mov eax, dword ptr [rsp + 0x18] ; mov dword ptr [rdi + 4], eax ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000110a02 : and al, 0x10 ; mov edi, 0x2000004 ; call rax
0x0000000000104321 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000010bd1b : and al, 0x10 ; mov rcx, qword ptr [rsp + 8] ; mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000010bd7c : and al, 0x10 ; mov rcx, qword ptr [rsp + 8] ; mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x000000000007da78 : and al, 0x10 ; mov rdi, qword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000007de9e : and al, 0x10 ; mov rdi, qword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x00000000001108fe : and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000000a0872 : and al, 0x10 ; mov word ptr [rdi + 4], r11w ; mov byte ptr [rdi + 6], r8b ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a0862 : and al, 0x10 ; mov word ptr [rdi + 4], r11w ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000c9c25 : and al, 0x10 ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x000000000004540a : and al, 0x10 ; xor esi, esi ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x000000000008197c : and al, 0x14 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; mov dword ptr [r12 + 0x10], eax ; pop r12 ; ret
0x000000000003b969 : and al, 0x14 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add r13, 1 ; jmp 0x3b715
0x000000000003b968 : and al, 0x14 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add r13, 1 ; jmp 0x3b716
0x00000000000203e5 : and al, 0x14 ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000001462d3 : and al, 0x18 ; add byte ptr [rax - 0x75], cl ; and al, 0x38 ; jne 0x1462c6 ; add rsp, 0x48 ; ret
0x0000000000023ca0 : and al, 0x18 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f1393 : and al, 0x18 ; add dword ptr [rax - 0x75], ecx ; and al, 0x18 ; mov rdx, rax ; jmp 0xf13dd
0x000000000008822c : and al, 0x18 ; add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000086a8b : and al, 0x18 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000012f19d : and al, 0x18 ; call qword ptr [rax]
0x00000000000203ed : and al, 0x18 ; call rax
0x0000000000081952 : and al, 0x18 ; cmp rbx, rax ; je 0x81969 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000081951 : and al, 0x18 ; cmp rbx, rax ; je 0x8196a ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013a730 : and al, 0x18 ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x0000000000083f41 : and al, 0x18 ; mov byte ptr [rsp + 0x28], r11b ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x00000000000a0800 : and al, 0x18 ; mov dword ptr [rdi + 4], eax ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000145d13 : and al, 0x18 ; mov esi, 0x40 ; mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000013a4b3 : and al, 0x18 ; mov r8, r15 ; mov rcx, r14 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000131b8b : and al, 0x18 ; mov rcx, qword ptr [rsp + 8] ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000106d40 : and al, 0x18 ; mov rdx, rax ; jmp 0x106d93
0x0000000000106d3f : and al, 0x18 ; mov rdx, rax ; jmp 0x106d94
0x00000000000f1399 : and al, 0x18 ; mov rdx, rax ; jmp 0xf13d7
0x00000000000f1398 : and al, 0x18 ; mov rdx, rax ; jmp 0xf13d8
0x000000000007da73 : and al, 0x18 ; mov rsi, qword ptr [rsp + 0x10] ; mov rdi, qword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x00000000000bb416 : and al, 0x18 ; xor r8d, r8d ; mov rcx, r13 ; lea r9, qword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x000000000003be19 : and al, 0x1c ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add r13, 1 ; jmp 0x3bc25
0x000000000003be18 : and al, 0x1c ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add r13, 1 ; jmp 0x3bc26
0x000000000012eefb : and al, 0x1c ; call qword ptr [rax]
0x00000000001ab67c : and al, 0x1d ; add dword ptr [rax], eax ; and bl, cl ; hlt ; jmp qword ptr [rsi]
0x0000000000199480 : and al, 0x1f ; sti ; ljmp ptr [rax + rbx*2 + 0x1fd40002] ; sti ; call rsp
0x0000000000000975 : and al, 0x20 ; add byte ptr [rax], al ; ret
0x000000000010e728 : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000e693f : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000083f4b : and al, 0x20 ; call qword ptr [rax]
0x0000000000025848 : and al, 0x20 ; call rax
0x00000000000a07e2 : and al, 0x20 ; lea r10, qword ptr [rip + 0xe55ed] ; movsxd rax, dword ptr [r10 + rax*4] ; add rax, r10 ; jmp rax
0x00000000000acd91 : and al, 0x20 ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000c984f : and al, 0x20 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000039274 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x00000000000707e1 : and al, 0x20 ; xor esi, esi ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000ccaa6 : and al, 0x28 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e4c5a : and al, 0x28 ; add rax, rdx ; jmp rax
0x00000000000acc5f : and al, 0x28 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000083f46 : and al, 0x28 ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x00000000000cd384 : and al, 0x28 ; mov r15, rax ; mov rax, qword ptr [r12 + 8] ; test rax, rax ; je 0xcd3a4 ; call rax
0x00000000000cd383 : and al, 0x28 ; mov r15, rax ; mov rax, qword ptr [r12 + 8] ; test rax, rax ; je 0xcd3a5 ; call rax
0x0000000000078404 : and al, 0x28 ; mov rax, r13 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c984a : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000877f3 : and al, 0x28 ; mov rdi, r12 ; call rax
0x000000000013a974 : and al, 0x2a ; call qword ptr [rax]
0x00000000000f767b : and al, 0x2c ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000ad1e3 : and al, 0x30 ; add rsp, 0x60 ; pop rbx ; pop rbp ; sub rax, r12 ; pop r12 ; ret
0x000000000012f63d : and al, 0x30 ; call qword ptr [rax]
0x0000000000039279 : and al, 0x30 ; lea r15, qword ptr [rbx + r14] ; call rax
0x00000000000f4bc4 : and al, 0x30 ; lea rdx, qword ptr [rip + 0x93c9b] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000f36c4 : and al, 0x30 ; lea rdx, qword ptr [rip + 0x94f5b] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000bb421 : and al, 0x30 ; mov rdi, qword ptr [rax] ; call r14
0x00000000000e4c4e : and al, 0x30 ; movsxd rax, dword ptr [rdx + rax*4] ; mov rbp, rsi ; mov qword ptr [rsp + 0x28], rdi ; add rax, rdx ; jmp rax
0x00000000001aca7c : and al, 0x31 ; add dword ptr [rax], eax ; loopne 0x1acaab ; cmc ; jmp qword ptr [rcx]
0x00000000000fe32b : and al, 0x31 ; ror byte ptr [rax - 0x7f], 0xc4 ; cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000197fe0 : and al, 0x33 ; clc ; lcall ptr [rax + rcx*8 + 0x33b40001] ; clc ; jmp rsp
0x000000000014636b : and al, 0x38 ; add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000136b8f : and al, 0x38 ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x136bad ; mov rdi, rbp ; call rax
0x0000000000136b8e : and al, 0x38 ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x136bae ; mov rdi, rbp ; call rax
0x0000000000026682 : and al, 0x38 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000306cb : and al, 0x39 ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x000000000013a735 : and al, 0x3a ; call qword ptr [rax]
0x0000000000047bcb : and al, 0x3c ; call rax
0x000000000012162d : and al, 0x40 ; add dword ptr [rax], eax ; add al, ch ; stc ; ret
0x0000000000025843 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000012a181 : and al, 0x40 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002667d : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000260d6 : and al, 0x48 ; add byte ptr [rdi], cl ; test byte ptr [rdx], ah ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf08
0x000000000007d3a8 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; jmp rax
0x0000000000086e03 : and al, 0x48 ; call rax
0x000000000014616d : and al, 0x48 ; mov eax, dword ptr [rax + 0x128] ; jmp rax
0x000000000007a355 : and al, 0x48 ; mov edi, ebx ; call rax
0x000000000017209e : and al, 0x48 ; mov edx, dword ptr [rax + rbp*8] ; test rdx, rdx ; je 0x1720b4 ; call rdx
0x000000000013699e : and al, 0x48 ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x1369bc ; mov rdi, r12 ; call rax
0x000000000013699d : and al, 0x48 ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x1369bd ; mov rdi, r12 ; call rax
0x000000000002583e : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000026678 : and al, 0x48 ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000f175f : and al, 0x49 ; add dword ptr [rax], 1 ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000037639 : and al, 0x4a ; lea ebx, dword ptr [rax + rsi] ; nop ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x00000000000acc5b : and al, 0x4c ; lea ecx, dword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000025839 : and al, 0x50 ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000013ad1a : and al, 0x66 ; mov dword ptr [rax + rdx*8 - 4], ecx ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000087163 : and al, 0x68 ; call rax
0x000000000008847b : and al, 0x68 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000146676 : and al, 0x70 ; add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000000f70cd : and al, 0x74 ; xor byte ptr [rax + 0x63], cl ; ret 0xc283
0x00000000001a137c : and al, 0x7a ; add byte ptr [rax], al ; and byte ptr [rdx - 0x13], bh ; jmp qword ptr [rbx]
0x000000000004423a : and al, 0x80 ; add byte ptr [rax], al ; add al, ch ; in al, dx ; fdivp st(7) ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e663c : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x634c
0x00000000000f4654 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000098793 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000041a08 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rbx - 0x76b2dbf4], cl ; ret
0x00000000000d5e8e : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8b48
0x00000000000b5983 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov gs, word ptr [rbx - 0x7cfffff8] ; ret
0x000000000013ebe8 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; ror byte ptr [rdi], 0x11 ; and al, 0x28 ; call rdx
0x00000000000b73db : and al, 0x84 ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor al, 0x83 ; sub r10, rax ; jmp 0xb740d
0x00000000000d634a : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000136dac : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x00000000000e2f39 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xchg eax, esp ; and al, 0x10 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b59d7 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x0000000000054141 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000e0e24 : and al, 0x8c ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b49
0x0000000000046a8a : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x8b44
0x0000000000023ae4 : and al, 0x90 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000001a297c : and al, 0x90 ; add byte ptr [rax], al ; ror dl, 1 ; in eax, dx ; call rdi
0x00000000001a2a7c : and al, 0x91 ; add byte ptr [rax], al ; loopne 0x1a2a55 ; in eax, dx ; call qword ptr [rdx]
0x00000000000e7922 : and al, 0x94 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x000000000002986d : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000000dc244 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x0000000000122518 : and al, 0x98 ; add byte ptr [rax], al ; test rax, rax ; je 0x122532 ; mov rdi, rbx ; call rax
0x00000000000e1fd0 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; adc dh, byte ptr [rax - 0x76b70001] ; ret 0x848b
0x0000000000056b9e : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x2c], cl ; test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000e7885 : and al, 0xa4 ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x0000000000132bb8 : and al, 0xa7 ; add byte ptr [rax], al ; test eax, eax ; jne 0x132be0 ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bc19a : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; je 0xbc1d7 ; cmp byte ptr [rax - 0x75], cl ; jl 0xbc1dc ; call r15
0x00000000000bc68d : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; je 0xbc6ca ; cmp byte ptr [rax - 0x75], cl ; jl 0xbc6cf ; call r15
0x00000000000dc0d1 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7fead], cl ; ret
0x0000000000047123 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 - 0x64], cl ; and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x8b4c
0x00000000000b6c2c : and al, 0xac ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000004712b : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x8b4c
0x00000000000bc3b5 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x00000000000b6a05 : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001321b0 : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x000000000013792f : and al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x000000000011f6b8 : and al, 0xb9 ; add byte ptr [rax + rax], al ; add byte ptr [rcx + rcx*4 - 6], cl ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000001a547c : and al, 0xbb ; add byte ptr [rax], al ; xor bh, bl ; cld ; call qword ptr [rax]
0x000000000007d3a3 : and al, 0xc ; mov rdi, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000000e787d : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x5c], al ; and al, 0xa4 ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x0000000000053ca6 : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000027bfc : and al, 0xc0 ; add byte ptr [rax], al ; add dh, dh ; ret
0x000000000012d693 : and al, 0xc7 ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; add bh, al ; adc al, 0x10 ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000012f62e : and al, 0xc8 ; add byte ptr [rax], al ; add bh, bh ; mov ah, 0x24 ; enter 0, 0 ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x000000000012f635 : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call qword ptr [rax]
0x00000000000e7873 : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x0000000000108cea : and al, 0xd0 ; syscall ; cmp rax, -0x1000 ; ja 0x108d0d ; ret
0x0000000000108ce9 : and al, 0xd0 ; syscall ; cmp rax, -0x1000 ; ja 0x108d0e ; ret
0x0000000000070242 : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000001b777c : and al, 0xde ; add dword ptr [rax], eax ; nop ; clc ; call qword ptr [rdx]
0x0000000000072cc8 : and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000003531e : and al, 0xe8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x00000000000352fc : and al, 0xe8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000549c5 : and al, 0xe8 ; jne 0x54959 ; add al, byte ptr [rax] ; jmp 0x54997
0x000000000004a694 : and al, 0xe8 ; shr rax, 0x20 ; mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x000000000008aead : and al, 0xf ; test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000008a18b : and al, 0xf ; test dh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x00000000000bc2ae : and al, 0xf0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000186295 : and al, 0xf2 ; call qword ptr [rax]
0x000000000018628d : and al, 0xf2 ; call rax
0x0000000000186289 : and al, 0xf2 ; push qword ptr [rax - 0x2f000ddc] ; and al, 0xf2 ; push rax ; and al, 0xf2 ; call qword ptr [rax]
0x0000000000186291 : and al, 0xf2 ; push rax ; and al, 0xf2 ; call qword ptr [rax]
0x0000000000193749 : and al, 0xfc ; call rax
0x00000000000f8fd1 : and al, 1 ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf8fee ; ret
0x00000000001963fd : and al, 1 ; add byte ptr [rbx + rsi*8 + 0x24bcfff1], ah ; add dword ptr [rax], eax ; mov ah, 0xf3 ; int1 ; call rsp
0x00000000001bca08 : and al, 4 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x0000000000106963 : and al, 4 ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000a6a48 : and al, 7 ; add byte ptr [rax], al ; ret
0x00000000000e0b23 : and al, 8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007da7d : and al, 8 ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000007dea3 : and al, 8 ; add rsp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000130d57 : and al, 8 ; call qword ptr [rax]
0x0000000000110903 : and al, 8 ; call rax
0x00000000000798bc : and al, 8 ; cmp qword ptr [rax + 0x30], 0 ; je 0x798d7 ; add rsp, 0x38 ; ret
0x00000000000798bb : and al, 8 ; cmp qword ptr [rax + 0x30], 0 ; je 0x798d8 ; add rsp, 0x38 ; ret
0x000000000006f02e : and al, 8 ; je 0x6f060 ; lea rsi, qword ptr [rsp + 8] ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000005c0cf : and al, 8 ; lea rdx, qword ptr [rax + 8] ; mov qword ptr [r12 + 8], rdx ; jmp 0x5c0aa
0x000000000005c0ce : and al, 8 ; lea rdx, qword ptr [rax + 8] ; mov qword ptr [r12 + 8], rdx ; jmp 0x5c0ab
0x000000000013dd87 : and al, 8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013dec7 : and al, 8 ; lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x0000000000108d48 : and al, 8 ; mov eax, 0x38 ; syscall ; test rax, rax ; jl 0x108d97 ; je 0x108d69 ; ret
0x00000000000203e1 : and al, 8 ; mov edi, dword ptr [rsp + 0x14] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000013d3c1 : and al, 8 ; mov qword ptr [rbx], rax ; add rsp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x0000000000139e53 : and al, 8 ; mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013981e : and al, 8 ; mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000001399a2 : and al, 8 ; mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000012df6a : and al, 8 ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12df88 ; mov rdi, rsp ; call rax
0x000000000012df69 : and al, 8 ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12df89 ; mov rdi, rsp ; call rax
0x000000000012e055 : and al, 8 ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12e073 ; mov rdi, rsp ; call rax
0x000000000012e054 : and al, 8 ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12e074 ; mov rdi, rsp ; call rax
0x000000000010bd20 : and al, 8 ; mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000010bd81 : and al, 8 ; mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x0000000000104230 : and al, 8 ; mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000006f035 : and al, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000013decc : and al, 8 ; mov rdi, r12 ; call qword ptr [rax]
0x000000000008417b : and al, 8 ; mov rdi, r14 ; mov qword ptr [rsp + 0x10], r14 ; call qword ptr [rax]
0x00000000000757c1 : and al, 8 ; mov rdi, r15 ; call rax
0x000000000013d487 : and al, 8 ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000131b90 : and al, 8 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000131a83 : and al, 8 ; mov rdx, rbx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000013a727 : and al, 8 ; push r14 ; push r13 ; mov rcx, qword ptr [rsp + 0x18] ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00000000001029f5 : and al, 8 ; syscall ; cmp rax, -0xfff ; jae 0x102a0e ; ret
0x00000000001029f4 : and al, 8 ; syscall ; cmp rax, -0xfff ; jae 0x102a0f ; ret
0x00000000000cd38c : and al, 8 ; test rax, rax ; je 0xcd39c ; call rax
0x00000000000cd38b : and al, 8 ; test rax, rax ; je 0xcd39d ; call rax
0x0000000000084273 : and al, 8 ; xor edi, edi ; call qword ptr [rax]
0x0000000000130932 : and al, byte ptr [rax] ; add al, ch ; neg dh ; add byte ptr [rax], al ; lea rax, qword ptr [rbx + 0x2260] ; pop rbx ; ret
0x0000000000034e22 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000000000a0e1d : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000035474 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000010e3d7 : and al, byte ptr [rax] ; add byte ptr [rax], al ; je 0x10e3f4 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000010fbc1 : and al, byte ptr [rax] ; add byte ptr [rax], al ; je 0x10fbde ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001bb364 : and al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000cd26a : and al, byte ptr [rax] ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xcd2b7 ; ret
0x0000000000130ac9 : and al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006d372 : and al, byte ptr [rbp + 0x63480011] ; add al, 0x81 ; add rax, rcx ; jmp rax
0x0000000000126203 : and al, byte ptr [rbx + 0x2bafff8] ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xf3c3
0x00000000001034ca : and al, byte ptr [rbx] ; add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x2c0d4b] ; add rsp, 0x18 ; ret
0x00000000001abb5d : and al, byte ptr [rcx] ; add byte ptr [rax - 0x2b], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001abb75 : and al, byte ptr [rcx] ; add byte ptr [rax - 0x2b], bh ; hlt ; jmp qword ptr [rcx]
0x0000000000109011 : and al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10902e ; ret
0x0000000000193745 : and bh, ah ; call rax
0x00000000000575b2 : and bh, al ; add ch, byte ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x47 ; or al, 0x83 ; ret
0x0000000000002fa8 : and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000193aa0 : and bh, byte ptr [rax - 4] ; push qword ptr [rdx + 0x42fffc77] ; ja 0x193ab2 ; call rdx
0x0000000000030858 : and bh, byte ptr [rcx] ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x00000000001811c5 : and bh, byte ptr [rsi - 0x5e0466e] ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000000eb79e : and bh, dl ; dec dword ptr [rax + 1] ; ret
0x0000000000090e3c : and bl, al ; nop ; bsf eax, eax ; sub rdx, rax ; jbe 0x90e61 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000a0c47 : and bl, al ; nop dword ptr [rax] ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x00000000000a7027 : and bl, al ; nop dword ptr [rax] ; ret
0x0000000000097fa7 : and bl, al ; nop dword ptr [rax] ; xor rax, rax ; ret
0x000000000012e910 : and byte ptr [r8 - 0x75], cl ; cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x00000000001381d9 : and byte ptr [r8 - 0x77], r9b ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x000000000007964f : and byte ptr [r8 - 0x77], r9b ; sbb byte ptr [r15 + 0x11], r14b ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000795a2 : and byte ptr [r8 - 0x77], r9b ; sbb byte ptr [r15 + 0xe], r14b ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002c353 : and byte ptr [r8 - 0x77], r9b ; sti ; test rax, rax ; je 0x2c369 ; call rax
0x0000000000099414 : and byte ptr [rax + 0x29], cl ; ret 0x6348
0x000000000011257d : and byte ptr [rax + 0x2b], cl ; xor r9b, bpl ; ret
0x0000000000089d8b : and byte ptr [rax + 0x31], cl ; ret 0x93be
0x0000000000112401 : and byte ptr [rax + 0x39], cl ; ret
0x000000000003a643 : and byte ptr [rax + 0x39], cl ; ret 0x1677
0x0000000000082af7 : and byte ptr [rax + 0x39], cl ; ret 0x820f
0x000000000003a659 : and byte ptr [rax + 0x39], cl ; ret 0xea76
0x00000000000726c8 : and byte ptr [rax + 0x3b], cl ; sub byte ptr [rbx + 0x11], sil ; lea rsi, qword ptr [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000013daf0 : and byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013638c : and byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004b366 : and byte ptr [rax + 1], cl ; ret
0x00000000000a0c96 : and byte ptr [rax + 1], cl ; ret 0x347c
0x00000000000feddd : and byte ptr [rax + rax], ch ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fee44 : and byte ptr [rax + rax], ch ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000403b9 : and byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000003a238 : and byte ptr [rax - 0x3f], cl ; retf 0x6411 ; xor rdx, qword ptr [0x30] ; call rdx
0x0000000000193350 : and byte ptr [rax - 0x4e8f0005], dh ; sti ; inc eax ; mov dl, 0xfb ; call qword ptr [rax]
0x0000000000194300 : and byte ptr [rax - 0x685f0004], bl ; cld ; jmp qword ptr [rax]
0x00000000000a6d15 : and byte ptr [rax - 0x73], cl ; jg 0xa6d45 ; jne 0xa717b ; ret
0x00000000000a8469 : and byte ptr [rax - 0x73], cl ; jg 0xa8499 ; jne 0xa898b ; ret
0x0000000000122d42 : and byte ptr [rax - 0x73], cl ; xor eax, 0x6ab80 ; call 0x14782f
0x00000000000c9850 : and byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000039275 : and byte ptr [rax - 0x75], cl ; and al, 0x30 ; lea r15, qword ptr [rbx + r14] ; call rax
0x000000000012e911 : and byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000002534a : and byte ptr [rax - 0x75], cl ; je 0x2537e ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000027a88 : and byte ptr [rax - 0x75], cl ; je 0x27abd ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000001381eb : and byte ptr [rax - 0x75], cl ; jg 0x138229 ; mov eax, 1 ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000084883 : and byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf04
0x0000000000024fad : and byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x30 ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000002770e : and byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x48 ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000028699 : and byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x48 ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x000000000007a133 : and byte ptr [rax - 0x75], cl ; sub byte ptr [r8 + 0x39], r9b ; ret 0x850f
0x00000000000f4546 : and byte ptr [rax - 0x75], cl ; xor ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000074c48 : and byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006f1f8 : and byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000eb2ab : and byte ptr [rax - 0x77], cl ; fucompi st(0) ; jl 0xeb2e4 ; cli ; dec dword ptr [rax + 1] ; ret
0x000000000013e83c : and byte ptr [rax - 0x77], cl ; ja 0x13e865 ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000008b95b : and byte ptr [rax - 0x77], cl ; jnp 0x8b971 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001381da : and byte ptr [rax - 0x77], cl ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x000000000003b6c4 : and byte ptr [rax - 0x77], cl ; ret
0x00000000000c0ca4 : and byte ptr [rax - 0x77], cl ; ret 0x1e74
0x0000000000143c62 : and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x0000000000046ce3 : and byte ptr [rax - 0x77], cl ; ret 0x8949
0x0000000000079650 : and byte ptr [rax - 0x77], cl ; sbb byte ptr [r15 + 0x11], r14b ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000795a3 : and byte ptr [rax - 0x77], cl ; sbb byte ptr [r15 + 0xe], r14b ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002c354 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x2c368 ; call rax
0x0000000000136aeb : and byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rcx - 0x18] ; ret 0xee8e
0x00000000000226d6 : and byte ptr [rax - 0x7d], cl ; ret
0x0000000000075ea3 : and byte ptr [rax - 1], bh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000070454 : and byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007a6a2 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000019387c : and byte ptr [rax - 4], cl ; inc dword ptr [rax] ; cld ; jmp rax
0x0000000000002d35 : and byte ptr [rax], ah ; or edx, ebp ; clc ; ret
0x000000000014058a : and byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000077373 : and byte ptr [rax], al ; add byte ptr [rax + rdx - 0x75], dh ; jo 0x7730e ; sar byte ptr [rax + 9], 0xf3 ; ret
0x000000000010ff74 : and byte ptr [rax], al ; add byte ptr [rax], al ; call 0x7252b
0x0000000000059c6d : and byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000000597ff : and byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 0x1078], 0 ; jmp rax
0x00000000000aad74 : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000cea30 : and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000f8f71 : and byte ptr [rax], al ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf8f8e ; ret
0x0000000000129862 : and byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000131e95 : and byte ptr [rax], al ; add byte ptr [rsi + 0xe], dh ; mov eax, 3 ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000791f0 : and byte ptr [rax], al ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001291e8 : and byte ptr [rax], al ; jmp 0x1291b1
0x00000000001166fb : and byte ptr [rax], al ; jne 0x1166fd ; mov edx, dword ptr [rdi + 0x28] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x000000000000044b : and byte ptr [rax], al ; mov dword ptr [rcx + 0x7c05000c], eax ; adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x00000000000a815c : and byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x00000000000aa2a7 : and byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x0000000000007050 : and byte ptr [rax], dl ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000000449 : and byte ptr [rax], dl ; add byte ptr [rcx + 0x5000c81], cl ; jl 0x471 ; sbb al, 0xc ; ret 0x4412
0x000000000007a047 : and byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x0000000000153bc5 : and byte ptr [rbp + rcx*4 + 0x1d], cl ; movsxd rdi, edx ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000e693b : and byte ptr [rbp + rcx*4 - 0x7c], cl ; and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000d6d64 : and byte ptr [rbp - 0x3a7cfeb6], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000194318 : and byte ptr [rbp - 0x6b5f0004], dl ; cld ; jmp qword ptr [rax]
0x00000000000bbade : and byte ptr [rbp - 0x7cca8740], al ; clc ; sbb dword ptr [rdi + 0x18], edi ; mov rax, rbx ; pop rbx ; ret
0x00000000001939b4 : and byte ptr [rbp - 4], bh ; push qword ptr [rax + 0x40fffc7c] ; jl 0x1939c6 ; call rax
0x00000000001938e8 : and byte ptr [rbp - 4], cl ; jmp qword ptr [rax]
0x00000000000df2a9 : and byte ptr [rbx + 0x942484], al ; add byte ptr [rax], al ; add dword ptr [rbp - 0x7cb7febd], ecx ; ret
0x0000000000193314 : and byte ptr [rbx + rdi*8 - 0x469ff01], dl ; jmp rax
0x000000000013086c : and byte ptr [rbx - 0x48], bl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000006d8da : and byte ptr [rbx - 0x78f0d608], al ; mov word ptr [rax], es ; add byte ptr [rax], al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x0000000000193914 : and byte ptr [rbx - 4], al ; push rax ; cld ; call rax
0x00000000001938e4 : and byte ptr [rbx - 4], cl ; jmp qword ptr [rax]
0x0000000000193db8 : and byte ptr [rbx - 4], dh ; call qword ptr [rax + 0x10fffc72]
0x000000000007c9c9 : and byte ptr [rcx + 0xc7640f], cl ; or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000076160 : and byte ptr [rcx + 0xc76417], cl ; or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000001b5bad : and byte ptr [rcx + 0xe], ah ; sbb byte ptr [rcx + 0xe], al ; adc byte ptr [rcx + 0xe], al ; or byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; ret 1
0x000000000006d172 : and byte ptr [rcx + rbp], bh ; ja 0x6d1f7 ; movzx eax, al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000007de6f : and byte ptr [rcx - 0x2dcea42f], cl ; jmp rax
0x00000000001940c4 : and byte ptr [rcx - 0x5f4f0004], ah ; cld ; inc dword ptr [rax - 0x60] ; cld ; call rax
0x000000000019329c : and byte ptr [rcx - 5], ah ; call qword ptr [rax]
0x0000000000186214 : and byte ptr [rcx], 0xf2 ; push qword ptr [rax - 0x1f000ddf] ; and edx, esi ; call qword ptr [rax]
0x00000000000508f0 : and byte ptr [rcx], ah ; add byte ptr [rax], al ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000019637d : and byte ptr [rcx], al ; add byte ptr [rax + rbx*4], al ; int1 ; call rsp
0x00000000000f9900 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000010a261 : and byte ptr [rcx], al ; add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0x10a27e ; ret
0x000000000016db0e : and byte ptr [rcx], bh ; sal dword ptr [rbp + 3], 0x31 ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jl 0x16db31 ; neg eax ; ret
0x00000000000707e2 : and byte ptr [rcx], dh ; test byte ptr [rax - 0x3f], 0xc8 ; adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000c7d91 : and byte ptr [rcx], dh ; test byte ptr [rcx - 0x7d], 0xc6 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000194308 : and byte ptr [rdi - 0x695f0004], dl ; cld ; jmp qword ptr [rax]
0x00000000001938fc : and byte ptr [rdi - 4], al ; call qword ptr [rax]
0x00000000001938ec : and byte ptr [rdi - 4], cl ; push qword ptr [rax + 0x70fffc41] ; cld ; inc dword ptr [rax + 0x45] ; cld ; jmp qword ptr [rax]
0x000000000019393c : and byte ptr [rdi], ch ; cld ; push qword ptr [rax + 0x30] ; cld ; inc eax ; xor esp, edi ; call qword ptr [rax]
0x000000000011fd2c : and byte ptr [rdi], cl ; test ch, bl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x2e66
0x00000000000a6d19 : and byte ptr [rdi], cl ; test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x000000000016ed40 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000001940f4 : and byte ptr [rdx - 0x665f0004], bl ; cld ; call qword ptr [rax]
0x0000000000193bcc : and byte ptr [rdx - 4], bh ; push qword ptr [rax + 0x40fffc79] ; jns 0x193bde ; call rax
0x000000000011a9c7 : and byte ptr [rdx], al ; add byte ptr [rax], al ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000007ae : and byte ptr [rdx], al ; add cl, byte ptr [rax] ; or byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rdx], ah ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x00000000001936f0 : and byte ptr [rdx], bl ; cld ; jmp rax
0x0000000000193970 : and byte ptr [rdx], ch ; cld ; push rax ; sub al, 0xfc ; inc dword ptr [rax + 0x2e] ; cld ; call qword ptr [rax - 0x1f0003d1]
0x00000000001937c4 : and byte ptr [rdx], cl ; cld ; push qword ptr [rax + 0xb] ; cld ; inc eax ; or al, 0xfc ; call qword ptr [rax]
0x000000000013eabc : and byte ptr [rsi + 0x11], dh ; add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000019ccd3 : and byte ptr [rsi + 0xe], bl ; or byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; test byte ptr [rbx], dh ; add byte ptr [rax], al ; nop ; in eax, -0x17 ; jmp qword ptr [rax]
0x00000000000fd82f : and byte ptr [rsi + rcx + 0x48], dh ; xor eax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x0000000000194310 : and byte ptr [rsi - 0x6a5f0004], dl ; cld ; jmp qword ptr [rax]
0x00000000001932ac : and byte ptr [rsi - 5], dl ; call qword ptr [rax + 0x30fffb67]
0x00000000001b69e0 : and byte ptr [rsi], cl ; clc ; jmp qword ptr [rax]
0x0000000000193990 : and byte ptr [rsi], dh ; cld ; push qword ptr [rax + 0x37] ; cld ; inc eax ; cmp ah, bh ; call qword ptr [rax]
0x0000000000194320 : and byte ptr [rsp + rdi*8 - 0x36c6f01], dl ; inc dword ptr [rax] ; xchg eax, ebx ; cld ; push qword ptr [rax - 0x6e] ; cld ; call rax
0x00000000000abff2 : and ch, 0xf ; je 0xac019 ; add rax, 2 ; ret
0x00000000000aad08 : and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000000feb93 : and ch, byte ptr [rax + rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f715b : and cl, byte ptr [rax + 0x63] ; ret 0xc283
0x00000000000aa909 : and cl, byte ptr [rax + 1] ; ror byte ptr [rax - 0x2f], 1 ; call 0xffffffffc30f366b
0x0000000000047694 : and cl, byte ptr [rax - 0x7d] ; ret
0x00000000000f22ac : and cl, byte ptr [rbx - 0x45a7db84] ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0x65
0x00000000000aaca3 : and dh, 0xf0 ; mov edx, 0 ; cmove rax, rdx ; pop rbx ; ret
0x00000000000aad51 : and dh, 0xf0 ; mov edx, 0 ; cmove rax, rdx ; ret
0x000000000011023a : and dh, dh ; dec dword ptr [rcx - 0x75] ; sbb byte ptr [r8 - 0x77], r9b ; fimul dword ptr [rax - 0x7d] ; ret
0x0000000000196451 : and dh, dl ; dec esp ; add dword ptr es:[rax], eax ; push rsp ; and esi, edx ; jmp rsp
0x0000000000186251 : and dh, dl ; inc dword ptr [rax] ; and esi, edx ; jmp qword ptr [rax]
0x0000000000186245 : and dh, dl ; inc eax ; and dh, dl ; jmp rax
0x0000000000186249 : and dh, dl ; jmp rax
0x0000000000186241 : and dh, dl ; push qword ptr [rax - 0x3f000dde] ; and dh, dl ; jmp rax
0x000000000018624d : and dh, dl ; push rax ; and dh, dl ; inc dword ptr [rax] ; and esi, edx ; jmp qword ptr [rax]
0x00000000000575b1 : and dil, al ; add ch, byte ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x47 ; or al, 0x83 ; ret
0x0000000000100f3e : and dl, byte ptr [rax + 0xf23fa80] ; xchg eax, ebp ; ret 0xc084
0x000000000002d7da : and dl, byte ptr [rcx + 0x39] ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x000000000010a7cc : and dl, dh ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x0000000000186201 : and dl, dh ; inc eax ; and dl, dh ; push rax ; and dl, dh ; jmp qword ptr [rax]
0x0000000000186209 : and dl, dh ; jmp qword ptr [rax]
0x0000000000186205 : and dl, dh ; push rax ; and dl, dh ; jmp qword ptr [rax]
0x000000000012a1bf : and dword ptr [rax + 0x40], 0xfffffff9 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fecb4 : and dword ptr [rax + rax], ebp ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108e53 : and dword ptr [rax - 0x2708ffd5], eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107653 : and dword ptr [rax - 0x2708ffd5], ebx ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ceea8 : and dword ptr [rax - 0x73], ecx ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001a0df5 : and dword ptr [rax], eax ; add al, ch ; push 0xed ; jmp qword ptr [rsi]
0x000000000000fef0 : and dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d
0x0000000000010e68 : and dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x42
0x00000000000f8fa1 : and dword ptr [rax], eax ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf8fbe ; ret
0x00000000000508f1 : and dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006130e : and dword ptr [rax], eax ; add byte ptr [rcx - 0x7afcb730], cl ; push -0x7c000006 ; ret 0x8908
0x0000000000183d02 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x0000000000109953 : and dword ptr [rbp + 0x2b], esi ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8953 : and dword ptr [rbp - 0x2708ffd4], eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000119353 : and dword ptr [rbx + 0x2a], edi ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 2] ; mov rax, -1 ; ret
0x000000000007af44 : and dword ptr [rbx], 0xffffffef ; mov qword ptr [rbx + 0x90], rax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bc972 : and dword ptr [rcx + 8], 0x29490000 ; ror byte ptr [rax + 0x3d], 1 ; ret 0x10
0x00000000000f8553 : and dword ptr [rcx - 0x2708ffd4], ecx ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001aba65 : and dword ptr [rcx], eax ; add byte ptr [rax - 0x2d], ch ; hlt ; jmp qword ptr [rcx]
0x0000000000108fdc : and dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0x108fff ; ret
0x00000000001963ad : and dword ptr [rcx], eax ; add byte ptr [rbx*4 + 0x21ccfff1], dh ; add dword ptr [rax], eax ; popfq ; int1 ; jmp rsp
0x00000000000f8453 : and dword ptr [rdx - 0x2708ffd4], ecx ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000036453 : and dword ptr [rdx - 0x389bffc8], ebp ; add byte ptr [rsi], ah ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000ec053 : and dword ptr [rsi + 0x2d], ecx ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000a6b4b : and dword ptr [rsi], eax ; add byte ptr [rax], al ; ret
0x00000000000801a3 : and dword ptr [rsp + rsi], ecx ; add byte ptr [rax - 0x77], cl ; cmc ; xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x0000000000183d01 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000000ac631 : and eax, 0x1f ; je 0xac69d ; test al, 0xf0 ; jne 0xac66d ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000001862a1 : and eax, 0x2570fff2 ; call qword ptr [rax - 0x4f000ddb]
0x00000000001862a9 : and eax, 0x25b0fff2 ; call rax
0x00000000001862c9 : and eax, 0x25b0fff2 ; inc eax ; and eax, 0x25d0fff2 ; jmp rax
0x00000000001862cd : and eax, 0x25c0fff2 ; call rax
0x00000000001862d1 : and eax, 0x25d0fff2 ; jmp rax
0x00000000001862d5 : and eax, 0x25e0fff2 ; push rax ; and eax, 0x2600fff2 ; call qword ptr [rax]
0x00000000001862d9 : and eax, 0x25f0fff2 ; inc dword ptr [rax] ; call qword ptr es:[rax]
0x00000000001862dd : and eax, 0x2600fff2 ; call qword ptr [rax]
0x0000000000193709 : and eax, 0x2750fffc ; cld ; jmp rax
0x00000000001936e9 : and eax, 0x2790fffc ; cld ; jmp qword ptr [rax]
0x0000000000108d76 : and eax, 0x2d0 ; pop rax ; pop rdi ; call rax
0x0000000000108d6e : and eax, 0x2d4 ; mov dword ptr fs:[0x2d0], eax ; pop rax ; pop rdi ; call rax
0x0000000000020748 : and eax, 0x30 ; add rsp, 0x28 ; jmp rax
0x000000000008fb67 : and eax, 0x30 ; add rsp, 8 ; jmp rax
0x00000000000645a8 : and eax, 0x30 ; call rax
0x0000000000035622 : and eax, 0x30 ; jmp rax
0x0000000000122edb : and eax, 0x30 ; lea rdi, qword ptr [rip + 0x2a2815] ; call rax
0x00000000000453e9 : and eax, 0x30 ; lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x00000000000704c4 : and eax, 0x30 ; lea rsi, qword ptr [rip + 0x30] ; call rax
0x000000000007e3c4 : and eax, 0x30 ; lea rsi, qword ptr [rip - 0x19b0] ; call rax
0x000000000007e87e : and eax, 0x30 ; lea rsi, qword ptr [rip - 0x1e6a] ; call rax
0x000000000007ed3e : and eax, 0x30 ; lea rsi, qword ptr [rip - 0x232a] ; call rax
0x00000000000707ae : and eax, 0x30 ; lea rsi, qword ptr [rip - 0x2ba] ; call rax
0x000000000007cd24 : and eax, 0x30 ; lea rsi, qword ptr [rip - 0x310] ; call rax
0x000000000007cf94 : and eax, 0x30 ; lea rsi, qword ptr [rip - 0x580] ; call rax
0x00000000000f76b1 : and eax, 0x30 ; mov edi, 1 ; call rax
0x0000000000047bc4 : and eax, 0x30 ; mov edi, dword ptr [rsp + 0x3c] ; call rax
0x000000000003a873 : and eax, 0x30 ; mov qword ptr fs:[rbp], rdx ; call rax
0x000000000002f5f8 : and eax, 0x30 ; mov rdi, r13 ; call rax
0x00000000000645d1 : and eax, 0x30 ; mov rsi, qword ptr [rip + 0x35c993] ; call rax
0x000000000005c939 : and eax, 0x30 ; mov rsi, qword ptr [rip + 0x36462b] ; call rax
0x000000000005c31d : and eax, 0x30 ; mov rsi, qword ptr [rip + 0x364c47] ; call rax
0x0000000000059699 : and eax, 0x30 ; mov rsi, qword ptr [rip + 0x3678cb] ; call rax
0x00000000000509f5 : and eax, 0x30 ; mov rsi, qword ptr [rip + 0x37056f] ; call rax
0x000000000004db19 : and eax, 0x30 ; mov rsi, qword ptr [rip + 0x37344b] ; call rax
0x00000000001174fa : and eax, 0x30 ; test rax, rax ; je 0x11753a ; call rax
0x000000000006ef9f : and eax, 0x30 ; test rax, rax ; je 0x6efc9 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006f06f : and eax, 0x30 ; test rax, rax ; je 0x6f099 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x00000000000c7c28 : and eax, 0x30 ; test rax, rax ; je 0xc7c56 ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000f80fc : and eax, 0x30 ; test rax, rax ; je 0xf8161 ; xor edx, edx ; xor esi, esi ; mov rdi, rbx ; call rax
0x000000000004dae8 : and eax, 0x30 ; xor esi, esi ; call rax
0x00000000000ec1fb : and eax, 0x40 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000002e107 : and eax, 0x6400392e ; mov qword ptr [rdx], rax ; ret
0x00000000000aad4c : and eax, 0x7ff80000 ; and dh, 0xf0 ; mov edx, 0 ; cmove rax, rdx ; ret
0x0000000000030561 : and eax, 0xc1480039 ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x00000000001726f5 : and eax, 0xc8c14800 ; adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000000aac8c : and eax, 0xf ; movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x000000000008db04 : and eax, 0xffffffc0 ; sar rdx, cl ; test rdx, rdx ; je 0x8db2e ; bsf rax, rdx ; ret
0x000000000008db04 : and eax, 0xffffffc0 ; sar rdx, cl ; test rdx, rdx ; je 0x8db2f ; bsf rax, rdx ; ret
0x0000000000087929 : and eax, 0xfffffff8 ; test byte ptr [rdi + rax - 8], 1 ; je 0x8794e ; sub rax, 8 ; ret
0x0000000000140a36 : and eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000118499 : and eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x00000000000cd2ca : and eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xcd317 ; ret
0x000000000015bcc9 : and eax, dword ptr [rbx + rax + 0x14634900] ; xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001abc6d : and eax, dword ptr [rcx] ; add byte ptr [rax - 0x23], al ; hlt ; jmp qword ptr [rcx]
0x00000000001092e1 : and eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x1092fe ; ret
0x00000000001963e5 : and eax, dword ptr [rcx] ; add byte ptr [rbx + rcx*8 + 0x2384fff1], dl ; add dword ptr [rax], eax ; in al, -0x33 ; int1 ; call rsp
0x0000000000165e89 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x00000000000368a8 : and eax, dword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000010c64d : and eax, dword ptr [rsi + 0x10] ; lea rax, qword ptr [rsi + rax*4] ; mov eax, dword ptr [rax + rdx] ; shr eax, cl ; and eax, 1 ; ret
0x000000000008f75e : and eax, ecx ; je 0x8f92f ; bsr rax, rax ; add rax, rdi ; ret
0x0000000000033ef2 : and eax, ecx ; xor rax, rdx ; movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x33ee4 ; ret
0x0000000000034b56 : and eax, edx ; movq xmm0, rax ; ret
0x0000000000034bcb : and eax, edx ; movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000034b94 : and eax, edx ; movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x0000000000034ae0 : and eax, edx ; sub rax, rdx ; shr rax, 0x3f ; ret
0x00000000000a0cf8 : and eax, edx ; test eax, eax ; je 0xa0cdc ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000fea84 : and ebp, dword ptr [rax + rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000007af45 : and ebp, edi ; mov qword ptr [rbx + 0x90], rax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000aaa51 : and ebx, 0xfff ; lea rax, qword ptr [rbx + 1] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011cec1 : and ebx, dword ptr [rcx + 0x2a] ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rdi], -0x7b ; ret
0x0000000000116af3 : and ebx, edi ; sub al, byte ptr [rax] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; jmp rax
0x00000000000aacd7 : and ecx, 0x3fc00 ; cmp edx, 0xff ; cmove rax, rcx ; pop rbx ; ret
0x0000000000082b76 : and ecx, dword ptr [rax + 0x39] ; ret
0x000000000012f35e : and ecx, dword ptr [rax - 0x75] ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000029b04 : and ecx, dword ptr [rdi] ; mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1a76
0x00000000000367be : and ecx, dword ptr [rdx + rax*8] ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x000000000010074a : and edi, 0xfffffff0 ; add edi, 0x26 ; mov dword ptr fs:[rax], edi ; mov eax, 0xffffffff ; ret
0x00000000000f6f79 : and edi, 0xfffffff8 ; sub rcx, rdi ; add ecx, 0x50 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000362de : and edi, 0xfffffff8 ; sub rcx, rdi ; sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000015c8c9 : and edi, dword ptr [rax + 3] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000012d785 : and edi, ebp ; dec dword ptr [rax - 0x77] ; ret
0x0000000000108f03 : and edi, esi ; or rax, rdi ; ret
0x00000000001936e5 : and edi, esp ; call qword ptr [rax - 0x6f0003db]
0x0000000000193725 : and edi, esp ; call qword ptr [rax]
0x00000000001936c5 : and edi, esp ; call rax
0x00000000000aad02 : and edx, 0x3fffc00 ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000001329ab : and edx, 0x7f ; movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x00000000000aad24 : and edx, 0xf ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x000000000010a49d : and edx, 0xfffffff8 ; add rdx, rax ; cmp rcx, rdx ; mov edx, 0 ; cmovb rax, rdx ; ret
0x000000000008b4a0 : and edx, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000000f8499 : and edx, dword ptr [rbx] ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xec ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000007732b : and edx, edi ; or dword ptr [rax], eax ; add rsp, 0x80 ; mov eax, edx ; ret
0x000000000018621d : and edx, esi ; call qword ptr [rax]
0x0000000000186211 : and edx, esi ; inc dword ptr [rax - 0x4f000ddf] ; and edx, esi ; jmp rax
0x0000000000186219 : and edx, esi ; jmp rax
0x0000000000186215 : and edx, esi ; push qword ptr [rax - 0x1f000ddf] ; and edx, esi ; call qword ptr [rax]
0x00000000000fa789 : and edx, esi ; stc ; dec dword ptr [rax + 0x39] ; ret
0x000000000013efe2 : and esi, 7 ; movsxd rax, dword ptr [rcx + rsi*4] ; shr rdx, 3 ; add rax, rcx ; jmp rax
0x000000000013ab59 : and esi, dword ptr [rax + rbp - 0x373eb800] ; adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002d9d1 : and esi, dword ptr [rdi + 0x10] ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000008f9e2 : and esi, eax ; je 0x8f92f ; bsr rax, rsi ; add rax, rdi ; ret
0x000000000008f7ec : and esi, ecx ; je 0x8f930 ; bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x00000000001561cb : and esi, edx ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000186275 : and esi, edx ; call qword ptr [rax]
0x0000000000186261 : and esi, edx ; inc dword ptr [rax - 0x5f000ddd] ; and esi, edx ; inc eax ; and esi, edx ; jmp rax
0x0000000000186269 : and esi, edx ; inc eax ; and esi, edx ; jmp rax
0x0000000000186255 : and esi, edx ; jmp qword ptr [rax]
0x000000000018626d : and esi, edx ; jmp rax
0x0000000000186271 : and esi, edx ; push rax ; and esi, edx ; call qword ptr [rax]
0x00000000000bc64b : and esp, 1 ; add r12, rax ; mov qword ptr [rsp + 0xa8], r12 ; call r15
0x0000000000193721 : and esp, edi ; call qword ptr [rax]
0x00000000001936c1 : and esp, edi ; call rax
0x00000000001963ac : and qword ptr [rcx], r8 ; add byte ptr [rbx*4 + 0x21ccfff1], dh ; add dword ptr [rax], eax ; popfq ; int1 ; jmp rsp
0x00000000000362b5 : and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000363e7 : and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000a7026 : and r11b, r8b ; nop dword ptr [rax] ; ret
0x00000000000bc64a : and r12d, 1 ; add r12, rax ; mov qword ptr [rsp + 0xa8], r12 ; call r15
0x00000000000ac630 : and rax, 0x1f ; je 0xac69e ; test al, 0xf0 ; jne 0xac66e ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000001abea4 : and rax, 0xe3480001 ; hlt ; jmp qword ptr [rcx]
0x000000000008db03 : and rax, 0xffffffffffffffc0 ; sar rdx, cl ; test rdx, rdx ; je 0x8db2f ; bsf rax, rdx ; ret
0x000000000008db03 : and rax, 0xffffffffffffffc0 ; sar rdx, cl ; test rdx, rdx ; je 0x8db30 ; bsf rax, rdx ; ret
0x0000000000087928 : and rax, 0xfffffffffffffff8 ; test byte ptr [rdi + rax - 8], 1 ; je 0x8794f ; sub rax, 8 ; ret
0x00000000000368a7 : and rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000008f75d : and rax, rcx ; je 0x8f930 ; bsr rax, rax ; add rax, rdi ; ret
0x0000000000033ef1 : and rax, rcx ; xor rax, rdx ; movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x33ee5 ; ret
0x0000000000034b55 : and rax, rdx ; movq xmm0, rax ; ret
0x0000000000034bca : and rax, rdx ; movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000034b93 : and rax, rdx ; movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x0000000000034adf : and rax, rdx ; sub rax, rdx ; shr rax, 0x3f ; ret
0x00000000000367bd : and rcx, qword ptr [rdx + rax*8] ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x00000000000f6f78 : and rdi, 0xfffffffffffffff8 ; sub rcx, rdi ; add ecx, 0x50 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000362dd : and rdi, 0xfffffffffffffff8 ; sub rcx, rdi ; sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000108f02 : and rdi, rsi ; or rax, rdi ; ret
0x0000000000034c35 : and rdx, rax ; or rdi, rdx ; movq xmm1, rdi ; movapd xmm0, xmm1 ; ret
0x000000000008f9e1 : and rsi, rax ; je 0x8f930 ; bsr rax, rsi ; add rax, rdi ; ret
0x000000000008f7eb : and rsi, rcx ; je 0x8f931 ; bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000019369c : and spl, dil ; jmp qword ptr [rax]
0x0000000000097e0a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x0000000000090de0 : bsf eax, eax ; add rax, rdi ; ret
0x0000000000090df0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000090e00 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000090dd0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x0000000000090d1f : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000098003 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000090e10 : bsf eax, eax ; sub rdx, rax ; jbe 0x90e5b ; add rax, rdi ; ret
0x0000000000090e20 : bsf eax, eax ; sub rdx, rax ; jbe 0x90e5d ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000090e30 : bsf eax, eax ; sub rdx, rax ; jbe 0x90e5d ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000090e40 : bsf eax, eax ; sub rdx, rax ; jbe 0x90e5d ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000091a56 : bsf eax, edi ; cmove rax, rdx ; add eax, 1 ; ret
0x00000000000a126a : bsf ecx, ecx ; movzx eax, byte ptr [rax + rcx] ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000000a1330 : bsf ecx, edi ; movzx eax, byte ptr [rax + rcx] ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000000ab043 : bsf ecx, edx ; cmp rax, rcx ; ja 0xab06f ; sub rdi, 0x10 ; add rax, rdi ; ret
0x000000000008dbc2 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x0000000000098120 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000091a55 : bsf rax, rdi ; cmove rax, rdx ; add eax, 1 ; ret
0x000000000008dab2 : bsf rax, rdx ; ret
0x00000000000a1269 : bsf rcx, rcx ; movzx eax, byte ptr [rax + rcx] ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000000a132f : bsf rcx, rdi ; movzx eax, byte ptr [rax + rcx] ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000000ab042 : bsf rcx, rdx ; cmp rax, rcx ; ja 0xab070 ; sub rdi, 0x10 ; add rax, rdi ; ret
0x00000000000a10fb : bsf rdx, rax ; movzx eax, byte ptr [rdi + rdx] ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000008dbc1 : bsf rdx, rdx ; add rax, rdx ; sub rax, rdi ; ret
0x00000000000a0d61 : bsr eax, eax ; add rax, rdi ; add rax, r8 ; ret
0x000000000008f767 : bsr eax, eax ; add rax, rdi ; ret
0x00000000000a0c30 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x00000000000a0c40 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x00000000000a0c50 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x00000000000a0cb0 : bsr eax, eax ; sub rdx, 0x10 ; add rdx, rax ; jl 0xa0ce1 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000a0c90 : bsr eax, eax ; sub rdx, 0x20 ; add rdx, rax ; jl 0xa0ce1 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00000000000a0c70 : bsr eax, eax ; sub rdx, 0x30 ; add rdx, rax ; jl 0xa0ce1 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000000a0c60 : bsr eax, eax ; sub rdx, 0x40 ; add rdx, rax ; jl 0xa0cdf ; add rax, rdi ; ret
0x000000000008f9eb : bsr eax, esi ; add rax, rdi ; ret
0x000000000008f8f9 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x000000000008f7f5 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000008f766 : bsr rax, rax ; add rax, rdi ; ret
0x000000000008f9ea : bsr rax, rsi ; add rax, rdi ; ret
0x000000000008f8f8 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x000000000008f7f4 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000013126b : bswap eax ; cdqe ; mov qword ptr [rbx], rax ; mov eax, 1 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013e78a : bswap eax ; cdqe ; mov qword ptr [rsi], rax ; mov qword ptr [rdi + 0x18], rdx ; mov eax, 1 ; ret
0x000000000013ed21 : bswap eax ; mov eax, eax ; mov qword ptr [rbx], rax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x0000000000134c56 : bswap eax ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x000000000013e6fa : bswap edx ; mov dword ptr [rax - 4], edx ; mov qword ptr [rdi + 0x18], rax ; mov eax, 1 ; ret
0x0000000000130f61 : bswap edx ; mov dword ptr [rax], edx ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013121b : bswap edx ; mov dword ptr [rsi], edx ; mov qword ptr [rax + 0x68], rcx ; mov qword ptr [rax + 0x58], r8 ; mov eax, 1 ; ret
0x000000000013e72a : bswap edx ; mov dword ptr [rsi], edx ; mov qword ptr [rdi + 0x18], rax ; mov eax, 1 ; ret
0x0000000000137972 : bswap rax ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x000000000008dd83 : bts edx, ebx ; bsf rdx, rdx ; add rax, rdx ; sub rax, rdi ; ret
0x000000000008dce4 : bts edx, esi ; sar rdx, cl ; test rdx, rdx ; je 0x8dd0e ; bsf rax, rdx ; ret
0x000000000008dce4 : bts edx, esi ; sar rdx, cl ; test rdx, rdx ; je 0x8dd0f ; bsf rax, rdx ; ret
0x000000000008dd82 : bts rdx, r11 ; bsf rdx, rdx ; add rax, rdx ; sub rax, rdi ; ret
0x000000000008dce3 : bts rdx, rsi ; sar rdx, cl ; test rdx, rdx ; je 0x8dd0f ; bsf rax, rdx ; ret
0x000000000008dce3 : bts rdx, rsi ; sar rdx, cl ; test rdx, rdx ; je 0x8dd10 ; bsf rax, rdx ; ret
0x000000000004b517 : call qword ptr [r10 + rax*8]
0x0000000000193e73 : call qword ptr [rax + 0x10fffc50]
0x0000000000193e37 : call qword ptr [rax + 0x10fffc51]
0x0000000000193e7b : call qword ptr [rax + 0x10fffc53]
0x0000000000193e3f : call qword ptr [rax + 0x10fffc54]
0x0000000000193e83 : call qword ptr [rax + 0x10fffc56]
0x0000000000193e47 : call qword ptr [rax + 0x10fffc57]
0x0000000000193e8b : call qword ptr [rax + 0x10fffc59]
0x0000000000193e4f : call qword ptr [rax + 0x10fffc5a]
0x0000000000193e93 : call qword ptr [rax + 0x10fffc5c]
0x0000000000193e57 : call qword ptr [rax + 0x10fffc5d]
0x0000000000193e9b : call qword ptr [rax + 0x10fffc5f]
0x0000000000193e5f : call qword ptr [rax + 0x10fffc60]
0x0000000000193ea3 : call qword ptr [rax + 0x10fffc62]
0x0000000000193e67 : call qword ptr [rax + 0x10fffc63]
0x0000000000193ddb : call qword ptr [rax + 0x10fffc6e]
0x0000000000193dd3 : call qword ptr [rax + 0x10fffc6f]
0x0000000000193dcb : call qword ptr [rax + 0x10fffc70]
0x0000000000193dc3 : call qword ptr [rax + 0x10fffc71]
0x0000000000193dbb : call qword ptr [rax + 0x10fffc72]
0x0000000000193df3 : call qword ptr [rax + 0x10fffc73]
0x0000000000194117 : call qword ptr [rax + 0x10fffc95]
0x000000000019410f : call qword ptr [rax + 0x10fffc96]
0x0000000000194107 : call qword ptr [rax + 0x10fffc97]
0x00000000001940ff : call qword ptr [rax + 0x10fffc98]
0x0000000000185c47 : call qword ptr [rax + 0x20]
0x00000000001936eb : call qword ptr [rax + 0x20fffc27]
0x0000000000193bc7 : call qword ptr [rax + 0x20fffc7a]
0x0000000000193ee7 : call qword ptr [rax + 0x20fffc9d]
0x00000000001940bf : call qword ptr [rax + 0x20fffca1]
0x00000000001934db : call qword ptr [rax + 0x20fffd95]
0x00000000001934af : call qword ptr [rax + 0x20fffd98]
0x000000000008715e : call qword ptr [rax + 0x24548b48]
0x00000000001932af : call qword ptr [rax + 0x30fffb67]
0x0000000000106b9e : call qword ptr [rax + 0x3948f889]
0x0000000000193967 : call qword ptr [rax - 0x1f0003c3]
0x000000000019397b : call qword ptr [rax - 0x1f0003d1]
0x000000000019379b : call qword ptr [rax - 0x1f0003ef]
0x000000000019333b : call qword ptr [rax - 0x1f000457]
0x000000000018735f : call qword ptr [rax - 0x1f000b87]
0x000000000019326b : call qword ptr [rax - 0x2f0004b8]
0x00000000000c9bce : call qword ptr [rax - 0x34a5fa75]
0x00000000001198be : call qword ptr [rax - 0x3c0776b8]
0x0000000000034c0c : call qword ptr [rax - 0x3d]
0x00000000001861e7 : call qword ptr [rax - 0x3f000de1]
0x00000000001862a7 : call qword ptr [rax - 0x4f000ddb]
0x00000000000c322e : call qword ptr [rax - 0x6dfb72b8]
0x00000000001936e7 : call qword ptr [rax - 0x6f0003db]
0x00000000000865de : call qword ptr [rax - 0x72b71077]
0x000000000018605b : call qword ptr [rax]
0x000000000004b518 : call qword ptr [rdx + rax*8]
0x0000000000194c63 : call qword ptr [rsi + rax*4 + 0x65540000]
0x00000000001862e1 : call qword ptr es:[rax]
0x00000000000645ad : call rax
0x000000000009c674 : cdq ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; ret 0x5a8d
0x00000000000a6393 : cdq ; add al, byte ptr [rax] ; add byte ptr [rsi + 0xf], ah ; je 0xa63f0 ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000086e40 : cdq ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000025f89 : cdq ; add dword ptr [rax], eax ; add bh, dh ; ret 0
0x000000000015a027 : cdq ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000005cbcd : cdq ; add rax, rcx ; jmp rax
0x00000000001b8fd1 : cdq ; clc ; call qword ptr [rax]
0x00000000001940fd : cdq ; cld ; call qword ptr [rax + 0x10fffc98]
0x00000000001940f9 : cdq ; cld ; call qword ptr [rax]
0x00000000001942f9 : cdq ; cld ; jmp qword ptr [rax + 0x20fffc98]
0x00000000001942f5 : cdq ; cld ; push qword ptr [rax] ; cdq ; cld ; jmp qword ptr [rax + 0x20fffc98]
0x000000000003a902 : cdq ; idiv esi ; shl rdx, 0x20 ; mov eax, eax ; or rax, rdx ; ret
0x00000000000f83db : cdq ; mov ch, byte ptr [rax + rax] ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000f82db : cdq ; mov ebp, dword ptr [rax + rax] ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000001199ba : cdq ; mov rax, rdi ; ret
0x0000000000106bdb : cdq ; movabs byte ptr [0x1600c764002b], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000ada43 : cdq ; or al, 0x31 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000154793 : cdq ; out dx, al ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000566d3 : cdq ; scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add rsp, 0xd8 ; ret
0x0000000000116a63 : cdq ; sti ; sub al, byte ptr [rax] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; jmp rax
0x000000000012ad93 : cdq ; sub al, 0xf6 ; dec dword ptr [rax + 0x39] ; ret
0x00000000001174cc : cdq ; sub al, byte ptr [rax] ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000001074a4 : cdq ; sub eax, dword ptr [rax] ; mov edx, 0x64 ; mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x00000000001074d7 : cdq ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000008fc08 : cdqe ; mov byte ptr [rbp + rax], 0 ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000fd84e : cdqe ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000013126d : cdqe ; mov qword ptr [rbx], rax ; mov eax, 1 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003b448 : cdqe ; mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013e78c : cdqe ; mov qword ptr [rsi], rax ; mov qword ptr [rdi + 0x18], rdx ; mov eax, 1 ; ret
0x0000000000126a6d : cdqe ; shr rax, 4 ; ret
0x0000000000078d8b : clc ; add al, bl ; nop ; mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000078c7b : clc ; add al, bl ; nop ; mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x000000000005220c : clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000195d45 : clc ; add byte ptr [rax], al ; adc al, 0x6a ; out dx, eax ; jmp rsp
0x00000000000f7ee2 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsi ; js 0xf7f42 ; mov dword ptr [rdi + 0x100], edx ; ret
0x0000000000125a3c : clc ; add byte ptr [rax], al ; add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x000000000007859e : clc ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006cb6f : clc ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000009969f : clc ; add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bc8], cl ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011a7f0 : clc ; add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000715ef : clc ; add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x00000000000f91ae : clc ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 8], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000195d3d : clc ; add byte ptr [rax], al ; in al, 0x67 ; out dx, eax ; inc dword ptr [rax + rdi*8 + 0x6a140000] ; out dx, eax ; jmp rsp
0x00000000000abd57 : clc ; add byte ptr [rax], al ; ret
0x00000000001a9165 : clc ; add byte ptr [rax], al ; sbb byte ptr [rdi - 0xe], ah ; call qword ptr [rax]
0x00000000000ac2bc : clc ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000720fe : clc ; add cl, byte ptr [rax - 0x77] ; ret
0x0000000000059a80 : clc ; add cl, byte ptr [rax - 0x77] ; ret 0x51ff
0x000000000013d1b4 : clc ; add cl, byte ptr [rdi] ; xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x0000000000130da8 : clc ; add cl, byte ptr [rdi] ; xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000013e126 : clc ; add cl, byte ptr [rdi] ; xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000013dbec : clc ; add dh, byte ptr [rax + rsi*2 + 0x31] ; ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000097275 : clc ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000006c27d : clc ; add dword ptr [rax - 1], edi ; cmove eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x0000000000198705 : clc ; add dword ptr [rax], eax ; add al, 0x5e ; stc ; inc dword ptr [rax + rdi*8 + 0x66240001] ; stc ; call rsp
0x00000000000467a8 : clc ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000019870d : clc ; add dword ptr [rax], eax ; and al, 0x66 ; stc ; call rsp
0x000000000013d371 : clc ; add dword ptr [rbp - 0x14], esi ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000004e3fb : clc ; add dword ptr [rcx - 0x7d], eax ; xlatb ; inc dword ptr [rax - 0x4e743] ; jmp qword ptr [rax]
0x00000000000fc57c : clc ; add dword ptr [rdi], ecx ; test byte ptr [rbx + rax], ch ; add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x0000000000114ada : clc ; add dword ptr [rdi], ecx ; test byte ptr [rsi + 0x31000000], dl ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000013edad : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000013ec56 : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000153dc6 : clc ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000a0d66 : clc ; add rax, r8 ; ret
0x0000000000090ba8 : clc ; add rax, rcx ; ret
0x000000000010a49f : clc ; add rdx, rax ; cmp rcx, rdx ; mov edx, 0 ; cmovb rax, rdx ; ret
0x00000000001b8fd2 : clc ; call qword ptr [rax]
0x00000000001b749a : clc ; call rax
0x000000000003a901 : clc ; cdq ; idiv esi ; shl rdx, 0x20 ; mov eax, eax ; or rax, rdx ; ret
0x0000000000048931 : clc ; clc ; jne 0x48927 ; mov rax, rdx ; ret
0x0000000000199329 : clc ; cli ; ljmp ptr [rax + rdx*2 - 0x68bfffe] ; cli ; call rsp
0x0000000000003b06 : clc ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x000000000016cc99 : clc ; cmp rcx, rax ; jne 0x16cccb ; xor eax, eax ; ret
0x000000000016cc98 : clc ; cmp rcx, rax ; jne 0x16cccc ; xor eax, eax ; ret
0x000000000016c28d : clc ; cmp rcx, rax ; jne 0x16cccf ; xor eax, eax ; ret
0x000000000016c28c : clc ; cmp rcx, rax ; jne 0x16ccd0 ; xor eax, eax ; ret
0x000000000016dad9 : clc ; cmp rcx, rax ; jne 0x16db0b ; xor eax, eax ; ret
0x000000000016dad8 : clc ; cmp rcx, rax ; jne 0x16db0c ; xor eax, eax ; ret
0x000000000016d8bd : clc ; cmp rcx, rax ; jne 0x16db0f ; xor eax, eax ; ret
0x000000000016d8bc : clc ; cmp rcx, rax ; jne 0x16db10 ; xor eax, eax ; ret
0x0000000000089c20 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000007a843 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000001106db : clc ; dec dword ptr [rax + 1] ; imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ffbb3 : clc ; dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000119b8e : clc ; dec dword ptr [rax - 0x75] ; xchg eax, esp ; and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000001077f9 : clc ; dec dword ptr [rax - 0x77] ; cmp byte ptr [r8 + 3], dil ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002db07 : clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000142caf : clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00000000000986d5 : clc ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000001004cf : clc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rbx + 0x48], 0x39 ; ret
0x00000000001072d8 : clc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rsi + rsi*2 + 0x48], 0x39 ; ret
0x0000000000198012 : clc ; dec esp ; leave ; add dword ptr [rax], eax ; cmp al, 0xf8 ; jmp rsp
0x0000000000197f82 : clc ; inc dword ptr [rsi + rax*8 + 0x2ad40001] ; clc ; call rsp
0x0000000000099d6e : clc ; jb 0x99d55 ; mov rdx, rax ; jmp 0x99d0c
0x00000000000aad4f : clc ; jg 0xaacdf ; out 0xf0, al ; mov edx, 0 ; cmove rax, rdx ; ret
0x00000000000aad4f : clc ; jg 0xaace0 ; out 0xf0, al ; mov edx, 0 ; cmove rax, rdx ; ret
0x00000000000ce964 : clc ; jg 0xce98a ; add byte ptr [rax], al ; jne 0xce8db ; mov eax, 0xfa ; ret
0x00000000001b6952 : clc ; jmp qword ptr [rax]
0x00000000000c5a70 : clc ; jmp rax
0x0000000000048932 : clc ; jne 0x48926 ; mov rax, rdx ; ret
0x0000000000197fe2 : clc ; lcall ptr [rax + rcx*8 + 0x33b40001] ; clc ; jmp rsp
0x0000000000197e32 : clc ; lcall ptr [rcx + rax*8 + 0x22640001] ; clc ; dec esp ; rol dword ptr [rcx], 0 ; movsb byte ptr [rdi], byte ptr [rsi] ; and bh, al ; jmp rsp
0x0000000000103473 : clc ; lcall ptr [rsi + 0x5f] ; je 0x103499 ; pop rbx ; lea rax, qword ptr [rip + 0x2c0ddf] ; pop rbp ; pop r12 ; ret
0x0000000000197fda : clc ; ljmp ptr [rax + rcx*8 + 1] ; add byte ptr [rbx + rsi], ah ; clc ; lcall ptr [rax + rcx*8 + 0x33b40001] ; clc ; jmp rsp
0x000000000019841a : clc ; ljmp ptr [rsp + 1] ; add byte ptr [rbp + rsi*4 - 0x1b6b0008], al ; add dword ptr [rax], eax ; mov ah, 0xb6 ; clc ; jmp rsp
0x000000000016c80f : clc ; mov rax, qword ptr [rdi - 8] ; cmp rcx, rax ; jne 0x16ccd3 ; xor eax, eax ; ret
0x000000000016c80e : clc ; mov rax, qword ptr [rdi - 8] ; cmp rcx, rax ; jne 0x16ccd4 ; xor eax, eax ; ret
0x000000000016d9df : clc ; mov rax, qword ptr [rdi - 8] ; cmp rcx, rax ; jne 0x16db13 ; xor eax, eax ; ret
0x000000000016d9de : clc ; mov rax, qword ptr [rdi - 8] ; cmp rcx, rax ; jne 0x16db14 ; xor eax, eax ; ret
0x000000000016cc95 : clc ; mov rcx, qword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x16cccf ; xor eax, eax ; ret
0x000000000016cc94 : clc ; mov rcx, qword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x16ccd0 ; xor eax, eax ; ret
0x000000000016c289 : clc ; mov rcx, qword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x16ccd3 ; xor eax, eax ; ret
0x000000000016c288 : clc ; mov rcx, qword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x16ccd4 ; xor eax, eax ; ret
0x000000000016dad5 : clc ; mov rcx, qword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x16db0f ; xor eax, eax ; ret
0x000000000016dad4 : clc ; mov rcx, qword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x16db10 ; xor eax, eax ; ret
0x000000000016d8b9 : clc ; mov rcx, qword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x16db13 ; xor eax, eax ; ret
0x000000000016d8b8 : clc ; mov rcx, qword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x16db14 ; xor eax, eax ; ret
0x000000000013a4b7 : clc ; mov rcx, r14 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000108ec2 : clc ; movzx edi, dil ; shr rax, 0xc ; xor al, al ; or eax, edi ; ret
0x00000000000f035f : clc ; or byte ptr [rax - 0x77], cl ; ret 0x830f
0x00000000000d51ff : clc ; or byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000109050 : clc ; or byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000010907a : clc ; or byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000007745c : clc ; or dword ptr [rax], eax ; add rsp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x0000000000087daf : clc ; or dword ptr [rdi - 0x5f], esi ; movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x00000000000adf48 : clc ; pop rbx ; neg rax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000019814a : clc ; push qword ptr [rax + rdx*8 + 0x54240001] ; clc ; dec esp ; rol byte ptr [rcx], 1 ; add byte ptr [rsp + rdx*2 - 8], ah ; jmp rsp
0x0000000000074308 : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000074364 : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000019800a : clc ; push qword ptr [rcx + rcx*8 + 0x3b840001] ; clc ; dec esp ; leave ; add dword ptr [rax], eax ; cmp al, 0xf8 ; jmp rsp
0x000000000010b358 : clc ; push qword ptr [rsi + rax - 0x7d] ; rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x00000000000c92e1 : clc ; push qword ptr [rsp + rax + 0x4d] ; mov dword ptr [rbp], esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010a236 : clc ; push qword ptr [rsp + rax - 0x75] ; and al, 0xc ; add rsp, 0x18 ; ret
0x00000000000ce8c0 : clc ; push rbx ; out dx, eax ; add byte ptr [rax], al ; je 0xce9b0 ; mov eax, 0x7f ; ret
0x000000000011aecb : clc ; sar rax, 6 ; ret
0x000000000003a8c5 : clc ; sar rdx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x00000000000bbae4 : clc ; sbb dword ptr [rdi + 0x18], edi ; mov rax, rbx ; pop rbx ; ret
0x0000000000116ea1 : clc ; sub al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000116e9b : clc ; sub al, byte ptr [rax] ; mov dword ptr [rip + 0x2af888], 1 ; pop rbx ; ret
0x000000000006d8dc : clc ; sub dword ptr [rdi], ecx ; xchg dword ptr [rax + rax + 0x63480000], ecx ; add al, 0x86 ; add rax, rsi ; jmp rax
0x0000000000102ebb : clc ; sub eax, dword ptr [rax] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014d38c : clc ; sub rax, r8 ; ret
0x000000000014d5e1 : clc ; sub rax, rdx ; ret
0x00000000000f71ee : clc ; sub rcx, rdi ; add ecx, 0x150 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000f6f7b : clc ; sub rcx, rdi ; add ecx, 0x50 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000362e0 : clc ; sub rcx, rdi ; sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000008792b : clc ; test byte ptr [rdi + rax - 8], 1 ; je 0x8794c ; sub rax, 8 ; ret
0x0000000000097e05 : clc ; test eax, eax ; je 0x97e2e ; bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x00000000001a4168 : clc ; xchg eax, edx ; out dx, al ; call qword ptr [rax]
0x0000000000183cf8 : cld ; adc ch, byte ptr [rip + 0x8acc8c6] ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000006f730 : cld ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x00000000001a9e54 : cld ; add al, 1 ; add byte ptr [rax + 0x41], cl ; call qword ptr [rdx]
0x000000000019ed14 : cld ; add byte ptr [rax], al ; add byte ptr [rax], ch ; fsub st(4), st(0) ; jmp qword ptr [rcx]
0x0000000000089d20 : cld ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x00000000000ce992 : cld ; add byte ptr [rax], al ; ret
0x000000000019e054 : cld ; add byte ptr [rax], r8b ; shr rdx, 1 ; jmp rdi
0x00000000000aacda : cld ; add eax, dword ptr [rax] ; cmp edx, 0xff ; cmove rax, rcx ; pop rbx ; ret
0x00000000001539b0 : cld ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000aacbf : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000193e72 : cld ; call qword ptr [rax + 0x10fffc50]
0x0000000000193e36 : cld ; call qword ptr [rax + 0x10fffc51]
0x0000000000193e7a : cld ; call qword ptr [rax + 0x10fffc53]
0x0000000000193e3e : cld ; call qword ptr [rax + 0x10fffc54]
0x0000000000193e82 : cld ; call qword ptr [rax + 0x10fffc56]
0x0000000000193e46 : cld ; call qword ptr [rax + 0x10fffc57]
0x0000000000193e8a : cld ; call qword ptr [rax + 0x10fffc59]
0x0000000000193e4e : cld ; call qword ptr [rax + 0x10fffc5a]
0x0000000000193e92 : cld ; call qword ptr [rax + 0x10fffc5c]
0x0000000000193e56 : cld ; call qword ptr [rax + 0x10fffc5d]
0x0000000000193e9a : cld ; call qword ptr [rax + 0x10fffc5f]
0x0000000000193e5e : cld ; call qword ptr [rax + 0x10fffc60]
0x0000000000193ea2 : cld ; call qword ptr [rax + 0x10fffc62]
0x0000000000193e66 : cld ; call qword ptr [rax + 0x10fffc63]
0x0000000000193dda : cld ; call qword ptr [rax + 0x10fffc6e]
0x0000000000193dd2 : cld ; call qword ptr [rax + 0x10fffc6f]
0x0000000000193dca : cld ; call qword ptr [rax + 0x10fffc70]
0x0000000000193dc2 : cld ; call qword ptr [rax + 0x10fffc71]
0x0000000000193dba : cld ; call qword ptr [rax + 0x10fffc72]
0x0000000000193df2 : cld ; call qword ptr [rax + 0x10fffc73]
0x0000000000194116 : cld ; call qword ptr [rax + 0x10fffc95]
0x000000000019410e : cld ; call qword ptr [rax + 0x10fffc96]
0x0000000000194106 : cld ; call qword ptr [rax + 0x10fffc97]
0x00000000001940fe : cld ; call qword ptr [rax + 0x10fffc98]
0x00000000001936ea : cld ; call qword ptr [rax + 0x20fffc27]
0x0000000000193bc6 : cld ; call qword ptr [rax + 0x20fffc7a]
0x0000000000193ee6 : cld ; call qword ptr [rax + 0x20fffc9d]
0x00000000001940be : cld ; call qword ptr [rax + 0x20fffca1]
0x0000000000193966 : cld ; call qword ptr [rax - 0x1f0003c3]
0x000000000019397a : cld ; call qword ptr [rax - 0x1f0003d1]
0x000000000019379a : cld ; call qword ptr [rax - 0x1f0003ef]
0x00000000001936e6 : cld ; call qword ptr [rax - 0x6f0003db]
0x00000000001936ba : cld ; call qword ptr [rax]
0x00000000001936ca : cld ; call rax
0x00000000001a8f54 : cld ; cmc ; add byte ptr [rax], al ; push rbp ; jmp qword ptr [rcx]
0x00000000001ad454 : cld ; cmp al, byte ptr [rcx] ; add byte ptr [rax + 0x55], ch ; cmc ; call qword ptr [rdx]
0x0000000000185e7a : cld ; dec dword ptr [rax - 0x42] ; cld ; ljmp ptr [rax - 0x41] ; cld ; dec dword ptr [rax] ; scasd eax, dword ptr [rdi] ; cld ; lcall ptr [rax] ; ret 0xfffc
0x000000000008ab77 : cld ; dec dword ptr [rax - 0x73] ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cdf3a : cld ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000006adef : cld ; dec dword ptr [rax - 0x7d] ; ret 0xbf08
0x0000000000185e82 : cld ; dec dword ptr [rax] ; scasd eax, dword ptr [rdi] ; cld ; lcall ptr [rax] ; ret 0xfffc
0x00000000001940aa : cld ; dec edx ; pushfq ; cld ; push qword ptr [rax - 0x64] ; cld ; jmp rax
0x00000000001a7254 : cld ; fadd dword ptr [rax] ; add al, ch ; push rsp ; int1 ; jmp qword ptr [rax]
0x0000000000193796 : cld ; inc dword ptr [rax + 0x10] ; cld ; call qword ptr [rax - 0x1f0003ef]
0x000000000019380a : cld ; inc dword ptr [rax + 0x10fffc50] ; cld ; call rax
0x00000000001937ea : cld ; inc dword ptr [rax + 0x17] ; cld ; lcall ptr [rax] ; cld ; jmp rax
0x000000000019369a : cld ; inc dword ptr [rax + 0x20] ; cld ; jmp qword ptr [rax]
0x000000000019371e : cld ; inc dword ptr [rax + 0x21] ; cld ; call qword ptr [rax]
0x0000000000193976 : cld ; inc dword ptr [rax + 0x2e] ; cld ; call qword ptr [rax - 0x1f0003d1]
0x0000000000193962 : cld ; inc dword ptr [rax + 0x3c] ; cld ; call qword ptr [rax - 0x1f0003c3]
0x00000000001938f6 : cld ; inc dword ptr [rax + 0x45] ; cld ; jmp qword ptr [rax]
0x0000000000193876 : cld ; inc dword ptr [rax + 0x46] ; cld ; jmp qword ptr [rax]
0x0000000000193842 : cld ; inc dword ptr [rax + 0x4c] ; cld ; inc dword ptr [rax + 0x4e] ; cld ; inc dword ptr [rax + 0x50] ; cld ; call rax
0x0000000000193846 : cld ; inc dword ptr [rax + 0x4e] ; cld ; inc dword ptr [rax + 0x50] ; cld ; call rax
0x000000000019384a : cld ; inc dword ptr [rax + 0x50] ; cld ; call rax
0x0000000000193bd2 : cld ; inc dword ptr [rax + 0x79] ; cld ; call rax
0x00000000001939ba : cld ; inc dword ptr [rax + 0x7c] ; cld ; call rax
0x0000000000193e1a : cld ; inc dword ptr [rax + 0xfffc6e] ; outsb dx, byte ptr [rsi] ; cld ; push qword ptr [rax + 0x6d] ; cld ; jmp rax
0x0000000000193986 : cld ; inc dword ptr [rax - 0x2f0003cd] ; xor al, 0xfc ; jmp qword ptr [rax]
0x00000000001937ba : cld ; inc dword ptr [rax - 0x2f0003f9] ; or ah, bh ; jmp qword ptr [rax]
0x0000000000193eb2 : cld ; inc dword ptr [rax - 0x5d] ; cld ; call rax
0x00000000001940ca : cld ; inc dword ptr [rax - 0x60] ; cld ; call rax
0x0000000000193806 : cld ; inc dword ptr [rax - 0x7f0003b2] ; push rax ; cld ; call qword ptr [rax]
0x0000000000193802 : cld ; inc dword ptr [rax - 0x7f0003b4] ; cld ; inc dword ptr [rax + 0x10fffc50] ; cld ; call rax
0x00000000001937fe : cld ; inc dword ptr [rax - 0x7f0003b6] ; cld ; inc dword ptr [rax - 0x7f0003b2] ; push rax ; cld ; call qword ptr [rax]
0x000000000019373e : cld ; inc dword ptr [rax] ; and esp, edi ; call rax
0x000000000019387e : cld ; inc dword ptr [rax] ; cld ; jmp rax
0x0000000000193bc2 : cld ; inc dword ptr [rax] ; jnp 0x193bcc ; call qword ptr [rax + 0x20fffc7a]
0x0000000000193e1e : cld ; inc dword ptr [rax] ; outsb dx, byte ptr [rsi] ; cld ; push qword ptr [rax + 0x6d] ; cld ; jmp rax
0x0000000000193e16 : cld ; inc dword ptr [rax] ; outsd dx, dword ptr [rsi] ; cld ; inc dword ptr [rax + 0xfffc6e] ; outsb dx, byte ptr [rsi] ; cld ; push qword ptr [rax + 0x6d] ; cld ; jmp rax
0x0000000000193ee2 : cld ; inc dword ptr [rax] ; sahf ; cld ; call qword ptr [rax + 0x20fffc9d]
0x0000000000194326 : cld ; inc dword ptr [rax] ; xchg eax, ebx ; cld ; push qword ptr [rax - 0x6e] ; cld ; call rax
0x0000000000194122 : cld ; inc dword ptr [rax] ; xchg eax, esp ; cld ; push qword ptr [rax - 0x6d] ; cld ; jmp rax
0x00000000000aad05 : cld ; inc dword ptr [rbx] ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x0000000000125330 : cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000193996 : cld ; inc eax ; cmp ah, bh ; call qword ptr [rax]
0x00000000001937ca : cld ; inc eax ; or al, 0xfc ; call qword ptr [rax]
0x0000000000193942 : cld ; inc eax ; xor esp, edi ; call qword ptr [rax]
0x00000000001942e2 : cld ; jmp qword ptr [rax + 0x10fffc93]
0x00000000001940f6 : cld ; jmp qword ptr [rax + 0x10fffc99]
0x0000000000193db2 : cld ; jmp qword ptr [rax + 0x20fffc73]
0x000000000019431a : cld ; jmp qword ptr [rax + 0x20fffc94]
0x0000000000194312 : cld ; jmp qword ptr [rax + 0x20fffc95]
0x000000000019430a : cld ; jmp qword ptr [rax + 0x20fffc96]
0x0000000000194302 : cld ; jmp qword ptr [rax + 0x20fffc97]
0x00000000001942fa : cld ; jmp qword ptr [rax + 0x20fffc98]
0x000000000019378e : cld ; jmp qword ptr [rax - 0xf0003f3]
0x000000000019369e : cld ; jmp qword ptr [rax]
0x000000000019366e : cld ; jmp rax
0x00000000001937ee : cld ; lcall ptr [rax] ; cld ; jmp rax
0x0000000000185e86 : cld ; lcall ptr [rax] ; ret 0xfffc
0x00000000001870b5 : cld ; lcall ptr [rdi] ; out dx, al ; call qword ptr [rax]
0x00000000001939ae : cld ; lcall ptr [rsi + 0x20fffc76] ; jge 0x1939c4 ; push qword ptr [rax + 0x40fffc7c] ; jl 0x1939cc ; call rax
0x0000000000185e7e : cld ; ljmp ptr [rax - 0x41] ; cld ; dec dword ptr [rax] ; scasd eax, dword ptr [rdi] ; cld ; lcall ptr [rax] ; ret 0xfffc
0x00000000001940a2 : cld ; ljmp ptr [rdx + 0x3afffc9d] ; popfq ; cld ; dec edx ; pushfq ; cld ; push qword ptr [rax - 0x64] ; cld ; jmp rax
0x000000000013e6fe : cld ; mov qword ptr [rdi + 0x18], rax ; mov eax, 1 ; ret
0x000000000002c176 : cld ; or al, 0xf ; xchg dword ptr [rdx], edx ; add dword ptr [rax], eax ; add byte ptr [rdi + 0x63], cl ; add al, 0x8b ; add r8, r11 ; jmp r8
0x00000000001b0954 : cld ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; cmp byte ptr [rbx - 0xa], ah ; jmp qword ptr [rsi]
0x000000000019393e : cld ; push qword ptr [rax + 0x30] ; cld ; inc eax ; xor esp, edi ; call qword ptr [rax]
0x00000000001942da : cld ; push qword ptr [rax + 0x30fffc94] ; xchg eax, esp ; cld ; jmp qword ptr [rax + 0x10fffc93]
0x00000000001942f2 : cld ; push qword ptr [rax + 0x30fffc99] ; cdq ; cld ; jmp qword ptr [rax + 0x20fffc98]
0x0000000000193992 : cld ; push qword ptr [rax + 0x37] ; cld ; inc eax ; cmp ah, bh ; call qword ptr [rax]
0x0000000000193bce : cld ; push qword ptr [rax + 0x40fffc79] ; jns 0x193bdc ; call rax
0x00000000001939b6 : cld ; push qword ptr [rax + 0x40fffc7c] ; jl 0x1939c4 ; call rax
0x000000000019390e : cld ; push qword ptr [rax + 0x41] ; cld ; jmp qword ptr [rax]
0x000000000019388e : cld ; push qword ptr [rax + 0x42] ; cld ; push qword ptr [rax] ; cld ; call qword ptr [rax]
0x00000000001938f2 : cld ; push qword ptr [rax + 0x43] ; cld ; inc dword ptr [rax + 0x45] ; cld ; jmp qword ptr [rax]
0x0000000000193e22 : cld ; push qword ptr [rax + 0x6d] ; cld ; jmp rax
0x0000000000193c1e : cld ; push qword ptr [rax + 0x6e] ; cld ; jmp rax
0x0000000000193c16 : cld ; push qword ptr [rax + 0x6f] ; cld ; push rax ; outsb dx, byte ptr [rsi] ; cld ; push qword ptr [rax + 0x6e] ; cld ; jmp rax
0x00000000001938ee : cld ; push qword ptr [rax + 0x70fffc41] ; cld ; inc dword ptr [rax + 0x45] ; cld ; jmp qword ptr [rax]
0x0000000000193bbe : cld ; push qword ptr [rax + 0x7b] ; cld ; inc dword ptr [rax] ; jnp 0x193bd0 ; call qword ptr [rax + 0x20fffc7a]
0x00000000001937c6 : cld ; push qword ptr [rax + 0xb] ; cld ; inc eax ; or al, 0xfc ; call qword ptr [rax]
0x0000000000193ede : cld ; push qword ptr [rax - 0x62] ; cld ; inc dword ptr [rax] ; sahf ; cld ; call qword ptr [rax + 0x20fffc9d]
0x00000000001940ae : cld ; push qword ptr [rax - 0x64] ; cld ; jmp rax
0x0000000000194126 : cld ; push qword ptr [rax - 0x6d] ; cld ; jmp rax
0x000000000019432a : cld ; push qword ptr [rax - 0x6e] ; cld ; call rax
0x00000000001942f6 : cld ; push qword ptr [rax] ; cdq ; cld ; jmp qword ptr [rax + 0x20fffc98]
0x000000000019385e : cld ; push qword ptr [rax] ; cld ; call qword ptr [rax]
0x00000000001938ae : cld ; push qword ptr [rax] ; cld ; push rax ; cld ; call rax
0x0000000000193ece : cld ; push qword ptr [rax] ; movabs al, byte ptr [0x9f50fffc9fc0fffc] ; cld ; jmp rax
0x0000000000193736 : cld ; push qword ptr [rax] ; sbb eax, 0x1f10fffc ; cld ; inc dword ptr [rax] ; and esp, edi ; call rax
0x00000000001942d6 : cld ; push qword ptr [rax] ; xchg eax, ebp ; cld ; push qword ptr [rax + 0x30fffc94] ; xchg eax, esp ; cld ; jmp qword ptr [rax + 0x10fffc93]
0x00000000001942de : cld ; push qword ptr [rax] ; xchg eax, esp ; cld ; jmp qword ptr [rax + 0x10fffc93]
0x0000000000193982 : cld ; push qword ptr [rax] ; xor bh, ah ; inc dword ptr [rax - 0x2f0003cd] ; xor al, 0xfc ; jmp qword ptr [rax]
0x00000000001937e6 : cld ; push rax ; adc eax, 0x1740fffc ; cld ; lcall ptr [rax] ; cld ; jmp rax
0x00000000001936be : cld ; push rax ; and esp, edi ; call rax
0x0000000000193e2e : cld ; push rax ; cld ; call qword ptr [rax]
0x000000000019389a : cld ; push rax ; cld ; call rax
0x000000000019395e : cld ; push rax ; cmp bh, ah ; inc dword ptr [rax + 0x3c] ; cld ; call qword ptr [rax - 0x1f0003c3]
0x0000000000193dee : cld ; push rax ; imul edi, esp, -1 ; nop ; jae 0x193dfc ; call qword ptr [rax]
0x0000000000193c1a : cld ; push rax ; outsb dx, byte ptr [rsi] ; cld ; push qword ptr [rax + 0x6e] ; cld ; jmp rax
0x0000000000193c12 : cld ; push rax ; outsd dx, dword ptr [rsi] ; cld ; push qword ptr [rax + 0x6f] ; cld ; push rax ; outsb dx, byte ptr [rsi] ; cld ; push qword ptr [rax + 0x6e] ; cld ; jmp rax
0x0000000000193972 : cld ; push rax ; sub al, 0xfc ; inc dword ptr [rax + 0x2e] ; cld ; call qword ptr [rax - 0x1f0003d1]
0x00000000001af054 : cld ; push rsi ; add dword ptr [rax], eax ; pop rax ; ret 0xfff5
0x00000000001b5a54 : cld ; rol byte ptr [rcx], 0 ; pop rax ; ret 0xfff7
0x00000000001168e4 : cld ; sub al, byte ptr [rax] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000116a53 : cld ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x116a69 ; xor eax, eax ; ret
0x0000000000116a83 : cld ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x116a99 ; xor eax, eax ; ret
0x0000000000116ab3 : cld ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x116ac9 ; xor eax, eax ; ret
0x0000000000116ae3 : cld ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x116af9 ; xor eax, eax ; ret
0x0000000000116ae2 : cld ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x116afa ; xor eax, eax ; ret
0x0000000000116b13 : cld ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x116b29 ; xor eax, eax ; ret
0x00000000000fe078 : cld ; sub eax, 0xc764002c ; add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000bc9dc : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000bc95e : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000009191c : cli ; add al, 0x73 ; adc eax, dword ptr [rax + 0x157701fa] ; jb 0x91936 ; mov byte ptr [rdi], cl ; ret
0x00000000001507cd : cli ; add al, 0x73 ; xor eax, dword ptr [rax + 0x3b7701fa] ; jb 0x1507ed ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000f7f31 : cli ; add al, 0x74 ; adc ecx, dword ptr [rax + 0x63] ; sar byte ptr [rax + 0x1c], cl ; syscall ; neg eax ; ret
0x0000000000131e93 : cli ; add byte ptr [rax], ah ; add byte ptr [rax], al ; jbe 0x131eb9 ; mov eax, 3 ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000ce970 : cli ; add byte ptr [rax], al ; add bl, al ; nop dword ptr [rax] ; mov eax, 0x7e ; ret
0x0000000000195d7d : cli ; add byte ptr [rax], al ; in al, 0x70 ; out dx, eax ; lcall ptr [rdx + rdi*8 + 0x71940000] ; out dx, eax ; call rsp
0x0000000000195d85 : cli ; add byte ptr [rax], al ; xchg eax, esp ; jno 0x195d80 ; call rsp
0x000000000004deb5 : cli ; add byte ptr ss:[rax - 0x77], cl ; ret 0x2948
0x000000000004038a : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000003d148 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x000000000004320f : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x894c
0x000000000003d171 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000075847 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000000ac8d9 : cli ; add cl, byte ptr [rax - 0x73] ; or byte ptr [r10 + r10 + 0x3b], r14b ; ja 0xac8fb ; cmove rax, rcx ; ret
0x0000000000153bca : cli ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000006130d : cli ; and dword ptr [rax], eax ; add byte ptr [rcx - 0x7afcb730], cl ; push -0x7c000006 ; ret 0x8908
0x000000000018a066 : cli ; call qword ptr [rax]
0x0000000000116c32 : cli ; cli ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x116c4a ; xor eax, eax ; ret
0x00000000000997ee : cli ; cmp r10b, r8b ; jb 0x997d8 ; mov rdx, rax ; jmp 0x99784
0x0000000000105fbc : cli ; dec dword ptr [rax + 0x39] ; ret
0x000000000003ac71 : cli ; dec dword ptr [rax + 0xf] ; ret
0x00000000000eb19e : cli ; dec dword ptr [rax + 1] ; ret
0x000000000018a04e : cli ; dec dword ptr [rax - 0x77000554] ; lodsb al, byte ptr [rsi] ; cli ; jmp rax
0x0000000000079521 : cli ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; lea esp, dword ptr [rdx + rdi*8 - 1] ; xor eax, eax ; pop rbx ; ret
0x0000000000079161 : cli ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; push -0x3fce0006 ; pop rbx ; ret
0x0000000000076fd8 : cli ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000077c28 : cli ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000018a05a : cli ; dec dword ptr [rax - 0xf000554] ; stosd dword ptr [rdi], eax ; cli ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; cli ; call qword ptr [rax]
0x00000000001194b2 : cli ; dec dword ptr [rdi] ; add byte ptr [rax], al ; jbe 0x1194c7 ; jmp 0x456d9
0x0000000000193db0 : cli ; imul edi, esp, -1 ; movabs al, byte ptr [0x90fffc7320fffc73] ; jb 0x193dca ; call qword ptr [rax]
0x000000000018a096 : cli ; inc dword ptr [rax + 0x50fffad2] ; sar edx, cl ; jmp rax
0x0000000000199322 : cli ; inc dword ptr [rax + rdx*2 - 0x72bfffe] ; cli ; ljmp ptr [rax + rdx*2 - 0x68bfffe] ; cli ; call rsp
0x000000000018a0a2 : cli ; inc dword ptr [rax - 0x1f00052e] ; sar edx, cl ; jmp rax
0x000000000018a06e : cli ; inc dword ptr [rax - 0x54] ; cli ; lcall ptr [rax - 0x54] ; cli ; push qword ptr [rax - 0x54] ; cli ; call qword ptr [rax]
0x000000000018a046 : cli ; inc dword ptr [rax - 0x55] ; cli ; lcall ptr [rax - 0x55] ; cli ; dec dword ptr [rax - 0x77000554] ; lodsb al, byte ptr [rsi] ; cli ; jmp rax
0x00000000000aacde : cli ; inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x000000000018a062 : cli ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; cli ; call qword ptr [rax]
0x000000000018a056 : cli ; jmp rax
0x00000000000cea28 : cli ; jnp 0xcea88 ; add byte ptr [rax], al ; je 0xcea81 ; mov eax, 0x20 ; ret
0x000000000018a072 : cli ; lcall ptr [rax - 0x54] ; cli ; push qword ptr [rax - 0x54] ; cli ; call qword ptr [rax]
0x000000000018a04a : cli ; lcall ptr [rax - 0x55] ; cli ; dec dword ptr [rax - 0x77000554] ; lodsb al, byte ptr [rsi] ; cli ; jmp rax
0x0000000000024db2 : cli ; lea eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0xbbe9
0x000000000019932a : cli ; ljmp ptr [rax + rdx*2 - 0x68bfffe] ; cli ; call rsp
0x000000000018a06a : cli ; ljmp ptr [rax] ; lodsb al, byte ptr [rsi] ; cli ; inc dword ptr [rax - 0x54] ; cli ; lcall ptr [rax - 0x54] ; cli ; push qword ptr [rax - 0x54] ; cli ; call qword ptr [rax]
0x0000000000198d32 : cli ; ljmp ptr [rcx + rbp + 2] ; add byte ptr [rsi + rcx*2 + 0x29bcfffa], ah ; add al, byte ptr [rax] ; push rsp ; cli ; jmp rsp
0x000000000003a8c2 : cli ; mov rax, rdi ; sar rdx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x000000000008a447 : cli ; mov rdi, r8 ; call rax
0x000000000011f6c0 : cli ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000000c3966 : cli ; movsxd rax, dword ptr [r8 + rdi*4] ; add rax, r8 ; jmp rax
0x0000000000148c96 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000bb6fe : cli ; or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x000000000007732c : cli ; or dword ptr [rax], eax ; add rsp, 0x80 ; mov eax, edx ; ret
0x00000000001035b9 : cli ; or dword ptr [rdi], ecx ; xchg edi, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000103051 : cli ; or dword ptr [rdi], ecx ; xchg edi, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000018a076 : cli ; push qword ptr [rax - 0x54] ; cli ; call qword ptr [rax]
0x000000000018a05e : cli ; push rax ; stosd dword ptr [rdi], eax ; cli ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; cli ; call qword ptr [rax]
0x0000000000091849 : cli ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000116932 : cli ; std ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x11694a ; xor eax, eax ; ret
0x0000000000116b24 : cli ; sub al, byte ptr [rax] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000116c33 : cli ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x116c49 ; xor eax, eax ; ret
0x0000000000116c63 : cli ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x116c79 ; xor eax, eax ; ret
0x0000000000116c93 : cli ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x116ca9 ; xor eax, eax ; ret
0x0000000000116cc3 : cli ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x116cd9 ; xor eax, eax ; ret
0x0000000000116cf3 : cli ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x116d09 ; xor eax, eax ; ret
0x000000000008db09 : cli ; test rdx, rdx ; je 0x8db29 ; bsf rax, rdx ; ret
0x000000000008db09 : cli ; test rdx, rdx ; je 0x8db2a ; bsf rax, rdx ; ret
0x000000000008daa8 : cli ; test rdx, rdx ; je 0x8db3d ; bsf rax, rdx ; ret
0x000000000008daa8 : cli ; test rdx, rdx ; je 0x8db3e ; bsf rax, rdx ; ret
0x000000000008dcd8 : cli ; test rdx, rdx ; je 0x8dd09 ; bsf rax, rdx ; ret
0x000000000008dcd8 : cli ; test rdx, rdx ; je 0x8dd0a ; bsf rax, rdx ; ret
0x000000000008dc68 : cli ; test rdx, rdx ; je 0x8dd1d ; bsf rax, rdx ; ret
0x000000000008dc68 : cli ; test rdx, rdx ; je 0x8dd1e ; bsf rax, rdx ; ret
0x00000000001811ca : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x000000000003044b : clts ; add byte ptr [rax - 0x77], cl ; ret
0x000000000014d208 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001a8ead : cmc ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001a8e95 : cmc ; add byte ptr [rax], al ; call 0x221a80f7
0x00000000001a8f55 : cmc ; add byte ptr [rax], al ; push rbp ; jmp qword ptr [rcx]
0x00000000001a8f25 : cmc ; add byte ptr [rax], al ; sbb byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001a8f3d : cmc ; add byte ptr [rax], al ; xor byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001986a5 : cmc ; add dword ptr [rax], eax ; add al, 0x39 ; stc ; inc dword ptr [rbp + rsi*8 + 0x45740001] ; stc ; call rsp
0x00000000001986ad : cmc ; add dword ptr [rax], eax ; je 0x1986fd ; stc ; call rsp
0x0000000000154066 : cmc ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000abff1 : cmc ; and ch, 0xf ; je 0xac01a ; add rax, 2 ; ret
0x00000000001ae472 : cmc ; call qword ptr [rax]
0x0000000000187b92 : cmc ; call rax
0x0000000000187e12 : cmc ; dec dword ptr [rax - 0x2b000a22] ; iretd ; cmc ; call rsp
0x00000000000cb5fe : cmc ; dec dword ptr [rax - 0x73] ; or byte ptr [r8 + 0x39], r9b ; ret
0x00000000000c7d52 : cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c9b41 : cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000187ce2 : cmc ; dec dword ptr [rdi + rbp] ; cmc ; push qword ptr [rdi - 0x14000ad1] ; cmc ; call rax
0x0000000000187e02 : cmc ; inc dword ptr [rax] ; fdivr st(5), st(0) ; call rsp
0x00000000001ac332 : cmc ; jmp qword ptr [rax]
0x00000000001add3a : cmc ; jmp rax
0x0000000000103506 : cmc ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000000e4c56 : cmc ; mov qword ptr [rsp + 0x28], rdi ; add rax, rdx ; jmp rax
0x00000000001195ec : cmc ; mov rbx, rax ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000079b9d : cmc ; mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001196ed : cmc ; mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000b3bec : cmc ; or eax, 0x590ff300 ; shl byte ptr [rdi + rax*8], 0x22 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000001a49f1 : cmc ; out dx, al ; call qword ptr [rax]
0x0000000000187e4a : cmc ; push qword ptr [rax - 0x32] ; cmc ; inc dword ptr [rbx - 0x20] ; cmc ; call rsp
0x0000000000187e46 : cmc ; push qword ptr [rax - 0x32] ; cmc ; push qword ptr [rax - 0x32] ; cmc ; inc dword ptr [rbx - 0x20] ; cmc ; call rsp
0x0000000000187ce6 : cmc ; push qword ptr [rdi - 0x14000ad1] ; cmc ; call rax
0x000000000006ac11 : cmc ; sar bh, cl ; dec dword ptr [rax - 0x7d] ; ret 0xbe08
0x00000000001727bf : cmc ; shr edx, 1 ; dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rax - 0x77] ; fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x0000000000098458 : cmova ebp, eax ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000098457 : cmova rbp, rax ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000007f769 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000074bc0 : cmovae eax, dword ptr [rdx + 8] ; sub rax, qword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x000000000007f768 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000074bbf : cmovae rax, qword ptr [rdx + 8] ; sub rax, qword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x000000000004aa80 : cmovae rax, rdi ; ret
0x0000000000126aab : cmovae rax, rdx ; ret
0x000000000010a4ab : cmovb rax, rdx ; ret
0x00000000000ee9ea : cmove eax, dword ptr [rbp - 0xa8] ; mov rdi, rax ; mov rax, qword ptr [rbp - 0xd8] ; call rax
0x0000000000117774 : cmove eax, edx ; mov qword ptr [rip + 0x2ad9a2], rax ; pop rbp ; ret
0x00000000000fe0be : cmove ebx, eax ; add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x000000000010732b : cmove edx, ecx ; mov rax, rbx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x00000000000f7f6a : cmove rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000000ff239 : cmove rax, rbx ; pop rbx ; ret
0x00000000000aace3 : cmove rax, rcx ; pop rbx ; ret
0x00000000000ac8e4 : cmove rax, rcx ; ret
0x0000000000091a59 : cmove rax, rdx ; add eax, 1 ; ret
0x00000000000bc7f1 : cmove rax, rdx ; add rsp, 0x28 ; ret
0x0000000000089c22 : cmove rax, rdx ; add rsp, 8 ; ret
0x0000000000117773 : cmove rax, rdx ; mov qword ptr [rip + 0x2ad9a2], rax ; pop rbp ; ret
0x00000000000aacab : cmove rax, rdx ; pop rbx ; ret
0x000000000002d87a : cmove rax, rdx ; ret
0x00000000000fe0bd : cmove rbx, rax ; add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000ca1c4 : cmove rcx, rax ; xor eax, eax ; call 0x56488
0x0000000000116743 : cmove rdx, rax ; xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x000000000010732a : cmove rdx, rcx ; mov rax, rbx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000002a611 : cmovg eax, edx ; mov dword ptr [rbx + 8], eax ; add rsp, 0x10 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007306a : cmovg rax, rcx ; test rdx, rdx ; jne 0x7306a ; ret
0x000000000007d02a : cmovg rax, rcx ; test rdx, rdx ; jne 0x7d02a ; ret
0x000000000008f8f1 : cmovne ecx, edi ; cmovne rsi, rdx ; bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x000000000002cac4 : cmovne edx, eax ; lea rax, qword ptr [rip + 0x395f52] ; mov byte ptr [rip + 0x395fa9], dl ; ret
0x000000000009846c : cmovne edx, edi ; add rsp, 8 ; mov rbp, rdx ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000008f8f5 : cmovne esi, edx ; bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x000000000003ac73 : cmovne rax, rbx ; pop rbx ; ret
0x0000000000143445 : cmovne rax, rdx ; add rsp, 8 ; ret
0x00000000000aad0b : cmovne rax, rdx ; pop rbx ; ret
0x0000000000045d0b : cmovne rax, rdx ; ret
0x0000000000102310 : cmovne rbp, rax ; call 0xfe616
0x000000000008f8f0 : cmovne rcx, rdi ; cmovne rsi, rdx ; bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x000000000009846b : cmovne rdx, rdi ; add rsp, 8 ; mov rbp, rdx ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000008f8f4 : cmovne rsi, rdx ; bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000110831 : cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x000000000003569f : cmovns rax, qword ptr [rsp + 0xa0] ; add rsp, 0x148 ; ret
0x00000000000fe9c8 : cmovns rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000000009e5 : cmovo edx, dword ptr [rdx] ; xor byte ptr [rdx + 0x310e2046], ch ; rol qword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x00000000000a8155 : cmovs ecx, dword ptr [rbp - 0x7af0f081] ; and byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x00000000000a6a81 : cmovs ecx, dword ptr [rbp - 0x7af0f081] ; in al, 6 ; add byte ptr [rax], al ; ret
0x000000000013e838 : cmovs ecx, dword ptr [rcx - 0x76b7df89] ; ja 0x13e869 ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000aac8e : cmovs esp, dword ptr [rbx + 0xc] ; xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x00000000000aad26 : cmovs esp, dword ptr [rbx + 4] ; xchg eax, esi ; add rax, rsi ; jmp rax
0x0000000000193999 : cmp ah, bh ; call qword ptr [rax]
0x000000000014d5d6 : cmp ah, byte ptr [rbx + 0x1f] ; adc dh, byte ptr [rbx - 0xc] ; movsxd rax, ecx ; add rax, rdi ; sub rax, rdx ; ret
0x000000000014d3a2 : cmp ah, byte ptr [rbx - 0x25] ; cmp cl, byte ptr [rax + 0x63] ; leave ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x000000000014a6fa : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014b25a : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014aa3a : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000014a21a : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000014ad7a : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a55a : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014af1a : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000014a07a : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a1b0 : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014aeb0 : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a9d0 : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b1f0 : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a010 : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013f146 : cmp al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001a8358 : cmp al, 0 ; add byte ptr [rax], al ; add al, 0xea ; add byte ptr [rax], al ; adc byte ptr [rcx], ah ; call rsi
0x00000000000e2bc7 : cmp al, 0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000001df4a : cmp al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18a6
0x00000000001b2f90 : cmp al, 0 ; add byte ptr [rax], al ; cmp al, 0x96 ; add dword ptr [rax], eax ; add rdi, rsi ; call rsi
0x00000000001a8860 : cmp al, 0 ; add byte ptr [rax], al ; or al, 0xef ; add byte ptr [rax], al ; sbb byte ptr [rcx], bh ; call rsi
0x00000000001af7d8 : cmp al, 0 ; add byte ptr [rax], al ; test byte ptr [rsi + 1], bl ; add al, dh ; jrcxz 0x1af7e3 ; call rsi
0x00000000001b6fd8 : cmp al, 0 ; add byte ptr [rax], al ; test dh, dl ; add dword ptr [rax], eax ; mov al, 0x2c ; clc ; jmp rdi
0x00000000001b40e8 : cmp al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; push rax ; jl 0x1b40f5 ; call rcx
0x000000000019a994 : cmp al, 0x10 ; add byte ptr [rax], al ; js 0x19aa17 ; std ; jmp qword ptr [rdi]
0x0000000000199644 : cmp al, 0x16 ; add dword ptr [rax], eax ; ret
0x000000000007d3a7 : cmp al, 0x24 ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000000acc5a : cmp al, 0x24 ; lea r9, qword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000014616c : cmp al, 0x24 ; mov rax, qword ptr [rax + 0x128] ; jmp rax
0x000000000012b79d : cmp al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000006d173 : cmp al, 0x29 ; ja 0x6d1f6 ; movzx eax, al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x0000000000121a09 : cmp al, 0x2a ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000fd18c : cmp al, 0x2c ; add byte ptr [rdi + rax*8], ah ; or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000cd1f4 : cmp al, 0x2f ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000c3844 : cmp al, 0x30 ; mov esi, eax ; mov ecx, eax ; jne 0xc383f ; nop dword ptr [rax] ; mov r10d, eax ; jmp 0xc3830
0x000000000008fcd1 : cmp al, 0x33 ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x000000000003927d : cmp al, 0x33 ; call rax
0x000000000007a725 : cmp al, 0x34 ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000003aa7c : cmp al, 0x38 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000001ad594 : cmp al, 0x3c ; add dword ptr [rax], eax ; sub byte ptr [rax - 0xb], bl ; jmp qword ptr [rcx]
0x0000000000194d94 : cmp al, 0x8b ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jb 0x194d94 ; call qword ptr [rbx + rcx*4]
0x00000000000bd498 : cmp al, 0x90 ; xor byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001b2f94 : cmp al, 0x96 ; add dword ptr [rax], eax ; add rdi, rsi ; call rsi
0x000000000019514c : cmp al, 0xa3 ; add byte ptr [rax], al ; je 0x1951e0 ; in al, dx ; lcall ptr [rbx + 0x7fd40000] ; in al, dx ; call rsp
0x00000000001a3f94 : cmp al, 0xa6 ; add byte ptr [rax], al ; fdivr dword ptr [rcx - 0x12] ; jmp qword ptr [rcx]
0x0000000000183cf5 : cmp al, 0xaa ; xchg esp, edi ; adc ch, byte ptr [rip + 0x8acc8c6] ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000035138 : cmp al, 0xbd ; cmp byte ptr [rax], al ; mov dword ptr fs:[rax], 0x22 ; add rsp, 0x28 ; ret
0x000000000019808c : cmp al, 0xcc ; add dword ptr [rax], eax ; test byte ptr [rsi - 8], al ; dec dword ptr [rsp + rcx*8 + 0x47e40001] ; clc ; call rsp
0x000000000012fd50 : cmp al, 0xd6 ; add byte ptr [rax], al ; test eax, eax ; jne 0x12fd78 ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001b7494 : cmp al, 0xdb ; add dword ptr [rax], eax ; fdivr dword ptr [rcx] ; clc ; call rax
0x00000000001a8e94 : cmp al, 0xf5 ; add byte ptr [rax], al ; call 0x221a80f8
0x00000000001a9094 : cmp al, 0xf7 ; add byte ptr [rax], al ; pop rax ; pop rbp ; jmp rcx
0x0000000000195d3c : cmp al, 0xf8 ; add byte ptr [rax], al ; in al, 0x67 ; out dx, eax ; inc dword ptr [rax + rdi*8 + 0x6a140000] ; out dx, eax ; jmp rsp
0x0000000000193965 : cmp al, 0xfc ; call qword ptr [rax - 0x1f0003c3]
0x00000000001ad5ad : cmp al, 1 ; add byte ptr [rax + 0x58], al ; cmc ; jmp qword ptr [rcx]
0x00000000001ad5c5 : cmp al, 1 ; add byte ptr [rax + 0x58], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001ad5dd : cmp al, 1 ; add byte ptr [rax + 0x58], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001ad63d : cmp al, 1 ; add byte ptr [rax], al ; pop rcx ; cmc ; jmp qword ptr [rdx]
0x00000000001ad595 : cmp al, 1 ; add byte ptr [rax], ch ; pop rax ; cmc ; jmp qword ptr [rcx]
0x000000000016d8c3 : cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a6c30 : cmp al, 5 ; add byte ptr [rax], al ; ret
0x0000000000105100 : cmp al, 6 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000f4bca : cmp al, 9 ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x0000000000099d6d : cmp al, bh ; jb 0x99d56 ; mov rdx, rax ; jmp 0x99d0d
0x000000000007e540 : cmp al, bl ; nop word ptr [rax + rax] ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x00000000000857c2 : cmp al, bl ; xor eax, dword ptr [rax] ; jne 0x857df ; jmp 0x857f9
0x000000000007285b : cmp al, byte ptr [rax + 0xf] ; mov dh, 0xc7 ; ret
0x000000000005fa82 : cmp al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000207a5 : cmp al, byte ptr [rax] ; add rax, qword ptr fs:[0] ; ret
0x000000000001fd6b : cmp al, byte ptr [rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000020da5 : cmp al, byte ptr [rax] ; mov dword ptr fs:[rax], 9 ; mov eax, edi ; ret
0x000000000001fa38 : cmp al, byte ptr [rax] ; mov qword ptr [rip + 0x3a68c7], rdx ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000001fb7e : cmp al, byte ptr [rax] ; neg eax ; mov dword ptr fs:[rdx], eax ; mov rax, rbp ; cmp r9, rax ; je 0x1fb39 ; jmp 0x1fb62
0x000000000001fa3f : cmp al, byte ptr [rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000215c5 : cmp al, byte ptr [rax] ; ret
0x0000000000020404 : cmp al, byte ptr [rax] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000098bd4 : cmp al, byte ptr [rcx + 0xf] ; mov dh, 1 ; test al, al ; jne 0x98c4c ; mov rax, rdi ; ret
0x00000000001ad455 : cmp al, byte ptr [rcx] ; add byte ptr [rax + 0x55], ch ; cmc ; call qword ptr [rdx]
0x0000000000032942 : cmp al, byte ptr [rcx] ; cmp dword ptr [rax], eax ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x000000000012eeed : cmp al, byte ptr [rsi] ; add byte ptr [rsi + 1], bh ; mov rdi, r15 ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000001fa37 : cmp al, byte ptr cs:[rax] ; mov qword ptr [rip + 0x3a68c7], rdx ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000072a53 : cmp al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; imul edi, esi, 0xc48148ff ; fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001029cc : cmp al, ch ; sub eax, dword ptr [rax] ; ret
0x000000000009993d : cmp al, cl ; jb 0x99926 ; mov rdx, rax ; jmp 0x998cf
0x000000000009aafd : cmp al, cl ; jb 0x9aae6 ; mov rdx, rax ; jmp 0x9aa8f
0x000000000009bb95 : cmp al, cl ; jb 0x9bb7e ; mov rdx, rax ; jmp 0x9bb2f
0x000000000009d808 : cmp al, cl ; jb 0x9d7f1 ; mov rdx, rax ; jmp 0x9d7af
0x00000000000881c7 : cmp bh, 0xff ; mov rsi, rbp ; mov rdi, rax ; mov rbx, rax ; call 0x844de
0x0000000000193961 : cmp bh, ah ; inc dword ptr [rax + 0x3c] ; cld ; call qword ptr [rax - 0x1f0003c3]
0x0000000000110fa6 : cmp bh, byte ptr [rax] ; je 0x110fce ; mov rdx, rax ; jmp 0x110fbb
0x000000000003ab06 : cmp bh, byte ptr [rcx + 0x38] ; add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000001169f2 : cmp bh, ch ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x116a0a ; xor eax, eax ; ret
0x0000000000099b4d : cmp bh, cl ; jb 0x99b36 ; mov rdx, rax ; jmp 0x99aef
0x000000000001c2f8 : cmp bh, dh ; cmp eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000116cf2 : cmp bh, dl ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x116d0a ; xor eax, eax ; ret
0x00000000001af088 : cmp bl, al ; cmc ; jmp rax
0x000000000013d258 : cmp bl, al ; nop word ptr [rax + rax] ; mov eax, 1 ; ret
0x0000000000146a50 : cmp bl, al ; nop word ptr [rax + rax] ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000000001940a8 : cmp bl, byte ptr [rbp - 0x63350004] ; cld ; push qword ptr [rax - 0x64] ; cld ; jmp rax
0x0000000000112578 : cmp byte ptr [r8 - 0x75], cl ; push rbx ; and byte ptr [rax + 0x2b], cl ; xor r9b, bpl ; ret
0x000000000006f8b3 : cmp byte ptr [r8], al ; add byte ptr [rax + 1], bh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000709f2 : cmp byte ptr [rax + 0x39], cl ; ret
0x00000000000e1067 : cmp byte ptr [rax + 0x63], cl ; ret
0x0000000000125c1f : cmp byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 1], cl ; sal esi, cl ; ret
0x00000000000e8427 : cmp byte ptr [rax + 0xc7710f9], al ; movzx edx, cl ; movsxd rdx, dword ptr [r15 + rdx*4] ; add rdx, r15 ; jmp rdx
0x0000000000047494 : cmp byte ptr [rax + 1], 0 ; jne 0x47498 ; pop rbx ; ret
0x00000000000741a7 : cmp byte ptr [rax + 1], bh ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001381a7 : cmp byte ptr [rax + 1], bh ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000111ad6 : cmp byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000138196 : cmp byte ptr [rax + 1], bh ; ret
0x0000000000090e17 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x00000000000e7be4 : cmp byte ptr [rax + 1], cl ; ret 0xc748
0x00000000001077fe : cmp byte ptr [rax + 3], bh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000086794 : cmp byte ptr [rax + 8], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x000000000013210a : cmp byte ptr [rax + 9], cl ; ret 0x894c
0x000000000011f6f6 : cmp byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013736a : cmp byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000100897 : cmp byte ptr [rax + rax], ch ; mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x000000000011074c : cmp byte ptr [rax - 0x3c41f0e8], cl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000231e3 : cmp byte ptr [rax - 0x73], cl ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000026683 : cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000136b90 : cmp byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x0000000000025cdb : cmp byte ptr [rax - 0x75], cl ; je 0x25d0f ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000027db4 : cmp byte ptr [rax - 0x75], cl ; je 0x27de9 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000028d64 : cmp byte ptr [rax - 0x75], cl ; je 0x28d99 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000000bc1a3 : cmp byte ptr [rax - 0x75], cl ; jl 0xbc1d3 ; call r15
0x00000000000bc696 : cmp byte ptr [rax - 0x75], cl ; jl 0xbc6c6 ; call r15
0x0000000000112579 : cmp byte ptr [rax - 0x75], cl ; push rbx ; and byte ptr [rax + 0x2b], cl ; xor r9b, bpl ; ret
0x0000000000104234 : cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x000000000013d243 : cmp byte ptr [rax - 0x77], cl ; cli ; xor eax, eax ; mov dword ptr [rsp], 2 ; mov rdi, rsp ; call rdx
0x0000000000121629 : cmp byte ptr [rax - 0x77], cl ; mov esp, 0x14024 ; add al, ch ; stc ; ret
0x0000000000115ea3 : cmp byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00000000001161fa : cmp byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000116039 : cmp byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov edx, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000115f02 : cmp byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov edx, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x0000000000115f91 : cmp byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov edx, dword ptr [rcx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x000000000013782e : cmp byte ptr [rax - 0x77], cl ; push rsi ; or byte ptr [rax - 0x75], cl ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000113a64 : cmp byte ptr [rax - 0x77], cl ; ret
0x00000000001140a3 : cmp byte ptr [rax - 0x77], cl ; ret 0x2b49
0x000000000007547c : cmp byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000000f5622 : cmp byte ptr [rax - 0x77], cl ; ret 0x4de9
0x00000000000e4d90 : cmp byte ptr [rax - 0x77], cl ; ret 0x8945
0x000000000004ac2f : cmp byte ptr [rax - 0x77], cl ; xlatb ; mov byte ptr [rsi], al ; jne 0x4ac1b ; mov rax, rsi ; ret
0x000000000012e915 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x00000000001304ee : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x0000000000134aee : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rcx + rcx + 0x48], 0x8d ; mov ebx, 0xc8 ; call rax
0x00000000001356b7 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x1356db ; call rax
0x00000000001356b6 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x1356dc ; call rax
0x000000000013b877 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x13b89b ; call rax
0x000000000013b876 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x13b89c ; call rax
0x000000000013bf90 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x13bfb4 ; call rax
0x000000000013bf8f : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x13bfb5 ; call rax
0x000000000013788b : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x137907 ; call rax
0x000000000013788a : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x137908 ; call rax
0x00000000001382eb : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x138357 ; call rax
0x00000000001382ea : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x138358 ; call rax
0x00000000000252df : cmp byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000012b13f : cmp byte ptr [rax - 1], 0x5b ; pop rbp ; pop r12 ; ret
0x0000000000100752 : cmp byte ptr [rax - 1], bh ; ret
0x0000000000098cc0 : cmp byte ptr [rax], 0 ; je 0x98d01 ; add rax, 1 ; sub rsi, 1 ; jne 0x98cd1 ; xor eax, eax ; ret
0x0000000000169e98 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000000a5a09 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000090e06 : cmp byte ptr [rax], ah ; ret
0x000000000006f8b4 : cmp byte ptr [rax], al ; add byte ptr [rax + 1], bh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013f5e5 : cmp byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000003a98c : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000003ab08 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000108d4b : cmp byte ptr [rax], al ; add byte ptr [rax], al ; syscall ; test rax, rax ; jl 0x108d94 ; je 0x108d66 ; ret
0x000000000003b355 : cmp byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000014d3da : cmp byte ptr [rax], al ; enter 0xf66, 0x3a ; movsxd rcx, ecx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000014d4fe : cmp byte ptr [rax], al ; fldenv dword ptr [rsi + 0xf] ; cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000007d7d3 : cmp byte ptr [rax], al ; je 0x7d7e4 ; ret
0x0000000000098cc1 : cmp byte ptr [rax], al ; je 0x98d00 ; add rax, 1 ; sub rsi, 1 ; jne 0x98cd0 ; xor eax, eax ; ret
0x00000000000ba72e : cmp byte ptr [rax], al ; je 0xba744 ; add dword ptr [rax + 0x10], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003ad92 : cmp byte ptr [rax], al ; jne 0x3ada8 ; jmp 0x3adc2
0x00000000000868ca : cmp byte ptr [rax], al ; jne 0x868f0 ; add rax, 8 ; cmp rdx, rax ; ja 0x868d8 ; xor eax, eax ; ret
0x00000000000357c5 : cmp byte ptr [rax], al ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000000356cd : cmp byte ptr [rax], al ; mov dword ptr fs:[rax], 0x16 ; mov rax, -1 ; ret
0x0000000000034e1d : cmp byte ptr [rax], al ; mov dword ptr fs:[rax], 0x22 ; add rsp, 0x28 ; ret
0x000000000003546f : cmp byte ptr [rax], al ; mov dword ptr fs:[rax], 0x22 ; add rsp, 8 ; ret
0x0000000000036455 : cmp byte ptr [rax], al ; mov dword ptr fs:[rax], 0x26 ; mov eax, 0xffffffff ; ret
0x000000000003418d : cmp byte ptr [rax], al ; mov dword ptr fs:[rax], 0x2a ; mov rax, rcx ; ret
0x00000000000341f5 : cmp byte ptr [rax], al ; mov dword ptr fs:[rax], 9 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000036c0f : cmp byte ptr [rax], al ; mov eax, edx ; ret
0x0000000000035ab5 : cmp byte ptr [rax], al ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000035a85 : cmp byte ptr [rax], al ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000036bc4 : cmp byte ptr [rax], al ; ret
0x000000000003a5d7 : cmp byte ptr [rax], al ; xor esi, esi ; ror rdx, 0x11 ; xor rdx, qword ptr fs:[0x30] ; call rdx
0x000000000013b7a9 : cmp byte ptr [rax], bl ; je 0x13b7b4 ; ret
0x00000000000e901a : cmp byte ptr [rax], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008be10 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x00000000000a0c56 : cmp byte ptr [rax], dh ; ret
0x00000000001112aa : cmp byte ptr [rax], dl ; je 0x1112d2 ; mov rdx, r8 ; jmp 0x1112c2
0x0000000000090df6 : cmp byte ptr [rax], dl ; ret
0x0000000000090df5 : cmp byte ptr [rax], r10b ; ret
0x0000000000090e05 : cmp byte ptr [rax], r12b ; ret
0x00000000000a0c55 : cmp byte ptr [rax], r14b ; ret
0x000000000008be0f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000002cb19 : cmp byte ptr [rbx + 0x13], dh ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000109a3c : cmp byte ptr [rbx + rbp], dh ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000119bb3 : cmp byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010ef8a : cmp byte ptr [rbx], ch ; add byte ptr [rax - 0x77], cl ; ret 0x9ee9
0x000000000013b607 : cmp byte ptr [rcx - 0x75], al ; push rbp ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000098dc0 : cmp byte ptr [rcx], 0 ; je 0x98e01 ; add rcx, 1 ; sub rax, 1 ; jne 0x98dd1 ; pop rbx ; pop rbp ; ret
0x000000000007d42c : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp + 0x20] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000000bc502 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003c9a2 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000169e99 : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x00000000000a5a0a : cmp byte ptr [rcx], al ; sbb rax, -1 ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000a8044 : cmp byte ptr [rcx], cl ; add byte ptr [rax], al ; ret
0x00000000000dae84 : cmp byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000dae83 : cmp byte ptr [rcx], r14b ; ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000034ea7 : cmp byte ptr [rdi + 0x2d], 0 ; add byte ptr [rax + 0x1fe8c17f], al ; ret
0x00000000000a06a4 : cmp byte ptr [rdi + rax], dl ; je 0xa06a6 ; ret
0x0000000000072d6f : cmp byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000cea41 : cmp byte ptr [rsi], ah ; setne al ; movzx eax, al ; neg rax ; or rax, 0x20 ; ret
0x00000000000ce911 : cmp byte ptr [rsi], ah ; setne al ; movzx eax, al ; neg rax ; or rax, 0x7f ; ret
0x00000000000ceb21 : cmp byte ptr [rsi], ah ; setne al ; movzx eax, al ; neg rax ; or rax, 1 ; ret
0x000000000012f0b5 : cmp byte ptr [rsi], al ; add byte ptr [rsi + 2], bh ; mov rdi, r13 ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000b1ad6 : cmp byte ptr [rsi], dh ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000100896 : cmp byte ptr ss:[rax + rax], ch ; mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x000000000011109c : cmp ch, 0xff ; dec dword ptr [rcx - 0x75] ; push rdi ; sbb byte ptr [rax - 0x77], cl ; ret
0x000000000013bf11 : cmp ch, dh ; dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000014d3a5 : cmp cl, byte ptr [rax + 0x63] ; leave ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x00000000000aa494 : cmp cl, byte ptr [rax + rdx + 2] ; jne 0xaa4bf ; movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xaa49f ; ret
0x00000000000aa544 : cmp cl, byte ptr [rax + rdx + 2] ; jne 0xaa56f ; movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xaa54f ; ret
0x00000000000627df : cmp cl, byte ptr [rax - 0x73] ; add qword ptr [rax - 0x77], rcx ; lea esi, dword ptr [rax - 0x77000005] ; add cl, byte ptr [rax - 0x7d] ; ret
0x00000000000834d9 : cmp cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000002d4a4 : cmp cl, byte ptr [rax - 0x7d] ; ret
0x0000000000136547 : cmp cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000118881 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xffe4
0x00000000001a28f8 : cmp cl, cl ; in eax, dx ; jmp qword ptr [rax]
0x000000000003a935 : cmp dh, byte ptr [rcx] ; rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x00000000000881c6 : cmp dil, 0xff ; mov rsi, rbp ; mov rdi, rax ; mov rbx, rax ; call 0x844df
0x0000000000110fa5 : cmp dil, byte ptr [rax] ; je 0x110fcf ; mov rdx, rax ; jmp 0x110fbc
0x0000000000099b4c : cmp dil, r9b ; jb 0x99b37 ; mov rdx, rax ; jmp 0x99af0
0x00000000000997f0 : cmp dl, al ; jb 0x997d6 ; mov rdx, rax ; jmp 0x99782
0x00000000000ac7ed : cmp dword ptr [r10], eax ; jne 0xac879 ; test eax, eax ; jne 0xac7dd ; mov rax, rdi ; ret
0x000000000002e2e3 : cmp dword ptr [r8], r8d ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000034173 : cmp dword ptr [r9 + rdx*4 + 4], r11d ; jne 0x34170 ; mov eax, dword ptr [r9 + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x00000000000740d8 : cmp dword ptr [rax + 0x30], 0 ; je 0x740e6 ; ret
0x00000000000798bf : cmp dword ptr [rax + 0x30], 0 ; je 0x798d4 ; add rsp, 0x38 ; ret
0x00000000000afb11 : cmp dword ptr [rax + 0x63], ecx ; ret
0x0000000000134c81 : cmp dword ptr [rax + 0xf000000], 0x48c089c8 ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000116661 : cmp dword ptr [rax + 8], edi ; je 0x116688 ; add rax, 0x48 ; cmp rax, rdx ; jb 0x116670 ; xor eax, eax ; ret
0x0000000000134c9e : cmp dword ptr [rax - 0x48000000], 1 ; ret
0x00000000000c3836 : cmp dword ptr [rax - 0x7d], ecx ; ret
0x000000000003bf6b : cmp dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000ba72d : cmp dword ptr [rax], 0 ; je 0xba745 ; add dword ptr [rax + 0x10], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000868c9 : cmp dword ptr [rax], 0 ; jne 0x868f1 ; add rax, 8 ; cmp rdx, rax ; ja 0x868d9 ; xor eax, eax ; ret
0x000000000013b7a8 : cmp dword ptr [rax], 0x18 ; je 0x13b7b5 ; ret
0x0000000000079e98 : cmp dword ptr [rax], 0x1d ; je 0x79e75 ; add rsp, 0x18 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00000000000cea40 : cmp dword ptr [rax], 0x26 ; setne al ; movzx eax, al ; neg rax ; or rax, 0x20 ; ret
0x00000000000ce910 : cmp dword ptr [rax], 0x26 ; setne al ; movzx eax, al ; neg rax ; or rax, 0x7f ; ret
0x00000000000ceb20 : cmp dword ptr [rax], 0x26 ; setne al ; movzx eax, al ; neg rax ; or rax, 1 ; ret
0x000000000002e065 : cmp dword ptr [rax], eax ; add rax, qword ptr fs:[0] ; ret
0x0000000000098dc1 : cmp dword ptr [rax], eax ; je 0x98e00 ; add rcx, 1 ; sub rax, 1 ; jne 0x98dd0 ; pop rbx ; pop rbp ; ret
0x000000000002cacc : cmp dword ptr [rax], eax ; mov byte ptr [rip + 0x395fa9], dl ; ret
0x000000000002af7b : cmp dword ptr [rax], eax ; mov qword ptr [r14], rcx ; mov rcx, qword ptr [rax + r15*8] ; test rcx, rcx ; je 0x2af99 ; call rcx
0x000000000002d940 : cmp dword ptr [rax], eax ; mov qword ptr [rax], rdx ; ret
0x000000000002adf1 : cmp dword ptr [rax], eax ; mov qword ptr [rbp + r12*8], r15 ; mov rax, qword ptr [rax + r12*8] ; test rax, rax ; je 0x2ae13 ; call rax
0x000000000002e109 : cmp dword ptr [rax], eax ; mov qword ptr fs:[rdx], rax ; ret
0x000000000002cb55 : cmp dword ptr [rax], eax ; mov rax, qword ptr fs:[rax] ; mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000002d985 : cmp dword ptr [rax], eax ; movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000002de35 : cmp dword ptr [rax], eax ; movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000029a05 : cmp dword ptr [rax], eax ; ret
0x000000000002ac38 : cmp dword ptr [rax], eax ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000035604 : cmp dword ptr [rax], eax ; test eax, eax ; jne 0x35617 ; ret
0x000000000002aefc : cmp dword ptr [rax], eax ; xor ebx, ebx ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x000000000004a931 : cmp dword ptr [rax], edx ; je 0x4a94e ; sub r8, 4 ; cmp rdi, r8 ; jbe 0x4a93e ; ret
0x000000000004a991 : cmp dword ptr [rax], edx ; je 0x4a952 ; sub r8, 4 ; cmp rdi, r8 ; jbe 0x4a9a1 ; nop ; pop rbx ; ret
0x000000000003af19 : cmp dword ptr [rax], esi ; add byte ptr [rax], al ; and edx, 0x7fffffff ; mov dword ptr [r8], edx ; mov dword ptr [rsi], edx ; ret
0x000000000002e457 : cmp dword ptr [rax], r8d ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000f101e : cmp dword ptr [rbp], ebx ; mov qword ptr [r12], rax ; je 0xf100a ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000110828 : cmp dword ptr [rbx + 0x28], 0 ; mov eax, 0 ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000001092f3 : cmp dword ptr [rbx + 0x2b], 0x64d8f700 ; mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f833b : cmp dword ptr [rbx - 0x389bffd4], ecx ; add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000015a628 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000071d6c : cmp dword ptr [rbx], ecx ; je 0x71d8f ; or ebp, edx ; mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079cdc : cmp dword ptr [rbx], ecx ; je 0x79cff ; or ebp, edx ; mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002ac7b : cmp dword ptr [rcx + rdi], 0x11c8c148 ; xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000034174 : cmp dword ptr [rcx + rdx*4 + 4], ebx ; jne 0x3416f ; mov eax, dword ptr [r9 + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x0000000000071d6b : cmp dword ptr [rcx], 0xb ; je 0x71d90 ; or ebp, edx ; mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079cdb : cmp dword ptr [rcx], 0xb ; je 0x79d00 ; or ebp, edx ; mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007f765 : cmp dword ptr [rdi + 0x10], eax ; cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000079101 : cmp dword ptr [rdi + 0x10], eax ; jb 0x7913e ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000794d1 : cmp dword ptr [rdi + 0x10], eax ; jb 0x794cc ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000013eaba : cmp dword ptr [rdi + 0x20], esi ; jbe 0x13eadc ; add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000000cd1f3 : cmp dword ptr [rdi + rbp], 0x64d8f700 ; mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001bbf4c : cmp dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 8
0x0000000000074bbc : cmp dword ptr [rdx + 8], eax ; cmovae rax, qword ptr [rdx + 8] ; sub rax, qword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x0000000000198f65 : cmp dword ptr [rdx], eax ; add byte ptr [rcx*4 + 0x3974fffa], dh ; add al, byte ptr [rax] ; mov ah, 0x8d ; cli ; jmp rsp
0x00000000000ac7ee : cmp dword ptr [rdx], eax ; jne 0xac878 ; test eax, eax ; jne 0xac7dc ; mov rax, rdi ; ret
0x00000000000bf073 : cmp dword ptr [rsi + 0x48000000], -0x77 ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000059f44 : cmp dword ptr [rsi], esi ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000001462d1 : cmp dword ptr [rsp + 0x18], 0 ; mov rax, qword ptr [rsp + 0x38] ; jne 0x1462c8 ; add rsp, 0x48 ; ret
0x000000000002e084 : cmp dword ptr cs:[rax], eax ; add rax, qword ptr fs:[0] ; ret
0x000000000002e108 : cmp dword ptr cs:[rax], eax ; mov qword ptr fs:[rdx], rax ; ret
0x000000000003027b : cmp dword ptr es:[rax], eax ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x000000000002e456 : cmp dword ptr es:[rax], r8d ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x000000000013b7a7 : cmp dword ptr fs:[rax], 0x18 ; je 0x13b7b6 ; ret
0x0000000000079e97 : cmp dword ptr fs:[rax], 0x1d ; je 0x79e76 ; add rsp, 0x18 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00000000000cea3f : cmp dword ptr fs:[rax], 0x26 ; setne al ; movzx eax, al ; neg rax ; or rax, 0x20 ; ret
0x00000000000ce90f : cmp dword ptr fs:[rax], 0x26 ; setne al ; movzx eax, al ; neg rax ; or rax, 0x7f ; ret
0x00000000000ceb1f : cmp dword ptr fs:[rax], 0x26 ; setne al ; movzx eax, al ; neg rax ; or rax, 1 ; ret
0x0000000000071d6a : cmp dword ptr fs:[rcx], 0xb ; je 0x71d91 ; or ebp, edx ; mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079cda : cmp dword ptr fs:[rcx], 0xb ; je 0x79d01 ; or ebp, edx ; mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bbae3 : cmp eax, 0x19 ; jg 0xbbb09 ; mov rax, rbx ; pop rbx ; ret
0x0000000000172582 : cmp eax, 0x2512c8 ; add byte ptr [rsi + rax - 0x17], dh ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; ret
0x000000000006d8db : cmp eax, 0x29 ; ja 0x6d980 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x0000000000122ee2 : cmp eax, 0x2a2815 ; call rax
0x0000000000122633 : cmp eax, 0x2a3068 ; call rax
0x000000000011704c : cmp eax, 0x2af6f7 ; cmp rdx, rax ; jne 0x11703b ; ret
0x0000000000193969 : cmp eax, 0x3ee0fffc ; cld ; jmp qword ptr [rax]
0x00000000000ceb03 : cmp eax, 0x4d44 ; je 0xceb23 ; cmp rax, 0x7275 ; jne 0xceafc ; xor eax, eax ; ret
0x0000000000134b3f : cmp eax, 0x554fc ; mov esi, esi ; movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x00000000000bbbc7 : cmp eax, 0x71 ; jg 0xbbc00 ; lea rax, qword ptr [rip + 0x307ded] ; add rsp, 8 ; ret
0x000000000016031f : cmp eax, 0x8b000146 ; or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000102afa : cmp eax, 0x90c48148 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x000000000002eb36 : cmp eax, 0xa ; ja 0x2e866 ; movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000008fb06 : cmp eax, 0xc1480033 ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x00000000000c5a63 : cmp eax, 0xc16ec ; mov esi, edx ; movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x00000000000fd136 : cmp eax, 0xc764002c ; add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000fd0e7 : cmp eax, 0xd8f7002c ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd117 : cmp eax, 0xd8f7002f ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000048930 : cmp eax, 0xf8 ; jne 0x48928 ; mov rax, rdx ; ret
0x0000000000089c1f : cmp eax, 0xff ; cmove rax, rdx ; add rsp, 8 ; ret
0x000000000006f040 : cmp eax, 0xff ; je 0x6f05e ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000fe123 : cmp eax, 0xff ; je 0xfe094 ; add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000ccf66 : cmp eax, 0xff ; mov edx, 0 ; cmove rax, rdx ; ret
0x00000000001177d8 : cmp eax, 0xfffffe93 ; call rax
0x000000000013d370 : cmp eax, 1 ; jne 0x13d36a ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x0000000000087dae : cmp eax, 9 ; ja 0x87d60 ; movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000001b03a : cmp eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000cd761 : cmp eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xcd77e ; ret
0x000000000010e3d4 : cmp eax, dword ptr [rax] ; mov edx, 0x22 ; je 0x10e3f7 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000795a1 : cmp eax, dword ptr [rbp + 0x20] ; mov qword ptr [rbp + 0x18], rax ; ja 0x795c8 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000128f0f : cmp eax, dword ptr [rcx - 0x80] ; jmp qword ptr [rax]
0x00000000001ad505 : cmp eax, dword ptr [rcx] ; add byte ptr [rax + 0x57], ch ; cmc ; jmp qword ptr [rcx]
0x00000000000873de : cmp eax, dword ptr [rcx] ; add byte ptr [rax], al ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x0000000000079945 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x79970 ; lea rdx, qword ptr [rax + 1] ; mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000007997c : cmp eax, dword ptr [rdi + 0x10] ; jae 0x799a0 ; lea rdx, qword ptr [rax + 1] ; mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000007b515 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x7b528 ; movzx eax, byte ptr [rax] ; ret
0x0000000000070ba8 : cmp eax, eax ; jbe 0x70c19 ; mov rax, qword ptr [rbp + 0x48] ; add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000007da44 : cmp eax, eax ; jbe 0x7da65 ; mov rax, qword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000073068 : cmp eax, ecx ; cmovg rax, rcx ; test rdx, rdx ; jne 0x7306c ; ret
0x000000000007d028 : cmp eax, ecx ; cmovg rax, rcx ; test rdx, rdx ; jne 0x7d02c ; ret
0x00000000000ab047 : cmp eax, ecx ; ja 0xab06b ; sub rdi, 0x10 ; add rax, rdi ; ret
0x000000000007389f : cmp eax, ecx ; jbe 0x7392a ; mov rax, qword ptr [rbp + 0x20] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000007d378 : cmp eax, ecx ; jbe 0x7d39d ; mov rax, qword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000007de64 : cmp eax, ecx ; jbe 0x7de91 ; mov rax, qword ptr [rbx + 0x48] ; add rsp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000003b07 : cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000110f9f : cmp eax, ecx ; mov esi, edi ; jae 0x110fcb ; cmp dil, byte ptr [rax] ; je 0x110fd5 ; mov rdx, rax ; jmp 0x110fc2
0x00000000001b7499 : cmp eax, edi ; call rax
0x00000000000aaf7b : cmp eax, edx ; ja 0xab06e ; add rax, rdi ; add rax, rcx ; ret
0x000000000007f27b : cmp eax, edx ; jae 0x7f2a7 ; movzx eax, byte ptr [rax] ; ret
0x000000000013abe1 : cmp eax, edx ; je 0x13abfc ; sub rax, -0x80 ; add rsp, 8 ; ret
0x000000000013ac11 : cmp eax, edx ; je 0x13ac2e ; add rax, 0xa0 ; add rsp, 8 ; ret
0x000000000013ac41 : cmp eax, edx ; je 0x13ac5e ; add rax, 0xa8 ; add rsp, 8 ; ret
0x000000000010230c : cmp eax, edx ; mov edx, ebx ; cmovne rbp, rax ; call 0xfe61a
0x000000000002d871 : cmp eax, edx ; mov rdx, -1 ; cmove rax, rdx ; ret
0x000000000007d471 : cmp eax, esi ; jae 0x7d403 ; movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013a58f : cmp ebp, 0xff ; mov byte ptr [rax], 0 ; jle 0x13a5b9 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000013afb7 : cmp ebp, dword ptr [rax + 0x10] ; jne 0x13afb8 ; mov eax, dword ptr [rax + 0x20] ; test eax, eax ; je 0x13afe0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cd2ad : cmp ebp, dword ptr [rdi] ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001572b3 : cmp ebp, eax ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000130ee5 : cmp ebp, eax ; mov ch, 0x7e ; std ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00000000001932f1 : cmp ebx, 0xff ; xor byte ptr [rbp - 0x78ef0005], al ; sti ; jmp rax
0x000000000013addc : cmp ebx, dword ptr [rax] ; je 0x13adfe ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000098455 : cmp ebx, eax ; cmova rbp, rax ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000096832 : cmp ebx, eax ; jb 0x9684a ; mov qword ptr [rdx], r12 ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000173385 : cmp ebx, ebp ; jae 0x1733a6 ; nop dword ptr [rax] ; call qword ptr [rbx]
0x0000000000173385 : cmp ebx, ebp ; jae 0x1733aa ; nop dword ptr [rax] ; call qword ptr [rbx]
0x00000000001725fc : cmp ebx, ebp ; jb 0x1725f6 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000180189 : cmp ebx, ebp ; ljmp ptr [rax + 0x39] ; jmp 0x180199
0x000000000018018d : cmp ebx, ebp ; push rax ; cmp ebp, ebx ; jmp rcx
0x00000000000858ba : cmp ebx, edx ; jb 0x858a4 ; mov byte ptr [rsi + rbx], r9b ; mov rax, rsi ; pop rbx ; ret
0x0000000000085a2a : cmp ebx, edx ; jb 0x85a19 ; mov byte ptr [rsi + rbx], r9b ; add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000048fdc : cmp ecx, 0xff ; jne 0x48fd8 ; mov rax, rdx ; ret
0x000000000012eba5 : cmp ecx, dword ptr [rax - 0x75] ; or byte ptr [r10], r13b ; push 0x19 ; call qword ptr [rax]
0x00000000000f5579 : cmp ecx, dword ptr [rax - 0x77] ; ret
0x00000000000246b5 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000dc92f : cmp ecx, dword ptr [rbp - 0x75] ; xchg dword ptr [rax - 0x77000000], esp ; ret 0xeac1
0x0000000000072534 : cmp ecx, dword ptr [rdx + 0x28] ; jae 0x72561 ; lea rax, qword ptr [rcx + 4] ; mov qword ptr [rdx + 0x20], rax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000087918 : cmp ecx, dword ptr [rip + 0x33beba] ; jb 0x8793f ; sub rax, 0x10 ; ret
0x00000000000fe43a : cmp ecx, dword ptr [rip - 0x389b168b] ; add eax, dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000873da : cmp ecx, ebp ; jne 0x8752c ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x0000000000088a53 : cmp ecx, ebp ; jne 0x88bbc ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x00000000000869e0 : cmp ecx, ebx ; jne 0x86aa6 ; add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000088164 : cmp ecx, ebx ; jne 0x8824a ; add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000109e91 : cmp ecx, edi ; add byte ptr [rax], al ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010a4a4 : cmp ecx, edx ; mov edx, 0 ; cmovb rax, rdx ; ret
0x000000000003aee9 : cmp ecx, edx ; mov qword ptr [rdi], rax ; cmovbe rdx, r8 ; xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x00000000001544f3 : cmp ecx, esi ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000a060c : cmp ecx, esi ; je 0xa0631 ; add rax, 1 ; movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0xa0619 ; ret
0x000000000011aec1 : cmp edi, 0x3ff ; ja 0x11aee0 ; mov rax, rdi ; sar rax, 6 ; ret
0x000000000003ab1c : cmp edi, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000002cb17 : cmp edi, dword ptr [rdx + 0x38] ; jae 0x2cb39 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000198011 : cmp edi, eax ; dec esp ; leave ; add dword ptr [rax], eax ; cmp al, 0xf8 ; jmp rsp
0x000000000007ee59 : cmp edi, eax ; je 0x7ee7e ; mov rdx, rax ; mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x7ee68 ; ret
0x0000000000107735 : cmp edi, edx ; jne 0x107730 ; mov rax, qword ptr [rax + 8] ; ret
0x000000000004aa7b : cmp edi, esi ; mov rax, rsi ; cmovae rax, rdi ; ret
0x00000000000aacdd : cmp edx, 0xff ; cmove rax, rcx ; pop rbx ; ret
0x000000000003ac70 : cmp edx, 0xff ; cmovne rax, rbx ; pop rbx ; ret
0x00000000000ac8d8 : cmp edx, 2 ; lea rcx, qword ptr [rdi + 8] ; je 0xac903 ; cmp esi, dword ptr [rdi + 8] ; cmove rax, rcx ; ret
0x00000000000719b0 : cmp edx, dword ptr [rax + 8] ; jae 0x719ce ; lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000071b37 : cmp edx, dword ptr [rax + 8] ; jae 0x71b5e ; lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000107328 : cmp edx, eax ; cmove rdx, rcx ; mov rax, rbx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x0000000000036bf1 : cmp edx, eax ; jg 0x36c29 ; test edi, edi ; jne 0x36c19 ; lea edx, dword ptr [rax - 1] ; mov dword ptr [rip + 0x38a486], edx ; ret
0x000000000014d451 : cmp edx, ecx ; jle 0x14d373 ; movsxd rax, ecx ; ret
0x00000000000a05c8 : cmp edx, esi ; je 0xa05f1 ; add rax, 1 ; movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0xa05d9 ; ret
0x0000000000045d08 : cmp esi, 0x40 ; cmovne rax, rdx ; ret
0x00000000000bab24 : cmp esi, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000008b8d6 : cmp esi, dword ptr [rax] ; jbe 0x8b8f6 ; mov rax, qword ptr [rax + 8] ; test rax, rax ; jne 0x8b8de ; ret
0x000000000008fd2a : cmp esi, dword ptr [rbx] ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x00000000000ac8e1 : cmp esi, dword ptr [rdi + 8] ; cmove rax, rcx ; ret
0x0000000000126aa4 : cmp esi, edx ; mov edx, 0 ; cmovae rax, rdx ; ret
0x000000000005a701 : cmp esp, dword ptr [rax + 0x63480012] ; add al, 0x90 ; add rax, rcx ; mov edx, 1 ; jmp rax
0x0000000000072cc1 : cmp esp, dword ptr [rdi - 2] ; dec dword ptr [rax - 0x75] ; xchg eax, esp ; and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000019395d : cmp esp, edi ; push rax ; cmp bh, ah ; inc dword ptr [rax + 0x3c] ; cld ; call qword ptr [rax - 0x1f0003c3]
0x00000000001169a3 : cmp esp, edi ; sub al, byte ptr [rax] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; jmp rax
0x00000000000740d7 : cmp qword ptr [rax + 0x30], 0 ; je 0x740e7 ; ret
0x00000000000798be : cmp qword ptr [rax + 0x30], 0 ; je 0x798d5 ; add rsp, 0x38 ; ret
0x0000000000116660 : cmp qword ptr [rax + 8], rdi ; je 0x116689 ; add rax, 0x48 ; cmp rax, rdx ; jb 0x116671 ; xor eax, eax ; ret
0x00000000000ba72c : cmp qword ptr [rax], 0 ; je 0xba746 ; add dword ptr [rax + 0x10], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002e206 : cmp qword ptr [rax], rax ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000f101d : cmp qword ptr [rbp], rbx ; mov qword ptr [r12], rax ; je 0xf100b ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000110827 : cmp qword ptr [rbx + 0x28], 0 ; mov eax, 0 ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x000000000007f764 : cmp qword ptr [rdi + 0x10], rax ; cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000079100 : cmp qword ptr [rdi + 0x10], rax ; jb 0x7913f ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000794d0 : cmp qword ptr [rdi + 0x10], rax ; jb 0x794cd ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000013eab9 : cmp qword ptr [rdi + 0x20], r14 ; jbe 0x13eadd ; add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000074bbb : cmp qword ptr [rdx + 8], rax ; cmovae rax, qword ptr [rdx + 8] ; sub rax, qword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x00000000001462d0 : cmp qword ptr [rsp + 0x18], 0 ; mov rax, qword ptr [rsp + 0x38] ; jne 0x1462c9 ; add rsp, 0x48 ; ret
0x00000000000997ef : cmp r10b, r8b ; jb 0x997d7 ; mov rdx, rax ; jmp 0x99783
0x0000000000096831 : cmp r11, rax ; jb 0x9684b ; mov qword ptr [rdx], r12 ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000071faa : cmp r13, rax ; jne 0x71fcf ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000801bc : cmp r14, rax ; jne 0x80197 ; mov rdi, r12 ; neg rdi ; call qword ptr [r15]
0x000000000004892f : cmp r8, 0xf8 ; jne 0x48929 ; mov rax, rdx ; ret
0x0000000000099d6c : cmp r8b, dil ; jb 0x99d57 ; mov rdx, rax ; jmp 0x99d0e
0x000000000009993c : cmp r8b, r9b ; jb 0x99927 ; mov rdx, rax ; jmp 0x998d0
0x000000000009aafc : cmp r8b, r9b ; jb 0x9aae7 ; mov rdx, rax ; jmp 0x9aa90
0x000000000009bb94 : cmp r8b, r9b ; jb 0x9bb7f ; mov rdx, rax ; jmp 0x9bb30
0x000000000009d807 : cmp r8b, r9b ; jb 0x9d7f2 ; mov rdx, rax ; jmp 0x9d7b0
0x00000000000bbbc6 : cmp r8d, 0x71 ; jg 0xbbc01 ; lea rax, qword ptr [rip + 0x307ded] ; add rsp, 8 ; ret
0x000000000001fb88 : cmp r9, rax ; je 0x1fb2f ; jmp 0x1fb58
0x000000000003aee8 : cmp r9, rdx ; mov qword ptr [rdi], rax ; cmovbe rdx, r8 ; xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x0000000000100507 : cmp rax, -0x1000 ; ja 0x100521 ; ret
0x000000000010059b : cmp rax, -0x1000 ; ja 0x1005b1 ; ret
0x000000000010063b : cmp rax, -0x1000 ; ja 0x100651 ; ret
0x000000000010068f : cmp rax, -0x1000 ; ja 0x1006a9 ; ret
0x0000000000106bae : cmp rax, -0x1000 ; ja 0x106bc9 ; ret
0x0000000000108cee : cmp rax, -0x1000 ; ja 0x108d09 ; ret
0x0000000000108f30 : cmp rax, -0x1000 ; ja 0x108f48 ; ret
0x0000000000108fe2 : cmp rax, -0x1000 ; ja 0x108ff9 ; ret
0x0000000000109bbd : cmp rax, -0x1000 ; ja 0x109bd8 ; ret
0x0000000000109cd7 : cmp rax, -0x1000 ; ja 0x109ce8 ; ret
0x0000000000109d7d : cmp rax, -0x1000 ; ja 0x109d98 ; ret
0x0000000000109e37 : cmp rax, -0x1000 ; ja 0x109e48 ; ret
0x000000000010a267 : cmp rax, -0x1000 ; ja 0x10a278 ; ret
0x000000000010a309 : cmp rax, -0x1000 ; ja 0x10a320 ; ret
0x000000000010a3b9 : cmp rax, -0x1000 ; ja 0x10a3d0 ; ret
0x00000000001174ba : cmp rax, -0x1000 ; ja 0x1174d1 ; ret
0x000000000011753f : cmp rax, -0x1000 ; ja 0x117522 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000117567 : cmp rax, -0x1000 ; ja 0x117593 ; ret
0x000000000011933c : cmp rax, -0x1000 ; ja 0x119359 ; ret
0x000000000011940c : cmp rax, -0x1000 ; ja 0x119429 ; ret
0x000000000012b119 : cmp rax, -0x1000 ; ja 0x12b140 ; sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000035a70 : cmp rax, -0x1000 ; ja 0x35a89 ; ret
0x0000000000035adc : cmp rax, -0x1000 ; ja 0x35af9 ; ret
0x0000000000035b26 : cmp rax, -0x1000 ; ja 0x35b38 ; ret
0x0000000000079f5b : cmp rax, -0x1000 ; ja 0x79f71 ; ret
0x000000000007a60f : cmp rax, -0x1000 ; ja 0x7a629 ; pop rbx ; ret
0x000000000007aff8 : cmp rax, -0x1000 ; ja 0x7b00b ; ret
0x00000000000bc827 : cmp rax, -0x1000 ; ja 0xbc841 ; ret
0x00000000000c89f7 : cmp rax, -0x1000 ; ja 0xc8a11 ; pop rbx ; ret
0x00000000000c9be1 : cmp rax, -0x1000 ; ja 0xc9bf8 ; ret
0x00000000000ccfc0 : cmp rax, -0x1000 ; ja 0xccfd8 ; ret
0x00000000000cd05a : cmp rax, -0x1000 ; ja 0xcd070 ; ret
0x00000000000cd14b : cmp rax, -0x1000 ; ja 0xcd160 ; ret
0x00000000000ce223 : cmp rax, -0x1000 ; ja 0xce238 ; ret
0x00000000000ce293 : cmp rax, -0x1000 ; ja 0xce2a8 ; ret
0x00000000000ce4e7 : cmp rax, -0x1000 ; ja 0xce4f8 ; ret
0x00000000000ce567 : cmp rax, -0x1000 ; ja 0xce578 ; ret
0x00000000000f8215 : cmp rax, -0x1000 ; ja 0xf8229 ; ret
0x00000000000f8262 : cmp rax, -0x1000 ; ja 0xf8279 ; ret
0x00000000000f82b5 : cmp rax, -0x1000 ; ja 0xf82c9 ; ret
0x00000000000f8310 : cmp rax, -0x1000 ; ja 0xf8329 ; ret
0x00000000000f8371 : cmp rax, -0x1000 ; ja 0xf8389 ; ret
0x00000000000f83cb : cmp rax, -0x1000 ; ja 0xf83e1 ; ret
0x00000000000f85a9 : cmp rax, -0x1000 ; ja 0xf85c1 ; ret
0x00000000000f8c73 : cmp rax, -0x1000 ; ja 0xf8cb9 ; ret
0x00000000000f8d17 : cmp rax, -0x1000 ; ja 0xf8d6d ; add rsp, 0x60 ; pop rbx ; ret
0x00000000000fcdfd : cmp rax, -0x1000 ; ja 0xfce88 ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fd112 : cmp rax, -0x1000 ; ja 0xfd129 ; ret
0x00000000000fd166 : cmp rax, -0x1000 ; ja 0xfd179 ; ret
0x00000000000fd8da : cmp rax, -0x1000 ; ja 0xfd8f0 ; ret
0x00000000000fddee : cmp rax, -0x1000 ; ja 0xfde08 ; ret
0x00000000000fe745 : cmp rax, -0x1000 ; ja 0xfe758 ; ret
0x00000000000fe7b5 : cmp rax, -0x1000 ; ja 0xfe7c8 ; ret
0x00000000000fe836 : cmp rax, -0x1000 ; ja 0xfe849 ; ret
0x00000000000fe8e6 : cmp rax, -0x1000 ; ja 0xfe8f9 ; ret
0x00000000000fee36 : cmp rax, -0x1000 ; ja 0xfee49 ; ret
0x00000000001006c7 : cmp rax, -0xfff ; jae 0x1006d8 ; ret
0x00000000001006f7 : cmp rax, -0xfff ; jae 0x100708 ; ret
0x00000000001029f9 : cmp rax, -0xfff ; jae 0x102a0a ; ret
0x0000000000102c77 : cmp rax, -0xfff ; jae 0x102c88 ; ret
0x0000000000102ca7 : cmp rax, -0xfff ; jae 0x102cb8 ; ret
0x0000000000102ce0 : cmp rax, -0xfff ; jae 0x102d21 ; ret
0x0000000000102d37 : cmp rax, -0xfff ; jae 0x102d48 ; ret
0x0000000000102d67 : cmp rax, -0xfff ; jae 0x102d78 ; ret
0x0000000000102d9a : cmp rax, -0xfff ; jae 0x102dab ; ret
0x0000000000102dc7 : cmp rax, -0xfff ; jae 0x102dd8 ; ret
0x0000000000102df7 : cmp rax, -0xfff ; jae 0x102e08 ; ret
0x0000000000102e27 : cmp rax, -0xfff ; jae 0x102e38 ; ret
0x0000000000102e57 : cmp rax, -0xfff ; jae 0x102e68 ; ret
0x00000000001074ca : cmp rax, -0xfff ; jae 0x1074db ; ret
0x00000000001074f7 : cmp rax, -0xfff ; jae 0x107508 ; ret
0x0000000000107527 : cmp rax, -0xfff ; jae 0x107538 ; ret
0x000000000010755a : cmp rax, -0xfff ; jae 0x10756b ; ret
0x000000000010758a : cmp rax, -0xfff ; jae 0x10759b ; ret
0x00000000001075b7 : cmp rax, -0xfff ; jae 0x1075c8 ; ret
0x00000000001075ea : cmp rax, -0xfff ; jae 0x1075fb ; ret
0x0000000000107617 : cmp rax, -0xfff ; jae 0x107628 ; ret
0x0000000000107647 : cmp rax, -0xfff ; jae 0x107658 ; ret
0x000000000010767a : cmp rax, -0xfff ; jae 0x10768b ; ret
0x00000000001076a7 : cmp rax, -0xfff ; jae 0x1076b8 ; ret
0x00000000001076da : cmp rax, -0xfff ; jae 0x1076eb ; ret
0x0000000000108c57 : cmp rax, -0xfff ; jae 0x108c68 ; ret
0x0000000000108c87 : cmp rax, -0xfff ; jae 0x108c98 ; ret
0x0000000000108da7 : cmp rax, -0xfff ; jae 0x108db8 ; ret
0x0000000000108de7 : cmp rax, -0xfff ; jae 0x108df8 ; ret
0x0000000000108e17 : cmp rax, -0xfff ; jae 0x108e28 ; ret
0x0000000000108e47 : cmp rax, -0xfff ; jae 0x108e58 ; ret
0x0000000000108e77 : cmp rax, -0xfff ; jae 0x108e88 ; ret
0x0000000000109017 : cmp rax, -0xfff ; jae 0x109028 ; ret
0x000000000010909a : cmp rax, -0xfff ; jae 0x1090ab ; ret
0x00000000001090c7 : cmp rax, -0xfff ; jae 0x1090d8 ; ret
0x00000000001090f7 : cmp rax, -0xfff ; jae 0x109108 ; ret
0x0000000000109127 : cmp rax, -0xfff ; jae 0x109138 ; ret
0x000000000010916a : cmp rax, -0xfff ; jae 0x10917b ; ret
0x0000000000109197 : cmp rax, -0xfff ; jae 0x1091a8 ; ret
0x00000000001091c7 : cmp rax, -0xfff ; jae 0x1091d8 ; ret
0x00000000001091f7 : cmp rax, -0xfff ; jae 0x109208 ; ret
0x0000000000109227 : cmp rax, -0xfff ; jae 0x109238 ; ret
0x0000000000109257 : cmp rax, -0xfff ; jae 0x109268 ; ret
0x0000000000109287 : cmp rax, -0xfff ; jae 0x109298 ; ret
0x00000000001092b7 : cmp rax, -0xfff ; jae 0x1092c8 ; ret
0x00000000001092e7 : cmp rax, -0xfff ; jae 0x1092f8 ; ret
0x000000000010931a : cmp rax, -0xfff ; jae 0x10932b ; ret
0x0000000000109353 : cmp rax, -0xfff ; jae 0x109397 ; ret
0x00000000001093a7 : cmp rax, -0xfff ; jae 0x1093b8 ; ret
0x00000000001093da : cmp rax, -0xfff ; jae 0x1093eb ; ret
0x0000000000109407 : cmp rax, -0xfff ; jae 0x109418 ; ret
0x0000000000109437 : cmp rax, -0xfff ; jae 0x109448 ; ret
0x0000000000109467 : cmp rax, -0xfff ; jae 0x109478 ; ret
0x0000000000109497 : cmp rax, -0xfff ; jae 0x1094a8 ; ret
0x00000000001094c7 : cmp rax, -0xfff ; jae 0x1094d8 ; ret
0x00000000001094fa : cmp rax, -0xfff ; jae 0x10950b ; ret
0x000000000010952a : cmp rax, -0xfff ; jae 0x10953b ; ret
0x0000000000109557 : cmp rax, -0xfff ; jae 0x109568 ; ret
0x0000000000109587 : cmp rax, -0xfff ; jae 0x109598 ; ret
0x00000000001095ba : cmp rax, -0xfff ; jae 0x1095cb ; ret
0x00000000001095ea : cmp rax, -0xfff ; jae 0x1095fb ; ret
0x000000000010961a : cmp rax, -0xfff ; jae 0x10962b ; ret
0x0000000000109653 : cmp rax, -0xfff ; jae 0x109697 ; ret
0x00000000001096a7 : cmp rax, -0xfff ; jae 0x1096b8 ; ret
0x00000000001096e3 : cmp rax, -0xfff ; jae 0x109727 ; ret
0x0000000000109737 : cmp rax, -0xfff ; jae 0x109748 ; ret
0x0000000000109767 : cmp rax, -0xfff ; jae 0x109778 ; ret
0x00000000001097a3 : cmp rax, -0xfff ; jae 0x1097e7 ; ret
0x00000000001097f7 : cmp rax, -0xfff ; jae 0x109808 ; ret
0x000000000010982a : cmp rax, -0xfff ; jae 0x10983b ; ret
0x0000000000109857 : cmp rax, -0xfff ; jae 0x109868 ; ret
0x0000000000109887 : cmp rax, -0xfff ; jae 0x109898 ; ret
0x00000000001098ba : cmp rax, -0xfff ; jae 0x1098cb ; ret
0x00000000001098f0 : cmp rax, -0xfff ; jae 0x109931 ; ret
0x0000000000109947 : cmp rax, -0xfff ; jae 0x109958 ; ret
0x000000000010997a : cmp rax, -0xfff ; jae 0x10998b ; ret
0x00000000001099aa : cmp rax, -0xfff ; jae 0x1099bb ; ret
0x0000000000109a00 : cmp rax, -0xfff ; jae 0x109a41 ; ret
0x0000000000109a57 : cmp rax, -0xfff ; jae 0x109a68 ; ret
0x0000000000109a90 : cmp rax, -0xfff ; jae 0x109ad1 ; ret
0x0000000000109ae7 : cmp rax, -0xfff ; jae 0x109af8 ; ret
0x0000000000109b17 : cmp rax, -0xfff ; jae 0x109b28 ; ret
0x0000000000109b4a : cmp rax, -0xfff ; jae 0x109b5b ; ret
0x0000000000109b77 : cmp rax, -0xfff ; jae 0x109b88 ; ret
0x0000000000109c73 : cmp rax, -0xfff ; jae 0x109cb7 ; ret
0x0000000000109ca6 : cmp rax, -0xfff ; jae 0x109cbb ; ret
0x0000000000109ed3 : cmp rax, -0xfff ; jae 0x109f17 ; ret
0x0000000000109f2a : cmp rax, -0xfff ; jae 0x109f3b ; ret
0x0000000000109f57 : cmp rax, -0xfff ; jae 0x109f68 ; ret
0x0000000000109f87 : cmp rax, -0xfff ; jae 0x109f98 ; ret
0x0000000000109fba : cmp rax, -0xfff ; jae 0x109fcb ; ret
0x000000000010a523 : cmp rax, -0xfff ; jae 0x10a567 ; ret
0x000000000010a583 : cmp rax, -0xfff ; jae 0x10a5c7 ; ret
0x000000000010a5d7 : cmp rax, -0xfff ; jae 0x10a5e8 ; ret
0x000000000010a607 : cmp rax, -0xfff ; jae 0x10a618 ; ret
0x000000000010a637 : cmp rax, -0xfff ; jae 0x10a648 ; ret
0x000000000010a667 : cmp rax, -0xfff ; jae 0x10a678 ; ret
0x000000000010a69a : cmp rax, -0xfff ; jae 0x10a6ab ; ret
0x000000000010a6ca : cmp rax, -0xfff ; jae 0x10a6db ; ret
0x000000000010a6f7 : cmp rax, -0xfff ; jae 0x10a708 ; ret
0x000000000010a727 : cmp rax, -0xfff ; jae 0x10a738 ; ret
0x000000000010a757 : cmp rax, -0xfff ; jae 0x10a768 ; ret
0x000000000010a787 : cmp rax, -0xfff ; jae 0x10a798 ; ret
0x000000000014328a : cmp rax, -0xfff ; jae 0x14329b ; ret
0x00000000001432da : cmp rax, -0xfff ; jae 0x1432eb ; ret
0x0000000000035aa7 : cmp rax, -0xfff ; jae 0x35ab8 ; ret
0x0000000000036177 : cmp rax, -0xfff ; jae 0x36188 ; ret
0x0000000000047ff1 : cmp rax, -0xfff ; jae 0x48006 ; xor eax, eax ; ret
0x000000000006c307 : cmp rax, -0xfff ; jae 0x6c318 ; ret
0x000000000006c33a : cmp rax, -0xfff ; jae 0x6c34b ; ret
0x00000000000bc907 : cmp rax, -0xfff ; jae 0xbc918 ; ret
0x00000000000bfc77 : cmp rax, -0xfff ; jae 0xbfc88 ; ret
0x00000000000bfca7 : cmp rax, -0xfff ; jae 0xbfcb8 ; ret
0x00000000000ccf27 : cmp rax, -0xfff ; jae 0xccf38 ; ret
0x00000000000cd10a : cmp rax, -0xfff ; jae 0xcd11b ; ret
0x00000000000cd1e7 : cmp rax, -0xfff ; jae 0xcd1f8 ; ret
0x00000000000cd270 : cmp rax, -0xfff ; jae 0xcd2b1 ; ret
0x00000000000cd2d0 : cmp rax, -0xfff ; jae 0xcd311 ; ret
0x00000000000cd767 : cmp rax, -0xfff ; jae 0xcd778 ; ret
0x00000000000ce1e7 : cmp rax, -0xfff ; jae 0xce1f8 ; ret
0x00000000000ce387 : cmp rax, -0xfff ; jae 0xce398 ; ret
0x00000000000ce3b7 : cmp rax, -0xfff ; jae 0xce3c8 ; ret
0x00000000000ce417 : cmp rax, -0xfff ; jae 0xce428 ; ret
0x00000000000ce447 : cmp rax, -0xfff ; jae 0xce458 ; ret
0x00000000000ce477 : cmp rax, -0xfff ; jae 0xce488 ; ret
0x00000000000ce4a7 : cmp rax, -0xfff ; jae 0xce4b8 ; ret
0x00000000000ebfe7 : cmp rax, -0xfff ; jae 0xebff8 ; ret
0x00000000000ec017 : cmp rax, -0xfff ; jae 0xec028 ; ret
0x00000000000ec047 : cmp rax, -0xfff ; jae 0xec058 ; ret
0x00000000000ec077 : cmp rax, -0xfff ; jae 0xec088 ; ret
0x00000000000ec0a7 : cmp rax, -0xfff ; jae 0xec0b8 ; ret
0x00000000000ec0d7 : cmp rax, -0xfff ; jae 0xec0e8 ; ret
0x00000000000ec107 : cmp rax, -0xfff ; jae 0xec118 ; ret
0x00000000000ec137 : cmp rax, -0xfff ; jae 0xec148 ; ret
0x00000000000f6e73 : cmp rax, -0xfff ; jae 0xf6eb7 ; ret
0x00000000000f6ea6 : cmp rax, -0xfff ; jae 0xf6ebb ; ret
0x00000000000f6ed3 : cmp rax, -0xfff ; jae 0xf6f17 ; ret
0x00000000000f8177 : cmp rax, -0xfff ; jae 0xf8188 ; ret
0x00000000000f8417 : cmp rax, -0xfff ; jae 0xf8428 ; ret
0x00000000000f8447 : cmp rax, -0xfff ; jae 0xf8458 ; ret
0x00000000000f8517 : cmp rax, -0xfff ; jae 0xf8528 ; ret
0x00000000000f8547 : cmp rax, -0xfff ; jae 0xf8558 ; ret
0x00000000000f8607 : cmp rax, -0xfff ; jae 0xf8618 ; ret
0x00000000000f8637 : cmp rax, -0xfff ; jae 0xf8648 ; ret
0x00000000000f8670 : cmp rax, -0xfff ; jae 0xf86b1 ; ret
0x00000000000f8890 : cmp rax, -0xfff ; jae 0xf88d1 ; ret
0x00000000000f88f0 : cmp rax, -0xfff ; jae 0xf8931 ; ret
0x00000000000f8947 : cmp rax, -0xfff ; jae 0xf8958 ; ret
0x00000000000f8dd7 : cmp rax, -0xfff ; jae 0xf8de8 ; ret
0x00000000000f8f20 : cmp rax, -0xfff ; jae 0xf8f61 ; ret
0x00000000000f8f77 : cmp rax, -0xfff ; jae 0xf8f88 ; ret
0x00000000000f8fa7 : cmp rax, -0xfff ; jae 0xf8fb8 ; ret
0x00000000000f8fd7 : cmp rax, -0xfff ; jae 0xf8fe8 ; ret
0x00000000000f9007 : cmp rax, -0xfff ; jae 0xf9018 ; ret
0x00000000000f9037 : cmp rax, -0xfff ; jae 0xf9048 ; ret
0x00000000000f9070 : cmp rax, -0xfff ; jae 0xf90b1 ; ret
0x00000000000f90c7 : cmp rax, -0xfff ; jae 0xf90d8 ; ret
0x00000000000f90f7 : cmp rax, -0xfff ; jae 0xf9108 ; ret
0x00000000000f9957 : cmp rax, -0xfff ; jae 0xf9968 ; ret
0x00000000000f9987 : cmp rax, -0xfff ; jae 0xf9998 ; ret
0x00000000000f99b7 : cmp rax, -0xfff ; jae 0xf99c8 ; ret
0x00000000000f99ea : cmp rax, -0xfff ; jae 0xf99fb ; ret
0x00000000000fa077 : cmp rax, -0xfff ; jae 0xfa088 ; ret
0x00000000000fa0aa : cmp rax, -0xfff ; jae 0xfa0bb ; ret
0x00000000000fa0d7 : cmp rax, -0xfff ; jae 0xfa0e8 ; ret
0x00000000000fa107 : cmp rax, -0xfff ; jae 0xfa118 ; ret
0x00000000000fa137 : cmp rax, -0xfff ; jae 0xfa148 ; ret
0x00000000000fa16a : cmp rax, -0xfff ; jae 0xfa17b ; ret
0x00000000000fa197 : cmp rax, -0xfff ; jae 0xfa1a8 ; ret
0x00000000000fa1c7 : cmp rax, -0xfff ; jae 0xfa1d8 ; ret
0x00000000000fa1f7 : cmp rax, -0xfff ; jae 0xfa208 ; ret
0x00000000000fcd70 : cmp rax, -0xfff ; jae 0xfcdb1 ; ret
0x00000000000fd0da : cmp rax, -0xfff ; jae 0xfd0eb ; ret
0x00000000000fd873 : cmp rax, -0xfff ; jae 0xfd8b7 ; ret
0x00000000000fd8a6 : cmp rax, -0xfff ; jae 0xfd8bb ; ret
0x00000000000fdfb7 : cmp rax, -0xfff ; jae 0xfdfc8 ; ret
0x00000000000fdfe7 : cmp rax, -0xfff ; jae 0xfdff8 ; ret
0x00000000000fe017 : cmp rax, -0xfff ; jae 0xfe028 ; ret
0x00000000000fe3a7 : cmp rax, -0xfff ; jae 0xfe3b8 ; ret
0x00000000000fe587 : cmp rax, -0xfff ; jae 0xfe598 ; ret
0x00000000000fe5c0 : cmp rax, -0xfff ; jae 0xfe601 ; ret
0x00000000000fe620 : cmp rax, -0xfff ; jae 0xfe661 ; ret
0x00000000000fe683 : cmp rax, -0xfff ; jae 0xfe6c7 ; ret
0x00000000000fe6e3 : cmp rax, -0xfff ; jae 0xfe727 ; ret
0x00000000000fea77 : cmp rax, -0xfff ; jae 0xfea88 ; ret
0x00000000000feb17 : cmp rax, -0xfff ; jae 0xfeb28 ; ret
0x00000000000feb53 : cmp rax, -0xfff ; jae 0xfeb97 ; ret
0x00000000000feca7 : cmp rax, -0xfff ; jae 0xfecb8 ; ret
0x00000000000fecd7 : cmp rax, -0xfff ; jae 0xfece8 ; ret
0x00000000000fed10 : cmp rax, -0xfff ; jae 0xfed51 ; ret
0x00000000000fed67 : cmp rax, -0xfff ; jae 0xfed78 ; ret
0x00000000000feda0 : cmp rax, -0xfff ; jae 0xfede1 ; ret
0x00000000000fedf7 : cmp rax, -0xfff ; jae 0xfee08 ; ret
0x00000000000ff167 : cmp rax, -0xfff ; jae 0xff178 ; ret
0x00000000000ff197 : cmp rax, -0xfff ; jae 0xff1a8 ; ret
0x00000000000ff1c7 : cmp rax, -0xfff ; jae 0xff1d8 ; ret
0x00000000000ceb50 : cmp rax, 0x2f ; je 0xceb1d ; mov eax, 1 ; ret
0x00000000000c0a51 : cmp rax, 0x35 ; jbe 0xc05b8 ; jmp 0xc06a7
0x00000000000ceae3 : cmp rax, 0x414a53 ; je 0xceb1f ; mov eax, 1 ; ret
0x00000000000ceb40 : cmp rax, 0x5346544e ; je 0xceb1f ; mov eax, 1 ; ret
0x00000000000ceb0a : cmp rax, 0x7275 ; jne 0xceaf5 ; xor eax, eax ; ret
0x0000000000089c1e : cmp rax, 0xff ; cmove rax, rdx ; add rsp, 8 ; ret
0x00000000000ccf65 : cmp rax, 0xff ; mov edx, 0 ; cmove rax, rdx ; ret
0x0000000000098689 : cmp rax, 1 ; ja 0x98673 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013ec54 : cmp rax, 1 ; sete al ; add rsp, 0x18 ; movzx eax, al ; ret
0x000000000013edab : cmp rax, 1 ; sete al ; add rsp, 8 ; movzx eax, al ; ret
0x0000000000109078 : cmp rax, 8 ; setne al ; add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
0x000000000010904e : cmp rax, 8 ; setne al ; add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x0000000000087dad : cmp rax, 9 ; ja 0x87d61 ; movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x00000000000795a0 : cmp rax, qword ptr [rbp + 0x20] ; mov qword ptr [rbp + 0x18], rax ; ja 0x795c9 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079944 : cmp rax, qword ptr [rdi + 0x10] ; jae 0x79971 ; lea rdx, qword ptr [rax + 1] ; mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000007997b : cmp rax, qword ptr [rdi + 0x10] ; jae 0x799a1 ; lea rdx, qword ptr [rax + 1] ; mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000007b514 : cmp rax, qword ptr [rdi + 0x10] ; jae 0x7b529 ; movzx eax, byte ptr [rax] ; ret
0x000000000007da43 : cmp rax, r8 ; jbe 0x7da66 ; mov rax, qword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x00000000000f71b7 : cmp rax, rbx ; setg al ; pop rbx ; ret
0x0000000000073067 : cmp rax, rcx ; cmovg rax, rcx ; test rdx, rdx ; jne 0x7306d ; ret
0x000000000007d027 : cmp rax, rcx ; cmovg rax, rcx ; test rdx, rdx ; jne 0x7d02d ; ret
0x00000000000ab046 : cmp rax, rcx ; ja 0xab06c ; sub rdi, 0x10 ; add rax, rdi ; ret
0x000000000007d377 : cmp rax, rcx ; jbe 0x7d39e ; mov rax, qword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000110f9e : cmp rax, rcx ; mov esi, edi ; jae 0x110fcc ; cmp dil, byte ptr [rax] ; je 0x110fd6 ; mov rdx, rax ; jmp 0x110fc3
0x000000000007988b : cmp rax, rdi ; je 0x798a9 ; cmp qword ptr [rip + 0x34ca48], 0 ; je 0x798af ; ret
0x00000000000aaf7a : cmp rax, rdx ; ja 0xab06f ; add rax, rdi ; add rax, rcx ; ret
0x000000000007f27a : cmp rax, rdx ; jae 0x7f2a8 ; movzx eax, byte ptr [rax] ; ret
0x000000000011666a : cmp rax, rdx ; jb 0x116667 ; xor eax, eax ; ret
0x0000000000116669 : cmp rax, rdx ; jb 0x116668 ; xor eax, eax ; ret
0x000000000013abb0 : cmp rax, rdx ; je 0x13abc9 ; add rsp, 8 ; ret
0x000000000013abe0 : cmp rax, rdx ; je 0x13abfd ; sub rax, -0x80 ; add rsp, 8 ; ret
0x000000000013ac10 : cmp rax, rdx ; je 0x13ac2f ; add rax, 0xa0 ; add rsp, 8 ; ret
0x000000000013ac40 : cmp rax, rdx ; je 0x13ac5f ; add rax, 0xa8 ; add rsp, 8 ; ret
0x00000000000484ec : cmp rax, rdx ; jne 0x484e7 ; xor eax, eax ; ret
0x000000000010230b : cmp rax, rdx ; mov edx, ebx ; cmovne rbp, rax ; call 0xfe61b
0x000000000002d870 : cmp rax, rdx ; mov rdx, -1 ; cmove rax, rdx ; ret
0x00000000001104f8 : cmp rax, rsi ; jb 0x110512 ; mov eax, 1 ; ret
0x000000000013afb6 : cmp rbp, qword ptr [rax + 0x10] ; jne 0x13afb9 ; mov eax, dword ptr [rax + 0x20] ; test eax, eax ; je 0x13afe1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006efee : cmp rbp, rax ; jle 0x6f004 ; or dword ptr [rbx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013addb : cmp rbx, qword ptr [rax] ; je 0x13adff ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000098454 : cmp rbx, rax ; cmova rbp, rax ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000081954 : cmp rbx, rax ; je 0x81967 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011071a : cmp rbx, rax ; setne al ; movzx eax, al ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000173384 : cmp rbx, rbp ; jae 0x1733a7 ; nop dword ptr [rax] ; call qword ptr [rbx]
0x0000000000173384 : cmp rbx, rbp ; jae 0x1733ab ; nop dword ptr [rax] ; call qword ptr [rbx]
0x00000000001725fb : cmp rbx, rbp ; jb 0x1725f7 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000858b9 : cmp rbx, rdx ; jb 0x858a5 ; mov byte ptr [rsi + rbx], r9b ; mov rax, rsi ; pop rbx ; ret
0x0000000000048fdb : cmp rcx, 0xff ; jne 0x48fd9 ; mov rax, rdx ; ret
0x0000000000087917 : cmp rcx, qword ptr [rip + 0x33beba] ; jb 0x87940 ; sub rax, 0x10 ; ret
0x000000000016cc9a : cmp rcx, rax ; jne 0x16ccca ; xor eax, eax ; ret
0x000000000016c28e : cmp rcx, rax ; jne 0x16ccce ; xor eax, eax ; ret
0x000000000016dada : cmp rcx, rax ; jne 0x16db0a ; xor eax, eax ; ret
0x000000000016d8be : cmp rcx, rax ; jne 0x16db0e ; xor eax, eax ; ret
0x00000000000488c7 : cmp rcx, rax ; setbe al ; movzx eax, al ; neg eax ; or eax, 1 ; ret
0x00000000000873d9 : cmp rcx, rbp ; jne 0x8752d ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x0000000000088a52 : cmp rcx, rbp ; jne 0x88bbd ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x000000000010a4a3 : cmp rcx, rdx ; mov edx, 0 ; cmovb rax, rdx ; ret
0x000000000011aec0 : cmp rdi, 0x3ff ; ja 0x11aee1 ; mov rax, rdi ; sar rax, 6 ; ret
0x000000000007ee58 : cmp rdi, rax ; je 0x7ee7f ; mov rdx, rax ; mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x7ee69 ; ret
0x0000000000107734 : cmp rdi, rdx ; jne 0x107731 ; mov rax, qword ptr [rax + 8] ; ret
0x000000000004aa7a : cmp rdi, rsi ; mov rax, rsi ; cmovae rax, rdi ; ret
0x00000000000ac8d7 : cmp rdx, 2 ; lea rcx, qword ptr [rdi + 8] ; je 0xac904 ; cmp esi, dword ptr [rdi + 8] ; cmove rax, rcx ; ret
0x00000000000719af : cmp rdx, qword ptr [rax + 8] ; jae 0x719cf ; lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000071b36 : cmp rdx, qword ptr [rax + 8] ; jae 0x71b5f ; lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000107327 : cmp rdx, rax ; cmove rdx, rcx ; mov rax, rbx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x00000000000868d2 : cmp rdx, rax ; ja 0x868d0 ; xor eax, eax ; ret
0x0000000000117051 : cmp rdx, rax ; jne 0x117036 ; ret
0x0000000000125dc5 : cmp rdx, rax ; sbb eax, eax ; ret
0x000000000008b8d5 : cmp rsi, qword ptr [rax] ; jbe 0x8b8f7 ; mov rax, qword ptr [rax + 8] ; test rax, rax ; jne 0x8b8df ; ret
0x0000000000126aa3 : cmp rsi, rdx ; mov edx, 0 ; cmovae rax, rdx ; ret
0x000000000014f207 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000010e61 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; and dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x42
0x000000000014f507 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000150407 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000f4bae : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001a3f95 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; fdivr dword ptr [rcx - 0x12] ; jmp qword ptr [rcx]
0x000000000014a836 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014fe07 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014fb07 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000019362d : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; dec dword ptr [rax] ; sbb edi, esp ; call rax
0x000000000019351d : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x0000000000193629 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; dec dword ptr [rax] ; sbb edi, esp ; call rax
0x0000000000193519 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x0000000000193625 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; dec dword ptr [rax] ; sbb edi, esp ; call rax
0x0000000000193515 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x0000000000193335 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sti ; inc dword ptr [rax - 0x58] ; sti ; call qword ptr [rax - 0x1f000457]
0x0000000000106905 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sub eax, dword ptr [rax] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x1069b7 ; call rax
0x0000000000086822 : cmpsb byte ptr [rsi], byte ptr [rdi] ; xor eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x00000000000f1800 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000195205 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; push rsp ; jg 0x1951fe ; call rsp
0x0000000000132b1e : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; test eax, eax ; jne 0x132b3f ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000132bb9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; test eax, eax ; jne 0x132bdf ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001b40ed : cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; push rax ; jl 0x1b40f0 ; call rcx
0x00000000001592a7 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000a3610 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x000000000013f145 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cmp al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000008fd59 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cmp esi, dword ptr [rbx] ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x0000000000072a55 : cmpsd dword ptr [rsi], dword ptr [rdi] ; imul edi, esi, 0xc48148ff ; fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000122513 : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov bl, 6 ; add al, ch ; and al, 0x98 ; add byte ptr [rax], al ; test rax, rax ; je 0x122537 ; mov rdi, rbx ; call rax
0x00000000000deed5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or dh, ah ; dec dword ptr [rax - 0x77] ; ret
0x0000000000086818 : cmpsd dword ptr [rsi], dword ptr [rdi] ; xor eax, dword ptr [rax] ; mov qword ptr [rax], rsi ; mov rax, qword ptr [rip + 0x33a6bb] ; mov qword ptr [rax], rdi ; ret
0x000000000011704a : cmpxchg dword ptr [rip + 0x2af6f7], edi ; cmp rdx, rax ; jne 0x11703d ; ret
0x0000000000117049 : cmpxchg qword ptr [rip + 0x2af6f7], rdi ; cmp rdx, rax ; jne 0x11703e ; ret
0x0000000000103478 : cvtdq2ps xmm1, xmmword ptr [rax - 0x73] ; add eax, 0x2c0ddf ; pop rbp ; pop r12 ; ret
0x000000000001dab0 : cwde ; add al, 0x3c ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000135347 : cwde ; add byte ptr [rax], al ; add bl, ch ; ret 0x8b48
0x00000000000fb264 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0xa], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000100e4d : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add eax, 0x2c32a8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fc634 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c86c9 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000137eaf : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000002986e : cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000076d84 : cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 0xe], dh ; mov edx, dword ptr [rdi + 0xc0] ; mov eax, edx ; ret
0x0000000000029624 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007b3e7 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000036ca3 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000009882f : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f8acb : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x00000000000f89ac : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000257c3 : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x28], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dc245 : cwde ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x000000000013580d : cwde ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000122519 : cwde ; add byte ptr [rax], al ; test rax, rax ; je 0x122531 ; mov rdi, rbx ; call rax
0x000000000003b2f4 : cwde ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; and al, 8 ; add rsp, 0x18 ; ret
0x00000000000f1bd4 : cwde ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f9c25 : cwde ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000015a1a7 : cwde ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000feddc : cwde ; and byte ptr [rax + rax], ch ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000194105 : cwde ; cld ; call qword ptr [rax + 0x10fffc97]
0x0000000000194101 : cwde ; cld ; call qword ptr [rax]
0x0000000000194301 : cwde ; cld ; jmp qword ptr [rax + 0x20fffc97]
0x00000000001942fd : cwde ; cld ; jmp qword ptr [rax]
0x00000000000ebf0c : cwde ; jg 0xebf4c ; add byte ptr [rax - 0x75], cl ; adc eax, 0x2d5051 ; mov dword ptr [rdx], ecx ; pop rdx ; pop rcx ; pop rbx ; ret
0x00000000001b1158 : cwde ; jge 0x1b1154 ; call qword ptr [rax]
0x000000000008fc09 : cwde ; mov byte ptr [rbp + rax], 0 ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000fd84f : cwde ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000013126e : cwde ; mov qword ptr [rbx], rax ; mov eax, 1 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003b449 : cwde ; mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013e78d : cwde ; mov qword ptr [rsi], rax ; mov qword ptr [rdi + 0x18], rdx ; mov eax, 1 ; ret
0x00000000000d69b4 : cwde ; movzx eax, byte ptr [r9 + rax] ; mov byte ptr [rdi + 8], 1 ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x000000000011f632 : cwde ; nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000126a6e : cwde ; shr rax, 4 ; ret
0x00000000001934ad : cwde ; std ; call qword ptr [rax + 0x20fffd98]
0x00000000001934b1 : cwde ; std ; jmp qword ptr [rax]
0x0000000000185df4 : cwde ; stosb byte ptr [rdi], al ; int1 ; jmp qword ptr [rax]
0x00000000001175a4 : cwde ; sub al, byte ptr [rax] ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x000000000011758e : cwde ; sub al, byte ptr [rax] ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000107597 : cwde ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000a4b5a : dec byte ptr [rax + 0x29] ; ret 0x149
0x00000000000a2b42 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000008aa2a : dec byte ptr [rax + 0x39] ; ret 0x2874
0x000000000016e725 : dec byte ptr [rax + 0x7f] ; je 0x16e752 ; std ; vmovdqu64 zmmword ptr [rdi + rdx - 0x100], zmm7 ; vzeroupper ; ret
0x000000000016e903 : dec byte ptr [rax + 0x7f] ; jg 0x16e919 ; vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x000000000016eaa9 : dec byte ptr [rax + 0x7f] ; jg 0x16eabf ; vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x000000000016e72d : dec byte ptr [rax + 0x7f] ; jl 0x16e752 ; cld ; vzeroupper ; ret
0x000000000016e83d : dec byte ptr [rax + 0x7f] ; std ; vmovdqu64 zmmword ptr [r11], zmm4 ; vzeroupper ; ret
0x000000000003a904 : dec byte ptr [rax - 0x3f] ; loop 0x3a933 ; mov eax, eax ; or rax, rdx ; ret
0x0000000000089d83 : dec byte ptr [rax - 0x73] ; xor byte ptr [rax - 0x77], cl ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x0000000000146169 : dec byte ptr [rax - 0x75] ; cmp al, 0x24 ; mov rax, qword ptr [rax + 0x128] ; jmp rax
0x000000000012ccc2 : dec byte ptr [rax - 0x77] ; fisttp word ptr [rax - 0x77] ; add al, 0x24 ; mov rcx, rax ; call r12
0x000000000008d9f9 : dec byte ptr [rax - 0x77] ; ret
0x000000000007b0c2 : dec byte ptr [rax - 0x77] ; ret 0x294c
0x000000000004e017 : dec byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000062cc1 : dec byte ptr [rax - 0x7d] ; ret
0x000000000004b85d : dec byte ptr [rcx + rcx*4 - 9] ; call rax
0x000000000009c53d : dec byte ptr [rdi] ; test ch, cl ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret 0x5a8d
0x000000000006391c : dec dword ptr [rax + 0x29] ; enter -0x7cb8, -0x40 ; add dword ptr [rax + 1], ecx ; ret 0x149
0x00000000000c514d : dec dword ptr [rax + 0x29] ; fmul dword ptr [rcx - 0x7d] ; ret
0x000000000005e88c : dec dword ptr [rax + 0x29] ; ret
0x00000000000a4cda : dec dword ptr [rax + 0x29] ; ret 0x149
0x00000000000a2c82 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x00000000000580d5 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x000000000003ebc1 : dec dword ptr [rax + 0x29] ; ret 0x894c
0x00000000000d0a73 : dec dword ptr [rax + 0x29] ; ret 0x8d48
0x0000000000046d1c : dec dword ptr [rax + 0x29] ; ret 0x8d49
0x000000000006d83a : dec dword ptr [rax + 0x39] ; add dword ptr [rbp + 0xf48ff78], ecx ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x000000000006deb9 : dec dword ptr [rax + 0x39] ; add dword ptr [rbp + 0xf48ff78], ecx ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8504
0x000000000006dfa6 : dec dword ptr [rax + 0x39] ; add dword ptr [rbp + rcx*4 + 0x40], eax ; dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4504
0x00000000000f101c : dec dword ptr [rax + 0x39] ; pop rbp ; add byte ptr [rcx - 0x77], cl ; add al, 0x24 ; je 0xf100c ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003ca9f : dec dword ptr [rax + 0x39] ; ret
0x000000000007a04a : dec dword ptr [rax + 0x39] ; ret 0x830f
0x0000000000065207 : dec dword ptr [rax + 0x39] ; ret 0x840f
0x000000000005e334 : dec dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000057942 : dec dword ptr [rax + 0x39] ; ror dword ptr [rdi], -0x7b ; ret
0x000000000004abae : dec dword ptr [rax + 0x48e57506] ; mov eax, esi ; ret
0x0000000000057794 : dec dword ptr [rax + 0x63] ; add al, 0x90 ; lea rdx, qword ptr [rip - 0x2de] ; add rax, rdx ; jmp rax
0x000000000005cbc9 : dec dword ptr [rax + 0x63] ; add al, 0x99 ; add rax, rcx ; jmp rax
0x000000000010af3b : dec dword ptr [rax + 0x63] ; fisttp dword ptr [rax - 0x77] ; sbb eax, 0x2b62da ; pop rbx ; ret
0x000000000002d168 : dec dword ptr [rax + 0x63] ; ret
0x00000000000f7f69 : dec dword ptr [rax + 0xf] ; add al, 0x24 ; add rsp, 0x18 ; ret
0x000000000006dfad : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4504
0x000000000006d632 : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x000000000006debf : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8504
0x000000000008f9e9 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x000000000012b2b4 : dec dword ptr [rax + 0xf] ; mov esi, 0x83480153 ; ret
0x0000000000091a54 : dec dword ptr [rax + 0xf] ; mov esp, 0x440f48c7 ; ret 0xc083
0x000000000003ac72 : dec dword ptr [rax + 0xf] ; ret
0x00000000000f809b : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000089c21 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000007a844 : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000001457bd : dec dword ptr [rax + 0xf] ; ret 0x8d4c
0x000000000002d879 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x00000000001106dc : dec dword ptr [rax + 1] ; imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005e8c6 : dec dword ptr [rax + 1] ; ret
0x0000000000066e46 : dec dword ptr [rax + 1] ; ret 0x8d48
0x0000000000046766 : dec dword ptr [rax + 1] ; ret 0xf66
0x0000000000198993 : dec dword ptr [rax + rdx] ; add al, byte ptr [rax] ; xchg eax, esp ; ret
0x0000000000187e13 : dec dword ptr [rax - 0x2b000a22] ; iretd ; cmc ; call rsp
0x00000000000363e3 : dec dword ptr [rax - 0x2d] ; ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x000000000006245f : dec dword ptr [rax - 0x39] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf1e8
0x000000000017247b : dec dword ptr [rax - 0x39] ; add eax, 0x250779 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000172026 : dec dword ptr [rax - 0x39] ; add eax, 0x2508ae ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000172642 : dec dword ptr [rax - 0x39] ; add eax, 0x251402 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000172818 : dec dword ptr [rax - 0x39] ; add eax, 0x25292c ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000ede76 : dec dword ptr [rax - 0x39] ; mov r8b, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000057814 : dec dword ptr [rax - 0x39] ; ret
0x00000000000cf07c : dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000577d3 : dec dword ptr [rax - 0x39] ; xor byte ptr [r8], r8b ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000001864d7 : dec dword ptr [rax - 0x3f000db8] ; jmp rax
0x000000000004dadf : dec dword ptr [rax - 0x3f] ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; xor esi, esi ; call rax
0x0000000000185e7b : dec dword ptr [rax - 0x42] ; cld ; ljmp ptr [rax - 0x41] ; cld ; dec dword ptr [rax] ; scasd eax, dword ptr [rdi] ; cld ; lcall ptr [rax] ; ret 0xfffc
0x0000000000188747 : dec dword ptr [rax - 0x4e] ; idiv bh ; mov dl, 0xf6 ; call qword ptr [rax]
0x000000000018873f : dec dword ptr [rax - 0x4e] ; idiv bh ; mov dl, 0xf6 ; dec dword ptr [rax - 0x4e] ; idiv bh ; mov dl, 0xf6 ; call qword ptr [rax]
0x0000000000195a2b : dec dword ptr [rax - 0x5fdc0000] ; out dx, al ; jmp rsp
0x0000000000185def : dec dword ptr [rax - 0x67000e56] ; stosb byte ptr [rdi], al ; int1 ; jmp qword ptr [rax]
0x00000000000fd84d : dec dword ptr [rax - 0x68] ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x00000000000ffbb4 : dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000002ed1d : dec dword ptr [rax - 0x73] ; adc eax, 0x15135f ; movsxd rax, dword ptr [rdx + rcx*4] ; add rax, rdx ; jmp rax
0x000000000002ec30 : dec dword ptr [rax - 0x73] ; adc eax, 0x151420 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000002e87d : dec dword ptr [rax - 0x73] ; adc eax, 0x15177b ; movsxd rax, dword ptr [rdx + rcx*4] ; add rax, rdx ; jmp rax
0x000000000013aba8 : dec dword ptr [rax - 0x73] ; adc eax, 0x28b3f0 ; cmp rax, rdx ; je 0x13abd1 ; add rsp, 8 ; ret
0x00000000000f4d0c : dec dword ptr [rax - 0x73] ; adc eax, 0x93c14 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000f3ad5 : dec dword ptr [rax - 0x73] ; adc eax, 0x94c0b ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000c8010 : dec dword ptr [rax - 0x73] ; add al, 0xd0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000010f970 : dec dword ptr [rax - 0x73] ; add dword ptr [r8 + 0x3c63af9], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000032504 : dec dword ptr [rax - 0x73] ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000010bc2b : dec dword ptr [rax - 0x73] ; fdiv dword ptr gs:[rcx] ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000143784 : dec dword ptr [rax - 0x73] ; fmul dword ptr gs:[rcx + 0x5c415bc8] ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004ba70 : dec dword ptr [rax - 0x73] ; fmul dword ptr gs:[rcx + 0x5c415bd8] ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000bfaae : dec dword ptr [rax - 0x73] ; jl 0xbfae3 ; sbb byte ptr [rcx], dh ; test byte ptr [rcx + rcx*4 - 6], 0xe8 ; ret 0xffbb
0x000000000006d763 : dec dword ptr [rax - 0x73] ; lea rdx, qword ptr [rbx + 0x34] ; mov esi, 1 ; mov rdi, rbx ; call rax
0x00000000000cb5ff : dec dword ptr [rax - 0x73] ; or byte ptr [r8 + 0x39], r9b ; ret
0x0000000000031a3f : dec dword ptr [rax - 0x73] ; or eax, 0x1590a9 ; jmp 0x30bd8
0x000000000007e3f8 : dec dword ptr [rax - 0x73] ; push 0x489095eb ; mov eax, 0xffffffff ; ret
0x000000000009920d : dec dword ptr [rax - 0x73] ; push rax ; add dword ptr [rax - 0x7b], ecx ; ror byte ptr [rax - 0x77], 0xd8 ; pop rbx ; cmovne rax, rdx ; ret
0x000000000006a973 : dec dword ptr [rax - 0x73] ; push rcx ; or byte ptr [rax - 0x77], cl ; xchg eax, ebp ; push -0x14000005 ; ret 0x894d
0x00000000000735d7 : dec dword ptr [rax - 0x73] ; push rsi ; add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001107ce : dec dword ptr [rax - 0x75] ; adc byte ptr [r8 - 0x77], cl ; imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008b88f : dec dword ptr [rax - 0x75] ; adc eax, 0x3356c1 ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00000000000db197 : dec dword ptr [rax - 0x75] ; adc ecx, dword ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x40], cl ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000016626a : dec dword ptr [rax - 0x75] ; add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000843e0 : dec dword ptr [rax - 0x75] ; add eax, 0x33c9e0 ; xor edi, edi ; call qword ptr [rax]
0x0000000000084268 : dec dword ptr [rax - 0x75] ; add eax, 0x33cb58 ; mov qword ptr [rsp + 8], r8 ; xor edi, edi ; call qword ptr [rax]
0x000000000010422c : dec dword ptr [rax - 0x75] ; and al, 8 ; mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x00000000000e16a7 : dec dword ptr [rax - 0x75] ; cmp al, 0x24 ; lea rdx, qword ptr [rsp + 0x10] ; mov ecx, eax ; mov rsi, r13 ; call 0xdd951
0x0000000000113a61 : dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x000000000012eba2 : dec dword ptr [rax - 0x75] ; cmp ecx, dword ptr [rax - 0x75] ; or byte ptr [r10], r13b ; push 0x19 ; call qword ptr [rax]
0x0000000000110cde : dec dword ptr [rax - 0x75] ; cmp r9b, r13b ; ret
0x0000000000084da5 : dec dword ptr [rax - 0x75] ; jae 0x84dbf ; jmp 0x8474f
0x00000000000c2323 : dec dword ptr [rax - 0x75] ; je 0xc2353 ; or al, ch ; ret 0x5c
0x00000000000e8275 : dec dword ptr [rax - 0x75] ; je 0xe82a6 ; or byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000103fbd : dec dword ptr [rax - 0x75] ; jge 0x103fc7 ; call rbx
0x0000000000104270 : dec dword ptr [rax - 0x75] ; jge 0x10427a ; call rbx
0x0000000000105e08 : dec dword ptr [rax - 0x75] ; jge 0x105e12 ; call rbx
0x000000000012a9ea : dec dword ptr [rax - 0x75] ; jl 0x12aa1a ; sub al, ch ; ret
0x00000000001224fb : dec dword ptr [rax - 0x75] ; jnp 0x122553 ; test rdi, rdi ; jne 0x1224fb ; pop rbx ; ret
0x000000000005722a : dec dword ptr [rax - 0x75] ; mov ebp, 0xfffffb60 ; call rax
0x00000000000d6346 : dec dword ptr [rax - 0x75] ; mov esp, 0x8824 ; add byte ptr [rax + 0x63], cl ; ret
0x000000000011079e : dec dword ptr [rax - 0x75] ; or byte ptr [r8 - 0x77], cl ; imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000108d86 : dec dword ptr [rax - 0x75] ; or eax, 0x2b80ea ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000009ec9f : dec dword ptr [rax - 0x75] ; pop rbp ; or byte ptr [rcx - 0x73], 0x4f ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000000393f6 : dec dword ptr [rax - 0x75] ; push rsp ; and al, 8 ; mov rsi, r15 ; mov rdi, r12 ; call r14
0x00000000001107fe : dec dword ptr [rax - 0x75] ; sbb byte ptr [r8 - 0x77], cl ; imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008a087 : dec dword ptr [rax - 0x75] ; sbb byte ptr [r8 - 0x77], cl ; ret 0x348
0x000000000013b7ec : dec dword ptr [rax - 0x75] ; sub eax, 0 ; add byte ptr [rax], al ; test rax, rax ; jne 0x13b7ee ; pop rbx ; ret
0x000000000005480f : dec dword ptr [rax - 0x75] ; test dword ptr [rax - 0x7d000000], esp ; ret
0x00000000000e6638 : dec dword ptr [rax - 0x75] ; xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x634c
0x0000000000072cc4 : dec dword ptr [rax - 0x75] ; xchg eax, esp ; and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000018a04f : dec dword ptr [rax - 0x77000554] ; lodsb al, byte ptr [rsi] ; cli ; jmp rax
0x000000000007c71f : dec dword ptr [rax - 0x77] ; adc dword ptr [rax + 0x5b000000], 0x5d ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000122e5d : dec dword ptr [rax - 0x77] ; add eax, 0x29f9db ; add rsp, 8 ; ret
0x00000000000ffa1d : dec dword ptr [rax - 0x77] ; add eax, 0x2c2d5b ; add rsp, 8 ; ret
0x0000000000101068 : dec dword ptr [rax - 0x77] ; add eax, 0x2c3080 ; add rsp, 8 ; ret
0x0000000000100af9 : dec dword ptr [rax - 0x77] ; add eax, 0x2c353f ; jmp 0x100a57
0x00000000000843b1 : dec dword ptr [rax - 0x77] ; and al, 0x18 ; mov qword ptr [rsp + 0x10], r9 ; mov qword ptr [rsp + 8], rcx ; call rsi
0x00000000000b0ad8 : dec dword ptr [rax - 0x77] ; call 0x4ccd9ef5
0x0000000000098c10 : dec dword ptr [rax - 0x77] ; clc ; ret
0x00000000001077fa : dec dword ptr [rax - 0x77] ; cmp byte ptr [r8 + 3], dil ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000033f56 : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fe50a : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000013e86c : dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x000000000013d149 : dec dword ptr [rax - 0x77] ; fimul word ptr [rcx + rcx*4 - 1] ; call r14
0x00000000000ba3a2 : dec dword ptr [rax - 0x77] ; fistp word ptr [rbx - 0x17] ; or al, 0x56 ; idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x00000000000b48bf : dec dword ptr [rax - 0x77] ; fisttp qword ptr [rax - 0x77] ; ret
0x0000000000118677 : dec dword ptr [rax - 0x77] ; fisttp word ptr [rcx + rcx*4 - 0xe] ; mov rsi, r13 ; call 0x4d8a1
0x0000000000089b5a : dec dword ptr [rax - 0x77] ; fucompi st(0) ; int 0xcd
0x0000000000079522 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; lea esp, dword ptr [rdx + rdi*8 - 1] ; xor eax, eax ; pop rbx ; ret
0x0000000000102679 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; outsb dx, byte ptr [rsi] ; loopne 0x10267d ; dec dword ptr [rax - 0x77] ; ret
0x0000000000079162 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; push -0x3fce0006 ; pop rbx ; ret
0x0000000000102091 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; push rsi ; out 0xf1, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000146d14 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret
0x00000000000721a9 : dec dword ptr [rax - 0x77] ; jmp 0x72230
0x000000000009ecc7 : dec dword ptr [rax - 0x77] ; mov byte ptr [r8 - 0x77], r9b ; ret
0x00000000000881c9 : dec dword ptr [rax - 0x77] ; out dx, al ; mov rdi, rax ; mov rbx, rax ; call 0x844dc
0x0000000000170daa : dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x00000000000c551b : dec dword ptr [rax - 0x77] ; out dx, eax ; mov esi, 0x30 ; add rbp, r14 ; call 0x9181e
0x0000000000033b8b : dec dword ptr [rax - 0x77] ; push rax ; or byte ptr [rax - 0x39], cl ; ret 0xfffe
0x0000000000029a50 : dec dword ptr [rax - 0x77] ; ret
0x0000000000020b9a : dec dword ptr [rax - 0x77] ; ret 0x13e9
0x00000000000f8114 : dec dword ptr [rax - 0x77] ; ret 0x1677
0x00000000000fe45e : dec dword ptr [rax - 0x77] ; ret 0x1c77
0x00000000000d0ade : dec dword ptr [rax - 0x77] ; ret 0x1f73
0x000000000004d970 : dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000000ec1e1 : dec dword ptr [rax - 0x77] ; ret 0x2977
0x00000000001028de : dec dword ptr [rax - 0x77] ; ret 0x29e8
0x000000000005dca0 : dec dword ptr [rax - 0x77] ; ret 0x348
0x0000000000078873 : dec dword ptr [rax - 0x77] ; ret 0x38b
0x0000000000036e7b : dec dword ptr [rax - 0x77] ; ret 0x4577
0x000000000006a739 : dec dword ptr [rax - 0x77] ; ret 0x4ee8
0x0000000000036d21 : dec dword ptr [rax - 0x77] ; ret 0x4f77
0x00000000000cf10c : dec dword ptr [rax - 0x77] ; ret 0x6b8
0x0000000000120236 : dec dword ptr [rax - 0x77] ; ret 0x8348
0x0000000000142cb0 : dec dword ptr [rax - 0x77] ; ret 0x840f
0x00000000000e1fdd : dec dword ptr [rax - 0x77] ; ret 0x848b
0x0000000000086a71 : dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000358f3 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x000000000002672a : dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000986d6 : dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000053614 : dec dword ptr [rax - 0x77] ; ret 0x894c
0x0000000000089b62 : dec dword ptr [rax - 0x77] ; ret 0x89eb
0x0000000000098a8f : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000137616 : dec dword ptr [rax - 0x77] ; ret 0x8d48
0x0000000000145abc : dec dword ptr [rax - 0x77] ; ret 0xb60f
0x000000000005a1e7 : dec dword ptr [rax - 0x77] ; ret 0xb848
0x00000000000c9e74 : dec dword ptr [rax - 0x77] ; ret 0xbb
0x00000000000532bd : dec dword ptr [rax - 0x77] ; ret 0xbee9
0x0000000000096ffc : dec dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000decc8 : dec dword ptr [rax - 0x77] ; ret 0xc148
0x0000000000089b84 : dec dword ptr [rax - 0x77] ; ret 0xc3eb
0x000000000013764e : dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x00000000000f8163 : dec dword ptr [rax - 0x77] ; ret 0xcd77
0x000000000006927b : dec dword ptr [rax - 0x77] ; ret 0xce8
0x00000000000527ba : dec dword ptr [rax - 0x77] ; ret 0xf748
0x0000000000130eea : dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00000000000cfe68 : dec dword ptr [rax - 0x77] ; sbb byte ptr [rcx + rcx*4 + 0x78], cl ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000172326 : dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rax - 0x77] ; fbstp dword ptr [rbp - 0x17] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001727c2 : dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rax - 0x77] ; fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x00000000000f4565 : dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rdi] ; test dword ptr [rbp - 0x1600000a], ebp ; ret 0xfff6
0x0000000000172241 : dec dword ptr [rax - 0x7b] ; in eax, dx ; jne 0x172238 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000017237c : dec dword ptr [rax - 0x7b] ; in eax, dx ; jne 0x172364 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f0c57 : dec dword ptr [rax - 0x7b] ; in eax, dx ; jne 0xf0c4d ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f0c56 : dec dword ptr [rax - 0x7b] ; in eax, dx ; jne 0xf0c4e ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bc7ed : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x000000000011776f : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x0000000000130956 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax - 0x77], 0xc3 ; jne 0x1308fe ; xor eax, eax ; pop rbx ; ret
0x0000000000103a7b : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax - 0x77], 3 ; setne al ; movzx eax, al ; pop rbx ; ret
0x000000000011ceba : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax - 0x77], 5 ; and ebx, dword ptr [rcx + 0x2a] ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rdi], -0x7b ; ret
0x0000000000076fd9 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000d2201 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00000000000f0573 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 3
0x0000000000077c29 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000a4ffe : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000012d6e4 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ror byte ptr [rax - 0x7d], 0xc4 ; or bl, al ; mov eax, 1 ; ret
0x00000000001116fe : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x000000000013ab86 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + rax*4 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000001004d0 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rbx + 0x48], 0x39 ; ret
0x000000000006eeec : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x00000000000abd9b : dec dword ptr [rax - 0x7b] ; sal byte ptr [rdi + 0x48], 0x89 ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000708f7 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rdi + rcx + 0x48], 0x89 ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000001072d9 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsi + rsi*2 + 0x48], 0x39 ; ret
0x000000000010a7cf : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x0000000000097272 : dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rax - 0x77], ecx ; ret
0x0000000000098688 : dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013edaa : dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000013ec53 : dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000ecb43 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000142cac : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000010904d : dec dword ptr [rax - 0x7d] ; clc ; or byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000109077 : dec dword ptr [rax - 0x7d] ; clc ; or byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x00000000000260d2 : dec dword ptr [rax - 0x7d] ; jl 0x2610a ; add byte ptr [rdi], cl ; test byte ptr [rdx], ah ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf08
0x0000000000028211 : dec dword ptr [rax - 0x7d] ; jl 0x28244 ; add byte ptr [rsi + rbx*2 - 0xa], sil ; ret
0x00000000000291b9 : dec dword ptr [rax - 0x7d] ; jl 0x291ec ; add byte ptr [rsi + rbx*2 - 0xa], sil ; ret
0x0000000000110826 : dec dword ptr [rax - 0x7d] ; jnp 0x110864 ; add byte ptr [rax], bh ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x000000000013ac73 : dec dword ptr [rax - 0x7d] ; mov eax, 0xe0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000262d9 : dec dword ptr [rax - 0x7d] ; ret
0x000000000002918f : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000052e97 : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x00000000000bfa20 : dec dword ptr [rax - 0x7d] ; ret 0x4909
0x000000000003175a : dec dword ptr [rax - 0x7d] ; ret 0x8b08
0x0000000000061ee5 : dec dword ptr [rax - 0x7d] ; ret 0xbe08
0x0000000000063a24 : dec dword ptr [rax - 0x7d] ; ret 0xbf08
0x00000000000d1389 : dec dword ptr [rax - 0x7d] ; ret 0xe902
0x0000000000031743 : dec dword ptr [rax - 0x7d] ; ret 0xeb04
0x00000000000f263e : dec dword ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000078318 : dec dword ptr [rax - 0x7f] ; ret
0x000000000015a62c : dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000001877af : dec dword ptr [rax - 0x80] ; hlt ; call rax
0x000000000018a05b : dec dword ptr [rax - 0xf000554] ; stosd dword ptr [rdi], eax ; cli ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; cli ; call qword ptr [rax]
0x00000000000f57b9 : dec dword ptr [rax - 9] ; fmul dword ptr [rax - 0x75] ; jl 0xf57f0 ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000001889bf : dec dword ptr [rax] ; mov al, 0xf6 ; dec dword ptr [rax] ; mov al, 0xf6 ; dec dword ptr [rax] ; mov al, 0xf6 ; push rbp ; ret
0x00000000001889c3 : dec dword ptr [rax] ; mov al, 0xf6 ; dec dword ptr [rax] ; mov al, 0xf6 ; push rbp ; ret
0x000000000018892b : dec dword ptr [rax] ; mov al, 0xf6 ; push rbp ; ret
0x000000000019362f : dec dword ptr [rax] ; sbb edi, esp ; call rax
0x0000000000185e83 : dec dword ptr [rax] ; scasd eax, dword ptr [rdi] ; cld ; lcall ptr [rax] ; ret 0xfffc
0x00000000000fa603 : dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x000000000012eef7 : dec dword ptr [rbp + rcx*4 + 0x4c] ; and al, 0x1c ; call qword ptr [rax]
0x000000000013a970 : dec dword ptr [rbp + rcx*4 + 0x4c] ; and al, 0x2a ; call qword ptr [rax]
0x0000000000053ca2 : dec dword ptr [rbp + rcx*4 - 0x6c] ; and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000001366cc : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x00000000001029c1 : dec dword ptr [rbx + 0x2be84005] ; add byte ptr [rsi + rax - 0x77], dh ; cmp eax, 0x2be838 ; ret
0x00000000000e263e : dec dword ptr [rbx + 0x438d044d] ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000f6fd2 : dec dword ptr [rbx + 0x438d0455] ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000106d58 : dec dword ptr [rbx + rcx*4 + 0x6d] ; add byte ptr [rax - 0x77], cl ; ret 0xabe
0x00000000001934ab : dec dword ptr [rbx] ; cwde ; std ; call qword ptr [rax + 0x20fffd98]
0x000000000002eb3e : dec dword ptr [rcx + 0x63] ; add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000005aff6 : dec dword ptr [rcx + 0x63] ; mov edi, 0xffef7085 ; jmp qword ptr [rax]
0x00000000001963ab : dec dword ptr [rcx + 1] ; add byte ptr [rbx*4 + 0x21ccfff1], dh ; add dword ptr [rax], eax ; popfq ; int1 ; jmp rsp
0x000000000012515c : dec dword ptr [rcx + rcx*4 - 0x2e] ; mov qword ptr [r14 + 8], rax ; mov rdi, rax ; call 0x9139d
0x000000000004b85a : dec dword ptr [rcx + rcx*4 - 2] ; mov rdi, r14 ; call rax
0x00000000000eb2a7 : dec dword ptr [rcx - 0x75] ; pop rsi ; and byte ptr [rax - 0x77], cl ; fucompi st(0) ; jl 0xeb2e8 ; cli ; dec dword ptr [rax + 1] ; ret
0x00000000000eb2a6 : dec dword ptr [rcx - 0x75] ; pop rsi ; and byte ptr [rax - 0x77], cl ; fucompi st(0) ; jl 0xeb2e9 ; cli ; dec dword ptr [rax + 1] ; ret
0x00000000000eb2a5 : dec dword ptr [rcx - 0x75] ; pop rsi ; and byte ptr [rax - 0x77], cl ; fucompi st(0) ; jl 0xeb2ea ; cli ; dec dword ptr [rax + 1] ; ret
0x000000000011109f : dec dword ptr [rcx - 0x75] ; push rdi ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000f0284 : dec dword ptr [rcx - 0x75] ; push rsi ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000011023c : dec dword ptr [rcx - 0x75] ; sbb byte ptr [r8 - 0x77], r9b ; fimul dword ptr [rax - 0x7d] ; ret
0x000000000008a6a0 : dec dword ptr [rcx - 0x75] ; sbb byte ptr [rax - 0x77], r9b ; ret 0x349
0x0000000000056122 : dec dword ptr [rcx - 0x75] ; xchg byte ptr [rax - 0x7d000000], ah ; ret
0x0000000000187ce3 : dec dword ptr [rdi + rbp] ; cmc ; push qword ptr [rdi - 0x14000ad1] ; cmc ; call rax
0x00000000001194b3 : dec dword ptr [rdi] ; add byte ptr [rax], al ; jbe 0x1194c6 ; jmp 0x456d8
0x00000000000aaa53 : dec dword ptr [rdi] ; add byte ptr [rax], al ; lea rax, qword ptr [rbx + 1] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000108eb2 : dec dword ptr [rdi] ; add byte ptr [rax], al ; or eax, edi ; ret
0x00000000000468e3 : dec dword ptr [rdi] ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000a0d60 : dec dword ptr [rdi] ; mov ebp, 0xf80148c0 ; add rax, r8 ; ret
0x00000000000accc2 : dec dword ptr [rdi] ; test bh, bh ; add byte ptr [rax], al ; add byte ptr [rbx + 0xa777fff], al ; mov eax, edi ; ret
0x00000000000302df : dec dword ptr [rdi] ; test bl, ah ; add al, byte ptr [rax] ; add byte ptr [rcx], dh ; imul al ; ret
0x0000000000025db4 : dec dword ptr [rdi] ; test bl, dh ; add al, byte ptr [rax] ; add bh, dh ; ret 0
0x0000000000127f87 : dec dword ptr [rdi] ; test byte ptr [rax - 0x76000002], ch ; ret
0x00000000000258bf : dec dword ptr [rdi] ; test byte ptr [rax - 0x8fffffb], ah ; ret 0
0x0000000000031263 : dec dword ptr [rdi] ; test byte ptr [rdx], al ; add eax, 0x89450000 ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000025da8 : dec dword ptr [rdi] ; test byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add bh, dh ; ret 0
0x000000000012570d : dec dword ptr [rdi] ; test byte ptr [rsi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x0000000000124e24 : dec dword ptr [rdi] ; test ch, ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000000000121e2c : dec dword ptr [rdi] ; test dl, dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000170590 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000da81c : dec dword ptr [rdx + 0x63] ; add al, 0xba ; add rax, rdx ; jmp rax
0x0000000000186ed3 : dec dword ptr [rdx - 0x1f] ; call qword ptr [rax]
0x00000000001934a3 : dec ebx ; xchg eax, esi ; std ; ljmp ptr [rbx - 0x69] ; std ; dec dword ptr [rbx] ; cwde ; std ; call qword ptr [rax + 0x20fffd98]
0x00000000001940ab : dec edx ; pushfq ; cld ; push qword ptr [rax - 0x64] ; cld ; jmp rax
0x00000000001933b7 : dec esi ; nop ; std ; call rax
0x000000000019658b : dec esp ; add dword ptr cs:[rax], eax ; je 0x19651e ; jmp rsp
0x000000000019658a : dec esp ; add dword ptr cs:[rax], eax ; je 0x19651f ; jmp rsp
0x0000000000196453 : dec esp ; add dword ptr es:[rax], eax ; push rsp ; and esi, edx ; jmp rsp
0x0000000000196983 : dec esp ; add qword ptr [rax], rax ; add al, 0xa0 ; jmp rsp
0x0000000000195e73 : dec esp ; inc dword ptr [rax] ; add byte ptr [rbx + rsi*4], dh ; out dx, eax ; jmp rsp
0x0000000000194b1b : dec esp ; jle 0x194b27 ; add byte ptr [rax + rbp - 0x16], dl ; jmp rsp
0x0000000000198013 : dec esp ; leave ; add dword ptr [rax], eax ; cmp al, 0xf8 ; jmp rsp
0x0000000000194cdb : dec esp ; mov byte ptr [rax], al ; add byte ptr [rsi + rbp*2 - 0x16], ah ; jmp rsp
0x00000000001950a3 : dec esp ; sahf ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x1950b3
0x0000000000195e13 : dec esp ; std ; add byte ptr [rax], al ; in al, -0x6f ; out dx, eax ; jmp rsp
0x0000000000194f63 : dec esp ; xchg eax, edi ; add byte ptr [rax], al ; je 0x194fb7 ; jmp 0x194f73
0x00000000000a4ffd : dec qword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000002918e : dec qword ptr [rax - 0x7d] ; ret 0x4801
0x000000000013e98d : div byte ptr [rax + rsi + 0x31] ; sar byte ptr [rdx - 1], 0x4c ; mov esi, esi ; mov rdi, rbp ; call r12
0x0000000000003188 : div byte ptr [rax] ; lodsb al, byte ptr [rsi] ; xor dh, bh ; xor byte ptr [rdx + rsi - 0x11fc0c82], ch ; mov eax, 0xa1a3e95a ; ret 0xba88
0x000000000008dbd2 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000000318c : div dword ptr [rax] ; lodsb al, byte ptr [rsi] ; xor bh, byte ptr [rsi - 0xd] ; add ebp, esi ; mov eax, 0xa1a3e95a ; ret 0xba88
0x0000000000048fd9 : div eax ; cmp rcx, 0xff ; jne 0x48fdb ; mov rax, rdx ; ret
0x0000000000079b9c : div ebp ; mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001196ec : div ebp ; mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000011704d : div esi ; sub al, byte ptr [rax] ; cmp rdx, rax ; jne 0x11703a ; ret
0x0000000000048fd8 : div r8 ; cmp rcx, 0xff ; jne 0x48fdc ; mov rax, rdx ; ret
0x0000000000079b9b : div rbp ; mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001196eb : div rbp ; mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000012672f : enter -0x173f, 3 ; mov ecx, eax ; xor eax, eax ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x0000000000110fa0 : enter -0x177, 0x73 ; sbb dword ptr [rax + 0x3a], eax ; cmp byte ptr [rsi + rbx + 0x48], dh ; mov edx, eax ; jmp 0x110fc1
0x00000000001378dc : enter -0x1f01, -0x70 ; mov rax, qword ptr [rdx] ; bswap eax ; mov dword ptr [rdi + 0x54], eax ; mov eax, 1 ; ret
0x000000000013efef : enter -0x1f01, 0x66 ; nop dword ptr [rax + rax] ; ret
0x000000000004c03b : enter -0x367c, 0x74 ; sbb dword ptr [rbx - 0x48743], eax ; call qword ptr [rax]
0x00000000000488d3 : enter -0x3cff, 0x66 ; nop dword ptr cs:[rax + rax] ; xor eax, eax ; ret
0x0000000000131fc8 : enter -0x3eb8, -0x1f ; or byte ptr [rax - 0x77], cl ; ret 0x314c
0x0000000000036612 : enter -0x72b4, -0x76 ; add byte ptr [rax], 0 ; add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x394c
0x00000000000a4b56 : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x149
0x00000000000a2b3e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x00000000000a4cd6 : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x149
0x00000000000a2c7e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x00000000001029f1 : enter -0x74b4, 0x4c ; and al, 8 ; syscall ; cmp rax, -0xfff ; jae 0x102a12 ; ret
0x0000000000108ce6 : enter -0x76b4, 0x4c ; and al, 0xd0 ; syscall ; cmp rax, -0x1000 ; ja 0x108d11 ; ret
0x000000000008f75f : enter -0x7bf1, -0x46 ; add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x0000000000079e9c : enter -0x7cb8, -0x3c ; sbb byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000006391f : enter -0x7cb8, -0x40 ; add dword ptr [rax + 1], ecx ; ret 0x149
0x0000000000134c9c : enter -0x7e77, -0x48 ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x0000000000134b54 : enter -0x7e77, -0x4c ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x0000000000134c6f : enter -0x7e77, -0x58 ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000004e6cf : enter -6, -1 ; or byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x4e678
0x000000000019565d : enter 0, -0x3c ; sub al, 0xee ; ljmp ptr [rax + rcx*8 + 0x2db40000] ; out dx, al ; call rsp
0x0000000000134aae : enter 0, 0 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0xc8 ; jmp rcx
0x0000000000134af7 : enter 0, 0 ; call rax
0x000000000012f636 : enter 0, 0 ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x000000000012f62f : enter 0, 0 ; push qword ptr [rsp + 0xc8] ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x000000000007d379 : enter 0x1476, 0x48 ; mov eax, dword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000000ab048 : enter 0x1577, 0x48 ; sub edi, 0x10 ; add rax, rdi ; ret
0x000000000007de65 : enter 0x1876, 0x48 ; mov eax, dword ptr [rbx + 0x48] ; add rsp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x00000000000351a1 : enter 0x1b9, 0 ; add byte ptr [rax], al ; sar eax, 0x1f ; sub ecx, edx ; not eax ; and eax, ecx ; ret
0x000000000005a70b : enter 0x1ba, 0 ; add byte ptr [rax], al ; jmp rax
0x00000000000598c7 : enter 0x1ba, 0 ; add byte ptr [rax], al ; mov dword ptr [rbp - 0x10b4], 0 ; jmp rax
0x000000000005a758 : enter 0x1ba, 0 ; add byte ptr [rax], al ; mov dword ptr [rbp - 0x10b4], 1 ; jmp rax
0x000000000004ee05 : enter 0x1ba, 0 ; add byte ptr [rax], al ; mov r8d, 1 ; jmp rax
0x0000000000172583 : enter 0x2512, 0 ; add byte ptr [rsi + rax - 0x17], dh ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; ret
0x000000000004a5be : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000073464 : enter 0x2976, 0x48 ; mov eax, dword ptr [rbp + 0x18] ; mov esi, r12d ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000fcdac : enter 0x2c40, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f90ac : enter 0x2c7d, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f86ac : enter 0x2c87, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd2ac : enter 0x2f3b, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000004dd7a : enter 0x3145, -0x40 ; mov edx, 1 ; jmp rax
0x00000000001311ff : enter 0x389, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000007da42 : enter 0x394c, -0x40 ; jbe 0x7da67 ; mov rax, qword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000020742 : enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; add rsp, 0x28 ; jmp rax
0x000000000008fb61 : enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; add rsp, 8 ; jmp rax
0x00000000000645a2 : enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x000000000003561c : enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; jmp rax
0x00000000000f76ab : enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; mov edi, 1 ; call rax
0x0000000000047bbe : enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; mov edi, dword ptr [rsp + 0x3c] ; call rax
0x000000000003a86d : enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; mov qword ptr fs:[rbp], rdx ; call rax
0x000000000002f5f2 : enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; mov rdi, r13 ; call rax
0x00000000001174f4 : enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; test rax, rax ; je 0x117540 ; call rax
0x000000000004dae2 : enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; xor esi, esi ; call rax
0x00000000000738a0 : enter 0x7676, 0x48 ; mov eax, dword ptr [rbp + 0x20] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000183cfc : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000073069 : enter 0xf48, 0x4f ; ror dword ptr [rax - 0x7b], -0x2e ; jne 0x7306b ; ret
0x000000000007d029 : enter 0xf48, 0x4f ; ror dword ptr [rax - 0x7b], -0x2e ; jne 0x7d02b ; ret
0x0000000000197fdd : enter 1, 0x24 ; xor edi, eax ; lcall ptr [rax + rcx*8 + 0x33b40001] ; clc ; jmp rsp
0x000000000013f73a : fadd dword ptr [rax + rax] ; add byte ptr [rcx + rcx*4 - 8], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001a7255 : fadd dword ptr [rax] ; add al, ch ; push rsp ; int1 ; jmp qword ptr [rax]
0x000000000001fcb1 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001189f5 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000000f2d5b : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov eax, r15d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007a000 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x000000000012f971 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12f993 ; mov rdi, rbx ; call rax
0x000000000012fce3 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12fd05 ; mov rdi, rbx ; call rax
0x00000000000c3936 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, r15 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011066f : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e208e : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010631d : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000106460 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000045fc6 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000102d94 : fadd dword ptr [rax] ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x102db1 ; ret
0x00000000000879f7 : fadd dword ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001a71ed : fadd dword ptr [rax] ; add byte ptr [rax], dh ; int1 ; call qword ptr [rcx]
0x00000000001a716d : fadd dword ptr [rax] ; add byte ptr [rax], dh ; int1 ; jmp qword ptr [rcx]
0x00000000001177f5 : fadd dword ptr [rax] ; leave ; ret
0x00000000000488d1 : fadd dword ptr [rbx + 0x66c301c8] ; nop dword ptr cs:[rax + rax] ; xor eax, eax ; ret
0x000000000016a124 : fadd dword ptr [rbx] ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000001207bd : fadd dword ptr [rcx] ; add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e2fbc : fadd dword ptr [rcx] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f75f8 : fadd dword ptr [rdx] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008aeb0 : fadd qword ptr [rax] ; add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000010a6c4 : fadd qword ptr [rax] ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10a6e1 ; ret
0x00000000001add34 : fadd qword ptr [rbx + 1] ; add byte ptr [rax], cl ; test ch, dh ; jmp rax
0x000000000016ed50 : fadd qword ptr [rcx] ; add byte ptr [rax], al ; test dl, 0x40 ; jne 0x16ed1d ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000007c798 : fadd qword ptr [rsi + 0x34] ; add byte ptr [rdi + rax*8], ah ; or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000170d28 : fadd st(3) ; nop word ptr [rax + rax] ; ret
0x00000000000f7f40 : fadd st(3) ; nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000abd28 : fadd st(3) ; nop word ptr [rax + rax] ; xor rax, rax ; ret
0x0000000000107330 : fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x0000000000033043 : fadd st(6) ; add dword ptr [rax], eax ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e987d : fbld dword ptr [rbp - 0x76b7ffd3] ; fimul word ptr [rax - 0x75] ; or cl, byte ptr [rax - 0x77] ; ret 0xc1e8
0x000000000004adc5 : fbld dword ptr [rsi + 0x2e] ; nop dword ptr [rax + rax] ; ret
0x0000000000070ec3 : fbstp dword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], cl ; pop r12 ; pop r13 ; jmp rax
0x0000000000103500 : fbstp dword ptr [rcx] ; shr al, 0x48 ; xor ebp, esi ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000011b31e : fbstp dword ptr [rcx] ; shr al, 0x9a ; mov dl, 0xf3 ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000008991f : fcom dword ptr [rcx] ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000010fc9 : fcom dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x51
0x00000000000f84e4 : fcom dword ptr [rdx] ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xec ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000001aea34 : fcom qword ptr [rax + 1] ; add byte ptr [rax], bh ; mov cl, 0xf5 ; jmp qword ptr [rcx]
0x00000000001721b0 : fcom qword ptr [rax] ; test rdi, rdi ; je 0x1721dc ; mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x1721d7 ; call rax
0x0000000000103a9c : fcom st(3) ; sub eax, dword ptr [rax] ; mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x0000000000186f0d : fcomi st(3) ; call rax
0x000000000003c63e : fcomi st(7) ; mov byte ptr [rax], 0 ; add byte ptr [rax], 0xf ; xchg eax, ebp ; ret
0x0000000000105535 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000006bc65 : fcomp dword ptr [rbx - 0x3d] ; nop dword ptr [rax + rax] ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; ret
0x00000000000fd0a3 : fcomp dword ptr [rbx - 0x3d] ; nop word ptr cs:[rax + rax] ; xor eax, eax ; pop rbx ; ret
0x00000000000dff30 : fcomp qword ptr [rax] ; sti ; call rcx
0x0000000000063089 : fcos ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000045e3a : fdiv dword ptr [rdi] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000045dbf : fdiv dword ptr [rdi] ; add byte ptr [rax - 0x73], cl ; add eax, 0x37d817 ; mov byte ptr [rax + rdx], 0 ; ret
0x0000000000055a7d : fdiv qword ptr [r14] ; add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000000a07b3 : fdiv qword ptr [rcx] ; rol bl, 0x66 ; nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000000d8ecb : fdiv qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000055a7e : fdiv qword ptr [rsi] ; add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000000398bf : fdiv st(7), st(0) ; dec dword ptr [rax - 0x73] ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ffbb2 : fdivp st(0) ; dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000044241 : fdivp st(7) ; dec dword ptr [rax - 0x77] ; ret
0x00000000000299eb : fdivr dword ptr [rax + 1] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cd9e3 : fdivr dword ptr [rax - 1] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001800f4 : fdivr dword ptr [rax] ; jmp 0x1800fe
0x00000000001800f4 : fdivr dword ptr [rax] ; jmp 0x180102
0x00000000001800f4 : fdivr dword ptr [rax] ; jmp 0x180106
0x00000000001b7498 : fdivr dword ptr [rcx] ; clc ; call rax
0x000000000007a724 : fdivr dword ptr [rsp + rsi] ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000299ea : fdivr dword ptr gs:[rax + 1] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cd9e2 : fdivr dword ptr gs:[rax - 1] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001a8a34 : fdivr st(0), st(0) ; add byte ptr [rax], al ; call 0x221a7c88
0x00000000001a8b34 : fdivr st(1), st(0) ; add byte ptr [rax], al ; test al, 0x46 ; jmp qword ptr [rcx]
0x0000000000186f01 : fdivr st(3), st(0) ; lcall ptr [rbp - 0x1f] ; ljmp ptr [rax + 0x7dfff3db] ; fcomi st(3) ; call rax
0x0000000000077870 : fdivr st(4), st(0) ; or dword ptr [rax], eax ; add rsp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x0000000000061ee3 : fdivr st(7) ; dec dword ptr [rax - 0x7d] ; ret 0xbe08
0x0000000000100af8 : fdivr st(7) ; mov qword ptr [rip + 0x2c353f], rax ; jmp 0x100a58
0x00000000000a5a0e : fdivr st(7) ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000abd5e : fdivrp st(2) ; or eax, dword ptr [rax] ; ret
0x0000000000186d15 : fdivrp st(3) ; call rax
0x000000000002bc02 : fiadd dword ptr [rax] ; add byte ptr [rax], al ; movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x000000000016eeb2 : fiadd dword ptr [rax] ; add byte ptr [rax], al ; test ah, 0x40 ; jne 0x16efb1 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000012fe3e : fiadd dword ptr [rax] ; add byte ptr [rbp + 0x480b75c0], al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000117492 : fiadd dword ptr [rbx + 0x3b8eaf8] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x90c3
0x00000000000c8e5d : fiadd word ptr [rax + rax] ; add rsp, 0x80 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000087686 : fiadd word ptr [rcx] ; add byte ptr [rax], al ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000002fa2 : ficomp dword ptr [rbx + 0xb886fae] ; and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000002fa1 : ficomp dword ptr cs:[rbx + 0xb886fae] ; and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000107596 : ficomp word ptr [rax - 0x2708ffd5] ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000083c1e : fidiv word ptr [rbx] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000146145 : fidivr dword ptr [rax + 1] ; ret
0x00000000000476b8 : fild dword ptr [rax + 0xf3a007d] ; xchg eax, esp ; ret
0x00000000001a74ed : fild dword ptr [rax] ; add byte ptr [rax], ah ; pop rdi ; int1 ; call rbx
0x00000000001219ed : fild dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012fd8e : fild dword ptr [rax] ; add byte ptr [rbp + 0x310b75c0], al ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000001b7495 : fild dword ptr [rcx] ; add al, bl ; cmp eax, edi ; call rax
0x00000000000c8dcf : fild word ptr [rax + rax] ; add rsp, 0x80 ; pop rbx ; ret
0x00000000000bf72d : fild word ptr [rbx + 0x30] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007c3f2 : fild word ptr [rcx - 1] ; xchg eax, edi ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000001b9fc2 : fild word ptr [rcx] ; add byte ptr [rdx + rax - 0xfffffb], ch ; inc dword ptr [rcx] ; or ch, byte ptr [rdi + 5] ; ret
0x0000000000085606 : fimul dword ptr [rax + 0x21] ; ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2919e2b
0x000000000005d7d9 : fimul dword ptr [rax + 0x29] ; ret 0x8348
0x000000000003e478 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x000000000010230f : fimul dword ptr [rax + 0xf] ; call 0xffffffffffd31b07
0x000000000008dd85 : fimul dword ptr [rax + 0xf] ; mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x0000000000148ab6 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000ac7f5 : fimul dword ptr [rax - 0x77] ; clc ; ret
0x0000000000032340 : fimul dword ptr [rax - 0x7d] ; ret
0x000000000013a242 : fimul dword ptr [rax - 0x7d] ; ret 0x4812
0x00000000000b00d4 : fimul dword ptr [rax - 9] ; fimul dword ptr [rax + 0x39] ; ret 0xf48
0x00000000000d0d6c : fimul dword ptr [rcx + 3] ; push rdi ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000131a87 : fimul dword ptr [rcx + rcx*4 - 0x1a] ; mov rdi, rbp ; call rax
0x00000000000e9883 : fimul word ptr [rax - 0x75] ; or cl, byte ptr [rax - 0x77] ; ret 0xc1e8
0x000000000013e86f : fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x00000000000c519e : fimul word ptr [rax - 0x77] ; out dx, eax ; mov rdx, r14 ; mov qword ptr [rsp + 0x10], r11 ; call 0x913be
0x0000000000078eae : fimul word ptr [rax - 0x77] ; ret
0x00000000000601a1 : fimul word ptr [rax - 0x7d] ; ret
0x000000000013b2ae : fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x00000000000fbece : fist dword ptr [rax - 0x6e4a418] ; dec dword ptr [rax + 0x39] ; ret
0x000000000002cb14 : fist word ptr [rip + 0x387a3b00] ; jae 0x2cb3c ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000075f59 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x130] ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000103d7b : fistp word ptr [rbx + 0x48] ; mov eax, ebp ; pop rbp ; pop r12 ; jmp rax
0x0000000000070bb6 : fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000073470 : fistp word ptr [rbx + 0x5d] ; pop r12 ; jmp rax
0x00000000000ba3a5 : fistp word ptr [rbx - 0x17] ; or al, 0x56 ; idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x00000000000c6865 : fisttp dword ptr [rax + 0x39] ; ret
0x000000000005cc75 : fisttp dword ptr [rax + 0x63] ; add al, 0x99 ; add rax, rcx ; jmp rax
0x0000000000031221 : fisttp dword ptr [rax + 1] ; ret
0x000000000003c566 : fisttp dword ptr [rax - 0x39] ; ret
0x000000000002aeff : fisttp dword ptr [rax - 0x3f] ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x00000000000587c7 : fisttp dword ptr [rax - 0x73] ; adc al, 0x85 ; add byte ptr [rax], 0 ; add byte ptr [rcx + 0x63], cl ; ret
0x000000000012476a : fisttp dword ptr [rax - 0x77] ; fbstp dword ptr [rbp - 0x10] ; mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000172329 : fisttp dword ptr [rax - 0x77] ; fbstp dword ptr [rbp - 0x17] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000be4e5 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002a697 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000001727c5 : fisttp dword ptr [rax - 0x77] ; fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x00000000000d1604 : fisttp dword ptr [rax - 0x77] ; fmul dword ptr [rcx + 3] ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000049461 : fisttp dword ptr [rax - 0x77] ; ret
0x00000000000e25ea : fisttp dword ptr [rax - 0x77] ; ret 0xfeb
0x000000000017256d : fisttp dword ptr [rax - 0x77] ; sbb eax, 0x2511ab ; jne 0x172563 ; pop rbx ; ret
0x000000000010af3e : fisttp dword ptr [rax - 0x77] ; sbb eax, 0x2b62da ; pop rbx ; ret
0x00000000000e9c51 : fisttp dword ptr [rdi] ; mov gs, esp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; push rbp ; or byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 + 0x63], r9b ; ret
0x00000000000b42df : fisttp dword ptr [rdi] ; test byte ptr [rdi + rcx], dl ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000001259b0 : fisttp dword ptr [rdi] ; test ecx, edx ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000014d4c2 : fisttp qword ptr [rax + 0x63] ; ror dword ptr [rax + 1], -8 ; ret
0x000000000005d1d6 : fisttp qword ptr [rax - 0x77] ; ret
0x00000000000909ca : fisttp qword ptr [rax - 1] ; ret 0xff48
0x0000000000033f6a : fisttp word ptr [rax - 0x39] ; ret
0x0000000000145d1c : fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x000000000012fbe1 : fisttp word ptr [rax - 0x75] ; or al, 0x24 ; call rcx
0x000000000012ccc5 : fisttp word ptr [rax - 0x77] ; add al, 0x24 ; mov rcx, rax ; call r12
0x0000000000099940 : fisttp word ptr [rax - 0x77] ; ret 0x83eb
0x0000000000113fc0 : fisttp word ptr [rax - 0x77] ; ret 0x8b48
0x000000000009bb98 : fisttp word ptr [rax - 0x77] ; ret 0x8beb
0x0000000000099d70 : fisttp word ptr [rax - 0x77] ; ret 0x91eb
0x0000000000099b50 : fisttp word ptr [rax - 0x77] ; ret 0x93eb
0x000000000009d80b : fisttp word ptr [rax - 0x77] ; ret 0x98eb
0x00000000000a0ff1 : fisttp word ptr [rax - 0x77] ; ret 0xb6e8
0x00000000000b8afb : fisttp word ptr [rax - 0x7d] ; ret 0x4102
0x0000000000086b90 : fisttp word ptr [rax - 0x7d] ; ret 0x4810
0x000000000006c2e4 : fisttp word ptr [rax] ; add byte ptr [rbp - 0x3f6af040], al ; movzx eax, al ; neg eax ; pop rbx ; ret
0x00000000000494ff : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00000000000c701d : fisttp word ptr [rbp - 2] ; dec dword ptr [rax - 0x77] ; ret
0x000000000013b562 : fisttp word ptr [rcx + 0xf] ; fmul qword ptr [rax - 0x7d] ; ret
0x000000000016ed31 : fisubr word ptr [rax - 0x297af0f0] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000099b4b : fld dword ptr [rax + rdi - 0x31] ; jb 0x99b38 ; mov rdx, rax ; jmp 0x99af1
0x000000000019592d : fld dword ptr [rax] ; add ah, dl ; jle 0x195927 ; call rsp
0x00000000001a72e5 : fld dword ptr [rax] ; add byte ptr [rax], bl ; push rsi ; int1 ; jmp qword ptr [rcx]
0x0000000000195925 : fld dword ptr [rax] ; add byte ptr [rdi + rsi*2 - 0x12], ah ; inc dword ptr [rcx + rbx*8 + 0x7ed40000] ; out dx, al ; call rsp
0x00000000000cefb7 : fld dword ptr [rbx + 0x6348000b] ; add al, 0x9a ; add rax, rdx ; jmp rax
0x00000000001054a3 : fld dword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000001a773d : fld qword ptr [rax] ; add byte ptr [rax - 0x7b], ah ; int1 ; jmp qword ptr [rcx]
0x00000000001a7725 : fld qword ptr [rax] ; add byte ptr [rax - 0x7b], cl ; int1 ; jmp qword ptr [rcx]
0x00000000000aaf7f : fld qword ptr [rax] ; add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x0000000000049722 : fld qword ptr [rax] ; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000157013 : fld st(7) ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000008aa1b : fmul dword ptr [eax + 0x33] ; push rdi ; fmul dword ptr [rax + 0x39] ; ret 0x5a74
0x0000000000048894 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x00000000000f744e : fmul dword ptr [rax + 0x21] ; ret
0x0000000000075959 : fmul dword ptr [rax + 0x29] ; ror byte ptr [rax - 0x77], 1 ; ret
0x000000000008aa1c : fmul dword ptr [rax + 0x33] ; push rdi ; fmul dword ptr [rax + 0x39] ; ret 0x5a74
0x000000000010b3ae : fmul dword ptr [rax + 0x39] ; jno 0x10b3ca ; cmovb eax, edx ; ret
0x000000000010b3ae : fmul dword ptr [rax + 0x39] ; jno 0x10b3cb ; cmovb eax, edx ; ret
0x0000000000081a29 : fmul dword ptr [rax + 0x39] ; ret
0x000000000008aa20 : fmul dword ptr [rax + 0x39] ; ret 0x5a74
0x0000000000140142 : fmul dword ptr [rax + 0xf] ; ret
0x00000000000d03c2 : fmul dword ptr [rax + 3] ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000042637 : fmul dword ptr [rax - 0x39] ; ret
0x00000000001328ab : fmul dword ptr [rax - 0x3f] ; call 0xffffffffc29c70c2
0x00000000000ac2b9 : fmul dword ptr [rax - 0x3f] ; clc ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x0000000000098684 : fmul dword ptr [rax - 0x73] ; pop rbx ; dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f57bc : fmul dword ptr [rax - 0x75] ; jl 0xf57ed ; sbb byte ptr [rax - 0x77], cl ; ret
0x000000000002fef9 : fmul dword ptr [rax - 0x77] ; enter 0x415b, 0x5c ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004ae1d : fmul dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012be10 : fmul dword ptr [rax - 0x77] ; rcr byte ptr [rbx + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000076701 : fmul dword ptr [rax - 0x77] ; ret
0x0000000000084558 : fmul dword ptr [rax - 0x77] ; ret 0x3075
0x000000000006dd7a : fmul dword ptr [rax - 0x77] ; xlatb ; jmp 0x6dd48
0x00000000000bf07a : fmul dword ptr [rax - 0x7d] ; ret
0x00000000000253ad : fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000bd05c : fmul dword ptr [rcx + rcx*4 + 0x25] ; hlt ; imul esi, dword ptr [rax], 0x415d5b00 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000010b869 : fmul dword ptr [rdi] ; test dword ptr [rax], esp ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x000000000002fef8 : fmul dword ptr gs:[rax - 0x77] ; enter 0x415b, 0x5c ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004ae1c : fmul dword ptr gs:[rax - 0x77] ; fcomp dword ptr [rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012be0f : fmul dword ptr gs:[rax - 0x77] ; rcr byte ptr [rbx + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001ae234 : fmul qword ptr [rax + 1] ; add byte ptr [rax], cl ; xchg eax, esp ; cmc ; jmp qword ptr [rcx]
0x00000000000cdb50 : fmul qword ptr [rax - 0x73] ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000997f3 : fmul qword ptr [rax - 0x77] ; ret 0x83eb
0x000000000009a49d : fmul qword ptr [rax - 0x77] ; ret 0x8941
0x00000000000c907b : fmul qword ptr [rax - 0x7d] ; ret
0x00000000001ae734 : fmul qword ptr [rbp + 1] ; add byte ptr [rax], ch ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae334 : fmul qword ptr [rcx + 1] ; add byte ptr [rax - 0x57], cl ; cmc ; jmp qword ptr [rcx]
0x00000000000484ca : fnstsw dword ptr [rax + 1] ; ret
0x0000000000154253 : fpatan ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001168e3 : frndint ; sub al, byte ptr [rax] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; jmp rax
0x00000000000567f3 : fstp dword ptr [rax] ; add al, byte ptr [rax] ; add rsp, 0xd8 ; ret
0x00000000000f71af : fstp xword ptr [rax + 0xe] ; test rax, rax ; js 0xf71d7 ; cmp rax, rbx ; setg al ; pop rbx ; ret
0x00000000000cbb8e : fstp xword ptr [rax] ; cmovle eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000014d3a4 : fstp xword ptr [rdx] ; movsxd rcx, ecx ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x0000000000035ab8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000007b00a : fsub dword ptr [rcx + rcx*4 + 2] ; mov rax, -1 ; ret
0x000000000001fb81 : fsub dword ptr [rcx + rcx*4 + 2] ; mov rax, rbp ; cmp r9, rax ; je 0x1fb36 ; jmp 0x1fb5f
0x000000000014d4fb : fsub dword ptr [rsi + 0xf] ; cmp byte ptr [rax], al ; fldenv dword ptr [rsi + 0xf] ; cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x00000000000ec1c1 : fsub dword ptr [rsp + rax*2 - 0x77] ; add byte ptr [rax - 1], bh ; ret
0x0000000000183ada : fsub qword ptr [rax - 0x6b13d16d] ; push rsi ; cli ; push 0x6e ; ja 0x183a75 ; ret 0x48f
0x00000000001a0df4 : fsub qword ptr [rcx] ; add byte ptr [rax], al ; call 0x2719fb6e
0x0000000000143264 : fsub qword ptr [rdi] ; add byte ptr [rdi + rax*8], ah ; add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000096584 : fsub st(3) ; or eax, 0x8a0c8b00 ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000000ff87a : fsubp st(0) ; mov al, 3 ; add byte ptr [rax], al ; test rax, rax ; jne 0xff869 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000117822 : fsubr dword ptr [rdx] ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x00000000000559d6 : fsubr st(3) ; mov eax, 0x1b85b ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011f94a : fucompi st(0) ; add byte ptr [rbp - 0xd], ch ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000000f8497 : fucompi st(0) ; and edx, dword ptr [rbx] ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xec ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000fa787 : fucompi st(0) ; and edx, esi ; stc ; dec dword ptr [rax + 0x39] ; ret
0x000000000006f72e : fucompi st(0) ; cld ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x00000000000eb2ae : fucompi st(0) ; jl 0xeb2e1 ; cli ; dec dword ptr [rax + 1] ; ret
0x0000000000077dc5 : fucompi st(0) ; jne 0x77e25 ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x77d76
0x000000000006bc59 : fucompi st(0) ; jno 0x6bc6d ; add byte ptr [rax], al ; test eax, eax ; jne 0x6bc7e ; mov rax, rbx ; pop rbx ; ret
0x00000000000eb19a : fucompi st(0) ; nop ; sub dl, bh ; dec dword ptr [rax + 1] ; ret
0x000000000006c2e1 : fucompi st(0) ; or edi, ebx ; or byte ptr [rax], al ; test eax, eax ; setne al ; movzx eax, al ; neg eax ; pop rbx ; ret
0x000000000010267c : fucompi st(0) ; outsb dx, byte ptr [rsi] ; loopne 0x10267a ; dec dword ptr [rax - 0x77] ; ret
0x0000000000102094 : fucompi st(0) ; push rsi ; out 0xf1, al ; dec dword ptr [rax - 0x77] ; ret
0x00000000000fa5fe : fucompi st(0) ; sub al, 0x34 ; stc ; dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00000000000b0b3a : hlt ; add byte ptr [rax], 0 ; add byte ptr [rcx], ch ; ror dword ptr [rax - 0x2d], 1 ; out 0x89, al ; ror dword ptr [rax - 0x77], 1 ; ret 0xd348
0x00000000000282f7 : hlt ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000012f427 : hlt ; add byte ptr [rax], al ; test eax, eax ; jne 0x12f44f ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012f426 : hlt ; add byte ptr [rax], al ; test eax, eax ; jne 0x12f450 ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000198685 : hlt ; add dword ptr [rax], eax ; and al, 0x36 ; stc ; call rsp
0x000000000019867d : hlt ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; xor al, 0xf9 ; push qword ptr [rsp + rsi*8 + 1] ; add byte ptr [rsi + rsi], ah ; stc ; call rsp
0x00000000001541b6 : hlt ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000018735e : hlt ; call qword ptr [rax - 0x1f000b87]
0x00000000001ab3ca : hlt ; call qword ptr [rax]
0x00000000001877b2 : hlt ; call rax
0x000000000012a9e9 : hlt ; dec dword ptr [rax - 0x75] ; jl 0x12aa1b ; sub al, ch ; ret
0x00000000000de3be : hlt ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ecb42 : hlt ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001877ae : hlt ; dec dword ptr [rax - 0x80] ; hlt ; call rax
0x00000000000bd060 : hlt ; imul esi, dword ptr [rax], 0x415d5b00 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000018737e : hlt ; inc dword ptr [rax + 0x7a] ; hlt ; inc eax ; jns 0x187388 ; inc eax ; jns 0x18738c ; jmp rax
0x0000000000196b4a : hlt ; inc dword ptr [rdi + rdx*2] ; add dword ptr [rax], eax ; adc al, 0x76 ; hlt ; inc dword ptr [rdi + rdx*2 + 0x78640001] ; hlt ; call rsp
0x0000000000187382 : hlt ; inc eax ; jns 0x187384 ; inc eax ; jns 0x187388 ; jmp rax
0x0000000000187386 : hlt ; inc eax ; jns 0x187384 ; jmp rax
0x00000000001b694c : hlt ; iretd ; add dword ptr [rax], eax ; adc byte ptr [rax + rdi*8], cl ; jmp qword ptr [rax]
0x0000000000187362 : hlt ; jmp rax
0x00000000000d27f8 : hlt ; jno 0xd27fc ; push qword ptr [rcx] ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x00000000000b3410 : hlt ; jo 0xb3447 ; ror dword ptr [rax - 0x2d], 1 ; out 0x89, al ; ror dword ptr [rax - 0x77], 1 ; ret 0xd348
0x000000000019898c : hlt ; lar eax, word ptr [rax] ; test bl, al ; stc ; dec dword ptr [rax + rdx] ; add al, byte ptr [rax] ; xchg eax, esp ; ret
0x0000000000196b7a : hlt ; lcall ptr [rcx + rbx*2] ; add dword ptr [rax], eax ; adc al, 0x8c ; hlt ; inc dword ptr [rcx + rbx*2 - 0x6fbbffff] ; hlt ; call rsp
0x0000000000195e70 : hlt ; mov dl, 0xef ; dec esp ; inc dword ptr [rax] ; add byte ptr [rbx + rsi*4], dh ; out dx, eax ; jmp rsp
0x000000000006f4c0 : hlt ; mov rbx, rax ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000014d5db : hlt ; movsxd rax, ecx ; add rax, rdi ; sub rax, rdx ; ret
0x0000000000077871 : hlt ; or dword ptr [rax], eax ; add rsp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x000000000009131f : hlt ; or eax, dword ptr [rax] ; ret
0x00000000001877aa : hlt ; push rax ; jg 0x1877ac ; dec dword ptr [rax - 0x80] ; hlt ; call rax
0x00000000001877a6 : hlt ; push rax ; jg 0x1877ac ; push rax ; jg 0x1877b0 ; dec dword ptr [rax - 0x80] ; hlt ; call rax
0x0000000000187366 : hlt ; push rax ; jns 0x187364 ; jmp rax
0x000000000019505c : hlt ; pushfq ; add byte ptr [rax], al ; hlt ; ret
0x0000000000195a28 : hlt ; pushfq ; out dx, al ; dec dword ptr [rax - 0x5fdc0000] ; out dx, al ; jmp rsp
0x00000000001aa94c : hlt ; sgdt ptr [rax] ; adc byte ptr [rsi], dl ; hlt ; call qword ptr [rbx]
0x00000000000abd56 : idiv al ; add byte ptr [rax], al ; ret
0x00000000001198bc : idiv bh ; call qword ptr [rax - 0x3c0776b8]
0x000000000018874a : idiv bh ; mov dl, 0xf6 ; call qword ptr [rax]
0x0000000000188742 : idiv bh ; mov dl, 0xf6 ; dec dword ptr [rax - 0x4e] ; idiv bh ; mov dl, 0xf6 ; call qword ptr [rax]
0x00000000000ba3aa : idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x00000000001889c2 : idiv bh ; or byte ptr [rax - 0x4ff7000a], dh ; idiv bh ; cmc ; ret
0x000000000019710a : idiv bh ; push rsp ; jnp 0x197121 ; add byte ptr [rax + rbp*2], ah ; idiv bh ; movsb byte ptr [rdi], byte ptr [rsi] ; jnp 0x197129 ; add byte ptr [rbp + rbp*2 - 0xa], dh ; call rsp
0x00000000000ff200 : idiv bh ; test eax, eax ; jns 0xff216 ; mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x00000000000ff230 : idiv bh ; test eax, eax ; mov eax, 0 ; cmove rax, rbx ; pop rbx ; ret
0x0000000000100633 : idiv byte ptr [rax + 0x118] ; syscall ; cmp rax, -0x1000 ; ja 0x100659 ; ret
0x00000000000fd15e : idiv byte ptr [rax + 0x118] ; syscall ; cmp rax, -0x1000 ; ja 0xfd181 ; ret
0x00000000000fe73d : idiv byte ptr [rax + 0x71] ; syscall ; cmp rax, -0x1000 ; ja 0xfe760 ; ret
0x00000000000fe7ad : idiv byte ptr [rax + 0x72] ; syscall ; cmp rax, -0x1000 ; ja 0xfe7d0 ; ret
0x00000000001b35ba : idiv edi ; add dword ptr fs:[rax], eax ; add byte ptr [rax], al ; add cl, byte ptr [rdi + 0xe] ; adc byte ptr [rbx + 0xa930202], al ; ret
0x00000000001181a0 : idiv edi ; add rsp, 8 ; add rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010bae7 : idiv edi ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000001107cc : idiv edi ; dec dword ptr [rax - 0x75] ; adc byte ptr [r8 - 0x77], cl ; imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011079c : idiv edi ; dec dword ptr [rax - 0x75] ; or byte ptr [r8 - 0x77], cl ; imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001107fc : idiv edi ; dec dword ptr [rax - 0x75] ; sbb byte ptr [r8 - 0x77], cl ; imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013b7ea : idiv edi ; dec dword ptr [rax - 0x75] ; sub eax, 0 ; add byte ptr [rax], al ; test rax, rax ; jne 0x13b7f0 ; pop rbx ; ret
0x000000000003a903 : idiv esi ; shl rdx, 0x20 ; mov eax, eax ; or rax, rdx ; ret
0x00000000000dff2e : imul al ; fcomp qword ptr [rax] ; sti ; call rcx
0x00000000000371da : imul al ; push rax ; add byte ptr [rax], r8b ; add rsp, 8 ; ret
0x000000000002daff : imul al ; wait ; push rax ; or eax, 0xf8834800 ; dec dword ptr [rax - 0x77] ; ret
0x000000000011704e : imul byte ptr [rdx] ; add byte ptr [rax + 0x39], cl ; ret 0xda75
0x0000000000116f7f : imul dword ptr [rdx] ; add byte ptr [rax + 0x39], cl ; ret 0xd975
0x000000000013a965 : imul dword ptr [rip + 0x3be0000] ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000003b2f2 : imul eax ; cwde ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; and al, 8 ; add rsp, 0x18 ; ret
0x000000000003b2a2 : imul eax ; js 0x3b2b6 ; add byte ptr [rax], al ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x000000000003b252 : imul eax ; sub byte ptr [rcx], al ; add byte ptr [rax], al ; movsd xmm0, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000cdf36 : imul eax ; test byte ptr [rax - 0x76b70004], ah ; ret 0x8949
0x00000000000eef0e : imul eax, dword ptr [rax], 0x440f0000 ; ret 0x66e9
0x00000000000ed120 : imul eax, dword ptr [rax], 0x440f0000 ; ret 0xd5e9
0x00000000000ce21d : imul eax, dword ptr [rax], 0x50f0000 ; cmp rax, -0x1000 ; ja 0xce23e ; ret
0x0000000000194665 : imul eax, dword ptr [rax], 0xe991f400 ; call qword ptr [rcx + rbp*2 - 0x6c7c0000]
0x000000000019466d : imul eax, dword ptr [rax], 0xe9938400 ; jmp rsp
0x0000000000126942 : imul eax, dword ptr [rcx], -0x3a ; add al, byte ptr [r8] ; mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003b321 : imul eax, dword ptr [rcx], 0 ; add byte ptr [rax - 0x75], cl ; and al, 8 ; add rsp, 0x18 ; ret
0x00000000000459a3 : imul eax, dword ptr [rcx], 0 ; add byte ptr [rbx + 0x28ba28f8], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8539
0x0000000000194664 : imul eax, dword ptr fs:[rax], 0xe991f400 ; call qword ptr [rcx + rbp*2 - 0x6c7c0000]
0x00000000000375fe : imul eax, ebx ; mov rbx, rax ; lea r12, qword ptr [rsi + rbx] ; mov rdi, r12 ; call r15
0x000000000007f7f6 : imul ebp, dword ptr [rax], 0x48 ; sub ebp, dword ptr [rbx + 0x20] ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010a563 : imul ebp, dword ptr [rbx], 0x64d8f700 ; mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000011e8e1 : imul ebp, dword ptr [rdx], 0 ; add byte ptr [rax + rax], al ; add al, ch ; ret
0x00000000000d6343 : imul ebp, esi, 0x8b48ffff ; mov esp, 0x8824 ; add byte ptr [rax + 0x63], cl ; ret
0x000000000007fc86 : imul ebx, dword ptr [rax], -0x70 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008b70a : imul ebx, dword ptr [rax], 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000110805 : imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079284 : imul ebx, dword ptr [rax], 0x4c ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007f86e : imul ebx, dword ptr [rax], 0x5b ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006b8b3 : imul ebx, dword ptr [rbp], 0xc4814800 ; fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000079b68 : imul ebx, edx ; test rbx, rbx ; jne 0x79b8f ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000154c35 : imul ecx ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000008b9db : imul ecx, dword ptr [rax], -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008ba5d : imul ecx, dword ptr [rax], -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008bb66 : imul ecx, dword ptr [rax], -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001107a5 : imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008ba0a : imul ecx, dword ptr [rax], 0x48 ; mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007f86a : imul ecx, dword ptr [rax], 0x48 ; sub ebp, dword ptr [rbx + 0x18] ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000143971 : imul ecx, esp, 0x27 ; add byte ptr [rax - 0x77], cl ; adc eax, 0x27ea74 ; add rsp, 8 ; ret
0x00000000001106df : imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007deea : imul edi, dword ptr [rax], 0x4c ; mov dword ptr [rbx + 0x40], esp ; mov dword ptr [rbx], edx ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001932b5 : imul edi, ebx, 0xfb6ad0ff ; push qword ptr [rax + 0x6c] ; sti ; call qword ptr [rax]
0x00000000000caffb : imul edi, edi, 0x3c6ffff ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000116c13 : imul edi, edx, 0xc148002a ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; jmp rax
0x0000000000072a56 : imul edi, esi, 0xc48148ff ; fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000193db1 : imul edi, esp, -1 ; movabs al, byte ptr [0x90fffc7320fffc73] ; jb 0x193dc9 ; call qword ptr [rax]
0x0000000000193df1 : imul edi, esp, -1 ; nop ; jae 0x193df9 ; call qword ptr [rax]
0x0000000000122169 : imul edx, dword ptr [rax - 0x18], 0x10 ; movabs eax, dword ptr [0x940f01ff83410000] ; ret 0xc085
0x0000000000184d4c : imul edx, dword ptr [rax - 0x6f960013], 0x8714ffed ; in eax, dx ; call qword ptr [rbx]
0x000000000010b36b : imul edx, dword ptr [rax - 0x74b7ffd5], 0x83661840 ; add byte ptr [rcx], al ; ret
0x00000000001107d5 : imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007fc82 : imul edx, dword ptr [rax], 0x48 ; mov dword ptr [rbx + 0x18], ebp ; nop ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001934a8 : imul edx, dword ptr [rdi - 0x67f40003], -3 ; call qword ptr [rax + 0x20fffd98]
0x00000000000bd061 : imul esi, dword ptr [rax], 0x415d5b00 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007828e : imul esi, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000105588 : imul esi, ebp, 0x3beffff ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000007ed9e : imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x000000000007f7fa : imul esp, dword ptr [rax], 0x5b ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000375fd : imul rax, rbx ; mov rbx, rax ; lea r12, qword ptr [rsi + rbx] ; mov rdi, r12 ; call r15
0x0000000000079b67 : imul rbx, rdx ; test rbx, rbx ; jne 0x79b90 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079b66 : imul rbx, rdx ; test rbx, rbx ; jne 0x79b91 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001a643c : in al, -0x36 ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a483c : in al, -0x52 ; add byte ptr [rax], al ; adc dl, dl ; out dx, al ; call qword ptr [rcx]
0x00000000001a8f3c : in al, -0xb ; add byte ptr [rax], al ; xor byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000001b993c : in al, -1 ; add dword ptr [rax], eax ; rol cl, 0xf8 ; call qword ptr [rdi]
0x00000000000c9128 : in al, 0 ; add byte ptr [rax], al ; mov rbp, r13 ; mov rdi, rbx ; call r12
0x0000000000170c38 : in al, 0 ; add byte ptr [rax], al ; ret
0x0000000000109151 : in al, 0 ; add byte ptr [rax], al ; syscall ; ret
0x0000000000007c39 : in al, 0x10 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 2], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001aab3c : in al, 0x11 ; add dword ptr [rax], eax ; xor byte ptr [rdi], dl ; hlt ; call qword ptr [rdx]
0x00000000001ab73c : in al, 0x1d ; add dword ptr [rax], eax ; ror ah, 1 ; hlt ; jmp qword ptr [rcx]
0x00000000001abc3c : in al, 0x22 ; add dword ptr [rax], eax ; adc ch, bl ; hlt ; jmp qword ptr [rcx]
0x0000000000196450 : in al, 0x22 ; dec esp ; add dword ptr es:[rax], eax ; push rsp ; and esi, edx ; jmp rsp
0x0000000000102a06 : in al, 0x2b ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000019d23c : in al, 0x38 ; add byte ptr [rax], al ; push rax ; and dl, ch ; call rcx
0x00000000001ad63c : in al, 0x3c ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xb], bl ; jmp qword ptr [rdx]
0x0000000000100821 : in al, 0x49 ; mov ecx, ecx ; mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x0000000000195d40 : in al, 0x67 ; out dx, eax ; inc dword ptr [rax + rdi*8 + 0x6a140000] ; out dx, eax ; jmp rsp
0x00000000001b093c : in al, 0x6f ; add dword ptr [rax], eax ; and byte ptr [rbx - 0xa], ah ; jmp qword ptr [rsi]
0x000000000008bd7c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x00000000000ac606 : in al, 0x75 ; test al, 0xf0 ; jne 0xac66b ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000104dd8 : in al, 0xa ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000c9125 : in al, 0xf ; test ah, ah ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x13], cl ; mov rdi, rbx ; call r12
0x00000000000d0249 : in al, 0xf ; test bh, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffcf8 ; call r12
0x000000000019841d : in al, 1 ; add byte ptr [rbp + rsi*4 - 0x1b6b0008], al ; add dword ptr [rax], eax ; mov ah, 0xb6 ; clc ; jmp rsp
0x00000000000bc64c : in al, 1 ; add r12, rax ; mov qword ptr [rsp + 0xa8], r12 ; call r15
0x00000000000a6a88 : in al, 6 ; add byte ptr [rax], al ; ret
0x0000000000080610 : in al, dx ; adc al, 0x34 ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000e9c54 : in al, dx ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; push rbp ; or byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 + 0x63], r9b ; ret
0x0000000000150670 : in al, dx ; add al, byte ptr [rax] ; mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000000f2641 : in al, dx ; add byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000055a83 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000000bd484 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x598
0x0000000000071384 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xa59
0x0000000000118884 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xffe4
0x0000000000077149 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; std ; sti ; or dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x0000000000085f67 : in al, dx ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x00000000000ac927 : in al, dx ; add byte ptr [rax], al ; ret
0x00000000001a9a44 : in al, dx ; add byte ptr [rcx], al ; add byte ptr [rax + 0x17], ch ; call qword ptr [rsi]
0x00000000000872f8 : in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000001b8585 : in al, dx ; add dword ptr [rax], eax ; sub byte ptr [rcx - 8], ah ; jmp qword ptr [rbx]
0x0000000000154996 : in al, dx ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000bc649 : in al, dx ; and r12d, 1 ; add r12, rax ; mov qword ptr [rsp + 0xa8], r12 ; call r15
0x00000000001808be : in al, dx ; call qword ptr [rax]
0x000000000013d242 : in al, dx ; cmp byte ptr [rax - 0x77], cl ; cli ; xor eax, eax ; mov dword ptr [rsp], 2 ; mov rdi, rsp ; call rdx
0x000000000012b13e : in al, dx ; cmp byte ptr [rax - 1], 0x5b ; pop rbp ; pop r12 ; ret
0x0000000000044240 : in al, dx ; fdivp st(7) ; dec dword ptr [rax - 0x77] ; ret
0x000000000019eee2 : in al, dx ; jmp qword ptr [rax]
0x0000000000050baf : in al, dx ; js 0x50ba8 ; stosb byte ptr [rdi], al ; mov edx, 0x2ebf000b ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000013afbb : in al, dx ; mov eax, dword ptr [rax + 0x20] ; test eax, eax ; je 0x13afdc ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013d374 : in al, dx ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000012d7cb : in al, dx ; mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001a2a44 : in al, dx ; nop ; add byte ptr [rax], al ; fmul st(4) ; in eax, dx ; call qword ptr [rdx]
0x0000000000118219 : in al, dx ; or al, ch ; ror byte ptr [rax + rax], 1 ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000006efe3 : in al, dx ; or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x0000000000130ede : in al, dx ; or byte ptr [rax - 0x75], cl ; pop rdi ; sbb byte ptr [rbx + 0x7eb5e83b], cl ; std ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x000000000012678f : in al, dx ; or byte ptr [rax - 0x77], cl ; ret
0x00000000000858f7 : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000148ea4 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001870ad : in al, dx ; push qword ptr [rax - 0x11] ; jmp rdi
0x00000000001808ba : in al, dx ; push qword ptr [rax] ; jns 0x1808b0 ; call qword ptr [rax]
0x0000000000127cc2 : in al, dx ; sbb byte ptr [rax - 0x73], cl ; je 0x127cf4 ; or al, 0xe8 ; ret 0xfffe
0x00000000001a4944 : in al, dx ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; shr rsi, cl ; jmp qword ptr [rsi]
0x00000000001acb44 : in al, dx ; xor dword ptr [rcx], eax ; add byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x00000000000aad09 : in eax, -0x10 ; cmovne rax, rdx ; pop rbx ; ret
0x000000000019cce1 : in eax, -0x17 ; jmp qword ptr [rax]
0x00000000000f6fcf : in eax, -0x77 ; dec dword ptr [rbx + 0x438d0455] ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000012a179 : in eax, -5 ; or ebp, 2 ; mov dword ptr [r12 + 0x40], ebp ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001148c9 : in eax, 0 ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x2f], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001a7ecd : in eax, 0 ; add byte ptr [rax + 0x11], ah ; jmp qword ptr [rdi]
0x000000000002056a : in eax, 0 ; add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x0000000000090d17 : in eax, 0 ; add byte ptr [rax], al ; pmovmskb eax, xmm1 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000001174b4 : in eax, 0 ; add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0x1174d7 ; ret
0x000000000002adf6 : in eax, 0 ; mov rax, qword ptr [rax + r12*8] ; test rax, rax ; je 0x2ae0e ; call rax
0x0000000000030857 : in eax, 0x22 ; cmp dword ptr [rax], eax ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000abff3 : in eax, 0xf ; je 0xac018 ; add rax, 2 ; ret
0x000000000007ba6b : in eax, 4 ; adc byte ptr [rax], al ; add byte ptr [rcx - 0x100c1e], al ; dec dword ptr [rcx] ; ret 0xfd81
0x000000000004acbf : in eax, dx ; add al, 0 ; lea rax, qword ptr [rax + rbx] ; add rsp, 0x20 ; pop rbx ; ret
0x000000000012e711 : in eax, dx ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x75], 0x74 ; and al, 0x10 ; mov rdi, rbp ; call r14
0x00000000000302da : in eax, dx ; add dword ptr [rcx - 0x7d], ecx ; std ; dec dword ptr [rdi] ; test bl, ah ; add al, byte ptr [rax] ; add byte ptr [rcx], dh ; imul al ; ret
0x0000000000154846 : in eax, dx ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000403c9 : in eax, dx ; add rax, rax ; sub rdx, rax ; jmp 0x4040c
0x000000000013bca8 : in eax, dx ; add rsp, 0x20 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006bbf1 : in eax, dx ; add rsp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000019f6b2 : in eax, dx ; call qword ptr [rax]
0x0000000000034172 : in eax, dx ; cmp dword ptr [r9 + rdx*4 + 4], r11d ; jne 0x34171 ; mov eax, dword ptr [r9 + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x000000000001b039 : in eax, dx ; cmp eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000004aa79 : in eax, dx ; cmp rdi, rsi ; mov rax, rsi ; cmovae rax, rdi ; ret
0x000000000014565d : in eax, dx ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f0c55 : in eax, dx ; dec dword ptr [rax - 0x7b] ; in eax, dx ; jne 0xf0c4f ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001852b2 : in eax, dx ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jnp 0x1852c2 ; jmp qword ptr [rax]
0x000000000006bbe2 : in eax, dx ; je 0x6bc0c ; add rsp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000001a28fa : in eax, dx ; jmp qword ptr [rax]
0x000000000018733d : in eax, dx ; jmp rax
0x00000000000aa6c2 : in eax, dx ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000000da738 : in eax, dx ; movsxd rax, dword ptr [rsi + rbp*4] ; add rax, rsi ; jmp rax
0x000000000014ca10 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000919cf : in eax, dx ; or eax, dword ptr [rax] ; ret
0x0000000000195312 : in eax, dx ; push qword ptr [rdi + rbp*4] ; add byte ptr [rsp + rsi*4 - 0x504b0013], al ; add byte ptr [rax], al ; add al, 0xb5 ; in eax, dx ; jmp rsp
0x00000000000f263c : in eax, dx ; stc ; dec dword ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000aa812 : in eax, dx ; sub rax, 1 ; ret
0x000000000003a917 : inc bl ; nop dword ptr [rax] ; mov rax, rdi ; cqo ; idiv rsi ; ret
0x0000000000045d09 : inc byte ptr [rax + 0x48] ; cmovne eax, edx ; ret
0x0000000000195e3d : inc byte ptr [rax] ; add ah, dl ; xchg eax, esp ; out dx, eax ; call rsp
0x0000000000109401 : inc byte ptr [rax] ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10941e ; ret
0x0000000000195e35 : inc byte ptr [rax] ; add byte ptr [rsp + rdx*4 - 0x11], al ; dec dword ptr [rsi + rdi*8 - 0x6b2c0000] ; out dx, eax ; call rsp
0x00000000000adb20 : inc byte ptr [rdx] ; je 0xadb3e ; mov r9d, dword ptr [rdi + rdx*4] ; test r9d, r9d ; jne 0xadaf1 ; mov rax, rdx ; ret
0x0000000000193797 : inc dword ptr [rax + 0x10] ; cld ; call qword ptr [rax - 0x1f0003ef]
0x000000000019380b : inc dword ptr [rax + 0x10fffc50] ; cld ; call rax
0x00000000001937eb : inc dword ptr [rax + 0x17] ; cld ; lcall ptr [rax] ; cld ; jmp rax
0x000000000019369b : inc dword ptr [rax + 0x20] ; cld ; jmp qword ptr [rax]
0x000000000019371f : inc dword ptr [rax + 0x21] ; cld ; call qword ptr [rax]
0x000000000010e3d2 : inc dword ptr [rax + 0x22ba003b] ; add byte ptr [rax], al ; add byte ptr [rbx + rcx + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000193977 : inc dword ptr [rax + 0x2e] ; cld ; call qword ptr [rax - 0x1f0003d1]
0x00000000000e9017 : inc dword ptr [rax + 0x3108384b] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000193963 : inc dword ptr [rax + 0x3c] ; cld ; call qword ptr [rax - 0x1f0003c3]
0x00000000001938f7 : inc dword ptr [rax + 0x45] ; cld ; jmp qword ptr [rax]
0x0000000000193877 : inc dword ptr [rax + 0x46] ; cld ; jmp qword ptr [rax]
0x0000000000193843 : inc dword ptr [rax + 0x4c] ; cld ; inc dword ptr [rax + 0x4e] ; cld ; inc dword ptr [rax + 0x50] ; cld ; call rax
0x0000000000193847 : inc dword ptr [rax + 0x4e] ; cld ; inc dword ptr [rax + 0x50] ; cld ; call rax
0x000000000019384b : inc dword ptr [rax + 0x50] ; cld ; call rax
0x000000000018a097 : inc dword ptr [rax + 0x50fffad2] ; sar edx, cl ; jmp rax
0x000000000019323b : inc dword ptr [rax + 0x50fffb4b] ; sti ; jmp qword ptr [rax]
0x0000000000193307 : inc dword ptr [rax + 0x60fffb8e] ; nop ; sti ; inc dword ptr [rax - 0x6e] ; sti ; jmp qword ptr [rax]
0x0000000000193bd3 : inc dword ptr [rax + 0x79] ; cld ; call rax
0x000000000018737f : inc dword ptr [rax + 0x7a] ; hlt ; inc eax ; jns 0x187387 ; inc eax ; jns 0x18738b ; jmp rax
0x00000000001939bb : inc dword ptr [rax + 0x7c] ; cld ; call rax
0x0000000000186037 : inc dword ptr [rax + 0xc] ; push qword ptr [rax + 0xc] ; jmp qword ptr [rax - 0x2f000df4]
0x0000000000193e1b : inc dword ptr [rax + 0xfffc6e] ; outsb dx, byte ptr [rsi] ; cld ; push qword ptr [rax + 0x6d] ; cld ; jmp rax
0x000000000019947b : inc dword ptr [rax + rbx*2 + 0x1f240002] ; sti ; ljmp ptr [rax + rbx*2 + 0x1fd40002] ; sti ; call rsp
0x000000000019870b : inc dword ptr [rax + rdi*8 + 0x66240001] ; stc ; call rsp
0x0000000000195d43 : inc dword ptr [rax + rdi*8 + 0x6a140000] ; out dx, eax ; jmp rsp
0x0000000000198703 : inc dword ptr [rax + rdi*8 + 1] ; add byte ptr [rsi + rbx*2], al ; stc ; inc dword ptr [rax + rdi*8 + 0x66240001] ; stc ; call rsp
0x0000000000199323 : inc dword ptr [rax + rdx*2 - 0x72bfffe] ; cli ; ljmp ptr [rax + rdx*2 - 0x68bfffe] ; cli ; call rsp
0x000000000018a0a3 : inc dword ptr [rax - 0x1f00052e] ; sar edx, cl ; jmp rax
0x0000000000193987 : inc dword ptr [rax - 0x2f0003cd] ; xor al, 0xfc ; jmp qword ptr [rax]
0x00000000001937bb : inc dword ptr [rax - 0x2f0003f9] ; or ah, bh ; jmp qword ptr [rax]
0x0000000000193347 : inc dword ptr [rax - 0x2f000453] ; scasb al, byte ptr [rdi] ; sti ; jmp qword ptr [rax]
0x000000000004e400 : inc dword ptr [rax - 0x4e743] ; jmp qword ptr [rax]
0x000000000004c06e : inc dword ptr [rax - 0x4eb43] ; jmp qword ptr [rax]
0x0000000000186213 : inc dword ptr [rax - 0x4f000ddf] ; and edx, esi ; jmp rax
0x000000000018a06f : inc dword ptr [rax - 0x54] ; cli ; lcall ptr [rax - 0x54] ; cli ; push qword ptr [rax - 0x54] ; cli ; call qword ptr [rax]
0x000000000018a047 : inc dword ptr [rax - 0x55] ; cli ; lcall ptr [rax - 0x55] ; cli ; dec dword ptr [rax - 0x77000554] ; lodsb al, byte ptr [rsi] ; cli ; jmp rax
0x0000000000193337 : inc dword ptr [rax - 0x58] ; sti ; call qword ptr [rax - 0x1f000457]
0x0000000000193eb3 : inc dword ptr [rax - 0x5d] ; cld ; call rax
0x0000000000186263 : inc dword ptr [rax - 0x5f000ddd] ; and esi, edx ; inc eax ; and esi, edx ; jmp rax
0x000000000018623b : inc dword ptr [rax - 0x5f000dde] ; and dh, dl ; push qword ptr [rax - 0x3f000dde] ; and dh, dl ; jmp rax
0x0000000000186023 : inc dword ptr [rax - 0x5f000df5] ; or esi, edx ; inc eax ; or esi, edx ; jmp rax
0x0000000000186003 : inc dword ptr [rax - 0x5f000df6] ; or dh, dl ; inc eax ; or dh, dl ; jmp rax
0x0000000000185fe3 : inc dword ptr [rax - 0x5f000df7] ; or edx, esi ; inc eax ; or edx, esi ; jmp rax
0x00000000001940cb : inc dword ptr [rax - 0x60] ; cld ; call rax
0x000000000019330f : inc dword ptr [rax - 0x6e] ; sti ; jmp qword ptr [rax]
0x00000000000d2776 : inc dword ptr [rax - 0x76b7ffc8] ; ret
0x000000000005dc32 : inc dword ptr [rax - 0x78] ; xor byte ptr [rcx - 0x7d], cl ; ret
0x0000000000193807 : inc dword ptr [rax - 0x7f0003b2] ; push rax ; cld ; call qword ptr [rax]
0x0000000000193803 : inc dword ptr [rax - 0x7f0003b4] ; cld ; inc dword ptr [rax + 0x10fffc50] ; cld ; call rax
0x00000000001937ff : inc dword ptr [rax - 0x7f0003b6] ; cld ; inc dword ptr [rax - 0x7f0003b2] ; push rax ; cld ; call qword ptr [rax]
0x0000000000185313 : inc dword ptr [rax - 0x7f001185] ; jnp 0x185319 ; inc dword ptr [rax - 0x7f001185] ; jnp 0x185321 ; jmp rax
0x000000000018531b : inc dword ptr [rax - 0x7f001185] ; jnp 0x185319 ; jmp rax
0x000000000018610b : inc dword ptr [rax] ; adc dl, dh ; call qword ptr [rax]
0x0000000000195e6d : inc dword ptr [rax] ; add ah, dh ; mov dl, 0xef ; dec esp ; inc dword ptr [rax] ; add byte ptr [rbx + rsi*4], dh ; out dx, eax ; jmp rsp
0x00000000000dbdf5 : inc dword ptr [rax] ; add al, 0 ; cmp eax, 6 ; je 0xdbe31 ; cmp eax, 3 ; je 0xdbe21 ; xor eax, eax ; pop rbx ; ret
0x00000000000fad24 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x0000000000185fc7 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; or dl, dh ; inc dword ptr [rax] ; or edx, esi ; jmp qword ptr [rax]
0x00000000001852b3 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jnp 0x1852c1 ; jmp qword ptr [rax]
0x0000000000062221 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000000d1004 : inc dword ptr [rax] ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000050f0e : inc dword ptr [rax] ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000016ccf1 : inc dword ptr [rax] ; add byte ptr [rax], al ; and ecx, 0xff ; sub eax, ecx ; ret
0x00000000000b671b : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000aacdf : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x00000000000accc5 : inc dword ptr [rax] ; add byte ptr [rax], al ; cmp edi, 0x7f ; ja 0xacce3 ; mov eax, edi ; ret
0x000000000011b3ff : inc dword ptr [rax] ; add byte ptr [rax], al ; jbe 0x11b4a6 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000013a591 : inc dword ptr [rax] ; add byte ptr [rax], al ; mov byte ptr [rax], 0 ; jle 0x13a5b7 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000d024c : inc dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x308] ; call r12
0x0000000000170c1d : inc dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000016ccf7 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000109491 : inc dword ptr [rax] ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x1094ae ; ret
0x0000000000195e75 : inc dword ptr [rax] ; add byte ptr [rbx + rsi*4], dh ; out dx, eax ; jmp rsp
0x00000000000ea37b : inc dword ptr [rax] ; add rsp, 0x68 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000186253 : inc dword ptr [rax] ; and esi, edx ; jmp qword ptr [rax]
0x000000000019373f : inc dword ptr [rax] ; and esp, edi ; call rax
0x00000000001862df : inc dword ptr [rax] ; call qword ptr es:[rax]
0x00000000000db419 : inc dword ptr [rax] ; cld ; dec dword ptr [rcx] ; ret 0x5689
0x000000000019387f : inc dword ptr [rax] ; cld ; jmp rax
0x000000000011b27e : inc dword ptr [rax] ; cmova eax, esi ; bswap eax ; ret
0x0000000000187e03 : inc dword ptr [rax] ; fdivr st(5), st(0) ; call rsp
0x0000000000069449 : inc dword ptr [rax] ; jmp 0x65701
0x0000000000193bc3 : inc dword ptr [rax] ; jnp 0x193bcb ; call qword ptr [rax + 0x20fffc7a]
0x000000000018a063 : inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; cli ; call qword ptr [rax]
0x00000000000a046a : inc dword ptr [rax] ; mov qword ptr [rdx], rcx ; ret
0x00000000001932a3 : inc dword ptr [rax] ; movsxd rdi, ebx ; push rax ; movsxd rdi, ebx ; jmp qword ptr [rax]
0x0000000000185ff3 : inc dword ptr [rax] ; or dh, dl ; jmp qword ptr [rax]
0x0000000000186057 : inc dword ptr [rax] ; or eax, 0xd10fff2 ; jmp qword ptr [rax]
0x0000000000186047 : inc dword ptr [rax] ; or eax, 0xd30fff2 ; jmp rax
0x000000000011b2a8 : inc dword ptr [rax] ; or eax, edi ; bswap eax ; ret
0x000000000010a4ef : inc dword ptr [rax] ; or eax, edx ; or eax, ebx ; add rsp, 0x90 ; pop rbx ; ret
0x0000000000185fd3 : inc dword ptr [rax] ; or edx, esi ; jmp qword ptr [rax]
0x0000000000186013 : inc dword ptr [rax] ; or esi, edx ; jmp qword ptr [rax]
0x0000000000193e1f : inc dword ptr [rax] ; outsb dx, byte ptr [rsi] ; cld ; push qword ptr [rax + 0x6d] ; cld ; jmp rax
0x0000000000193e17 : inc dword ptr [rax] ; outsd dx, dword ptr [rsi] ; cld ; inc dword ptr [rax + 0xfffc6e] ; outsb dx, byte ptr [rsi] ; cld ; push qword ptr [rax + 0x6d] ; cld ; jmp rax
0x000000000019325b : inc dword ptr [rax] ; push rdx ; sti ; call rax
0x000000000010082b : inc dword ptr [rax] ; ret
0x0000000000193ee3 : inc dword ptr [rax] ; sahf ; cld ; call qword ptr [rax + 0x20fffc9d]
0x00000000001934d7 : inc dword ptr [rax] ; xchg eax, ebp ; std ; call qword ptr [rax + 0x20fffd95]
0x0000000000194327 : inc dword ptr [rax] ; xchg eax, ebx ; cld ; push qword ptr [rax - 0x6e] ; cld ; call rax
0x0000000000193317 : inc dword ptr [rax] ; xchg eax, esi ; sti ; jmp rax
0x0000000000194123 : inc dword ptr [rax] ; xchg eax, esp ; cld ; push qword ptr [rax - 0x6d] ; cld ; jmp rax
0x00000000000fe9c0 : inc dword ptr [rbp + 0x100b8c0] ; add byte ptr [rax], al ; cmovns rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x000000000004c038 : inc dword ptr [rbp + 0x29] ; enter -0x367c, 0x74 ; sbb dword ptr [rbx - 0x48743], eax ; call qword ptr [rax]
0x000000000004aa74 : inc dword ptr [rbp + 0x31] ; shr bl, cl ; in eax, dx ; cmp rdi, rsi ; mov rax, rsi ; cmovae rax, rdi ; ret
0x00000000000f71ad : inc dword ptr [rbp + 0x480e78db] ; test eax, eax ; js 0xf71d9 ; cmp rax, rbx ; setg al ; pop rbx ; ret
0x00000000000ff231 : inc dword ptr [rbp + 0xb8c0] ; add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00000000000cbb8c : inc dword ptr [rbp + 0xb8db] ; add byte ptr [rax], al ; cmovle eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000135928 : inc dword ptr [rbp - 0x38ec8a40] ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000ff201 : inc dword ptr [rbp - 0x39fc8640] ; add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x0000000000145a0e : inc dword ptr [rbp - 0x6277f040] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; sub byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x00000000000997e8 : inc dword ptr [rbp - 0x77] ; rol byte ptr [rbp - 0x77], 1 ; cli ; cmp r10b, r8b ; jb 0x997de ; mov rdx, rax ; jmp 0x9978a
0x00000000000bca8f : inc dword ptr [rbx + 0x18b818fa] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3bba
0x00000000000c685f : inc dword ptr [rbx + 0x634801c3] ; fisttp dword ptr [rax + 0x39] ; ret
0x0000000000059de7 : inc dword ptr [rbx - 0x108f43] ; jmp qword ptr [rax]
0x0000000000057d9e : inc dword ptr [rbx - 0x2c7cfe08] ; inc dword ptr [rax - 0x4e743] ; jmp qword ptr [rax]
0x00000000000282f1 : inc dword ptr [rbx - 0x7af0f808] ; hlt ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000004e3f9 : inc dword ptr [rbx - 0x7cbefe08] ; xlatb ; inc dword ptr [rax - 0x4e743] ; jmp qword ptr [rax]
0x000000000011aec3 : inc dword ptr [rbx] ; add byte ptr [rax], al ; ja 0x11aede ; mov rax, rdi ; sar rax, 6 ; ret
0x000000000003b234 : inc dword ptr [rbx] ; add byte ptr [rax], al ; xor eax, ecx ; ret
0x00000000000aad06 : inc dword ptr [rbx] ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x0000000000128e0a : inc dword ptr [rcx + rcx*8 - 0x3c0c1d8b] ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000013a5b5 : inc dword ptr [rcx - 0x3a] ; add al, 0x2c ; add byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000099b48 : inc dword ptr [rcx - 0x77] ; fld dword ptr [rax + rdi - 0x31] ; jb 0x99b3b ; mov rdx, rax ; jmp 0x99af4
0x0000000000099d68 : inc dword ptr [rcx - 0x77] ; rol byte ptr [rcx + 0x38], 1 ; clc ; jb 0x99d5b ; mov rdx, rax ; jmp 0x99d12
0x0000000000119592 : inc dword ptr [rcx - 9] ; add al, 0x24 ; add byte ptr [rax - 0x76b80000], al ; ret 0x4075
0x0000000000125331 : inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000eb5a1 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000196b4b : inc dword ptr [rdi + rdx*2] ; add dword ptr [rax], eax ; adc al, 0x76 ; hlt ; inc dword ptr [rdi + rdx*2 + 0x78640001] ; hlt ; call rsp
0x000000000006b01f : inc dword ptr [rdx] ; add byte ptr [rax], al ; add cl, ch ; not dword ptr [rbx - 0x7cb70001] ; ret 0xbe08
0x000000000019688b : inc dword ptr [rsi + rax*2 - 0x739bffff] ; ljmp ptr [rsi + rax*2 - 0x72fbffff] ; jmp rsp
0x0000000000197f83 : inc dword ptr [rsi + rax*8 + 0x2ad40001] ; clc ; call rsp
0x00000000000cd382 : inc dword ptr [rsp + 0x28] ; mov r15, rax ; mov rax, qword ptr [r12 + 8] ; test rax, rax ; je 0xcd3a6 ; call rax
0x000000000008d64a : inc eax ; add rsp, 0x100 ; sub rax, rdx ; ret
0x000000000008faba : inc eax ; add rsp, 0x100 ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000186247 : inc eax ; and dh, dl ; jmp rax
0x0000000000186203 : inc eax ; and dl, dh ; push rax ; and dl, dh ; jmp qword ptr [rax]
0x00000000001862cf : inc eax ; and eax, 0x25d0fff2 ; jmp rax
0x000000000018626b : inc eax ; and esi, edx ; jmp rax
0x0000000000193997 : inc eax ; cmp ah, bh ; call qword ptr [rax]
0x000000000008d647 : inc eax ; inc rax ; add rsp, 0x100 ; sub rax, rdx ; ret
0x00000000001864db : inc eax ; jmp rax
0x0000000000187383 : inc eax ; jns 0x187383 ; inc eax ; jns 0x187387 ; jmp rax
0x0000000000187387 : inc eax ; jns 0x187383 ; jmp rax
0x0000000000193357 : inc eax ; mov dl, 0xfb ; call qword ptr [rax]
0x00000000001937cb : inc eax ; or al, 0xfc ; call qword ptr [rax]
0x000000000018600b : inc eax ; or dh, dl ; jmp rax
0x0000000000186087 : inc eax ; or eax, 0xdd0fff2 ; jmp rax
0x0000000000185feb : inc eax ; or edx, esi ; jmp rax
0x000000000018602b : inc eax ; or esi, edx ; jmp rax
0x00000000001860fb : inc eax ; pslld mm7, mm7 ; ror byte ptr [rdi], 1 ; jmp rax
0x0000000000193237 : inc eax ; sti ; inc dword ptr [rax + 0x50fffb4b] ; sti ; jmp qword ptr [rax]
0x0000000000193943 : inc eax ; xor esp, edi ; call qword ptr [rax]
0x000000000010972e : inc ebx ; mov eax, 0x110 ; syscall ; cmp rax, -0xfff ; jae 0x109751 ; ret
0x00000000001097ee : inc ebx ; mov eax, 0x11b ; syscall ; cmp rax, -0xfff ; jae 0x109811 ; ret
0x000000000010a5ce : inc ebx ; mov eax, 0x44 ; syscall ; cmp rax, -0xfff ; jae 0x10a5f1 ; ret
0x000000000010969e : inc ebx ; mov eax, 0x63 ; syscall ; cmp rax, -0xfff ; jae 0x1096c1 ; ret
0x000000000010939e : inc ebx ; mov eax, 0xb1 ; syscall ; cmp rax, -0xfff ; jae 0x1093c1 ; ret
0x00000000000a7062 : inc ebx ; nop ; nop word ptr cs:[rax + rax] ; mov dword ptr [rdi], edx ; ret
0x00000000000a70a3 : inc ebx ; nop ; nop word ptr cs:[rax + rax] ; mov qword ptr [rdi], rdx ; ret
0x000000000007f0e6 : inc ebx ; nop dword ptr [rax + rax] ; mov eax, 0xffffffff ; ret
0x000000000016a356 : inc ebx ; nop dword ptr [rax + rax] ; ret
0x000000000007f106 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000007d44b : inc ebx ; nop dword ptr [rax] ; add rsp, 8 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00000000000a7124 : inc ebx ; nop word ptr cs:[rax + rax] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000007f124 : inc ebx ; nop word ptr cs:[rax + rax] ; ret
0x000000000005a41d : inc edi ; test dword ptr [rdi + rbp*8 - 1], ecx ; call qword ptr [rax]
0x000000000019350f : inc esi ; movabs dword ptr [0xa631fffda631fffd], eax ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x0000000000195ed3 : inc esp ; add dword ptr [rcx], eax ; add byte ptr [rsi + rax*8], dh ; out dx, eax ; jmp rsp
0x0000000000128e09 : inc qword ptr [rcx + rcx*8 - 0x3c0c1d8b] ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000a7123 : inc r11d ; nop word ptr cs:[rax + rax] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000008d649 : inc rax ; add rsp, 0x100 ; sub rax, rdx ; ret
0x000000000008fab9 : inc rax ; add rsp, 0x100 ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x000000000008d646 : inc rax ; inc rax ; add rsp, 0x100 ; sub rax, rdx ; ret
0x000000000003c57c : insb byte ptr [rdi], dx ; adc eax, 0x590ff300 ; shl byte ptr [rdi + rax*8], 0x22 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000149624 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000130520 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x00000000001b0625 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; sub byte ptr [rcx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000000fc580 : insb byte ptr [rdi], dx ; add eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x00000000000f1392 : insb byte ptr [rdi], dx ; and al, 0x18 ; add dword ptr [rax - 0x75], ecx ; and al, 0x18 ; mov rdx, rax ; jmp 0xf13de
0x000000000012a180 : insb byte ptr [rdi], dx ; and al, 0x40 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001963fc : insb byte ptr [rdi], dx ; and al, 1 ; add byte ptr [rbx + rsi*8 + 0x24bcfff1], ah ; add dword ptr [rax], eax ; mov ah, 0xf3 ; int1 ; call rsp
0x00000000001963e4 : insb byte ptr [rdi], dx ; and eax, dword ptr [rcx] ; add byte ptr [rbx + rcx*8 + 0x2384fff1], dl ; add dword ptr [rax], eax ; in al, -0x33 ; int1 ; call rsp
0x0000000000193e2d : insb byte ptr [rdi], dx ; cld ; push rax ; cld ; call qword ptr [rax]
0x0000000000193ded : insb byte ptr [rdi], dx ; cld ; push rax ; imul edi, esp, -1 ; nop ; jae 0x193dfd ; call qword ptr [rax]
0x00000000001986a4 : insb byte ptr [rdi], dx ; cmc ; add dword ptr [rax], eax ; add al, 0x39 ; stc ; inc dword ptr [rbp + rsi*8 + 0x45740001] ; stc ; call rsp
0x00000000001ad5c4 : insb byte ptr [rdi], dx ; cmp al, 1 ; add byte ptr [rax + 0x58], bl ; cmc ; jmp qword ptr [rcx]
0x000000000019565c : insb byte ptr [rdi], dx ; enter 0, -0x3c ; sub al, 0xee ; ljmp ptr [rax + rcx*8 + 0x2db40000] ; out dx, al ; call rsp
0x0000000000197fdc : insb byte ptr [rdi], dx ; enter 1, 0x24 ; xor edi, eax ; lcall ptr [rax + rcx*8 + 0x33b40001] ; clc ; jmp rsp
0x000000000019841c : insb byte ptr [rdi], dx ; in al, 1 ; add byte ptr [rbp + rsi*4 - 0x1b6b0008], al ; add dword ptr [rax], eax ; mov ah, 0xb6 ; clc ; jmp rsp
0x00000000001a8ac4 : insb byte ptr [rdi], dx ; int1 ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0xe], al ; call qword ptr [rdx]
0x00000000001a50c4 : insb byte ptr [rdi], dx ; mov bh, 0 ; add byte ptr [rax + 0x3d], cl ; out dx, eax ; jmp rsi
0x00000000001a57c4 : insb byte ptr [rdi], dx ; mov esi, 0xab880000 ; sti ; call qword ptr [rax]
0x000000000007011c : insb byte ptr [rdi], dx ; or al, byte ptr [rax] ; add rsp, 0x80 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008de20 : insb byte ptr [rdi], dx ; push rcx ; add dword ptr [rax], eax ; ret
0x00000000001538c0 : insb byte ptr [rdi], dx ; std ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001932bd : insb byte ptr [rdi], dx ; sti ; call qword ptr [rax]
0x00000000001a43c4 : insb byte ptr [rdi], dx ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; mov bl, 0xee ; jmp rdx
0x00000000000fa177 : insb byte ptr [rdi], dx ; sub al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000012a1bc : insb byte ptr [rdi], dx ; sub dword ptr [rax], eax ; and dword ptr [rax + 0x40], 0xfffffff9 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000198d34 : insb byte ptr [rdi], dx ; sub dword ptr [rdx], eax ; add byte ptr [rsi + rcx*2 + 0x29bcfffa], ah ; add al, byte ptr [rax] ; push rsp ; cli ; jmp rsp
0x000000000010a274 : insb byte ptr [rdi], dx ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000014c290 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000009089f : insd dword ptr [rdi], dx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000000bce91 : insd dword ptr [rdi], dx ; add byte ptr [rax + 1], cl ; ret
0x0000000000106d5b : insd dword ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; ret 0xabe
0x00000000000f712f : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rax + rax*8 + 0x9b81175], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000bfd5f : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000014d190 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000bd740 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x76bc2], al ; add byte ptr [rdi], cl ; ret 0xf8c1
0x00000000001b06fd : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rdx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001b06e5 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; call 0x271afd54
0x00000000001b0685 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; mov byte ptr [rcx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001b0715 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; sbb byte ptr [rdx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001b06cd : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; shl byte ptr [rcx - 0xa], 1 ; jmp qword ptr [rsi]
0x00000000001b072d : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; xor byte ptr [rdx - 0xa], ah ; jmp qword ptr [rsi]
0x0000000000081a2f : insd dword ptr [rdi], dx ; add eax, dword ptr [rax] ; add dh, dh ; ret
0x0000000000193e25 : insd dword ptr [rdi], dx ; cld ; jmp rax
0x000000000011f94d : insd dword ptr [rdi], dx ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000000c9b3f : insd dword ptr [rdi], dx ; pop rsi ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000105fb7 : insd dword ptr [rdi], dx ; shr al, 0x82 ; jb 0x105fc0 ; dec dword ptr [rax + 0x39] ; ret
0x00000000000fa084 : insd dword ptr [rdi], dx ; sub al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000bfc83 : int1 ; adc dword ptr [rax], esi ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001a8ac5 : int1 ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0xe], al ; call qword ptr [rdx]
0x00000000001a8b35 : int1 ; add byte ptr [rax], al ; test al, 0x46 ; jmp qword ptr [rcx]
0x00000000001000eb : int1 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000001b8b05 : int1 ; add dword ptr [rax], eax ; cwde ; lahf ; sti ; jmp qword ptr [rdx]
0x00000000001985fd : int1 ; add dword ptr [rax], eax ; push rsp ; and ecx, edi ; call rsp
0x0000000000154456 : int1 ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000fea83 : int1 ; and ebp, dword ptr [rax + rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000a1268 : int1 ; bsf rcx, rcx ; movzx eax, byte ptr [rax + rcx] ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000001a78a2 : int1 ; call qword ptr [rax]
0x000000000007745b : int1 ; clc ; or dword ptr [rax], eax ; add rsp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x000000000016e902 : int1 ; dec byte ptr [rax + 0x7f] ; jg 0x16e91a ; vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x000000000016eaa8 : int1 ; dec byte ptr [rax + 0x7f] ; jg 0x16eac0 ; vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x000000000016e72c : int1 ; dec byte ptr [rax + 0x7f] ; jl 0x16e753 ; cld ; vzeroupper ; ret
0x0000000000185dee : int1 ; dec dword ptr [rax - 0x67000e56] ; stosb byte ptr [rdi], al ; int1 ; jmp qword ptr [rax]
0x0000000000103fbc : int1 ; dec dword ptr [rax - 0x75] ; jge 0x103fc8 ; call rbx
0x000000000010426f : int1 ; dec dword ptr [rax - 0x75] ; jge 0x10427b ; call rbx
0x0000000000105e07 : int1 ; dec dword ptr [rax - 0x75] ; jge 0x105e13 ; call rbx
0x00000000000ffa1c : int1 ; dec dword ptr [rax - 0x77] ; add eax, 0x2c2d5b ; add rsp, 8 ; ret
0x0000000000102098 : int1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000103a7a : int1 ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rax - 0x77], 3 ; setne al ; movzx eax, al ; pop rbx ; ret
0x00000000001963aa : int1 ; dec dword ptr [rcx + 1] ; add byte ptr [rbx*4 + 0x21ccfff1], dh ; add dword ptr [rax], eax ; popfq ; int1 ; jmp rsp
0x00000000000fa083 : int1 ; insd dword ptr [rdi], dx ; sub al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109b83 : int1 ; jb 0x109bbe ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000a060d : int1 ; je 0xa0630 ; add rax, 1 ; movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0xa0618 ; ret
0x0000000000108e83 : int1 ; jg 0x108ebe ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8f83 : int1 ; jle 0xf8fbf ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000185df6 : int1 ; jmp qword ptr [rax]
0x00000000001963e2 : int1 ; ljmp ptr [rbx + 1] ; add byte ptr [rbx + rcx*8 + 0x2384fff1], dl ; add dword ptr [rax], eax ; in al, -0x33 ; int1 ; call rsp
0x00000000001963fa : int1 ; ljmp ptr [rsp + 1] ; add byte ptr [rbx + rsi*8 + 0x24bcfff1], ah ; add dword ptr [rax], eax ; mov ah, 0xf3 ; int1 ; call rsp
0x0000000000036183 : int1 ; lodsb al, byte ptr [rsi] ; cmp byte ptr [rax], al ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102c83 : int1 ; loope 0x102cbe ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8383 : int1 ; mov ch, byte ptr [rax + rax] ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000013a4ba : int1 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000f8183 : int1 ; mov word ptr [rax + rax], gs ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000012ae43 : int1 ; pop rdi ; sub dword ptr [rax], eax ; mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x12ae5b ; ret
0x00000000000fb183 : int1 ; pop rsp ; sub al, 0 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x0000000000045d02 : int1 ; shl ecx, 0x1e ; or edx, ecx ; cmp esi, 0x40 ; cmovne rax, rdx ; ret
0x0000000000116ca3 : int1 ; stc ; sub al, byte ptr [rax] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; jmp rax
0x00000000000ce483 : int1 ; sub dword ptr [rdi], ebp ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000ec083 : int1 ; sub rax, 0x64d8f700 ; mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000098c0e : int1 ; xor edi, edi ; mov rax, rdi ; ret
0x000000000012b798 : iretd ; adc dword ptr [rax + rcx*2 + 0x33], esp ; cmp al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000001b694d : iretd ; add dword ptr [rax], eax ; adc byte ptr [rax + rdi*8], cl ; jmp qword ptr [rax]
0x0000000000156834 : iretd ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000187e01 : iretd ; cmc ; inc dword ptr [rax] ; fdivr st(5), st(0) ; call rsp
0x0000000000187e45 : iretd ; cmc ; push qword ptr [rax - 0x32] ; cmc ; push qword ptr [rax - 0x32] ; cmc ; inc dword ptr [rbx - 0x20] ; cmc ; call rsp
0x0000000000099b4e : iretd ; jb 0x99b35 ; mov rdx, rax ; jmp 0x99aee
0x00000000000cd653 : iretd ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x00000000001933a5 : iretd ; sti ; push qword ptr [rax] ; sar ebx, 1 ; jmp rax
0x0000000000109693 : ja 0x1096cc ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001096b4 : ja 0x1096ed ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109723 : ja 0x10975c ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109744 : ja 0x10977d ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109774 : ja 0x1097ad ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000010a459 : ja 0x10a478 ; lea rax, qword ptr [rip + 0x7e7be] ; movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000001196b3 : ja 0x119710 ; test rbx, rbx ; jne 0x1196d8 ; add rsp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000001196b2 : ja 0x119711 ; test rbx, rbx ; jne 0x1196d9 ; add rsp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000011aec7 : ja 0x11aeda ; mov rax, rdi ; sar rax, 6 ; ret
0x000000000012de81 : ja 0x12ded4 ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000001329c5 : ja 0x132986 ; add byte ptr [rax], al ; test eax, eax ; setne al ; add rsp, 8 ; movzx eax, al ; ret
0x000000000013daa8 : ja 0x13daea ; ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013e83f : ja 0x13e862 ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000013e83b : ja 0x13e86a ; mov qword ptr [rdi + 0x18], rsi ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000013eabb : ja 0x13eae8 ; jbe 0x13eadb ; add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000013eac0 : ja 0x13eaf0 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000001541b5 : ja 0x1541b7 ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001932d9 : ja 0x1932dc ; push qword ptr [rax + 0x79] ; sti ; call qword ptr [rax]
0x0000000000193be5 : ja 0x193be5 ; call qword ptr [rax]
0x00000000001a6429 : ja 0x1a641d ; jmp qword ptr [rax]
0x00000000001a6441 : ja 0x1a6435 ; call qword ptr [rax]
0x00000000001a6471 : ja 0x1a6465 ; call qword ptr [rax]
0x00000000001a64a1 : ja 0x1a6495 ; call qword ptr [rax]
0x00000000001a64d1 : ja 0x1a64c5 ; call qword ptr [rax]
0x00000000001a6501 : ja 0x1a64f5 ; call qword ptr [rax]
0x000000000002b1d3 : ja 0x2b21e ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x000000000002d9d2 : ja 0x2d9ee ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000002da1d : ja 0x2da38 ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000002e205 : ja 0x2e260 ; cmp dword ptr [rax], eax ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x000000000002eb39 : ja 0x2e863 ; movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000006d175 : ja 0x6d1f4 ; movzx eax, al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000006d8de : ja 0x6d97d ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x0000000000078315 : ja 0x78372 ; std ; dec dword ptr [rax - 0x7f] ; ret
0x00000000000795a8 : ja 0x795c1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079655 : ja 0x79673 ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000080a35 : ja 0x80a47 ; xor al, 0 ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x80a4f ; call rax
0x0000000000087db1 : ja 0x87d5d ; movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x00000000000a7697 : ja 0xa76a1 ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a76b3 : ja 0xa76c1 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a7704 : ja 0xa7717 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a77e9 : ja 0xa7801 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a785f : ja 0xa787b ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a78e1 : ja 0xa7901 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000ab049 : ja 0xab069 ; sub rdi, 0x10 ; add rax, rdi ; ret
0x00000000000aaf7d : ja 0xab06c ; add rax, rdi ; add rax, rcx ; ret
0x00000000000ac8e2 : ja 0xac8f2 ; cmove rax, rcx ; ret
0x00000000000ccf63 : ja 0xccf86 ; cmp rax, 0xff ; mov edx, 0 ; cmove rax, rdx ; ret
0x00000000000ccf63 : ja 0xccf88 ; cmp rax, 0xff ; mov edx, 0 ; cmove rax, rdx ; ret
0x00000000000ce561 : ja 0xce571 ; add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xce57e ; ret
0x00000000000da815 : ja 0xda7fa ; or al, byte ptr [rax] ; movzx r15d, r15b ; movsxd rax, dword ptr [rdx + r15*4] ; add rax, rdx ; jmp rax
0x00000000000e25e8 : ja 0xe2620 ; fisttp dword ptr [rax - 0x77] ; ret 0xfeb
0x0000000000106114 : jae 0x106141 ; lea rdx, qword ptr [rax + 1] ; mov qword ptr [rdi + 0x28], rdx ; mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000109acd : jae 0x109b06 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109af4 : jae 0x109b2d ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109b24 : jae 0x109b5d ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109b57 : jae 0x109b90 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000010b0e1 : jae 0x10b0fd ; mov rdx, qword ptr [rip + 0x2b92ce] ; add word ptr [rdx + rax*2], 1 ; ret
0x0000000000110fa3 : jae 0x110fc7 ; cmp dil, byte ptr [rax] ; je 0x110fd1 ; mov rdx, rax ; jmp 0x110fbe
0x000000000014d5da : jae 0x14d5db ; movsxd rax, ecx ; add rax, rdi ; sub rax, rdx ; ret
0x0000000000173387 : jae 0x1733a4 ; nop dword ptr [rax] ; call qword ptr [rbx]
0x0000000000173387 : jae 0x1733a8 ; nop dword ptr [rax] ; call qword ptr [rbx]
0x00000000001821b6 : jae 0x1821d9 ; lodsd eax, dword ptr [rsi] ; xor eax, 0x444be0a8 ; sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000193db5 : jae 0x193db5 ; jmp qword ptr [rax]
0x0000000000193db9 : jae 0x193dbd ; call qword ptr [rax + 0x10fffc72]
0x0000000000193df5 : jae 0x193df5 ; call qword ptr [rax]
0x000000000002cb1a : jae 0x2cb36 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000050a98 : jae 0x50ac0 ; mov qword ptr [rcx + rdx*8], rax ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000719b3 : jae 0x719cb ; lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000071b3a : jae 0x71b5b ; lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000072537 : jae 0x7255e ; lea rax, qword ptr [rcx + 4] ; mov qword ptr [rdx + 0x20], rax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x000000000007284f : jae 0x72879 ; lea rcx, qword ptr [rdx + 1] ; mov qword ptr [rax + 0x28], rcx ; mov byte ptr [rdx], dil ; movzx eax, dil ; ret
0x0000000000079948 : jae 0x7996d ; lea rdx, qword ptr [rax + 1] ; mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000007997f : jae 0x7999d ; lea rdx, qword ptr [rax + 1] ; mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000007b518 : jae 0x7b525 ; movzx eax, byte ptr [rax] ; ret
0x000000000007d473 : jae 0x7d401 ; movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007f27d : jae 0x7f2a5 ; movzx eax, byte ptr [rax] ; ret
0x00000000000ce1e1 : jae 0xce1f1 ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xce1fe ; ret
0x00000000000d26e9 : jae 0xd26eb ; push qword ptr [rcx] ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x000000000010542a : jb 0x105438 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000105fbb : jb 0x105fbc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000109b84 : jb 0x109bbd ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109bd4 : jb 0x109c10 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 2] ; mov rax, -1 ; ret
0x0000000000125dba : jb 0x125de1 ; movzx eax, byte ptr [rdi + 1] ; lea rax, qword ptr [rdi + rax + 2] ; cmp rdx, rax ; sbb eax, eax ; ret
0x0000000000156f7a : jb 0x156f50 ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000016a28a : jb 0x16a299 ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000001725fe : jb 0x1725f4 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000193dbd : jb 0x193dbd ; call qword ptr [rax]
0x0000000000193dc1 : jb 0x193dc5 ; call qword ptr [rax + 0x10fffc71]
0x00000000000306ca : jb 0x30701 ; cmp dword ptr [rax], eax ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000038646 : jb 0x38667 ; mov byte ptr [rax + 0xe], cl ; mov rdx, r13 ; mov rsi, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call r15
0x0000000000003b04 : jb 0x3ae1 ; clc ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000079104 : jb 0x7913b ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000794d4 : jb 0x794c9 ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000858bc : jb 0x858a2 ; mov byte ptr [rsi + rbx], r9b ; mov rax, rsi ; pop rbx ; ret
0x0000000000085a2c : jb 0x85a17 ; mov byte ptr [rsi + rbx], r9b ; add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000087915 : jb 0x8792f ; cmp rcx, qword ptr [rip + 0x33beba] ; jb 0x87942 ; sub rax, 0x10 ; ret
0x000000000008791e : jb 0x87939 ; sub rax, 0x10 ; ret
0x0000000000096834 : jb 0x96848 ; mov qword ptr [rdx], r12 ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009758d : jb 0x975a9 ; sub al, bl ; nop dword ptr [rax] ; ret
0x00000000000986d4 : jb 0x986d3 ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000997f2 : jb 0x997d4 ; mov rdx, rax ; jmp 0x99780
0x000000000009993f : jb 0x99924 ; mov rdx, rax ; jmp 0x998cd
0x0000000000099b4f : jb 0x99b34 ; mov rdx, rax ; jmp 0x99aed
0x0000000000099d6f : jb 0x99d54 ; mov rdx, rax ; jmp 0x99d0b
0x000000000009aaff : jb 0x9aae4 ; mov rdx, rax ; jmp 0x9aa8d
0x000000000009bb97 : jb 0x9bb7c ; mov rdx, rax ; jmp 0x9bb2d
0x000000000009d80a : jb 0x9d7ef ; mov rdx, rax ; jmp 0x9d7ad
0x00000000000a8a6d : jb 0xa7ec8 ; movdqu xmmword ptr [rdi + 0x30], xmm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a800a : jb 0xa8019 ; add byte ptr [rax], al ; ret
0x00000000000fe7af : jb 0xfe7bf ; add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xfe7ce ; ret
0x00000000001097e3 : jbe 0x10981c ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109804 : jbe 0x10983d ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109837 : jbe 0x109870 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109836 : jbe 0x109871 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109864 : jbe 0x10989d ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001266e9 : jbe 0x126680 ; sal byte ptr [rax + rcx - 0x58], 2 ; mov byte ptr [rdx + 2], 0 ; jne 0x12674e ; mov eax, r8d ; ret
0x000000000013eabd : jbe 0x13ead9 ; add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000016c136 : jbe 0x16c1b5 ; add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000185cc9 : jbe 0x185cbd ; jmp qword ptr [rax]
0x0000000000185cc8 : jbe 0x185cbe ; jmp qword ptr [rax]
0x00000000001932d5 : jbe 0x1932d4 ; call rax
0x00000000001939b1 : jbe 0x1939b1 ; jmp qword ptr [rax]
0x000000000002b237 : jbe 0x2b282 ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x000000000004aac1 : jbe 0x4ab02 ; je 0x4ab49 ; jns 0x4aa9d ; or byte ptr [r8], r8b ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x000000000004aac0 : jbe 0x4ab03 ; je 0x4ab4a ; jns 0x4aa9e ; or byte ptr [r8], r8b ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x0000000000070baa : jbe 0x70c17 ; mov rax, qword ptr [rbp + 0x48] ; add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000073465 : jbe 0x734a0 ; mov rax, qword ptr [rbp + 0x18] ; mov esi, r12d ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000738a2 : jbe 0x738fa ; mov eax, dword ptr [rbp + 0x20] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000000738a1 : jbe 0x73928 ; mov rax, qword ptr [rbp + 0x20] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000077ad6 : jbe 0x77ad8 ; or dword ptr [rax], eax ; add rsp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x000000000007d37a : jbe 0x7d39b ; mov rax, qword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000007da46 : jbe 0x7da63 ; mov rax, qword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000007de66 : jbe 0x7de8f ; mov rax, qword ptr [rbx + 0x48] ; add rsp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x000000000008b8d3 : jbe 0x8b8eb ; cmp rsi, qword ptr [rax] ; jbe 0x8b8f9 ; mov rax, qword ptr [rax + 8] ; test rax, rax ; jne 0x8b8e1 ; ret
0x000000000008b8d8 : jbe 0x8b8f4 ; mov rax, qword ptr [rax + 8] ; test rax, rax ; jne 0x8b8dc ; ret
0x0000000000090e16 : jbe 0x90e55 ; add rax, rdi ; ret
0x0000000000090e26 : jbe 0x90e57 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000090e36 : jbe 0x90e57 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000090e46 : jbe 0x90e57 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000090ba0 : jbe 0x90e5c ; add rax, rdi ; add rax, rcx ; ret
0x00000000000ac926 : jbe 0xac918 ; add byte ptr [rax], al ; ret
0x00000000000ce471 : jbe 0xce481 ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xce48e ; ret
0x00000000000d8336 : jbe 0xd8344 ; add byte ptr [rax], al ; mov dword ptr [rbx + 0x2c], eax ; jmp 0xd830a
0x000000000010076e : je 0x100781 ; mov qword ptr [rax + 8], rdi ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000001007a3 : je 0x1007ae ; mov qword ptr [rax], rdx ; ret
0x000000000010079a : je 0x1007af ; mov qword ptr [rdx + 8], rax ; test rax, rax ; je 0x1007b7 ; mov qword ptr [rax], rdx ; ret
0x0000000000100d3d : je 0x100d61 ; or dword ptr [rax], 0x8000 ; mov eax, 1 ; add rsp, 8 ; ret
0x0000000000102ef1 : je 0x102f19 ; add rsp, 0x10 ; lea rax, qword ptr [rip + 0x2c12f2] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000103477 : je 0x103495 ; pop rbx ; lea rax, qword ptr [rip + 0x2c0ddf] ; pop rbp ; pop r12 ; ret
0x000000000010690e : je 0x1069ae ; call rax
0x0000000000106a85 : je 0x106b86 ; call rax
0x0000000000107732 : je 0x10774b ; cmp rdi, rdx ; jne 0x107733 ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000109987 : je 0x1099c0 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001099b7 : je 0x1099f0 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109a3d : je 0x109a76 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109a64 : je 0x109a9d ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000110fa8 : je 0x110fcc ; mov rdx, rax ; jmp 0x110fb9
0x0000000000110f9c : je 0x110fd8 ; cmp rax, rcx ; mov esi, edi ; jae 0x110fce ; cmp dil, byte ptr [rax] ; je 0x110fd8 ; mov rdx, rax ; jmp 0x110fc5
0x0000000000110f9b : je 0x110fd9 ; cmp rax, rcx ; mov esi, edi ; jae 0x110fcf ; cmp dil, byte ptr [rax] ; je 0x110fd9 ; mov rdx, rax ; jmp 0x110fc6
0x000000000011473b : je 0x11471b ; mov rax, qword ptr [r12 + 0x38] ; jmp 0x11470f
0x0000000000114eb1 : je 0x114ed9 ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x0000000000116664 : je 0x116685 ; add rax, 0x48 ; cmp rax, rdx ; jb 0x11666d ; xor eax, eax ; ret
0x0000000000117046 : je 0x11705a ; lock cmpxchg qword ptr [rip + 0x2af6f7], rdi ; cmp rdx, rax ; jne 0x117041 ; ret
0x0000000000117502 : je 0x117532 ; call rax
0x00000000001177d0 : je 0x117812 ; lea rsi, qword ptr [rbp - 0x20] ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x0000000000117982 : je 0x11799f ; sub ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000117f02 : je 0x117f62 ; lea rax, qword ptr [rip + 0x38855] ; ret
0x0000000000117f29 : je 0x117f62 ; lea rax, qword ptr [rip - 0x86af2] ; ret
0x0000000000117fc2 : je 0x118022 ; lea rax, qword ptr [rip + 0x38795] ; ret
0x0000000000117fe9 : je 0x118022 ; lea rax, qword ptr [rip - 0x86bb2] ; ret
0x0000000000118082 : je 0x1180e2 ; lea rax, qword ptr [rip + 0x386b5] ; ret
0x00000000001180a9 : je 0x1180e2 ; lea rax, qword ptr [rip - 0x86c92] ; ret
0x0000000000122227 : je 0x122233 ; mov rdi, rbx ; call rax
0x000000000012251f : je 0x12252b ; mov rdi, rbx ; call rax
0x000000000012262f : je 0x122643 ; lea rdi, qword ptr [rip + 0x2a3068] ; call rax
0x000000000012df73 : je 0x12df7f ; mov rdi, rsp ; call rax
0x000000000012dfab : je 0x12dfce ; add rsp, 0x30 ; lea rax, qword ptr [rip + 0x297d88] ; pop rbx ; ret
0x000000000012e05e : je 0x12e06a ; mov rdi, rsp ; call rax
0x000000000012e719 : je 0x12e746 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x000000000012e919 : je 0x12e925 ; mov rdi, rbp ; call rax
0x000000000012f97c : je 0x12f988 ; mov rdi, rbx ; call rax
0x000000000012fbf7 : je 0x12fa99 ; mov rdi, rbx ; call rax
0x000000000012fcee : je 0x12fcfa ; mov rdi, rbx ; call rax
0x0000000000134af2 : je 0x134b06 ; lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x000000000013500e : je 0x13503f ; push rax ; mov rdi, r12 ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x00000000001354ea : je 0x1354f6 ; mov rdi, r12 ; call rax
0x00000000001356bb : je 0x1356c9 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000136a70 : je 0x136991 ; mov rdi, rbx ; call rax
0x00000000001369a7 : je 0x1369b3 ; mov rdi, r12 ; call rax
0x0000000000136b98 : je 0x136ba4 ; mov rdi, rbp ; call rax
0x0000000000136db8 : je 0x136dc4 ; mov rdi, rbp ; call rax
0x000000000013788f : je 0x13789d ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000137cd6 : je 0x137d07 ; push rax ; mov rdi, r12 ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x0000000000137f7b : je 0x137f87 ; mov rdi, r12 ; call rax
0x00000000001382ef : je 0x1382fd ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000013846c : je 0x13849d ; xor byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x000000000013ab8a : je 0x13ab18 ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000013abe3 : je 0x13abfa ; sub rax, -0x80 ; add rsp, 8 ; ret
0x000000000013ac13 : je 0x13ac2c ; add rax, 0xa0 ; add rsp, 8 ; ret
0x000000000013ac43 : je 0x13ac5c ; add rax, 0xa8 ; add rsp, 8 ; ret
0x000000000013b603 : je 0x13b634 ; add al, 0x7e ; cmp byte ptr [rcx - 0x75], al ; push rbp ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000013b87b : je 0x13b889 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013bf94 : je 0x13bfa2 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013decb : je 0x13def7 ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000013e00f : je 0x13e03b ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000013e15d : je 0x13e188 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x000000000013e22d : je 0x13e258 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x000000000013e2fd : je 0x13e328 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x000000000013e3bd : je 0x13e3e8 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x0000000000146a44 : je 0x146a6d ; mov rax, qword ptr [rax] ; add rax, qword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x000000000014d385 : je 0x14d36b ; movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x000000000014d4c1 : je 0x14d4a8 ; movsxd rax, ecx ; add rax, rdi ; ret
0x0000000000166265 : je 0x165e1f ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000016b638 : je 0x16b65f ; test al, 1 ; jne 0x16b67f ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000016ca57 : je 0x16ca61 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001721be : je 0x1721c9 ; call rax
0x00000000001721b5 : je 0x1721d7 ; mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x1721d2 ; call rax
0x00000000001932d1 : je 0x1932d4 ; push qword ptr [rax] ; jbe 0x1932d8 ; call rax
0x0000000000194ecc : je 0x194e69 ; add byte ptr [rax], al ; je 0x194f0d ; jmp 0x194eda
0x0000000000195a24 : je 0x195a15 ; add byte ptr [rax], al ; hlt ; pushfq ; out dx, al ; dec dword ptr [rax - 0x5fdc0000] ; out dx, al ; jmp rsp
0x0000000000196714 : je 0x19675e ; add dword ptr [rax], eax ; add al, 0x4a ; lcall ptr [rcx + rdi + 0x4a940001] ; call rsp
0x0000000000197f80 : je 0x197fb7 ; clc ; inc dword ptr [rsi + rax*8 + 0x2ad40001] ; clc ; call rsp
0x0000000000198564 : je 0x198563 ; add dword ptr [rax], eax ; add edi, ecx ; push qword ptr [rsi + rbp*8 + 0x3a40001] ; stc ; jmp rsp
0x0000000000198684 : je 0x198681 ; add dword ptr [rax], eax ; and al, 0x36 ; stc ; call rsp
0x0000000000198988 : je 0x19895e ; stc ; push rsp ; lar eax, word ptr [rax] ; test bl, al ; stc ; dec dword ptr [rax + rdx] ; add al, byte ptr [rax] ; xchg eax, esp ; ret
0x0000000000198f6c : je 0x198fae ; add al, byte ptr [rax] ; mov ah, 0x8d ; cli ; jmp rsp
0x0000000000199650 : je 0x199626 ; sti ; ljmp ptr [rsi + rdx + 1] ; add byte ptr [rbx + rax*8 + 0x1684fffb], al ; add dword ptr [rax], eax ; xchg eax, esp ; ret
0x00000000001a48cc : je 0x1a4884 ; add byte ptr [rax], al ; loopne 0x1a4927 ; cli ; call qword ptr [rax]
0x00000000001a64cc : je 0x1a64a0 ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a70cc : je 0x1a70ac ; add byte ptr [rax], al ; nop ; int1 ; call rdx
0x00000000001a7dcc : je 0x1a7db9 ; add byte ptr [rax], al ; mov al, 0x10 ; jmp qword ptr [rdi]
0x00000000001aa9cc : je 0x1aa9e5 ; add dword ptr [rax], eax ; adc byte ptr [rsi], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001aeecc : je 0x1aef2a ; add dword ptr [rax], eax ; mov al, 0xb8 ; cmc ; jmp qword ptr [rcx]
0x00000000001b06cc : je 0x1b0742 ; add dword ptr [rax], eax ; shl byte ptr [rcx - 0xa], 1 ; jmp qword ptr [rsi]
0x00000000000203e0 : je 0x20415 ; or byte ptr [rbx + 0x4814247c], cl ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000204ad : je 0x204b9 ; mov rdi, rbp ; call rax
0x00000000000206fe : je 0x2071f ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000232ca : je 0x232f5 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x000000000002583d : je 0x25870 ; mov rdi, qword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000002667c : je 0x266af ; mov rdi, qword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000002adff : je 0x2ae05 ; call rax
0x000000000002c35b : je 0x2c361 ; call rax
0x000000000002d9cf : je 0x2d9e8 ; and esi, dword ptr [rdi + 0x10] ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000002da1a : je 0x2d9fc ; and esi, dword ptr [rdi + 0x10] ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x00000000000a0756 : je 0x31f77d32 ; rol bl, 0x66 ; nop ; mov rax, rdi ; ret
0x000000000003639b : je 0x363bf ; mov eax, 1 ; shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000363db : je 0x36401 ; mov rax, -2 ; rol rax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000048494 : je 0x484ab ; mov rdx, qword ptr [r8 + rax*8] ; mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; pop rbx ; ret
0x000000000004862f : je 0x48646 ; mov rax, qword ptr [rax + rsi*8] ; mov qword ptr [rcx + rsi*8], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000488c5 : je 0x488c0 ; cmp rcx, rax ; setbe al ; movzx eax, al ; neg eax ; or eax, 1 ; ret
0x000000000004a1b2 : je 0x4a180 ; or byte ptr [rax - 0x73], cl ; push rsi ; add dword ptr [rcx - 0x77], ecx ; push rsp ; ret 0x4808
0x000000000004aac3 : je 0x4ab47 ; jns 0x4aa9b ; or byte ptr [r8], r8b ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x000000000004aac4 : je 0x4ab4c ; mov byte ptr [rdi + 8], 0 ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x000000000004ab4b : je 0x4ab70 ; mov byte ptr [rbx], 0 ; mov rax, rbx ; add rsp, 0x440 ; pop rbx ; ret
0x000000000006bb66 : je 0x6bb9e ; add rsp, 0x1008 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000006bbe3 : je 0x6bc0b ; add rsp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000006efa7 : je 0x6efc1 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006f043 : je 0x6f05b ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x000000000006f030 : je 0x6f05e ; lea rsi, qword ptr [rsp + 8] ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000006f034 : je 0x6f064 ; or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x000000000006f02d : je 0x6f064 ; or byte ptr [rsi + rbx + 0x48], dh ; lea esi, dword ptr [rsp + 8] ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000006f077 : je 0x6f091 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006f762 : je 0x6f798 ; mov rax, rdx ; pop rbx ; ret
0x00000000000708fb : je 0x70915 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000071d6e : je 0x71d8d ; or ebp, edx ; mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000746ae : je 0x746d8 ; mov rdx, qword ptr [rax] ; cmp rdx, rcx ; mov eax, 0xffffffff ; jb 0x746d0 ; ret
0x00000000000788a2 : je 0x788d8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000079b97 : je 0x79bc1 ; xor edx, edx ; div rbp ; mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079cde : je 0x79cfd ; or ebp, edx ; mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007d3a2 : je 0x7d3d4 ; or al, 0x48 ; mov edi, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000007ee5b : je 0x7ee7c ; mov rdx, rax ; mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x7ee66 ; ret
0x000000000007f274 : je 0x7f296 ; mov rax, qword ptr [rdi + 8] ; cmp rax, rdx ; jae 0x7f2ae ; movzx eax, byte ptr [rax] ; ret
0x0000000000080a3f : je 0x80a45 ; call rax
0x0000000000086e02 : je 0x86e2b ; call rax
0x00000000000877f2 : je 0x8781e ; sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x0000000000087931 : je 0x87946 ; sub rax, 8 ; ret
0x0000000000087ddb : je 0x87de1 ; call rax
0x00000000000888b2 : je 0x886c9 ; add rsp, 0x10 ; mov rsi, r12 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000089d1e : je 0x89e29 ; mov rsi, r14 ; call rax
0x0000000000089f1f : je 0x8a01c ; mov rdx, r12 ; mov rdi, r15 ; call rax
0x000000000008a18c : je 0x8a26c ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000008a43f : je 0x8a61c ; mov rdx, r15 ; mov rdi, r8 ; call rax
0x000000000008ac70 : je 0x8ad8f ; mov rdx, rbp ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000008aeae : je 0x8af9c ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000008b03a : je 0x8b0d4 ; mov rsi, rbp ; mov rdi, r12 ; call rax
0x000000000008b18f : je 0x8b237 ; mov rdi, r13 ; mov rdx, rbp ; mov rsi, r12 ; call rax
0x000000000008bbbb : je 0x8bbcd ; lea rax, qword ptr [rip + 0x157ac] ; ret
0x000000000008bda8 : je 0x8bdba ; lea rax, qword ptr [rip + 0xe2edf] ; ret
0x000000000008d49b : je 0x8d4ad ; lea rax, qword ptr [rip + 0xd540c] ; ret
0x000000000008d5a8 : je 0x8d5ba ; lea rax, qword ptr [rip + 0xbfd7f] ; ret
0x000000000008db0d : je 0x8db25 ; bsf rax, rdx ; ret
0x000000000008db0d : je 0x8db26 ; bsf rax, rdx ; ret
0x000000000008daac : je 0x8db39 ; bsf rax, rdx ; ret
0x000000000008daac : je 0x8db3a ; bsf rax, rdx ; ret
0x000000000008dcd4 : je 0x8dcf0 ; sar rdx, cl ; test rdx, rdx ; je 0x8dd0d ; bsf rax, rdx ; ret
0x000000000008dcd4 : je 0x8dcf1 ; sar rdx, cl ; test rdx, rdx ; je 0x8dd0e ; bsf rax, rdx ; ret
0x000000000008dcdc : je 0x8dd05 ; bsf rax, rdx ; ret
0x000000000008dcdc : je 0x8dd06 ; bsf rax, rdx ; ret
0x000000000008dc6c : je 0x8dd19 ; bsf rax, rdx ; ret
0x000000000008dc6c : je 0x8dd1a ; bsf rax, rdx ; ret
0x000000000008de1b : je 0x8de2d ; lea rax, qword ptr [rip + 0x1516c] ; ret
0x000000000008f6fb : je 0x8f70d ; lea rax, qword ptr [rip + 0xd495c] ; ret
0x000000000008f760 : je 0x8f92d ; bsr rax, rax ; add rax, rdi ; ret
0x000000000008f9e4 : je 0x8f92d ; bsr rax, rsi ; add rax, rdi ; ret
0x000000000008f7ee : je 0x8f92e ; bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000008fa18 : je 0x8fa2a ; lea rax, qword ptr [rip + 0xbda4f] ; ret
0x000000000008fda8 : je 0x8fdba ; lea rax, qword ptr [rip + 0xbd7ef] ; ret
0x00000000000905ce : je 0x905da ; add byte ptr [rax - 0x77], cl ; ret 0x14c
0x0000000000090e85 : je 0x90e98 ; lea rax, qword ptr [rip + 0xda832] ; ret
0x0000000000091340 : je 0x91379 ; lea rax, qword ptr [rip + 0x107] ; ret
0x0000000000091319 : je 0x91379 ; lea rax, qword ptr [rip + 0xbf44e] ; ret
0x00000000000919c9 : je 0x91a29 ; lea rax, qword ptr [rip + 0xbed7e] ; ret
0x00000000000919f0 : je 0x91a29 ; lea rax, qword ptr [rip - 0x5c9] ; ret
0x0000000000091a9b : je 0x91aad ; lea rax, qword ptr [rip + 0xd513c] ; ret
0x0000000000091bbb : je 0x91bcd ; lea rax, qword ptr [rip + 0xd682c] ; ret
0x0000000000096689 : je 0x966e9 ; lea rax, qword ptr [rip + 0xba0de] ; ret
0x00000000000966b0 : je 0x966e9 ; lea rax, qword ptr [rip - 0x5269] ; ret
0x0000000000097e08 : je 0x97e2b ; bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x0000000000098001 : je 0x98019 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000098bcf : je 0x98be6 ; test al, al ; jne 0x98c20 ; movzx eax, byte ptr [r9] ; test al, al ; jne 0x98c51 ; mov rax, rdi ; ret
0x0000000000098c03 : je 0x98c29 ; add rcx, 1 ; sub rsi, 1 ; jne 0x98c11 ; xor edi, edi ; mov rax, rdi ; ret
0x0000000000098cc3 : je 0x98cfe ; add rax, 1 ; sub rsi, 1 ; jne 0x98cce ; xor eax, eax ; ret
0x0000000000098dc3 : je 0x98dfe ; add rcx, 1 ; sub rax, 1 ; jne 0x98dce ; pop rbx ; pop rbp ; ret
0x00000000000a05ca : je 0xa05ef ; add rax, 1 ; movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0xa05d7 ; ret
0x00000000000a05c9 : je 0xa05f0 ; add rax, 1 ; movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0xa05d8 ; ret
0x00000000000a060e : je 0xa062f ; add rax, 1 ; movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0xa0617 ; ret
0x00000000000a0666 : je 0xa0691 ; add rax, 1 ; movsx r8d, byte ptr [rdi + rax] ; test r8b, r8b ; jne 0xa0661 ; ret
0x00000000000a0c1b : je 0xa0c59 ; rol bl, 0x90 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000a0cfc : je 0xa0cd8 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000a0d5b : je 0xa0cdf ; bsr eax, eax ; add rax, rdi ; add rax, r8 ; ret
0x00000000000a0f93 : je 0xa0fb9 ; mov rax, qword ptr fs:[rbp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000a10f9 : je 0xa1120 ; bsf rdx, rax ; movzx eax, byte ptr [rdi + rdx] ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x00000000000abd9f : je 0xabd91 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000abff5 : je 0xac016 ; add rax, 2 ; ret
0x00000000000ac309 : je 0xac2e9 ; test eax, eax ; je 0xac349 ; mov eax, dword ptr [rsi + 8] ; mov dword ptr [rdi + 0xc], eax ; mov rax, rbx ; pop rbx ; ret
0x00000000000ac30d : je 0xac345 ; mov eax, dword ptr [rsi + 8] ; mov dword ptr [rdi + 0xc], eax ; mov rax, rbx ; pop rbx ; ret
0x00000000000ac37d : je 0xac373 ; mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ac576 : je 0xac4df ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac626 : je 0xac696 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac634 : je 0xac69a ; test al, 0xf0 ; jne 0xac66a ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac646 : je 0xac69e ; test ah, ah ; jne 0xac67e ; test al, 0xf0 ; jne 0xac66e ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac8df : je 0xac8fc ; cmp esi, dword ptr [rdi + 8] ; cmove rax, rcx ; ret
0x00000000000ac935 : je 0xac948 ; lea rax, qword ptr [rip + 0xc03c2] ; ret
0x00000000000acae8 : je 0xaca9d ; mov rax, rbx ; pop rbx ; ret
0x00000000000adb22 : je 0xadb3c ; mov r9d, dword ptr [rdi + rdx*4] ; test r9d, r9d ; jne 0xadaef ; mov rax, rdx ; ret
0x00000000000b340f : je 0xb3411 ; jo 0xb3448 ; ror dword ptr [rax - 0x2d], 1 ; out 0x89, al ; ror dword ptr [rax - 0x77], 1 ; ret 0xd348
0x00000000000b7d8e : je 0xb7d9b ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000ba730 : je 0xba742 ; add dword ptr [rax + 0x10], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bc1a1 : je 0xbc1d0 ; cmp byte ptr [rax - 0x75], cl ; jl 0xbc1d5 ; call r15
0x00000000000bc285 : je 0xbc2b0 ; sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000bc694 : je 0xbc6c3 ; cmp byte ptr [rax - 0x75], cl ; jl 0xbc6c8 ; call r15
0x00000000000bce90 : je 0xbcf04 ; add byte ptr [rax + 1], cl ; ret
0x00000000000c7c30 : je 0xc7c4e ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000c9bdb : je 0xc9beb ; add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xc9bfe ; ret
0x00000000000c9c24 : je 0xc9c5a ; adc byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x00000000000ca2c8 : je 0xca309 ; sti ; lcall ptr [rcx + 0x2404f741] ; add byte ptr [rax - 0x7af10000], al ; ret
0x00000000000cd391 : je 0xcd397 ; call rax
0x00000000000cd567 : je 0xcd511 ; mov rdi, qword ptr [rbx] ; mov rax, qword ptr [rdi + 0x10] ; test rax, rax ; je 0xcd588 ; call rax
0x00000000000cd573 : je 0xcd57c ; call rax
0x00000000000ceb08 : je 0xceb1e ; cmp rax, 0x7275 ; jne 0xceaf7 ; xor eax, eax ; ret
0x00000000000ceae1 : je 0xceb21 ; cmp rax, 0x414a53 ; je 0xceb21 ; mov eax, 1 ; ret
0x00000000000ceb3e : je 0xceb21 ; cmp rax, 0x5346544e ; je 0xceb21 ; mov eax, 1 ; ret
0x00000000000d14c7 : je 0xd141c ; add rbx, 1 ; mov rdx, rax ; jmp 0xd147c
0x00000000000d6bee : je 0xd6c99 ; mov dword ptr [rax], ebp ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d7ccf : je 0xd7cde ; mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000db283 : je 0xdb2c7 ; nop dword ptr [rax] ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000e25dc : je 0xe2824 ; mov ecx, dword ptr [rbp + 4] ; test ecx, ecx ; jle 0xe2671 ; xor ebx, ebx ; mov rdx, rax ; jmp 0xe2610
0x00000000000e6605 : je 0xe661e ; add dword ptr [rax - 0x7d], ecx ; ret 0x4001
0x00000000000e6adf : je 0xe6b0a ; adc byte ptr [rax - 0x77], cl ; ret 0x8949
0x00000000000e8278 : je 0xe82a3 ; or byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000f2e10 : je 0xf2e34 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f5620 : je 0xf564b ; cmp byte ptr [rax - 0x77], cl ; ret 0x4de9
0x00000000000f8104 : je 0xf8159 ; xor edx, edx ; xor esi, esi ; mov rdi, rbx ; call rax
0x00000000000f9994 : je 0xf99ce ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f99c4 : je 0xf99fe ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f99f7 : je 0xf9a31 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd830 : je 0xfd84a ; xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x00000000000fe126 : je 0xfe091 ; add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000ffbe8 : je 0xffc00 ; or dword ptr [rax], 0x8000 ; lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000104ac5 : jg 0x104adf ; add byte ptr [rdi], cl ; test dl, dl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; std ; xor edx, edx ; xor esi, esi ; call rbx
0x0000000000104edd : jg 0x104eef ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000105742 : jg 0x105765 ; add byte ptr [rdi], cl ; test dword ptr [rcx - 0x41000007], edi ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000105782 : jg 0x1057a5 ; add byte ptr [rdi], cl ; test dword ptr [rdi*8 + 0x3beffff], ebx ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x00000000001057a2 : jg 0x1057c5 ; add byte ptr [rdi], cl ; test dword ptr [rbx - 0x41000004], eax ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000001057c2 : jg 0x1057e5 ; add byte ptr [rdi], cl ; test dword ptr [rdi - 0x41000005], esi ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000105822 : jg 0x105845 ; add byte ptr [rdi], cl ; test dword ptr [rbp - 0x41000007], eax ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000105862 : jg 0x105885 ; add byte ptr [rdi], cl ; test dword ptr [rsi - 0x4100000a], edx ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000001058a2 : jg 0x1058c5 ; add byte ptr [rdi], cl ; test dword ptr [rdx - 0x4100000b], ebp ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000108e84 : jg 0x108ebd ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000012ff0d : jg 0x12fef3 ; add byte ptr [rax], al ; test eax, eax ; jne 0x12ff30 ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000158e2d : jg 0x158de6 ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000016c02d : jg 0x16c0ad ; add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000001877ad : jg 0x1877a9 ; dec dword ptr [rax - 0x80] ; hlt ; call rax
0x00000000001877a9 : jg 0x1877a9 ; push rax ; jg 0x1877ad ; dec dword ptr [rax - 0x80] ; hlt ; call rax
0x00000000001877b5 : jg 0x1877ad ; call rax
0x0000000000192687 : jg 0x192695 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x0000000000034abb : jg 0x34b0d ; sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000034ad9 : jg 0x34b51 ; movd rax, mm0 ; and rax, rdx ; sub rax, rdx ; shr rax, 0x3f ; ret
0x0000000000035ad6 : jg 0x35ae7 ; add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0x35aff ; ret
0x0000000000036bf3 : jg 0x36c27 ; test edi, edi ; jne 0x36c17 ; lea edx, dword ptr [rax - 1] ; mov dword ptr [rip + 0x38a486], edx ; ret
0x000000000003af22 : jg 0x3af6b ; mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x000000000004a57e : jg 0x4a590 ; add byte ptr [rsi + rax - 0x39], dh ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000005cdf8 : jg 0x5ce19 ; add byte ptr [rdi], cl ; mov dh, 0xdb ; movsxd rax, dword ptr [rcx + rbx*4] ; add rax, rcx ; jmp rax
0x000000000007aff2 : jg 0x7b073 ; xor eax, eax ; syscall ; cmp rax, -0x1000 ; ja 0x7b011 ; ret
0x000000000008d5ad : jg 0x8d5b0 ; or eax, dword ptr [rax] ; ret
0x00000000000a77d6 : jg 0xa77e5 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a77e6 : jg 0xa77f8 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a77fa : jg 0xa780d ; mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a7819 : jg 0xa782b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a7839 : jg 0xa784b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a7859 : jg 0xa786e ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a787a : jg 0xa788d ; mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a789a : jg 0xa78ad ; mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a78ba : jg 0xa78cd ; mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a78da : jg 0xa78f0 ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a78fe : jg 0xa7915 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a791d : jg 0xa7933 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a793d : jg 0xa7953 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a795b : jg 0xa796f ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a797b : jg 0xa798f ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a799b : jg 0xa79af ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a79bb : jg 0xa79cf ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a8616 : jg 0xa8625 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a8629 : jg 0xa863b ; mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a864a : jg 0xa865d ; mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a8669 : jg 0xa867b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a8689 : jg 0xa869b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a86ac : jg 0xa86c1 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a86ca : jg 0xa86dd ; mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a86ea : jg 0xa86fd ; mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a870a : jg 0xa871d ; mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a872d : jg 0xa8743 ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a874e : jg 0xa8765 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a876d : jg 0xa8783 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a878d : jg 0xa87a3 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a87ab : jg 0xa87bf ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a87cb : jg 0xa87df ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a87eb : jg 0xa87ff ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a880b : jg 0xa881f ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a8a76 : jg 0xa8aae ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a8a75 : jg 0xa8afd ; xor byte ptr [rax - 0x73], cl ; ret
0x00000000000aa27f : jg 0xaa2e0 ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000aa2a2 : jg 0xaa306 ; adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000aa2f5 : jg 0xaa37e ; xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000aad50 : jg 0xaacde ; out 0xf0, al ; mov edx, 0 ; cmove rax, rdx ; ret
0x00000000000aad50 : jg 0xaacdf ; out 0xf0, al ; mov edx, 0 ; cmove rax, rdx ; ret
0x00000000000bbae6 : jg 0xbbb06 ; mov rax, rbx ; pop rbx ; ret
0x00000000000bbbca : jg 0xbbbfd ; lea rax, qword ptr [rip + 0x307ded] ; add rsp, 8 ; ret
0x00000000000ce8cc : jg 0xce8d2 ; add byte ptr [rax], al ; ret
0x00000000000ce965 : jg 0xce989 ; add byte ptr [rax], al ; jne 0xce8da ; mov eax, 0xfa ; ret
0x00000000000ebf0d : jg 0xebf4b ; add byte ptr [rax - 0x75], cl ; adc eax, 0x2d5051 ; mov dword ptr [rdx], ecx ; pop rdx ; pop rcx ; pop rbx ; ret
0x00000000000f73f6 : jg 0xf7410 ; test dl, cl ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0x4b01
0x00000000000f8f5d : jg 0xf8f97 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fe0bc : jg 0xfe113 ; cmove ebx, eax ; add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000fe788 : jg 0xfe7c6 ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x00000000000fe7f8 : jg 0xfe836 ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x00000000001933b0 : jg 0xffffffff91fa33be ; std ; dec esi ; nop ; std ; call rax
0x00000000001046ad : jge 0x104678 ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000105622 : jge 0x105645 ; add byte ptr [rdi], cl ; test dword ptr [rdx - 0x41000004], ebx ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00000000001090a7 : jge 0x1090e0 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001090d4 : jge 0x10910d ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109104 : jge 0x10913d ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109134 : jge 0x10916d ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109133 : jge 0x10916e ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001091c1 : jge 0x1091d1 ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x1091de ; ret
0x00000000001356bf : jge 0x1356d3 ; call rax
0x000000000013b87f : jge 0x13b893 ; call rax
0x000000000013bf98 : jge 0x13bfac ; call rax
0x00000000001539af : jge 0x1539b9 ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000186f0c : jge 0x186eec ; call rax
0x00000000001939b5 : jge 0x1939bd ; push qword ptr [rax + 0x40fffc7c] ; jl 0x1939c5 ; call rax
0x00000000001b1159 : jge 0x1b1153 ; call qword ptr [rax]
0x0000000000077c27 : jge 0x77c31 ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000089d16 : jge 0x89d5a ; test rax, rax ; mov qword ptr [rbx], rax ; je 0x89e31 ; mov rsi, r14 ; call rax
0x000000000008fb1f : jge 0x8fb6d ; xor eax, dword ptr [rax] ; mov qword ptr [rip + 0x333d5e], rax ; add rsp, 8 ; ret
0x00000000000a0bdf : jge 0xa0be7 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000f90ad : jge 0xf90e7 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f90d4 : jge 0xf910e ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f9104 : jge 0xf913e ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fe932 : jge 0xfe970 ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x0000000000104320 : jl 0x10434e ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000106962 : jl 0x106998 ; add al, 0x48 ; ror eax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000106afe : jl 0x106b34 ; add al, 0x48 ; ror eax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000109177 : jl 0x1091b0 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001091a4 : jl 0x1091dd ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001091d4 : jl 0x10920d ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109204 : jl 0x10923d ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109234 : jl 0x10926d ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109233 : jl 0x10926e ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109264 : jl 0x10929d ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000121627 : jl 0x12165a ; cmp byte ptr [rax - 0x77], cl ; mov esp, 0x14024 ; add al, ch ; stc ; ret
0x0000000000122d40 : jl 0x122d77 ; and byte ptr [rax - 0x73], cl ; xor eax, 0x6ab80 ; call 0x147831
0x000000000012ad39 : jl 0x12ad64 ; and byte ptr [rax - 0x77], cl ; ret
0x000000000012e068 : jl 0x12e0a3 ; add byte ptr [rdx], al ; add rsp, 0x30 ; lea rax, qword ptr [rip + 0x297cc9] ; pop rbx ; ret
0x000000000012e092 : jl 0x12e0cd ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x0000000000130d00 : jl 0x130cd2 ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000135f97 : jl 0x135fc2 ; or byte ptr [rax + 0x63], cl ; ret
0x0000000000139728 : jl 0x13975c ; or byte ptr [rax], al ; setne dl ; add rsp, 0x70 ; mov eax, edx ; pop rbx ; ret
0x00000000001462d2 : jl 0x146307 ; sbb byte ptr [rax], al ; mov rax, qword ptr [rsp + 0x38] ; jne 0x1462c7 ; add rsp, 0x48 ; ret
0x00000000001721af : jl 0x17219e ; adc byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdx + 0x48] ; mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x1721d8 ; call rax
0x00000000001939bd : jl 0x1939bd ; call rax
0x00000000001939b9 : jl 0x1939bd ; inc dword ptr [rax + 0x7c] ; cld ; call rax
0x00000000001939bc : jl 0x1939be ; call rax
0x0000000000193bb9 : jl 0x193bb9 ; jmp rax
0x0000000000195c64 : jl 0x195c5d ; add byte ptr [rax], al ; je 0x195ca2 ; out dx, eax ; call rsp
0x0000000000195d1c : jl 0x195d24 ; add byte ptr [rax], al ; xor al, 0x64 ; out dx, eax ; push qword ptr [rdi + rsi*8 + 0x65240000] ; out dx, eax ; jmp rsp
0x0000000000196834 : jl 0x196880 ; add dword ptr [rax], eax ; test byte ptr [rdx - 0xd], bh ; call rsp
0x0000000000198234 : jl 0x19821a ; add dword ptr [rax], eax ; and al, 0x65 ; clc ; lcall ptr [rbp + rdx*8 + 0x66240001] ; clc ; jmp rsp
0x0000000000198974 : jl 0x198992 ; add al, byte ptr [rax] ; xchg eax, esp ; sar cl, 0xff ; xchg eax, esp ; lar eax, word ptr [rax] ; ret
0x0000000000198aec : jl 0x198b0e ; add al, byte ptr [rax] ; in al, -0x14 ; stc ; jmp rsp
0x0000000000199fd4 : jl 0x199fe3 ; add byte ptr [rax], al ; call 0xffffffffd5198869
0x000000000019ced4 : jl 0x19cf12 ; add byte ptr [rax], al ; out -0x17, eax ; call qword ptr [rax]
0x000000000019ffd4 : jl 0x1a0043 ; add byte ptr [rax], al ; cmp byte ptr [rsi], ch ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001a13d4 : jl 0x1a1457 ; add byte ptr [rax], al ; clc ; jns 0x1a13cf ; call rcx
0x00000000001a5c40 : jl 0x1a5c47 ; add byte ptr [rax], al ; in al, dx ; ret 0
0x00000000001b8bd4 : jl 0x1b8bcf ; add dword ptr [rax], eax ; clc ; sahf ; sti ; jmp qword ptr [rdx]
0x00000000000203e4 : jl 0x20415 ; adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000025842 : jl 0x25870 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000000260d5 : jl 0x26107 ; add byte ptr [rdi], cl ; test byte ptr [rdx], ah ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf08
0x0000000000026681 : jl 0x266af ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000029867 : jl 0x2989c ; adc byte ptr [rbp + rcx*4 - 0x7c], cl ; and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x000000000002ac37 : jl 0x2ac82 ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x000000000002ac7c : jl 0x2acc7 ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x000000000002adf5 : jl 0x2ade8 ; add byte ptr [rdx - 0x75], cl ; add al, 0xe0 ; test rax, rax ; je 0x2ae0f ; call rax
0x0000000000032b9e : jl 0x32baf ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x0000000000039273 : jl 0x392a5 ; and byte ptr [rax - 0x75], cl ; and al, 0x30 ; lea r15, qword ptr [rbx + r14] ; call rax
0x000000000004b364 : jl 0x4b38f ; and byte ptr [rax + 1], cl ; ret
0x000000000005220a : jl 0x521d4 ; clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000056d04 : jl 0x56d2f ; and byte ptr [rax + 1], cl ; ret
0x0000000000074035 : jl 0x73fd1 ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000075ef8 : jl 0x75eb9 ; xor al, 0 ; mov dword ptr fs:[rax], 9 ; mov eax, 0xffffffff ; ret
0x00000000000a0c6a : jl 0xa0cd5 ; add rax, rdi ; ret
0x00000000000a0c7a : jl 0xa0cd7 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000000a0c9a : jl 0xa0cd7 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00000000000a0cba : jl 0xa0cd7 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000b32eb : jl 0xb32b8 ; jo 0xb327f ; ror dword ptr [rax - 0x77], 1 ; ret 0xd348
0x00000000000c4a36 : jl 0xc4a61 ; xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000000c984e : jl 0xc987c ; and byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000000ce411 : jl 0xce421 ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xce42e ; ret
0x00000000000d9fa4 : jl 0xd9fcf ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000000eb2b0 : jl 0xeb2df ; cli ; dec dword ptr [rax + 1] ; ret
0x00000000000f57bf : jl 0xf57ea ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000f767a : jl 0xf76b0 ; sub al, 0x48 ; ror eax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x00000000001056a2 : jle 0x1056c5 ; add byte ptr [rdi], cl ; test dword ptr [rax - 0x4100000b], edi ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000105702 : jle 0x105725 ; add byte ptr [rdi], cl ; test dword ptr [rbp - 0x41000006], eax ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00000000001075f6 : jle 0x10759d ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109024 : jle 0x10905d ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001091f1 : jle 0x109201 ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10920e ; ret
0x00000000001095f6 : jle 0x10967d ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000012f18e : jle 0x12f1a2 ; add byte ptr [rax], al ; mov esi, 4 ; mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000130ee8 : jle 0x130eec ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x000000000014d453 : jle 0x14d371 ; movsxd rax, ecx ; ret
0x00000000001932e9 : jle 0x1932e8 ; jmp qword ptr [rax]
0x0000000000194b1d : jle 0x194b25 ; add byte ptr [rax + rbp - 0x16], dl ; jmp rsp
0x0000000000034add : jle 0x34aab ; and rax, rdx ; sub rax, rdx ; shr rax, 0x3f ; ret
0x000000000008daae : jle 0x8dab7 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000008daae : jle 0x8dab8 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000000919ce : jle 0x919c1 ; or eax, dword ptr [rax] ; ret
0x00000000000ce979 : jle 0xce97f ; add byte ptr [rax], al ; ret
0x00000000000e25e7 : jle 0xe2666 ; xor ebx, ebx ; mov rdx, rax ; jmp 0xe2605
0x00000000000f8f84 : jle 0xf8fbe ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8fb4 : jle 0xf8fee ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8fe4 : jle 0xf901e ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f9014 : jle 0xf904e ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f9044 : jle 0xf907e ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f99f6 : jle 0xf9a79 ; sub al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fe882 : jle 0xfe8c0 ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x00000000001942e3 : jmp qword ptr [rax + 0x10fffc93]
0x00000000001940f7 : jmp qword ptr [rax + 0x10fffc99]
0x0000000000193db3 : jmp qword ptr [rax + 0x20fffc73]
0x000000000019431b : jmp qword ptr [rax + 0x20fffc94]
0x0000000000194313 : jmp qword ptr [rax + 0x20fffc95]
0x000000000019430b : jmp qword ptr [rax + 0x20fffc96]
0x0000000000194303 : jmp qword ptr [rax + 0x20fffc97]
0x00000000001942fb : jmp qword ptr [rax + 0x20fffc98]
0x000000000018603f : jmp qword ptr [rax - 0x2f000df4]
0x00000000001861cf : jmp qword ptr [rax - 0x3f000de2]
0x00000000001860af : jmp qword ptr [rax - 0x3f000df2]
0x0000000000193303 : jmp qword ptr [rax - 0x7f000474]
0x000000000019378f : jmp qword ptr [rax - 0xf0003f3]
0x00000000000469e7 : jmp qword ptr [rax]
0x0000000000145ab3 : jmp qword ptr [rcx + rax*2 - 0x75]
0x00000000001968c3 : jmp qword ptr [rdi + rax*2 - 0x711bffff]
0x0000000000053763 : jmp qword ptr [rdi + rax*8]
0x0000000000130467 : jmp qword ptr [rdx + rax*8]
0x0000000000194c03 : jmp qword ptr [rsp + rax*4 + 0x61240000]
0x00000000001862e5 : jmp qword ptr es:[rax]
0x00000000000c0745 : jmp rax
0x0000000000100820 : jne 0x100813 ; mov r9, rcx ; mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x0000000000102cd7 : jne 0x102cfa ; mov eax, 0x1a ; syscall ; cmp rax, -0xfff ; jae 0x102d2a ; ret
0x0000000000106d3b : jne 0x106d46 ; mov qword ptr [rsp + 0x18], rax ; mov rdx, rax ; jmp 0x106d98
0x0000000000107737 : jne 0x10772e ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000109894 : jne 0x1098cd ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001098c7 : jne 0x109900 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001098e7 : jne 0x10990a ; mov eax, 0x130 ; syscall ; cmp rax, -0xfff ; jae 0x10993a ; ret
0x000000000010992d : jne 0x109966 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000010992c : jne 0x109967 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109954 : jne 0x10998d ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001099f7 : jne 0x109a1a ; mov eax, 0x2b ; syscall ; cmp rax, -0xfff ; jae 0x109a4a ; ret
0x0000000000109a87 : jne 0x109aaa ; mov eax, 0x2a ; syscall ; cmp rax, -0xfff ; jae 0x109ada ; ret
0x00000000001177d4 : jne 0x1177bf ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x0000000000117f50 : jne 0x117f62 ; lea rax, qword ptr [rip + 0x3b747] ; ret
0x0000000000117edb : jne 0x117f62 ; lea rax, qword ptr [rip + 0x5665c] ; ret
0x0000000000118010 : jne 0x118022 ; lea rax, qword ptr [rip + 0x3e057] ; ret
0x0000000000117f9b : jne 0x118022 ; lea rax, qword ptr [rip + 0x5659c] ; ret
0x00000000001180d0 : jne 0x1180e2 ; lea rax, qword ptr [rip + 0x3b5a7] ; ret
0x000000000011805b : jne 0x1180e2 ; lea rax, qword ptr [rip + 0x564bc] ; ret
0x0000000000118157 : jne 0x118169 ; lea rax, qword ptr [rip + 0x56960] ; ret
0x0000000000118363 : jne 0x1182fd ; mov rax, rdi ; ret
0x00000000001196b8 : jne 0x1196d3 ; add rsp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000001199b9 : jne 0x119959 ; mov rax, rdi ; ret
0x0000000000126a64 : jne 0x126a87 ; movzx eax, byte ptr [rdi + 1] ; shl eax, 3 ; cdqe ; shr rax, 4 ; ret
0x000000000012d7ca : jne 0x12d7c7 ; mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000132c37 : jne 0x132bf6 ; add byte ptr [rax], al ; test eax, eax ; jne 0x132c60 ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000139819 : jne 0x139841 ; mov rax, qword ptr [rsp + 8] ; mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000139919 : jne 0x139941 ; mov rax, qword ptr [rsp + 8] ; mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000013afba : jne 0x13afb5 ; mov eax, dword ptr [rax + 0x20] ; test eax, eax ; je 0x13afdd ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013d373 : jne 0x13d367 ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000013dec2 : jne 0x13de5f ; mov rax, qword ptr [r12 + 8] ; lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013e006 : jne 0x13dfd6 ; mov rax, qword ptr [r12 + 8] ; lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013eab8 : jne 0x13eb16 ; cmp dword ptr [rdi + 0x20], esi ; jbe 0x13eade ; add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000169e92 : jne 0x16a50d ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016b63c : jne 0x16b67b ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000016cc90 : jne 0x16ccd4 ; mov rax, qword ptr [rdi - 8] ; mov rcx, qword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x16ccd4 ; xor eax, eax ; ret
0x000000000016dad0 : jne 0x16db14 ; mov rax, qword ptr [rdi - 8] ; mov rcx, qword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x16db14 ; xor eax, eax ; ret
0x000000000016db05 : jne 0x16db26 ; shr rcx, 0x20 ; shr rax, 0x20 ; cmp ecx, eax ; jne 0x16db26 ; xor eax, eax ; ret
0x000000000016ed85 : jne 0x16ed16 ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000016ed57 : jne 0x16ed16 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000016ed56 : jne 0x16ed17 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000016ee20 : jne 0x16ed1a ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000016edda : jne 0x16ed1a ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000016edd9 : jne 0x16ed1b ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000016ed02 : jne 0x16ed25 ; nop ; nop word ptr cs:[rax + rax] ; xor rax, rax ; ret
0x000000000016ed7c : jne 0x16eeff ; test dl, 4 ; jne 0x16ed1f ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000016ee66 : jne 0x16ef3a ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000016ee65 : jne 0x16ef3b ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000016ed4e : jne 0x16ef3f ; test dl, 0x40 ; jne 0x16ed1f ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000016ed4d : jne 0x16ef40 ; test dl, 0x40 ; jne 0x16ed20 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000016eeb9 : jne 0x16efaa ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000016eeb8 : jne 0x16efab ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000034178 : jne 0x3416b ; mov eax, dword ptr [r9 + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x0000000000036bf7 : jne 0x36c13 ; lea edx, dword ptr [rax - 1] ; mov dword ptr [rip + 0x38a486], edx ; ret
0x0000000000048933 : jne 0x48925 ; mov rax, rdx ; ret
0x0000000000048fdf : jne 0x48fd5 ; mov rax, rdx ; ret
0x000000000004abb1 : jne 0x4ab9d ; mov rax, rsi ; ret
0x000000000004ac35 : jne 0x4ac15 ; mov rax, rsi ; ret
0x00000000000549c7 : jne 0x54957 ; add al, byte ptr [rax] ; jmp 0x54995
0x000000000006bbde : jne 0x6bc00 ; test rbp, rbp ; je 0x6bc10 ; add rsp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000006bc61 : jne 0x6bc76 ; mov rax, rbx ; pop rbx ; ret
0x000000000006f7dd : jne 0x6f771 ; mov dword ptr fs:[rax], 5 ; mov rax, rdx ; pop rbx ; ret
0x00000000000744f9 : jne 0x7451f ; sub rdx, qword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x0000000000074d1e : jne 0x74c11 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000757b5 : jne 0x757cf ; mov rdx, qword ptr [r15 + 0x40] ; sub rdx, rsi ; mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x0000000000077dc7 : jne 0x77e23 ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x77d74
0x000000000007891d : jne 0x788b1 ; mov dword ptr fs:[rax], 5 ; mov rax, rdx ; pop rbx ; ret
0x0000000000079b6e : jne 0x79b89 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007a349 : jne 0x7a362 ; mov rdx, qword ptr [rbx + 0x40] ; sub rdx, rsi ; mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x000000000007eea3 : jne 0x7eeba ; sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000007f88e : jne 0x7f7be ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007fe5d : jne 0x7fe57 ; add rsp, 8 ; mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000868cc : jne 0x868ee ; add rax, 8 ; cmp rdx, rax ; ja 0x868d6 ; xor eax, eax ; ret
0x00000000000869e2 : jne 0x86aa4 ; add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000873dc : jne 0x8752a ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x0000000000087684 : jne 0x87879 ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000087dcc : jne 0x87e11 ; mov rax, qword ptr [rip + 0x33909b] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x87df0 ; call rax
0x0000000000088166 : jne 0x88248 ; add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000088795 : jne 0x88926 ; add rsp, 0x10 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000088a55 : jne 0x88bba ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x0000000000088d11 : jne 0x88e86 ; add rsp, 0x10 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008c00b : jne 0x8c01d ; lea rax, qword ptr [rip + 0xc] ; ret
0x000000000008dbd3 : jne 0x8dbde ; xor rax, rax ; ret
0x000000000008de67 : jne 0x8de79 ; lea rax, qword ptr [rip + 0x10] ; ret
0x000000000008fad8 : jne 0x8fb00 ; lea rax, qword ptr [rip + 0x333dbf] ; mov qword ptr [rip + 0x333da0], rax ; ret
0x0000000000090dc9 : jne 0x90e25 ; xor rax, rax ; ret
0x0000000000090d89 : jne 0x90e49 ; xor rax, rax ; ret
0x0000000000090e71 : jne 0x90e84 ; lea rax, qword ptr [rip + 0x26] ; ret
0x0000000000091367 : jne 0x91379 ; lea rax, qword ptr [rip + 0xc4d10] ; ret
0x00000000000912f2 : jne 0x91379 ; lea rax, qword ptr [rip + 0xdd255] ; ret
0x00000000000917da : jne 0x917ec ; lea rax, qword ptr [rip + 0xdd2ed] ; ret
0x0000000000091a17 : jne 0x91a29 ; lea rax, qword ptr [rip + 0xc1c70] ; ret
0x00000000000919a2 : jne 0x91a29 ; lea rax, qword ptr [rip + 0xdcb85] ; ret
0x0000000000091c07 : jne 0x91c19 ; lea rax, qword ptr [rip + 0x80] ; ret
0x0000000000091c6a : jne 0x91c7c ; lea rax, qword ptr [rip + 0xd] ; ret
0x0000000000093ef7 : jne 0x93f09 ; lea rax, qword ptr [rip + 0x80] ; ret
0x0000000000093f5a : jne 0x93f6c ; lea rax, qword ptr [rip + 0xd] ; ret
0x00000000000966d7 : jne 0x966e9 ; lea rax, qword ptr [rip + 0xbcfd0] ; ret
0x0000000000096662 : jne 0x966e9 ; lea rax, qword ptr [rip + 0xd7ee5] ; ret
0x0000000000097f53 : jne 0x97fae ; pmovmskb eax, xmm1 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000009829f : jne 0x98291 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000098c0d : jne 0x98c07 ; xor edi, edi ; mov rax, rdi ; ret
0x0000000000098bd3 : jne 0x98c1c ; movzx eax, byte ptr [r9] ; test al, al ; jne 0x98c4d ; mov rax, rdi ; ret
0x0000000000098bdb : jne 0x98c45 ; mov rax, rdi ; ret
0x0000000000098d26 : jne 0x98d28 ; add rax, 1 ; test dl, dl ; mov edx, 0 ; cmove rax, rdx ; ret
0x0000000000098d26 : jne 0x98d29 ; add rax, 1 ; test dl, dl ; mov edx, 0 ; cmove rax, rdx ; ret
0x00000000000a069c : jne 0xa06b9 ; nop ; add rax, 1 ; cmp byte ptr [rdi + rax], dl ; je 0xa06ae ; ret
0x00000000000a0b6c : jne 0xa0c40 ; pmovmskb eax, xmm1 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000a2d4c : jne 0xa2e66 ; movlpd xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000a571c : jne 0xa5836 ; movlpd xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000aa6c1 : jne 0xaa6b6 ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000000aa6b8 : jne 0xaa6df ; movzx edx, byte ptr [rsi + rax + 3] ; test dl, dl ; jne 0xaa6bf ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000000aa811 : jne 0xaa806 ; sub rax, 1 ; ret
0x00000000000aa808 : jne 0xaa82f ; movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xaa80f ; sub rax, 1 ; ret
0x00000000000abd51 : jne 0xabd64 ; lea rax, qword ptr [rip + 0xf8f6] ; ret
0x00000000000ac60b : jne 0xac666 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac4f7 : jne 0xac66a ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac607 : jne 0xac67a ; test al, 0xf0 ; jne 0xac66a ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac603 : jne 0xac68e ; test ah, ah ; jne 0xac67e ; test al, 0xf0 ; jne 0xac66e ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac7f4 : jne 0xac7d6 ; mov rax, rdi ; ret
0x00000000000ac7f0 : jne 0xac876 ; test eax, eax ; jne 0xac7da ; mov rax, rdi ; ret
0x00000000000ac921 : jne 0xac934 ; lea rax, qword ptr [rip + 0xec76] ; ret
0x00000000000adb2b : jne 0xadae6 ; mov rax, rdx ; ret
0x00000000000c04a9 : jne 0xc04c1 ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000c384a : jne 0xc3839 ; nop dword ptr [rax] ; mov r10d, eax ; jmp 0xc382a
0x00000000000c7f4f : jne 0xc7f1e ; nop dword ptr [rax] ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c8267 : jne 0xc829a ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c9bd8 : jne 0xc9c19 ; mov eax, 0x74 ; syscall ; cmp rax, -0x1000 ; ja 0xc9c01 ; ret
0x00000000000cd267 : jne 0xcd28a ; mov eax, 0x22 ; syscall ; cmp rax, -0xfff ; jae 0xcd2ba ; ret
0x00000000000cd2c7 : jne 0xcd2ea ; mov eax, 0x23 ; syscall ; cmp rax, -0xfff ; jae 0xcd31a ; ret
0x00000000000ce4e1 : jne 0xce4f1 ; add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xce4fe ; ret
0x00000000000ceb0c : jne 0xceb88 ; add byte ptr [rax], al ; jne 0xceaf3 ; xor eax, eax ; ret
0x00000000000d263c : jne 0xd2631 ; nop ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d273e : jne 0xd2730 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000000def8 : jne 0xdf02 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rcx]
0x00000000000f8667 : jne 0xf868a ; mov eax, 2 ; syscall ; cmp rax, -0xfff ; jae 0xf86ba ; ret
0x00000000000f8887 : jne 0xf88aa ; mov eax, 0 ; syscall ; cmp rax, -0xfff ; jae 0xf88da ; ret
0x00000000000f88e7 : jne 0xf890a ; mov eax, 1 ; syscall ; cmp rax, -0xfff ; jae 0xf893a ; ret
0x00000000000f8f17 : jne 0xf8f3a ; mov eax, 3 ; syscall ; cmp rax, -0xfff ; jae 0xf8f6a ; ret
0x00000000000f9067 : jne 0xf908a ; mov eax, 0x55 ; syscall ; cmp rax, -0xfff ; jae 0xf90ba ; ret
0x00000000000f9964 : jne 0xf999e ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fcd67 : jne 0xfcd8a ; mov eax, 7 ; syscall ; cmp rax, -0xfff ; jae 0xfcdba ; ret
0x00000000000fe5b7 : jne 0xfe5da ; mov eax, 0x13 ; syscall ; cmp rax, -0xfff ; jae 0xfe60a ; ret
0x00000000000fe617 : jne 0xfe63a ; mov eax, 0x14 ; syscall ; cmp rax, -0xfff ; jae 0xfe66a ; ret
0x00000000000fed07 : jne 0xfed2a ; mov eax, 0x4a ; syscall ; cmp rax, -0xfff ; jae 0xfed5a ; ret
0x00000000000fed97 : jne 0xfedba ; mov eax, 0x4b ; syscall ; cmp rax, -0xfff ; jae 0xfedea ; ret
0x0000000000100703 : jno 0x100719 ; sub al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102e03 : jno 0x102df2 ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010605a : jno 0x10605b ; dec dword ptr [rax + 0x39] ; ret
0x0000000000107503 : jno 0x1074ab ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108d03 : jno 0x108c94 ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000109103 : jno 0x10918f ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109203 : jno 0x10928e ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109803 : jno 0x109888 ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109cb3 : jno 0x109cec ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109ce4 : jno 0x109d20 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 2] ; mov rax, -1 ; ret
0x000000000010a703 : jno 0x10a779 ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000116a93 : jno 0x116aa1 ; sub al, byte ptr [rax] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; jmp rax
0x000000000016c54e : jno 0x16c55d ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000193dc5 : jno 0x193dc5 ; call qword ptr [rax]
0x0000000000193dc9 : jno 0x193dcd ; call qword ptr [rax + 0x10fffc70]
0x000000000006bc5b : jno 0x6bc6b ; add byte ptr [rax], al ; test eax, eax ; jne 0x6bc7c ; mov rax, rbx ; pop rbx ; ret
0x000000000006d176 : jno 0x6d192 ; mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000bbb03 : jno 0xbbb69 ; xor byte ptr [rax], al ; xor ebx, ebx ; mov dword ptr fs:[rax], 0x4b ; mov rax, rbx ; pop rbx ; ret
0x00000000000bfd03 : jno 0xbfd26 ; xor byte ptr [rax], al ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000000d27f9 : jno 0xd27fb ; push qword ptr [rcx] ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x00000000000f263b : jno 0xf2637 ; stc ; dec dword ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f9103 : jno 0xf918f ; sub al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa203 : jno 0xfa27e ; sub al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fe73f : jno 0xfe74f ; add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xfe75e ; ret
0x00000000000fee03 : jno 0xfee32 ; sub al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ff403 : jno 0xff42f ; sub al, 0 ; neg eax ; mov dword ptr fs:[rdx], eax ; mov rax, -1 ; ret
0x0000000000108e71 : jnp 0x108e81 ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x108e8e ; ret
0x0000000000109294 : jnp 0x1092cd ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001092c4 : jnp 0x1092fd ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001092f4 : jnp 0x10932d ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109327 : jnp 0x109360 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109326 : jnp 0x109361 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000110829 : jnp 0x110861 ; add byte ptr [rax], bh ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x0000000000119354 : jnp 0x11938f ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 2] ; mov rax, -1 ; ret
0x0000000000137893 : jnp 0x1378ff ; call rax
0x00000000001382f3 : jnp 0x13834f ; call rax
0x00000000001852c1 : jnp 0x1852b3 ; jmp qword ptr [rax]
0x0000000000185319 : jnp 0x185313 ; inc dword ptr [rax - 0x7f001185] ; jnp 0x18531b ; jmp rax
0x0000000000185321 : jnp 0x185313 ; jmp rax
0x00000000001932e1 : jnp 0x1932e8 ; push qword ptr [rax + 0x50fffb7c] ; jle 0x1932f0 ; jmp qword ptr [rax]
0x0000000000193bc5 : jnp 0x193bc9 ; call qword ptr [rax + 0x20fffc7a]
0x0000000000193bc1 : jnp 0x193bc9 ; inc dword ptr [rax] ; jnp 0x193bcd ; call qword ptr [rax + 0x20fffc7a]
0x0000000000193bbd : jnp 0x193bc9 ; push qword ptr [rax + 0x7b] ; cld ; inc dword ptr [rax] ; jnp 0x193bd1 ; call qword ptr [rax + 0x20fffc7a]
0x000000000019710d : jnp 0x19711e ; add byte ptr [rax + rbp*2], ah ; idiv bh ; movsb byte ptr [rdi], byte ptr [rsi] ; jnp 0x197126 ; add byte ptr [rbp + rbp*2 - 0xa], dh ; call rsp
0x00000000001a145d : jnp 0x1a1465 ; add byte ptr [rax], dl ; jge 0x1a1456 ; call rsi
0x0000000000036c0d : jnp 0x36bb9 ; cmp byte ptr [rax], al ; mov eax, edx ; ret
0x000000000007a60b : jnp 0x7a68a ; syscall ; cmp rax, -0x1000 ; ja 0x7a62d ; pop rbx ; ret
0x00000000000ac4f1 : jnp 0xac504 ; add byte ptr [rax], al ; test al, 0xf0 ; jne 0xac670 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac604 : jnp 0xac597 ; in al, 0x75 ; test al, 0xf0 ; jne 0xac66d ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000c7d51 : jnp 0xc7d4d ; dec dword ptr [rax - 0x77] ; ret
0x00000000000cea29 : jnp 0xcea87 ; add byte ptr [rax], al ; je 0xcea80 ; mov eax, 0x20 ; ret
0x00000000000d8331 : jnp 0xd83a3 ; add byte ptr [rdi], cl ; test dword ptr [rsi + 4], esi ; add byte ptr [rax], al ; mov dword ptr [rbx + 0x2c], eax ; jmp 0xd830f
0x00000000000ffbb1 : jnp 0xffb9b ; clc ; dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000001094a4 : jns 0x1094dd ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001094d4 : jns 0x10950d ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109507 : jns 0x109540 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109537 : jns 0x109570 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109536 : jns 0x109571 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109564 : jns 0x10959d ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000010fd0 : jns 0x10fda ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x51
0x0000000000116823 : jns 0x116833 ; sub al, byte ptr [rax] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; jmp rax
0x000000000012a1bb : jns 0x12a238 ; sub dword ptr [rax], eax ; and dword ptr [rax + 0x40], 0xfffffff9 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014d987 : jns 0x14d9f8 ; rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d9d8 : jns 0x14da49 ; rcr dword ptr [rdx], 0xf ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014dad7 : jns 0x14db48 ; rcr dword ptr [rdx], 0xf ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014dc76 : jns 0x14dce7 ; rcr dword ptr [rdx], 0xf ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014e068 : jns 0x14e0d9 ; rcr dword ptr [rdx], 0xf ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014e167 : jns 0x14e1d8 ; rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014e1b8 : jns 0x14e229 ; rcr dword ptr [rdx], 0xf ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014e2b7 : jns 0x14e328 ; rcr dword ptr [rdx], 0xf ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014e998 : jns 0x14ea09 ; rcr dword ptr [rdx], 0xf ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014ea97 : jns 0x14eb08 ; rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000153fb3 : jns 0x153fb7 ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156d73 : jns 0x156d4b ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001808bd : jns 0x1808ad ; call qword ptr [rax]
0x00000000001808b9 : jns 0x1808ad ; push qword ptr [rax] ; jns 0x1808b1 ; call qword ptr [rax]
0x000000000018735d : jns 0x187359 ; call qword ptr [rax - 0x1f000b87]
0x0000000000187361 : jns 0x187359 ; jmp rax
0x0000000000187369 : jns 0x187361 ; jmp rax
0x0000000000187365 : jns 0x187361 ; push rax ; jns 0x187365 ; jmp rax
0x000000000018736d : jns 0x187365 ; jmp rax
0x0000000000187379 : jns 0x187371 ; jmp rax
0x000000000018737d : jns 0x187381 ; inc dword ptr [rax + 0x7a] ; hlt ; inc eax ; jns 0x187389 ; inc eax ; jns 0x18738d ; jmp rax
0x0000000000187385 : jns 0x187381 ; inc eax ; jns 0x187385 ; jmp rax
0x0000000000187389 : jns 0x187381 ; jmp rax
0x00000000001932dd : jns 0x1932dc ; call qword ptr [rax]
0x0000000000193bd5 : jns 0x193bd5 ; call rax
0x0000000000193bd1 : jns 0x193bd5 ; inc dword ptr [rax + 0x79] ; cld ; call rax
0x0000000000193bd4 : jns 0x193bd6 ; call rax
0x000000000002cb53 : jns 0x2cba8 ; cmp dword ptr [rax], eax ; mov rax, qword ptr fs:[rax] ; mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x0000000000034f50 : jns 0x37532 ; add byte ptr [rax - 0x3f91f09a], al ; ret
0x000000000004aac5 : jns 0x4aa99 ; or byte ptr [r8], r8b ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x0000000000059f43 : jns 0x59f84 ; add byte ptr ss:[rax - 0x77], cl ; ret 0x2948
0x00000000000c24ed : jns 0xc24df ; or dword ptr [rax - 0x7d], ecx ; ret
0x00000000000ce381 : jns 0xce391 ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xce39e ; ret
0x00000000000ce9fb : jns 0xce9c7 ; adc byte ptr [rax], ah ; cmc ; mov eax, 0x100 ; cmp rdx, rcx ; jne 0xcea40 ; ret
0x00000000000ff204 : jns 0xff212 ; mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x000000000010518c : jo 0x10519c ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000001051ac : jo 0x1051bd ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000109d94 : jo 0x109dd0 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 2] ; mov rax, -1 ; ret
0x0000000000109e44 : jo 0x109e80 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 2] ; mov rax, -1 ; ret
0x0000000000130ac8 : jo 0x130af8 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000137887 : jo 0x1378df ; mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x1378a5 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000137886 : jo 0x1378e0 ; mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x1378a6 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000137f73 : jo 0x137fca ; mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x137f8f ; mov rdi, r12 ; call rax
0x0000000000137f72 : jo 0x137fcb ; mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x137f90 ; mov rdi, r12 ; call rax
0x000000000013dbef : jo 0x13dc2d ; ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000018603c : jo 0x186051 ; jmp qword ptr [rax - 0x2f000df4]
0x00000000001862a4 : jo 0x1862d6 ; call qword ptr [rax - 0x4f000ddb]
0x00000000001864d4 : jo 0x186529 ; dec dword ptr [rax - 0x3f000db8] ; jmp rax
0x0000000000187e48 : jo 0x187e23 ; cmc ; push qword ptr [rax - 0x32] ; cmc ; inc dword ptr [rbx - 0x20] ; cmc ; call rsp
0x000000000018a078 : jo 0x18a029 ; cli ; call qword ptr [rax]
0x0000000000193268 : jo 0x1932c5 ; sti ; call qword ptr [rax - 0x2f0004b8]
0x0000000000193354 : jo 0x19330e ; sti ; inc eax ; mov dl, 0xfb ; call qword ptr [rax]
0x00000000001932bc : jo 0x19332d ; sti ; call qword ptr [rax]
0x00000000001932dc : jo 0x19335a ; sti ; call qword ptr [rax]
0x00000000001934d4 : jo 0x193475 ; std ; inc dword ptr [rax] ; xchg eax, ebp ; std ; call qword ptr [rax + 0x20fffd95]
0x00000000001937c8 : jo 0x1937dc ; cld ; inc eax ; or al, 0xfc ; call qword ptr [rax]
0x0000000000193890 : jo 0x1938db ; cld ; push qword ptr [rax] ; cld ; call qword ptr [rax]
0x00000000001938f4 : jo 0x193940 ; cld ; inc dword ptr [rax + 0x45] ; cld ; jmp qword ptr [rax]
0x0000000000193910 : jo 0x193956 ; cld ; jmp qword ptr [rax]
0x0000000000193940 : jo 0x193979 ; cld ; inc eax ; xor esp, edi ; call qword ptr [rax]
0x0000000000193994 : jo 0x1939d4 ; cld ; inc eax ; cmp ah, bh ; call qword ptr [rax]
0x0000000000193bc0 : jo 0x193c48 ; cld ; inc dword ptr [rax] ; jnp 0x193bce ; call qword ptr [rax + 0x20fffc7a]
0x0000000000193c20 : jo 0x193c93 ; cld ; jmp rax
0x0000000000193c18 : jo 0x193c94 ; cld ; push rax ; outsb dx, byte ptr [rsi] ; cld ; push qword ptr [rax + 0x6e] ; cld ; jmp rax
0x0000000000193dcd : jo 0x193dcd ; call qword ptr [rax]
0x0000000000193dd1 : jo 0x193dd5 ; call qword ptr [rax + 0x10fffc6f]
0x0000000000193ee0 : jo 0x193e8b ; cld ; inc dword ptr [rax] ; sahf ; cld ; call qword ptr [rax + 0x20fffc9d]
0x0000000000193e24 : jo 0x193e96 ; cld ; jmp rax
0x00000000001940b0 : jo 0x194051 ; cld ; jmp rax
0x0000000000194128 : jo 0x1940c0 ; cld ; jmp rax
0x000000000019432c : jo 0x1942c3 ; cld ; call rax
0x000000000019f6b0 : jo 0x19f6c7 ; in eax, dx ; call qword ptr [rax]
0x00000000001a25c2 : jo 0x1a25d3 ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rsp ; add byte ptr [rax], al ; add byte ptr [rsp + rcx*4], dh ; add al, dl ; ret 0xffed
0x00000000001a49c0 : jo 0x1a4968 ; cli ; call qword ptr [rax]
0x00000000001ac330 : jo 0x1ac343 ; cmc ; jmp qword ptr [rax]
0x00000000000204a2 : jo 0x204b8 ; add byte ptr [rax], al ; mov rax, qword ptr [r13 + 0x18] ; test rax, rax ; je 0x204c4 ; mov rdi, rbp ; call rax
0x000000000002918b : jo 0x291a3 ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000002e023 : jo 0x2e074 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e022 : jo 0x2e075 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000313bc : jo 0x3138e ; add eax, 0xc7834900 ; or byte ptr [rax + 1], cl ; ret
0x00000000000453a6 : jo 0x453b1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000046763 : jo 0x466f8 ; push rsi ; dec dword ptr [rax + 1] ; ret 0xf66
0x00000000000730ea : jo 0x73102 ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000007457a : jo 0x745c8 ; lea rdx, qword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000007737a : jo 0x77307 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000077379 : jo 0x77308 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000079adc : jo 0x79abe ; or dword ptr [rax], eax ; add rsp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x0000000000079f53 : jo 0x79f1e ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0x79f79 ; ret
0x000000000007aff3 : jo 0x7b034 ; ror byte ptr [rdi], 5 ; cmp rax, -0x1000 ; ja 0x7b010 ; ret
0x00000000000b32ed : jo 0xb327d ; ror dword ptr [rax - 0x77], 1 ; ret 0xd348
0x00000000000b3411 : jo 0xb3446 ; ror dword ptr [rax - 0x2d], 1 ; out 0x89, al ; ror dword ptr [rax - 0x77], 1 ; ret 0xd348
0x00000000000c59f4 : jo 0xc5a18 ; or al, 0 ; mov edx, ecx ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000ce441 : jo 0xce451 ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xce45e ; ret
0x00000000000f7286 : jo 0xf72de ; mov eax, dword ptr [rdi + 0x80] ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000f7e03 : jo 0xf7e5b ; mov eax, dword ptr [rdi + 0x100] ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x0000000000108e41 : jp 0x108e51 ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x108e5e ; ret
0x0000000000109393 : jp 0x1093cc ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001093b4 : jp 0x1093ed ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001093e7 : jp 0x109420 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109414 : jp 0x10944d ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109444 : jp 0x10947d ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109474 : jp 0x1094ad ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000114eb5 : jp 0x114f0c ; mov rsi, rdx ; call rax
0x00000000001167b2 : jp 0x1167bd ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x1167ca ; xor eax, eax ; ret
0x0000000000116ab2 : jp 0x116aba ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x116aca ; xor eax, eax ; ret
0x0000000000119424 : jp 0x11945f ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 2] ; mov rax, -1 ; ret
0x0000000000187375 : jp 0x18736d ; jmp rax
0x0000000000187381 : jp 0x187381 ; inc eax ; jns 0x187385 ; inc eax ; jns 0x187389 ; jmp rax
0x0000000000187380 : jp 0x187382 ; inc eax ; jns 0x187386 ; inc eax ; jns 0x18738a ; jmp rax
0x00000000001939cd : jp 0x1939cd ; call qword ptr [rax]
0x0000000000193bc9 : jp 0x193bc9 ; jmp qword ptr [rax]
0x0000000000193bcd : jp 0x193bd5 ; push qword ptr [rax + 0x40fffc79] ; jns 0x193bdd ; call rax
0x00000000001a137d : jp 0x1a1385 ; add byte ptr [rax], ah ; jp 0x1a1376 ; jmp qword ptr [rbx]
0x000000000002cb18 : jp 0x2cb5b ; jae 0x2cb38 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000088797 : jp 0x887a9 ; add byte ptr [rax], al ; add rsp, 0x10 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000106059 : jrcxz 0x1060d2 ; cli ; dec dword ptr [rax + 0x39] ; ret
0x0000000000117561 : jrcxz 0x117572 ; add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0x117599 ; ret
0x000000000011fd2a : jrcxz 0x11fd37 ; and byte ptr [rdi], cl ; test ch, bl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x2e66
0x0000000000137053 : jrcxz 0x137065 ; dec dword ptr [rax - 0x73] ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000014d986 : jrcxz 0x14da0e ; movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d9d7 : jrcxz 0x14da5f ; movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014dad6 : jrcxz 0x14db5e ; movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014dc75 : jrcxz 0x14dcfd ; movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014dec6 : jrcxz 0x14df4e ; movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000014e067 : jrcxz 0x14e0ef ; movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014e166 : jrcxz 0x14e1ee ; movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014e1b7 : jrcxz 0x14e23f ; movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014e2b6 : jrcxz 0x14e33e ; movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014e6a6 : jrcxz 0x14e72e ; movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000014e997 : jrcxz 0x14ea1f ; movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014ea96 : jrcxz 0x14eb1e ; movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001b7cad : jrcxz 0x1b7cb6 ; add byte ptr [rax], ah ; push rcx ; clc ; call rdi
0x000000000004f533 : jrcxz 0x4f570 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000005e4b6 : jrcxz 0x5e4bc ; dec dword ptr [rax - 0x39] ; ret
0x00000000000aaa52 : jrcxz 0xaaa62 ; sldt word ptr [rax] ; lea rax, qword ptr [rbx + 1] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000cf10a : jrcxz 0xcf10f ; dec dword ptr [rax - 0x77] ; ret 0x6b8
0x00000000000fe931 : jrcxz 0xfe9c1 ; sub al, 0 ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000100772 : js 0x100785 ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000109594 : js 0x1095cd ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001095c7 : js 0x109600 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001095f7 : js 0x109630 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109627 : js 0x109660 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109626 : js 0x109661 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000116662 : js 0x11667b ; je 0x116687 ; add rax, 0x48 ; cmp rax, rdx ; jb 0x11666f ; xor eax, eax ; ret
0x0000000000129861 : js 0x129893 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000136a68 : js 0x136ac3 ; mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x136999 ; mov rdi, rbx ; call rax
0x000000000014391c : js 0x14395b ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x0000000000143d73 : js 0x143dac ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000143dd3 : js 0x143e0c ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000144113 : js 0x144126 ; add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000185dec : js 0x185da3 ; int1 ; dec dword ptr [rax - 0x67000e56] ; stosb byte ptr [rdi], al ; int1 ; jmp qword ptr [rax]
0x00000000001939e1 : js 0x1939e1 ; jmp rax
0x000000000002b02b : js 0x2b076 ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x000000000002b053 : js 0x2b09e ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x000000000002e033 : js 0x2e084 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e032 : js 0x2e085 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000002fa9 : js 0x2f5f ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000003a303 : js 0x3a31e ; mov qword ptr [rax], 2 ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003a4e4 : js 0x3a4fd ; mov qword ptr [rax], 4 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a538 : js 0x3a551 ; mov qword ptr [rax], 4 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003b2a4 : js 0x3b2b4 ; add byte ptr [rax], al ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x0000000000050bb0 : js 0x50ba7 ; stosb byte ptr [rdi], al ; mov edx, 0x2ebf000b ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000a6095 : js 0x66cd6321 ; nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000a9175 : js 0x66cd9401 ; nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000a9c45 : js 0x66cd9ed1 ; nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000007510d : js 0x7511c ; add byte ptr [rax], al ; mov rdx, r15 ; mov rdi, r12 ; call 0x913bc
0x00000000000790fe : js 0x79141 ; cmp qword ptr [rdi + 0x10], rax ; jb 0x79141 ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000794ce : js 0x794cf ; cmp qword ptr [rdi + 0x10], rax ; jb 0x794cf ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000795d4 : js 0x7961a ; add byte ptr [rdi + rax*8], ah ; sbb al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000798c0 : js 0x798fb ; add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x38 ; ret
0x0000000000079f08 : js 0x79f4f ; mov qword ptr [rbx + 0x90], rax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000baa2c : js 0xbaa40 ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bbae1 : js 0xbbb23 ; cmp eax, 0x19 ; jg 0xbbb0b ; mov rax, rbx ; pop rbx ; ret
0x00000000000c9551 : js 0xc9567 ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ce4a1 : js 0xce4b1 ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xce4be ; ret
0x00000000000f11b4 : js 0xf11c5 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f71b0 : js 0xf71ce ; test rax, rax ; js 0xf71d6 ; cmp rax, rbx ; setg al ; pop rbx ; ret
0x00000000000f71b5 : js 0xf71d1 ; cmp rax, rbx ; setg al ; pop rbx ; ret
0x00000000000fd45d : js 0xfd474 ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fe53b : js 0xfe50d ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fe5fc : js 0xfe633 ; sub al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000005a8d4 : lahf ; adc al, byte ptr [rax] ; movsxd rax, dword ptr [rax + rcx*4] ; lea rcx, qword ptr [rip - 0x2e2] ; add rax, rcx ; jmp rax
0x000000000005aa8e : lahf ; adc al, byte ptr [rax] ; movsxd rax, dword ptr [rax + rcx*4] ; lea rcx, qword ptr [rip - 0x49c] ; add rax, rcx ; jmp rax
0x000000000003b9fd : lahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000024dad : lahf ; add dword ptr [rax], eax ; add al, ch ; cli ; lea eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0xbbe9
0x00000000000270de : lahf ; add dword ptr [rax], eax ; add al, ch ; leave ; push 0 ; add byte ptr [rcx - 0x77], al ; ret 0x7be9
0x00000000000fce62 : lahf ; add dword ptr [rax], eax ; mov eax, dword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000159a27 : lahf ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000193ed9 : lahf ; cld ; jmp rax
0x0000000000196981 : lahf ; dec esp ; add qword ptr [rax], rax ; add al, 0xa0 ; jmp rsp
0x000000000012221b : lahf ; mov dh, 6 ; add al, ch ; sbb al, 0x9b ; add byte ptr [rax], al ; test rax, rax ; je 0x12223f ; mov rdi, rbx ; call rax
0x000000000014e40d : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000131c7d : lahf ; rol dword ptr [rax], 0 ; test eax, eax ; jne 0x131ca0 ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000f6eb3 : lahf ; sub al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000011b1ff : lahf ; sub al, byte ptr [rax] ; mov eax, 0xca ; add rsp, 0x28 ; ret
0x000000000011b1a4 : lahf ; sub al, byte ptr [rax] ; nop word ptr [rax + rax] ; mov eax, 0xca ; ret
0x000000000014ea9d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000019897d : lar eax, word ptr [rax] ; ret
0x000000000019898d : lar eax, word ptr [rax] ; test bl, al ; stc ; dec dword ptr [rax + rdx] ; add al, byte ptr [rax] ; xchg eax, esp ; ret
0x0000000000198975 : lar eax, word ptr [rax] ; xchg eax, esp ; sar cl, 0xff ; xchg eax, esp ; lar eax, word ptr [rax] ; ret
0x0000000000103507 : lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000001864cf : lcall ptr [rax + 0x48] ; push qword ptr [rax + 0x48] ; dec dword ptr [rax - 0x3f000db8] ; jmp rax
0x0000000000197fe3 : lcall ptr [rax + rcx*8 + 0x33b40001] ; clc ; jmp rsp
0x000000000018a073 : lcall ptr [rax - 0x54] ; cli ; push qword ptr [rax - 0x54] ; cli ; call qword ptr [rax]
0x000000000018a04b : lcall ptr [rax - 0x55] ; cli ; dec dword ptr [rax - 0x77000554] ; lodsb al, byte ptr [rsi] ; cli ; jmp rax
0x00000000001937ef : lcall ptr [rax] ; cld ; jmp rax
0x0000000000185e87 : lcall ptr [rax] ; ret 0xfffc
0x0000000000186f03 : lcall ptr [rbp - 0x1f] ; ljmp ptr [rax + 0x7dfff3db] ; fcomi st(3) ; call rax
0x00000000000ca2cb : lcall ptr [rcx + 0x2404f741] ; add byte ptr [rax - 0x7af10000], al ; ret
0x0000000000197e33 : lcall ptr [rcx + rax*8 + 0x22640001] ; clc ; dec esp ; rol dword ptr [rcx], 0 ; movsb byte ptr [rdi], byte ptr [rsi] ; and bh, al ; jmp rsp
0x0000000000196b7b : lcall ptr [rcx + rbx*2] ; add dword ptr [rax], eax ; adc al, 0x8c ; hlt ; inc dword ptr [rcx + rbx*2 - 0x6fbbffff] ; hlt ; call rsp
0x000000000019448b : lcall ptr [rdi + rdx*2] ; add byte ptr [rax], al ; push rsp ; ret
0x0000000000041b9f : lcall ptr [rdi] ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000100748 : lcall ptr [rdi] ; and edi, 0xfffffff0 ; add edi, 0x26 ; mov dword ptr fs:[rax], edi ; mov eax, 0xffffffff ; ret
0x00000000001870b7 : lcall ptr [rdi] ; out dx, al ; call qword ptr [rax]
0x00000000000d27f3 : lcall ptr [rdx - 0xb17fff5] ; jno 0xd2801 ; push qword ptr [rcx] ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x00000000001939af : lcall ptr [rsi + 0x20fffc76] ; jge 0x1939c3 ; push qword ptr [rax + 0x40fffc7c] ; jl 0x1939cb ; call rax
0x0000000000103474 : lcall ptr [rsi + 0x5f] ; je 0x103498 ; pop rbx ; lea rax, qword ptr [rip + 0x2c0ddf] ; pop rbp ; pop r12 ; ret
0x00000000001995ab : lcall ptr [rsi + rax + 2] ; add byte ptr [rbp + rsi - 5], dh ; jmp rsp
0x000000000019867b : lcall ptr [rsp + rsi*8] ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; xor al, 0xf9 ; push qword ptr [rsp + rsi*8 + 1] ; add byte ptr [rsi + rsi], ah ; stc ; call rsp
0x000000000010c6c5 : lds r8d, ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fb20a : lea eax, dword ptr [rax + rax*4 + 3] ; add rsp, 0x98 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004acc4 : lea eax, dword ptr [rax + rbx] ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000090df4 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x0000000000090e04 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x00000000000a0c54 : lea eax, dword ptr [rax + rdi + 0x30] ; ret
0x0000000000090dd4 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x00000000000c8012 : lea eax, dword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000074400 : lea eax, dword ptr [rax - 1] ; ret
0x0000000000008588 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000fe3a1 : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfe3be ; ret
0x0000000000024db3 : lea eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0xbbe9
0x00000000000487e9 : lea eax, dword ptr [rax] ; mov rax, qword ptr [rsi + rbx*8] ; lea r9, qword ptr [rdx] ; jmp 0x4884d
0x000000000004a3f9 : lea eax, dword ptr [rax] ; mov rax, qword ptr [rsi + rbx*8] ; lea r9, qword ptr [rdx] ; jmp 0x4a45d
0x0000000000048491 : lea eax, dword ptr [rbx + rdx] ; je 0x484ae ; mov rdx, qword ptr [r8 + rax*8] ; mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; pop rbx ; ret
0x000000000007253a : lea eax, dword ptr [rcx + 4] ; mov qword ptr [rdx + 0x20], rax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x000000000012660d : lea eax, dword ptr [rcx + rax + 2] ; pop rbx ; ret
0x0000000000090e29 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x0000000000090e39 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x0000000000090d23 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x0000000000125dc1 : lea eax, dword ptr [rdi + rax + 2] ; cmp rdx, rax ; sbb eax, eax ; ret
0x000000000008be0c : lea eax, dword ptr [rdi + rax] ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x0000000000098007 : lea eax, dword ptr [rdi + rax] ; ret
0x000000000014d3aa : lea eax, dword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x000000000002d9d5 : lea eax, dword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x0000000000114610 : lea eax, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000016a627 : lea eax, dword ptr [rdx + 0xe] ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000000a5c41 : lea eax, dword ptr [rdx + 0xe] ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000016a6d2 : lea eax, dword ptr [rdx + 7] ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000000a5a06 : lea eax, dword ptr [rdx + 7] ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000010bdf3 : lea eax, dword ptr [rdx + rax*4] ; mov eax, dword ptr [rax + rcx] ; mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000003ae6b : lea eax, dword ptr [rdx + rax*4] ; mov qword ptr [rsi + 0x10], r10 ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x000000000003d177 : lea eax, dword ptr [rdx + rdx*4] ; mov rdx, r14 ; xor r14d, r14d ; add rax, rax ; sub rdx, rax ; jmp 0x3d1ca
0x00000000000403c2 : lea eax, dword ptr [rdx + rdx*4] ; mov rdx, rbp ; xor ebp, ebp ; add rax, rax ; sub rdx, rax ; jmp 0x40413
0x00000000000d14c4 : lea eax, dword ptr [rdx - 1] ; je 0xd141f ; add rbx, 1 ; mov rdx, rax ; jmp 0xd147f
0x000000000002cb11 : lea eax, dword ptr [rip + 0x15df0e] ; cmp edi, dword ptr [rdx + 0x38] ; jae 0x2cb3f ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000000908f6 : lea eax, dword ptr [rip + 0x19ab4] ; cmove rax, rdx ; ret
0x000000000008fb1d : lea eax, dword ptr [rip + 0x333d7d] ; mov qword ptr [rip + 0x333d5e], rax ; add rsp, 8 ; ret
0x000000000008fadb : lea eax, dword ptr [rip + 0x333dbf] ; mov qword ptr [rip + 0x333da0], rax ; ret
0x0000000000045dc3 : lea eax, dword ptr [rip + 0x37d817] ; mov byte ptr [rax + rdx], 0 ; ret
0x000000000010a45c : lea eax, dword ptr [rip + 0x7e7be] ; movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000004e293 : lea eax, dword ptr [rip + 0x8e7] ; mov dword ptr [rbp - 0x4f0], 1 ; jmp rax
0x0000000000059c97 : lea eax, dword ptr [rip + 0x963] ; mov dword ptr [rbp - 0x1098], 1 ; jmp rax
0x00000000000c395e : lea eax, dword ptr [rip + 0xc3418] ; movzx edi, dl ; movsxd rax, dword ptr [r8 + rdi*4] ; add rax, r8 ; jmp rax
0x00000000000a0897 : lea eax, dword ptr [rip + 0xe555f] ; mov r9d, r9d ; movsxd r9, dword ptr [rax + r9*4] ; add r9, rax ; jmp r9
0x00000000000f8096 : lea eax, dword ptr [rip - 0x4c] ; cmove rax, rdx ; ret
0x00000000001396c8 : lea eax, dword ptr [rip - 0x6a5e] ; mov esi, 9 ; mov rdi, rax ; call qword ptr [r10]
0x00000000001395d0 : lea eax, dword ptr [rip - 0x6c16] ; mov rdi, rax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x000000000010c651 : lea eax, dword ptr [rsi + rax*4] ; mov eax, dword ptr [rax + rdx] ; shr eax, cl ; and eax, 1 ; ret
0x000000000003763b : lea ebx, dword ptr [rax + rsi] ; nop ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000098686 : lea ebx, dword ptr [rbx - 1] ; cmp rax, 1 ; ja 0x98676 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000acae0 : lea ebx, dword ptr [rdi + 0xc] ; test eax, eax ; mov dword ptr [rdi + 8], eax ; je 0xacaa5 ; mov rax, rbx ; pop rbx ; ret
0x00000000000acc62 : lea ecx, dword ptr [rax + 1] ; call rbx
0x00000000000acd94 : lea ecx, dword ptr [rax + 4] ; call rbx
0x00000000000ad19d : lea ecx, dword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000073406 : lea ecx, dword ptr [rax + 4] ; mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000bf1ef : lea ecx, dword ptr [rax + rcx] ; mov rdx, rax ; jmp 0xbf200
0x000000000006d765 : lea ecx, dword ptr [rbx + 0x40] ; lea rdx, qword ptr [rbx + 0x34] ; mov esi, 1 ; mov rdi, rbx ; call rax
0x00000000000ac8dc : lea ecx, dword ptr [rdi + 8] ; je 0xac8ff ; cmp esi, dword ptr [rdi + 8] ; cmove rax, rcx ; ret
0x00000000001276d1 : lea ecx, dword ptr [rdi + rdi*8 - 1] ; push qword ptr [rax + rsi - 0x7d] ; mov ebp, 0xffffff4c ; inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x3945
0x000000000004b511 : lea ecx, dword ptr [rdi + rdx] ; add rdx, r13 ; call qword ptr [r10 + rax*8]
0x0000000000169ef7 : lea ecx, dword ptr [rdx + 0x10] ; jne 0x16a510 ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016a255 : lea ecx, dword ptr [rdx + 0xa] ; jne 0x16a510 ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016a285 : lea ecx, dword ptr [rdx + 0xb] ; jne 0x16a510 ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016a2b5 : lea ecx, dword ptr [rdx + 0xc] ; jne 0x16a510 ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016a2e7 : lea ecx, dword ptr [rdx + 0xd] ; jne 0x16a510 ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016a317 : lea ecx, dword ptr [rdx + 0xe] ; jne 0x16a510 ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016a347 : lea ecx, dword ptr [rdx + 0xf] ; jne 0x16a510 ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016a0fc : lea ecx, dword ptr [rdx + 1] ; jne 0x16a510 ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000072852 : lea ecx, dword ptr [rdx + 1] ; mov qword ptr [rax + 0x28], rcx ; mov byte ptr [rdx], dil ; movzx eax, dil ; ret
0x000000000016a11f : lea ecx, dword ptr [rdx + 2] ; jne 0x16a510 ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016a145 : lea ecx, dword ptr [rdx + 3] ; jne 0x16a510 ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016a16d : lea ecx, dword ptr [rdx + 4] ; jne 0x16a510 ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000071833 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax + 0x20], rcx ; mov dword ptr [rdx], ebx ; add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000719b6 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x000000000016a193 : lea ecx, dword ptr [rdx + 5] ; jne 0x16a510 ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016a1c5 : lea ecx, dword ptr [rdx + 6] ; jne 0x16a510 ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016a1f3 : lea ecx, dword ptr [rdx + 7] ; jne 0x16a510 ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000169e8f : lea ecx, dword ptr [rdx + 8] ; jne 0x16a510 ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016a225 : lea ecx, dword ptr [rdx + 9] ; jne 0x16a510 ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000006d370 : lea ecx, dword ptr [rip + 0x118522] ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x00000000000647cf : lea ecx, dword ptr [rip + 0x12083f] ; movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x00000000000646af : lea ecx, dword ptr [rip + 0x1208af] ; movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x000000000006484d : lea ecx, dword ptr [rip + 0x120911] ; movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x000000000006415a : lea ecx, dword ptr [rip + 0x120d48] ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000005cdf5 : lea ecx, dword ptr [rip + 0x127f5d] ; movzx ebx, bl ; movsxd rax, dword ptr [rcx + rbx*4] ; add rax, rcx ; jmp rax
0x000000000005cc6d : lea ecx, dword ptr [rip + 0x128035] ; movzx ebx, bl ; movsxd rax, dword ptr [rcx + rbx*4] ; add rax, rcx ; jmp rax
0x000000000005c7ff : lea ecx, dword ptr [rip + 0x128297] ; movzx eax, al ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000015066e : lea ecx, dword ptr [rip + 0x242ec] ; mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000014ef8d : lea ecx, dword ptr [rip + 0x259cd] ; mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000014ecc9 : lea ecx, dword ptr [rip + 0x25c91] ; mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000014d8b4 : lea ecx, dword ptr [rip + 0x270a6] ; mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000014d2be : lea ecx, dword ptr [rip + 0x2769c] ; mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000014b62d : lea ecx, dword ptr [rip + 0x2932d] ; mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000014b2f9 : lea ecx, dword ptr [rip + 0x29661] ; mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000149a24 : lea ecx, dword ptr [rip + 0x2af36] ; mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000004e8c8 : lea ecx, dword ptr [rip + 0x2b2] ; add rax, rcx ; jmp rax
0x000000000013815e : lea ecx, dword ptr [rip + 0x52340] ; mov esi, esi ; movsxd rax, dword ptr [rcx + rsi*4] ; add rax, rcx ; jmp rax
0x00000000001378ce : lea ecx, dword ptr [rip + 0x52b90] ; mov esi, esi ; movsxd rax, dword ptr [rcx + rsi*4] ; add rax, rcx ; jmp rax
0x000000000004bb18 : lea ecx, dword ptr [rip + 0xb87] ; add rax, rcx ; jmp rax
0x00000000000c38f9 : lea ecx, dword ptr [rip + 0xc3291] ; movzx edx, sil ; movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x000000000005a8dc : lea ecx, dword ptr [rip - 0x2e2] ; add rax, rcx ; jmp rax
0x000000000004eeda : lea ecx, dword ptr [rip - 0x360] ; add rax, rcx ; jmp rax
0x000000000005aa96 : lea ecx, dword ptr [rip - 0x49c] ; add rax, rcx ; jmp rax
0x000000000004f04e : lea ecx, dword ptr [rip - 0x4d4] ; add rax, rcx ; jmp rax
0x000000000005ab8e : lea ecx, dword ptr [rip - 0x594] ; add rax, rcx ; jmp rax
0x000000000012f19b : lea ecx, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012eef9 : lea ecx, dword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000acd8f : lea ecx, dword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000acc5d : lea ecx, dword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000013a972 : lea ecx, dword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000012f63b : lea ecx, dword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00000000000bb41f : lea ecx, dword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x000000000013a733 : lea ecx, dword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x000000000007bd3f : lea edi, dword ptr [rax + 5] ; mov esi, 0x2c ; mov rdi, r15 ; call 0x97fcd
0x00000000000dff26 : lea edi, dword ptr [rax + rsi*4] ; shl rdx, 2 ; xor esi, esi ; call 0x9181d
0x00000000001356be : lea edi, dword ptr [rbp + 0x10] ; call rax
0x00000000001382f2 : lea edi, dword ptr [rbx + 0x58] ; call rax
0x0000000000137892 : lea edi, dword ptr [rbx + 0x68] ; call rax
0x0000000000134af5 : lea edi, dword ptr [rbx + 0xc8] ; call rax
0x000000000003927c : lea edi, dword ptr [rbx + rsi] ; call rax
0x0000000000029bac : lea edi, dword ptr [rcx] ; add byte ptr [rax + 1], cl ; ret
0x00000000000fe787 : lea edi, dword ptr [rdi + 0x2c] ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x0000000000122ee1 : lea edi, dword ptr [rip + 0x2a2815] ; call rax
0x0000000000122632 : lea edi, dword ptr [rip + 0x2a3068] ; call rax
0x0000000000134b3e : lea edi, dword ptr [rip + 0x554fc] ; mov esi, esi ; movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x00000000000c5a62 : lea edi, dword ptr [rip + 0xc16ec] ; mov esi, edx ; movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x00000000001177d7 : lea edi, dword ptr [rip - 0x16d] ; call rax
0x000000000007ee6b : lea edx, dword ptr [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000007d65a : lea edx, dword ptr [rax + 1] ; mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000005c38a : lea edx, dword ptr [rax + 1] ; mov qword ptr [rbx], rdx ; mov byte ptr [rax], bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000106117 : lea edx, dword ptr [rax + 1] ; mov qword ptr [rdi + 0x28], rdx ; mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007994b : lea edx, dword ptr [rax + 1] ; mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000009920f : lea edx, dword ptr [rax + 1] ; test rax, rax ; mov rax, rbx ; pop rbx ; cmovne rax, rdx ; ret
0x0000000000063e4e : lea edx, dword ptr [rax + 4] ; mov qword ptr [rbx], rdx ; mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005c0d2 : lea edx, dword ptr [rax + 8] ; mov qword ptr [r12 + 8], rdx ; jmp 0x5c0a7
0x000000000010b461 : lea edx, dword ptr [rax + rdi*4] ; mov eax, dword ptr [rdx] ; cmp eax, 0xff ; je 0x10b47f ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x0000000000036bf9 : lea edx, dword ptr [rax - 1] ; mov dword ptr [rip + 0x38a486], edx ; ret
0x000000000006d769 : lea edx, dword ptr [rbx + 0x34] ; mov esi, 1 ; mov rdi, rbx ; call rax
0x00000000000c800e : lea edx, dword ptr [rdi + rdi*8] ; lea rax, qword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012684a : lea edx, dword ptr [rdx + rax + 2] ; cmp esi, edx ; ja 0x126841 ; mov eax, 0xffffffff ; ret
0x000000000007457d : lea edx, dword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000000dff22 : lea edx, dword ptr [rdx + rdx*4] ; lea rdi, qword ptr [rax + rsi*4] ; shl rdx, 2 ; xor esi, esi ; call 0x91821
0x000000000006cc1e : lea edx, dword ptr [rip + 0x11869c] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000162897 : lea edx, dword ptr [rip + 0x120c3] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000162872 : lea edx, dword ptr [rip + 0x120e8] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000160337 : lea edx, dword ptr [rip + 0x14623] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000016031d : lea edx, dword ptr [rip + 0x1463d] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000002ed1f : lea edx, dword ptr [rip + 0x15135f] ; movsxd rax, dword ptr [rdx + rcx*4] ; add rax, rdx ; jmp rax
0x000000000002ec32 : lea edx, dword ptr [rip + 0x151420] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000002e87f : lea edx, dword ptr [rip + 0x15177b] ; movsxd rax, dword ptr [rdx + rcx*4] ; add rax, rdx ; jmp rax
0x0000000000020c34 : lea edx, dword ptr [rip + 0x152906] ; mov eax, eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000001506c7 : lea edx, dword ptr [rip + 0x24293] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000001506a2 : lea edx, dword ptr [rip + 0x242b8] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014ed17 : lea edx, dword ptr [rip + 0x25c43] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014ecfd : lea edx, dword ptr [rip + 0x25c5d] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014d317 : lea edx, dword ptr [rip + 0x27643] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014d2f2 : lea edx, dword ptr [rip + 0x27668] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000013abaa : lea edx, dword ptr [rip + 0x28b3f0] ; cmp rax, rdx ; je 0x13abcf ; add rsp, 8 ; ret
0x000000000013aae8 : lea edx, dword ptr [rip + 0x28b4b2] ; mov qword ptr fs:[rax], rdx ; ret
0x0000000000130461 : lea edx, dword ptr [rip + 0x290719] ; jmp qword ptr [rdx + rax*8]
0x000000000014b347 : lea edx, dword ptr [rip + 0x29613] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014b32d : lea edx, dword ptr [rip + 0x2962d] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000000c04a3 : lea edx, dword ptr [rip + 0x303697] ; jne 0xc04c7 ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000139c51 : lea edx, dword ptr [rip + 0x3609] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000001372ee : lea edx, dword ptr [rip + 0x52d8c] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000121a9f : lea edx, dword ptr [rip + 0x6727b] ; mov eax, dword ptr [rdx + rax*8 + 4] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f4d0e : lea edx, dword ptr [rip + 0x93c14] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000f4bc7 : lea edx, dword ptr [rip + 0x93c9b] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000f3ad7 : lea edx, dword ptr [rip + 0x94c0b] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000f36c7 : lea edx, dword ptr [rip + 0x94f5b] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000e603c : lea edx, dword ptr [rip + 0xa1e52] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000e343d : lea edx, dword ptr [rip + 0xa49a9] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000da813 : lea edx, dword ptr [rip + 0xad477] ; movzx r15d, r15b ; movsxd rax, dword ptr [rdx + r15*4] ; add rax, rdx ; jmp rax
0x00000000000d501b : lea edx, dword ptr [rip + 0xb2993] ; movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000d4a5a : lea edx, dword ptr [rip + 0xb2ed4] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000d3074 : lea edx, dword ptr [rip + 0xb47ca] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000d2a8a : lea edx, dword ptr [rip + 0xb4d34] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000cf6c2 : lea edx, dword ptr [rip + 0xb80a8] ; mov esi, esi ; movsxd rax, dword ptr [rdx + rsi*4] ; add rax, rdx ; jmp rax
0x00000000000cefb5 : lea edx, dword ptr [rip + 0xb83d9] ; movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x00000000000cec43 : lea edx, dword ptr [rip + 0xb86f7] ; mov esi, esi ; movsxd rax, dword ptr [rdx + rsi*4] ; add rax, rdx ; jmp rax
0x00000000000c1919 : lea edx, dword ptr [rip + 0xc5195] ; movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000c1664 : lea edx, dword ptr [rip + 0xc5382] ; movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000965a7 : lea edx, dword ptr [rip + 0xde3b3] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000096582 : lea edx, dword ptr [rip + 0xde3d8] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000012f24d : lea edx, dword ptr [rip + 0xe00d] ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000093ea7 : lea edx, dword ptr [rip + 0xe0ab3] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000093e8d : lea edx, dword ptr [rip + 0xe0acd] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000000a0937 : lea edx, dword ptr [rip + 0xe54e3] ; mov r9d, r9d ; movsxd rax, dword ptr [r10 + r9*4] ; add rax, r10 ; jmp rax
0x00000000000a07e5 : lea edx, dword ptr [rip + 0xe55ed] ; movsxd rax, dword ptr [r10 + rax*4] ; add rax, r10 ; jmp rax
0x0000000000087b52 : lea edx, dword ptr [rip + 0xfe0e8] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000005779a : lea edx, dword ptr [rip - 0x2de] ; add rax, rdx ; jmp rax
0x00000000000bc7e8 : lea edx, dword ptr [rip - 0x8e] ; test rax, rax ; cmove rax, rdx ; add rsp, 0x28 ; ret
0x00000000000bc8c8 : lea edx, dword ptr [rip - 0xae] ; test rax, rax ; cmove rax, rdx ; add rsp, 0x28 ; ret
0x00000000000735d9 : lea edx, dword ptr [rsi + 4] ; mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013efdf : lea edx, dword ptr [rsi + 7] ; and esi, 7 ; movsxd rax, dword ptr [rcx + rsi*4] ; shr rdx, 3 ; add rax, rcx ; jmp rax
0x00000000000627e6 : lea esi, dword ptr [rax - 0x77000005] ; add cl, byte ptr [rax - 0x7d] ; ret
0x00000000001177d3 : lea esi, dword ptr [rbp - 0x20] ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x00000000000b73e1 : lea esi, dword ptr [rbx + rax*4] ; sub r10, rax ; jmp 0xb7407
0x000000000004862c : lea esi, dword ptr [rbx + rdx] ; je 0x48649 ; mov rax, qword ptr [rax + rsi*8] ; mov qword ptr [rcx + rsi*8], rax ; xor eax, eax ; pop rbx ; ret
0x000000000008aa44 : lea esi, dword ptr [rbx] ; add bh, al ; add eax, 0x338d9b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000012de80 : lea esi, dword ptr [rdi + 0x48] ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000048094 : lea esi, dword ptr [rdi] ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000006d27e : lea esi, dword ptr [rip + 0x118558] ; movzx eax, al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000453ef : lea esi, dword ptr [rip + 0x1cb] ; call rax
0x00000000000704ca : lea esi, dword ptr [rip + 0x30] ; call rax
0x00000000001142a0 : lea esi, dword ptr [rip + 0x7910c] ; mov rdx, rax ; mov rdi, r14 ; xor eax, eax ; call 0x1105b0
0x00000000000da72f : lea esi, dword ptr [rip + 0xad38b] ; movzx ebp, bpl ; movsxd rax, dword ptr [rsi + rbp*4] ; add rax, rsi ; jmp rax
0x00000000000c59f2 : lea esi, dword ptr [rip + 0xc1570] ; mov edx, ecx ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000ca1bb : lea esi, dword ptr [rip + 0xc1f5f] ; mov rdi, r12 ; cmove rcx, rax ; xor eax, eax ; call 0x56491
0x00000000000c073c : lea esi, dword ptr [rip + 0xc6152] ; add rax, rsi ; jmp rax
0x00000000000aac61 : lea esi, dword ptr [rip + 0xdb859] ; movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x000000000007e3ca : lea esi, dword ptr [rip - 0x19b0] ; call rax
0x000000000007e884 : lea esi, dword ptr [rip - 0x1e6a] ; call rax
0x000000000007ed44 : lea esi, dword ptr [rip - 0x232a] ; call rax
0x00000000000707b4 : lea esi, dword ptr [rip - 0x2ba] ; call rax
0x000000000007cd2a : lea esi, dword ptr [rip - 0x310] ; call rax
0x000000000007cf9a : lea esi, dword ptr [rip - 0x580] ; call rax
0x000000000013db05 : lea esi, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000130d55 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000006f033 : lea esi, dword ptr [rsp + 8] ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000013deca : lea esi, dword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013d485 : lea esi, dword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x000000000002d02b : lea esp, dword ptr [rbp - 0x28] ; mov rax, r12 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000009a246 : lea esp, dword ptr [rbp - 0x28] ; mov rax, r13 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004afea : lea esp, dword ptr [rbp - 0x28] ; mov rax, r15 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000142b20 : lea esp, dword ptr [rbp - 0x28] ; mov rax, r8 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004ae1b : lea esp, dword ptr [rbp - 0x28] ; mov rax, rbx ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002fef7 : lea esp, dword ptr [rbp - 0x28] ; mov rax, rcx ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012be0e : lea esp, dword ptr [rbp - 0x28] ; mov rax, rdx ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000076b93 : lea esp, dword ptr [rbp - 0x28] ; pop rbx ; sub rax, r14 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000a0936 : lea r10, qword ptr [rip + 0xe54e3] ; mov r9d, r9d ; movsxd rax, dword ptr [r10 + r9*4] ; add rax, r10 ; jmp rax
0x00000000000a07e4 : lea r10, qword ptr [rip + 0xe55ed] ; movsxd rax, dword ptr [r10 + rax*4] ; add rax, r10 ; jmp rax
0x000000000007bd3e : lea r15, qword ptr [rax + 5] ; mov esi, 0x2c ; mov rdi, r15 ; call 0x97fce
0x000000000003927b : lea r15, qword ptr [rbx + r14] ; call rax
0x00000000000487e8 : lea r8, qword ptr [rax] ; mov rax, qword ptr [rsi + rbx*8] ; lea r9, qword ptr [rdx] ; jmp 0x4884e
0x000000000004a3f8 : lea r8, qword ptr [rax] ; mov rax, qword ptr [rsi + rbx*8] ; lea r9, qword ptr [rdx] ; jmp 0x4a45e
0x00000000000c395d : lea r8, qword ptr [rip + 0xc3418] ; movzx edi, dl ; movsxd rax, dword ptr [r8 + rdi*4] ; add rax, r8 ; jmp rax
0x00000000001396c7 : lea r8, qword ptr [rip - 0x6a5e] ; mov esi, 9 ; mov rdi, rax ; call qword ptr [r10]
0x00000000001395cf : lea r8, qword ptr [rip - 0x6c16] ; mov rdi, rax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x000000000012f19a : lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012eef8 : lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000acd8e : lea r9, qword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000acc5c : lea r9, qword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000013a971 : lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000012f63a : lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00000000000bb41e : lea r9, qword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x000000000013a732 : lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x000000000003ae6a : lea rax, qword ptr [r10 + r8*4] ; mov qword ptr [rsi + 0x10], r10 ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x000000000004acc3 : lea rax, qword ptr [rax + rbx] ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000090df3 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000090e03 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x00000000000a0c53 : lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x0000000000090dd3 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000000c8011 : lea rax, qword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013093a : lea rax, qword ptr [rbx + 0x2260] ; pop rbx ; ret
0x00000000000aaa57 : lea rax, qword ptr [rbx + 1] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000048490 : lea rax, qword ptr [rbx + r10] ; je 0x484af ; mov rdx, qword ptr [r8 + rax*8] ; mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; pop rbx ; ret
0x0000000000072149 : lea rax, qword ptr [rbx + r12] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000072539 : lea rax, qword ptr [rcx + 4] ; mov qword ptr [rdx + 0x20], rax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x000000000008f8fc : lea rax, qword ptr [rcx + rsi] ; ret
0x00000000000aa6c3 : lea rax, qword ptr [rcx - 1] ; ret
0x00000000000a77eb : lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a7800 : lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a781e : lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a783e : lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a7861 : lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a7880 : lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a78a0 : lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a78c0 : lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a78e3 : lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a7908 : lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a7926 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a7946 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a7962 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a7982 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a79a2 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a79c2 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a8812 : lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a8a78 : lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a773c : lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a775c : lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a777e : lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a779e : lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a77be : lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a77d8 : lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a0813 : lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a0824 : lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a0837 : lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a0846 : lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a0859 : lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a09c6 : lea rax, qword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a086b : lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a087f : lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a0805 : lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a771e : lea rax, qword ptr [rdi + 9] ; ret
0x0000000000090e28 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000090e38 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000090d22 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000125dc0 : lea rax, qword ptr [rdi + rax + 2] ; cmp rdx, rax ; sbb eax, eax ; ret
0x000000000008be0b : lea rax, qword ptr [rdi + rax] ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x0000000000098006 : lea rax, qword ptr [rdi + rax] ; ret
0x000000000014d3a9 : lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x000000000002d9d4 : lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000008f7f8 : lea rax, qword ptr [rdi + rsi] ; ret
0x00000000000ac4fd : lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac660 : lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000ac680 : lea rax, qword ptr [rdi - 4] ; ret
0x00000000000ac670 : lea rax, qword ptr [rdi - 8] ; ret
0x00000000000a7672 : lea rax, qword ptr [rdi] ; ret
0x00000000000a7f52 : lea rax, qword ptr [rdi] ; sub r8, 1 ; lea rdi, qword ptr [rdi + 1] ; jne 0xa8991 ; ret
0x000000000016835c : lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000016837c : lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000016839e : lea rax, qword ptr [rdx + 0xc] ; ret
0x00000000001683be : lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000016a626 : lea rax, qword ptr [rdx + 0xe] ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000001683de : lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000016826e : lea rax, qword ptr [rdx + 0xf] ; ret
0x0000000000168296 : lea rax, qword ptr [rdx + 1] ; ret
0x00000000001682ac : lea rax, qword ptr [rdx + 2] ; ret
0x00000000001682c4 : lea rax, qword ptr [rdx + 3] ; ret
0x00000000001682da : lea rax, qword ptr [rdx + 4] ; ret
0x00000000001682ec : lea rax, qword ptr [rdx + 5] ; ret
0x000000000016830a : lea rax, qword ptr [rdx + 6] ; ret
0x000000000016a6d1 : lea rax, qword ptr [rdx + 7] ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000168216 : lea rax, qword ptr [rdx + 7] ; ret
0x000000000016831c : lea rax, qword ptr [rdx + 8] ; ret
0x000000000016833c : lea rax, qword ptr [rdx + 9] ; ret
0x000000000010bdf2 : lea rax, qword ptr [rdx + rax*4] ; mov eax, dword ptr [rax + rcx] ; mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000003d176 : lea rax, qword ptr [rdx + rdx*4] ; mov rdx, r14 ; xor r14d, r14d ; add rax, rax ; sub rdx, rax ; jmp 0x3d1cb
0x00000000000403c1 : lea rax, qword ptr [rdx + rdx*4] ; mov rdx, rbp ; xor ebp, ebp ; add rax, rax ; sub rdx, rax ; jmp 0x40414
0x00000000000d14c3 : lea rax, qword ptr [rdx - 1] ; je 0xd1420 ; add rbx, 1 ; mov rdx, rax ; jmp 0xd1480
0x0000000000168284 : lea rax, qword ptr [rdx] ; ret
0x0000000000091342 : lea rax, qword ptr [rip + 0x107] ; ret
0x000000000008de69 : lea rax, qword ptr [rip + 0x10] ; ret
0x000000000008de1d : lea rax, qword ptr [rip + 0x1516c] ; ret
0x000000000008bbbd : lea rax, qword ptr [rip + 0x157ac] ; ret
0x000000000002cb28 : lea rax, qword ptr [rip + 0x15def6] ; ret
0x000000000002cb10 : lea rax, qword ptr [rip + 0x15df0e] ; cmp edi, dword ptr [rdx + 0x38] ; jae 0x2cb40 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000000204f0 : lea rax, qword ptr [rip + 0x16a074] ; ret
0x0000000000020500 : lea rax, qword ptr [rip + 0x16bf78] ; ret
0x00000000000908f5 : lea rax, qword ptr [rip + 0x19ab4] ; cmove rax, rdx ; ret
0x0000000000090e73 : lea rax, qword ptr [rip + 0x26] ; ret
0x000000000012e0a8 : lea rax, qword ptr [rip + 0x297c91] ; pop rbx ; ret
0x000000000012e070 : lea rax, qword ptr [rip + 0x297cc9] ; pop rbx ; ret
0x000000000012dfb1 : lea rax, qword ptr [rip + 0x297d88] ; pop rbx ; ret
0x00000000001034ce : lea rax, qword ptr [rip + 0x2c0d4b] ; add rsp, 0x18 ; ret
0x000000000010347a : lea rax, qword ptr [rip + 0x2c0ddf] ; pop rbp ; pop r12 ; ret
0x0000000000102f56 : lea rax, qword ptr [rip + 0x2c1273] ; add rsp, 8 ; ret
0x0000000000102ef7 : lea rax, qword ptr [rip + 0x2c12f2] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000100e51 : lea rax, qword ptr [rip + 0x2c32a8] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000100b3f : lea rax, qword ptr [rip + 0x2c34da] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ff8f0 : lea rax, qword ptr [rip + 0x2c46a1] ; ret
0x00000000000ff720 : lea rax, qword ptr [rip + 0x2c4871] ; ret
0x00000000000ff53a : lea rax, qword ptr [rip + 0x2c4a57] ; add rsp, 8 ; ret
0x00000000000bbbcc : lea rax, qword ptr [rip + 0x307ded] ; add rsp, 8 ; ret
0x000000000008fada : lea rax, qword ptr [rip + 0x333dbf] ; mov qword ptr [rip + 0x333da0], rax ; ret
0x0000000000045dc2 : lea rax, qword ptr [rip + 0x37d817] ; mov byte ptr [rax + rdx], 0 ; ret
0x0000000000118084 : lea rax, qword ptr [rip + 0x386b5] ; ret
0x0000000000117fc4 : lea rax, qword ptr [rip + 0x38795] ; ret
0x0000000000117f04 : lea rax, qword ptr [rip + 0x38855] ; ret
0x000000000003b350 : lea rax, qword ptr [rip + 0x38b0ff] ; add rsp, 8 ; ret
0x000000000002cac7 : lea rax, qword ptr [rip + 0x395f52] ; mov byte ptr [rip + 0x395fa9], dl ; ret
0x00000000001180d2 : lea rax, qword ptr [rip + 0x3b5a7] ; ret
0x0000000000117f52 : lea rax, qword ptr [rip + 0x3b747] ; ret
0x0000000000118012 : lea rax, qword ptr [rip + 0x3e057] ; ret
0x000000000011805d : lea rax, qword ptr [rip + 0x564bc] ; ret
0x0000000000117f9d : lea rax, qword ptr [rip + 0x5659c] ; ret
0x0000000000117edd : lea rax, qword ptr [rip + 0x5665c] ; ret
0x0000000000118159 : lea rax, qword ptr [rip + 0x56960] ; ret
0x000000000012d7e0 : lea rax, qword ptr [rip + 0x5d23e] ; ret
0x000000000010a45b : lea rax, qword ptr [rip + 0x7e7be] ; movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000091c09 : lea rax, qword ptr [rip + 0x80] ; ret
0x000000000004e292 : lea rax, qword ptr [rip + 0x8e7] ; mov dword ptr [rbp - 0x4f0], 1 ; jmp rax
0x0000000000059c96 : lea rax, qword ptr [rip + 0x963] ; mov dword ptr [rbp - 0x1098], 1 ; jmp rax
0x000000000009668b : lea rax, qword ptr [rip + 0xba0de] ; ret
0x00000000000966d9 : lea rax, qword ptr [rip + 0xbcfd0] ; ret
0x000000000008fdaa : lea rax, qword ptr [rip + 0xbd7ef] ; ret
0x000000000008fa1a : lea rax, qword ptr [rip + 0xbda4f] ; ret
0x00000000000919cb : lea rax, qword ptr [rip + 0xbed7e] ; ret
0x00000000000abd5b : lea rax, qword ptr [rip + 0xbf2de] ; ret
0x000000000009131b : lea rax, qword ptr [rip + 0xbf44e] ; ret
0x000000000008d5aa : lea rax, qword ptr [rip + 0xbfd7f] ; ret
0x00000000000ac937 : lea rax, qword ptr [rip + 0xc03c2] ; ret
0x0000000000091a19 : lea rax, qword ptr [rip + 0xc1c70] ; ret
0x00000000000ac93f : lea rax, qword ptr [rip + 0xc3dda] ; ret
0x0000000000091369 : lea rax, qword ptr [rip + 0xc4d10] ; ret
0x000000000008c00d : lea rax, qword ptr [rip + 0xc] ; ret
0x000000000008f6fd : lea rax, qword ptr [rip + 0xd495c] ; ret
0x0000000000091a9d : lea rax, qword ptr [rip + 0xd513c] ; ret
0x000000000008d49d : lea rax, qword ptr [rip + 0xd540c] ; ret
0x0000000000091bbd : lea rax, qword ptr [rip + 0xd682c] ; ret
0x0000000000096664 : lea rax, qword ptr [rip + 0xd7ee5] ; ret
0x0000000000091c6c : lea rax, qword ptr [rip + 0xd] ; ret
0x0000000000090e87 : lea rax, qword ptr [rip + 0xda832] ; ret
0x00000000000919a4 : lea rax, qword ptr [rip + 0xdcb85] ; ret
0x00000000000912f4 : lea rax, qword ptr [rip + 0xdd255] ; ret
0x00000000000917dc : lea rax, qword ptr [rip + 0xdd2ed] ; ret
0x0000000000090e8f : lea rax, qword ptr [rip + 0xde11a] ; ret
0x000000000008bdaa : lea rax, qword ptr [rip + 0xe2edf] ; ret
0x00000000000ac923 : lea rax, qword ptr [rip + 0xec76] ; ret
0x00000000000abd53 : lea rax, qword ptr [rip + 0xf8f6] ; ret
0x00000000000f8095 : lea rax, qword ptr [rip - 0x4c] ; cmove rax, rdx ; ret
0x00000000000966b2 : lea rax, qword ptr [rip - 0x5269] ; ret
0x00000000000919f2 : lea rax, qword ptr [rip - 0x5c9] ; ret
0x0000000000117f2b : lea rax, qword ptr [rip - 0x86af2] ; ret
0x0000000000117feb : lea rax, qword ptr [rip - 0x86bb2] ; ret
0x00000000001180ab : lea rax, qword ptr [rip - 0x86c92] ; ret
0x000000000010c650 : lea rax, qword ptr [rsi + rax*4] ; mov eax, dword ptr [rax + rdx] ; shr eax, cl ; and eax, 1 ; ret
0x0000000000091341 : lea rax, qword ptr cs:[rip + 0x107] ; ret
0x00000000000966b1 : lea rax, qword ptr cs:[rip - 0x5269] ; ret
0x00000000000919f1 : lea rax, qword ptr cs:[rip - 0x5c9] ; ret
0x0000000000117f2a : lea rax, qword ptr cs:[rip - 0x86af2] ; ret
0x0000000000117fea : lea rax, qword ptr cs:[rip - 0x86bb2] ; ret
0x00000000001180aa : lea rax, qword ptr cs:[rip - 0x86c92] ; ret
0x00000000000ac639 : lea rax, qword ptr es:[rdi - 0x10] ; ret
0x000000000003763a : lea rbx, qword ptr [rax + r14] ; nop ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000098685 : lea rbx, qword ptr [rbx - 1] ; cmp rax, 1 ; ja 0x98677 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000acadf : lea rbx, qword ptr [rdi + 0xc] ; test eax, eax ; mov dword ptr [rdi + 8], eax ; je 0xacaa6 ; mov rax, rbx ; pop rbx ; ret
0x000000000004b510 : lea rcx, qword ptr [r15 + rdx] ; add rdx, r13 ; call qword ptr [r10 + rax*8]
0x00000000000acc61 : lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000000acd93 : lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000ad19c : lea rcx, qword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000073405 : lea rcx, qword ptr [rax + 4] ; mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000bf1ee : lea rcx, qword ptr [rax + r9] ; mov rdx, rax ; jmp 0xbf201
0x000000000006d764 : lea rcx, qword ptr [rbx + 0x40] ; lea rdx, qword ptr [rbx + 0x34] ; mov esi, 1 ; mov rdi, rbx ; call rax
0x00000000000ac8db : lea rcx, qword ptr [rdi + 8] ; je 0xac900 ; cmp esi, dword ptr [rdi + 8] ; cmove rax, rcx ; ret
0x0000000000169ef6 : lea rcx, qword ptr [rdx + 0x10] ; jne 0x16a511 ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016a254 : lea rcx, qword ptr [rdx + 0xa] ; jne 0x16a511 ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016a284 : lea rcx, qword ptr [rdx + 0xb] ; jne 0x16a511 ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016a2b4 : lea rcx, qword ptr [rdx + 0xc] ; jne 0x16a511 ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016a2e6 : lea rcx, qword ptr [rdx + 0xd] ; jne 0x16a511 ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016a316 : lea rcx, qword ptr [rdx + 0xe] ; jne 0x16a511 ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016a346 : lea rcx, qword ptr [rdx + 0xf] ; jne 0x16a511 ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016a0fb : lea rcx, qword ptr [rdx + 1] ; jne 0x16a511 ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000072851 : lea rcx, qword ptr [rdx + 1] ; mov qword ptr [rax + 0x28], rcx ; mov byte ptr [rdx], dil ; movzx eax, dil ; ret
0x000000000016a11e : lea rcx, qword ptr [rdx + 2] ; jne 0x16a511 ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016a144 : lea rcx, qword ptr [rdx + 3] ; jne 0x16a511 ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016a16c : lea rcx, qword ptr [rdx + 4] ; jne 0x16a511 ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000000719b5 : lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x000000000016a192 : lea rcx, qword ptr [rdx + 5] ; jne 0x16a511 ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016a1c4 : lea rcx, qword ptr [rdx + 6] ; jne 0x16a511 ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016a1f2 : lea rcx, qword ptr [rdx + 7] ; jne 0x16a511 ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000169e8e : lea rcx, qword ptr [rdx + 8] ; jne 0x16a511 ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016a224 : lea rcx, qword ptr [rdx + 9] ; jne 0x16a511 ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000006d36f : lea rcx, qword ptr [rip + 0x118522] ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x00000000000647ce : lea rcx, qword ptr [rip + 0x12083f] ; movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x00000000000646ae : lea rcx, qword ptr [rip + 0x1208af] ; movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x000000000006484c : lea rcx, qword ptr [rip + 0x120911] ; movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x0000000000064159 : lea rcx, qword ptr [rip + 0x120d48] ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000005cdf4 : lea rcx, qword ptr [rip + 0x127f5d] ; movzx ebx, bl ; movsxd rax, dword ptr [rcx + rbx*4] ; add rax, rcx ; jmp rax
0x000000000005cc6c : lea rcx, qword ptr [rip + 0x128035] ; movzx ebx, bl ; movsxd rax, dword ptr [rcx + rbx*4] ; add rax, rcx ; jmp rax
0x000000000005c7fe : lea rcx, qword ptr [rip + 0x128297] ; movzx eax, al ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000015066d : lea rcx, qword ptr [rip + 0x242ec] ; mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000014ef8c : lea rcx, qword ptr [rip + 0x259cd] ; mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000014ecc8 : lea rcx, qword ptr [rip + 0x25c91] ; mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000014d8b3 : lea rcx, qword ptr [rip + 0x270a6] ; mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000014d2bd : lea rcx, qword ptr [rip + 0x2769c] ; mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000014b62c : lea rcx, qword ptr [rip + 0x2932d] ; mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000014b2f8 : lea rcx, qword ptr [rip + 0x29661] ; mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000149a23 : lea rcx, qword ptr [rip + 0x2af36] ; mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000004e8c7 : lea rcx, qword ptr [rip + 0x2b2] ; add rax, rcx ; jmp rax
0x000000000013815d : lea rcx, qword ptr [rip + 0x52340] ; mov esi, esi ; movsxd rax, dword ptr [rcx + rsi*4] ; add rax, rcx ; jmp rax
0x00000000001378cd : lea rcx, qword ptr [rip + 0x52b90] ; mov esi, esi ; movsxd rax, dword ptr [rcx + rsi*4] ; add rax, rcx ; jmp rax
0x000000000004bb17 : lea rcx, qword ptr [rip + 0xb87] ; add rax, rcx ; jmp rax
0x000000000005a8db : lea rcx, qword ptr [rip - 0x2e2] ; add rax, rcx ; jmp rax
0x000000000004eed9 : lea rcx, qword ptr [rip - 0x360] ; add rax, rcx ; jmp rax
0x000000000005aa95 : lea rcx, qword ptr [rip - 0x49c] ; add rax, rcx ; jmp rax
0x000000000004f04d : lea rcx, qword ptr [rip - 0x4d4] ; add rax, rcx ; jmp rax
0x000000000005ab8d : lea rcx, qword ptr [rip - 0x594] ; add rax, rcx ; jmp rax
0x00000000000dff25 : lea rdi, qword ptr [rax + rsi*4] ; shl rdx, 2 ; xor esi, esi ; call 0x9181e
0x00000000001356bd : lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000001382f1 : lea rdi, qword ptr [rbx + 0x58] ; call rax
0x0000000000137891 : lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000134af4 : lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x0000000000122ee0 : lea rdi, qword ptr [rip + 0x2a2815] ; call rax
0x0000000000122631 : lea rdi, qword ptr [rip + 0x2a3068] ; call rax
0x0000000000134b3d : lea rdi, qword ptr [rip + 0x554fc] ; mov esi, esi ; movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x00000000000c5a61 : lea rdi, qword ptr [rip + 0xc16ec] ; mov esi, edx ; movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x00000000001177d6 : lea rdi, qword ptr [rip - 0x16d] ; call rax
0x000000000007ee6a : lea rdx, qword ptr [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000007d659 : lea rdx, qword ptr [rax + 1] ; mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000005c389 : lea rdx, qword ptr [rax + 1] ; mov qword ptr [rbx], rdx ; mov byte ptr [rax], bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000106116 : lea rdx, qword ptr [rax + 1] ; mov qword ptr [rdi + 0x28], rdx ; mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007994a : lea rdx, qword ptr [rax + 1] ; mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000009920e : lea rdx, qword ptr [rax + 1] ; test rax, rax ; mov rax, rbx ; pop rbx ; cmovne rax, rdx ; ret
0x0000000000063e4d : lea rdx, qword ptr [rax + 4] ; mov qword ptr [rbx], rdx ; mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005c0d1 : lea rdx, qword ptr [rax + 8] ; mov qword ptr [r12 + 8], rdx ; jmp 0x5c0a8
0x000000000010b460 : lea rdx, qword ptr [rax + rdi*4] ; mov eax, dword ptr [rdx] ; cmp eax, 0xff ; je 0x10b480 ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x000000000006d768 : lea rdx, qword ptr [rbx + 0x34] ; mov esi, 1 ; mov rdi, rbx ; call rax
0x00000000000c800d : lea rdx, qword ptr [rdi + rdi*8] ; lea rax, qword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000007457c : lea rdx, qword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000006cc1d : lea rdx, qword ptr [rip + 0x11869c] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000162896 : lea rdx, qword ptr [rip + 0x120c3] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000162871 : lea rdx, qword ptr [rip + 0x120e8] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000160336 : lea rdx, qword ptr [rip + 0x14623] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000016031c : lea rdx, qword ptr [rip + 0x1463d] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000002ed1e : lea rdx, qword ptr [rip + 0x15135f] ; movsxd rax, dword ptr [rdx + rcx*4] ; add rax, rdx ; jmp rax
0x000000000002ec31 : lea rdx, qword ptr [rip + 0x151420] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000002e87e : lea rdx, qword ptr [rip + 0x15177b] ; movsxd rax, dword ptr [rdx + rcx*4] ; add rax, rdx ; jmp rax
0x0000000000020c33 : lea rdx, qword ptr [rip + 0x152906] ; mov eax, eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000001506c6 : lea rdx, qword ptr [rip + 0x24293] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000001506a1 : lea rdx, qword ptr [rip + 0x242b8] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014ed16 : lea rdx, qword ptr [rip + 0x25c43] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014ecfc : lea rdx, qword ptr [rip + 0x25c5d] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014d316 : lea rdx, qword ptr [rip + 0x27643] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014d2f1 : lea rdx, qword ptr [rip + 0x27668] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000013aba9 : lea rdx, qword ptr [rip + 0x28b3f0] ; cmp rax, rdx ; je 0x13abd0 ; add rsp, 8 ; ret
0x000000000013aae7 : lea rdx, qword ptr [rip + 0x28b4b2] ; mov qword ptr fs:[rax], rdx ; ret
0x0000000000130460 : lea rdx, qword ptr [rip + 0x290719] ; jmp qword ptr [rdx + rax*8]
0x000000000014b346 : lea rdx, qword ptr [rip + 0x29613] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014b32c : lea rdx, qword ptr [rip + 0x2962d] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000000c04a2 : lea rdx, qword ptr [rip + 0x303697] ; jne 0xc04c8 ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000139c50 : lea rdx, qword ptr [rip + 0x3609] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000001372ed : lea rdx, qword ptr [rip + 0x52d8c] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000121a9e : lea rdx, qword ptr [rip + 0x6727b] ; mov eax, dword ptr [rdx + rax*8 + 4] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f4d0d : lea rdx, qword ptr [rip + 0x93c14] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000f4bc6 : lea rdx, qword ptr [rip + 0x93c9b] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000f3ad6 : lea rdx, qword ptr [rip + 0x94c0b] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000f36c6 : lea rdx, qword ptr [rip + 0x94f5b] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000e603b : lea rdx, qword ptr [rip + 0xa1e52] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000e343c : lea rdx, qword ptr [rip + 0xa49a9] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000d501a : lea rdx, qword ptr [rip + 0xb2993] ; movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000d4a59 : lea rdx, qword ptr [rip + 0xb2ed4] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000d3073 : lea rdx, qword ptr [rip + 0xb47ca] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000d2a89 : lea rdx, qword ptr [rip + 0xb4d34] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000cf6c1 : lea rdx, qword ptr [rip + 0xb80a8] ; mov esi, esi ; movsxd rax, dword ptr [rdx + rsi*4] ; add rax, rdx ; jmp rax
0x00000000000cefb4 : lea rdx, qword ptr [rip + 0xb83d9] ; movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x00000000000cec42 : lea rdx, qword ptr [rip + 0xb86f7] ; mov esi, esi ; movsxd rax, dword ptr [rdx + rsi*4] ; add rax, rdx ; jmp rax
0x00000000000c1918 : lea rdx, qword ptr [rip + 0xc5195] ; movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000c1663 : lea rdx, qword ptr [rip + 0xc5382] ; movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000965a6 : lea rdx, qword ptr [rip + 0xde3b3] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000096581 : lea rdx, qword ptr [rip + 0xde3d8] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000012f24c : lea rdx, qword ptr [rip + 0xe00d] ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000093ea6 : lea rdx, qword ptr [rip + 0xe0ab3] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000093e8c : lea rdx, qword ptr [rip + 0xe0acd] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000087b51 : lea rdx, qword ptr [rip + 0xfe0e8] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000057799 : lea rdx, qword ptr [rip - 0x2de] ; add rax, rdx ; jmp rax
0x00000000000735d8 : lea rdx, qword ptr [rsi + 4] ; mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001177d2 : lea rsi, qword ptr [rbp - 0x20] ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x000000000004862b : lea rsi, qword ptr [rbx + r10] ; je 0x4864a ; mov rax, qword ptr [rax + rsi*8] ; mov qword ptr [rcx + rsi*8], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000b73e0 : lea rsi, qword ptr [rbx + rax*4] ; sub r10, rax ; jmp 0xb7408
0x000000000012de7f : lea rsi, qword ptr [rdi + 0x48] ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000006d27d : lea rsi, qword ptr [rip + 0x118558] ; movzx eax, al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000453ee : lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x00000000000704c9 : lea rsi, qword ptr [rip + 0x30] ; call rax
0x000000000011429f : lea rsi, qword ptr [rip + 0x7910c] ; mov rdx, rax ; mov rdi, r14 ; xor eax, eax ; call 0x1105b1
0x00000000000c59f1 : lea rsi, qword ptr [rip + 0xc1570] ; mov edx, ecx ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000c073b : lea rsi, qword ptr [rip + 0xc6152] ; add rax, rsi ; jmp rax
0x00000000000aac60 : lea rsi, qword ptr [rip + 0xdb859] ; movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x000000000007e3c9 : lea rsi, qword ptr [rip - 0x19b0] ; call rax
0x000000000007e883 : lea rsi, qword ptr [rip - 0x1e6a] ; call rax
0x000000000007ed43 : lea rsi, qword ptr [rip - 0x232a] ; call rax
0x00000000000707b3 : lea rsi, qword ptr [rip - 0x2ba] ; call rax
0x000000000007cd29 : lea rsi, qword ptr [rip - 0x310] ; call rax
0x000000000007cf99 : lea rsi, qword ptr [rip - 0x580] ; call rax
0x000000000013db04 : lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000130d54 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000006f032 : lea rsi, qword ptr [rsp + 8] ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000013dec9 : lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013d484 : lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x000000000002d02a : lea rsp, qword ptr [rbp - 0x28] ; mov rax, r12 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000009a245 : lea rsp, qword ptr [rbp - 0x28] ; mov rax, r13 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004afe9 : lea rsp, qword ptr [rbp - 0x28] ; mov rax, r15 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000142b1f : lea rsp, qword ptr [rbp - 0x28] ; mov rax, r8 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000004ae1a : lea rsp, qword ptr [rbp - 0x28] ; mov rax, rbx ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002fef6 : lea rsp, qword ptr [rbp - 0x28] ; mov rax, rcx ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012be0d : lea rsp, qword ptr [rbp - 0x28] ; mov rax, rdx ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000076b92 : lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; sub rax, r14 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000ad213 : leave ; adc al, 0x31 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000010a420 : leave ; add byte ptr [rax], al ; mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000d01b5 : leave ; add cl, byte ptr [rax - 0x7d] ; ret 0xe901
0x0000000000198015 : leave ; add dword ptr [rax], eax ; cmp al, 0xf8 ; jmp rsp
0x000000000019800d : leave ; add dword ptr [rax], eax ; test byte ptr [rbx], bh ; clc ; dec esp ; leave ; add dword ptr [rax], eax ; cmp al, 0xf8 ; jmp rsp
0x0000000000156e26 : leave ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000007c9c8 : leave ; and byte ptr [rcx + 0xc7640f], cl ; or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000008fac6 : leave ; cmove rax, rdx ; ret
0x00000000001a28f9 : leave ; in eax, dx ; jmp qword ptr [rax]
0x00000000000d7cce : leave ; je 0xd7cdf ; mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000e25e6 : leave ; jle 0xe2667 ; xor ebx, ebx ; mov rdx, rax ; jmp 0xe2606
0x000000000006f7dc : leave ; jne 0x6f772 ; mov dword ptr fs:[rax], 5 ; mov rax, rdx ; pop rbx ; ret
0x000000000007891c : leave ; jne 0x788b2 ; mov dword ptr fs:[rax], 5 ; mov rax, rdx ; pop rbx ; ret
0x00000000000aa810 : leave ; jne 0xaa807 ; sub rax, 1 ; ret
0x00000000000adb2a : leave ; jne 0xadae7 ; mov rax, rdx ; ret
0x000000000014d3a8 : leave ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x00000000000a5a11 : leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000100824 : leave ; mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x00000000000a089f : leave ; movsxd r9, dword ptr [rax + r9*4] ; add r9, rax ; jmp r9
0x00000000000a093f : leave ; movsxd rax, dword ptr [r10 + r9*4] ; add rax, r10 ; jmp rax
0x000000000002145f : leave ; movzx eax, al ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x00000000000a126c : leave ; movzx eax, byte ptr [rax + rcx] ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000001005ab : leave ; or byte ptr [rax + rax], ch ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000003b445 : leave ; or eax, ecx ; cdqe ; mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000156c23 : leave ; retf ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000003626d : leave ; shr rcx, 6 ; test qword ptr [rdi + rcx*8], rax ; setne al ; movzx eax, al ; ret
0x0000000000116cd3 : leave ; stc ; sub al, byte ptr [rax] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; jmp rax
0x00000000001167c3 : leave ; std ; sub al, byte ptr [rax] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; jmp rax
0x00000000001199b1 : leave ; test r8d, r8d ; mov dword ptr [rax + 0xc], r8d ; jne 0x119961 ; mov rax, rdi ; ret
0x00000000000cddab : leave ; xor byte ptr [rdi], ch ; add byte ptr [rdi + rax*8], ah ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000843e5 : leave ; xor eax, dword ptr [rax] ; xor edi, edi ; call qword ptr [rax]
0x000000000018018b : ljmp ptr [rax + 0x39] ; jmp 0x180197
0x0000000000186f07 : ljmp ptr [rax + 0x7dfff3db] ; fcomi st(3) ; call rax
0x0000000000199483 : ljmp ptr [rax + rbx*2 + 0x1fd40002] ; sti ; call rsp
0x0000000000195663 : ljmp ptr [rax + rcx*8 + 0x2db40000] ; out dx, al ; call rsp
0x0000000000197fdb : ljmp ptr [rax + rcx*8 + 1] ; add byte ptr [rbx + rsi], ah ; clc ; lcall ptr [rax + rcx*8 + 0x33b40001] ; clc ; jmp rsp
0x000000000019565b : ljmp ptr [rax + rcx*8] ; add ah, al ; sub al, 0xee ; ljmp ptr [rax + rcx*8 + 0x2db40000] ; out dx, al ; call rsp
0x000000000019932b : ljmp ptr [rax + rdx*2 - 0x68bfffe] ; cli ; call rsp
0x0000000000185e7f : ljmp ptr [rax - 0x41] ; cld ; dec dword ptr [rax] ; scasd eax, dword ptr [rdi] ; cld ; lcall ptr [rax] ; ret 0xfffc
0x0000000000135f7d : ljmp ptr [rax] ; add byte ptr [rax - 0x77], cl ; in eax, 0x74 ; sub eax, 0x8948f631 ; out -0x77, eax ; ret
0x000000000018a06b : ljmp ptr [rax] ; lodsb al, byte ptr [rsi] ; cli ; inc dword ptr [rax - 0x54] ; cli ; lcall ptr [rax - 0x54] ; cli ; push qword ptr [rax - 0x54] ; cli ; call qword ptr [rax]
0x0000000000185f37 : ljmp ptr [rax] ; ret 0xfffd
0x00000000001963e3 : ljmp ptr [rbx + 1] ; add byte ptr [rbx + rcx*8 + 0x2384fff1], dl ; add dword ptr [rax], eax ; in al, -0x33 ; int1 ; call rsp
0x00000000001934a7 : ljmp ptr [rbx - 0x69] ; std ; dec dword ptr [rbx] ; cwde ; std ; call qword ptr [rax + 0x20fffd98]
0x0000000000195ecb : ljmp ptr [rcx + rax - 0x3acbffff] ; out dx, eax ; inc esp ; add dword ptr [rcx], eax ; add byte ptr [rsi + rax*8], dh ; out dx, eax ; jmp rsp
0x0000000000198d33 : ljmp ptr [rcx + rbp + 2] ; add byte ptr [rsi + rcx*2 + 0x29bcfffa], ah ; add al, byte ptr [rax] ; push rsp ; cli ; jmp rsp
0x000000000004a5bc : ljmp ptr [rcx] ; enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001940a3 : ljmp ptr [rdx + 0x3afffc9d] ; popfq ; cld ; dec edx ; pushfq ; cld ; push qword ptr [rax - 0x64] ; cld ; jmp rax
0x0000000000116753 : ljmp ptr [rdx] ; add byte ptr [rbp - 0x47f98a40], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000196893 : ljmp ptr [rsi + rax*2 - 0x72fbffff] ; jmp rsp
0x0000000000196583 : ljmp ptr [rsi + rbp - 0x7bbbffff] ; dec esp ; add dword ptr cs:[rax], eax ; je 0x196526 ; jmp rsp
0x0000000000196582 : ljmp ptr [rsi + rbp - 0x7bbbffff] ; dec esp ; add dword ptr cs:[rax], eax ; je 0x196527 ; jmp rsp
0x0000000000199653 : ljmp ptr [rsi + rdx + 1] ; add byte ptr [rbx + rax*8 + 0x1684fffb], al ; add dword ptr [rax], eax ; xchg eax, esp ; ret
0x000000000019841b : ljmp ptr [rsp + 1] ; add byte ptr [rbp + rsi*4 - 0x1b6b0008], al ; add dword ptr [rax], eax ; mov ah, 0xb6 ; clc ; jmp rsp
0x00000000001963fb : ljmp ptr [rsp + 1] ; add byte ptr [rbx + rsi*8 + 0x24bcfff1], ah ; add dword ptr [rax], eax ; mov ah, 0xf3 ; int1 ; call rsp
0x00000000000bc2af : lock add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000007a03c : lock add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sub byte ptr [r8 - 0x75], r9b ; push rdi ; and byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x000000000007805e : lock add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000016ba9e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ba96 : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001a8a35 : lock add byte ptr [rax], al ; call 0x221a7c87
0x0000000000195c65 : lock add byte ptr [rax], al ; je 0x195ca1 ; out dx, eax ; call rsp
0x0000000000088974 : lock add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000fd834 : lock and byte ptr [rax - 0x77], cl ; ret
0x0000000000117048 : lock cmpxchg qword ptr [rip + 0x2af6f7], rdi ; cmp rdx, rax ; jne 0x11703f ; ret
0x000000000011ceb9 : lock dec dword ptr [rax - 0x7b] ; ror byte ptr [rax - 0x77], 5 ; and ebx, dword ptr [rcx + 0x2a] ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rdi], -0x7b ; ret
0x00000000001484c0 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001bca04 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rsp + rax], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000000b6c2d : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001109f9 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; test byte ptr [rax - 0x75], 0x54 ; and al, 0x10 ; mov edi, 0x2000004 ; call rax
0x00000000001ba5d8 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rdi + 4], bl ; add byte ptr [rax], al ; mov dh, 2 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000170190 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000001a458d : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; push rax ; ret
0x00000000001a45e5 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; sbb ch, al ; out dx, al ; call qword ptr [rax]
0x0000000000196894 : lodsb al, byte ptr [rsi] ; add dword ptr [rax], r8d ; add al, 0x8d ; jmp rsp
0x0000000000195ecc : lodsb al, byte ptr [rsi] ; add dword ptr [rcx], eax ; add byte ptr [rax*8 + 0x1c4ffef], dh ; add dword ptr [rax], eax ; xor al, 0xc6 ; out dx, eax ; jmp rsp
0x00000000001ac804 : lodsb al, byte ptr [rsi] ; add dword ptr cs:[rax], eax ; js 0x1ac82e ; cmc ; jmp qword ptr [rcx]
0x0000000000196584 : lodsb al, byte ptr [rsi] ; add dword ptr cs:[rax], eax ; test dl, r14b ; dec esp ; add dword ptr cs:[rax], eax ; je 0x196525 ; jmp rsp
0x0000000000158b1b : lodsb al, byte ptr [rsi] ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000010e727 : lodsb al, byte ptr [rsi] ; and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000146675 : lodsb al, byte ptr [rsi] ; and al, 0x70 ; add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000000b5e18 : lodsb al, byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00000000000b6a04 : lodsb al, byte ptr [rsi] ; and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000027bfb : lodsb al, byte ptr [rsi] ; and al, 0xc0 ; add byte ptr [rax], al ; add dh, dh ; ret
0x000000000018a065 : lodsb al, byte ptr [rsi] ; cli ; call qword ptr [rax]
0x000000000018a06d : lodsb al, byte ptr [rsi] ; cli ; inc dword ptr [rax - 0x54] ; cli ; lcall ptr [rax - 0x54] ; cli ; push qword ptr [rax - 0x54] ; cli ; call qword ptr [rax]
0x000000000018a055 : lodsb al, byte ptr [rsi] ; cli ; jmp rax
0x000000000018a071 : lodsb al, byte ptr [rsi] ; cli ; lcall ptr [rax - 0x54] ; cli ; push qword ptr [rax - 0x54] ; cli ; call qword ptr [rax]
0x000000000018a075 : lodsb al, byte ptr [rsi] ; cli ; push qword ptr [rax - 0x54] ; cli ; call qword ptr [rax]
0x000000000018a05d : lodsb al, byte ptr [rsi] ; cli ; push rax ; stosd dword ptr [rdi], eax ; cli ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; cli ; call qword ptr [rax]
0x0000000000036184 : lodsb al, byte ptr [rsi] ; cmp byte ptr [rax], al ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001ad504 : lodsb al, byte ptr [rsi] ; cmp eax, dword ptr [rcx] ; add byte ptr [rax + 0x57], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001b8b04 : lodsb al, byte ptr [rsi] ; int1 ; add dword ptr [rax], eax ; cwde ; lahf ; sti ; jmp qword ptr [rdx]
0x00000000000c7d50 : lodsb al, byte ptr [rsi] ; jnp 0xc7d4e ; dec dword ptr [rax - 0x77] ; ret
0x0000000000148ae4 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000183cfd : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000019932c : lodsb al, byte ptr [rsi] ; push rax ; add al, byte ptr [rax] ; je 0x199332 ; cli ; call rsp
0x000000000008bbc0 : lodsb al, byte ptr [rsi] ; push rdi ; add dword ptr [rax], eax ; ret
0x0000000000193345 : lodsb al, byte ptr [rsi] ; sti ; inc dword ptr [rax - 0x2f000453] ; scasb al, byte ptr [rdi] ; sti ; jmp qword ptr [rax]
0x0000000000194ca4 : lodsb al, byte ptr [rsi] ; xchg dword ptr [rax], eax ; add byte ptr [rcx + rbp*2 - 0x16], dl ; call rsp
0x00000000001a7104 : lodsb al, byte ptr [rsi] ; xlatb ; add byte ptr [rax], al ; cmp byte ptr [rdx - 0xf], cl ; jmp rcx
0x00000000000467f0 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000ae5b6 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000080077 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000132c38 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; test eax, eax ; jne 0x132c5f ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000158a30 : lodsd eax, dword ptr [rsi] ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000f994f : lodsd eax, dword ptr [rsi] ; mov eax, 0x5c ; syscall ; cmp rax, -0xfff ; jae 0xf9970 ; ret
0x00000000000acae9 : lodsd eax, dword ptr [rsi] ; mov rax, rbx ; pop rbx ; ret
0x000000000014c650 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000001ff09 : lodsd eax, dword ptr [rsi] ; or byte ptr [rax], al ; mov edi, 0xbf ; mov r12, rax ; call 0xaac31
0x0000000000071a9f : lodsd eax, dword ptr [rsi] ; push rdx ; or al, byte ptr [rax] ; add rsp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x0000000000193349 : lodsd eax, dword ptr [rsi] ; sti ; call rax
0x00000000001821b8 : lodsd eax, dword ptr [rsi] ; xor eax, 0x444be0a8 ; sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000000ae5b5 : lodsq rax, qword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000103d73 : loop 0x103d43 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rbx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; jmp rax
0x0000000000109392 : loop 0x10941b ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109692 : loop 0x109718 ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a49e : loop 0x10a4a8 ; add rdx, rax ; cmp rcx, rdx ; mov edx, 0 ; cmovb rax, rdx ; ret
0x000000000010a49e : loop 0x10a4a9 ; add rdx, rax ; cmp rcx, rdx ; mov edx, 0 ; cmovb rax, rdx ; ret
0x000000000011b24a : loop 0x11b25a ; add byte ptr [rax], al ; rol byte ptr [rcx + 0xfa], 0x80 ; cmovne eax, edi ; ret
0x00000000001208c2 : loop 0x120854 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000001329ac : loop 0x132a36 ; movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x0000000000139ef6 : loop 0x139e88 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000013a089 : loop 0x13a01b ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000002d71a : loop 0x2d77e ; cmp dword ptr [rax], eax ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x000000000003628d : loop 0x362e2 ; shr eax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x000000000003a907 : loop 0x3a930 ; mov eax, eax ; or rax, rdx ; ret
0x0000000000003f91 : loop 0x3fae ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x000000000004b35c : loop 0x4b353 ; scasb al, byte ptr [rdi] ; sbb eax, 0x8b4d0002 ; jl 0x4b397 ; and byte ptr [rax + 1], cl ; ret
0x000000000004b50e : loop 0x4b51e ; lea rcx, qword ptr [r15 + rdx] ; add rdx, r13 ; call qword ptr [r10 + rax*8]
0x0000000000056eae : loop 0x56ebe ; lea rcx, qword ptr [r15 + rdx] ; add rdx, r13 ; call qword ptr [r10 + rax*8]
0x000000000006cc62 : loop 0x6cbf4 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000006cbfe : loop 0x6cc16 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000078c9a : loop 0x78cb1 ; or byte ptr [rax], al ; add byte ptr [rbp + 0x14], dh ; xor eax, eax ; cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x0000000000089f27 : loop 0x89f79 ; mov edi, edi ; call rax
0x000000000009811b : loop 0x9815a ; or rax, rdx ; bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x00000000000a6b8a : loop 0xa6b95 ; add byte ptr [rax], al ; ret
0x00000000000aaaae : loop 0xaaabc ; add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe3e], al ; ror dword ptr [rdi], -0x51 ; ret 0x78e9
0x00000000000aad03 : loop 0xaad10 ; cld ; inc dword ptr [rbx] ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000000aad03 : loop 0xaad12 ; cld ; inc dword ptr [rbx] ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000000aad25 : loop 0xaad3f ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000bcb14 : loop 0xbcb0f ; or eax, 0x841f0f66 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000000feb92 : loop 0xfebc3 ; sub al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102c84 : loope 0x102cbd ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000102cb4 : loope 0x102ced ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000102d1d : loope 0x102d56 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000102d44 : loope 0x102d7d ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000102d74 : loope 0x102dad ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000106a7b : loope 0x106a31 ; sub eax, dword ptr [rax] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x106b90 ; call rax
0x0000000000108c93 : loope 0x108c23 ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109293 : loope 0x10931d ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109593 : loope 0x10961a ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109893 : loope 0x109917 ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109d93 : loope 0x109e15 ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rdx], eax ; mov rax, -1 ; ret
0x0000000000109f93 : loope 0x10a010 ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a793 : loope 0x10a808 ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000116b83 : loope 0x116b90 ; sub al, byte ptr [rax] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000117223 : loope 0x11720c ; sub al, byte ptr [rax] ; test rax, rax ; je 0x117239 ; ret
0x0000000000131fc1 : loope 0x131fd0 ; add bh, bh ; add byte ptr [rax + 0x31], cl ; enter -0x3eb8, -0x1f ; or byte ptr [rax - 0x77], cl ; ret 0x314c
0x0000000000165ecb : loope 0x165ed2 ; add byte ptr [rax], al ; ret
0x000000000016eebb : loope 0x16eec5 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000186d74 : loope 0x186d56 ; call qword ptr [rax]
0x0000000000186ed5 : loope 0x186ecc ; call qword ptr [rax]
0x0000000000186ed4 : loope 0x186ecd ; call qword ptr [rax]
0x0000000000186f05 : loope 0x186f04 ; ljmp ptr [rax + 0x7dfff3db] ; fcomi st(3) ; call rax
0x0000000000188ac9 : loope 0x188ad3 ; add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000000360b1 : loope 0x360ba ; add byte ptr [rax], al ; adc byte ptr [rdi], cl ; ret 0x8b48
0x0000000000045d04 : loope 0x45d2e ; or edx, ecx ; cmp esi, 0x40 ; cmovne rax, rdx ; ret
0x0000000000045d04 : loope 0x45d2f ; or edx, ecx ; cmp esi, 0x40 ; cmovne rax, rdx ; ret
0x000000000008dbbc : loope 0x8dbed ; or rdx, rcx ; bsf rdx, rdx ; add rax, rdx ; sub rax, rdi ; ret
0x000000000008ddd8 : loope 0x8de09 ; or rdx, rcx ; bsf rdx, rdx ; add rax, rdx ; sub rax, rdi ; ret
0x0000000000090f8e : loope 0x90fa3 ; sar rax, cl ; movzx eax, al ; sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000000a08a9 : loope 0xa0921 ; nop dword ptr [rax + rax] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00000000000a6065 : loope 0xa60da ; nop dword ptr cs:[rax + rax] ; mov byte ptr [rdi], dh ; ret
0x00000000000a7309 : loope 0xa737b ; nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000000a7665 : loope 0xa76dd ; nop dword ptr cs:[rax + rax] ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000a8b19 : loope 0xa8b8b ; nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000000a9145 : loope 0xa91ba ; nop dword ptr cs:[rax + rax] ; mov byte ptr [rdi], dh ; ret
0x00000000000a9c15 : loope 0xa9c8a ; nop dword ptr cs:[rax + rax] ; mov byte ptr [rdi], dh ; ret
0x00000000000aa399 : loope 0xaa408 ; nop dword ptr [rax + rax] ; ret
0x00000000000aacd8 : loope 0xaacea ; cld ; add eax, dword ptr [rax] ; cmp edx, 0xff ; cmove rax, rcx ; pop rbx ; ret
0x00000000000d81da : loope 0xd8163 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xf35b
0x00000000000d9ecd : loope 0xd9f49 ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000f9993 : loope 0xf9a16 ; sub al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fe593 : loope 0xfe5ca ; sub al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ff293 : loope 0xff2c0 ; sub al, 0 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x000000000010267f : loopne 0x102677 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000102da7 : loopne 0x102de0 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000102dd4 : loopne 0x102e0d ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000102e04 : loopne 0x102e3d ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000102e34 : loopne 0x102e6d ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000102e33 : loopne 0x102e6e ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000102e64 : loopne 0x102e9d ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001177d5 : loopne 0x117827 ; lea edi, dword ptr [rip - 0x16d] ; call rax
0x0000000000126a6b : loopne 0x126a78 ; cdqe ; shr rax, 4 ; ret
0x00000000001278a6 : loopne 0x1278b4 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012793d : loopne 0x12794b ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012f250 : loopne 0x12f25a ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; call qword ptr [rax]
0x00000000001378de : loopne 0x13787f ; mov rax, qword ptr [rdx] ; bswap eax ; mov dword ptr [rdi + 0x54], eax ; mov eax, 1 ; ret
0x000000000013ac77 : loopne 0x13ac80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000013eff1 : loopne 0x13f061 ; nop dword ptr [rax + rax] ; ret
0x000000000016a31c : loopne 0x16a32a ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000001821bc : loopne 0x182213 ; sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000185fd0 : loopne 0x185fe1 ; inc dword ptr [rax] ; or edx, esi ; jmp qword ptr [rax]
0x0000000000185ff0 : loopne 0x186002 ; inc dword ptr [rax] ; or dh, dl ; jmp qword ptr [rax]
0x0000000000186010 : loopne 0x186023 ; inc dword ptr [rax] ; or esi, edx ; jmp qword ptr [rax]
0x0000000000186030 : loopne 0x186040 ; call qword ptr [rax]
0x0000000000186050 : loopne 0x18606d ; push rax ; or al, 0xf2 ; inc dword ptr [rax] ; or eax, 0xd10fff2 ; jmp qword ptr [rax]
0x0000000000186090 : loopne 0x1860aa ; push rax ; or eax, 0xe00fff2 ; jmp qword ptr [rax]
0x0000000000186104 : loopne 0x186120 ; push rax ; pslld mm7, mm7 ; add byte ptr [rax], dl ; call qword ptr [rax]
0x000000000018621c : loopne 0x186242 ; call qword ptr [rax]
0x000000000018624c : loopne 0x18627b ; push rax ; and dh, dl ; inc dword ptr [rax] ; and esi, edx ; jmp qword ptr [rax]
0x0000000000186270 : loopne 0x18629c ; push rax ; and esi, edx ; call qword ptr [rax]
0x00000000001862d8 : loopne 0x18630a ; push rax ; and eax, 0x2600fff2 ; call qword ptr [rax]
0x0000000000186d2d : loopne 0x186d24 ; call rax
0x0000000000187364 : loopne 0x1873e6 ; hlt ; push rax ; jns 0x187366 ; jmp rax
0x000000000018736c : loopne 0x1873ea ; hlt ; jmp rax
0x0000000000187378 : loopne 0x1873f6 ; hlt ; jmp rax
0x000000000018737c : loopne 0x187406 ; hlt ; inc dword ptr [rax + 0x7a] ; hlt ; inc eax ; jns 0x18738a ; inc eax ; jns 0x18738e ; jmp rax
0x000000000018a058 : loopne 0x18a014 ; cli ; dec dword ptr [rax - 0xf000554] ; stosd dword ptr [rdi], eax ; cli ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; cli ; call qword ptr [rax]
0x000000000018a080 : loopne 0x18a058 ; cli ; jmp rax
0x000000000018a084 : loopne 0x18a05c ; cli ; jmp rax
0x000000000018a094 : loopne 0x18a074 ; cli ; inc dword ptr [rax + 0x50fffad2] ; sar edx, cl ; jmp rax
0x000000000018a0a0 : loopne 0x18a080 ; cli ; inc dword ptr [rax - 0x1f00052e] ; sar edx, cl ; jmp rax
0x000000000018a0a8 : loopne 0x18a080 ; cli ; jmp rax
0x000000000018a0ac : loopne 0x18a084 ; cli ; jmp rax
0x000000000018a0b0 : loopne 0x18a088 ; cli ; jmp rax
0x000000000018a0b4 : loopne 0x18a08c ; cli ; jmp rax
0x000000000018a0b8 : loopne 0x18a090 ; cli ; jmp rax
0x000000000018a0bc : loopne 0x18a094 ; cli ; jmp rax
0x000000000018a0c0 : loopne 0x18a098 ; cli ; jmp rax
0x0000000000193340 : loopne 0x1932fb ; sti ; push qword ptr [rax] ; lodsb al, byte ptr [rsi] ; sti ; inc dword ptr [rax - 0x2f000453] ; scasb al, byte ptr [rdi] ; sti ; jmp qword ptr [rax]
0x00000000001933b4 : loopne 0x19334e ; std ; dec esi ; nop ; std ; call rax
0x0000000000193884 : loopne 0x1938d4 ; cld ; jmp rax
0x0000000000193888 : loopne 0x1938da ; cld ; jmp rax
0x000000000019388c : loopne 0x1938e8 ; cld ; push qword ptr [rax + 0x42] ; cld ; push qword ptr [rax] ; cld ; call qword ptr [rax]
0x0000000000193904 : loopne 0x193953 ; cld ; jmp rax
0x0000000000193908 : loopne 0x193959 ; cld ; jmp rax
0x000000000019390c : loopne 0x193963 ; cld ; push qword ptr [rax + 0x41] ; cld ; jmp qword ptr [rax]
0x000000000019396c : loopne 0x1939af ; cld ; jmp qword ptr [rax]
0x0000000000193980 : loopne 0x1939c1 ; cld ; push qword ptr [rax] ; xor bh, ah ; inc dword ptr [rax - 0x2f0003cd] ; xor al, 0xfc ; jmp qword ptr [rax]
0x0000000000193bbc : loopne 0x193c48 ; cld ; push qword ptr [rax + 0x7b] ; cld ; inc dword ptr [rax] ; jnp 0x193bd2 ; call qword ptr [rax + 0x20fffc7a]
0x0000000000193edc : loopne 0x193e8b ; cld ; push qword ptr [rax - 0x62] ; cld ; inc dword ptr [rax] ; sahf ; cld ; call qword ptr [rax + 0x20fffc9d]
0x0000000000195a25 : loopne 0x195a35 ; add ah, dh ; pushfq ; out dx, al ; dec dword ptr [rax - 0x5fdc0000] ; out dx, al ; jmp rsp
0x0000000000195a2d : loopne 0x195a35 ; add byte ptr [rax], ah ; out dx, al ; jmp rsp
0x00000000001a48d0 : loopne 0x1a4923 ; cli ; call qword ptr [rax]
0x00000000001b7a15 : loopne 0x1b7a1e ; add byte ptr [rax], bl ; clc ; call qword ptr [rdx]
0x00000000000217d1 : loopne 0x217d4 ; mov qword ptr [rax], rcx ; mov r15, rax ; mov qword ptr [rbp - 0xa0], rax ; call 0x8da41
0x000000000002adfb : loopne 0x2ae4b ; test eax, eax ; je 0x2ae09 ; call rax
0x0000000000034d72 : loopne 0x34dbd ; or rax, rdx ; movq xmm0, rax ; ret
0x00000000000362ad : loopne 0x36305 ; shr edx, 6 ; not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000450f8 : loopne 0x45113 ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000006cd3a : loopne 0x6cd52 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000006efac : loopne 0x6efb2 ; add byte ptr [rax], al ; jmp rax
0x000000000006efe8 : loopne 0x6efee ; add byte ptr [rax], al ; call rax
0x000000000006efb1 : loopne 0x6f027 ; nop dword ptr [rax + rax] ; mov rax, -1 ; ret
0x000000000006f03a : loopne 0x6f040 ; add byte ptr [rax], al ; call rax
0x000000000006f07c : loopne 0x6f082 ; add byte ptr [rax], al ; jmp rax
0x000000000006f081 : loopne 0x6f0f2 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000075135 : loopne 0x7514f ; test dword ptr [rax + rax], edi ; add byte ptr [rcx - 0x7d], cl ; call qword ptr [rax]
0x00000000000843e4 : loopne 0x843b5 ; xor eax, dword ptr [rax] ; xor edi, edi ; call qword ptr [rax]
0x00000000000874a2 : loopne 0x874a8 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000008792a : loopne 0x87931 ; test byte ptr [rdi + rax - 8], 1 ; je 0x8794d ; sub rax, 8 ; ret
0x0000000000087b55 : loopne 0x87b70 ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000008aa17 : loopne 0x8a9dd ; or dword ptr [rbx + 0x67], edx ; fmul dword ptr [rax + 0x33] ; push rdi ; fmul dword ptr [rax + 0x39] ; ret 0x5a74
0x000000000008daa4 : loopne 0x8da77 ; sar rdx, cl ; test rdx, rdx ; je 0x8db41 ; bsf rax, rdx ; ret
0x000000000008db05 : loopne 0x8dad4 ; sar rdx, cl ; test rdx, rdx ; je 0x8db2d ; bsf rax, rdx ; ret
0x000000000008db05 : loopne 0x8dad5 ; sar rdx, cl ; test rdx, rdx ; je 0x8db2e ; bsf rax, rdx ; ret
0x00000000000a6c8c : loopne 0xa6c96 ; add byte ptr [rax], al ; ret
0x00000000000aac8d : loopne 0xaaca7 ; movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x00000000000aad2f : loopne 0xaad4f ; mov dh, 0xd1 ; mov eax, 0 ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000000aad2f : loopne 0xaad51 ; mov dh, 0xd1 ; mov eax, 0 ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000000ac632 : loopne 0xac65f ; je 0xac69c ; test al, 0xf0 ; jne 0xac66c ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000b638c : loopne 0xb6355 ; or eax, 0x358d4800 ; xchg eax, ecx ; or rax, 0x3d8d4800 ; ret 0xd83
0x00000000000c07da : loopne 0xc07ee ; sub rcx, rax ; mov dword ptr [r15 + 8], ecx ; jmp 0xc05b7
0x0000000000134cb2 : mov ah, 0 ; add byte ptr [rax], al ; bswap eax ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x0000000000134b57 : mov ah, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000109551 : mov ah, 0 ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10956e ; ret
0x0000000000199704 : mov ah, 0x13 ; add dword ptr [rax], eax ; xor al, 0x9e ; cld ; dec esp ; adc eax, dword ptr [rcx] ; add byte ptr [rdi + rdi*4 - 4], dh ; jmp rsp
0x000000000019978c : mov ah, 0x16 ; add dword ptr [rax], eax ; push rsp ; movabs eax, dword ptr [0xa164000116ccfffd] ; std ; jmp rsp
0x00000000001ab80c : mov ah, 0x1e ; add dword ptr [rax], eax ; xor ch, cl ; hlt ; jmp qword ptr [rcx]
0x00000000000d5e8d : mov ah, 0x24 ; add byte ptr [rax], 0 ; add byte ptr [rcx + 0x63], cl ; ret 0x8b48
0x000000000012fbd9 : mov ah, 0x24 ; add byte ptr [rdx], ch ; add byte ptr [rax], al ; mov rdi, rbx ; mov rcx, qword ptr [rsp] ; call rcx
0x000000000012f634 : mov ah, 0x24 ; enter 0, 0 ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00000000000b6c2b : mov ah, 0x24 ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000046a89 : mov ah, 0x24 ; nop ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x8b44
0x00000000000bc68c : mov ah, 0x24 ; test al, 0 ; add byte ptr [rax], al ; mov rsi, qword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000001a11cc : mov ah, 0x25 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x13], dh ; jmp qword ptr [rcx]
0x000000000019644c : mov ah, 0x26 ; add dword ptr [rax], eax ; in al, 0x22 ; dec esp ; add dword ptr es:[rax], eax ; push rsp ; and esi, edx ; jmp rsp
0x0000000000196474 : mov ah, 0x27 ; add dword ptr [rax], eax ; push rsp ; pop rsi ; jmp rsp
0x000000000013ab5a : mov ah, 0x28 ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x00000000001ac20c : mov ah, 0x28 ; add dword ptr [rax], eax ; mov al, 0xb ; cmc ; jmp rcx
0x00000000001ac40c : mov ah, 0x2a ; add dword ptr [rax], eax ; jo 0x1ac42e ; cmc ; call qword ptr [rbx]
0x0000000000199204 : mov ah, 0x49 ; add al, byte ptr [rax] ; je 0x1991e8 ; cli ; jmp rsp
0x000000000005c0cb : mov ah, 0x49 ; mov eax, dword ptr [rsp + 8] ; lea rdx, qword ptr [rax + 8] ; mov qword ptr [r12 + 8], rdx ; jmp 0x5c0ae
0x0000000000196a04 : mov ah, 0x4c ; add dword ptr [rax], eax ; add al, 0xab ; jmp rsp
0x00000000001949bc : mov ah, 0x78 ; add byte ptr [rax], al ; adc edx, ebp ; call rsp
0x0000000000195e10 : mov ah, 0x91 ; out dx, eax ; dec esp ; std ; add byte ptr [rax], al ; in al, -0x6f ; out dx, eax ; jmp rsp
0x0000000000194f2c : mov ah, 0x96 ; add byte ptr [rax], al ; and al, 0x41 ; jmp 0x194f3a
0x00000000000908f8 : mov ah, 0x9a ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x000000000019531c : mov ah, 0xaf ; add byte ptr [rax], al ; add al, 0xb5 ; in eax, dx ; jmp rsp
0x00000000000753c0 : mov ah, 0xba ; xor al, 0 ; mov dword ptr fs:[rax], 9 ; mov eax, 0xffffffff ; ret
0x000000000019554c : mov ah, 0xbf ; add byte ptr [rax], al ; in al, -1 ; in eax, dx ; jmp rsp
0x000000000019800c : mov ah, 0xc9 ; add dword ptr [rax], eax ; test byte ptr [rbx], bh ; clc ; dec esp ; leave ; add dword ptr [rax], eax ; cmp al, 0xf8 ; jmp rsp
0x000000000019572c : mov ah, 0xcd ; add byte ptr [rax], al ; in al, 0x42 ; out dx, al ; call rsp
0x000000000019814c : mov ah, 0xd0 ; add dword ptr [rax], eax ; and al, 0x54 ; clc ; dec esp ; rol byte ptr [rcx], 1 ; add byte ptr [rsp + rdx*2 - 8], ah ; jmp rsp
0x000000000019847c : mov ah, 0xe7 ; add dword ptr [rax], eax ; in al, -0x32 ; clc ; dec esp ; out 1, eax ; add byte ptr [rdi + rcx*8], dh ; clc ; jmp rsp
0x000000000019856c : mov ah, 0xee ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; add edi, ecx ; jmp rsp
0x00000000000b0b39 : mov ah, 0xf4 ; add byte ptr [rax], 0 ; add byte ptr [rcx], ch ; ror dword ptr [rax - 0x2d], 1 ; out 0x89, al ; ror dword ptr [rax - 0x77], 1 ; ret 0xd348
0x00000000001a8f0c : mov ah, 0xf5 ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x0000000000195d24 : mov ah, 0xf7 ; add byte ptr [rax], al ; and al, 0x65 ; out dx, eax ; jmp rsp
0x0000000000195e0c : mov ah, 0xfd ; add byte ptr [rax], al ; mov ah, 0x91 ; out dx, eax ; dec esp ; std ; add byte ptr [rax], al ; in al, -0x6f ; out dx, eax ; jmp rsp
0x0000000000195e6c : mov ah, 0xff ; add byte ptr [rax], al ; hlt ; mov dl, 0xef ; dec esp ; inc dword ptr [rax] ; add byte ptr [rbx + rsi*4], dh ; out dx, eax ; jmp rsp
0x000000000004f532 : mov ah, bl ; add byte ptr ss:[rax - 0x77], cl ; ret 0x2948
0x00000000001a49bd : mov al, 0 ; add byte ptr [rax - 0x5d], dh ; cli ; call qword ptr [rax]
0x00000000000908f0 : mov al, 0 ; add byte ptr [rax], al ; adc byte ptr [rax - 0x73], cl ; add eax, 0x19ab4 ; cmove rax, rdx ; ret
0x000000000008bda0 : mov al, 0 ; add byte ptr [rax], al ; add al, 0 ; add byte ptr [rax], al ; je 0x8bdc2 ; lea rax, qword ptr [rip + 0xe2edf] ; ret
0x0000000000117f48 : mov al, 0 ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; jne 0x117f6a ; lea rax, qword ptr [rip + 0x3b747] ; ret
0x0000000000118008 : mov al, 0 ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; jne 0x11802a ; lea rax, qword ptr [rip + 0x3e057] ; ret
0x00000000001180c8 : mov al, 0 ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; jne 0x1180ea ; lea rax, qword ptr [rip + 0x3b5a7] ; ret
0x000000000009135f : mov al, 0 ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; jne 0x91381 ; lea rax, qword ptr [rip + 0xc4d10] ; ret
0x0000000000091a0f : mov al, 0 ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; jne 0x91a31 ; lea rax, qword ptr [rip + 0xc1c70] ; ret
0x00000000000966cf : mov al, 0 ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; jne 0x966f1 ; lea rax, qword ptr [rip + 0xbcfd0] ; ret
0x00000000000ede7a : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000cd81e : mov al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f4474 : mov al, 0 ; add byte ptr [rax], al ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000109281 : mov al, 0 ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10929e ; ret
0x0000000000186218 : mov al, 0x21 ; jmp rax
0x0000000000186244 : mov al, 0x22 ; inc eax ; and dh, dl ; jmp rax
0x00000000001307ec : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x00000000001307a4 : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000018628c : mov al, 0x24 ; call rax
0x00000000001862ac : mov al, 0x25 ; call rax
0x00000000001862cc : mov al, 0x25 ; inc eax ; and eax, 0x25d0fff2 ; jmp rax
0x000000000012aa42 : mov al, 0x29 ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; jmp rax
0x00000000001938f0 : mov al, 0x41 ; cld ; push qword ptr [rax + 0x43] ; cld ; inc dword ptr [rax + 0x45] ; cld ; jmp qword ptr [rax]
0x0000000000021dcc : mov al, 0x43 ; adc al, byte ptr [rax] ; mov rdi, r12 ; mov rcx, qword ptr [rbp - 0x60] ; call rcx
0x000000000010299c : mov al, 0x43 ; add dword ptr [rax], eax ; add rsp, 0x80 ; add rsp, 8 ; ret
0x00000000000c073a : mov al, 0x48 ; lea esi, dword ptr [rip + 0xc6152] ; add rax, rsi ; jmp rax
0x0000000000193bd0 : mov al, 0x79 ; cld ; inc dword ptr [rax + 0x79] ; cld ; call rax
0x00000000001939b8 : mov al, 0x7c ; cld ; inc dword ptr [rax + 0x7c] ; cld ; call rax
0x00000000001942dc : mov al, 0x94 ; cld ; push qword ptr [rax] ; xchg eax, esp ; cld ; jmp qword ptr [rax + 0x10fffc93]
0x00000000001942f4 : mov al, 0x99 ; cld ; push qword ptr [rax] ; cdq ; cld ; jmp qword ptr [rax + 0x20fffc98]
0x00000000001940c8 : mov al, 0xa0 ; cld ; inc dword ptr [rax - 0x60] ; cld ; call rax
0x0000000000193374 : mov al, 0xbd ; sti ; push qword ptr [rax] ; mov edi, 0xc0b0fffb ; sti ; push qword ptr [rax] ; ret 0xfffb
0x000000000019337c : mov al, 0xc0 ; sti ; push qword ptr [rax] ; ret 0xfffb
0x00000000001933a4 : mov al, 0xcf ; sti ; push qword ptr [rax] ; sar ebx, 1 ; jmp rax
0x0000000000186084 : mov al, 0xd ; inc eax ; or eax, 0xdd0fff2 ; jmp rax
0x0000000000155f7c : mov al, 0xd6 ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000000c468 : mov al, 0xd9 ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001860f8 : mov al, 0xf ; inc eax ; pslld mm7, mm7 ; ror byte ptr [rdi], 1 ; jmp rax
0x00000000001869cd : mov al, 0xf3 ; jmp rax
0x00000000001889bd : mov al, 0xf6 ; dec dword ptr [rax] ; mov al, 0xf6 ; dec dword ptr [rax] ; mov al, 0xf6 ; dec dword ptr [rax] ; mov al, 0xf6 ; push rbp ; ret
0x00000000001889c1 : mov al, 0xf6 ; dec dword ptr [rax] ; mov al, 0xf6 ; dec dword ptr [rax] ; mov al, 0xf6 ; push rbp ; ret
0x00000000001889c5 : mov al, 0xf6 ; dec dword ptr [rax] ; mov al, 0xf6 ; push rbp ; ret
0x00000000001a5b89 : mov al, 0xfa ; call qword ptr [rax]
0x0000000000193351 : mov al, 0xfb ; push qword ptr [rax - 0x4f] ; sti ; inc eax ; mov dl, 0xfb ; call qword ptr [rax]
0x00000000000e1fdb : mov al, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x848b
0x00000000000639d5 : mov al, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0xbe08
0x000000000016a34c : mov al, 1 ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000000ff87c : mov al, 3 ; add byte ptr [rax], al ; test rax, rax ; jne 0xff867 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000a6cbc : mov al, 4 ; add byte ptr [rax], al ; ret
0x00000000000a68bc : mov al, 8 ; add byte ptr [rax], al ; ret
0x0000000000116ea0 : mov al, bh ; sub al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000f8762 : mov al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f8441 : mov al, byte ptr [rax] ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf845e ; ret
0x000000000016a172 : mov al, byte ptr [rbx] ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000001682a6 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x00000000000a2deb : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000001682d4 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x00000000000a2e19 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000a2e9d : mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x0000000000168280 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00000000000a2dc5 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000001682e4 : mov ax, word ptr [rcx + 4] ; mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x00000000000a2e39 : mov ax, word ptr [rcx + 4] ; mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00000000000a2ebd : mov ax, word ptr [rcx + 8] ; mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x0000000000168290 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x00000000001682a0 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x00000000000a2de5 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000000a2dd5 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000001a50c5 : mov bh, 0 ; add byte ptr [rax + 0x3d], cl ; out dx, eax ; jmp rsi
0x0000000000187ce0 : mov bh, 0x2f ; cmc ; dec dword ptr [rdi + rbp] ; cmc ; push qword ptr [rdi - 0x14000ad1] ; cmc ; call rax
0x0000000000085764 : mov bh, 0x33 ; add byte ptr [rdi + rax*8], ah ; or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000029b06 : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1a76
0x00000000000c5a6d : mov bh, 0x48 ; add eax, edi ; jmp rax
0x000000000007c356 : mov bh, 0x66 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000015e30d : mov bh, 0x7b ; add al, byte ptr [rax] ; movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000134c09 : mov bh, 0x81 ; mov byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdx + 0x6c], ax ; mov eax, 1 ; ret
0x000000000005413f : mov bh, 0x84 ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000003b444 : mov bh, 0xc9 ; or eax, ecx ; cdqe ; mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000156a35 : mov bh, 0xcd ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000e0172 : mov bh, 0xf ; mov word ptr [rax - 0x76ffffff], ss ; ret 0xd139
0x000000000010426e : mov bh, 0xf1 ; dec dword ptr [rax - 0x75] ; jge 0x10427c ; call rbx
0x0000000000153c75 : mov bh, 0xf9 ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001ab3e9 : mov bh, 0xf9 ; call qword ptr [rax]
0x000000000010a463 : mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000001166c3 : mov bh, 4 ; push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x00000000000fddc5 : mov bh, 7 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000001a5799 : mov bh, bl ; call qword ptr [rax]
0x0000000000116ba2 : mov bh, bl ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x116bba ; xor eax, eax ; ret
0x000000000003a98b : mov bh, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000001168a2 : mov bh, dh ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x1168ba ; xor eax, eax ; ret
0x0000000000109614 : mov bl, 0 ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x109631 ; ret
0x000000000017064e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000013abad : mov bl, 0x28 ; add byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + rcx + 0x48], 1 ; add esp, 8 ; ret
0x000000000013abdd : mov bl, 0x28 ; add byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + rcx + 0x48], 1 ; sub eax, -0x80 ; add rsp, 8 ; ret
0x0000000000035ab4 : mov bl, 0x38 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000006f759 : mov bl, 0x88 ; add byte ptr [rax], al ; add byte ptr [rbx + 0x7401046e], al ; mov rax, rdx ; pop rbx ; ret
0x00000000001366c9 : mov bl, 0x92 ; out dx, al ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x00000000000715c9 : mov bl, 0xe0 ; add byte ptr [rax], al ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rsp ; call 0x4d89f
0x00000000000965a9 : mov bl, 0xe3 ; or eax, 0x8a0c8b00 ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000003b09 : mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000122514 : mov bl, 6 ; add al, ch ; and al, 0x98 ; add byte ptr [rax], al ; test rax, rax ; je 0x122536 ; mov rdi, rbx ; call rax
0x0000000000126601 : mov byte ptr [r10 + 1], r8b ; add r10, 2 ; mov qword ptr [rax], r10 ; lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x000000000011835f : mov byte ptr [r9 + 3], r8b ; jne 0x118301 ; mov rax, rdi ; ret
0x00000000000f7342 : mov byte ptr [rax + 0x16b8ff], 0 ; add byte ptr [rsp + rax - 0xd], dh ; ret
0x000000000006eeab : mov byte ptr [rax + 0x48000000], ah ; mov dword ptr [rcx + 0x130], edx ; ret
0x0000000000170267 : mov byte ptr [rax + 0x75], 0xc5 ; movzx eax, byte ptr [rdi - 9] ; movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x00000000000fdd4f : mov byte ptr [rax + 0xc], 0 ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000038648 : mov byte ptr [rax + 0xe], cl ; mov rdx, r13 ; mov rsi, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call r15
0x0000000000131d7f : mov byte ptr [rax + 6], cl ; mov byte ptr [r8 + 7], dl ; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000131d83 : mov byte ptr [rax + 7], dl ; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001366c4 : mov byte ptr [rax + rax], al ; add al, ch ; mov bl, 0x92 ; out dx, al ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x00000000001364b4 : mov byte ptr [rax + rax], al ; add al, ch ; ret
0x00000000000f85d4 : mov byte ptr [rax + rax], ch ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000000f85ec : mov byte ptr [rax + rax], ch ; mov dword ptr fs:[rax], 0x5f ; mov eax, 0xffffffff ; ret
0x00000000000f8614 : mov byte ptr [rax + rax], ch ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f85bc : mov byte ptr [rax + rax], ch ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000045dc9 : mov byte ptr [rax + rdx], 0 ; ret
0x00000000001a5888 : mov byte ptr [rax + rsi*8], al ; jmp qword ptr [rbx]
0x000000000004e8c6 : mov byte ptr [rax - 0x73], cl ; or eax, 0x2b2 ; add rax, rcx ; jmp rax
0x000000000004bb16 : mov byte ptr [rax - 0x73], cl ; or eax, 0xb87 ; add rax, rcx ; jmp rax
0x000000000005ab8c : mov byte ptr [rax - 0x73], cl ; or eax, 0xfffffa6c ; add rax, rcx ; jmp rax
0x000000000004f04c : mov byte ptr [rax - 0x73], cl ; or eax, 0xfffffb2c ; add rax, rcx ; jmp rax
0x000000000005aa94 : mov byte ptr [rax - 0x73], cl ; or eax, 0xfffffb64 ; add rax, rcx ; jmp rax
0x000000000004eed8 : mov byte ptr [rax - 0x73], cl ; or eax, 0xfffffca0 ; add rax, rcx ; jmp rax
0x000000000005a8da : mov byte ptr [rax - 0x73], cl ; or eax, 0xfffffd1e ; add rax, rcx ; jmp rax
0x0000000000078efd : mov byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000009eccb : mov byte ptr [rax - 0x77], cl ; ret
0x000000000012c16f : mov byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000236a3 : mov byte ptr [rax - 0x7c], 0xf6 ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x00000000001254ff : mov byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x00000000001864d8 : mov byte ptr [rax - 0xe], cl ; inc eax ; jmp rax
0x000000000003c640 : mov byte ptr [rax], 0 ; add byte ptr [rax], 0xf ; xchg eax, ebp ; ret
0x00000000000791ee : mov byte ptr [rax], 0 ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000a04a9 : mov byte ptr [rax], 0 ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000a0e49 : mov byte ptr [rax], 0 ; jbe 0xa0e2d ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013a595 : mov byte ptr [rax], 0 ; jle 0x13a5b3 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001064a8 : mov byte ptr [rax], 0xa ; add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000010611e : mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000126f49 : mov byte ptr [rax], 1 ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000050d67 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x3e], cl ; mov qword ptr [rbp - 0x88], r8 ; call 0xad071
0x0000000000036f5f : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000035c26 : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000024f3a : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, r15d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006c3af : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; ret
0x000000000006c403 : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdx + 8], rsi ; mov dword ptr [rdx + 4], 1 ; ret
0x0000000000136dad : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x136dcf ; mov rdi, rbp ; call rax
0x000000000013909a : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008b03c : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, r12 ; call rax
0x0000000000134c0b : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdx + 0x6c], ax ; mov eax, 1 ; ret
0x0000000000035c0f : mov byte ptr [rax], al ; add byte ptr [rax], al ; neg ebx ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000ca85b : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000036f3e : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000036fae : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000006f75a : mov byte ptr [rax], al ; add byte ptr [rax], al ; sub dword ptr [rsi + 4], 1 ; je 0x6f7a0 ; mov rax, rdx ; pop rbx ; ret
0x000000000007889a : mov byte ptr [rax], al ; add byte ptr [rax], al ; sub dword ptr [rsi + 4], 1 ; je 0x788e0 ; mov rax, rdx ; pop rbx ; ret
0x0000000000106ba8 : mov byte ptr [rax], al ; add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0x106bcf ; ret
0x0000000000194cdd : mov byte ptr [rax], al ; add byte ptr [rsi + rbp*2 - 0x16], ah ; jmp rsp
0x000000000011074d : mov byte ptr [rax], bl ; movsx eax, bl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000005c390 : mov byte ptr [rax], bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005c391 : mov byte ptr [rax], ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a5a12 : mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000014d382 : mov byte ptr [rbp + 0x48d974d2], 0x63 ; ror dword ptr [rax + 1], -8 ; sub rax, r8 ; ret
0x000000000014d4be : mov byte ptr [rbp + 0x48dd74d2], 0x63 ; ror dword ptr [rax + 1], -8 ; ret
0x000000000008fc0a : mov byte ptr [rbp + rax], 0 ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000004e25c : mov byte ptr [rbp - 0x4e8], 0x20 ; mov dword ptr [rbp - 0x4d8], 1 ; jmp rax
0x00000000000e73a5 : mov byte ptr [rbp - 0x77], 0x87 ; add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0xc748
0x0000000000126940 : mov byte ptr [rbx + 1], bpl ; mov byte ptr [rbx + 2], 0 ; mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000126941 : mov byte ptr [rbx + 1], ch ; mov byte ptr [rbx + 2], 0 ; mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000126944 : mov byte ptr [rbx + 2], 0 ; mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000146731 : mov byte ptr [rbx + rcx*4 + 0xa], al ; mov rdx, r13 ; add r9, qword ptr [rbp - 0x88] ; call rax
0x000000000004ab4d : mov byte ptr [rbx], 0 ; mov rax, rbx ; add rsp, 0x440 ; pop rbx ; ret
0x00000000000ff206 : mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x0000000000002fa6 : mov byte ptr [rbx], cl ; and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000118360 : mov byte ptr [rcx + 3], al ; jne 0x118300 ; mov rax, rdi ; ret
0x000000000002bc09 : mov byte ptr [rcx + rax - 0x3a], cl ; jmp rsi
0x0000000000130001 : mov byte ptr [rcx + rax - 0x3e], cl ; jmp rdx
0x0000000000197f7d : mov byte ptr [rcx], 0 ; je 0x197fba ; clc ; inc dword ptr [rsi + rax*8 + 0x2ad40001] ; clc ; call rsp
0x0000000000144a18 : mov byte ptr [rcx], al ; add byte ptr [rax], al ; mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000014455f : mov byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000a862b : mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a77e8 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a785e : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a86b1 : mov byte ptr [rdi + 0x14], dl ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a8733 : mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a78e0 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a0983 : mov byte ptr [rdi + 2], 0 ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a08f3 : mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x00000000000a7696 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a0834 : mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a09a2 : mov byte ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a0912 : mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000a0854 : mov byte ptr [rdi + 4], cl ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a76b2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a84e7 : mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a087a : mov byte ptr [rdi + 6], al ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000001329a4 : mov byte ptr [rdi + 6], dl ; movzx edx, byte ptr [rdi + 7] ; and edx, 0x7f ; movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x00000000000a0879 : mov byte ptr [rdi + 6], r8b ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000004aac6 : mov byte ptr [rdi + 8], 0 ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00000000000a7703 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a8539 : mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000079d10 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x0000000000126507 : mov byte ptr [rdi], 0x75 ; adc eax, 0x8303eec1 ; out dx, al ; add dword ptr [rax - 0x78], eax ; ja 0x126524 ; ret
0x00000000000a0811 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a7670 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000a8492 : mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a0810 : mov byte ptr [rdi], sil ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a5b9a : mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00000000000a2dc2 : mov byte ptr [rdx + 1], ah ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000126602 : mov byte ptr [rdx + 1], al ; add r10, 2 ; mov qword ptr [rax], r10 ; lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x00000000000a2dd2 : mov byte ptr [rdx + 2], ah ; mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000001682a9 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x00000000000a2dee : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000000a2e02 : mov byte ptr [rdx + 4], ah ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000001682d7 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x00000000000a2e1c : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000a2e12 : mov byte ptr [rdx + 5], ah ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000a2e52 : mov byte ptr [rdx + 7], ah ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000000a5b30 : mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000a2e72 : mov byte ptr [rdx + 8], ah ; movlpd xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000a2ea0 : mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x000000000018a050 : mov byte ptr [rdx + rdi*8 - 0x5537701], ch ; jmp rax
0x000000000018a05c : mov byte ptr [rdx + rdi*8 - 0x5540f01], ch ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; cli ; call qword ptr [rax]
0x0000000000185df0 : mov byte ptr [rdx - 0x5567000f], ch ; int1 ; jmp qword ptr [rax]
0x0000000000168282 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00000000000a2dc7 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000100894 : mov byte ptr [rip + 0x2c3836], dh ; mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x0000000000100893 : mov byte ptr [rip + 0x2c3836], sil ; mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x0000000000085a2f : mov byte ptr [rsi + rbx], cl ; add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000000858bf : mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x0000000000085a2e : mov byte ptr [rsi + rbx], r9b ; add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000000858be : mov byte ptr [rsi + rbx], r9b ; mov rax, rsi ; pop rbx ; ret
0x000000000004abaf : mov byte ptr [rsi], al ; jne 0x4ab9f ; mov rax, rsi ; ret
0x000000000004ac33 : mov byte ptr [rsi], al ; jne 0x4ac17 ; mov rax, rsi ; ret
0x0000000000083f44 : mov byte ptr [rsp + 0x28], bl ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x0000000000083f43 : mov byte ptr [rsp + 0x28], r11b ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x0000000000143284 : mov ch, 0 ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x1432a1 ; ret
0x00000000000858d4 : mov ch, 0x33 ; add byte ptr [rcx], dh ; mul byte ptr [rdi + rax*8] ; or al, 0 ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x000000000014666e : mov ch, 0x60 ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x73], cl ; lodsb al, byte ptr [rsi] ; and al, 0x70 ; add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000130ee7 : mov ch, 0x7e ; std ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x0000000000118087 : mov ch, 0x86 ; add eax, dword ptr [rax] ; ret
0x0000000000076a8d : mov ch, 0x90 ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x00000000000769aa : mov ch, 0x90 ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x0000000000086817 : mov ch, 0xa7 ; xor eax, dword ptr [rax] ; mov qword ptr [rax], rsi ; mov rax, qword ptr [rip + 0x33a6bb] ; mov qword ptr [rax], rdi ; ret
0x000000000016c616 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000105067 : mov ch, 6 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000000f839c : mov ch, byte ptr [rax + rax] ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000000f8424 : mov ch, byte ptr [rax + rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8384 : mov ch, byte ptr [rax + rax] ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000030172 : mov ch, byte ptr [rcx] ; cmp dword ptr [rax], eax ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000abff0 : mov ch, dh ; and ch, 0xf ; je 0xac01b ; add rax, 2 ; ret
0x00000000001093a1 : mov cl, 0 ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x1093be ; ret
0x00000000001039f5 : mov cl, 0 ; add byte ptr [rax], al ; xor eax, eax ; cmp qword ptr [rsi], 0 ; je 0x103a15 ; ret
0x0000000000090d8b : mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000010af8e : mov cl, 0x15 ; mov word ptr [rdx + 0x2b], fs ; add byte ptr [rdx + rax + 0x5d], dh ; ret
0x00000000000fdfc3 : mov cl, 0x2e ; sub al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000857c0 : mov cl, 0x35 ; cmp al, bl ; xor eax, dword ptr [rax] ; jne 0x857e1 ; jmp 0x857fb
0x000000000011704b : mov cl, 0x3d ; div esi ; sub al, byte ptr [rax] ; cmp rdx, rax ; jne 0x11703c ; ret
0x00000000001378d9 : mov cl, 0x48 ; add eax, ecx ; jmp rax
0x000000000013efe8 : mov cl, 0x48 ; shr edx, 3 ; add rax, rcx ; jmp rax
0x00000000000f99c3 : mov cl, 0x74 ; sub al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001092c3 : mov cl, 0x7b ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000008aa43 : mov cl, 0x8d ; xor eax, dword ptr [rax] ; mov dword ptr [rip + 0x338d9b], 1 ; mov eax, ebx ; pop rbx ; ret
0x000000000008a92f : mov cl, 0x8e ; xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001075c3 : mov cl, 0x98 ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000106bc3 : mov cl, 0xa2 ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000d3fe7 : mov cl, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; mov cl, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret
0x00000000000d3fee : mov cl, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret
0x00000000000357c3 : mov cl, 0xb6 ; cmp byte ptr [rax], al ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x0000000000193355 : mov cl, 0xfb ; inc eax ; mov dl, 0xfb ; call qword ptr [rax]
0x0000000000116913 : mov cl, 0xfc ; sub al, byte ptr [rax] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; jmp rax
0x000000000002c859 : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x578b
0x0000000000115af0 : mov cl, byte ptr [rax - 0x7d] ; ret
0x00000000000a0943 : mov cl, byte ptr [rcx + rax - 0x30] ; jmp rax
0x00000000000ff536 : mov cl, byte ptr [rdx + 0x2c] ; add byte ptr [rax - 0x73], cl ; add eax, 0x2c4a57 ; add rsp, 8 ; ret
0x00000000000a8624 : mov cl, byte ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x0000000000048162 : mov cs, word ptr [rax + 1] ; int1 ; cmp r9d, 0x2f ; jmp rcx
0x0000000000110691 : mov cs, word ptr [rax - 0x39] ; ret 0xffff
0x0000000000135ece : mov cs, word ptr [rbp] ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bf06e : mov cs, word ptr [rdx + 0x30] ; add byte ptr [rdi], cl ; cmp dword ptr [rsi + 0x48000000], -0x77 ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000000a77f4 : mov cx, word ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a8644 : mov cx, word ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a84b0 : mov cx, word ptr [rsi] ; mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a7690 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000001432d4 : mov dh, 0 ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x1432f1 ; ret
0x000000000008d71d : mov dh, 0x14 ; adc dword ptr [rax + 0x437402fa], eax ; cmp dl, 3 ; je 0x8d74f ; movsx eax, dl ; ret
0x000000000008d71d : mov dh, 0x14 ; adc dword ptr [rax + 0x437402fa], eax ; cmp dl, 3 ; je 0x8d750 ; movsx eax, dl ; ret
0x00000000000d087c : mov dh, 0x41 ; add dword ptr [rax - 0x7d], ecx ; rol dword ptr [rcx], -0x7c ; sal byte ptr [rbp - 0x2b], 0xf6 ; ret 0xf05
0x00000000000cfb09 : mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000468e5 : mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000011f945 : mov dh, 0x47 ; add cl, byte ptr [rax - 0x77] ; fucompi st(0) ; add byte ptr [rbp - 0xd], ch ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x0000000000126a67 : mov dh, 0x47 ; add ecx, eax ; loopne 0x126a7c ; cdqe ; shr rax, 4 ; ret
0x000000000003ce85 : mov dh, 0x48 ; add al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000003cf7d : mov dh, 0x48 ; or al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000002918d : mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d27e1 : mov dh, 0x4b ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000400ca : mov dh, 0x70 ; add al, 0x8d ; push rsi ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000000401c2 : mov dh, 0x70 ; or al, 0x8d ; push rsi ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000000907b9 : mov dh, 0x75 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000003b9f2 : mov dh, 0x7c ; adc eax, 0x7c384000 ; adc eax, 0x9f850f00 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000129896 : mov dh, 0x7d ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rax]
0x000000000008b6c5 : mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x0000000000096fc5 : mov dh, 0xc ; xchg byte ptr [rax - 0x73], cl ; add dword ptr [r9 + 0x39], ecx ; ret 0x8949
0x000000000005c806 : mov dh, 0xc0 ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x00000000000c166b : mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000006d178 : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000cea47 : mov dh, 0xc0 ; neg rax ; or rax, 0x20 ; ret
0x00000000000cefff : mov dh, 0xc0 ; neg rax ; or rax, 0x31069 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000ce917 : mov dh, 0xc0 ; neg rax ; or rax, 0x7f ; ret
0x00000000000ceb27 : mov dh, 0xc0 ; neg rax ; or rax, 1 ; ret
0x0000000000021461 : mov dh, 0xc0 ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x00000000000aaca1 : mov dh, 0xc2 ; and dh, 0xf0 ; mov edx, 0 ; cmove rax, rdx ; pop rbx ; ret
0x0000000000091845 : mov dh, 0xc6 ; mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000017b3d0 : mov dh, 0xd ; add byte ptr [rax], al ; mov ecx, 0xbc00000d ; or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x00000000000aad31 : mov dh, 0xd1 ; mov eax, 0 ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000000c3901 : mov dh, 0xd6 ; movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x000000000005cc74 : mov dh, 0xdb ; movsxd rax, dword ptr [rcx + rbx*4] ; add rax, rcx ; jmp rax
0x00000000000da737 : mov dh, 0xed ; movsxd rax, dword ptr [rsi + rbp*4] ; add rax, rsi ; jmp rax
0x000000000010685b : mov dh, 0xf6 ; dec dword ptr [rax - 0x73] ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000c0735 : mov dh, 0xf6 ; movsxd rax, dword ptr [rax + rsi*4] ; lea rsi, qword ptr [rip + 0xc6152] ; add rax, rsi ; jmp rax
0x00000000000c3965 : mov dh, 0xfa ; movsxd rax, dword ptr [r8 + rdi*4] ; add rax, r8 ; jmp rax
0x00000000000da81b : mov dh, 0xff ; movsxd rax, dword ptr [rdx + r15*4] ; add rax, rdx ; jmp rax
0x0000000000108ec5 : mov dh, 0xff ; shr rax, 0xc ; xor al, al ; or eax, edi ; ret
0x0000000000098bd7 : mov dh, 1 ; test al, al ; jne 0x98c49 ; mov rax, rdi ; ret
0x00000000001ba5e0 : mov dh, 2 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000004aba9 : mov dh, 4 ; adc byte ptr [rax - 0x7b], cl ; dec dword ptr [rax + 0x48e57506] ; mov eax, esi ; ret
0x000000000004ac2d : mov dh, 4 ; cmp byte ptr [rax - 0x77], cl ; xlatb ; mov byte ptr [rsi], al ; jne 0x4ac1d ; mov rax, rsi ; ret
0x00000000000d80bc : mov dh, 4 ; xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000012221c : mov dh, 6 ; add al, ch ; sbb al, 0x9b ; add byte ptr [rax], al ; test rax, rax ; je 0x12223e ; mov rdi, rbx ; call rax
0x0000000000162894 : mov dh, 7 ; lea rdx, qword ptr [rip + 0x120c3] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000160334 : mov dh, 7 ; lea rdx, qword ptr [rip + 0x14623] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000001506c4 : mov dh, 7 ; lea rdx, qword ptr [rip + 0x24293] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014ed14 : mov dh, 7 ; lea rdx, qword ptr [rip + 0x25c43] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014d314 : mov dh, 7 ; lea rdx, qword ptr [rip + 0x27643] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014b344 : mov dh, 7 ; lea rdx, qword ptr [rip + 0x29613] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000000965a4 : mov dh, 7 ; lea rdx, qword ptr [rip + 0xde3b3] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000093ea4 : mov dh, 7 ; lea rdx, qword ptr [rip + 0xe0ab3] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000186d14 : mov dh, bl ; call rax
0x00000000000483c4 : mov dh, byte ptr [rdi] ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001095e4 : mov dl, 0 ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x109601 ; ret
0x00000000001725b9 : mov dl, 0x24 ; add byte ptr [rax - 0x73], cl ; sbb eax, 0x24b1dd ; sub rsp, 8 ; call 0x7e8b0
0x00000000000fe6c2 : mov dl, 0x27 ; sub al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cec4e : mov dl, 0x48 ; add eax, edx ; jmp rax
0x000000000010a5c2 : mov dl, 0x68 ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000036bd2 : mov dl, 0xa4 ; cmp byte ptr [rax], al ; ret
0x0000000000158c3a : mov dl, 0xaf ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000013aaea : mov dl, 0xb4 ; sub byte ptr [rax], al ; mov qword ptr fs:[rax], rdx ; ret
0x0000000000195e71 : mov dl, 0xef ; dec esp ; inc dword ptr [rax] ; add byte ptr [rbx + rsi*4], dh ; out dx, eax ; jmp rsp
0x000000000011b323 : mov dl, 0xf3 ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000018874d : mov dl, 0xf6 ; call qword ptr [rax]
0x0000000000188745 : mov dl, 0xf6 ; dec dword ptr [rax - 0x4e] ; idiv bh ; mov dl, 0xf6 ; call qword ptr [rax]
0x0000000000193359 : mov dl, 0xfb ; call qword ptr [rax]
0x000000000004e8ca : mov dl, 2 ; add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x000000000010540a : mov dl, 2 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000000e964f : mov dl, 3 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax - 0x77], 0x45 ; and byte ptr [rdi], cl ; test byte ptr [rcx - 0xa000000], dh ; ret
0x000000000016a14a : mov dl, 3 ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000025d9e : mov dl, al ; add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x00000000000a86a7 : mov dl, byte ptr [rsi + 0x14] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a84b3 : mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a84e2 : mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a8533 : mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a8490 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000108d74 : mov dword ptr [0x2d0], eax ; pop rax ; pop rdi ; call rax
0x0000000000108d6c : mov dword ptr [0x2d4], eax ; mov dword ptr fs:[0x2d0], eax ; pop rax ; pop rdi ; call rax
0x000000000012a17e : mov dword ptr [r12 + 0x40], ebp ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000730a9 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000074575 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rsi ; lea rdx, qword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000000730e9 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000074209 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000071837 : mov dword ptr [rax + 0x20], ecx ; mov dword ptr [rdx], ebx ; add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000074c46 : mov dword ptr [rax + 0x20], edx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000078d29 : mov dword ptr [rax + 0x20], edx ; pop rbx ; ret
0x0000000000072856 : mov dword ptr [rax + 0x28], ecx ; mov byte ptr [rdx], dil ; movzx eax, dil ; ret
0x0000000000074205 : mov dword ptr [rax + 0x28], edx ; mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000074101 : mov dword ptr [rax + 0x30], ebp ; mov qword ptr [rax + 0x38], r12 ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007312e : mov dword ptr [rax + 0x30], esi ; cmovne eax, edx ; mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000074105 : mov dword ptr [rax + 0x38], esp ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000730ad : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000073814 : mov dword ptr [rax + 0x40], edx ; mov rdx, rdi ; jbe 0x7374f ; mov eax, dword ptr [rsi] ; jmp 0x737f5
0x0000000000074579 : mov dword ptr [rax + 0x40], esi ; lea rdx, qword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000000742a7 : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x00000000000235d4 : mov dword ptr [rax + 0x4c], ecx ; movsx ecx, byte ptr [rdx + 0x1a] ; movsx edx, byte ptr [rdx + 0x1b] ; mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x000000000007429f : mov dword ptr [rax + 0x50], 0 ; mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x00000000000235df : mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000000235e2 : mov dword ptr [rax + 0x54], edx ; ret
0x0000000000131224 : mov dword ptr [rax + 0x58], eax ; mov eax, 1 ; ret
0x000000000013128f : mov dword ptr [rax + 0x58], ecx ; sub qword ptr [rax + 0x68], 4 ; mov eax, 1 ; ret
0x0000000000131220 : mov dword ptr [rax + 0x68], ecx ; mov qword ptr [rax + 0x58], r8 ; mov eax, 1 ; ret
0x0000000000002bce : mov dword ptr [rax + 0x76588ed], ebp ; or ah, byte ptr [rbp + 0xc] ; scasd eax, dword ptr [rdi] ; xbegin 0xfffffffff8c6efe2 ; ret
0x00000000000359d3 : mov dword ptr [rax + 0x90], edx ; add rsp, 0xd0 ; ret
0x00000000001199b6 : mov dword ptr [rax + 0xc], eax ; jne 0x11995c ; mov rax, rdi ; ret
0x00000000001199b5 : mov dword ptr [rax + 0xc], r8d ; jne 0x11995d ; mov rax, rdi ; ret
0x000000000007dfa2 : mov dword ptr [rax + 4], 0 ; mov qword ptr [rax + 8], 0 ; ret
0x000000000017347d : mov dword ptr [rax + 8], 0 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007dfaa : mov dword ptr [rax + 8], 0 ; ret
0x00000000000f7043 : mov dword ptr [rax + 8], ebp ; mov dword ptr [rbx + 4], edx ; add rsp, 8 ; xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000003a4e3 : mov dword ptr [rax + 8], edi ; mov qword ptr [rax], 4 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000100771 : mov dword ptr [rax + 8], edi ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000000730e2 : mov dword ptr [rax + 8], edx ; mov qword ptr [rax], rdx ; mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000078d21 : mov dword ptr [rax + 8], edx ; mov rdx, qword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x0000000000048188 : mov dword ptr [rax + rax*8 - 0x28], ecx ; nop dword ptr [rax] ; add rax, 1 ; cmp edx, eax ; jg 0x48169 ; ret
0x00000000000f8574 : mov dword ptr [rax + rax], ebp ; mov dword ptr fs:[rax], 0x26 ; mov eax, 0xffffffff ; ret
0x00000000000f8524 : mov dword ptr [rax + rax], ebp ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000013ad1c : mov dword ptr [rax + rdx*8 - 4], ecx ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c54fe : mov dword ptr [rax - 0x15], 0xef8948cc ; mov esi, 0x30 ; add rbp, r14 ; call 0x91821
0x00000000000f85eb : mov dword ptr [rax - 0x389bffd4], ecx ; add byte ptr [rdi], bl ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000001129ff : mov dword ptr [rax - 0x7b], ecx ; test byte ptr [rdi], 0x95 ; ret 0xc031
0x000000000006429a : mov dword ptr [rax - 0x7d], ecx ; ret
0x000000000013e6fc : mov dword ptr [rax - 4], edx ; mov qword ptr [rdi + 0x18], rax ; mov eax, 1 ; ret
0x00000000000ff3e9 : mov dword ptr [rax], 0 ; mov rax, qword ptr [rsp - 0x50] ; ret
0x000000000012687b : mov dword ptr [rax], 0 ; movsxd rdx, eax ; add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x000000000013ee4d : mov dword ptr [rax], 0 ; pop rbx ; ret
0x00000000000c9000 : mov dword ptr [rax], 0x14 ; add rsp, 0x98 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000cbbf0 : mov dword ptr [rax], 0x16 ; add rsp, 0x18 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00000000000f8ec0 : mov dword ptr [rax], 0x16 ; add rsp, 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000001458e8 : mov dword ptr [rax], 0x16 ; mov eax, 0x16 ; ret
0x0000000000039f58 : mov dword ptr [rax], 0x16 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000357c8 : mov dword ptr [rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000000fcbf8 : mov dword ptr [rax], 0x16 ; mov eax, 1 ; ret
0x00000000000fe8a8 : mov dword ptr [rax], 0x16 ; mov eax, edi ; ret
0x00000000000ca1e5 : mov dword ptr [rax], 0x16 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000053765 : mov dword ptr [rax], 0x16 ; mov eax, esi ; ret
0x00000000000356d0 : mov dword ptr [rax], 0x16 ; mov rax, -1 ; ret
0x0000000000103ae8 : mov dword ptr [rax], 0x16 ; ret
0x000000000006f18a : mov dword ptr [rax], 0x16 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bbc18 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x00000000000795d8 : mov dword ptr [rax], 0x1c ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000034e20 : mov dword ptr [rax], 0x22 ; add rsp, 0x28 ; ret
0x0000000000035472 : mov dword ptr [rax], 0x22 ; add rsp, 8 ; ret
0x0000000000036458 : mov dword ptr [rax], 0x26 ; mov eax, 0xffffffff ; ret
0x00000000000fe568 : mov dword ptr [rax], 0x26 ; mov rax, -1 ; ret
0x0000000000034190 : mov dword ptr [rax], 0x2a ; mov rax, rcx ; ret
0x00000000000bbb0a : mov dword ptr [rax], 0x4b ; mov rax, rbx ; pop rbx ; ret
0x00000000000bbbf8 : mov dword ptr [rax], 0x4b ; xor eax, eax ; add rsp, 8 ; ret
0x00000000000bb97f : mov dword ptr [rax], 0x4b ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000107521 : mov dword ptr [rax], 0x50f0000 ; cmp rax, -0xfff ; jae 0x10753e ; ret
0x00000000000f85f0 : mov dword ptr [rax], 0x5f ; mov eax, 0xffffffff ; ret
0x0000000000088d7a : mov dword ptr [rax], 0xc ; add rsp, 0x10 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000122f38 : mov dword ptr [rax], 0xc ; add rsp, 0x18 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000110588 : mov dword ptr [rax], 0xc ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000fe4a8 : mov dword ptr [rax], 0xc ; mov eax, 0xffffffff ; ret
0x00000000000858da : mov dword ptr [rax], 0xc ; mov rax, rsi ; ret
0x0000000000089e0d : mov dword ptr [rax], 0xc ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008bb26 : mov dword ptr [rax], 0xc ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000085768 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x00000000001a608d : mov dword ptr [rax], 0xf0695000 ; jmp qword ptr [rdi]
0x00000000000fe494 : mov dword ptr [rax], 0xffffffff ; xor eax, eax ; ret
0x00000000000cddb0 : mov dword ptr [rax], 2 ; mov eax, 0xffffffff ; ret
0x00000000000c870a : mov dword ptr [rax], 2 ; mov rax, rdx ; ret
0x000000000003a306 : mov dword ptr [rax], 2 ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000107748 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x000000000003a4e7 : mov dword ptr [rax], 4 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006f7e0 : mov dword ptr [rax], 5 ; mov rax, rdx ; pop rbx ; ret
0x000000000012472e : mov dword ptr [rax], 6 ; add rsp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000341f8 : mov dword ptr [rax], 9 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000753c5 : mov dword ptr [rax], 9 ; mov eax, 0xffffffff ; ret
0x0000000000020da8 : mov dword ptr [rax], 9 ; mov eax, edi ; ret
0x00000000000abc93 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000f8411 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf842e ; ret
0x00000000000ec1c4 : mov dword ptr [rax], eax ; mov eax, 0xffffffff ; ret
0x00000000000d6bf4 : mov dword ptr [rax], ebp ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000063e54 : mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000146fcf : mov dword ptr [rax], ebx ; add rsp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x000000000014703a : mov dword ptr [rax], ebx ; mov eax, 1 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000719ba : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x00000000000217d4 : mov dword ptr [rax], ecx ; mov r15, rax ; mov qword ptr [rbp - 0xa0], rax ; call 0x8da3e
0x000000000003aa5b : mov dword ptr [rax], edi ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000000231e2 : mov dword ptr [rax], edi ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000100751 : mov dword ptr [rax], edi ; mov eax, 0xffffffff ; ret
0x00000000001268b1 : mov dword ptr [rax], edi ; mov qword ptr [r9], rcx ; ret
0x0000000000086826 : mov dword ptr [rax], edi ; ret
0x00000000000f8140 : mov dword ptr [rax], edx ; add rsp, 0x10 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000104560 : mov dword ptr [rax], edx ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000108c43 : mov dword ptr [rax], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000aca01 : mov dword ptr [rax], edx ; jne 0xac9fd ; ret
0x000000000012660a : mov dword ptr [rax], edx ; lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x000000000003af24 : mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x0000000000035a1a : mov dword ptr [rax], edx ; mov eax, 0xffffffff ; add rsp, 0xd0 ; ret
0x00000000000ec21a : mov dword ptr [rax], edx ; mov eax, 0xffffffff ; ret
0x0000000000130f63 : mov dword ptr [rax], edx ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000735dd : mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000126815 : mov dword ptr [rax], edx ; mov qword ptr [r9], r10 ; ret
0x00000000000730a6 : mov dword ptr [rax], edx ; mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000000730e6 : mov dword ptr [rax], edx ; mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000074202 : mov dword ptr [rax], edx ; mov qword ptr [rax + 0x28], rdx ; mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000002d943 : mov dword ptr [rax], edx ; ret
0x00000000000fe46c : mov dword ptr [rax], edx ; xor eax, eax ; cmp rdi, rdx ; ja 0xfe4aa ; ret
0x0000000000074581 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x00000000000d6bbb : mov dword ptr [rax], esi ; add dword ptr [rdi + 4], 1 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f16c3 : mov dword ptr [rax], esi ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008681c : mov dword ptr [rax], esi ; mov rax, qword ptr [rip + 0x33a6bb] ; mov qword ptr [rax], rdi ; ret
0x000000000008a9db : mov dword ptr [rax], esi ; xor eax, eax ; mov qword ptr [rip + 0x338e1a], rdx ; add rsp, 0x18 ; ret
0x00000000000fdbfa : mov dword ptr [rax], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fdc92 : mov dword ptr [rax], esp ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ec1c3 : mov dword ptr [rax], r8d ; mov eax, 0xffffffff ; ret
0x00000000000795a5 : mov dword ptr [rbp + 0x18], eax ; ja 0x795c4 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079652 : mov dword ptr [rbp + 0x18], eax ; ja 0x79676 ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000011074a : mov dword ptr [rbp + 0x38], edx ; mov byte ptr [rax], bl ; movsx eax, bl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000059804 : mov dword ptr [rbp - 0x1078], 0 ; jmp rax
0x000000000005a662 : mov dword ptr [rbp - 0x1080], 1 ; jmp rax
0x0000000000059c0b : mov dword ptr [rbp - 0x1088], 1 ; jmp rax
0x0000000000059c67 : mov dword ptr [rbp - 0x1090], 0x20 ; jmp rax
0x0000000000059c9d : mov dword ptr [rbp - 0x1098], 1 ; jmp rax
0x000000000005a9e4 : mov dword ptr [rbp - 0x10a8], 1 ; jmp rax
0x000000000005a6ba : mov dword ptr [rbp - 0x10b0], 0 ; jmp rax
0x000000000005a92d : mov dword ptr [rbp - 0x10b0], 1 ; jmp rax
0x00000000000598cd : mov dword ptr [rbp - 0x10b4], 0 ; jmp rax
0x000000000005a75e : mov dword ptr [rbp - 0x10b4], 1 ; jmp rax
0x000000000005aa36 : mov dword ptr [rbp - 0x10b8], 1 ; jmp rax
0x000000000004e200 : mov dword ptr [rbp - 0x4a8], 1 ; jmp rax
0x000000000004e5fa : mov dword ptr [rbp - 0x4b8], 1 ; jmp rax
0x000000000004dca3 : mov dword ptr [rbp - 0x4c8], 0 ; jmp rax
0x000000000004e263 : mov dword ptr [rbp - 0x4d8], 1 ; jmp rax
0x000000000004b855 : mov dword ptr [rbp - 0x4d8], eax ; mov rsi, r15 ; mov rdi, r14 ; call rax
0x000000000004b854 : mov dword ptr [rbp - 0x4d8], r8d ; mov rsi, r15 ; mov rdi, r14 ; call rax
0x000000000004dc9c : mov dword ptr [rbp - 0x4e0], ecx ; mov qword ptr [rbp - 0x4c8], 0 ; jmp rax
0x000000000004e299 : mov dword ptr [rbp - 0x4f0], 1 ; jmp rax
0x000000000004e85a : mov dword ptr [rbp - 0x4f8], 1 ; jmp rax
0x000000000004ef86 : mov dword ptr [rbp - 0x508], 1 ; jmp rax
0x000000000004f0a9 : mov dword ptr [rbp - 0x510], 1 ; jmp rax
0x0000000000057225 : mov dword ptr [rbp - 0x510], ebx ; mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x0000000000057224 : mov dword ptr [rbp - 0x510], r11d ; mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x000000000004efe2 : mov dword ptr [rbp - 0x518], 1 ; jmp rax
0x0000000000115ea5 : mov dword ptr [rbp - 0x70], edx ; mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00000000001161fc : mov dword ptr [rbp - 0x70], edx ; mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x000000000011603b : mov dword ptr [rbp - 0x70], edx ; mov edx, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000115f04 : mov dword ptr [rbp - 0x70], edx ; mov edx, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00000000001164e2 : mov dword ptr [rbp - 0x70], edx ; mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, qword ptr [rbp - 0x158] ; call rax
0x000000000011628b : mov dword ptr [rbp - 0x70], edx ; mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000115ac4 : mov dword ptr [rbp - 0x70], edx ; mov edx, dword ptr [rbx - 0x30] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x0000000000115f93 : mov dword ptr [rbp - 0x70], edx ; mov edx, dword ptr [rcx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000115a0b : mov dword ptr [rbp - 0x70], edx ; mov rdx, r13 ; call rax
0x0000000000115a03 : mov dword ptr [rbp - 0x80], 0 ; mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x00000000001164e8 : mov dword ptr [rbp - 0x80], edx ; mov rdx, qword ptr [rbp - 0x158] ; call rax
0x0000000000115f0a : mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x0000000000115aca : mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x0000000000115eac : mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000115f99 : mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000089f1c : mov dword ptr [rbp], eax ; je 0x8a01f ; mov rdx, r12 ; mov rdi, r15 ; call rax
0x000000000008a43c : mov dword ptr [rbp], eax ; je 0x8a61f ; mov rdx, r15 ; mov rdi, r8 ; call rax
0x000000000008b037 : mov dword ptr [rbp], eax ; je 0x8b0d7 ; mov rsi, rbp ; mov rdi, r12 ; call rax
0x000000000007c32a : mov dword ptr [rbp], ebp ; mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002adf4 : mov dword ptr [rbp], edi ; mov rax, qword ptr [rax + r12*8] ; test rax, rax ; je 0x2ae10 ; call rax
0x000000000003a87a : mov dword ptr [rbp], edx ; call rax
0x0000000000106d3a : mov dword ptr [rbp], esi ; mov qword ptr [rsp + 0x18], rax ; mov rdx, rax ; jmp 0x106d99
0x000000000007c329 : mov dword ptr [rbp], r13d ; mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000078d4d : mov dword ptr [rbx + 0x10], eax ; mov rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x0000000000079fa7 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x0000000000146246 : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000007fc81 : mov dword ptr [rbx + 0x10], ebp ; mov qword ptr [rbx + 0x18], rbp ; nop ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008b955 : mov dword ptr [rbx + 0x10], esp ; mov qword ptr [rbx + 0x20], rax ; mov qword ptr [rbx + 8], rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006d555 : mov dword ptr [rbx + 0x18], eax ; add rsp, 0x18 ; pop rbx ; mov rax, r12 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000079f9f : mov dword ptr [rbx + 0x18], eax ; mov qword ptr [rbx + 8], rax ; mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x00000000001461fe : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000007fc85 : mov dword ptr [rbx + 0x18], ebp ; nop ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000050a97 : mov dword ptr [rbx + 0x18], esi ; mov qword ptr [rcx + rdx*8], rax ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000006d4c5 : mov dword ptr [rbx + 0x20], eax ; add rsp, 0x18 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007f7dd : mov dword ptr [rbx + 0x28], eax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007d2cb : mov dword ptr [rbx + 0x30], eax ; mov qword ptr [rbx + 0x20], rax ; mov dword ptr [rbx], edx ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010ff03 : mov dword ptr [rbx + 0x40], eax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007af48 : mov dword ptr [rbx + 0x90], eax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007a67e : mov dword ptr [rbx + 0x90], esi ; mov qword ptr [rbx + 8], rax ; mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x000000000012f1cc : mov dword ptr [rbx + 2], eax ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000002a614 : mov dword ptr [rbx + 8], eax ; add rsp, 0x10 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079fa3 : mov dword ptr [rbx + 8], eax ; mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x000000000007a685 : mov dword ptr [rbx + 8], eax ; mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000bf1e4 : mov dword ptr [rbx + 8], eax ; mov rax, qword ptr [rip + 0x304902] ; lea rcx, qword ptr [rax + r9] ; mov rdx, rax ; jmp 0xbf20b
0x0000000000063e4a : mov dword ptr [rbx + 8], edx ; lea rdx, qword ptr [rax + 4] ; mov qword ptr [rbx], rdx ; mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007d65e : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009673d : mov dword ptr [rbx], 0 ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000012e947 : mov dword ptr [rbx], eax ; add rsp, 0x60 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000096723 : mov dword ptr [rbx], eax ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000089d1c : mov dword ptr [rbx], eax ; je 0x89e2b ; mov rsi, r14 ; call rax
0x0000000000146471 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000000a04a7 : mov dword ptr [rbx], edx ; mov byte ptr [rax], 0 ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000005c38e : mov dword ptr [rbx], edx ; mov byte ptr [rax], bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000063e52 : mov dword ptr [rbx], edx ; mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ba401 : mov dword ptr [rbx], esi ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000008040b : mov dword ptr [rbx], esi ; xor al, 0 ; add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000004aba6 : mov dword ptr [rcx + 0xf], 0x481004b6 ; test edi, edi ; mov byte ptr [rsi], al ; jne 0x4aba8 ; mov rax, rsi ; ret
0x00000000000dc23f : mov dword ptr [rcx], 0x24bc8948 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x000000000002458a : mov dword ptr [rcx], 0x83480b89 ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000023bc2 : mov dword ptr [rcx], 0x83481389 ; rol dword ptr [rax + rcx*2], -0x7d ; ret
0x000000000008ac6e : mov dword ptr [rcx], eax ; je 0x8ad91 ; mov rdx, rbp ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000035aba : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000c04bb : mov dword ptr [rcx], ecx ; xor byte ptr [rax], al ; mov dword ptr [rdx], eax ; xor edx, edx ; add rsp, 8 ; mov rax, rdx ; ret
0x0000000000080012 : mov dword ptr [rcx], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x000000000002e102 : mov dword ptr [rcx], edx ; mov rdx, qword ptr [rip + 0x392e25] ; mov qword ptr fs:[rdx], rax ; ret
0x000000000002d86e : mov dword ptr [rcx], esi ; cmp rax, rdx ; mov rdx, -1 ; cmove rax, rdx ; ret
0x000000000007d24b : mov dword ptr [rdi + 0x10], eax ; mov qword ptr [rdi + 0x18], rcx ; mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a77fd : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a864d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a783b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a868b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a78bd : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a870d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a785b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a86ae : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a78dd : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a8730 : mov dword ptr [rdi + 0x10], edx ; mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a7920 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a8770 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a7940 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a8790 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a7901 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a8751 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a7923 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a8773 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x000000000007d223 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000079107 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000a7905 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a8755 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a7943 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a8793 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000007d24f : mov dword ptr [rdi + 0x18], ecx ; mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000013e83e : mov dword ptr [rdi + 0x18], esi ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000013ee15 : mov dword ptr [rdi + 0x20], 0 ; mov qword ptr [rdi + 8], rax ; ret
0x000000000013e83a : mov dword ptr [rdi + 0x20], esi ; mov qword ptr [rdi + 0x18], rsi ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000013e6bb : mov dword ptr [rdi + 0x28], eax ; mov rax, qword ptr [rdi + 0x18] ; add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x00000000001064a5 : mov dword ptr [rdi + 0x28], edx ; mov byte ptr [rax], 0xa ; add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000010611b : mov dword ptr [rdi + 0x28], edx ; mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013e841 : mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000007d21f : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000007d253 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000ac312 : mov dword ptr [rdi + 0xc], eax ; mov rax, rbx ; pop rbx ; ret
0x00000000000a787d : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a86cd : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a781b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a866b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a789d : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a86ed : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a76e7 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a8517 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a0963 : mov dword ptr [rdi + 4], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a0802 : mov dword ptr [rdi + 4], eax ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a08c3 : mov dword ptr [rdi + 4], eax ; mov rax, rdi ; ret
0x00000000000a0876 : mov dword ptr [rdi + 4], ebx ; mov byte ptr [rdi + 6], r8b ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a0866 : mov dword ptr [rdi + 4], ebx ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a09b3 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a09c3 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a84f9 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a0923 : mov dword ptr [rdi + 4], edx ; mov rax, rdi ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a08b3 : mov dword ptr [rdi + 4], edx ; mov rax, rdi ; ret
0x00000000000a0875 : mov dword ptr [rdi + 4], r11d ; mov byte ptr [rdi + 6], r8b ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a0865 : mov dword ptr [rdi + 4], r11d ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a0962 : mov dword ptr [rdi + 4], r8d ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a08c2 : mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x00000000000a777b : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a85bb : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a779b : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a85db : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a7739 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a8579 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a77bb : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a85fb : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000acae5 : mov dword ptr [rdi + 8], eax ; je 0xacaa0 ; mov rax, rbx ; pop rbx ; ret
0x00000000000368a1 : mov dword ptr [rdi + 8], eax ; mov rax, qword ptr [rsi] ; and rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000036b91 : mov dword ptr [rdi + 8], eax ; mov rax, qword ptr [rsi] ; or rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000a855b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a7759 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a8599 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a771b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000048890 : mov dword ptr [rdi + 8], edx ; mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000003af04 : mov dword ptr [rdi + 8], edx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000007e4a8 : mov dword ptr [rdi + 8], edx ; movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007994f : mov dword ptr [rdi + 8], edx ; movzx eax, byte ptr [rax] ; ret
0x00000000000367c2 : mov dword ptr [rdi + rax*8], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000048928 : mov dword ptr [rdi + rax], eax ; sub r8, 8 ; cmp r8, 0xf8 ; jne 0x48930 ; mov rax, rdx ; ret
0x00000000000494fd : mov dword ptr [rdi + rbx*8 + 8], ecx ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00000000000d8b78 : mov dword ptr [rdi + rcx], 0xe084 ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x0000000000071da0 : mov dword ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000a0844 : mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a0857 : mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a0869 : mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a087d : mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a07fc : mov dword ptr [rdi], eax ; mov eax, dword ptr [rsp + 0x18] ; mov dword ptr [rdi + 4], eax ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000004aacb : mov dword ptr [rdi], eax ; mov rax, rdi ; ret
0x00000000000a0822 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a0990 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a76b5 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a7707 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a7694 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a0832 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a09a0 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a0910 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000a84e5 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a8537 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a76e5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a8515 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a0960 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a08c0 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x00000000000a7737 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a8577 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a7757 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a8597 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000007c9ca : mov dword ptr [rdi], ecx ; mov dword ptr fs:[rax], 9 ; mov eax, 0xffffffff ; ret
0x000000000013e837 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 0x20], rsi ; mov qword ptr [rdi + 0x18], rsi ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a7778 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a85b8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a7798 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a85d8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a77b8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a85f8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a0900 : mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00000000000a09b0 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a09c0 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a84f6 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a0920 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a08b0 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00000000000a8558 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a7718 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a7684 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a84a4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a76a2 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a84d2 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a76f4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a8524 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000076161 : mov dword ptr [rdi], edx ; mov dword ptr fs:[rax], 9 ; mov eax, 0xffffffff ; ret
0x00000000000a0971 : mov dword ptr [rdi], esi ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a0981 : mov dword ptr [rdi], esi ; mov byte ptr [rdi + 2], 0 ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a08f1 : mov dword ptr [rdi], esi ; mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x00000000000a08e1 : mov dword ptr [rdi], esi ; mov rax, rdi ; ret
0x00000000000a0821 : mov dword ptr [rdi], r9d ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a0831 : mov dword ptr [rdi], r9d ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000168307 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x00000000000a2e5c : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000001682e9 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x00000000000a2e3e : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000016839b : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000168319 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x0000000000163fc9 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x00000000001683bb : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x0000000000168339 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x0000000000163fd9 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000168359 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000016a623 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000001683db : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x00000000000a2ee0 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000168379 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000016826b : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x00000000000a2ec2 : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000010079d : mov dword ptr [rdx + 8], eax ; test rax, rax ; je 0x1007b4 ; mov qword ptr [rax], rdx ; ret
0x000000000014340a : mov dword ptr [rdx], eax ; add rsp, 0x510 ; mov rax, rbx ; pop rbx ; ret
0x000000000011fb17 : mov dword ptr [rdx], eax ; add rsp, 0x90 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000168294 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x00000000001682c2 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x000000000016a6cf : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000168214 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x00000000001682a4 : mov dword ptr [rdx], eax ; mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x00000000000a2de9 : mov dword ptr [rdx], eax ; mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000001682d2 : mov dword ptr [rdx], eax ; mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x00000000000a2e17 : mov dword ptr [rdx], eax ; mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000001682e2 : mov dword ptr [rdx], eax ; mov ax, word ptr [rcx + 4] ; mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x00000000000a2e37 : mov dword ptr [rdx], eax ; mov ax, word ptr [rcx + 4] ; mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x0000000000168302 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x00000000000a2e57 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000168314 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x0000000000163fc4 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000168334 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x0000000000163fd4 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000168354 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x0000000000163fe4 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000168374 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x0000000000163ff4 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000007b00c : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x0000000000168394 : mov dword ptr [rdx], eax ; mov rax, qword ptr [rcx + 5] ; mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000164004 : mov dword ptr [rdx], eax ; mov rax, qword ptr [rcx + 5] ; mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x00000000001683b4 : mov dword ptr [rdx], eax ; mov rax, qword ptr [rcx + 6] ; mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x0000000000164024 : mov dword ptr [rdx], eax ; mov rax, qword ptr [rcx + 6] ; mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x00000000001683d4 : mov dword ptr [rdx], eax ; mov rax, qword ptr [rcx + 7] ; mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x0000000000164044 : mov dword ptr [rdx], eax ; mov rax, qword ptr [rcx + 7] ; mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x0000000000168264 : mov dword ptr [rdx], eax ; mov rax, qword ptr [rcx + 8] ; mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x0000000000163f34 : mov dword ptr [rdx], eax ; mov rax, qword ptr [rcx + 8] ; mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x000000000011bd66 : mov dword ptr [rdx], eax ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000001fb83 : mov dword ptr [rdx], eax ; mov rax, rbp ; cmp r9, rax ; je 0x1fb34 ; jmp 0x1fb5d
0x00000000000a2dd9 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000000c9cf2 : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x00000000000d7cca : mov dword ptr [rdx], eax ; test rcx, rcx ; je 0xd7ce3 ; mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000c04bf : mov dword ptr [rdx], eax ; xor edx, edx ; add rsp, 8 ; mov rax, rdx ; ret
0x000000000007340a : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000096837 : mov dword ptr [rdx], esp ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c9cf1 : mov dword ptr [rdx], r8d ; mov rax, rsi ; add rsp, 8 ; ret
0x000000000013ab33 : mov dword ptr [rip + 0x28b443], 2 ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000000ffab5 : mov dword ptr [rip + 0x2c2cc5], eax ; mov rdx, rax ; jmp 0xffa57
0x0000000000100c62 : mov dword ptr [rip + 0x2c345c], 0 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ff8ea : mov dword ptr [rip + 0x2c46d4], eax ; lea rax, qword ptr [rip + 0x2c46a1] ; ret
0x00000000000ff71a : mov dword ptr [rip + 0x2c48a4], eax ; lea rax, qword ptr [rip + 0x2c4871] ; ret
0x00000000000ff534 : mov dword ptr [rip + 0x2c4a8a], eax ; lea rax, qword ptr [rip + 0x2c4a57] ; add rsp, 8 ; ret
0x0000000000080409 : mov dword ptr [rip + 0x343389], eax ; add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000006bc1f : mov dword ptr [rip + 0x357acb], eax ; add rsp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000003aa58 : mov dword ptr [rip + 0x3889f6], 0 ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000003a988 : mov dword ptr [rip + 0x388abe], 0 ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000003ab04 : mov dword ptr [rip + 0x38b93a], 0 ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000001fa34 : mov dword ptr [rip + 0x3a2e66], eax ; mov qword ptr [rip + 0x3a68c7], rdx ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000001fa3b : mov dword ptr [rip + 0x3a68c7], edx ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000003ae6f : mov dword ptr [rsi + 0x10], edx ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x00000000000fd82b : mov dword ptr [rsi + 0x50], eax ; test al, 0x20 ; je 0xfd84f ; xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x00000000000f7e01 : mov dword ptr [rsi + 0x70], edx ; mov rax, qword ptr [rdi + 0x100] ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000f7284 : mov dword ptr [rsi + 0x70], edx ; mov rax, qword ptr [rdi + 0x80] ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x0000000000130067 : mov dword ptr [rsi + 8], 0 ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000012ffc7 : mov dword ptr [rsi + 8], 1 ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000074e18 : mov dword ptr [rsi + 8], eax ; mov qword ptr [rsi], rax ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000125161 : mov dword ptr [rsi + 8], eax ; mov rdi, rax ; call 0x91398
0x0000000000137830 : mov dword ptr [rsi + 8], edx ; mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000138110 : mov dword ptr [rsi + 8], edx ; mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000134a86 : mov dword ptr [rsi + 8], edx ; mov rax, qword ptr [rax + 0xa0] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000484e5 : mov dword ptr [rsi + rax*8], ecx ; add rax, 1 ; cmp rax, rdx ; jne 0x484ee ; xor eax, eax ; ret
0x000000000004849b : mov dword ptr [rsi + rax*8], edx ; xor eax, eax ; pop rbx ; ret
0x000000000012ff98 : mov dword ptr [rsi], 0x10 ; mov qword ptr [rsi + 8], rax ; ret
0x000000000003ae68 : mov dword ptr [rsi], eax ; lea rax, qword ptr [r10 + r8*4] ; mov qword ptr [rsi + 0x10], r10 ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x000000000002e0a3 : mov dword ptr [rsi], ebp ; cmp dword ptr [rax], eax ; add rax, qword ptr fs:[0] ; ret
0x000000000002af7e : mov dword ptr [rsi], ecx ; mov rcx, qword ptr [rax + r15*8] ; test rcx, rcx ; je 0x2af96 ; call rcx
0x000000000008b18d : mov dword ptr [rsi], edx ; je 0x8b239 ; mov rdi, r13 ; mov rdx, rbp ; mov rsi, r12 ; call rax
0x000000000013128c : mov dword ptr [rsi], edx ; mov qword ptr [rax + 0x58], rcx ; sub qword ptr [rax + 0x68], 4 ; mov eax, 1 ; ret
0x000000000013121d : mov dword ptr [rsi], edx ; mov qword ptr [rax + 0x68], rcx ; mov qword ptr [rax + 0x58], r8 ; mov eax, 1 ; ret
0x000000000013e72c : mov dword ptr [rsi], edx ; mov qword ptr [rdi + 0x18], rax ; mov eax, 1 ; ret
0x0000000000084181 : mov dword ptr [rsp + 0x10], esi ; call qword ptr [rax]
0x00000000000c9c23 : mov dword ptr [rsp + 0x10], esi ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000106d3e : mov dword ptr [rsp + 0x18], eax ; mov rdx, rax ; jmp 0x106d95
0x0000000000083f3f : mov dword ptr [rsp + 0x18], edx ; mov byte ptr [rsp + 0x28], r11b ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x0000000000083f49 : mov dword ptr [rsp + 0x20], edx ; call qword ptr [rax]
0x0000000000078402 : mov dword ptr [rsp + 0x28], eax ; mov rax, r13 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000e4c58 : mov dword ptr [rsp + 0x28], edi ; add rax, rdx ; jmp rax
0x000000000012a17f : mov dword ptr [rsp + 0x40], ebp ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013dd85 : mov dword ptr [rsp + 8], eax ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000084271 : mov dword ptr [rsp + 8], eax ; xor edi, edi ; call qword ptr [rax]
0x0000000000084179 : mov dword ptr [rsp + 8], ecx ; mov rdi, r14 ; mov qword ptr [rsp + 0x10], r14 ; call qword ptr [rax]
0x00000000000757bf : mov dword ptr [rsp + 8], ecx ; mov rdi, r15 ; call rax
0x000000000004a692 : mov dword ptr [rsp - 0x18], eax ; shr rax, 0x20 ; mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000108ce8 : mov dword ptr [rsp - 0x30], ecx ; syscall ; cmp rax, -0x1000 ; ja 0x108d0f ; ret
0x000000000008a189 : mov dword ptr [rsp], eax ; je 0x8a26f ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000008aeab : mov dword ptr [rsp], eax ; je 0x8af9f ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x00000000000ac732 : mov dword ptr [rsp], eax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012ccc7 : mov dword ptr [rsp], eax ; mov rcx, rax ; call r12
0x00000000000bd014 : mov dword ptr [rsp], ebp ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000017209c : mov dword ptr [rsp], ebx ; mov rdx, qword ptr [rax + rbp*8] ; test rdx, rdx ; je 0x1720b6 ; call rdx
0x000000000007a353 : mov dword ptr [rsp], ecx ; mov rdi, rbx ; call rax
0x0000000000108d73 : mov dword ptr fs:[0x2d0], eax ; pop rax ; pop rdi ; call rax
0x00000000000ff3e8 : mov dword ptr fs:[rax], 0 ; mov rax, qword ptr [rsp - 0x50] ; ret
0x00000000000f8ebf : mov dword ptr fs:[rax], 0x16 ; add rsp, 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000001458e7 : mov dword ptr fs:[rax], 0x16 ; mov eax, 0x16 ; ret
0x0000000000039f57 : mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000357c7 : mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000000fcbf7 : mov dword ptr fs:[rax], 0x16 ; mov eax, 1 ; ret
0x00000000000fe8a7 : mov dword ptr fs:[rax], 0x16 ; mov eax, edi ; ret
0x00000000000ca1e4 : mov dword ptr fs:[rax], 0x16 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000053764 : mov dword ptr fs:[rax], 0x16 ; mov eax, esi ; ret
0x00000000000356cf : mov dword ptr fs:[rax], 0x16 ; mov rax, -1 ; ret
0x0000000000103ae7 : mov dword ptr fs:[rax], 0x16 ; ret
0x000000000006f189 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bbc17 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x00000000000795d7 : mov dword ptr fs:[rax], 0x1c ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000034e1f : mov dword ptr fs:[rax], 0x22 ; add rsp, 0x28 ; ret
0x0000000000035471 : mov dword ptr fs:[rax], 0x22 ; add rsp, 8 ; ret
0x0000000000036457 : mov dword ptr fs:[rax], 0x26 ; mov eax, 0xffffffff ; ret
0x00000000000fe567 : mov dword ptr fs:[rax], 0x26 ; mov rax, -1 ; ret
0x000000000003418f : mov dword ptr fs:[rax], 0x2a ; mov rax, rcx ; ret
0x00000000000bbb09 : mov dword ptr fs:[rax], 0x4b ; mov rax, rbx ; pop rbx ; ret
0x00000000000bbbf7 : mov dword ptr fs:[rax], 0x4b ; xor eax, eax ; add rsp, 8 ; ret
0x00000000000bb97e : mov dword ptr fs:[rax], 0x4b ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000000f85ef : mov dword ptr fs:[rax], 0x5f ; mov eax, 0xffffffff ; ret
0x0000000000110587 : mov dword ptr fs:[rax], 0xc ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000fe4a7 : mov dword ptr fs:[rax], 0xc ; mov eax, 0xffffffff ; ret
0x00000000000858d9 : mov dword ptr fs:[rax], 0xc ; mov rax, rsi ; ret
0x0000000000089e0c : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008bb25 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000085767 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x00000000000cddaf : mov dword ptr fs:[rax], 2 ; mov eax, 0xffffffff ; ret
0x00000000000c8709 : mov dword ptr fs:[rax], 2 ; mov rax, rdx ; ret
0x0000000000107747 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x000000000006f7df : mov dword ptr fs:[rax], 5 ; mov rax, rdx ; pop rbx ; ret
0x000000000012472d : mov dword ptr fs:[rax], 6 ; add rsp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000341f7 : mov dword ptr fs:[rax], 9 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000753c4 : mov dword ptr fs:[rax], 9 ; mov eax, 0xffffffff ; ret
0x0000000000020da7 : mov dword ptr fs:[rax], 9 ; mov eax, edi ; ret
0x00000000000231e1 : mov dword ptr fs:[rax], edi ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000100750 : mov dword ptr fs:[rax], edi ; mov eax, 0xffffffff ; ret
0x00000000000f813f : mov dword ptr fs:[rax], edx ; add rsp, 0x10 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000035a19 : mov dword ptr fs:[rax], edx ; mov eax, 0xffffffff ; add rsp, 0xd0 ; ret
0x00000000000ec219 : mov dword ptr fs:[rax], edx ; mov eax, 0xffffffff ; ret
0x00000000000ec1c2 : mov dword ptr fs:[rax], r8d ; mov eax, 0xffffffff ; ret
0x0000000000035ab9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000143409 : mov dword ptr fs:[rdx], eax ; add rsp, 0x510 ; mov rax, rbx ; pop rbx ; ret
0x000000000007b00b : mov dword ptr fs:[rdx], eax ; mov rax, -1 ; ret
0x000000000001fb82 : mov dword ptr fs:[rdx], eax ; mov rax, rbp ; cmp r9, rax ; je 0x1fb35 ; jmp 0x1fb5e
0x00000000000c9cf0 : mov dword ptr fs:[rdx], r8d ; mov rax, rsi ; add rsp, 8 ; ret
0x00000000000a76c2 : mov dx, word ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a84f2 : mov dx, word ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a8553 : mov dx, word ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a7713 : mov dx, word ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a7680 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a84a0 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000aad33 : mov eax, 0 ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000000ff234 : mov eax, 0 ; cmove rax, rbx ; pop rbx ; ret
0x000000000011082c : mov eax, 0 ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x000000000003ac6b : mov eax, 0 ; cmp edx, 0xff ; cmovne rax, rbx ; pop rbx ; ret
0x00000000000f8889 : mov eax, 0 ; syscall ; cmp rax, -0xfff ; jae 0xf88d8 ; ret
0x00000000000fdde7 : mov eax, 0x10 ; syscall ; cmp rax, -0x1000 ; ja 0xfde0f ; ret
0x00000000000fe580 : mov eax, 0x10 ; syscall ; cmp rax, -0xfff ; jae 0xfe59f ; ret
0x00000000000fe9c3 : mov eax, 0x100 ; cmovns rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000000f8630 : mov eax, 0x102 ; syscall ; cmp rax, -0xfff ; jae 0xf864f ; ret
0x00000000000f836a : mov eax, 0x103 ; syscall ; cmp rax, -0x1000 ; ja 0xf8390 ; ret
0x00000000000f99e3 : mov eax, 0x104 ; syscall ; cmp rax, -0xfff ; jae 0xf9a02 ; ret
0x0000000000100688 : mov eax, 0x105 ; syscall ; cmp rax, -0x1000 ; ja 0x1006b0 ; ret
0x00000000000f83c4 : mov eax, 0x106 ; syscall ; cmp rax, -0x1000 ; ja 0xf83e8 ; ret
0x00000000000fa1c0 : mov eax, 0x107 ; syscall ; cmp rax, -0xfff ; jae 0xfa1df ; ret
0x000000000006c333 : mov eax, 0x108 ; syscall ; cmp rax, -0xfff ; jae 0x6c352 ; ret
0x00000000000fa0a3 : mov eax, 0x109 ; syscall ; cmp rax, -0xfff ; jae 0xfa0c2 ; ret
0x00000000000fa100 : mov eax, 0x10a ; syscall ; cmp rax, -0xfff ; jae 0xfa11f ; ret
0x00000000000fa163 : mov eax, 0x10b ; syscall ; cmp rax, -0xfff ; jae 0xfa182 ; ret
0x00000000000f85a2 : mov eax, 0x10c ; syscall ; cmp rax, -0x1000 ; ja 0xf85c8 ; ret
0x00000000000f6e6c : mov eax, 0x11 ; syscall ; cmp rax, -0xfff ; jae 0xf6ebe ; ret
0x0000000000109730 : mov eax, 0x110 ; syscall ; cmp rax, -0xfff ; jae 0x10974f ; ret
0x000000000010964c : mov eax, 0x113 ; syscall ; cmp rax, -0xfff ; jae 0x10969e ; ret
0x00000000001096dc : mov eax, 0x114 ; syscall ; cmp rax, -0xfff ; jae 0x10972e ; ret
0x00000000000fd86c : mov eax, 0x115 ; syscall ; cmp rax, -0xfff ; jae 0xfd8be ; ret
0x000000000010979c : mov eax, 0x116 ; syscall ; cmp rax, -0xfff ; jae 0x1097ee ; ret
0x0000000000100594 : mov eax, 0x118 ; syscall ; cmp rax, -0x1000 ; ja 0x1005b8 ; ret
0x0000000000100634 : mov eax, 0x118 ; syscall ; cmp rax, -0x1000 ; ja 0x100658 ; ret
0x00000000000fd10b : mov eax, 0x118 ; syscall ; cmp rax, -0x1000 ; ja 0xfd130 ; ret
0x00000000000fd15f : mov eax, 0x118 ; syscall ; cmp rax, -0x1000 ; ja 0xfd180 ; ret
0x0000000000108f29 : mov eax, 0x119 ; syscall ; cmp rax, -0x1000 ; ja 0x108f4f ; ret
0x00000000001097f0 : mov eax, 0x11b ; syscall ; cmp rax, -0xfff ; jae 0x10980f ; ret
0x00000000000fd8d3 : mov eax, 0x11d ; syscall ; cmp rax, -0x1000 ; ja 0xfd8f7 ; ret
0x0000000000109823 : mov eax, 0x11e ; syscall ; cmp rax, -0xfff ; jae 0x109842 ; ret
0x0000000000109850 : mov eax, 0x11f ; syscall ; cmp rax, -0xfff ; jae 0x10986f ; ret
0x00000000000f6ecc : mov eax, 0x12 ; syscall ; cmp rax, -0xfff ; jae 0xf6f1e ; ret
0x000000000010a260 : mov eax, 0x120 ; syscall ; cmp rax, -0x1000 ; ja 0x10a27f ; ret
0x0000000000108fdb : mov eax, 0x121 ; syscall ; cmp rax, -0x1000 ; ja 0x109000 ; ret
0x0000000000109010 : mov eax, 0x122 ; syscall ; cmp rax, -0xfff ; jae 0x10902f ; ret
0x00000000001092e0 : mov eax, 0x123 ; syscall ; cmp rax, -0xfff ; jae 0x1092ff ; ret
0x00000000000f8fd0 : mov eax, 0x124 ; syscall ; cmp rax, -0xfff ; jae 0xf8fef ; ret
0x00000000000f9030 : mov eax, 0x125 ; syscall ; cmp rax, -0xfff ; jae 0xf904f ; ret
0x0000000000109460 : mov eax, 0x126 ; syscall ; cmp rax, -0xfff ; jae 0x10947f ; ret
0x00000000000fe67c : mov eax, 0x127 ; syscall ; cmp rax, -0xfff ; jae 0xfe6ce ; ret
0x00000000000fe6dc : mov eax, 0x128 ; syscall ; cmp rax, -0xfff ; jae 0xfe72e ; ret
0x000000000010a302 : mov eax, 0x12b ; syscall ; cmp rax, -0x1000 ; ja 0x10a327 ; ret
0x0000000000109880 : mov eax, 0x12c ; syscall ; cmp rax, -0xfff ; jae 0x10989f ; ret
0x0000000000109163 : mov eax, 0x12d ; syscall ; cmp rax, -0xfff ; jae 0x109182 ; ret
0x0000000000109093 : mov eax, 0x12e ; syscall ; cmp rax, -0xfff ; jae 0x1090b2 ; ret
0x00000000001098b3 : mov eax, 0x12f ; syscall ; cmp rax, -0xfff ; jae 0x1098d2 ; ret
0x00000000000fe5b9 : mov eax, 0x13 ; syscall ; cmp rax, -0xfff ; jae 0xfe608 ; ret
0x00000000001098e9 : mov eax, 0x130 ; syscall ; cmp rax, -0xfff ; jae 0x109938 ; ret
0x0000000000109220 : mov eax, 0x131 ; syscall ; cmp rax, -0xfff ; jae 0x10923f ; ret
0x00000000000fedf0 : mov eax, 0x132 ; syscall ; cmp rax, -0xfff ; jae 0xfee0f ; ret
0x000000000010a3b2 : mov eax, 0x133 ; syscall ; cmp rax, -0x1000 ; ja 0x10a3d7 ; ret
0x0000000000109940 : mov eax, 0x134 ; syscall ; cmp rax, -0xfff ; jae 0x10995f ; ret
0x0000000000109973 : mov eax, 0x136 ; syscall ; cmp rax, -0xfff ; jae 0x109992 ; ret
0x00000000001099a3 : mov eax, 0x137 ; syscall ; cmp rax, -0xfff ; jae 0x1099c2 ; ret
0x00000000000fe619 : mov eax, 0x14 ; syscall ; cmp rax, -0xfff ; jae 0xfe668 ; ret
0x00000000000f8940 : mov eax, 0x15 ; syscall ; cmp rax, -0xfff ; jae 0xf895f ; ret
0x00000000000f9000 : mov eax, 0x16 ; syscall ; cmp rax, -0xfff ; jae 0xf901f ; ret
0x00000000000feb4c : mov eax, 0x17 ; syscall ; cmp rax, -0xfff ; jae 0xfeb9e ; ret
0x00000000000ec0a0 : mov eax, 0x18 ; syscall ; cmp rax, -0xfff ; jae 0xec0bf ; ret
0x0000000000109523 : mov eax, 0x19 ; syscall ; cmp rax, -0xfff ; jae 0x109542 ; ret
0x0000000000102cd9 : mov eax, 0x1a ; syscall ; cmp rax, -0xfff ; jae 0x102d28 ; ret
0x0000000000102d60 : mov eax, 0x1b ; syscall ; cmp rax, -0xfff ; jae 0x102d7f ; ret
0x00000000000559d8 : mov eax, 0x1b85b ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000102d30 : mov eax, 0x1c ; syscall ; cmp rax, -0xfff ; jae 0x102d4f ; ret
0x000000000010a750 : mov eax, 0x1d ; syscall ; cmp rax, -0xfff ; jae 0x10a76f ; ret
0x000000000010a6f0 : mov eax, 0x1e ; syscall ; cmp rax, -0xfff ; jae 0x10a70f ; ret
0x000000000010a780 : mov eax, 0x1f ; syscall ; cmp rax, -0xfff ; jae 0x10a79f ; ret
0x00000000000f8f70 : mov eax, 0x20 ; syscall ; cmp rax, -0xfff ; jae 0xf8f8f ; ret
0x00000000000f8fa0 : mov eax, 0x21 ; syscall ; cmp rax, -0xfff ; jae 0xf8fbf ; ret
0x00000000000cd269 : mov eax, 0x22 ; syscall ; cmp rax, -0xfff ; jae 0xcd2b8 ; ret
0x00000000000cd2c9 : mov eax, 0x23 ; syscall ; cmp rax, -0xfff ; jae 0xcd318 ; ret
0x00000000000bfc70 : mov eax, 0x24 ; syscall ; cmp rax, -0xfff ; jae 0xbfc8f ; ret
0x00000000000e6936 : mov eax, 0x244c8b48 ; and byte ptr [rbp + rcx*4 - 0x7c], cl ; and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000cd1e0 : mov eax, 0x25 ; syscall ; cmp rax, -0xfff ; jae 0xcd1ff ; ret
0x00000000000bfca0 : mov eax, 0x26 ; syscall ; cmp rax, -0xfff ; jae 0xbfcbf ; ret
0x00000000000fd0d3 : mov eax, 0x28 ; syscall ; cmp rax, -0xfff ; jae 0xfd0f2 ; ret
0x0000000000109f80 : mov eax, 0x29 ; syscall ; cmp rax, -0xfff ; jae 0x109f9f ; ret
0x0000000000109a89 : mov eax, 0x2a ; syscall ; cmp rax, -0xfff ; jae 0x109ad8 ; ret
0x00000000001099f9 : mov eax, 0x2b ; syscall ; cmp rax, -0xfff ; jae 0x109a48 ; ret
0x0000000000109d76 : mov eax, 0x2c ; syscall ; cmp rax, -0x1000 ; ja 0x109d9f ; ret
0x0000000000109ecc : mov eax, 0x2c ; syscall ; cmp rax, -0xfff ; jae 0x109f1e ; ret
0x0000000000109bb6 : mov eax, 0x2d ; syscall ; cmp rax, -0x1000 ; ja 0x109bdf ; ret
0x0000000000109c6c : mov eax, 0x2d ; syscall ; cmp rax, -0xfff ; jae 0x109cbe ; ret
0x0000000000109e30 : mov eax, 0x2e ; syscall ; cmp rax, -0x1000 ; ja 0x109e4f ; ret
0x0000000000109cd0 : mov eax, 0x2f ; syscall ; cmp rax, -0x1000 ; ja 0x109cef ; ret
0x0000000000109f50 : mov eax, 0x30 ; syscall ; cmp rax, -0xfff ; jae 0x109f6f ; ret
0x0000000000109a50 : mov eax, 0x31 ; syscall ; cmp rax, -0xfff ; jae 0x109a6f ; ret
0x0000000000109b70 : mov eax, 0x32 ; syscall ; cmp rax, -0xfff ; jae 0x109b8f ; ret
0x0000000000109b10 : mov eax, 0x33 ; syscall ; cmp rax, -0xfff ; jae 0x109b2f ; ret
0x0000000000109ae0 : mov eax, 0x34 ; syscall ; cmp rax, -0xfff ; jae 0x109aff ; ret
0x0000000000109fb3 : mov eax, 0x35 ; syscall ; cmp rax, -0xfff ; jae 0x109fd2 ; ret
0x0000000000109f23 : mov eax, 0x36 ; syscall ; cmp rax, -0xfff ; jae 0x109f42 ; ret
0x0000000000109b43 : mov eax, 0x37 ; syscall ; cmp rax, -0xfff ; jae 0x109b62 ; ret
0x0000000000108d4a : mov eax, 0x38 ; syscall ; test rax, rax ; jl 0x108d95 ; je 0x108d67 ; ret
0x00000000000cd760 : mov eax, 0x3b ; syscall ; cmp rax, -0xfff ; jae 0xcd77f ; ret
0x00000000000ccfb9 : mov eax, 0x3d ; syscall ; cmp rax, -0x1000 ; ja 0xccfdf ; ret
0x00000000000cd053 : mov eax, 0x3d ; syscall ; cmp rax, -0x1000 ; ja 0xcd077 ; ret
0x00000000000cd103 : mov eax, 0x3d ; syscall ; cmp rax, -0xfff ; jae 0xcd122 ; ret
0x0000000000035aa0 : mov eax, 0x3e ; syscall ; cmp rax, -0xfff ; jae 0x35abf ; ret
0x00000000000ccf20 : mov eax, 0x3f ; syscall ; cmp rax, -0xfff ; jae 0xccf3f ; ret
0x000000000010a660 : mov eax, 0x40 ; syscall ; cmp rax, -0xfff ; jae 0x10a67f ; ret
0x000000000010a630 : mov eax, 0x41 ; syscall ; cmp rax, -0xfff ; jae 0x10a64f ; ret
0x000000000010a693 : mov eax, 0x42 ; syscall ; cmp rax, -0xfff ; jae 0x10a6b2 ; ret
0x000000000010a720 : mov eax, 0x43 ; syscall ; cmp rax, -0xfff ; jae 0x10a73f ; ret
0x000000000010a5d0 : mov eax, 0x44 ; syscall ; cmp rax, -0xfff ; jae 0x10a5ef ; ret
0x000000000002e029 : mov eax, 0x441f0fc3 ; add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000010a51c : mov eax, 0x45 ; syscall ; cmp rax, -0xfff ; jae 0x10a56e ; ret
0x000000000010a57c : mov eax, 0x46 ; syscall ; cmp rax, -0xfff ; jae 0x10a5ce ; ret
0x000000000010a600 : mov eax, 0x47 ; syscall ; cmp rax, -0xfff ; jae 0x10a61f ; ret
0x00000000000f8c6c : mov eax, 0x48 ; syscall ; cmp rax, -0x1000 ; ja 0xf8cc0 ; ret
0x00000000000f8dd0 : mov eax, 0x49 ; syscall ; cmp rax, -0xfff ; jae 0xf8def ; ret
0x00000000000fed09 : mov eax, 0x4a ; syscall ; cmp rax, -0xfff ; jae 0xfed58 ; ret
0x00000000000fed99 : mov eax, 0x4b ; syscall ; cmp rax, -0xfff ; jae 0xfede8 ; ret
0x00000000001006c0 : mov eax, 0x4c ; syscall ; cmp rax, -0xfff ; jae 0x1006df ; ret
0x00000000001006f0 : mov eax, 0x4d ; syscall ; cmp rax, -0xfff ; jae 0x10070f ; ret
0x00000000000f90c0 : mov eax, 0x50 ; syscall ; cmp rax, -0xfff ; jae 0xf90df ; ret
0x00000000000f90f0 : mov eax, 0x51 ; syscall ; cmp rax, -0xfff ; jae 0xf910f ; ret
0x000000000006c300 : mov eax, 0x52 ; syscall ; cmp rax, -0xfff ; jae 0x6c31f ; ret
0x00000000000f8600 : mov eax, 0x53 ; syscall ; cmp rax, -0xfff ; jae 0xf861f ; ret
0x00000000000fa1f0 : mov eax, 0x54 ; syscall ; cmp rax, -0xfff ; jae 0xfa20f ; ret
0x00000000000f9069 : mov eax, 0x55 ; syscall ; cmp rax, -0xfff ; jae 0xf90b8 ; ret
0x00000000000fa070 : mov eax, 0x56 ; syscall ; cmp rax, -0xfff ; jae 0xfa08f ; ret
0x00000000000fa190 : mov eax, 0x57 ; syscall ; cmp rax, -0xfff ; jae 0xfa1af ; ret
0x00000000000fa0d0 : mov eax, 0x58 ; syscall ; cmp rax, -0xfff ; jae 0xfa0ef ; ret
0x0000000000119405 : mov eax, 0x59 ; syscall ; cmp rax, -0x1000 ; ja 0x119430 ; ret
0x00000000000fa130 : mov eax, 0x59 ; syscall ; cmp rax, -0xfff ; jae 0xfa14f ; ret
0x00000000000f8510 : mov eax, 0x5a ; syscall ; cmp rax, -0xfff ; jae 0xf852f ; ret
0x00000000000f8540 : mov eax, 0x5b ; syscall ; cmp rax, -0xfff ; jae 0xf855f ; ret
0x00000000000f9950 : mov eax, 0x5c ; syscall ; cmp rax, -0xfff ; jae 0xf996f ; ret
0x00000000000f9980 : mov eax, 0x5d ; syscall ; cmp rax, -0xfff ; jae 0xf999f ; ret
0x00000000000f99b0 : mov eax, 0x5e ; syscall ; cmp rax, -0xfff ; jae 0xf99cf ; ret
0x00000000000bc820 : mov eax, 0x60 ; syscall ; cmp rax, -0x1000 ; ja 0xbc848 ; ret
0x00000000000fdfb0 : mov eax, 0x61 ; syscall ; cmp rax, -0xfff ; jae 0xfdfcf ; ret
0x00000000000fe010 : mov eax, 0x62 ; syscall ; cmp rax, -0xfff ; jae 0xfe02f ; ret
0x00000000001096a0 : mov eax, 0x63 ; syscall ; cmp rax, -0xfff ; jae 0x1096bf ; ret
0x00000000000aac64 : mov eax, 0x6348000d ; add al, 0xbe ; add rax, rsi ; jmp rax
0x00000000001094c0 : mov eax, 0x67 ; syscall ; cmp rax, -0xfff ; jae 0x1094df ; ret
0x00000000000ce21c : mov eax, 0x69 ; syscall ; cmp rax, -0x1000 ; ja 0xce23f ; ret
0x00000000000ce28c : mov eax, 0x6a ; syscall ; cmp rax, -0x1000 ; ja 0xce2af ; ret
0x00000000000ce3b0 : mov eax, 0x6d ; syscall ; cmp rax, -0xfff ; jae 0xce3cf ; ret
0x00000000000ce440 : mov eax, 0x70 ; syscall ; cmp rax, -0xfff ; jae 0xce45f ; ret
0x00000000000fe73e : mov eax, 0x71 ; syscall ; cmp rax, -0x1000 ; ja 0xfe75f ; ret
0x00000000000fe7ae : mov eax, 0x72 ; syscall ; cmp rax, -0x1000 ; ja 0xfe7cf ; ret
0x00000000000ce1e0 : mov eax, 0x73 ; syscall ; cmp rax, -0xfff ; jae 0xce1ff ; ret
0x00000000000c9bda : mov eax, 0x74 ; syscall ; cmp rax, -0x1000 ; ja 0xc9bff ; ret
0x00000000000c9bd9 : mov eax, 0x74 ; syscall ; cmp rax, -0x1000 ; ja 0xc9c00 ; ret
0x00000000000ce4e0 : mov eax, 0x75 ; syscall ; cmp rax, -0x1000 ; ja 0xce4ff ; ret
0x00000000000ce470 : mov eax, 0x76 ; syscall ; cmp rax, -0xfff ; jae 0xce48f ; ret
0x00000000000ce560 : mov eax, 0x77 ; syscall ; cmp rax, -0x1000 ; ja 0xce57f ; ret
0x00000000000ce4a0 : mov eax, 0x78 ; syscall ; cmp rax, -0xfff ; jae 0xce4bf ; ret
0x00000000000ce380 : mov eax, 0x79 ; syscall ; cmp rax, -0xfff ; jae 0xce39f ; ret
0x0000000000108e40 : mov eax, 0x7a ; syscall ; cmp rax, -0xfff ; jae 0x108e5f ; ret
0x0000000000108e70 : mov eax, 0x7b ; syscall ; cmp rax, -0xfff ; jae 0x108e8f ; ret
0x00000000000ce410 : mov eax, 0x7c ; syscall ; cmp rax, -0xfff ; jae 0xce42f ; ret
0x00000000001091c0 : mov eax, 0x7d ; syscall ; cmp rax, -0xfff ; jae 0x1091df ; ret
0x00000000001091f0 : mov eax, 0x7e ; syscall ; cmp rax, -0xfff ; jae 0x10920f ; ret
0x0000000000035ad5 : mov eax, 0x7f ; syscall ; cmp rax, -0x1000 ; ja 0x35b00 ; ret
0x0000000000035b1f : mov eax, 0x82 ; syscall ; cmp rax, -0x1000 ; ja 0x35b3f ; ret
0x0000000000036170 : mov eax, 0x83 ; syscall ; cmp rax, -0xfff ; jae 0x3618f ; ret
0x00000000000f8170 : mov eax, 0x84 ; syscall ; cmp rax, -0xfff ; jae 0xf818f ; ret
0x00000000000f8309 : mov eax, 0x85 ; syscall ; cmp rax, -0x1000 ; ja 0xf8330 ; ret
0x0000000000109760 : mov eax, 0x86 ; syscall ; cmp rax, -0xfff ; jae 0x10977f ; ret
0x00000000001090c0 : mov eax, 0x87 ; syscall ; cmp rax, -0xfff ; jae 0x1090df ; ret
0x0000000000106ba7 : mov eax, 0x88 ; syscall ; cmp rax, -0x1000 ; ja 0x106bd0 ; ret
0x00000000000f8410 : mov eax, 0x89 ; syscall ; cmp rax, -0xfff ; jae 0xf842f ; ret
0x00000000000f8440 : mov eax, 0x8a ; syscall ; cmp rax, -0xfff ; jae 0xf845f ; ret
0x00000000001506a4 : mov eax, 0x8b000242 ; or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000000fe3a0 : mov eax, 0x8d ; syscall ; cmp rax, -0xfff ; jae 0xfe3bf ; ret
0x00000000000ebfe0 : mov eax, 0x8e ; syscall ; cmp rax, -0xfff ; jae 0xebfff ; ret
0x00000000000ec010 : mov eax, 0x8f ; syscall ; cmp rax, -0xfff ; jae 0xec02f ; ret
0x00000000000ec040 : mov eax, 0x90 ; syscall ; cmp rax, -0xfff ; jae 0xec05f ; ret
0x00000000000ec070 : mov eax, 0x91 ; syscall ; cmp rax, -0xfff ; jae 0xec08f ; ret
0x00000000000ec0d0 : mov eax, 0x92 ; syscall ; cmp rax, -0xfff ; jae 0xec0ef ; ret
0x00000000000ec100 : mov eax, 0x93 ; syscall ; cmp rax, -0xfff ; jae 0xec11f ; ret
0x00000000000ec130 : mov eax, 0x94 ; syscall ; cmp rax, -0xfff ; jae 0xec14f ; ret
0x0000000000102dc0 : mov eax, 0x95 ; syscall ; cmp rax, -0xfff ; jae 0x102ddf ; ret
0x0000000000102df0 : mov eax, 0x96 ; syscall ; cmp rax, -0xfff ; jae 0x102e0f ; ret
0x0000000000102e20 : mov eax, 0x97 ; syscall ; cmp rax, -0xfff ; jae 0x102e3f ; ret
0x0000000000102e50 : mov eax, 0x98 ; syscall ; cmp rax, -0xfff ; jae 0x102e6f ; ret
0x00000000000ff160 : mov eax, 0x99 ; syscall ; cmp rax, -0xfff ; jae 0xff17f ; ret
0x0000000000109120 : mov eax, 0x9a ; syscall ; cmp rax, -0xfff ; jae 0x10913f ; ret
0x0000000000109580 : mov eax, 0x9b ; syscall ; cmp rax, -0xfff ; jae 0x10959f ; ret
0x00000000001095b3 : mov eax, 0x9d ; syscall ; cmp rax, -0xfff ; jae 0x1095d2 ; ret
0x00000000001090f0 : mov eax, 0x9e ; syscall ; cmp rax, -0xfff ; jae 0x10910f ; ret
0x0000000000109190 : mov eax, 0x9f ; syscall ; cmp rax, -0xfff ; jae 0x1091af ; ret
0x0000000000102ca0 : mov eax, 0xa ; syscall ; cmp rax, -0xfff ; jae 0x102cbf ; ret
0x00000000000fdfe0 : mov eax, 0xa0 ; syscall ; cmp rax, -0xfff ; jae 0xfdfff ; ret
0x00000000000fecd0 : mov eax, 0xa1 ; syscall ; cmp rax, -0xfff ; jae 0xfecef ; ret
0x00000000000fed60 : mov eax, 0xa2 ; syscall ; cmp rax, -0xfff ; jae 0xfed7f ; ret
0x00000000000feca0 : mov eax, 0xa3 ; syscall ; cmp rax, -0xfff ; jae 0xfecbf ; ret
0x00000000000bc900 : mov eax, 0xa4 ; syscall ; cmp rax, -0xfff ; jae 0xbc91f ; ret
0x00000000001094f3 : mov eax, 0xa5 ; syscall ; cmp rax, -0xfff ; jae 0x109512 ; ret
0x0000000000108de0 : mov eax, 0xa6 ; syscall ; cmp rax, -0xfff ; jae 0x108dff ; ret
0x00000000000ff190 : mov eax, 0xa7 ; syscall ; cmp rax, -0xfff ; jae 0xff1af ; ret
0x00000000000ff1c0 : mov eax, 0xa8 ; syscall ; cmp rax, -0xfff ; jae 0xff1df ; ret
0x00000000000fee2f : mov eax, 0xa9 ; syscall ; cmp rax, -0x1000 ; ja 0xfee50 ; ret
0x00000000000fea70 : mov eax, 0xaa ; syscall ; cmp rax, -0xfff ; jae 0xfea8f ; ret
0x00000000000feb10 : mov eax, 0xab ; syscall ; cmp rax, -0xfff ; jae 0xfeb2f ; ret
0x0000000000108c80 : mov eax, 0xac ; syscall ; cmp rax, -0xfff ; jae 0x108c9f ; ret
0x0000000000108c50 : mov eax, 0xad ; syscall ; cmp rax, -0xfff ; jae 0x108c6f ; ret
0x0000000000109250 : mov eax, 0xae ; syscall ; cmp rax, -0xfff ; jae 0x10926f ; ret
0x00000000001093d3 : mov eax, 0xaf ; syscall ; cmp rax, -0xfff ; jae 0x1093f2 ; ret
0x0000000000102c70 : mov eax, 0xb ; syscall ; cmp rax, -0xfff ; jae 0x102c8f ; ret
0x0000000000109280 : mov eax, 0xb0 ; syscall ; cmp rax, -0xfff ; jae 0x10929f ; ret
0x00000000001093a0 : mov eax, 0xb1 ; syscall ; cmp rax, -0xfff ; jae 0x1093bf ; ret
0x00000000001095e3 : mov eax, 0xb2 ; syscall ; cmp rax, -0xfff ; jae 0x109602 ; ret
0x0000000000109613 : mov eax, 0xb3 ; syscall ; cmp rax, -0xfff ; jae 0x109632 ; ret
0x0000000000109550 : mov eax, 0xb4 ; syscall ; cmp rax, -0xfff ; jae 0x10956f ; ret
0x0000000000143283 : mov eax, 0xb5 ; syscall ; cmp rax, -0xfff ; jae 0x1432a2 ; ret
0x00000000001432d3 : mov eax, 0xb6 ; syscall ; cmp rax, -0xfff ; jae 0x1432f2 ; ret
0x0000000000134c9f : mov eax, 0xb8000000 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000108e10 : mov eax, 0xbb ; syscall ; cmp rax, -0xfff ; jae 0x108e2f ; ret
0x0000000000000e0c : mov eax, 0xbb000001 ; add dword ptr [rax], eax ; add byte ptr [rcx + rax + 0x1c00000], bh ; add byte ptr [rax], al ; ret
0x00000000001076d3 : mov eax, 0xbc ; syscall ; cmp rax, -0xfff ; jae 0x1076f2 ; ret
0x0000000000107673 : mov eax, 0xbd ; syscall ; cmp rax, -0xfff ; jae 0x107692 ; ret
0x0000000000107553 : mov eax, 0xbe ; syscall ; cmp rax, -0xfff ; jae 0x107572 ; ret
0x00000000001056a7 : mov eax, 0xbefffff5 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000107583 : mov eax, 0xbf ; syscall ; cmp rax, -0xfff ; jae 0x1075a2 ; ret
0x00000000001075e3 : mov eax, 0xc0 ; syscall ; cmp rax, -0xfff ; jae 0x107602 ; ret
0x00000000001074c3 : mov eax, 0xc1 ; syscall ; cmp rax, -0xfff ; jae 0x1074e2 ; ret
0x00000000001075b0 : mov eax, 0xc2 ; syscall ; cmp rax, -0xfff ; jae 0x1075cf ; ret
0x0000000000107610 : mov eax, 0xc3 ; syscall ; cmp rax, -0xfff ; jae 0x10762f ; ret
0x00000000001074f0 : mov eax, 0xc4 ; syscall ; cmp rax, -0xfff ; jae 0x10750f ; ret
0x00000000001076a0 : mov eax, 0xc5 ; syscall ; cmp rax, -0xfff ; jae 0x1076bf ; ret
0x0000000000107640 : mov eax, 0xc6 ; syscall ; cmp rax, -0xfff ; jae 0x10765f ; ret
0x0000000000107520 : mov eax, 0xc7 ; syscall ; cmp rax, -0xfff ; jae 0x10753f ; ret
0x00000000001092b0 : mov eax, 0xd5 ; syscall ; cmp rax, -0xfff ; jae 0x1092cf ; ret
0x0000000000102d93 : mov eax, 0xd8 ; syscall ; cmp rax, -0xfff ; jae 0x102db2 ; ret
0x000000000010a6c3 : mov eax, 0xdc ; syscall ; cmp rax, -0xfff ; jae 0x10a6e2 ; ret
0x0000000000035a69 : mov eax, 0xe ; syscall ; cmp rax, -0x1000 ; ja 0x35a90 ; ret
0x0000000000047fea : mov eax, 0xe ; syscall ; cmp rax, -0xfff ; jae 0x4800d ; xor eax, eax ; ret
0x000000000013ac76 : mov eax, 0xe0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000117560 : mov eax, 0xe3 ; syscall ; cmp rax, -0x1000 ; ja 0x11759a ; ret
0x00000000001174b3 : mov eax, 0xe5 ; syscall ; cmp rax, -0x1000 ; ja 0x1174d8 ; ret
0x000000000010934c : mov eax, 0xe8 ; syscall ; cmp rax, -0xfff ; jae 0x10939e ; ret
0x00000000000aac86 : mov eax, 0xe8c1000d ; or al, 0x83 ; loopne 0xaacae ; movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x0000000000109313 : mov eax, 0xe9 ; syscall ; cmp rax, -0xfff ; jae 0x109332 ; ret
0x00000000000aad1e : mov eax, 0xeac1000d ; or al, 0x83 ; loop 0xaad46 ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x0000000000100500 : mov eax, 0xeb ; syscall ; cmp rax, -0x1000 ; ja 0x100528 ; ret
0x00000000000cd144 : mov eax, 0xf7 ; syscall ; cmp rax, -0x1000 ; ja 0xcd167 ; ret
0x0000000000109430 : mov eax, 0xfd ; syscall ; cmp rax, -0xfff ; jae 0x10944f ; ret
0x0000000000109400 : mov eax, 0xfe ; syscall ; cmp rax, -0xfff ; jae 0x10941f ; ret
0x0000000000109490 : mov eax, 0xff ; syscall ; cmp rax, -0xfff ; jae 0x1094af ; ret
0x00000000000363de : mov eax, 0xfffffffe ; rol rax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000f7f64 : mov eax, 0xffffffff ; cmove rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x000000000011c973 : mov eax, 0xffffffff ; mov rdi, rax ; jmp 0x11c84e
0x000000000004ee0c : mov eax, 1 ; jmp rax
0x000000000003639d : mov eax, 1 ; shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000003641d : mov eax, 1 ; shl rax, cl ; test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x00000000000f88e9 : mov eax, 1 ; syscall ; cmp rax, -0xfff ; jae 0xf8938 ; ret
0x00000000000f8669 : mov eax, 2 ; syscall ; cmp rax, -0xfff ; jae 0xf86b8 ; ret
0x0000000000079f54 : mov eax, 3 ; syscall ; cmp rax, -0x1000 ; ja 0x79f78 ; ret
0x00000000000c89f0 : mov eax, 3 ; syscall ; cmp rax, -0x1000 ; ja 0xc8a18 ; pop rbx ; ret
0x00000000000f8f19 : mov eax, 3 ; syscall ; cmp rax, -0xfff ; jae 0xf8f68 ; ret
0x00000000000f820e : mov eax, 4 ; syscall ; cmp rax, -0x1000 ; ja 0xf8230 ; ret
0x00000000000f82ae : mov eax, 6 ; syscall ; cmp rax, -0x1000 ; ja 0xf82d0 ; ret
0x00000000000fcd69 : mov eax, 7 ; syscall ; cmp rax, -0xfff ; jae 0xfcdb8 ; ret
0x0000000000108da0 : mov eax, 8 ; syscall ; cmp rax, -0xfff ; jae 0x108dbf ; ret
0x000000000003417a : mov eax, dword ptr [r9 + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x00000000000ac7ea : mov eax, dword ptr [r9] ; cmp dword ptr [r10], eax ; jne 0xac87c ; test eax, eax ; jne 0xac7e0 ; mov rax, rdi ; ret
0x0000000000107761 : mov eax, dword ptr [rax + 0x108] ; ret
0x000000000013d1e5 : mov eax, dword ptr [rax + 0x10] ; add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000138277 : mov eax, dword ptr [rax + 0x10] ; bswap eax ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x000000000014616f : mov eax, dword ptr [rax + 0x128] ; jmp rax
0x0000000000075f5c : mov eax, dword ptr [rax + 0x130] ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000010b480 : mov eax, dword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x000000000013da3d : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000010b370 : mov eax, dword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x000000000012ae47 : mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x12ae57 ; ret
0x00000000000fe978 : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; je 0xfe98b ; ret
0x0000000000075f63 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000013afbc : mov eax, dword ptr [rax + 0x20] ; test eax, eax ; je 0x13afdb ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116679 : mov eax, dword ptr [rax + 0x30] ; ret
0x000000000010bcc7 : mov eax, dword ptr [rax + 0x38] ; ret
0x00000000001074ac : mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x000000000012df6d : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x12df85 ; mov rdi, rsp ; call rax
0x000000000012e058 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x12e070 ; mov rdi, rsp ; call rax
0x000000000012e913 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x12e92b ; mov rdi, rbp ; call rax
0x000000000012f976 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x12f98e ; mov rdi, rbx ; call rax
0x000000000012fbf1 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x12fa9f ; mov rdi, rbx ; call rax
0x000000000012fce8 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x12fd00 ; mov rdi, rbx ; call rax
0x0000000000134aec : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x134b0c ; lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x00000000001354e4 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x1354fc ; mov rdi, r12 ; call rax
0x00000000001356b5 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x1356cf ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000136a6a : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x136997 ; mov rdi, rbx ; call rax
0x00000000001369a1 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x1369b9 ; mov rdi, r12 ; call rax
0x0000000000136b92 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x136baa ; mov rdi, rbp ; call rax
0x0000000000136db2 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x136dca ; mov rdi, rbp ; call rax
0x0000000000137889 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x1378a3 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000137f75 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x137f8d ; mov rdi, r12 ; call rax
0x00000000001382e9 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x138303 ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000013b875 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x13b88f ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013bf8e : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x13bfa8 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000137834 : mov eax, dword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000002e052 : mov eax, dword ptr [rax + 0x40] ; movzx eax, word ptr [rax + rdi*2 + 0x100] ; and eax, esi ; ret
0x000000000002de82 : mov eax, dword ptr [rax + 0x48] ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x0000000000076864 : mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000138114 : mov eax, dword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000002de62 : mov eax, dword ptr [rax + 0x58] ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000003a996 : mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000134a8a : mov eax, dword ptr [rax + 0xa0] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000002cb5e : mov eax, dword ptr [rax + 0xa8] ; ret
0x00000000001382af : mov eax, dword ptr [rax + 0xc] ; bswap eax ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x00000000000aaa81 : mov eax, dword ptr [rax + 4] ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010773a : mov eax, dword ptr [rax + 8] ; ret
0x00000000001171d9 : mov eax, dword ptr [rax + 8] ; test r8, r8 ; jne 0x117186 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000008b8db : mov eax, dword ptr [rax + 8] ; test rax, rax ; jne 0x8b8d9 ; ret
0x00000000000d820c : mov eax, dword ptr [rax + rax*8] ; xor eax, eax ; bt r8, rcx ; jb 0xd8199 ; ret
0x000000000010bdf6 : mov eax, dword ptr [rax + rcx] ; mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000002de65 : mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002e027 : mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002d98f : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000002d9d8 : mov eax, dword ptr [rax + rdx] ; ret
0x000000000010c654 : mov eax, dword ptr [rax + rdx] ; shr eax, cl ; and eax, 1 ; ret
0x000000000002b46e : mov eax, dword ptr [rax + rsi*8] ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000048632 : mov eax, dword ptr [rax + rsi*8] ; mov qword ptr [rcx + rsi*8], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000194d95 : mov eax, dword ptr [rax] ; add byte ptr [rdx + rsi*2 - 0x74ab0016], ah ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ja 0x194d9b ; call rsp
0x0000000000146a47 : mov eax, dword ptr [rax] ; add rax, qword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x00000000000753a3 : mov eax, dword ptr [rax] ; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c220 : mov eax, dword ptr [rax] ; add rsp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000138237 : mov eax, dword ptr [rax] ; bswap eax ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x00000000000c800b : mov eax, dword ptr [rax] ; lea rdx, qword ptr [rdi + rdi*8] ; lea rax, qword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000002cb5c : mov eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000002e04f : mov eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x40] ; movzx eax, word ptr [rax + rdi*2 + 0x100] ; and eax, esi ; ret
0x000000000002de7f : mov eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x48] ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002de5f : mov eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x58] ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002d98c : mov eax, dword ptr [rax] ; mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000002cb59 : mov eax, dword ptr [rax] ; mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000002de7c : mov eax, dword ptr [rax] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x48] ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002de5c : mov eax, dword ptr [rax] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x58] ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x0000000000146366 : mov eax, dword ptr [rax] ; mov rdx, qword ptr [rsp + 0x38] ; add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x000000000002dd9c : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002ddbc : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002dcfc : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002dd7c : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002dc9c : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002dd3c : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002dcdc : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002dd1c : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000002de3c : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000002dcbc : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 2 ; movzx eax, ax ; ret
0x000000000002dd5c : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 4 ; movzx eax, ax ; ret
0x000000000002dc7c : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 8 ; movzx eax, ax ; ret
0x00000000001166c0 : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdx*2] ; shr ax, 0xe ; and eax, 1 ; ret
0x000000000003a993 : mov eax, dword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000012b0c9 : mov eax, dword ptr [rax] ; ret
0x0000000000106909 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x1069b3 ; call rax
0x0000000000106a80 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x106b8b ; call rax
0x0000000000114eac : mov eax, dword ptr [rax] ; test rax, rax ; je 0x114ede ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x000000000002adf9 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x2ae0b ; call rax
0x0000000000080a3a : mov eax, dword ptr [rax] ; test rax, rax ; je 0x80a4a ; call rax
0x0000000000087dd6 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x87de6 ; call rax
0x00000000000801d2 : mov eax, dword ptr [rax] ; test rax, rax ; jne 0x8020d ; xor edi, edi ; call qword ptr [r15]
0x0000000000073468 : mov eax, dword ptr [rbp + 0x18] ; mov esi, r12d ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000001356b1 : mov eax, dword ptr [rbp + 0x18] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x1356d3 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013b871 : mov eax, dword ptr [rbp + 0x18] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x13b893 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013bf8a : mov eax, dword ptr [rbp + 0x18] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x13bfac ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000000204a7 : mov eax, dword ptr [rbp + 0x18] ; test rax, rax ; je 0x204bf ; mov rdi, rbp ; call rax
0x00000000000738a4 : mov eax, dword ptr [rbp + 0x20] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000007366d : mov eax, dword ptr [rbp + 0x28] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000070bad : mov eax, dword ptr [rbp + 0x48] ; add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000003a27d : mov eax, dword ptr [rbp + rax + 0x18] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x000000000010c6c4 : mov eax, dword ptr [rbp + rax*8] ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001046b3 : mov eax, dword ptr [rbp - 0x48] ; call rax
0x00000000000ee9f5 : mov eax, dword ptr [rbp - 0xd8] ; call rax
0x000000000007d37d : mov eax, dword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000007d39e : mov eax, dword ptr [rbx + 0x18] ; mov esi, dword ptr [rsp + 0xc] ; mov rdi, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000078d51 : mov eax, dword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x000000000012e90f : mov eax, dword ptr [rbx + 0x20] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12e92f ; mov rdi, rbp ; call rax
0x0000000000130f21 : mov eax, dword ptr [rbx + 0x20] ; sub rax, qword ptr [rbx + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x000000000007da49 : mov eax, dword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000007de69 : mov eax, dword ptr [rbx + 0x48] ; add rsp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000074442 : mov eax, dword ptr [rbx + 0x60] ; mov qword ptr [rbp], rax ; mov qword ptr [rbx + 0x60], rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007ed95 : mov eax, dword ptr [rbx + 0x60] ; mov qword ptr [rbp], rax ; mov qword ptr [rbx + 0x60], rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001382e5 : mov eax, dword ptr [rbx + 0x60] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x138307 ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x0000000000137885 : mov eax, dword ptr [rbx + 0x70] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x1378a7 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x000000000013b7ee : mov eax, dword ptr [rbx + 0xe8] ; test rax, rax ; jne 0x13b7ec ; pop rbx ; ret
0x000000000013d481 : mov eax, dword ptr [rbx + 8] ; lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000078d49 : mov eax, dword ptr [rbx + 8] ; mov qword ptr [rbx + 0x10], rax ; mov rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x0000000000130e21 : mov eax, dword ptr [rbx + 8] ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x000000000007c676 : mov eax, dword ptr [rbx + 8] ; pop rbx ; pop rbp ; movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002bbfc : mov eax, dword ptr [rbx - 0x78f0f305] ; fiadd dword ptr [rax] ; add byte ptr [rax], al ; movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x00000000000cd4d9 : mov eax, dword ptr [rbx] ; mov rdx, qword ptr [rax + 0x18] ; test rdx, rdx ; je 0xcd4f4 ; call rdx
0x000000000013ab0a : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x13ab20 ; pop rbx ; ret
0x0000000000168304 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x00000000000a2e59 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000001682e5 : mov eax, dword ptr [rcx + 4] ; mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x00000000000a2e3a : mov eax, dword ptr [rcx + 4] ; mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x0000000000168316 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x0000000000163fc6 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000168397 : mov eax, dword ptr [rcx + 5] ; mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000164007 : mov eax, dword ptr [rcx + 5] ; mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x0000000000168336 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x0000000000163fd6 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000001683b7 : mov eax, dword ptr [rcx + 6] ; mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x0000000000164027 : mov eax, dword ptr [rcx + 6] ; mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x0000000000168356 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x00000000000a2edd : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000001683d7 : mov eax, dword ptr [rcx + 7] ; mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x0000000000164047 : mov eax, dword ptr [rcx + 7] ; mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x0000000000168376 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x00000000000a2efd : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000168267 : mov eax, dword ptr [rcx + 8] ; mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x0000000000163f37 : mov eax, dword ptr [rcx + 8] ; mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x00000000000a2ebe : mov eax, dword ptr [rcx + 8] ; mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x0000000000149a2a : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000000aae7e : mov eax, dword ptr [rcx + rax*4] ; sub eax, dword ptr [rcx + r8*4] ; je 0xaae6a ; ret
0x000000000014b302 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000003417b : mov eax, dword ptr [rcx + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x000000000019747d : mov eax, dword ptr [rcx] ; add byte ptr [rbx + rax*8 - 0xa], ah ; call rsp
0x00000000000ac7eb : mov eax, dword ptr [rcx] ; cmp dword ptr [r10], eax ; jne 0xac87b ; test eax, eax ; jne 0xac7df ; mov rax, rdi ; ret
0x00000000001682c0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x00000000001682d0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x00000000000a2e15 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000001682e0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov ax, word ptr [rcx + 4] ; mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x00000000000a2e35 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov ax, word ptr [rcx + 4] ; mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x0000000000168300 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x00000000000a2e55 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000000a2e05 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000006307e : mov eax, dword ptr [rcx] ; mov qword ptr [rbp - 0x668], rax ; jmp 0x60a5b
0x000000000016a6cc : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000168211 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000168311 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x0000000000163fc1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000168331 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x0000000000163fd1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000168351 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x0000000000163fe1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000168371 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x0000000000163ff1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000168391 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, qword ptr [rcx + 5] ; mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000164001 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, qword ptr [rcx + 5] ; mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x00000000001683b1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, qword ptr [rcx + 6] ; mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x0000000000164021 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, qword ptr [rcx + 6] ; mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x00000000001683d1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, qword ptr [rcx + 7] ; mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x0000000000164041 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, qword ptr [rcx + 7] ; mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x0000000000168261 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, qword ptr [rcx + 8] ; mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x0000000000163f31 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, qword ptr [rcx + 8] ; mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000163ee1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000168291 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x00000000001682a1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x00000000000a2de6 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000000a2dd6 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000000f7e05 : mov eax, dword ptr [rdi + 0x100] ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000cd56d : mov eax, dword ptr [rdi + 0x10] ; test rax, rax ; je 0xcd582 ; call rax
0x000000000013e6bf : mov eax, dword ptr [rdi + 0x18] ; add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000013e661 : mov eax, dword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000002c352 : mov eax, dword ptr [rdi + 0x20] ; mov rbx, rdi ; test rax, rax ; je 0x2c36a ; call rax
0x00000000001721b8 : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x1721cf ; call rax
0x000000000007f761 : mov eax, dword ptr [rdi + 0x28] ; cmp qword ptr [rdi + 0x10], rax ; cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000078d91 : mov eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000001104f1 : mov eax, dword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; cmp rax, rsi ; jb 0x110519 ; mov eax, 1 ; ret
0x0000000000078c81 : mov eax, dword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000137970 : mov eax, dword ptr [rdi + 0x48] ; bswap eax ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x0000000000076861 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007d21b : mov eax, dword ptr [rdi + 0x48] ; mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x00000000001379c0 : mov eax, dword ptr [rdi + 0x54] ; bswap eax ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x0000000000137998 : mov eax, dword ptr [rdi + 0x58] ; bswap eax ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x00000000000f7288 : mov eax, dword ptr [rdi + 0x80] ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000740d1 : mov eax, dword ptr [rdi + 0xa0] ; cmp qword ptr [rax + 0x30], 0 ; je 0x740ed ; ret
0x000000000007b511 : mov eax, dword ptr [rdi + 8] ; cmp rax, qword ptr [rdi + 0x10] ; jae 0x7b52c ; movzx eax, byte ptr [rax] ; ret
0x000000000007f277 : mov eax, dword ptr [rdi + 8] ; cmp rax, rdx ; jae 0x7f2ab ; movzx eax, byte ptr [rax] ; ret
0x000000000013d376 : mov eax, dword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000013db01 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000130d51 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013dd81 : mov eax, dword ptr [rdi + 8] ; mov qword ptr [rsp + 8], r8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013b2a9 : mov eax, dword ptr [rdi + 8] ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000013d469 : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000012eba7 : mov eax, dword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x00000000000ac6dd : mov eax, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0xac6b9 ; ret
0x000000000016c811 : mov eax, dword ptr [rdi - 8] ; cmp rcx, rax ; jne 0x16ccd1 ; xor eax, eax ; ret
0x000000000016d9e1 : mov eax, dword ptr [rdi - 8] ; cmp rcx, rax ; jne 0x16db11 ; xor eax, eax ; ret
0x000000000016cc93 : mov eax, dword ptr [rdi - 8] ; mov rcx, qword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x16ccd1 ; xor eax, eax ; ret
0x000000000016dad3 : mov eax, dword ptr [rdi - 8] ; mov rcx, qword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x16db11 ; xor eax, eax ; ret
0x000000000007ee6f : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000116e45 : mov eax, dword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x0000000000078d82 : mov eax, dword ptr [rdx + 0x20] ; sub rax, qword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x0000000000078c72 : mov eax, dword ptr [rdx + 0x38] ; sub rax, qword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x000000000002ddf3 : mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x00000000000aae37 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0xaae29 ; ret
0x0000000000093e96 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000121aa5 : mov eax, dword ptr [rdx + rax*8 + 4] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007ee61 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x7ee60 ; ret
0x0000000000146aa1 : mov eax, dword ptr [rip + 0x27a3d1] ; mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x00000000001469b1 : mov eax, dword ptr [rip + 0x27a3f9] ; add rax, qword ptr fs:[0] ; ret
0x0000000000143b24 : mov eax, dword ptr [rip + 0x27e8c6] ; call qword ptr [rax]
0x00000000001434f7 : mov eax, dword ptr [rip + 0x27eef3] ; call qword ptr [rax]
0x000000000013b7a1 : mov eax, dword ptr [rip + 0x2856d1] ; cmp dword ptr fs:[rax], 0x18 ; je 0x13b7bc ; ret
0x000000000013aae1 : mov eax, dword ptr [rip + 0x2862c1] ; lea rdx, qword ptr [rip + 0x28b4b2] ; mov qword ptr fs:[rax], rdx ; ret
0x000000000012b0c1 : mov eax, dword ptr [rip + 0x295f21] ; mov rax, qword ptr fs:[rax] ; ret
0x000000000012ae41 : mov eax, dword ptr [rip + 0x295ff1] ; mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x12ae5d ; ret
0x000000000012a1b9 : mov eax, dword ptr [rip + 0x296c79] ; and dword ptr [rax + 0x40], 0xfffffff9 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011b541 : mov eax, dword ptr [rip + 0x2a5919] ; add rax, qword ptr fs:[0] ; ret
0x0000000000117221 : mov eax, dword ptr [rip + 0x2adee1] ; test rax, rax ; je 0x11723b ; ret
0x000000000010bcc1 : mov eax, dword ptr [rip + 0x2b51a1] ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000010b479 : mov eax, dword ptr [rip + 0x2b8f59] ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x000000000010b369 : mov eax, dword ptr [rip + 0x2b9069] ; mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x0000000000107741 : mov eax, dword ptr [rip + 0x2b9731] ; mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x0000000000103ae1 : mov eax, dword ptr [rip + 0x2bd391] ; mov dword ptr fs:[rax], 0x16 ; ret
0x0000000000103aab : mov eax, dword ptr [rip + 0x2bd3c7] ; mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x0000000000103a9a : mov eax, dword ptr [rip + 0x2bd3d8] ; mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x00000000000fe971 : mov eax, dword ptr [rip + 0x2c24f1] ; mov rax, qword ptr [rax + 0x18] ; test rax, rax ; je 0xfe992 ; ret
0x00000000000fe951 : mov eax, dword ptr [rip + 0x2c2521] ; mov dword ptr fs:[rax], 0x16 ; mov eax, edi ; ret
0x00000000000fe8a1 : mov eax, dword ptr [rip + 0x2c25d1] ; mov dword ptr fs:[rax], 0x16 ; mov eax, edi ; ret
0x00000000000fe48d : mov eax, dword ptr [rip + 0x2c2a35] ; mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x00000000000fe465 : mov eax, dword ptr [rip + 0x2c2a5d] ; mov qword ptr [rax], rdx ; xor eax, eax ; cmp rdi, rdx ; ja 0xfe4b1 ; ret
0x00000000000fcd41 : mov eax, dword ptr [rip + 0x2c4131] ; mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x00000000000ec211 : mov eax, dword ptr [rip + 0x2d4c61] ; neg edx ; mov dword ptr fs:[rax], edx ; mov eax, 0xffffffff ; ret
0x00000000000bf1e8 : mov eax, dword ptr [rip + 0x304902] ; lea rcx, qword ptr [rax + r9] ; mov rdx, rax ; jmp 0xbf207
0x00000000000bbc11 : mov eax, dword ptr [rip + 0x305261] ; mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x0000000000087dcf : mov eax, dword ptr [rip + 0x33909b] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x87ded ; call rax
0x000000000008681f : mov eax, dword ptr [rip + 0x33a6bb] ; mov qword ptr [rax], rdi ; ret
0x0000000000085761 : mov eax, dword ptr [rip + 0x33b711] ; mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x00000000000843e2 : mov eax, dword ptr [rip + 0x33c9e0] ; xor edi, edi ; call qword ptr [rax]
0x000000000008426a : mov eax, dword ptr [rip + 0x33cb58] ; mov qword ptr [rsp + 8], r8 ; xor edi, edi ; call qword ptr [rax]
0x0000000000080a33 : mov eax, dword ptr [rip + 0x340477] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x80a51 ; call rax
0x00000000000801cb : mov eax, dword ptr [rip + 0x340cdf] ; mov rax, qword ptr [rax] ; test rax, rax ; jne 0x80214 ; xor edi, edi ; call qword ptr [r15]
0x000000000003546b : mov eax, dword ptr [rip + 0x38ba07] ; mov dword ptr fs:[rax], 0x22 ; add rsp, 8 ; ret
0x0000000000035136 : mov eax, dword ptr [rip + 0x38bd3c] ; mov dword ptr fs:[rax], 0x22 ; add rsp, 0x28 ; ret
0x0000000000034e19 : mov eax, dword ptr [rip + 0x38c059] ; mov dword ptr fs:[rax], 0x22 ; add rsp, 0x28 ; ret
0x0000000000034189 : mov eax, dword ptr [rip + 0x38cce9] ; mov dword ptr fs:[rax], 0x2a ; mov rax, rcx ; ret
0x000000000002e061 : mov eax, dword ptr [rip + 0x392da9] ; add rax, qword ptr fs:[0] ; ret
0x000000000002e081 : mov eax, dword ptr [rip + 0x392e61] ; add rax, qword ptr fs:[0] ; ret
0x000000000002e0a1 : mov eax, dword ptr [rip + 0x392e89] ; add rax, qword ptr fs:[0] ; ret
0x000000000002d93c : mov eax, dword ptr [rip + 0x3934a6] ; mov qword ptr [rax], rdx ; ret
0x0000000000020da1 : mov eax, dword ptr [rip + 0x3a00d1] ; mov dword ptr fs:[rax], 9 ; mov eax, edi ; ret
0x00000000000207a1 : mov eax, dword ptr [rip + 0x3a06d1] ; add rax, qword ptr fs:[0] ; ret
0x000000000010cc99 : mov eax, dword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000010cd19 : mov eax, dword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000010ca19 : mov eax, dword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000010cc19 : mov eax, dword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000010c819 : mov eax, dword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000010cb19 : mov eax, dword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000010ca99 : mov eax, dword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000010c899 : mov eax, dword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000010c919 : mov eax, dword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 2 ; movzx eax, ax ; ret
0x000000000010cb99 : mov eax, dword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 4 ; movzx eax, ax ; ret
0x000000000010c799 : mov eax, dword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 8 ; movzx eax, ax ; ret
0x000000000002dfe1 : mov eax, dword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002e001 : mov eax, dword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002df41 : mov eax, dword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002dfc1 : mov eax, dword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002dee1 : mov eax, dword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002df81 : mov eax, dword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002df21 : mov eax, dword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002df61 : mov eax, dword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000002deb1 : mov eax, dword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000002df01 : mov eax, dword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 2 ; movzx eax, ax ; ret
0x000000000002dfa1 : mov eax, dword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 4 ; movzx eax, ax ; ret
0x000000000002dec1 : mov eax, dword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 8 ; movzx eax, ax ; ret
0x0000000000137f71 : mov eax, dword ptr [rsi + 0x70] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x137f91 ; mov rdi, r12 ; call rax
0x000000000002e021 : mov eax, dword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e031 : mov eax, dword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000ac30f : mov eax, dword ptr [rsi + 8] ; mov dword ptr [rdi + 0xc], eax ; mov rax, rbx ; pop rbx ; ret
0x000000000002cb39 : mov eax, dword ptr [rsi + rax*8 + 0x80] ; ret
0x00000000001160fe : mov eax, dword ptr [rsi - 0x10] ; mov qword ptr [rbp - 0x70], rax ; mov eax, dword ptr [r14 - 0x30] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x00000000000368a5 : mov eax, dword ptr [rsi] ; and rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000036b95 : mov eax, dword ptr [rsi] ; or rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000145d1e : mov eax, dword ptr [rsp + 0x10] ; call rax
0x00000000000a0850 : mov eax, dword ptr [rsp + 0x10] ; mov byte ptr [rdi + 4], cl ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a0840 : mov eax, dword ptr [rsp + 0x10] ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a07f8 : mov eax, dword ptr [rsp + 0x10] ; mov dword ptr [rdi], eax ; mov eax, dword ptr [rsp + 0x18] ; mov dword ptr [rdi + 4], eax ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a0860 : mov eax, dword ptr [rsp + 0x10] ; mov word ptr [rdi + 4], r11w ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000203eb : mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000000a07fe : mov eax, dword ptr [rsp + 0x18] ; mov dword ptr [rdi + 4], eax ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000f1397 : mov eax, dword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xf13d9
0x0000000000025846 : mov eax, dword ptr [rsp + 0x20] ; call rax
0x00000000000ad1e1 : mov eax, dword ptr [rsp + 0x30] ; add rsp, 0x60 ; pop rbx ; pop rbp ; sub rax, r12 ; pop r12 ; ret
0x0000000000039277 : mov eax, dword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x0000000000136b8d : mov eax, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x136baf ; mov rdi, rbp ; call rax
0x000000000013699c : mov eax, dword ptr [rsp + 0x48] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x1369be ; mov rdi, r12 ; call rax
0x00000000000798ba : mov eax, dword ptr [rsp + 8] ; cmp qword ptr [rax + 0x30], 0 ; je 0x798d9 ; add rsp, 0x38 ; ret
0x000000000005c0cd : mov eax, dword ptr [rsp + 8] ; lea rdx, qword ptr [rax + 8] ; mov qword ptr [r12 + 8], rdx ; jmp 0x5c0ac
0x000000000013dec5 : mov eax, dword ptr [rsp + 8] ; lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013d3bf : mov eax, dword ptr [rsp + 8] ; mov qword ptr [rbx], rax ; add rsp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x0000000000139e51 : mov eax, dword ptr [rsp + 8] ; mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013981c : mov eax, dword ptr [rsp + 8] ; mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000001399a0 : mov eax, dword ptr [rsp + 8] ; mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000012df68 : mov eax, dword ptr [rsp + 8] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12df8a ; mov rdi, rsp ; call rax
0x000000000012e053 : mov eax, dword ptr [rsp + 8] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12e075 ; mov rdi, rsp ; call rax
0x000000000010422e : mov eax, dword ptr [rsp + 8] ; mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x0000000000131a81 : mov eax, dword ptr [rsp + 8] ; mov rdx, rbx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000cd38a : mov eax, dword ptr [rsp + 8] ; test rax, rax ; je 0xcd39e ; call rax
0x000000000011f6b6 : mov eax, dword ptr [rsp] ; mov ecx, 0x400 ; mov rdx, r15 ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000013bae1 : mov eax, dword ptr [rsp] ; mov qword ptr [rbx + 8], rax ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011c21f : mov eax, dword ptr fs:[rax] ; add rsp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007b4a9 : mov eax, eax ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x6b], cl ; sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x000000000007a838 : mov eax, eax ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x7b], cl ; sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000000aae35 : mov eax, eax ; mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0xaae2b ; ret
0x000000000013ed23 : mov eax, eax ; mov qword ptr [rbx], rax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000003af01 : mov eax, eax ; mov qword ptr [rdi + 8], rdx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000134c58 : mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x0000000000020c3a : mov eax, eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000003a909 : mov eax, eax ; or rax, rdx ; ret
0x000000000001fb86 : mov eax, ebp ; cmp r9, rax ; je 0x1fb31 ; jmp 0x1fb5a
0x0000000000103d7e : mov eax, ebp ; pop rbp ; pop r12 ; jmp rax
0x0000000000106d34 : mov eax, ebp ; sub rax, r14 ; mov qword ptr [rbp], r14 ; mov qword ptr [rsp + 0x18], rax ; mov rdx, rax ; jmp 0x106d9f
0x0000000000048893 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000000c96bd : mov eax, ebx ; call rax
0x0000000000098683 : mov eax, ebx ; lea rbx, qword ptr [rbx - 1] ; cmp rax, 1 ; ja 0x98679 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000099216 : mov eax, ebx ; pop rbx ; cmovne rax, rdx ; ret
0x0000000000105534 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000001029f0 : mov eax, ecx ; mov r9, qword ptr [rsp + 8] ; syscall ; cmp rax, -0xfff ; jae 0x102a13 ; ret
0x000000000012672e : mov eax, ecx ; shr eax, 3 ; mov ecx, eax ; xor eax, eax ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x000000000003a900 : mov eax, edi ; cdq ; idiv esi ; shl rdx, 0x20 ; mov eax, eax ; or rax, rdx ; ret
0x000000000013a4b6 : mov eax, edi ; mov rcx, r14 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000108ec1 : mov eax, edi ; movzx edi, dil ; shr rax, 0xc ; xor al, al ; or eax, edi ; ret
0x00000000000adf47 : mov eax, edi ; pop rbx ; neg rax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011aeca : mov eax, edi ; sar rax, 6 ; ret
0x000000000003a8c4 : mov eax, edi ; sar rdx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x0000000000102d0a : mov eax, edx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x102d27 ; ret
0x0000000000109380 : mov eax, edx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x10939d ; ret
0x0000000000109680 : mov eax, edx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x10969d ; ret
0x0000000000109710 : mov eax, edx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x10972d ; ret
0x00000000001097d0 : mov eax, edx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x1097ed ; ret
0x000000000010991a : mov eax, edx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x109937 ; ret
0x0000000000109a2a : mov eax, edx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x109a47 ; ret
0x0000000000109aba : mov eax, edx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x109ad7 ; ret
0x0000000000109ca0 : mov eax, edx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x109cbd ; ret
0x0000000000109f00 : mov eax, edx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x109f1d ; ret
0x000000000010a550 : mov eax, edx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x10a56d ; ret
0x000000000010a5b0 : mov eax, edx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x10a5cd ; ret
0x00000000000cd29a : mov eax, edx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xcd2b7 ; ret
0x00000000000cd2fa : mov eax, edx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xcd317 ; ret
0x00000000000f6ea0 : mov eax, edx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xf6ebd ; ret
0x00000000000f6f00 : mov eax, edx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xf6f1d ; ret
0x00000000000f869a : mov eax, edx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xf86b7 ; ret
0x00000000000f88ba : mov eax, edx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xf88d7 ; ret
0x00000000000f891a : mov eax, edx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xf8937 ; ret
0x00000000000f8f4a : mov eax, edx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xf8f67 ; ret
0x00000000000f909a : mov eax, edx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xf90b7 ; ret
0x00000000000fcd9a : mov eax, edx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xfcdb7 ; ret
0x00000000000fd8a0 : mov eax, edx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xfd8bd ; ret
0x00000000000fe5ea : mov eax, edx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xfe607 ; ret
0x00000000000fe64a : mov eax, edx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xfe667 ; ret
0x00000000000fe6b0 : mov eax, edx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xfe6cd ; ret
0x00000000000fe710 : mov eax, edx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xfe72d ; ret
0x00000000000feb80 : mov eax, edx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xfeb9d ; ret
0x00000000000fed3a : mov eax, edx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xfed57 ; ret
0x00000000000fedca : mov eax, edx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xfede7 ; ret
0x0000000000099d6a : mov eax, edx ; cmp r8b, dil ; jb 0x99d59 ; mov rdx, rax ; jmp 0x99d10
0x00000000000997ea : mov eax, edx ; mov r10d, r15d ; cmp r10b, r8b ; jb 0x997dc ; mov rdx, rax ; jmp 0x99788
0x0000000000034a84 : mov eax, edx ; neg rax ; or rax, rdx ; sar rax, 0x3f ; not eax ; and eax, ecx ; ret
0x0000000000076ef9 : mov eax, edx ; sar rax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000004aa7e : mov eax, esi ; cmovae rax, rdi ; ret
0x0000000000076734 : mov eax, esp ; sub rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000195a2c : mov eax, fs ; add byte ptr [rax], al ; and al, 0xa0 ; out dx, al ; jmp rsp
0x00000000000ffb29 : mov ebp, 0x441f0f66 ; add byte ptr [rax], al ; ret
0x00000000000a0c41 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000a0c51 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x00000000000a0c31 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000003013f : mov ebp, 0x48003927 ; ror eax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x00000000001725f7 : mov ebp, 0x48ffead3 ; cmp ebx, ebp ; jb 0x1725fb ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000013ee33 : mov ebp, 0x8b48ffff ; cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000185e79 : mov ebp, 0xbe48fffc ; cld ; ljmp ptr [rax - 0x41] ; cld ; dec dword ptr [rax] ; scasd eax, dword ptr [rdi] ; cld ; lcall ptr [rax] ; ret 0xfffc
0x0000000000193375 : mov ebp, 0xbf30fffb ; sti ; push qword ptr [rax + 0x30fffbc0] ; ret 0xfffb
0x0000000000185f31 : mov ebp, 0xbfe8fffd ; std ; ljmp ptr [rax] ; ret 0xfffd
0x000000000017b684 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x0000000000114736 : mov ebp, 0xc085ffff ; je 0x114720 ; mov rax, qword ptr [r12 + 0x38] ; jmp 0x114714
0x000000000013ee4a : mov ebp, 0xc7ffff ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000007ec66 : mov ebp, 0xd8838b48 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000000a0cb1 : mov ebp, 0xea8348c0 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x00000000000a0c61 : mov ebp, 0xea8348c0 ; add rdx, rax ; jl 0xa0cde ; add rax, rdi ; ret
0x00000000000a0c91 : mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x00000000000a0c71 : mov ebp, 0xea8348c0 ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x00000000000a0d62 : mov ebp, 0xf80148c0 ; add rax, r8 ; ret
0x000000000005722d : mov ebp, 0xfffffb60 ; call rax
0x00000000000f828c : mov ebp, dword ptr [rax + rax] ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000000f82c4 : mov ebp, dword ptr [rax + rax] ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000010b861 : mov ebp, dword ptr [rbx] ; add byte ptr [rbx + 0x29f08930], cl ; fmul dword ptr [rdi] ; test dword ptr [rax], esp ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x000000000007af79 : mov ebp, dword ptr [rdi + 0x90] ; pop rbx ; sub rbp, rax ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000079bf3 : mov ebp, eax ; add rsp, 0x18 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013dec0 : mov ebp, eax ; jne 0x13de61 ; mov rax, qword ptr [r12 + 8] ; lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013e004 : mov ebp, eax ; jne 0x13dfd8 ; mov rax, qword ptr [r12 + 8] ; lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013ae39 : mov ebp, eax ; mov r12d, dword ptr [rax] ; jmp 0x13ae4d
0x00000000001046b0 : mov ebp, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000098474 : mov ebp, edx ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000006efdc : mov ebp, edx ; mov rbx, rdi ; sub rsp, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x00000000000e4c55 : mov ebp, esi ; mov qword ptr [rsp + 0x28], rdi ; add rax, rdx ; jmp rax
0x00000000000b7dfd : mov ebx, 0x1480d73 ; ror dword ptr [rax + 1], 1 ; ret 0x8b41
0x000000000007f929 : mov ebx, 0x441f0f66 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000086821 : mov ebx, 0x480033a6 ; mov dword ptr [rax], edi ; ret
0x00000000000270d9 : mov ebx, 0xba001636 ; lahf ; add dword ptr [rax], eax ; add al, ch ; leave ; push 0 ; add byte ptr [rcx - 0x77], al ; ret 0x7be9
0x0000000000134af6 : mov ebx, 0xc8 ; call rax
0x00000000001a547d : mov ebx, 0xdf300000 ; cld ; call qword ptr [rax]
0x00000000000fe084 : mov ebx, 0xffffffff ; add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x0000000000142ead : mov ebx, 0xffffffff ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fe505 : mov ebx, 0xffffffff ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001a64e4 : mov ebx, cs ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x000000000013ab02 : mov ebx, dword ptr [rip + 0x2862a0] ; mov rax, qword ptr fs:[rbx] ; test rax, rax ; je 0x13ab28 ; pop rbx ; ret
0x0000000000079fff : mov ebx, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x000000000006f4c2 : mov ebx, eax ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006bb64 : mov ebx, eax ; je 0x6bba0 ; add rsp, 0x1008 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000079b9f : mov ebx, eax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001196ef : mov ebx, eax ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000fe0df : mov ebx, eax ; mov rax, rbx ; pop rbx ; ret
0x000000000006f4dd : mov ebx, ebp ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006efdf : mov ebx, edi ; sub rsp, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000002c356 : mov ebx, edi ; test rax, rax ; je 0x2c366 ; call rax
0x0000000000114ea9 : mov ebx, edx ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x114ee1 ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x0000000000055908 : mov ecx, 0x1b85b ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003ab07 : mov ecx, 0x38 ; add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000011f6b9 : mov ecx, 0x400 ; mov rdx, r15 ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000000ec1bb : mov ecx, 0x41002d4c ; neg eax ; mov dword ptr fs:[rax], r8d ; mov eax, 0xffffffff ; ret
0x00000000000474e1 : mov ecx, 0x441f0f66 ; add byte ptr [rax], al ; ret
0x00000000000838fe : mov ecx, 0x46ba0010 ; add al, byte ptr [rax] ; add al, ch ; ret 0xffff
0x0000000000116bb3 : mov ecx, 0x48002afa ; ror eax, 0x11 ; xor rax, qword ptr fs:[0x30] ; jmp rax
0x000000000017b3d4 : mov ecx, 0xbc00000d ; or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x0000000000105747 : mov ecx, 0xbefffff9 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x000000000007f143 : mov ecx, 0xc3003433 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000005a6b5 : mov ecx, 1 ; mov dword ptr [rbp - 0x10b0], 0 ; jmp rax
0x00000000001a72e4 : mov ecx, ds ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0xf], dl ; jmp qword ptr [rcx]
0x00000000000730a2 : mov ecx, dword ptr [rax + 0x10] ; mov qword ptr [rax], rdx ; mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000006eeaa : mov ecx, dword ptr [rax + 0xa0] ; mov qword ptr [rcx + 0x130], rdx ; ret
0x000000000012de79 : mov ecx, dword ptr [rax + 8] ; mov edx, dword ptr [rdi + 0x5c] ; lea rsi, qword ptr [rdi + 0x48] ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000002af81 : mov ecx, dword ptr [rax + rdi*8] ; test rcx, rcx ; je 0x2af93 ; call rcx
0x000000000006f7d9 : mov ecx, dword ptr [rax] ; test ecx, ecx ; jne 0x6f775 ; mov dword ptr fs:[rax], 5 ; mov rax, rdx ; pop rbx ; ret
0x0000000000078919 : mov ecx, dword ptr [rax] ; test ecx, ecx ; jne 0x788b5 ; mov dword ptr fs:[rax], 5 ; mov rax, rdx ; pop rbx ; ret
0x00000000000e25e2 : mov ecx, dword ptr [rbp + 4] ; test ecx, ecx ; jle 0xe266b ; xor ebx, ebx ; mov rdx, rax ; jmp 0xe260a
0x00000000000adb25 : mov ecx, dword ptr [rdi + rdx*4] ; test r9d, r9d ; jne 0xadaec ; mov rax, rdx ; ret
0x0000000000093e93 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000104af1 : mov ecx, dword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000146733 : mov ecx, dword ptr [rdx] ; mov rdx, r13 ; add r9, qword ptr [rbp - 0x88] ; call rax
0x00000000001432e4 : mov ecx, dword ptr [rip + 0x27db8e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000143294 : mov ecx, dword ptr [rip + 0x27dbde] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a791 : mov ecx, dword ptr [rip + 0x2b66e1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a761 : mov ecx, dword ptr [rip + 0x2b6711] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a731 : mov ecx, dword ptr [rip + 0x2b6741] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a701 : mov ecx, dword ptr [rip + 0x2b6771] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a6d4 : mov ecx, dword ptr [rip + 0x2b679e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a6a4 : mov ecx, dword ptr [rip + 0x2b67ce] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a671 : mov ecx, dword ptr [rip + 0x2b6801] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a641 : mov ecx, dword ptr [rip + 0x2b6831] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a611 : mov ecx, dword ptr [rip + 0x2b6861] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a5e1 : mov ecx, dword ptr [rip + 0x2b6891] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a5c0 : mov ecx, dword ptr [rip + 0x2b68b2] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a560 : mov ecx, dword ptr [rip + 0x2b6912] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109fc4 : mov ecx, dword ptr [rip + 0x2b6eae] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109f91 : mov ecx, dword ptr [rip + 0x2b6ee1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109f61 : mov ecx, dword ptr [rip + 0x2b6f11] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109f34 : mov ecx, dword ptr [rip + 0x2b6f3e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109f10 : mov ecx, dword ptr [rip + 0x2b6f62] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109cb0 : mov ecx, dword ptr [rip + 0x2b71c2] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109b81 : mov ecx, dword ptr [rip + 0x2b72f1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109b54 : mov ecx, dword ptr [rip + 0x2b731e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109b21 : mov ecx, dword ptr [rip + 0x2b7351] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109af1 : mov ecx, dword ptr [rip + 0x2b7381] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109aca : mov ecx, dword ptr [rip + 0x2b73a8] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109a61 : mov ecx, dword ptr [rip + 0x2b7411] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109a3a : mov ecx, dword ptr [rip + 0x2b7438] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001099b4 : mov ecx, dword ptr [rip + 0x2b74be] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109984 : mov ecx, dword ptr [rip + 0x2b74ee] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109951 : mov ecx, dword ptr [rip + 0x2b7521] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010992a : mov ecx, dword ptr [rip + 0x2b7548] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001098c4 : mov ecx, dword ptr [rip + 0x2b75ae] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109891 : mov ecx, dword ptr [rip + 0x2b75e1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109861 : mov ecx, dword ptr [rip + 0x2b7611] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109834 : mov ecx, dword ptr [rip + 0x2b763e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109801 : mov ecx, dword ptr [rip + 0x2b7671] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001097e0 : mov ecx, dword ptr [rip + 0x2b7692] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109771 : mov ecx, dword ptr [rip + 0x2b7701] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109741 : mov ecx, dword ptr [rip + 0x2b7731] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109720 : mov ecx, dword ptr [rip + 0x2b7752] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001096b1 : mov ecx, dword ptr [rip + 0x2b77c1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109690 : mov ecx, dword ptr [rip + 0x2b77e2] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109624 : mov ecx, dword ptr [rip + 0x2b784e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001095f4 : mov ecx, dword ptr [rip + 0x2b787e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001095c4 : mov ecx, dword ptr [rip + 0x2b78ae] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109591 : mov ecx, dword ptr [rip + 0x2b78e1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109561 : mov ecx, dword ptr [rip + 0x2b7911] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109534 : mov ecx, dword ptr [rip + 0x2b793e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109504 : mov ecx, dword ptr [rip + 0x2b796e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001094d1 : mov ecx, dword ptr [rip + 0x2b79a1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001094a1 : mov ecx, dword ptr [rip + 0x2b79d1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109471 : mov ecx, dword ptr [rip + 0x2b7a01] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109441 : mov ecx, dword ptr [rip + 0x2b7a31] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109411 : mov ecx, dword ptr [rip + 0x2b7a61] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001093e4 : mov ecx, dword ptr [rip + 0x2b7a8e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001093b1 : mov ecx, dword ptr [rip + 0x2b7ac1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109390 : mov ecx, dword ptr [rip + 0x2b7ae2] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109324 : mov ecx, dword ptr [rip + 0x2b7b4e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001092f1 : mov ecx, dword ptr [rip + 0x2b7b81] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001092c1 : mov ecx, dword ptr [rip + 0x2b7bb1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109291 : mov ecx, dword ptr [rip + 0x2b7be1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109261 : mov ecx, dword ptr [rip + 0x2b7c11] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109231 : mov ecx, dword ptr [rip + 0x2b7c41] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109201 : mov ecx, dword ptr [rip + 0x2b7c71] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001091d1 : mov ecx, dword ptr [rip + 0x2b7ca1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001091a1 : mov ecx, dword ptr [rip + 0x2b7cd1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109174 : mov ecx, dword ptr [rip + 0x2b7cfe] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109131 : mov ecx, dword ptr [rip + 0x2b7d41] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109101 : mov ecx, dword ptr [rip + 0x2b7d71] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001090d1 : mov ecx, dword ptr [rip + 0x2b7da1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001090a4 : mov ecx, dword ptr [rip + 0x2b7dce] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109021 : mov ecx, dword ptr [rip + 0x2b7e51] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108e81 : mov ecx, dword ptr [rip + 0x2b7ff1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108e51 : mov ecx, dword ptr [rip + 0x2b8021] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108e21 : mov ecx, dword ptr [rip + 0x2b8051] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108df1 : mov ecx, dword ptr [rip + 0x2b8081] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108db1 : mov ecx, dword ptr [rip + 0x2b80c1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108d88 : mov ecx, dword ptr [rip + 0x2b80ea] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108c91 : mov ecx, dword ptr [rip + 0x2b81e1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108c61 : mov ecx, dword ptr [rip + 0x2b8211] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001076e4 : mov ecx, dword ptr [rip + 0x2b978e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001076b1 : mov ecx, dword ptr [rip + 0x2b97c1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107684 : mov ecx, dword ptr [rip + 0x2b97ee] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107651 : mov ecx, dword ptr [rip + 0x2b9821] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107621 : mov ecx, dword ptr [rip + 0x2b9851] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001075f4 : mov ecx, dword ptr [rip + 0x2b987e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001075c1 : mov ecx, dword ptr [rip + 0x2b98b1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107594 : mov ecx, dword ptr [rip + 0x2b98de] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107564 : mov ecx, dword ptr [rip + 0x2b990e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107531 : mov ecx, dword ptr [rip + 0x2b9941] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107501 : mov ecx, dword ptr [rip + 0x2b9971] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001074d4 : mov ecx, dword ptr [rip + 0x2b999e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102e61 : mov ecx, dword ptr [rip + 0x2be011] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102e31 : mov ecx, dword ptr [rip + 0x2be041] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102e01 : mov ecx, dword ptr [rip + 0x2be071] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102dd1 : mov ecx, dword ptr [rip + 0x2be0a1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102da4 : mov ecx, dword ptr [rip + 0x2be0ce] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102d71 : mov ecx, dword ptr [rip + 0x2be101] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102d41 : mov ecx, dword ptr [rip + 0x2be131] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102d1a : mov ecx, dword ptr [rip + 0x2be158] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102cb1 : mov ecx, dword ptr [rip + 0x2be1c1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102c81 : mov ecx, dword ptr [rip + 0x2be1f1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102a03 : mov ecx, dword ptr [rip + 0x2be46f] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000100701 : mov ecx, dword ptr [rip + 0x2c0771] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001006d1 : mov ecx, dword ptr [rip + 0x2c07a1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ff1d1 : mov ecx, dword ptr [rip + 0x2c1ca1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ff1a1 : mov ecx, dword ptr [rip + 0x2c1cd1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ff171 : mov ecx, dword ptr [rip + 0x2c1d01] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fee01 : mov ecx, dword ptr [rip + 0x2c2071] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fedda : mov ecx, dword ptr [rip + 0x2c2098] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fed71 : mov ecx, dword ptr [rip + 0x2c2101] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fed4a : mov ecx, dword ptr [rip + 0x2c2128] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fece1 : mov ecx, dword ptr [rip + 0x2c2191] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fecb1 : mov ecx, dword ptr [rip + 0x2c21c1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000feb90 : mov ecx, dword ptr [rip + 0x2c22e2] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000feb21 : mov ecx, dword ptr [rip + 0x2c2351] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fea81 : mov ecx, dword ptr [rip + 0x2c23f1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fe720 : mov ecx, dword ptr [rip + 0x2c2752] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fe6c0 : mov ecx, dword ptr [rip + 0x2c27b2] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fe65a : mov ecx, dword ptr [rip + 0x2c2818] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fe5fa : mov ecx, dword ptr [rip + 0x2c2878] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fe591 : mov ecx, dword ptr [rip + 0x2c28e1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fe3b1 : mov ecx, dword ptr [rip + 0x2c2ac1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fe021 : mov ecx, dword ptr [rip + 0x2c2e51] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fdff1 : mov ecx, dword ptr [rip + 0x2c2e81] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fdfc1 : mov ecx, dword ptr [rip + 0x2c2eb1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd8b0 : mov ecx, dword ptr [rip + 0x2c35c2] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd0e4 : mov ecx, dword ptr [rip + 0x2c3d8e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fcdaa : mov ecx, dword ptr [rip + 0x2c40c8] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa201 : mov ecx, dword ptr [rip + 0x2c6c71] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa1d1 : mov ecx, dword ptr [rip + 0x2c6ca1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa1a1 : mov ecx, dword ptr [rip + 0x2c6cd1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa174 : mov ecx, dword ptr [rip + 0x2c6cfe] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa141 : mov ecx, dword ptr [rip + 0x2c6d31] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa111 : mov ecx, dword ptr [rip + 0x2c6d61] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa0e1 : mov ecx, dword ptr [rip + 0x2c6d91] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa0b4 : mov ecx, dword ptr [rip + 0x2c6dbe] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa081 : mov ecx, dword ptr [rip + 0x2c6df1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f99f4 : mov ecx, dword ptr [rip + 0x2c747e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f99c1 : mov ecx, dword ptr [rip + 0x2c74b1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f9991 : mov ecx, dword ptr [rip + 0x2c74e1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f9961 : mov ecx, dword ptr [rip + 0x2c7511] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f9101 : mov ecx, dword ptr [rip + 0x2c7d71] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f90d1 : mov ecx, dword ptr [rip + 0x2c7da1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f90aa : mov ecx, dword ptr [rip + 0x2c7dc8] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f9041 : mov ecx, dword ptr [rip + 0x2c7e31] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f9011 : mov ecx, dword ptr [rip + 0x2c7e61] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8fe1 : mov ecx, dword ptr [rip + 0x2c7e91] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8fb1 : mov ecx, dword ptr [rip + 0x2c7ec1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8f81 : mov ecx, dword ptr [rip + 0x2c7ef1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8f5a : mov ecx, dword ptr [rip + 0x2c7f18] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8de1 : mov ecx, dword ptr [rip + 0x2c8091] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8951 : mov ecx, dword ptr [rip + 0x2c8521] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f892a : mov ecx, dword ptr [rip + 0x2c8548] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f88ca : mov ecx, dword ptr [rip + 0x2c85a8] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f86aa : mov ecx, dword ptr [rip + 0x2c87c8] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8641 : mov ecx, dword ptr [rip + 0x2c8831] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8611 : mov ecx, dword ptr [rip + 0x2c8861] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8551 : mov ecx, dword ptr [rip + 0x2c8921] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8521 : mov ecx, dword ptr [rip + 0x2c8951] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8451 : mov ecx, dword ptr [rip + 0x2c8a21] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8421 : mov ecx, dword ptr [rip + 0x2c8a51] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8181 : mov ecx, dword ptr [rip + 0x2c8cf1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f6f10 : mov ecx, dword ptr [rip + 0x2c9f62] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f6eb0 : mov ecx, dword ptr [rip + 0x2c9fc2] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ec141 : mov ecx, dword ptr [rip + 0x2d4d31] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ec111 : mov ecx, dword ptr [rip + 0x2d4d61] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ec0e1 : mov ecx, dword ptr [rip + 0x2d4d91] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ec0b1 : mov ecx, dword ptr [rip + 0x2d4dc1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ec081 : mov ecx, dword ptr [rip + 0x2d4df1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ec051 : mov ecx, dword ptr [rip + 0x2d4e21] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ec021 : mov ecx, dword ptr [rip + 0x2d4e51] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ebff1 : mov ecx, dword ptr [rip + 0x2d4e81] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ce4b1 : mov ecx, dword ptr [rip + 0x2f29c1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ce481 : mov ecx, dword ptr [rip + 0x2f29f1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ce451 : mov ecx, dword ptr [rip + 0x2f2a21] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ce421 : mov ecx, dword ptr [rip + 0x2f2a51] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ce3c1 : mov ecx, dword ptr [rip + 0x2f2ab1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ce391 : mov ecx, dword ptr [rip + 0x2f2ae1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ce1f1 : mov ecx, dword ptr [rip + 0x2f2c81] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd771 : mov ecx, dword ptr [rip + 0x2f3701] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd6eb : mov ecx, dword ptr [rip + 0x2f3787] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd30a : mov ecx, dword ptr [rip + 0x2f3b68] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd2aa : mov ecx, dword ptr [rip + 0x2f3bc8] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd1f1 : mov ecx, dword ptr [rip + 0x2f3c81] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd114 : mov ecx, dword ptr [rip + 0x2f3d5e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ccf31 : mov ecx, dword ptr [rip + 0x2f3f41] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000bfcb1 : mov ecx, dword ptr [rip + 0x3011c1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000bfc81 : mov ecx, dword ptr [rip + 0x3011f1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000bc911 : mov ecx, dword ptr [rip + 0x304561] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000006c344 : mov ecx, dword ptr [rip + 0x354b2e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000006c311 : mov ecx, dword ptr [rip + 0x354b61] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000483c1 : mov ecx, dword ptr [rip + 0x378ab1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000048091 : mov ecx, dword ptr [rip + 0x378de1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000047ffd : mov ecx, dword ptr [rip + 0x378e75] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000036181 : mov ecx, dword ptr [rip + 0x38acf1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000035ab1 : mov ecx, dword ptr [rip + 0x38b3c1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000a7834 : mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a8684 : mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a7854 : mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a78b5 : mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a8705 : mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a77f5 : mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a8645 : mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a7875 : mov ecx, dword ptr [rsi + 0xe] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a86c5 : mov ecx, dword ptr [rsi + 0xe] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a7814 : mov ecx, dword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a8664 : mov ecx, dword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a7895 : mov ecx, dword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a86e5 : mov ecx, dword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000367ba : mov ecx, dword ptr [rsi + rax*8] ; and rcx, qword ptr [rdx + rax*8] ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x0000000000036aaa : mov ecx, dword ptr [rsi + rax*8] ; or rcx, qword ptr [rdx + rax*8] ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x000000000016cc97 : mov ecx, dword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x16cccd ; xor eax, eax ; ret
0x000000000016c28b : mov ecx, dword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x16ccd1 ; xor eax, eax ; ret
0x000000000016dad7 : mov ecx, dword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x16db0d ; xor eax, eax ; ret
0x000000000016d8bb : mov ecx, dword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x16db11 ; xor eax, eax ; ret
0x00000000000a76b0 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a7701 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a84b1 : mov ecx, dword ptr [rsi] ; mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a84e0 : mov ecx, dword ptr [rsi] ; mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a8531 : mov ecx, dword ptr [rsi] ; mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a76c0 : mov ecx, dword ptr [rsi] ; mov dx, word ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a84f0 : mov ecx, dword ptr [rsi] ; mov dx, word ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a8551 : mov ecx, dword ptr [rsi] ; mov dx, word ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a7711 : mov ecx, dword ptr [rsi] ; mov dx, word ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a76e0 : mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a8510 : mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a7731 : mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a8571 : mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a7751 : mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a8591 : mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a7771 : mov ecx, dword ptr [rsi] ; mov rdx, qword ptr [rsi + 5] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a85b1 : mov ecx, dword ptr [rsi] ; mov rdx, qword ptr [rsi + 5] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a7791 : mov ecx, dword ptr [rsi] ; mov rdx, qword ptr [rsi + 6] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a85d1 : mov ecx, dword ptr [rsi] ; mov rdx, qword ptr [rsi + 6] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a77b1 : mov ecx, dword ptr [rsi] ; mov rdx, qword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a85f1 : mov ecx, dword ptr [rsi] ; mov rdx, qword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a7691 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000013a72e : mov ecx, dword ptr [rsp + 0x18] ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000b73d9 : mov ecx, dword ptr [rsp + 0x84] ; lea rsi, qword ptr [rbx + rax*4] ; sub r10, rax ; jmp 0xb740f
0x000000000010bd1e : mov ecx, dword ptr [rsp + 8] ; mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000010bd7f : mov ecx, dword ptr [rsp + 8] ; mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x0000000000131b8e : mov ecx, dword ptr [rsp + 8] ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000001029f3 : mov ecx, dword ptr [rsp + 8] ; syscall ; cmp rax, -0xfff ; jae 0x102a10 ; ret
0x00000000000c3848 : mov ecx, eax ; jne 0xc383b ; nop dword ptr [rax] ; mov r10d, eax ; jmp 0xc382c
0x00000000000aae7c : mov ecx, eax ; mov eax, dword ptr [rcx + rax*4] ; sub eax, dword ptr [rcx + r8*4] ; je 0xaae6c ; ret
0x0000000000126733 : mov ecx, eax ; xor eax, eax ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x00000000000bb41c : mov ecx, ebp ; lea r9, qword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x0000000000070ebc : mov ecx, ebp ; mov rsi, r12 ; mov rdi, rbx ; xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000099b4a : mov ecx, ebx ; cmp dil, r9b ; jb 0x99b39 ; mov rdx, rax ; jmp 0x99af2
0x000000000009993a : mov ecx, ebx ; cmp r8b, r9b ; jb 0x99929 ; mov rdx, rax ; jmp 0x998d2
0x000000000009aafa : mov ecx, ebx ; cmp r8b, r9b ; jb 0x9aae9 ; mov rdx, rax ; jmp 0x9aa92
0x000000000009bb92 : mov ecx, ebx ; cmp r8b, r9b ; jb 0x9bb81 ; mov rdx, rax ; jmp 0x9bb32
0x000000000009d805 : mov ecx, ebx ; cmp r8b, r9b ; jb 0x9d7f4 ; mov rdx, rax ; jmp 0x9d7b2
0x0000000000100823 : mov ecx, ecx ; mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x00000000000a089e : mov ecx, ecx ; movsxd r9, dword ptr [rax + r9*4] ; add r9, rax ; jmp r9
0x00000000000a093e : mov ecx, ecx ; movsxd rax, dword ptr [r10 + r9*4] ; add rax, r10 ; jmp rax
0x00000000001199b0 : mov ecx, ecx ; test r8d, r8d ; mov dword ptr [rax + 0xc], r8d ; jne 0x119962 ; mov rax, rdi ; ret
0x0000000000091841 : mov ecx, edx ; movzx eax, sil ; mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000007de70 : mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x000000000011835a : mov ecx, edx ; test r8b, r8b ; mov byte ptr [r9 + 3], r8b ; jne 0x118306 ; mov rax, rdi ; ret
0x000000000007deaa : mov ecx, edx ; xor edx, edx ; jmp rax
0x000000000013a4b9 : mov ecx, esi ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000045d01 : mov ecx, esi ; shl ecx, 0x1e ; or edx, ecx ; cmp esi, 0x40 ; cmovne rax, rdx ; ret
0x0000000000070ebb : mov ecx, r13d ; mov rsi, r12 ; mov rdi, rbx ; xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000001108f6 : mov edi, 0x2000001 ; mov rdx, qword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; call rax
0x0000000000110a04 : mov edi, 0x2000004 ; call rax
0x000000000013e007 : mov edi, 0x24448b49 ; or byte ptr [rax - 0x73], cl ; je 0x13e043 ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000012e0cd : mov edi, 0x850000f2 ; sal byte ptr [rbp + 0xb], 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000103a79 : mov edi, 0x8548fff1 ; ror byte ptr [rax - 0x77], 3 ; setne al ; movzx eax, al ; pop rbx ; ret
0x0000000000185e81 : mov edi, 0xaf08fffc ; cld ; lcall ptr [rax] ; ret 0xfffc
0x000000000001ff0c : mov edi, 0xbf ; mov r12, rax ; call 0xaac2e
0x0000000000193379 : mov edi, 0xc0b0fffb ; sti ; push qword ptr [rax] ; ret 0xfffb
0x000000000002a48e : mov edi, 0xc7480011 ; adc byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x000000000006efe7 : mov edi, 0xe0 ; call rax
0x000000000006efab : mov edi, 0xe0 ; jmp rax
0x000000000005aff9 : mov edi, 0xffef7085 ; jmp qword ptr [rax]
0x00000000000f76b6 : mov edi, 1 ; call rax
0x0000000000102306 : mov edi, 2 ; cmp rax, rdx ; mov edx, ebx ; cmovne rbp, rax ; call 0xfe620
0x000000000003a25e : mov edi, dword ptr [rax + 0x20] ; ror rdx, 0x11 ; xor rdx, qword ptr fs:[0x30] ; call rdx
0x00000000000bb424 : mov edi, dword ptr [rax] ; call r14
0x0000000000104233 : mov edi, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x00000000001046ac : mov edi, dword ptr [rbp - 0x40] ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000005722c : mov edi, dword ptr [rbp - 0x4a0] ; call rax
0x00000000000cd56a : mov edi, dword ptr [rbx] ; mov rax, qword ptr [rdi + 0x10] ; test rax, rax ; je 0xcd585 ; call rax
0x000000000012eba4 : mov edi, dword ptr [rbx] ; mov rax, qword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x000000000012e091 : mov edi, dword ptr [rcx + rbp] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x000000000006efe6 : mov edi, dword ptr [rdi + 0xe0] ; call rax
0x000000000006efaa : mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x0000000000114eb4 : mov edi, dword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x000000000010431f : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000203e3 : mov edi, dword ptr [rsp + 0x14] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000c984d : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000039272 : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x00000000000f7679 : mov edi, dword ptr [rsp + 0x2c] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000026680 : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000047bc9 : mov edi, dword ptr [rsp + 0x3c] ; call rax
0x0000000000025841 : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000106961 : mov edi, dword ptr [rsp + 4] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x000000000007da7b : mov edi, dword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000007dea1 : mov edi, dword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x000000000007d3a6 : mov edi, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000000acc59 : mov edi, dword ptr [rsp] ; lea r9, qword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000014616b : mov edi, dword ptr [rsp] ; mov rax, qword ptr [rax + 0x128] ; jmp rax
0x000000000008a449 : mov edi, eax ; call rax
0x00000000000217d7 : mov edi, eax ; mov qword ptr [rbp - 0xa0], rax ; call 0x8da3b
0x00000000000cd387 : mov edi, eax ; mov rax, qword ptr [r12 + 8] ; test rax, rax ; je 0xcd3a1 ; call rax
0x00000000000ee9f2 : mov edi, eax ; mov rax, qword ptr [rbp - 0xd8] ; call rax
0x00000000000881ce : mov edi, eax ; mov rbx, rax ; call 0x844d7
0x000000000004aba5 : mov edi, eax ; movzx eax, byte ptr [r8 + rdx] ; test rdi, rdi ; mov byte ptr [rsi], al ; jne 0x4aba9 ; mov rax, rsi ; ret
0x00000000000204b0 : mov edi, ebp ; call rax
0x000000000012f198 : mov edi, ebp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012f0be : mov edi, ebp ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000008b196 : mov edi, ebp ; mov rdx, rbp ; mov rsi, r12 ; call rax
0x0000000000088233 : mov edi, ebp ; pop rbx ; pop rbp ; jmp rax
0x000000000002f2a8 : mov edi, ebp ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000130e28 : mov edi, ebx ; call qword ptr [rax]
0x000000000006d772 : mov edi, ebx ; call rax
0x000000000012ccc4 : mov edi, ebx ; mov qword ptr [rsp], rax ; mov rcx, rax ; call r12
0x0000000000145d1b : mov edi, ebx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000075f58 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x130] ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000103d7a : mov edi, ebx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; jmp rax
0x0000000000070bb5 : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x000000000007346f : mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000070ec2 : mov edi, ebx ; xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000000cd652 : mov edi, ecx ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x000000000013b2b0 : mov edi, edi ; call qword ptr [rax]
0x00000000000757c4 : mov edi, edi ; call rax
0x000000000012eef6 : mov edi, edi ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000013a96f : mov edi, edi ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x00000000000ce21a : mov edi, edi ; mov eax, 0x69 ; syscall ; cmp rax, -0x1000 ; ja 0xce241 ; ret
0x00000000000ce28a : mov edi, edi ; mov eax, 0x6a ; syscall ; cmp rax, -0x1000 ; ja 0xce2b1 ; ret
0x000000000010c3f7 : mov edi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000010c48f : mov edi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000010c0ef : mov edi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000010c35f : mov edi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000010be9f : mov edi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000010c22f : mov edi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000010c18f : mov edi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000010bf3f : mov edi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000010bfcf : mov edi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 2 ; movzx eax, ax ; ret
0x000000000010c2cf : mov edi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 4 ; movzx eax, ax ; ret
0x000000000010be0f : mov edi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 8 ; movzx eax, ax ; ret
0x000000000010cc9c : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000010cd1c : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000010ca1c : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000010cc1c : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000010c81c : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000010cb1c : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000010ca9c : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000010c89c : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000010c91c : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 2 ; movzx eax, ax ; ret
0x000000000010cb9c : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 4 ; movzx eax, ax ; ret
0x000000000010c79c : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 8 ; movzx eax, ax ; ret
0x0000000000116e48 : mov edi, edx ; jmp rax
0x000000000004ac31 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x4ac19 ; mov rax, rsi ; ret
0x0000000000083f3c : mov edi, edx ; mov qword ptr [rsp + 0x18], rdx ; mov byte ptr [rsp + 0x28], r11b ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x000000000014719f : mov edi, edx ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000fe832 : mov edi, edx ; syscall ; cmp rax, -0x1000 ; ja 0xfe84d ; ret
0x00000000000fe8e2 : mov edi, edx ; syscall ; cmp rax, -0x1000 ; ja 0xfe8fd ; ret
0x000000000004b85f : mov edi, esi ; call rax
0x000000000008417e : mov edi, esi ; mov qword ptr [rsp + 0x10], r14 ; call qword ptr [rax]
0x000000000013decf : mov edi, esp ; call qword ptr [rax]
0x00000000000877f6 : mov edi, esp ; call rax
0x00000000000ca1c2 : mov edi, esp ; cmove rcx, rax ; xor eax, eax ; call 0x5648a
0x0000000000071d8b : mov edi, esp ; mov rax, rdi ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000050964 : mov edi, esp ; xor esi, esi ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000034d6b : mov edx, 0 ; add byte ptr [rax], al ; loopne 0x34dc4 ; or rax, rdx ; movq xmm0, rax ; ret
0x0000000000126aa6 : mov edx, 0 ; cmovae rax, rdx ; ret
0x000000000010a4a6 : mov edx, 0 ; cmovb rax, rdx ; ret
0x00000000000aaca6 : mov edx, 0 ; cmove rax, rdx ; pop rbx ; ret
0x0000000000098d2e : mov edx, 0 ; cmove rax, rdx ; ret
0x0000000000143440 : mov edx, 0 ; cmovne rax, rdx ; add rsp, 8 ; ret
0x0000000000089c19 : mov edx, 0 ; cmp rax, 0xff ; cmove rax, rdx ; add rsp, 8 ; ret
0x000000000008be06 : mov edx, 0 ; lea rax, qword ptr [rdi + rax] ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x0000000000101502 : mov edx, 0x1002c2c ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000003aff : mov edx, 0x1bc6d066 ; jb 0x3ae6 ; clc ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000050bb3 : mov edx, 0x2ebf000b ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000d1964 : mov edx, 0x31fffffc ; fisttp dword ptr [rax - 0x77] ; fmul dword ptr [rcx + 3] ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x000000000008f762 : mov edx, 0x48000001 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000ba642 : mov edx, 0x48003082 ; ror eax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x00000000001074a7 : mov edx, 0x64 ; mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x00000000000d5e88 : mov edx, 0x8b000001 ; mov ah, 0x24 ; add byte ptr [rax], 0 ; add byte ptr [rcx + 0x63], cl ; ret 0x8b48
0x00000000001933ad : mov edx, 0x8f0ffffb ; std ; jmp rax
0x0000000000047c0a : mov edx, 0xc1480037 ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x00000000000753c1 : mov edx, 0xc7640034 ; add byte ptr [rcx], cl ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000198949 : mov edx, 0xe9cfff9 ; add al, byte ptr [rax] ; add al, 0xbb ; stc ; call rsp
0x0000000000091a50 : mov edx, 0xffffffff ; bsf rax, rdi ; cmove rax, rdx ; add eax, 1 ; ret
0x000000000002d874 : mov edx, 0xffffffff ; cmove rax, rdx ; ret
0x000000000004dd7e : mov edx, 1 ; jmp rax
0x00000000000598c8 : mov edx, 1 ; mov dword ptr [rbp - 0x10b4], 0 ; jmp rax
0x000000000005a759 : mov edx, 1 ; mov dword ptr [rbp - 0x10b4], 1 ; jmp rax
0x000000000004ee06 : mov edx, 1 ; mov r8d, 1 ; jmp rax
0x0000000000130f5d : mov edx, dword ptr [r12] ; bswap edx ; mov dword ptr [rax], edx ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000115ea8 : mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00000000001161ff : mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x000000000011603e : mov edx, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000078d25 : mov edx, dword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000cd4dc : mov edx, dword ptr [rax + 0x18] ; test rdx, rdx ; je 0xcd4f1 ; call rdx
0x000000000013782c : mov edx, dword ptr [rax + 0x38] ; mov qword ptr [rsi + 8], rdx ; mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000013810c : mov edx, dword ptr [rax + 0x48] ; mov qword ptr [rsi + 8], rdx ; mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000002d935 : mov edx, dword ptr [rax + 0xc0] ; mov rax, qword ptr [rip + 0x3934a6] ; mov qword ptr [rax], rdx ; ret
0x000000000007eea0 : mov edx, dword ptr [rax + 8] ; jne 0x7eebd ; sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000048497 : mov edx, dword ptr [rax + rax*8] ; mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; pop rbx ; ret
0x00000000001720a0 : mov edx, dword ptr [rax + rbp*8] ; test rdx, rdx ; je 0x1720b2 ; call rdx
0x00000000000ac9f8 : mov edx, dword ptr [rax + rcx] ; add rax, 4 ; test edx, edx ; mov dword ptr [rax], edx ; jne 0xaca06 ; ret
0x0000000000107b99 : mov edx, dword ptr [rax - 0x77000000] ; ret 0xe8c1
0x000000000007340c : mov edx, dword ptr [rax] ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000adb64 : mov edx, dword ptr [rax] ; cmp edx, esi ; je 0xadb79 ; test edx, edx ; jne 0xadb6b ; ret
0x00000000000719ad : mov edx, dword ptr [rax] ; cmp rdx, qword ptr [rax + 8] ; jae 0x719d1 ; lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000071b34 : mov edx, dword ptr [rax] ; cmp rdx, qword ptr [rax + 8] ; jae 0x71b61 ; lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x00000000000746b1 : mov edx, dword ptr [rax] ; cmp rdx, rcx ; mov eax, 0xffffffff ; jb 0x746cd ; ret
0x00000000000744f7 : mov edx, dword ptr [rax] ; jne 0x74521 ; sub rdx, qword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x0000000000078d1e : mov edx, dword ptr [rax] ; mov qword ptr [rax + 8], rdx ; mov rdx, qword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000203e8 : mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000010772d : mov edx, dword ptr [rax] ; test rdx, rdx ; je 0x107750 ; cmp rdi, rdx ; jne 0x107738 ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000115ea9 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000116200 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000115ea1 : mov edx, dword ptr [rbp + 0x38] ; mov qword ptr [rbp - 0x70], rdx ; mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00000000001161f8 : mov edx, dword ptr [rbp + 0x38] ; mov qword ptr [rbp - 0x70], rdx ; mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000001164ec : mov edx, dword ptr [rbp - 0x158] ; call rax
0x000000000005cbc4 : mov edx, dword ptr [rbp - 0x688] ; movsxd rax, dword ptr [rcx + rbx*4] ; add rax, rcx ; jmp rax
0x000000000014672f : mov edx, dword ptr [rbp - 0x78] ; mov r9d, dword ptr [rdx] ; mov rdx, r13 ; add r9, qword ptr [rbp - 0x88] ; call rax
0x0000000000115f07 : mov edx, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x0000000000115f00 : mov edx, dword ptr [rbx + 0x38] ; mov qword ptr [rbp - 0x70], rdx ; mov edx, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x000000000007a34c : mov edx, dword ptr [rbx + 0x40] ; sub rdx, rsi ; mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x00000000001164e5 : mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, qword ptr [rbp - 0x158] ; call rax
0x000000000011628e : mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000077b78 : mov edx, dword ptr [rbx + 0xf8] ; mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000d2637 : mov edx, dword ptr [rbx + 4] ; test edx, edx ; jne 0xd2636 ; nop ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000115ac0 : mov edx, dword ptr [rbx - 0x10] ; mov qword ptr [rbp - 0x70], rdx ; mov edx, dword ptr [rbx - 0x30] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x0000000000115ac7 : mov edx, dword ptr [rbx - 0x30] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x0000000000108c40 : mov edx, dword ptr [rbx] ; mov qword ptr [rax], rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000071d88 : mov edx, dword ptr [rbx] ; mov rdi, r12 ; mov rax, rdi ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000115f96 : mov edx, dword ptr [rcx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000115f8f : mov edx, dword ptr [rcx + 0x38] ; mov qword ptr [rbp - 0x70], rdx ; mov edx, dword ptr [rcx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x000000000014b2ff : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000002da15 : mov edx, dword ptr [rcx + rdx] ; test edx, edx ; je 0x2da01 ; and esi, dword ptr [rdi + 0x10] ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x00000000000757b8 : mov edx, dword ptr [rdi + 0x40] ; sub rdx, rsi ; mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x000000000012de7c : mov edx, dword ptr [rdi + 0x5c] ; lea rsi, qword ptr [rdi + 0x48] ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000048889 : mov edx, dword ptr [rdi + 8] ; add r10, rax ; mov qword ptr [rdi + 8], r10 ; mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000116e41 : mov edx, dword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x000000000004a499 : mov edx, dword ptr [rdi + 8] ; sub r10, rax ; mov qword ptr [rdi + 8], r10 ; mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000012ca31 : mov edx, dword ptr [rdi] ; mov qword ptr [rbx], rax ; mov r8, rbp ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000012caa1 : mov edx, dword ptr [rdi] ; mov qword ptr [rbx], rax ; xor r8d, r8d ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000002de20 : mov edx, dword ptr [rdx + 0x48] ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000002ddf0 : mov edx, dword ptr [rdx + 0x58] ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x0000000000134b6c : mov edx, dword ptr [rdx + 8] ; mov qword ptr [rcx + 8], rax ; mov qword ptr [rcx + 0x10], rdx ; mov eax, 1 ; ret
0x00000000001381d4 : mov edx, dword ptr [rdx + 8] ; mov qword ptr [rdi + 0x20], rax ; mov qword ptr [rdi + 0x28], rdx ; mov eax, 1 ; ret
0x000000000013818c : mov edx, dword ptr [rdx + 8] ; mov qword ptr [rdi + 0x30], rax ; mov qword ptr [rdi + 0x38], rdx ; mov eax, 1 ; ret
0x0000000000073065 : mov edx, dword ptr [rdx] ; cmp rax, rcx ; cmovg rax, rcx ; test rdx, rdx ; jne 0x7306f ; ret
0x000000000007d025 : mov edx, dword ptr [rdx] ; cmp rax, rcx ; cmovg rax, rcx ; test rdx, rdx ; jne 0x7d02f ; ret
0x000000000002de1d : mov edx, dword ptr [rdx] ; mov rdx, qword ptr [rdx + 0x48] ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000002dded : mov edx, dword ptr [rdx] ; mov rdx, qword ptr [rdx + 0x58] ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000002de1a : mov edx, dword ptr [rdx] ; mov rdx, qword ptr [rdx] ; mov rdx, qword ptr [rdx + 0x48] ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000002ddea : mov edx, dword ptr [rdx] ; mov rdx, qword ptr [rdx] ; mov rdx, qword ptr [rdx + 0x58] ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000010b0e4 : mov edx, dword ptr [rip + 0x2b92ce] ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000000e8f51 : mov edx, dword ptr [rip + 0x2d8051] ; mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x00000000000c04b9 : mov edx, dword ptr [rip + 0x300989] ; mov dword ptr [rdx], eax ; xor edx, edx ; add rsp, 8 ; mov rax, rdx ; ret
0x000000000008b891 : mov edx, dword ptr [rip + 0x3356c1] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000008b611 : mov edx, dword ptr [rip + 0x335941] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000008b559 : mov edx, dword ptr [rip + 0x3359f9] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000002e105 : mov edx, dword ptr [rip + 0x392e25] ; mov qword ptr fs:[rdx], rax ; ret
0x000000000011603f : mov edx, dword ptr [rsi + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000116037 : mov edx, dword ptr [rsi + 0x38] ; mov qword ptr [rbp - 0x70], rdx ; mov edx, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000000a76e2 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a8512 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a76c3 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a84f3 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a7774 : mov edx, dword ptr [rsi + 5] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a85b4 : mov edx, dword ptr [rsi + 5] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a7794 : mov edx, dword ptr [rsi + 6] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a85d4 : mov edx, dword ptr [rsi + 6] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a7733 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a8573 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a77b4 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a85f4 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a7753 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a8593 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a8554 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a7714 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000115a00 : mov edx, dword ptr [rsi - 0x10] ; mov dword ptr [rbp - 0x80], 0 ; mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x00000000000a76a0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a84d0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a76f1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a8521 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a7681 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a84a1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000110a00 : mov edx, dword ptr [rsp + 0x10] ; mov edi, 0x2000004 ; call rax
0x000000000010bd19 : mov edx, dword ptr [rsp + 0x10] ; mov rcx, qword ptr [rsp + 8] ; mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000010bd7a : mov edx, dword ptr [rsp + 0x10] ; mov rcx, qword ptr [rsp + 8] ; mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x00000000001108fc : mov edx, dword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; call rax
0x0000000000145d11 : mov edx, dword ptr [rsp + 0x18] ; mov esi, 0x40 ; mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000000c9848 : mov edx, dword ptr [rsp + 0x28] ; mov rdi, qword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000146369 : mov edx, dword ptr [rsp + 0x38] ; add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000087161 : mov edx, dword ptr [rsp + 0x68] ; call rax
0x0000000000088479 : mov edx, dword ptr [rsp + 0x68] ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000130f5e : mov edx, dword ptr [rsp] ; bswap edx ; mov dword ptr [rax], edx ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010081e : mov edx, eax ; jne 0x100815 ; mov r9, rcx ; mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x000000000007ee5e : mov edx, eax ; mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x7ee63 ; ret
0x0000000000146736 : mov edx, ebp ; add r9, qword ptr [rbp - 0x88] ; call rax
0x0000000000115a0f : mov edx, ebp ; call rax
0x000000000013da3a : mov edx, ebp ; mov rax, qword ptr [rax + 0x18] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000008b199 : mov edx, ebp ; mov rsi, r12 ; call rax
0x0000000000131b93 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000008ac77 : mov edx, ebp ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000000403c6 : mov edx, ebp ; xor ebp, ebp ; add rax, rax ; sub rdx, rax ; jmp 0x4040f
0x0000000000115f9d : mov edx, ebx ; call rax
0x000000000010230e : mov edx, ebx ; cmovne rbp, rax ; call 0xfe618
0x000000000013d1e2 : mov edx, ebx ; mov rax, qword ptr [rax + 0x10] ; add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000131a86 : mov edx, ebx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000da731 : mov edx, ebx ; or al, byte ptr [rax] ; movzx ebp, bpl ; movsxd rax, dword ptr [rsi + rbp*4] ; add rax, rsi ; jmp rax
0x00000000000f99e1 : mov edx, ecx ; mov eax, 0x104 ; syscall ; cmp rax, -0xfff ; jae 0xf9a04 ; ret
0x000000000006c331 : mov edx, ecx ; mov eax, 0x108 ; syscall ; cmp rax, -0xfff ; jae 0x6c354 ; ret
0x00000000000fa0a1 : mov edx, ecx ; mov eax, 0x109 ; syscall ; cmp rax, -0xfff ; jae 0xfa0c4 ; ret
0x00000000000fa161 : mov edx, ecx ; mov eax, 0x10b ; syscall ; cmp rax, -0xfff ; jae 0xfa184 ; ret
0x00000000000f6e6a : mov edx, ecx ; mov eax, 0x11 ; syscall ; cmp rax, -0xfff ; jae 0xf6ec0 ; ret
0x000000000010964a : mov edx, ecx ; mov eax, 0x113 ; syscall ; cmp rax, -0xfff ; jae 0x1096a0 ; ret
0x00000000001096da : mov edx, ecx ; mov eax, 0x114 ; syscall ; cmp rax, -0xfff ; jae 0x109730 ; ret
0x00000000000fd86a : mov edx, ecx ; mov eax, 0x115 ; syscall ; cmp rax, -0xfff ; jae 0xfd8c0 ; ret
0x000000000010979a : mov edx, ecx ; mov eax, 0x116 ; syscall ; cmp rax, -0xfff ; jae 0x1097f0 ; ret
0x0000000000109821 : mov edx, ecx ; mov eax, 0x11e ; syscall ; cmp rax, -0xfff ; jae 0x109844 ; ret
0x00000000000f6eca : mov edx, ecx ; mov eax, 0x12 ; syscall ; cmp rax, -0xfff ; jae 0xf6f20 ; ret
0x00000000000fe67a : mov edx, ecx ; mov eax, 0x127 ; syscall ; cmp rax, -0xfff ; jae 0xfe6d0 ; ret
0x00000000000fe6da : mov edx, ecx ; mov eax, 0x128 ; syscall ; cmp rax, -0xfff ; jae 0xfe730 ; ret
0x0000000000109161 : mov edx, ecx ; mov eax, 0x12d ; syscall ; cmp rax, -0xfff ; jae 0x109184 ; ret
0x0000000000109091 : mov edx, ecx ; mov eax, 0x12e ; syscall ; cmp rax, -0xfff ; jae 0x1090b4 ; ret
0x00000000001098b1 : mov edx, ecx ; mov eax, 0x12f ; syscall ; cmp rax, -0xfff ; jae 0x1098d4 ; ret
0x0000000000109971 : mov edx, ecx ; mov eax, 0x136 ; syscall ; cmp rax, -0xfff ; jae 0x109994 ; ret
0x00000000001099a1 : mov edx, ecx ; mov eax, 0x137 ; syscall ; cmp rax, -0xfff ; jae 0x1099c4 ; ret
0x00000000000feb4a : mov edx, ecx ; mov eax, 0x17 ; syscall ; cmp rax, -0xfff ; jae 0xfeba0 ; ret
0x0000000000109521 : mov edx, ecx ; mov eax, 0x19 ; syscall ; cmp rax, -0xfff ; jae 0x109544 ; ret
0x00000000000fd0d1 : mov edx, ecx ; mov eax, 0x28 ; syscall ; cmp rax, -0xfff ; jae 0xfd0f4 ; ret
0x0000000000109eca : mov edx, ecx ; mov eax, 0x2c ; syscall ; cmp rax, -0xfff ; jae 0x109f20 ; ret
0x0000000000109c6a : mov edx, ecx ; mov eax, 0x2d ; syscall ; cmp rax, -0xfff ; jae 0x109cc0 ; ret
0x0000000000109fb1 : mov edx, ecx ; mov eax, 0x35 ; syscall ; cmp rax, -0xfff ; jae 0x109fd4 ; ret
0x0000000000109f21 : mov edx, ecx ; mov eax, 0x36 ; syscall ; cmp rax, -0xfff ; jae 0x109f44 ; ret
0x0000000000109b41 : mov edx, ecx ; mov eax, 0x37 ; syscall ; cmp rax, -0xfff ; jae 0x109b64 ; ret
0x00000000000cd101 : mov edx, ecx ; mov eax, 0x3d ; syscall ; cmp rax, -0xfff ; jae 0xcd124 ; ret
0x000000000010a691 : mov edx, ecx ; mov eax, 0x42 ; syscall ; cmp rax, -0xfff ; jae 0x10a6b4 ; ret
0x000000000010a51a : mov edx, ecx ; mov eax, 0x45 ; syscall ; cmp rax, -0xfff ; jae 0x10a570 ; ret
0x000000000010a57a : mov edx, ecx ; mov eax, 0x46 ; syscall ; cmp rax, -0xfff ; jae 0x10a5d0 ; ret
0x00000000001095b1 : mov edx, ecx ; mov eax, 0x9d ; syscall ; cmp rax, -0xfff ; jae 0x1095d4 ; ret
0x00000000001094f1 : mov edx, ecx ; mov eax, 0xa5 ; syscall ; cmp rax, -0xfff ; jae 0x109514 ; ret
0x00000000001093d1 : mov edx, ecx ; mov eax, 0xaf ; syscall ; cmp rax, -0xfff ; jae 0x1093f4 ; ret
0x00000000001095e1 : mov edx, ecx ; mov eax, 0xb2 ; syscall ; cmp rax, -0xfff ; jae 0x109604 ; ret
0x0000000000109611 : mov edx, ecx ; mov eax, 0xb3 ; syscall ; cmp rax, -0xfff ; jae 0x109634 ; ret
0x0000000000143281 : mov edx, ecx ; mov eax, 0xb5 ; syscall ; cmp rax, -0xfff ; jae 0x1432a4 ; ret
0x00000000001432d1 : mov edx, ecx ; mov eax, 0xb6 ; syscall ; cmp rax, -0xfff ; jae 0x1432f4 ; ret
0x00000000001076d1 : mov edx, ecx ; mov eax, 0xbc ; syscall ; cmp rax, -0xfff ; jae 0x1076f4 ; ret
0x0000000000107671 : mov edx, ecx ; mov eax, 0xbd ; syscall ; cmp rax, -0xfff ; jae 0x107694 ; ret
0x0000000000107551 : mov edx, ecx ; mov eax, 0xbe ; syscall ; cmp rax, -0xfff ; jae 0x107574 ; ret
0x0000000000107581 : mov edx, ecx ; mov eax, 0xbf ; syscall ; cmp rax, -0xfff ; jae 0x1075a4 ; ret
0x00000000001075e1 : mov edx, ecx ; mov eax, 0xc0 ; syscall ; cmp rax, -0xfff ; jae 0x107604 ; ret
0x00000000001074c1 : mov edx, ecx ; mov eax, 0xc1 ; syscall ; cmp rax, -0xfff ; jae 0x1074e4 ; ret
0x0000000000102d91 : mov edx, ecx ; mov eax, 0xd8 ; syscall ; cmp rax, -0xfff ; jae 0x102db4 ; ret
0x000000000010a6c1 : mov edx, ecx ; mov eax, 0xdc ; syscall ; cmp rax, -0xfff ; jae 0x10a6e4 ; ret
0x000000000010934a : mov edx, ecx ; mov eax, 0xe8 ; syscall ; cmp rax, -0xfff ; jae 0x1093a0 ; ret
0x0000000000109311 : mov edx, ecx ; mov eax, 0xe9 ; syscall ; cmp rax, -0xfff ; jae 0x109334 ; ret
0x00000000000c59f8 : mov edx, ecx ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000997ed : mov edx, edi ; cmp r10b, r8b ; jb 0x997d9 ; mov rdx, rax ; jmp 0x99785
0x0000000000076fd7 : mov edx, edi ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000003a8c1 : mov edx, edi ; mov rax, rdi ; sar rdx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x000000000008a446 : mov edx, edi ; mov rdi, r8 ; call rax
0x000000000011f6bf : mov edx, edi ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000091848 : mov edx, edi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000000ce4de : mov edx, edx ; mov eax, 0x75 ; syscall ; cmp rax, -0x1000 ; ja 0xce501 ; ret
0x00000000000ce55e : mov edx, edx ; mov eax, 0x77 ; syscall ; cmp rax, -0x1000 ; ja 0xce581 ; ret
0x000000000012515e : mov edx, edx ; mov qword ptr [r14 + 8], rax ; mov rdi, rax ; call 0x9139b
0x00000000001543a3 : mov edx, esi ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000115eb0 : mov edx, esi ; call rax
0x00000000000f6fd0 : mov edx, esi ; dec dword ptr [rbx + 0x438d0455] ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000c5181 : mov edx, esi ; mov rsi, qword ptr [rdi + rax*8] ; mov rdi, rbp ; call 0x913bb
0x000000000003d17b : mov edx, esi ; xor r14d, r14d ; add rax, rax ; sub rdx, rax ; jmp 0x3d1c6
0x0000000000115f0e : mov edx, esp ; call rax
0x0000000000103d72 : mov edx, esp ; mov esi, 2 ; mov rdi, rbx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; jmp rax
0x0000000000089f26 : mov edx, esp ; mov rdi, r15 ; call rax
0x00000000000ebfe1 : mov es, word ptr [rax] ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xebffe ; ret
0x0000000000114505 : mov es, word ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000a82ee : mov es, word ptr [rsi] ; add byte ptr [rax], al ; ret
0x000000000008791b : mov esi, 0x13720033 ; sub rax, 0x10 ; ret
0x000000000003a98a : mov esi, 0x388a ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x0000000000145d15 : mov esi, 0x40 ; mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000000235dc : mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000000a0b6e : mov esi, 0x66000000 ; pmovmskb eax, mm1 ; bsr eax, eax ; add rax, rdi ; ret
0x000000000007d56e : mov esi, 0x66fffffe ; nop dword ptr [rax + rax] ; call 0x7987c
0x0000000000088082 : mov esi, 0x85003390 ; sar byte ptr [rax + 6], 0xf3 ; ret
0x00000000001a5795 : mov esi, 0x8a680000 ; sti ; call qword ptr [rax]
0x0000000000089d81 : mov esi, 0x8d48feda ; xor byte ptr [rax - 0x77], cl ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x0000000000139df5 : mov esi, 0xa ; mov rdi, rax ; lea r9, qword ptr [rsp + 0x14] ; call qword ptr [r10]
0x00000000001a57c5 : mov esi, 0xab880000 ; sti ; call qword ptr [rax]
0x0000000000185e7d : mov esi, 0xbf68fffc ; cld ; dec dword ptr [rax] ; scasd eax, dword ptr [rdi] ; cld ; lcall ptr [rax] ; ret 0xfffc
0x00000000001035b2 : mov esi, 0xea831c14 ; xor byte ptr [rbx - 0x78f0f606], al ; out dx, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000010a45e : mov esi, 0xf0007e7 ; mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000045cfe : mov esi, 0xf1890e34 ; shl ecx, 0x1e ; or edx, ecx ; cmp esi, 0x40 ; cmovne rax, rdx ; ret
0x00000000001099b6 : mov esi, 0xf7002b74 ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa0b6 : mov esi, 0xf7002c6d ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001811c6 : mov esi, 0xfa1fb992 ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x000000000005375f : mov esi, 0xffffffff ; mov dword ptr fs:[rax], 0x16 ; mov eax, esi ; ret
0x000000000012eef0 : mov esi, 1 ; mov rdi, r15 ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000006d76c : mov esi, 1 ; mov rdi, rbx ; call rax
0x000000000012f0b8 : mov esi, 2 ; mov rdi, r13 ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00000000001397c0 : mov esi, 2 ; mov rdi, rax ; lea r9, qword ptr [rsp + 0x14] ; call qword ptr [r10]
0x0000000000103d74 : mov esi, 2 ; mov rdi, rbx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; jmp rax
0x000000000013a969 : mov esi, 3 ; mov rdi, r15 ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x00000000001398c0 : mov esi, 3 ; mov rdi, rax ; lea r9, qword ptr [rsp + 0x14] ; call qword ptr [r10]
0x0000000000139c4b : mov esi, 4 ; lea rdx, qword ptr [rip + 0x3609] ; mov rdi, rbx ; call qword ptr [rax]
0x000000000012f192 : mov esi, 4 ; mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000139a1b : mov esi, 6 ; mov rdi, rax ; lea r9, qword ptr [rsp + 0x14] ; call qword ptr [r10]
0x0000000000139b5b : mov esi, 7 ; mov rdi, rax ; lea r9, qword ptr [rsp + 0x14] ; call qword ptr [r10]
0x0000000000139d01 : mov esi, 8 ; mov rdi, rax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x00000000001396ce : mov esi, 9 ; mov rdi, rax ; call qword ptr [r10]
0x000000000003a236 : mov esi, dword ptr [rax + 0x20] ; ror rdx, 0x11 ; xor rdx, qword ptr fs:[0x30] ; call rdx
0x00000000001046a9 : mov esi, dword ptr [rax] ; mov rdi, qword ptr [rbp - 0x40] ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000012eb9d : mov esi, dword ptr [rbp - 0x90] ; mov rdi, qword ptr [rbx] ; mov rax, qword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x000000000006f758 : mov esi, dword ptr [rbx + 0x88] ; sub dword ptr [rsi + 4], 1 ; je 0x6f7a2 ; mov rax, rdx ; pop rbx ; ret
0x0000000000078898 : mov esi, dword ptr [rbx + 0x88] ; sub dword ptr [rsi + 4], 1 ; je 0x788e2 ; mov rax, rdx ; pop rbx ; ret
0x000000000010431c : mov esi, dword ptr [rbx] ; mov rdi, qword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000c5184 : mov esi, dword ptr [rdi + rax*8] ; mov rdi, rbp ; call 0x913b8
0x00000000000645d7 : mov esi, dword ptr [rip + 0x35c993] ; call rax
0x000000000005c93f : mov esi, dword ptr [rip + 0x36462b] ; call rax
0x000000000005c323 : mov esi, dword ptr [rip + 0x364c47] ; call rax
0x000000000005969f : mov esi, dword ptr [rip + 0x3678cb] ; call rax
0x00000000000509fb : mov esi, dword ptr [rip + 0x37056f] ; call rax
0x000000000004db1f : mov esi, dword ptr [rip + 0x37344b] ; call rax
0x000000000007da76 : mov esi, dword ptr [rsp + 0x10] ; mov rdi, qword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000008822a : mov esi, dword ptr [rsp + 0x18] ; add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000086a89 : mov esi, dword ptr [rsp + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000000877f1 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, r12 ; call rax
0x000000000002667b : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000086e01 : mov esi, dword ptr [rsp + 0x48] ; call rax
0x000000000002583c : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000007d3a1 : mov esi, dword ptr [rsp + 0xc] ; mov rdi, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000110901 : mov esi, dword ptr [rsp + 8] ; call rax
0x00000000000203df : mov esi, dword ptr [rsp + 8] ; mov edi, dword ptr [rsp + 0x14] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000157163 : mov esi, eax ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000c3846 : mov esi, eax ; mov ecx, eax ; jne 0xc383d ; nop dword ptr [rax] ; mov r10d, eax ; jmp 0xc382e
0x00000000000acd8c : mov esi, ebp ; lea r9, qword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000acc56 : mov esi, ebp ; mov rdi, qword ptr [r12] ; lea r9, qword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000003926f : mov esi, ebp ; mov rdi, qword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x000000000008b041 : mov esi, ebp ; mov rdi, r12 ; call rax
0x00000000000881cb : mov esi, ebp ; mov rdi, rax ; mov rbx, rax ; call 0x844da
0x000000000008a193 : mov esi, ebp ; mov rdi, rbx ; call rax
0x000000000013b2ad : mov esi, ebx ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000089ae7 : mov esi, ebx ; mov rdi, rax ; call rcx
0x0000000000110fa1 : mov esi, edi ; jae 0x110fc9 ; cmp dil, byte ptr [rax] ; je 0x110fd3 ; mov rdx, rax ; jmp 0x110fc0
0x0000000000057222 : mov esi, edi ; mov dword ptr [rbp - 0x510], r11d ; mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x0000000000146168 : mov esi, edi ; mov rdi, qword ptr [rsp] ; mov rax, qword ptr [rax + 0x128] ; jmp rax
0x000000000004b85c : mov esi, edi ; mov rdi, r14 ; call rax
0x000000000012ccc1 : mov esi, edi ; mov rdi, rbx ; mov qword ptr [rsp], rax ; mov rcx, rax ; call r12
0x00000000000c7c33 : mov esi, edi ; xor edi, edi ; call rax
0x0000000000114eb8 : mov esi, edx ; call rax
0x00000000000c5a68 : mov esi, edx ; movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x00000000000f825e : mov esi, edx ; syscall ; cmp rax, -0x1000 ; ja 0xf827d ; ret
0x0000000000130e94 : mov esi, esi ; add rsi, rax ; cmp rsi, qword ptr [rdx + 0x28] ; ja 0x130e97 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x0000000000089d25 : mov esi, esi ; call rax
0x000000000013e6b9 : mov esi, esi ; mov dword ptr [rdi + 0x28], eax ; mov rax, qword ptr [rdi + 0x18] ; add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x00000000000fe73c : mov esi, esi ; mov eax, 0x71 ; syscall ; cmp rax, -0x1000 ; ja 0xfe761 ; ret
0x00000000000fe7ac : mov esi, esi ; mov eax, 0x72 ; syscall ; cmp rax, -0x1000 ; ja 0xfe7d1 ; ret
0x000000000008ac7a : mov esi, esi ; mov rdi, r13 ; call rax
0x00000000001378d4 : mov esi, esi ; movsxd rax, dword ptr [rcx + rsi*4] ; add rax, rcx ; jmp rax
0x0000000000134b44 : mov esi, esi ; movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x00000000000cec49 : mov esi, esi ; movsxd rax, dword ptr [rdx + rsi*4] ; add rax, rdx ; jmp rax
0x000000000013d46d : mov esi, esp ; call qword ptr [rax]
0x000000000008b19c : mov esi, esp ; call rax
0x0000000000088e4d : mov esi, esp ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000008847e : mov esi, esp ; mov rdi, rbp ; call rax
0x0000000000130e25 : mov esi, esp ; mov rdi, rbx ; call qword ptr [rax]
0x000000000007346c : mov esi, esp ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000070ebf : mov esi, esp ; mov rdi, rbx ; xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000013b2a2 : mov esi, esp ; nop dword ptr [rax] ; mov rax, qword ptr [r15 + 8] ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000088b6a : mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x00000000000888bd : mov esi, esp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000035618 : mov esi, esp ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; jmp rax
0x000000000007346b : mov esi, r12d ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000013b561 : mov esp, 0x440f49df ; fmul qword ptr [rax - 0x7d] ; ret
0x0000000000090e01 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000090df1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000001967a4 : mov esp, 0x6400013d ; pop rax ; call rsp
0x00000000000d6349 : mov esp, 0x8824 ; add byte ptr [rax + 0x63], cl ; ret
0x000000000016ee60 : mov esp, 0xa8000000 ; jne 0x16ef40 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000193371 : mov esp, 0xbdb0fffb ; sti ; push qword ptr [rax] ; mov edi, 0xc0b0fffb ; sti ; push qword ptr [rax] ; ret 0xfffb
0x000000000017f078 : mov esp, 0xbe000005 ; add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x0000000000090e11 : mov esp, 0xc22948c0 ; jbe 0x90e5a ; add rax, rdi ; ret
0x0000000000090e21 : mov esp, 0xc22948c0 ; jbe 0x90e5c ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000090e31 : mov esp, 0xc22948c0 ; jbe 0x90e5c ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000090e41 : mov esp, 0xc22948c0 ; jbe 0x90e5c ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000090b9b : mov esp, 0xc22948c0 ; jbe 0x90e61 ; add rax, rdi ; add rax, rcx ; ret
0x00000000000ab044 : mov esp, 0xc83948ca ; ja 0xab06e ; sub rdi, 0x10 ; add rax, rdi ; ret
0x000000000008dbc3 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x00000000000aaf78 : mov esp, 0xd03948d2 ; ja 0xab071 ; add rax, rdi ; add rax, rcx ; ret
0x0000000000097e0b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x0000000000198094 : mov esp, cs ; add dword ptr [rax], eax ; in al, 0x47 ; clc ; call rsp
0x000000000013ae3c : mov esp, dword ptr [rax] ; jmp 0x13ae4a
0x0000000000116943 : mov esp, edi ; sub al, byte ptr [rax] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; jmp rax
0x00000000001a1a41 : mov gs, ebp ; call qword ptr [rax]
0x00000000000e9c53 : mov gs, esp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; push rbp ; or byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 + 0x63], r9b ; ret
0x00000000000ee699 : mov qword ptr [r11 + 8], rax ; lea r11, qword ptr [rdx + rbx] ; jmp 0xedfc2
0x0000000000078401 : mov qword ptr [r12 + 0x28], rax ; mov rax, r13 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bd013 : mov qword ptr [r12], r13 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008a188 : mov qword ptr [r12], rax ; je 0x8a270 ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000008aeaa : mov qword ptr [r12], rax ; je 0x8afa0 ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x00000000000f1021 : mov qword ptr [r12], rax ; je 0xf1007 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ac731 : mov qword ptr [r12], rax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008a1a1 : mov qword ptr [r12], rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000017209b : mov qword ptr [r12], rbx ; mov rdx, qword ptr [rax + rbp*8] ; test rdx, rdx ; je 0x1720b7 ; call rdx
0x00000000000fccaa : mov qword ptr [r13 + 8], rax ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012780c : mov qword ptr [r13], rax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000089f1b : mov qword ptr [r13], rax ; je 0x8a020 ; mov rdx, r12 ; mov rdi, r15 ; call rax
0x000000000008b036 : mov qword ptr [r13], rax ; je 0x8b0d8 ; mov rsi, rbp ; mov rdi, r12 ; call rax
0x0000000000125160 : mov qword ptr [r14 + 8], rax ; mov rdi, rax ; call 0x91399
0x000000000002af7d : mov qword ptr [r14], rcx ; mov rcx, qword ptr [rax + r15*8] ; test rcx, rcx ; je 0x2af97 ; call rcx
0x0000000000080011 : mov qword ptr [r9], rdx ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000730a8 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000000730e8 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000074208 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000071836 : mov qword ptr [rax + 0x20], rcx ; mov dword ptr [rdx], ebx ; add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000074c45 : mov qword ptr [rax + 0x20], rdx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000078d28 : mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x0000000000072855 : mov qword ptr [rax + 0x28], rcx ; mov byte ptr [rdx], dil ; movzx eax, dil ; ret
0x0000000000074204 : mov qword ptr [rax + 0x28], rdx ; mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000074100 : mov qword ptr [rax + 0x30], rbp ; mov qword ptr [rax + 0x38], r12 ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000074104 : mov qword ptr [rax + 0x38], r12 ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000730ac : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000073813 : mov qword ptr [rax + 0x40], rdx ; mov rdx, rdi ; jbe 0x73750 ; mov eax, dword ptr [rsi] ; jmp 0x737f6
0x0000000000074578 : mov qword ptr [rax + 0x40], rsi ; lea rdx, qword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000000742a6 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000007429e : mov qword ptr [rax + 0x50], 0 ; mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000131223 : mov qword ptr [rax + 0x58], r8 ; mov eax, 1 ; ret
0x000000000013128e : mov qword ptr [rax + 0x58], rcx ; sub qword ptr [rax + 0x68], 4 ; mov eax, 1 ; ret
0x000000000013121f : mov qword ptr [rax + 0x68], rcx ; mov qword ptr [rax + 0x58], r8 ; mov eax, 1 ; ret
0x000000000007dfa9 : mov qword ptr [rax + 8], 0 ; ret
0x000000000003a4e2 : mov qword ptr [rax + 8], rdi ; mov qword ptr [rax], 4 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000100770 : mov qword ptr [rax + 8], rdi ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000000730e1 : mov qword ptr [rax + 8], rdx ; mov qword ptr [rax], rdx ; mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000078d20 : mov qword ptr [rax + 8], rdx ; mov rdx, qword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000fe493 : mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x000000000003a305 : mov qword ptr [rax], 2 ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003a4e6 : mov qword ptr [rax], 4 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000126609 : mov qword ptr [rax], r10 ; lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x0000000000146fce : mov qword ptr [rax], rbx ; add rsp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x0000000000147039 : mov qword ptr [rax], rbx ; mov eax, 1 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000719b9 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x00000000000217d3 : mov qword ptr [rax], rcx ; mov r15, rax ; mov qword ptr [rbp - 0xa0], rax ; call 0x8da3f
0x0000000000086825 : mov qword ptr [rax], rdi ; ret
0x000000000010455f : mov qword ptr [rax], rdx ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000108c42 : mov qword ptr [rax], rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000735dc : mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000730a5 : mov qword ptr [rax], rdx ; mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000000730e5 : mov qword ptr [rax], rdx ; mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000074201 : mov qword ptr [rax], rdx ; mov qword ptr [rax + 0x28], rdx ; mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000002d942 : mov qword ptr [rax], rdx ; ret
0x00000000000fe46b : mov qword ptr [rax], rdx ; xor eax, eax ; cmp rdi, rdx ; ja 0xfe4ab ; ret
0x0000000000074580 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000008681b : mov qword ptr [rax], rsi ; mov rax, qword ptr [rip + 0x33a6bb] ; mov qword ptr [rax], rdi ; ret
0x000000000008a9da : mov qword ptr [rax], rsi ; xor eax, eax ; mov qword ptr [rip + 0x338e1a], rdx ; add rsp, 0x18 ; ret
0x00000000000795a4 : mov qword ptr [rbp + 0x18], rax ; ja 0x795c5 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079651 : mov qword ptr [rbp + 0x18], rax ; ja 0x79677 ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000110749 : mov qword ptr [rbp + 0x38], rdx ; mov byte ptr [rax], bl ; movsx eax, bl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013595d : mov qword ptr [rbp + 0x50], rax ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007ef1d : mov qword ptr [rbp + 8], rax ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000f6f48 : mov qword ptr [rbp + 8], rax ; mov dword ptr [rbp], ebx ; xor edx, edx ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000007eeec : mov qword ptr [rbp + 8], rax ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002adf3 : mov qword ptr [rbp + r12*8], r15 ; mov rax, qword ptr [rax + r12*8] ; test rax, rax ; je 0x2ae11 ; call rax
0x0000000000059803 : mov qword ptr [rbp - 0x1078], 0 ; jmp rax
0x000000000004dca2 : mov qword ptr [rbp - 0x4c8], 0 ; jmp rax
0x0000000000063080 : mov qword ptr [rbp - 0x668], rax ; jmp 0x60a59
0x0000000000116101 : mov qword ptr [rbp - 0x70], rax ; mov eax, dword ptr [r14 - 0x30] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x0000000000115ea4 : mov qword ptr [rbp - 0x70], rdx ; mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00000000001161fb : mov qword ptr [rbp - 0x70], rdx ; mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x000000000011603a : mov qword ptr [rbp - 0x70], rdx ; mov edx, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000115f03 : mov qword ptr [rbp - 0x70], rdx ; mov edx, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00000000001164e1 : mov qword ptr [rbp - 0x70], rdx ; mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, qword ptr [rbp - 0x158] ; call rax
0x000000000011628a : mov qword ptr [rbp - 0x70], rdx ; mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000115ac3 : mov qword ptr [rbp - 0x70], rdx ; mov edx, dword ptr [rbx - 0x30] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x0000000000115f92 : mov qword ptr [rbp - 0x70], rdx ; mov edx, dword ptr [rcx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000115a0a : mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x00000000000217d9 : mov qword ptr [rbp - 0xa0], rax ; call 0x8da39
0x0000000000106d39 : mov qword ptr [rbp], r14 ; mov qword ptr [rsp + 0x18], rax ; mov rdx, rax ; jmp 0x106d9a
0x000000000008a43b : mov qword ptr [rbp], rax ; je 0x8a620 ; mov rdx, r15 ; mov rdi, r8 ; call rax
0x0000000000074445 : mov qword ptr [rbp], rax ; mov qword ptr [rbx + 0x60], rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007ed98 : mov qword ptr [rbp], rax ; mov qword ptr [rbx + 0x60], rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003b4a9 : mov qword ptr [rbp], rax ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003a879 : mov qword ptr [rbp], rdx ; call rax
0x000000000008b954 : mov qword ptr [rbx + 0x10], r12 ; mov qword ptr [rbx + 0x20], rax ; mov qword ptr [rbx + 8], rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a7fc : mov qword ptr [rbx + 0x10], rax ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000078d4c : mov qword ptr [rbx + 0x10], rax ; mov rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x0000000000079fa6 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x0000000000146245 : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000007a688 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x000000000007fc80 : mov qword ptr [rbx + 0x10], rbp ; mov qword ptr [rbx + 0x18], rbp ; nop ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006d554 : mov qword ptr [rbx + 0x18], rax ; add rsp, 0x18 ; pop rbx ; mov rax, r12 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000079f9e : mov qword ptr [rbx + 0x18], rax ; mov qword ptr [rbx + 8], rax ; mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x00000000001461fd : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000007fc84 : mov qword ptr [rbx + 0x18], rbp ; nop ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000050a96 : mov qword ptr [rbx + 0x18], rsi ; mov qword ptr [rcx + rdx*8], rax ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000006d4c4 : mov qword ptr [rbx + 0x20], rax ; add rsp, 0x18 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000131a19 : mov qword ptr [rbx + 0x20], rax ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000007d2ce : mov qword ptr [rbx + 0x20], rax ; mov dword ptr [rbx], edx ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008b958 : mov qword ptr [rbx + 0x20], rax ; mov qword ptr [rbx + 8], rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007f7dc : mov qword ptr [rbx + 0x28], rax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000078d54 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x0000000000122094 : mov qword ptr [rbx + 0x30], rax ; mov eax, 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001077fb : mov qword ptr [rbx + 0x38], rax ; mov eax, 3 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010ff02 : mov qword ptr [rbx + 0x40], rax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000136385 : mov qword ptr [rbx + 0x48], rax ; add rsp, 0x20 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fd850 : mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x0000000000079f0a : mov qword ptr [rbx + 0x90], rax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000007af47 : mov qword ptr [rbx + 0x90], rax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007c720 : mov qword ptr [rbx + 0x90], rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013bae4 : mov qword ptr [rbx + 8], rax ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079fa2 : mov qword ptr [rbx + 8], rax ; mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x000000000007a684 : mov qword ptr [rbx + 8], rax ; mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000bf1e3 : mov qword ptr [rbx + 8], rax ; mov rax, qword ptr [rip + 0x304902] ; lea rcx, qword ptr [rax + r9] ; mov rdx, rax ; jmp 0xbf20c
0x000000000007d65d : mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009673c : mov qword ptr [rbx], 0 ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000013d3c3 : mov qword ptr [rbx], rax ; add rsp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x000000000013ed25 : mov qword ptr [rbx], rax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x0000000000050b51 : mov qword ptr [rbx], rax ; add rsp, 8 ; add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000096722 : mov qword ptr [rbx], rax ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000089d1b : mov qword ptr [rbx], rax ; je 0x89e2c ; mov rsi, r14 ; call rax
0x000000000013126f : mov qword ptr [rbx], rax ; mov eax, 1 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000008bb61 : mov qword ptr [rbx], rax ; mov qword ptr [rbx + 8], rbp ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012ca33 : mov qword ptr [rbx], rax ; mov r8, rbp ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x0000000000146470 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000013ab3e : mov qword ptr [rbx], rax ; pop rbx ; ret
0x0000000000103a7f : mov qword ptr [rbx], rax ; setne al ; movzx eax, al ; pop rbx ; ret
0x0000000000139e55 : mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000139820 : mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000001399a4 : mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000003b44a : mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012caa3 : mov qword ptr [rbx], rax ; xor r8d, r8d ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x00000000000a04a6 : mov qword ptr [rbx], rdx ; mov byte ptr [rax], 0 ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000005c38d : mov qword ptr [rbx], rdx ; mov byte ptr [rax], bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000063e51 : mov qword ptr [rbx], rdx ; mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ba400 : mov qword ptr [rbx], rsi ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000134b6f : mov qword ptr [rcx + 8], rax ; mov qword ptr [rcx + 0x10], rdx ; mov eax, 1 ; ret
0x0000000000050a9a : mov qword ptr [rcx + rdx*8], rax ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000048635 : mov qword ptr [rcx + rsi*8], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000d7cd1 : mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000076eff : mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000002e101 : mov qword ptr [rcx], rdx ; mov rdx, qword ptr [rip + 0x392e25] ; mov qword ptr fs:[rdx], rax ; ret
0x000000000002d86d : mov qword ptr [rcx], rsi ; cmp rax, rdx ; mov rdx, -1 ; cmove rax, rdx ; ret
0x000000000007d24a : mov qword ptr [rdi + 0x10], rax ; mov qword ptr [rdi + 0x18], rcx ; mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a78bc : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a870c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a78dc : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a872f : mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a791f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a876f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a793f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a878f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a7900 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a8750 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000013e6ff : mov qword ptr [rdi + 0x18], rax ; mov eax, 1 ; ret
0x000000000007d222 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000079106 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000007d24e : mov qword ptr [rdi + 0x18], rcx ; mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000013e83d : mov qword ptr [rdi + 0x18], rsi ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000013ee14 : mov qword ptr [rdi + 0x20], 0 ; mov qword ptr [rdi + 8], rax ; ret
0x00000000001381d7 : mov qword ptr [rdi + 0x20], rax ; mov qword ptr [rdi + 0x28], rdx ; mov eax, 1 ; ret
0x000000000013e839 : mov qword ptr [rdi + 0x20], rsi ; mov qword ptr [rdi + 0x18], rsi ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000001064a4 : mov qword ptr [rdi + 0x28], rdx ; mov byte ptr [rax], 0xa ; add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000010611a : mov qword ptr [rdi + 0x28], rdx ; mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013818f : mov qword ptr [rdi + 0x30], rax ; mov qword ptr [rdi + 0x38], rdx ; mov eax, 1 ; ret
0x000000000007d21e : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000007d252 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a787c : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a86cc : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a789c : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a86ec : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a777a : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a85ba : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a779a : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a85da : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a77ba : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a85fa : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000004888f : mov qword ptr [rdi + 8], r10 ; mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000001378fe : mov qword ptr [rdi + 8], rax ; mov qword ptr [rdi + 0x10], rdx ; mov eax, 1 ; ret
0x00000000000368a0 : mov qword ptr [rdi + 8], rax ; mov rax, qword ptr [rsi] ; and rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000036b90 : mov qword ptr [rdi + 8], rax ; mov rax, qword ptr [rsi] ; or rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000007d226 : mov qword ptr [rdi + 8], rax ; ret
0x000000000003af03 : mov qword ptr [rdi + 8], rdx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000007e4a7 : mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007994e : mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x00000000000494fc : mov qword ptr [rdi + r11*8 + 8], r9 ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000048927 : mov qword ptr [rdi + r8], rax ; sub r8, 8 ; cmp r8, 0xf8 ; jne 0x48931 ; mov rax, rdx ; ret
0x00000000000367c1 : mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x000000000003aeeb : mov qword ptr [rdi], rax ; cmovbe rdx, r8 ; xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000004a5da : mov qword ptr [rdi], rax ; mov dword ptr [rdx], 0xffffc002 ; mov eax, 1 ; ret
0x000000000004a5b5 : mov qword ptr [rdi], rax ; mov eax, 0xffffc002 ; sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000100774 : mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000004aaca : mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x0000000000036362 : mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000a7706 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a8536 : mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a7736 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a8576 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a7756 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a8596 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a7777 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a85b7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a7797 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a85d7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a77b7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a85f7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a8557 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a7717 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a76f3 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a8523 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000007253d : mov qword ptr [rdx + 0x20], rax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x000000000016839a : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000016400a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x00000000001683ba : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000016402a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000016a622 : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000001683da : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000016404a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000016826a : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x0000000000163f3a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x000000000010079c : mov qword ptr [rdx + 8], rax ; test rax, rax ; je 0x1007b5 ; mov qword ptr [rax], rdx ; ret
0x0000000000096836 : mov qword ptr [rdx], r12 ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011fb16 : mov qword ptr [rdx], rax ; add rsp, 0x90 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016a6ce : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000168213 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000134c5a : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x0000000000168313 : mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x0000000000163fc3 : mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000168333 : mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x0000000000163fd3 : mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000168353 : mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x0000000000163fe3 : mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000168373 : mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x0000000000163ff3 : mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000168393 : mov qword ptr [rdx], rax ; mov rax, qword ptr [rcx + 5] ; mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000164003 : mov qword ptr [rdx], rax ; mov rax, qword ptr [rcx + 5] ; mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x00000000001683b3 : mov qword ptr [rdx], rax ; mov rax, qword ptr [rcx + 6] ; mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x0000000000164023 : mov qword ptr [rdx], rax ; mov rax, qword ptr [rcx + 6] ; mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x00000000001683d3 : mov qword ptr [rdx], rax ; mov rax, qword ptr [rcx + 7] ; mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x0000000000164043 : mov qword ptr [rdx], rax ; mov rax, qword ptr [rcx + 7] ; mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x0000000000168263 : mov qword ptr [rdx], rax ; mov rax, qword ptr [rcx + 8] ; mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x0000000000163f33 : mov qword ptr [rdx], rax ; mov rax, qword ptr [rcx + 8] ; mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000163ee3 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000002e10c : mov qword ptr [rdx], rax ; ret
0x00000000000d7cc9 : mov qword ptr [rdx], rax ; test rcx, rcx ; je 0xd7ce4 ; mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000077b7e : mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000073409 : mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000122e5e : mov qword ptr [rip + 0x29f9db], rax ; add rsp, 8 ; ret
0x0000000000117777 : mov qword ptr [rip + 0x2ad9a2], rax ; pop rbp ; ret
0x00000000000ffab4 : mov qword ptr [rip + 0x2c2cc5], rax ; mov rdx, rax ; jmp 0xffa58
0x00000000000ffa1e : mov qword ptr [rip + 0x2c2d5b], rax ; add rsp, 8 ; ret
0x0000000000101069 : mov qword ptr [rip + 0x2c3080], rax ; add rsp, 8 ; ret
0x0000000000100afa : mov qword ptr [rip + 0x2c353f], rax ; jmp 0x100a56
0x000000000008fb23 : mov qword ptr [rip + 0x333d5e], rax ; add rsp, 8 ; ret
0x000000000008fae1 : mov qword ptr [rip + 0x333da0], rax ; ret
0x0000000000080408 : mov qword ptr [rip + 0x343389], rax ; add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000003ab03 : mov qword ptr [rip + 0x38b93a], 0 ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000001fa33 : mov qword ptr [rip + 0x3a2e66], rax ; mov qword ptr [rip + 0x3a68c7], rdx ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000001fa3a : mov qword ptr [rip + 0x3a68c7], rdx ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000003ae6e : mov qword ptr [rsi + 0x10], r10 ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x000000000003b546 : mov qword ptr [rsi + 0x10], rax ; mov eax, 0xb ; mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x000000000012ffce : mov qword ptr [rsi + 0x10], rax ; ret
0x000000000003b505 : mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x00000000000bdc56 : mov qword ptr [rsi + 0x28], rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003ae72 : mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x00000000000fd836 : mov qword ptr [rsi + 0x48], rax ; ret
0x00000000000fd82a : mov qword ptr [rsi + 0x50], r8 ; test al, 0x20 ; je 0xfd850 ; xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x00000000000f7e00 : mov qword ptr [rsi + 0x70], rdx ; mov rax, qword ptr [rdi + 0x100] ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000f7283 : mov qword ptr [rsi + 0x70], rdx ; mov rax, qword ptr [rdi + 0x80] ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000f728e : mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x0000000000130066 : mov qword ptr [rsi + 8], 0 ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000012ffc6 : mov qword ptr [rsi + 8], 1 ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000074e17 : mov qword ptr [rsi + 8], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012ff9e : mov qword ptr [rsi + 8], rax ; ret
0x000000000013782f : mov qword ptr [rsi + 8], rdx ; mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000013810f : mov qword ptr [rsi + 8], rdx ; mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000134a85 : mov qword ptr [rsi + 8], rdx ; mov rax, qword ptr [rax + 0xa0] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000126a3e : mov qword ptr [rsi + r11 + 8], rax ; mov qword ptr [rsi + r11 + 0x10], rdx ; mov byte ptr [rsi + 3], r8b ; xor eax, eax ; ret
0x00000000000484e4 : mov qword ptr [rsi + rax*8], rcx ; add rax, 1 ; cmp rax, rdx ; jne 0x484ef ; xor eax, eax ; ret
0x000000000004849a : mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; pop rbx ; ret
0x000000000003ae67 : mov qword ptr [rsi], rax ; lea rax, qword ptr [r10 + r8*4] ; mov qword ptr [rsi + 0x10], r10 ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x000000000013e78e : mov qword ptr [rsi], rax ; mov qword ptr [rdi + 0x18], rdx ; mov eax, 1 ; ret
0x0000000000074e1b : mov qword ptr [rsi], rax ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007910a : mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000013128b : mov qword ptr [rsi], rdx ; mov qword ptr [rax + 0x58], rcx ; sub qword ptr [rax + 0x68], 4 ; mov eax, 1 ; ret
0x0000000000084180 : mov qword ptr [rsp + 0x10], r14 ; call qword ptr [rax]
0x00000000000843b2 : mov qword ptr [rsp + 0x18], rax ; mov qword ptr [rsp + 0x10], r9 ; mov qword ptr [rsp + 8], rcx ; call rsi
0x0000000000106d3d : mov qword ptr [rsp + 0x18], rax ; mov rdx, rax ; jmp 0x106d96
0x0000000000083f3e : mov qword ptr [rsp + 0x18], rdx ; mov byte ptr [rsp + 0x28], r11b ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x0000000000083f48 : mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x00000000000e4c57 : mov qword ptr [rsp + 0x28], rdi ; add rax, rdx ; jmp rax
0x000000000013dd84 : mov qword ptr [rsp + 8], r8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000084270 : mov qword ptr [rsp + 8], r8 ; xor edi, edi ; call qword ptr [rax]
0x000000000008b55f : mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x0000000000104235 : mov qword ptr [rsp + 8], rax ; call rbx
0x0000000000084178 : mov qword ptr [rsp + 8], rcx ; mov rdi, r14 ; mov qword ptr [rsp + 0x10], r14 ; call qword ptr [rax]
0x00000000000757be : mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x0000000000108ce7 : mov qword ptr [rsp - 0x30], r9 ; syscall ; cmp rax, -0x1000 ; ja 0x108d10 ; ret
0x000000000012ccc6 : mov qword ptr [rsp], rax ; mov rcx, rax ; call r12
0x000000000007a352 : mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x0000000000080010 : mov qword ptr fs:[r9], rdx ; mov rax, rdx ; add rsp, 8 ; ret
0x000000000013aaee : mov qword ptr fs:[rax], rdx ; ret
0x000000000003a878 : mov qword ptr fs:[rbp], rdx ; call rax
0x000000000013ab3d : mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000002e100 : mov qword ptr fs:[rcx], rdx ; mov rdx, qword ptr [rip + 0x392e25] ; mov qword ptr fs:[rdx], rax ; ret
0x000000000002e10b : mov qword ptr fs:[rdx], rax ; ret
0x0000000000079f09 : mov qword ptr ss:[rbx + 0x90], rax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000997ec : mov r10d, r15d ; cmp r10b, r8b ; jb 0x997da ; mov rdx, rax ; jmp 0x99786
0x000000000001ff11 : mov r12, rax ; call 0xaac29
0x000000000013ae3b : mov r12d, dword ptr [rax] ; jmp 0x13ae4b
0x000000000013ae38 : mov r13, rax ; mov r12d, dword ptr [rax] ; jmp 0x13ae4e
0x00000000001046af : mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000013b2a1 : mov r14, rsp ; nop dword ptr [rax] ; mov rax, qword ptr [r15 + 8] ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x00000000000217d6 : mov r15, rax ; mov qword ptr [rbp - 0xa0], rax ; call 0x8da3c
0x00000000000cd386 : mov r15, rax ; mov rax, qword ptr [r12 + 8] ; test rax, rax ; je 0xcd3a2 ; call rax
0x000000000010426d : mov r15b, 0xf1 ; dec dword ptr [rax - 0x75] ; jge 0x10427d ; call rbx
0x00000000000d820b : mov r8, qword ptr [r8 + rax*8] ; xor eax, eax ; bt r8, rcx ; jb 0xd819a ; ret
0x000000000013a4b5 : mov r8, r15 ; mov rcx, r14 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000aae34 : mov r8, rax ; mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0xaae2c ; ret
0x00000000000ede79 : mov r8b, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000011c972 : mov r8d, 0xffffffff ; mov rdi, rax ; jmp 0x11c84f
0x000000000004ee0b : mov r8d, 1 ; jmp rax
0x00000000000ac6dc : mov r8d, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0xac6ba ; ret
0x0000000000099d69 : mov r8d, edx ; cmp r8b, dil ; jb 0x99d5a ; mov rdx, rax ; jmp 0x99d11
0x00000000000997e9 : mov r8d, r10d ; mov r10d, r15d ; cmp r10b, r8b ; jb 0x997dd ; mov rdx, rax ; jmp 0x99789
0x00000000001029f2 : mov r9, qword ptr [rsp + 8] ; syscall ; cmp rax, -0xfff ; jae 0x102a11 ; ret
0x00000000000aae7b : mov r9, rax ; mov eax, dword ptr [rcx + rax*4] ; sub eax, dword ptr [rcx + r8*4] ; je 0xaae6d ; ret
0x0000000000100822 : mov r9, rcx ; mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x000000000005a6b4 : mov r9d, 1 ; mov dword ptr [rbp - 0x10b0], 0 ; jmp rax
0x00000000000adb24 : mov r9d, dword ptr [rdi + rdx*4] ; test r9d, r9d ; jne 0xadaed ; mov rax, rdx ; ret
0x0000000000146732 : mov r9d, dword ptr [rdx] ; mov rdx, r13 ; add r9, qword ptr [rbp - 0x88] ; call rax
0x0000000000099b49 : mov r9d, ebx ; cmp dil, r9b ; jb 0x99b3a ; mov rdx, rax ; jmp 0x99af3
0x0000000000099939 : mov r9d, ebx ; cmp r8b, r9b ; jb 0x9992a ; mov rdx, rax ; jmp 0x998d3
0x000000000009aaf9 : mov r9d, r11d ; cmp r8b, r9b ; jb 0x9aaea ; mov rdx, rax ; jmp 0x9aa93
0x000000000009bb91 : mov r9d, r11d ; cmp r8b, r9b ; jb 0x9bb82 ; mov rdx, rax ; jmp 0x9bb33
0x000000000009d804 : mov r9d, r11d ; cmp r8b, r9b ; jb 0x9d7f5 ; mov rdx, rax ; jmp 0x9d7b3
0x00000000000a089d : mov r9d, r9d ; movsxd r9, dword ptr [rax + r9*4] ; add r9, rax ; jmp r9
0x00000000000a093d : mov r9d, r9d ; movsxd rax, dword ptr [r10 + r9*4] ; add rax, r10 ; jmp rax
0x00000000000f7f63 : mov rax, -1 ; cmove rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x0000000000020b1a : mov rax, -1 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000020c5a : mov rax, -1 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ad15d : mov rax, -1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000356d6 : mov rax, -1 ; ret
0x00000000000363dd : mov rax, -2 ; rol rax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000bb379 : mov rax, -3 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ac030 : mov rax, 1 ; ret
0x00000000000ac040 : mov rax, 2 ; ret
0x00000000000ac050 : mov rax, 3 ; ret
0x00000000000ac060 : mov rax, 4 ; ret
0x00000000000ac070 : mov rax, 5 ; ret
0x00000000000ac080 : mov rax, 6 ; ret
0x00000000000ac090 : mov rax, 7 ; ret
0x00000000000fcd30 : mov rax, qword ptr [r12 + 0x10] ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011473d : mov rax, qword ptr [r12 + 0x38] ; jmp 0x11470d
0x000000000005c0cc : mov rax, qword ptr [r12 + 8] ; lea rdx, qword ptr [rax + 8] ; mov qword ptr [r12 + 8], rdx ; jmp 0x5c0ad
0x000000000013dec4 : mov rax, qword ptr [r12 + 8] ; lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x00000000000cd389 : mov rax, qword ptr [r12 + 8] ; test rax, rax ; je 0xcd39f ; call rax
0x000000000013bae0 : mov rax, qword ptr [r12] ; mov qword ptr [rbx + 8], rax ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000204a6 : mov rax, qword ptr [r13 + 0x18] ; test rax, rax ; je 0x204c0 ; mov rdi, rbp ; call rax
0x000000000010c6c3 : mov rax, qword ptr [r13 + rax*8] ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000137f70 : mov rax, qword ptr [r14 + 0x70] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x137f92 ; mov rdi, r12 ; call rax
0x00000000001160fd : mov rax, qword ptr [r14 - 0x10] ; mov qword ptr [rbp - 0x70], rax ; mov eax, dword ptr [r14 - 0x30] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x000000000013b2a8 : mov rax, qword ptr [r15 + 8] ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000107760 : mov rax, qword ptr [rax + 0x108] ; ret
0x000000000013d1e4 : mov rax, qword ptr [rax + 0x10] ; add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000014616e : mov rax, qword ptr [rax + 0x128] ; jmp rax
0x0000000000075f5b : mov rax, qword ptr [rax + 0x130] ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000010b47f : mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x000000000013da3c : mov rax, qword ptr [rax + 0x18] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000010b36f : mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x00000000000fe977 : mov rax, qword ptr [rax + 0x18] ; test rax, rax ; je 0xfe98c ; ret
0x0000000000075f62 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000116678 : mov rax, qword ptr [rax + 0x30] ; ret
0x000000000012df6c : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12df86 ; mov rdi, rsp ; call rax
0x000000000012e057 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12e071 ; mov rdi, rsp ; call rax
0x000000000012e912 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12e92c ; mov rdi, rbp ; call rax
0x000000000012f975 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12f98f ; mov rdi, rbx ; call rax
0x000000000012fbf0 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12faa0 ; mov rdi, rbx ; call rax
0x000000000012fce7 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12fd01 ; mov rdi, rbx ; call rax
0x0000000000134aeb : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x134b0d ; lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x00000000001354e3 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x1354fd ; mov rdi, r12 ; call rax
0x00000000001356b4 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x1356d0 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000136a69 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x136998 ; mov rdi, rbx ; call rax
0x00000000001369a0 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x1369ba ; mov rdi, r12 ; call rax
0x000000000013699f : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x1369bb ; mov rdi, r12 ; call rax
0x0000000000136b91 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x136bab ; mov rdi, rbp ; call rax
0x0000000000136db1 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x136dcb ; mov rdi, rbp ; call rax
0x0000000000137888 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x1378a4 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000137f74 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x137f8e ; mov rdi, r12 ; call rax
0x00000000001382e8 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x138304 ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000013b874 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x13b890 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013bf8d : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x13bfa9 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000137833 : mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000002e051 : mov rax, qword ptr [rax + 0x40] ; movzx eax, word ptr [rax + rdi*2 + 0x100] ; and eax, esi ; ret
0x000000000002de81 : mov rax, qword ptr [rax + 0x48] ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x0000000000076863 : mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000138113 : mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000002de61 : mov rax, qword ptr [rax + 0x58] ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x0000000000107758 : mov rax, qword ptr [rax + 0x58] ; ret
0x0000000000134a89 : mov rax, qword ptr [rax + 0xa0] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000107739 : mov rax, qword ptr [rax + 8] ; ret
0x000000000008b8da : mov rax, qword ptr [rax + 8] ; test rax, rax ; jne 0x8b8da ; ret
0x000000000002adf8 : mov rax, qword ptr [rax + r12*8] ; test rax, rax ; je 0x2ae0c ; call rax
0x000000000002de84 : mov rax, qword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002d98e : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000048631 : mov rax, qword ptr [rax + rsi*8] ; mov qword ptr [rcx + rsi*8], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000146a46 : mov rax, qword ptr [rax] ; add rax, qword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x00000000000c800a : mov rax, qword ptr [rax] ; lea rdx, qword ptr [rdi + rdi*8] ; lea rax, qword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000002cb5b : mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000002e04e : mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x40] ; movzx eax, word ptr [rax + rdi*2 + 0x100] ; and eax, esi ; ret
0x000000000002de7e : mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x48] ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002de5e : mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x58] ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002d98b : mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000002cb58 : mov rax, qword ptr [rax] ; mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000002de7b : mov rax, qword ptr [rax] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x48] ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002de5b : mov rax, qword ptr [rax] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x58] ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x0000000000146365 : mov rax, qword ptr [rax] ; mov rdx, qword ptr [rsp + 0x38] ; add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x000000000002dd9b : mov rax, qword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002ddbb : mov rax, qword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002dcfb : mov rax, qword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002dd7b : mov rax, qword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002dc9b : mov rax, qword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002dd3b : mov rax, qword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002dcdb : mov rax, qword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002dd1b : mov rax, qword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000002de3b : mov rax, qword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000002dcbb : mov rax, qword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 2 ; movzx eax, ax ; ret
0x000000000002dd5b : mov rax, qword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 4 ; movzx eax, ax ; ret
0x000000000002dc7b : mov rax, qword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 8 ; movzx eax, ax ; ret
0x00000000001166bf : mov rax, qword ptr [rax] ; movzx eax, word ptr [rax + rdx*2] ; shr ax, 0xe ; and eax, 1 ; ret
0x000000000003a992 : mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000012b0c8 : mov rax, qword ptr [rax] ; ret
0x0000000000106908 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x1069b4 ; call rax
0x0000000000106a7f : mov rax, qword ptr [rax] ; test rax, rax ; je 0x106b8c ; call rax
0x0000000000114eab : mov rax, qword ptr [rax] ; test rax, rax ; je 0x114edf ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x0000000000080a39 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x80a4b ; call rax
0x0000000000087dd5 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x87de7 ; call rax
0x00000000000801d1 : mov rax, qword ptr [rax] ; test rax, rax ; jne 0x8020e ; xor edi, edi ; call qword ptr [r15]
0x0000000000073467 : mov rax, qword ptr [rbp + 0x18] ; mov esi, r12d ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000001356b0 : mov rax, qword ptr [rbp + 0x18] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x1356d4 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013b870 : mov rax, qword ptr [rbp + 0x18] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x13b894 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013bf89 : mov rax, qword ptr [rbp + 0x18] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x13bfad ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000000738a3 : mov rax, qword ptr [rbp + 0x20] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000007366c : mov rax, qword ptr [rbp + 0x28] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000070bac : mov rax, qword ptr [rbp + 0x48] ; add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000001046b2 : mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000ee9f4 : mov rax, qword ptr [rbp - 0xd8] ; call rax
0x00000000000a0f96 : mov rax, qword ptr [rbp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001107cf : mov rax, qword ptr [rbx + 0x10] ; mov qword ptr [rbx + 0x10], rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007d37c : mov rax, qword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000007d39d : mov rax, qword ptr [rbx + 0x18] ; mov esi, dword ptr [rsp + 0xc] ; mov rdi, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000001107ff : mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rbx + 0x18], rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000078d50 : mov rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x000000000012e90e : mov rax, qword ptr [rbx + 0x20] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12e930 ; mov rdi, rbp ; call rax
0x0000000000130f20 : mov rax, qword ptr [rbx + 0x20] ; sub rax, qword ptr [rbx + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x000000000007da48 : mov rax, qword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000007de68 : mov rax, qword ptr [rbx + 0x48] ; add rsp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x000000000007ed94 : mov rax, qword ptr [rbx + 0x60] ; mov qword ptr [rbp], rax ; mov qword ptr [rbx + 0x60], rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001382e4 : mov rax, qword ptr [rbx + 0x60] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x138308 ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x0000000000137884 : mov rax, qword ptr [rbx + 0x70] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x1378a8 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x000000000013b7ed : mov rax, qword ptr [rbx + 0xe8] ; test rax, rax ; jne 0x13b7ed ; pop rbx ; ret
0x000000000013d480 : mov rax, qword ptr [rbx + 8] ; lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000078d48 : mov rax, qword ptr [rbx + 8] ; mov qword ptr [rbx + 0x10], rax ; mov rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x000000000011079f : mov rax, qword ptr [rbx + 8] ; mov qword ptr [rbx + 8], rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000130e20 : mov rax, qword ptr [rbx + 8] ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x000000000007c675 : mov rax, qword ptr [rbx + 8] ; pop rbx ; pop rbp ; movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013942b : mov rax, qword ptr [rbx] ; add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x00000000000cd4d8 : mov rax, qword ptr [rbx] ; mov rdx, qword ptr [rax + 0x18] ; test rdx, rdx ; je 0xcd4f5 ; call rdx
0x000000000013ab09 : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x13ab21 ; pop rbx ; ret
0x0000000000168396 : mov rax, qword ptr [rcx + 5] ; mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000164006 : mov rax, qword ptr [rcx + 5] ; mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x00000000001683b6 : mov rax, qword ptr [rcx + 6] ; mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x0000000000164026 : mov rax, qword ptr [rcx + 6] ; mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x00000000001683d6 : mov rax, qword ptr [rcx + 7] ; mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x0000000000164046 : mov rax, qword ptr [rcx + 7] ; mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x0000000000168266 : mov rax, qword ptr [rcx + 8] ; mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x0000000000163f36 : mov rax, qword ptr [rcx + 8] ; mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x000000000006307d : mov rax, qword ptr [rcx] ; mov qword ptr [rbp - 0x668], rax ; jmp 0x60a5c
0x000000000016a6cb : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000168210 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000168310 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x0000000000163fc0 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000168330 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x0000000000163fd0 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000168350 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x0000000000163fe0 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000168370 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x0000000000163ff0 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000164000 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, qword ptr [rcx + 5] ; mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x0000000000164020 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, qword ptr [rcx + 6] ; mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x0000000000164040 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, qword ptr [rcx + 7] ; mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x0000000000163f30 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, qword ptr [rcx + 8] ; mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000163ee0 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000000f7e04 : mov rax, qword ptr [rdi + 0x100] ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000cd56c : mov rax, qword ptr [rdi + 0x10] ; test rax, rax ; je 0xcd583 ; call rax
0x000000000013e6be : mov rax, qword ptr [rdi + 0x18] ; add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000013eac2 : mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000013e660 : mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000002c351 : mov rax, qword ptr [rdi + 0x20] ; mov rbx, rdi ; test rax, rax ; je 0x2c36b ; call rax
0x00000000000c8e70 : mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000001721b7 : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x1721d0 ; call rax
0x000000000007f760 : mov rax, qword ptr [rdi + 0x28] ; cmp qword ptr [rdi + 0x10], rax ; cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000078d90 : mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000078c80 : mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000076860 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007d21a : mov rax, qword ptr [rdi + 0x48] ; mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000007f160 : mov rax, qword ptr [rdi + 0x68] ; ret
0x00000000000f7287 : mov rax, qword ptr [rdi + 0x80] ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000740d0 : mov rax, qword ptr [rdi + 0xa0] ; cmp qword ptr [rax + 0x30], 0 ; je 0x740ee ; ret
0x000000000007b510 : mov rax, qword ptr [rdi + 8] ; cmp rax, qword ptr [rdi + 0x10] ; jae 0x7b52d ; movzx eax, byte ptr [rax] ; ret
0x000000000007f276 : mov rax, qword ptr [rdi + 8] ; cmp rax, rdx ; jae 0x7f2ac ; movzx eax, byte ptr [rax] ; ret
0x000000000013d375 : mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000013db00 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000130d50 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013dd80 : mov rax, qword ptr [rdi + 8] ; mov qword ptr [rsp + 8], r8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013d468 : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000012eba6 : mov rax, qword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x000000000016c810 : mov rax, qword ptr [rdi - 8] ; cmp rcx, rax ; jne 0x16ccd2 ; xor eax, eax ; ret
0x000000000016d9e0 : mov rax, qword ptr [rdi - 8] ; cmp rcx, rax ; jne 0x16db12 ; xor eax, eax ; ret
0x000000000016cc92 : mov rax, qword ptr [rdi - 8] ; mov rcx, qword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x16ccd2 ; xor eax, eax ; ret
0x000000000016dad2 : mov rax, qword ptr [rdi - 8] ; mov rcx, qword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x16db12 ; xor eax, eax ; ret
0x000000000007ee6e : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000116e44 : mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x0000000000078d81 : mov rax, qword ptr [rdx + 0x20] ; sub rax, qword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x0000000000078c71 : mov rax, qword ptr [rdx + 0x38] ; sub rax, qword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x0000000000076833 : mov rax, qword ptr [rdx + 0x58] ; test eax, eax ; jne 0x76859 ; mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000002de22 : mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000002cb1c : mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000134b50 : mov rax, qword ptr [rdx] ; bswap eax ; mov dword ptr [rcx + 0xb4], eax ; mov eax, 1 ; ret
0x0000000000134c98 : mov rax, qword ptr [rdx] ; bswap eax ; mov dword ptr [rcx + 0xb8], eax ; mov eax, 1 ; ret
0x00000000001378e0 : mov rax, qword ptr [rdx] ; bswap eax ; mov dword ptr [rdi + 0x54], eax ; mov eax, 1 ; ret
0x00000000001379b0 : mov rax, qword ptr [rdx] ; bswap eax ; mov dword ptr [rdi + 0x58], eax ; mov eax, 1 ; ret
0x00000000000e8f57 : mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x0000000000137980 : mov rax, qword ptr [rdx] ; sub eax, 1 ; bswap eax ; mov dword ptr [rdi + 0x48], eax ; mov eax, 1 ; ret
0x000000000007ee60 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x7ee61 ; ret
0x0000000000146aa0 : mov rax, qword ptr [rip + 0x27a3d1] ; mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x00000000001469b0 : mov rax, qword ptr [rip + 0x27a3f9] ; add rax, qword ptr fs:[0] ; ret
0x0000000000143b23 : mov rax, qword ptr [rip + 0x27e8c6] ; call qword ptr [rax]
0x00000000001434f6 : mov rax, qword ptr [rip + 0x27eef3] ; call qword ptr [rax]
0x000000000013b7a0 : mov rax, qword ptr [rip + 0x2856d1] ; cmp dword ptr fs:[rax], 0x18 ; je 0x13b7bd ; ret
0x000000000013ac50 : mov rax, qword ptr [rip + 0x286241] ; add rsp, 8 ; ret
0x000000000013ac20 : mov rax, qword ptr [rip + 0x2862d9] ; add rsp, 8 ; ret
0x000000000013abc0 : mov rax, qword ptr [rip + 0x2863c1] ; add rsp, 8 ; ret
0x000000000013abf0 : mov rax, qword ptr [rip + 0x2863e9] ; add rsp, 8 ; ret
0x000000000012b0c0 : mov rax, qword ptr [rip + 0x295f21] ; mov rax, qword ptr fs:[rax] ; ret
0x000000000012ae40 : mov rax, qword ptr [rip + 0x295ff1] ; mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x12ae5e ; ret
0x0000000000123890 : mov rax, qword ptr [rip + 0x29efc1] ; ret
0x000000000011b540 : mov rax, qword ptr [rip + 0x2a5919] ; add rax, qword ptr fs:[0] ; ret
0x0000000000117220 : mov rax, qword ptr [rip + 0x2adee1] ; test rax, rax ; je 0x11723c ; ret
0x000000000010bcc0 : mov rax, qword ptr [rip + 0x2b51a1] ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000010b478 : mov rax, qword ptr [rip + 0x2b8f59] ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x000000000010b368 : mov rax, qword ptr [rip + 0x2b9069] ; mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x0000000000107740 : mov rax, qword ptr [rip + 0x2b9731] ; mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x0000000000103ae0 : mov rax, qword ptr [rip + 0x2bd391] ; mov dword ptr fs:[rax], 0x16 ; ret
0x0000000000103aaa : mov rax, qword ptr [rip + 0x2bd3c7] ; mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x0000000000103a99 : mov rax, qword ptr [rip + 0x2bd3d8] ; mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x0000000000103444 : mov rax, qword ptr [rip + 0x2bf345] ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000102eb7 : mov rax, qword ptr [rip + 0x2bf8ca] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fe970 : mov rax, qword ptr [rip + 0x2c24f1] ; mov rax, qword ptr [rax + 0x18] ; test rax, rax ; je 0xfe993 ; ret
0x00000000000fe950 : mov rax, qword ptr [rip + 0x2c2521] ; mov dword ptr fs:[rax], 0x16 ; mov eax, edi ; ret
0x00000000000fe8a0 : mov rax, qword ptr [rip + 0x2c25d1] ; mov dword ptr fs:[rax], 0x16 ; mov eax, edi ; ret
0x00000000000fe48c : mov rax, qword ptr [rip + 0x2c2a35] ; mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x00000000000fcd40 : mov rax, qword ptr [rip + 0x2c4131] ; mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x00000000000ec210 : mov rax, qword ptr [rip + 0x2d4c61] ; neg edx ; mov dword ptr fs:[rax], edx ; mov eax, 0xffffffff ; ret
0x00000000000bf1e7 : mov rax, qword ptr [rip + 0x304902] ; lea rcx, qword ptr [rax + r9] ; mov rdx, rax ; jmp 0xbf208
0x00000000000bbc10 : mov rax, qword ptr [rip + 0x305261] ; mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x00000000000bd495 : mov rax, qword ptr [rip + 0x30903c] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000087dce : mov rax, qword ptr [rip + 0x33909b] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x87dee ; call rax
0x000000000008681e : mov rax, qword ptr [rip + 0x33a6bb] ; mov qword ptr [rax], rdi ; ret
0x0000000000085760 : mov rax, qword ptr [rip + 0x33b711] ; mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x00000000000843e1 : mov rax, qword ptr [rip + 0x33c9e0] ; xor edi, edi ; call qword ptr [rax]
0x0000000000084269 : mov rax, qword ptr [rip + 0x33cb58] ; mov qword ptr [rsp + 8], r8 ; xor edi, edi ; call qword ptr [rax]
0x0000000000080a32 : mov rax, qword ptr [rip + 0x340477] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x80a52 ; call rax
0x000000000007f140 : mov rax, qword ptr [rip + 0x3433b9] ; ret
0x0000000000034188 : mov rax, qword ptr [rip + 0x38cce9] ; mov dword ptr fs:[rax], 0x2a ; mov rax, rcx ; ret
0x000000000002e060 : mov rax, qword ptr [rip + 0x392da9] ; add rax, qword ptr fs:[0] ; ret
0x000000000002e080 : mov rax, qword ptr [rip + 0x392e61] ; add rax, qword ptr fs:[0] ; ret
0x000000000002e0a0 : mov rax, qword ptr [rip + 0x392e89] ; add rax, qword ptr fs:[0] ; ret
0x000000000002d93b : mov rax, qword ptr [rip + 0x3934a6] ; mov qword ptr [rax], rdx ; ret
0x0000000000029a00 : mov rax, qword ptr [rip + 0x398ec9] ; ret
0x0000000000020da0 : mov rax, qword ptr [rip + 0x3a00d1] ; mov dword ptr fs:[rax], 9 ; mov eax, edi ; ret
0x00000000000207a0 : mov rax, qword ptr [rip + 0x3a06d1] ; add rax, qword ptr fs:[0] ; ret
0x00000000000215d0 : mov rax, qword ptr [rip + 0x3a4d39] ; ret
0x00000000000215c0 : mov rax, qword ptr [rip + 0x3a4d59] ; ret
0x000000000010cc98 : mov rax, qword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000010cd18 : mov rax, qword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000010ca18 : mov rax, qword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000010cc18 : mov rax, qword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000010c818 : mov rax, qword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000010cb18 : mov rax, qword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000010ca98 : mov rax, qword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000010c898 : mov rax, qword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000010c918 : mov rax, qword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 2 ; movzx eax, ax ; ret
0x000000000010cb98 : mov rax, qword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 4 ; movzx eax, ax ; ret
0x000000000010c798 : mov rax, qword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 8 ; movzx eax, ax ; ret
0x000000000002deb0 : mov rax, qword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000002df00 : mov rax, qword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 2 ; movzx eax, ax ; ret
0x000000000002dfa0 : mov rax, qword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 4 ; movzx eax, ax ; ret
0x000000000002dec0 : mov rax, qword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 8 ; movzx eax, ax ; ret
0x000000000002e020 : mov rax, qword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e030 : mov rax, qword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002cb38 : mov rax, qword ptr [rsi + rax*8 + 0x80] ; ret
0x00000000000487eb : mov rax, qword ptr [rsi + rbx*8] ; lea r9, qword ptr [rdx] ; jmp 0x4884b
0x000000000004a3fb : mov rax, qword ptr [rsi + rbx*8] ; lea r9, qword ptr [rdx] ; jmp 0x4a45b
0x00000000000368a4 : mov rax, qword ptr [rsi] ; and rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000036b94 : mov rax, qword ptr [rsi] ; or rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000145d1d : mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000000203ea : mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000f1396 : mov rax, qword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xf13da
0x0000000000025845 : mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000000ad1e0 : mov rax, qword ptr [rsp + 0x30] ; add rsp, 0x60 ; pop rbx ; pop rbp ; sub rax, r12 ; pop r12 ; ret
0x0000000000039276 : mov rax, qword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x00000000001462d6 : mov rax, qword ptr [rsp + 0x38] ; jne 0x1462c3 ; add rsp, 0x48 ; ret
0x0000000000136b8c : mov rax, qword ptr [rsp + 0x38] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x136bb0 ; mov rdi, rbp ; call rax
0x000000000013699b : mov rax, qword ptr [rsp + 0x48] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x1369bf ; mov rdi, r12 ; call rax
0x000000000008571f : mov rax, qword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000109d35 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ba403 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000011bd68 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012f1cf : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003b2a8 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000798b9 : mov rax, qword ptr [rsp + 8] ; cmp qword ptr [rax + 0x30], 0 ; je 0x798da ; add rsp, 0x38 ; ret
0x000000000013d29f : mov rax, qword ptr [rsp + 8] ; mov dword ptr [rbx], eax ; add rsp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x0000000000139e50 : mov rax, qword ptr [rsp + 8] ; mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013981b : mov rax, qword ptr [rsp + 8] ; mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000013999f : mov rax, qword ptr [rsp + 8] ; mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000012df67 : mov rax, qword ptr [rsp + 8] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12df8b ; mov rdi, rsp ; call rax
0x000000000012e052 : mov rax, qword ptr [rsp + 8] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12e076 ; mov rdi, rsp ; call rax
0x000000000010422d : mov rax, qword ptr [rsp + 8] ; mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x0000000000131a80 : mov rax, qword ptr [rsp + 8] ; mov rdx, rbx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000ff3ef : mov rax, qword ptr [rsp - 0x50] ; ret
0x0000000000135ff7 : mov rax, qword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000010bd22 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000010bd83 : mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x000000000002d98a : mov rax, qword ptr fs:[rax] ; mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000002cb57 : mov rax, qword ptr fs:[rax] ; mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000002dd9a : mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002ddba : mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002dcfa : mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002dd7a : mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002dc9a : mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002dd3a : mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002dcda : mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002dd1a : mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000002de3a : mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000002dcba : mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 2 ; movzx eax, ax ; ret
0x000000000002dd5a : mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 4 ; movzx eax, ax ; ret
0x000000000002dc7a : mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 8 ; movzx eax, ax ; ret
0x00000000001166be : mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdx*2] ; shr ax, 0xe ; and eax, 1 ; ret
0x000000000012b0c7 : mov rax, qword ptr fs:[rax] ; ret
0x00000000000a0f95 : mov rax, qword ptr fs:[rbp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013ab08 : mov rax, qword ptr fs:[rbx] ; test rax, rax ; je 0x13ab22 ; pop rbx ; ret
0x0000000000096839 : mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006d55d : mov rax, r12 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002d02e : mov rax, r12 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000008ad45 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012e94d : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006d4cc : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000079286 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000076733 : mov rax, r12 ; sub rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011930d : mov rax, r13 ; or ebp, edx ; mov dword ptr [rbx], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000078406 : mov rax, r13 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009a249 : mov rax, r13 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000006e6ba : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000106d33 : mov rax, r13 ; sub rax, r14 ; mov qword ptr [rbp], r14 ; mov qword ptr [rsp + 0x18], rax ; mov rdx, rax ; jmp 0x106da0
0x00000000000306ab : mov rax, r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000089271 : mov rax, r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000adf46 : mov rax, r15 ; pop rbx ; neg rax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004afed : mov rax, r15 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002d702 : mov rax, r15 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000808fc : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003af00 : mov rax, r8 ; mov qword ptr [rdi + 8], rdx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000142b23 : mov rax, r8 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012d7cc : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000001fb85 : mov rax, rbp ; cmp r9, rax ; je 0x1fb32 ; jmp 0x1fb5b
0x0000000000103d7d : mov rax, rbp ; pop rbp ; pop r12 ; jmp rax
0x000000000007f7fd : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007af83 : mov rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000023971 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000776da : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000791f6 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007af4e : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006bbe9 : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000004ab50 : mov rax, rbx ; add rsp, 0x440 ; pop rbx ; ret
0x0000000000089fad : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007c32d : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ac37f : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c96bc : mov rax, rbx ; call rax
0x000000000010732e : mov rax, rbx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x0000000000099215 : mov rax, rbx ; pop rbx ; cmovne rax, rdx ; ret
0x000000000004ae1e : mov rax, rbx ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000105533 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000002aa22 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000033f57 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006f4c8 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002a5f3 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000328f7 : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000003ad1e : mov rax, rbx ; pop rbx ; ret
0x0000000000103509 : mov rax, rbx ; pop rdx ; pop rbx ; ret
0x00000000000e1e6b : mov rax, rcx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002fefa : mov rax, rcx ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002e736 : mov rax, rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000034196 : mov rax, rcx ; ret
0x000000000003a910 : mov rax, rdi ; cqo ; idiv rsi ; ret
0x0000000000100825 : mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x00000000000a0926 : mov rax, rdi ; mov byte ptr [rdi + 6], 0 ; ret
0x0000000000071d72 : mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000108ec0 : mov rax, rdi ; movzx edi, dil ; shr rax, 0xc ; xor al, al ; or eax, edi ; ret
0x0000000000071d8d : mov rax, rdi ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009042c : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007fe63 : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004aacd : mov rax, rdi ; ret
0x000000000011aec9 : mov rax, rdi ; sar rax, 6 ; ret
0x000000000003a8c3 : mov rax, rdi ; sar rdx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x0000000000165b5e : mov rax, rdi ; sub r8, 0x10 ; lea rcx, qword ptr [rdx + 0x10] ; jne 0x1660c1 ; ret
0x0000000000165e5c : mov rax, rdi ; sub r8, 0xa ; lea rcx, qword ptr [rdx + 0xa] ; jne 0x1660c1 ; ret
0x0000000000165e7c : mov rax, rdi ; sub r8, 0xb ; lea rcx, qword ptr [rdx + 0xb] ; jne 0x1660c1 ; ret
0x0000000000165e9c : mov rax, rdi ; sub r8, 0xc ; lea rcx, qword ptr [rdx + 0xc] ; jne 0x1660c1 ; ret
0x0000000000165ebe : mov rax, rdi ; sub r8, 0xd ; lea rcx, qword ptr [rdx + 0xd] ; jne 0x1660c1 ; ret
0x0000000000165ede : mov rax, rdi ; sub r8, 0xe ; lea rcx, qword ptr [rdx + 0xe] ; jne 0x1660c1 ; ret
0x0000000000165efe : mov rax, rdi ; sub r8, 0xf ; lea rcx, qword ptr [rdx + 0xf] ; jne 0x1660c1 ; ret
0x0000000000165d54 : mov rax, rdi ; sub r8, 1 ; lea rcx, qword ptr [rdx + 1] ; jne 0x1660c1 ; ret
0x0000000000165d76 : mov rax, rdi ; sub r8, 2 ; lea rcx, qword ptr [rdx + 2] ; jne 0x1660c1 ; ret
0x0000000000165d9c : mov rax, rdi ; sub r8, 3 ; lea rcx, qword ptr [rdx + 3] ; jne 0x1660c1 ; ret
0x0000000000165db4 : mov rax, rdi ; sub r8, 4 ; lea rcx, qword ptr [rdx + 4] ; jne 0x1660c1 ; ret
0x0000000000165dda : mov rax, rdi ; sub r8, 5 ; lea rcx, qword ptr [rdx + 5] ; jne 0x1660c1 ; ret
0x0000000000165dfc : mov rax, rdi ; sub r8, 6 ; lea rcx, qword ptr [rdx + 6] ; jne 0x1660c1 ; ret
0x0000000000165e1a : mov rax, rdi ; sub r8, 7 ; lea rcx, qword ptr [rdx + 7] ; jne 0x1660c1 ; ret
0x0000000000165af6 : mov rax, rdi ; sub r8, 8 ; lea rcx, qword ptr [rdx + 8] ; jne 0x1660c1 ; ret
0x0000000000165e3c : mov rax, rdi ; sub r8, 9 ; lea rcx, qword ptr [rdx + 9] ; jne 0x1660c1 ; ret
0x00000000000bbc77 : mov rax, rdx ; add rsp, 0x18 ; ret
0x0000000000102d09 : mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x102d28 ; ret
0x000000000010937f : mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x10939e ; ret
0x000000000010967f : mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x10969e ; ret
0x000000000010970f : mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x10972e ; ret
0x00000000001097cf : mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x1097ee ; ret
0x0000000000109919 : mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x109938 ; ret
0x0000000000109a29 : mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x109a48 ; ret
0x0000000000109ab9 : mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x109ad8 ; ret
0x0000000000109c9f : mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x109cbe ; ret
0x0000000000109eff : mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x109f1e ; ret
0x000000000010a54f : mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x10a56e ; ret
0x000000000010a5af : mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0x10a5ce ; ret
0x00000000000cd299 : mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xcd2b8 ; ret
0x00000000000cd2f9 : mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xcd318 ; ret
0x00000000000f6e9f : mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xf6ebe ; ret
0x00000000000f6eff : mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xf6f1e ; ret
0x00000000000f8699 : mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xf86b8 ; ret
0x00000000000f88b9 : mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xf88d8 ; ret
0x00000000000f8919 : mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xf8938 ; ret
0x00000000000f8f49 : mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xf8f68 ; ret
0x00000000000f9099 : mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xf90b8 ; ret
0x00000000000fcd99 : mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xfcdb8 ; ret
0x00000000000fd89f : mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xfd8be ; ret
0x00000000000fe5e9 : mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xfe608 ; ret
0x00000000000fe649 : mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xfe668 ; ret
0x00000000000fe6af : mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xfe6ce ; ret
0x00000000000fe70f : mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xfe72e ; ret
0x00000000000feb7f : mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xfeb9e ; ret
0x00000000000fed39 : mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xfed58 ; ret
0x00000000000fedc9 : mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xfede8 ; ret
0x0000000000080014 : mov rax, rdx ; add rsp, 8 ; ret
0x0000000000034a83 : mov rax, rdx ; neg rax ; or rax, rdx ; sar rax, 0x3f ; not eax ; and eax, ecx ; ret
0x000000000006edfc : mov rax, rdx ; pop rbp ; pop r12 ; ret
0x000000000012be11 : mov rax, rdx ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000032824 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8b2c : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008879f : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000080413 : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000049504 : mov rax, rdx ; pop rbx ; ret
0x0000000000048935 : mov rax, rdx ; ret
0x0000000000076ef8 : mov rax, rdx ; sar rax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000001044c4 : mov rax, rsi ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c9cf4 : mov rax, rsi ; add rsp, 8 ; ret
0x000000000004aa7d : mov rax, rsi ; cmovae rax, rdi ; ret
0x0000000000070d90 : mov rax, rsi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007100a : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003a453 : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000000858c2 : mov rax, rsi ; pop rbx ; ret
0x000000000004aa85 : mov rax, rsi ; ret
0x000000000007af78 : mov rbp, qword ptr [rdi + 0x90] ; pop rbx ; sub rbp, rax ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000079bf2 : mov rbp, rax ; add rsp, 0x18 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000098473 : mov rbp, rdx ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000006efdb : mov rbp, rdx ; mov rbx, rdi ; sub rsp, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x00000000000e4c54 : mov rbp, rsi ; mov qword ptr [rsp + 0x28], rdi ; add rax, rdx ; jmp rax
0x00000000000fe083 : mov rbx, -1 ; add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000fe504 : mov rbx, -1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013ab01 : mov rbx, qword ptr [rip + 0x2862a0] ; mov rax, qword ptr fs:[rbx] ; test rax, rax ; je 0x13ab29 ; pop rbx ; ret
0x000000000006f4dc : mov rbx, r13 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006f4c1 : mov rbx, rax ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000881d0 : mov rbx, rax ; call 0x844d5
0x000000000006bb63 : mov rbx, rax ; je 0x6bba1 ; add rsp, 0x1008 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000013095a : mov rbx, rax ; jne 0x1308fa ; xor eax, eax ; pop rbx ; ret
0x0000000000037601 : mov rbx, rax ; lea r12, qword ptr [rsi + rbx] ; mov rdi, r12 ; call r15
0x0000000000079b9e : mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001196ee : mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000fe0de : mov rbx, rax ; mov rax, rbx ; pop rbx ; ret
0x000000000006efde : mov rbx, rdi ; sub rsp, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000002c355 : mov rbx, rdi ; test rax, rax ; je 0x2c367 ; call rax
0x00000000000730a1 : mov rcx, qword ptr [rax + 0x10] ; mov qword ptr [rax], rdx ; mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000006eea9 : mov rcx, qword ptr [rax + 0xa0] ; mov qword ptr [rcx + 0x130], rdx ; ret
0x000000000002af80 : mov rcx, qword ptr [rax + r15*8] ; test rcx, rcx ; je 0x2af94 ; call rcx
0x00000000001432e3 : mov rcx, qword ptr [rip + 0x27db8e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000143293 : mov rcx, qword ptr [rip + 0x27dbde] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a790 : mov rcx, qword ptr [rip + 0x2b66e1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a760 : mov rcx, qword ptr [rip + 0x2b6711] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a730 : mov rcx, qword ptr [rip + 0x2b6741] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a700 : mov rcx, qword ptr [rip + 0x2b6771] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a6d3 : mov rcx, qword ptr [rip + 0x2b679e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a6a3 : mov rcx, qword ptr [rip + 0x2b67ce] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a670 : mov rcx, qword ptr [rip + 0x2b6801] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a640 : mov rcx, qword ptr [rip + 0x2b6831] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a610 : mov rcx, qword ptr [rip + 0x2b6861] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a5e0 : mov rcx, qword ptr [rip + 0x2b6891] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a5bf : mov rcx, qword ptr [rip + 0x2b68b2] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a55f : mov rcx, qword ptr [rip + 0x2b6912] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109fc3 : mov rcx, qword ptr [rip + 0x2b6eae] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109f90 : mov rcx, qword ptr [rip + 0x2b6ee1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109f60 : mov rcx, qword ptr [rip + 0x2b6f11] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109f33 : mov rcx, qword ptr [rip + 0x2b6f3e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109f0f : mov rcx, qword ptr [rip + 0x2b6f62] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109caf : mov rcx, qword ptr [rip + 0x2b71c2] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109b80 : mov rcx, qword ptr [rip + 0x2b72f1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109b53 : mov rcx, qword ptr [rip + 0x2b731e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109b20 : mov rcx, qword ptr [rip + 0x2b7351] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109af0 : mov rcx, qword ptr [rip + 0x2b7381] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109ac9 : mov rcx, qword ptr [rip + 0x2b73a8] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109a60 : mov rcx, qword ptr [rip + 0x2b7411] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109a39 : mov rcx, qword ptr [rip + 0x2b7438] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001099b3 : mov rcx, qword ptr [rip + 0x2b74be] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109983 : mov rcx, qword ptr [rip + 0x2b74ee] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109950 : mov rcx, qword ptr [rip + 0x2b7521] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109929 : mov rcx, qword ptr [rip + 0x2b7548] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001098c3 : mov rcx, qword ptr [rip + 0x2b75ae] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109890 : mov rcx, qword ptr [rip + 0x2b75e1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109860 : mov rcx, qword ptr [rip + 0x2b7611] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109833 : mov rcx, qword ptr [rip + 0x2b763e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109800 : mov rcx, qword ptr [rip + 0x2b7671] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001097df : mov rcx, qword ptr [rip + 0x2b7692] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109770 : mov rcx, qword ptr [rip + 0x2b7701] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109740 : mov rcx, qword ptr [rip + 0x2b7731] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010971f : mov rcx, qword ptr [rip + 0x2b7752] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001096b0 : mov rcx, qword ptr [rip + 0x2b77c1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010968f : mov rcx, qword ptr [rip + 0x2b77e2] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109623 : mov rcx, qword ptr [rip + 0x2b784e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001095f3 : mov rcx, qword ptr [rip + 0x2b787e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001095c3 : mov rcx, qword ptr [rip + 0x2b78ae] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109590 : mov rcx, qword ptr [rip + 0x2b78e1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109560 : mov rcx, qword ptr [rip + 0x2b7911] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109533 : mov rcx, qword ptr [rip + 0x2b793e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109503 : mov rcx, qword ptr [rip + 0x2b796e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001094d0 : mov rcx, qword ptr [rip + 0x2b79a1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001094a0 : mov rcx, qword ptr [rip + 0x2b79d1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109470 : mov rcx, qword ptr [rip + 0x2b7a01] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109440 : mov rcx, qword ptr [rip + 0x2b7a31] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109410 : mov rcx, qword ptr [rip + 0x2b7a61] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001093e3 : mov rcx, qword ptr [rip + 0x2b7a8e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001093b0 : mov rcx, qword ptr [rip + 0x2b7ac1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010938f : mov rcx, qword ptr [rip + 0x2b7ae2] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109323 : mov rcx, qword ptr [rip + 0x2b7b4e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001092f0 : mov rcx, qword ptr [rip + 0x2b7b81] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001092c0 : mov rcx, qword ptr [rip + 0x2b7bb1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109290 : mov rcx, qword ptr [rip + 0x2b7be1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109260 : mov rcx, qword ptr [rip + 0x2b7c11] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109230 : mov rcx, qword ptr [rip + 0x2b7c41] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109200 : mov rcx, qword ptr [rip + 0x2b7c71] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001091d0 : mov rcx, qword ptr [rip + 0x2b7ca1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001091a0 : mov rcx, qword ptr [rip + 0x2b7cd1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109173 : mov rcx, qword ptr [rip + 0x2b7cfe] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109130 : mov rcx, qword ptr [rip + 0x2b7d41] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109100 : mov rcx, qword ptr [rip + 0x2b7d71] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001090d0 : mov rcx, qword ptr [rip + 0x2b7da1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001090a3 : mov rcx, qword ptr [rip + 0x2b7dce] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109020 : mov rcx, qword ptr [rip + 0x2b7e51] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108e80 : mov rcx, qword ptr [rip + 0x2b7ff1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108e50 : mov rcx, qword ptr [rip + 0x2b8021] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108e20 : mov rcx, qword ptr [rip + 0x2b8051] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108df0 : mov rcx, qword ptr [rip + 0x2b8081] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108db0 : mov rcx, qword ptr [rip + 0x2b80c1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108d87 : mov rcx, qword ptr [rip + 0x2b80ea] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108c90 : mov rcx, qword ptr [rip + 0x2b81e1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108c60 : mov rcx, qword ptr [rip + 0x2b8211] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001076e3 : mov rcx, qword ptr [rip + 0x2b978e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001076b0 : mov rcx, qword ptr [rip + 0x2b97c1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107683 : mov rcx, qword ptr [rip + 0x2b97ee] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107650 : mov rcx, qword ptr [rip + 0x2b9821] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107620 : mov rcx, qword ptr [rip + 0x2b9851] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001075f3 : mov rcx, qword ptr [rip + 0x2b987e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001075c0 : mov rcx, qword ptr [rip + 0x2b98b1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107593 : mov rcx, qword ptr [rip + 0x2b98de] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107563 : mov rcx, qword ptr [rip + 0x2b990e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107530 : mov rcx, qword ptr [rip + 0x2b9941] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107500 : mov rcx, qword ptr [rip + 0x2b9971] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001074d3 : mov rcx, qword ptr [rip + 0x2b999e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102e60 : mov rcx, qword ptr [rip + 0x2be011] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102e30 : mov rcx, qword ptr [rip + 0x2be041] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102e00 : mov rcx, qword ptr [rip + 0x2be071] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102dd0 : mov rcx, qword ptr [rip + 0x2be0a1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102da3 : mov rcx, qword ptr [rip + 0x2be0ce] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102d70 : mov rcx, qword ptr [rip + 0x2be101] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102d40 : mov rcx, qword ptr [rip + 0x2be131] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102d19 : mov rcx, qword ptr [rip + 0x2be158] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102cb0 : mov rcx, qword ptr [rip + 0x2be1c1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102c80 : mov rcx, qword ptr [rip + 0x2be1f1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102a02 : mov rcx, qword ptr [rip + 0x2be46f] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000100700 : mov rcx, qword ptr [rip + 0x2c0771] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001006d0 : mov rcx, qword ptr [rip + 0x2c07a1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ff1d0 : mov rcx, qword ptr [rip + 0x2c1ca1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ff1a0 : mov rcx, qword ptr [rip + 0x2c1cd1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ff170 : mov rcx, qword ptr [rip + 0x2c1d01] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fee00 : mov rcx, qword ptr [rip + 0x2c2071] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fedd9 : mov rcx, qword ptr [rip + 0x2c2098] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fed70 : mov rcx, qword ptr [rip + 0x2c2101] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fed49 : mov rcx, qword ptr [rip + 0x2c2128] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fece0 : mov rcx, qword ptr [rip + 0x2c2191] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fecb0 : mov rcx, qword ptr [rip + 0x2c21c1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000feb8f : mov rcx, qword ptr [rip + 0x2c22e2] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000feb20 : mov rcx, qword ptr [rip + 0x2c2351] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fea80 : mov rcx, qword ptr [rip + 0x2c23f1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fe71f : mov rcx, qword ptr [rip + 0x2c2752] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fe6bf : mov rcx, qword ptr [rip + 0x2c27b2] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fe659 : mov rcx, qword ptr [rip + 0x2c2818] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fe5f9 : mov rcx, qword ptr [rip + 0x2c2878] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fe590 : mov rcx, qword ptr [rip + 0x2c28e1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fe3b0 : mov rcx, qword ptr [rip + 0x2c2ac1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fe020 : mov rcx, qword ptr [rip + 0x2c2e51] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fdff0 : mov rcx, qword ptr [rip + 0x2c2e81] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fdfc0 : mov rcx, qword ptr [rip + 0x2c2eb1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd8af : mov rcx, qword ptr [rip + 0x2c35c2] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd0e3 : mov rcx, qword ptr [rip + 0x2c3d8e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fcda9 : mov rcx, qword ptr [rip + 0x2c40c8] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa200 : mov rcx, qword ptr [rip + 0x2c6c71] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa1d0 : mov rcx, qword ptr [rip + 0x2c6ca1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa1a0 : mov rcx, qword ptr [rip + 0x2c6cd1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa173 : mov rcx, qword ptr [rip + 0x2c6cfe] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa140 : mov rcx, qword ptr [rip + 0x2c6d31] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa110 : mov rcx, qword ptr [rip + 0x2c6d61] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa0e0 : mov rcx, qword ptr [rip + 0x2c6d91] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa0b3 : mov rcx, qword ptr [rip + 0x2c6dbe] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa080 : mov rcx, qword ptr [rip + 0x2c6df1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f99f3 : mov rcx, qword ptr [rip + 0x2c747e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f99c0 : mov rcx, qword ptr [rip + 0x2c74b1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f9990 : mov rcx, qword ptr [rip + 0x2c74e1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f9960 : mov rcx, qword ptr [rip + 0x2c7511] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f9100 : mov rcx, qword ptr [rip + 0x2c7d71] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f90d0 : mov rcx, qword ptr [rip + 0x2c7da1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f90a9 : mov rcx, qword ptr [rip + 0x2c7dc8] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f9040 : mov rcx, qword ptr [rip + 0x2c7e31] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f9010 : mov rcx, qword ptr [rip + 0x2c7e61] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8fe0 : mov rcx, qword ptr [rip + 0x2c7e91] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8fb0 : mov rcx, qword ptr [rip + 0x2c7ec1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8f80 : mov rcx, qword ptr [rip + 0x2c7ef1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8f59 : mov rcx, qword ptr [rip + 0x2c7f18] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8de0 : mov rcx, qword ptr [rip + 0x2c8091] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8950 : mov rcx, qword ptr [rip + 0x2c8521] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8929 : mov rcx, qword ptr [rip + 0x2c8548] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f88c9 : mov rcx, qword ptr [rip + 0x2c85a8] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f86a9 : mov rcx, qword ptr [rip + 0x2c87c8] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8640 : mov rcx, qword ptr [rip + 0x2c8831] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8610 : mov rcx, qword ptr [rip + 0x2c8861] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8550 : mov rcx, qword ptr [rip + 0x2c8921] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8520 : mov rcx, qword ptr [rip + 0x2c8951] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8450 : mov rcx, qword ptr [rip + 0x2c8a21] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8420 : mov rcx, qword ptr [rip + 0x2c8a51] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8180 : mov rcx, qword ptr [rip + 0x2c8cf1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f6f0f : mov rcx, qword ptr [rip + 0x2c9f62] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f6eaf : mov rcx, qword ptr [rip + 0x2c9fc2] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ec140 : mov rcx, qword ptr [rip + 0x2d4d31] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ec110 : mov rcx, qword ptr [rip + 0x2d4d61] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ec0e0 : mov rcx, qword ptr [rip + 0x2d4d91] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ec0b0 : mov rcx, qword ptr [rip + 0x2d4dc1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ec080 : mov rcx, qword ptr [rip + 0x2d4df1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ec050 : mov rcx, qword ptr [rip + 0x2d4e21] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ec020 : mov rcx, qword ptr [rip + 0x2d4e51] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ebff0 : mov rcx, qword ptr [rip + 0x2d4e81] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ce4b0 : mov rcx, qword ptr [rip + 0x2f29c1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ce480 : mov rcx, qword ptr [rip + 0x2f29f1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ce450 : mov rcx, qword ptr [rip + 0x2f2a21] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ce420 : mov rcx, qword ptr [rip + 0x2f2a51] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ce3c0 : mov rcx, qword ptr [rip + 0x2f2ab1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ce390 : mov rcx, qword ptr [rip + 0x2f2ae1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ce1f0 : mov rcx, qword ptr [rip + 0x2f2c81] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd770 : mov rcx, qword ptr [rip + 0x2f3701] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd6ea : mov rcx, qword ptr [rip + 0x2f3787] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd309 : mov rcx, qword ptr [rip + 0x2f3b68] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd2a9 : mov rcx, qword ptr [rip + 0x2f3bc8] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd1f0 : mov rcx, qword ptr [rip + 0x2f3c81] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd113 : mov rcx, qword ptr [rip + 0x2f3d5e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ccf30 : mov rcx, qword ptr [rip + 0x2f3f41] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000bfcb0 : mov rcx, qword ptr [rip + 0x3011c1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000bfc80 : mov rcx, qword ptr [rip + 0x3011f1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000bc910 : mov rcx, qword ptr [rip + 0x304561] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000006c343 : mov rcx, qword ptr [rip + 0x354b2e] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000006c310 : mov rcx, qword ptr [rip + 0x354b61] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000483c0 : mov rcx, qword ptr [rip + 0x378ab1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000048090 : mov rcx, qword ptr [rip + 0x378de1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000047ffc : mov rcx, qword ptr [rip + 0x378e75] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000036180 : mov rcx, qword ptr [rip + 0x38acf1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000035ab0 : mov rcx, qword ptr [rip + 0x38b3c1] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000a78b4 : mov rcx, qword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a8704 : mov rcx, qword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a7874 : mov rcx, qword ptr [rsi + 0xe] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a86c4 : mov rcx, qword ptr [rsi + 0xe] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a7894 : mov rcx, qword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a86e4 : mov rcx, qword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000367b9 : mov rcx, qword ptr [rsi + rax*8] ; and rcx, qword ptr [rdx + rax*8] ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x0000000000036aa9 : mov rcx, qword ptr [rsi + rax*8] ; or rcx, qword ptr [rdx + rax*8] ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x000000000016cc96 : mov rcx, qword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x16ccce ; xor eax, eax ; ret
0x000000000016c28a : mov rcx, qword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x16ccd2 ; xor eax, eax ; ret
0x000000000016dad6 : mov rcx, qword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x16db0e ; xor eax, eax ; ret
0x000000000016d8ba : mov rcx, qword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x16db12 ; xor eax, eax ; ret
0x00000000000a7700 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a8530 : mov rcx, qword ptr [rsi] ; mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a7730 : mov rcx, qword ptr [rsi] ; mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a8570 : mov rcx, qword ptr [rsi] ; mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a7750 : mov rcx, qword ptr [rsi] ; mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a8590 : mov rcx, qword ptr [rsi] ; mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000013a72d : mov rcx, qword ptr [rsp + 0x18] ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x000000000010bd1d : mov rcx, qword ptr [rsp + 8] ; mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000010bd7e : mov rcx, qword ptr [rsp + 8] ; mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x0000000000131b8d : mov rcx, qword ptr [rsp + 8] ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000118359 : mov rcx, r10 ; test r8b, r8b ; mov byte ptr [r9 + 3], r8b ; jne 0x118307 ; mov rax, rdi ; ret
0x00000000000bb41b : mov rcx, r13 ; lea r9, qword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x000000000013a4b8 : mov rcx, r14 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000001199af : mov rcx, r9 ; test r8d, r8d ; mov dword ptr [rax + 0xc], r8d ; jne 0x119963 ; mov rax, rdi ; ret
0x000000000012ccca : mov rcx, rax ; call r12
0x00000000000a0514 : mov rcx, rax ; lea rdx, qword ptr [rcx + 1] ; mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x00000000000a0593 : mov rcx, rax ; lea rdx, qword ptr [rcx + 1] ; mov byte ptr [rcx], 0 ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00000000000a0475 : mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x0000000000091840 : mov rcx, rdx ; movzx eax, sil ; mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000000acc58 : mov rdi, qword ptr [r12] ; lea r9, qword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000003a25d : mov rdi, qword ptr [rax + 0x20] ; ror rdx, 0x11 ; xor rdx, qword ptr fs:[0x30] ; call rdx
0x00000000000bb423 : mov rdi, qword ptr [rax] ; call r14
0x0000000000104232 : mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x00000000001046ab : mov rdi, qword ptr [rbp - 0x40] ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000005722b : mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x00000000000cd569 : mov rdi, qword ptr [rbx] ; mov rax, qword ptr [rdi + 0x10] ; test rax, rax ; je 0xcd586 ; call rax
0x000000000012eba3 : mov rdi, qword ptr [rbx] ; mov rax, qword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x000000000006efe5 : mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000006efa9 : mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x0000000000114eb3 : mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x000000000010431e : mov rdi, qword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000c984c : mov rdi, qword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000039271 : mov rdi, qword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x000000000002667f : mov rdi, qword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000025840 : mov rdi, qword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000007da7a : mov rdi, qword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000007dea0 : mov rdi, qword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x000000000007d3a5 : mov rdi, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000014616a : mov rdi, qword ptr [rsp] ; mov rax, qword ptr [rax + 0x128] ; jmp rax
0x000000000013dece : mov rdi, r12 ; call qword ptr [rax]
0x00000000000877f5 : mov rdi, r12 ; call rax
0x00000000000ca1c1 : mov rdi, r12 ; cmove rcx, rax ; xor eax, eax ; call 0x5648b
0x0000000000071d8a : mov rdi, r12 ; mov rax, rdi ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002f5fd : mov rdi, r13 ; call rax
0x000000000012f0bd : mov rdi, r13 ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000008b195 : mov rdi, r13 ; mov rdx, rbp ; mov rsi, r12 ; call rax
0x000000000002f2a7 : mov rdi, r13 ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x000000000004b85e : mov rdi, r14 ; call rax
0x000000000008417d : mov rdi, r14 ; mov qword ptr [rsp + 0x10], r14 ; call qword ptr [rax]
0x000000000013b2af : mov rdi, r15 ; call qword ptr [rax]
0x00000000000757c3 : mov rdi, r15 ; call rax
0x000000000012eef5 : mov rdi, r15 ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000013a96e : mov rdi, r15 ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000008a448 : mov rdi, r8 ; call rax
0x00000000000cd651 : mov rdi, r9 ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000125164 : mov rdi, rax ; call 0x91395
0x00000000001396d3 : mov rdi, rax ; call qword ptr [r10]
0x0000000000089ae9 : mov rdi, rax ; call rcx
0x000000000011c978 : mov rdi, rax ; jmp 0x11c849
0x00000000001397c5 : mov rdi, rax ; lea r9, qword ptr [rsp + 0x14] ; call qword ptr [r10]
0x00000000001395d6 : mov rdi, rax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x00000000001368bb : mov rdi, rax ; mov edx, dword ptr [rsi + 0x1c8] ; add rsi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000000ee9f1 : mov rdi, rax ; mov rax, qword ptr [rbp - 0xd8] ; call rax
0x00000000000881cd : mov rdi, rax ; mov rbx, rax ; call 0x844d8
0x000000000012de83 : mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000088e4f : mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000000204af : mov rdi, rbp ; call rax
0x000000000012f197 : mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000088232 : mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000130e27 : mov rdi, rbx ; call qword ptr [rax]
0x000000000006d771 : mov rdi, rbx ; call rax
0x000000000012ccc3 : mov rdi, rbx ; mov qword ptr [rsp], rax ; mov rcx, rax ; call r12
0x0000000000145d1a : mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000075f57 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x130] ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000103d79 : mov rdi, rbx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; jmp rax
0x0000000000070bb4 : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000007346e : mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000070ec1 : mov rdi, rbx ; xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000116e47 : mov rdi, rdx ; jmp rax
0x000000000004ac30 : mov rdi, rdx ; mov byte ptr [rsi], al ; jne 0x4ac1a ; mov rax, rsi ; ret
0x000000000014719e : mov rdi, rdx ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000fe831 : mov rdi, rdx ; syscall ; cmp rax, -0x1000 ; ja 0xfe84e ; ret
0x00000000000fe8e1 : mov rdi, rdx ; syscall ; cmp rax, -0x1000 ; ja 0xfe8fe ; ret
0x000000000012df75 : mov rdi, rsp ; call rax
0x000000000002d873 : mov rdx, -1 ; cmove rax, rdx ; ret
0x000000000013145d : mov rdx, qword ptr [r12] ; bswap edx ; mov dword ptr [rax], edx ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000757b7 : mov rdx, qword ptr [r15 + 0x40] ; sub rdx, rsi ; mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x000000000012ca30 : mov rdx, qword ptr [r15] ; mov qword ptr [rbx], rax ; mov r8, rbp ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000012caa0 : mov rdx, qword ptr [r15] ; mov qword ptr [rbx], rax ; xor r8d, r8d ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x0000000000048496 : mov rdx, qword ptr [r8 + rax*8] ; mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; pop rbx ; ret
0x0000000000078d24 : mov rdx, qword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000cd4db : mov rdx, qword ptr [rax + 0x18] ; test rdx, rdx ; je 0xcd4f2 ; call rdx
0x000000000013782b : mov rdx, qword ptr [rax + 0x38] ; mov qword ptr [rsi + 8], rdx ; mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000013810b : mov rdx, qword ptr [rax + 0x48] ; mov qword ptr [rsi + 8], rdx ; mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000002d934 : mov rdx, qword ptr [rax + 0xc0] ; mov rax, qword ptr [rip + 0x3934a6] ; mov qword ptr [rax], rdx ; ret
0x000000000007ee9f : mov rdx, qword ptr [rax + 8] ; jne 0x7eebe ; sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000017209f : mov rdx, qword ptr [rax + rbp*8] ; test rdx, rdx ; je 0x1720b3 ; call rdx
0x00000000000746b0 : mov rdx, qword ptr [rax] ; cmp rdx, rcx ; mov eax, 0xffffffff ; jb 0x746ce ; ret
0x0000000000078d1d : mov rdx, qword ptr [rax] ; mov qword ptr [rax + 8], rdx ; mov rdx, qword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000203e7 : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000010772c : mov rdx, qword ptr [rax] ; test rdx, rdx ; je 0x107751 ; cmp rdi, rdx ; jne 0x107739 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000001164eb : mov rdx, qword ptr [rbp - 0x158] ; call rax
0x000000000005cbc3 : mov rdx, qword ptr [rbp - 0x688] ; movsxd rax, dword ptr [rcx + rbx*4] ; add rax, rcx ; jmp rax
0x000000000014672e : mov rdx, qword ptr [rbp - 0x78] ; mov r9d, dword ptr [rdx] ; mov rdx, r13 ; add r9, qword ptr [rbp - 0x88] ; call rax
0x0000000000115eff : mov rdx, qword ptr [rbx + 0x38] ; mov qword ptr [rbp - 0x70], rdx ; mov edx, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x000000000007a34b : mov rdx, qword ptr [rbx + 0x40] ; sub rdx, rsi ; mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x0000000000077b77 : mov rdx, qword ptr [rbx + 0xf8] ; mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000115abf : mov rdx, qword ptr [rbx - 0x10] ; mov qword ptr [rbp - 0x70], rdx ; mov edx, dword ptr [rbx - 0x30] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x0000000000108c3f : mov rdx, qword ptr [rbx] ; mov qword ptr [rax], rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000115f8e : mov rdx, qword ptr [rcx + 0x38] ; mov qword ptr [rbp - 0x70], rdx ; mov edx, dword ptr [rcx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000116e40 : mov rdx, qword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x000000000002de1f : mov rdx, qword ptr [rdx + 0x48] ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000002ddef : mov rdx, qword ptr [rdx + 0x58] ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x0000000000134b6b : mov rdx, qword ptr [rdx + 8] ; mov qword ptr [rcx + 8], rax ; mov qword ptr [rcx + 0x10], rdx ; mov eax, 1 ; ret
0x00000000001381d3 : mov rdx, qword ptr [rdx + 8] ; mov qword ptr [rdi + 0x20], rax ; mov qword ptr [rdi + 0x28], rdx ; mov eax, 1 ; ret
0x000000000013818b : mov rdx, qword ptr [rdx + 8] ; mov qword ptr [rdi + 0x30], rax ; mov qword ptr [rdi + 0x38], rdx ; mov eax, 1 ; ret
0x0000000000073064 : mov rdx, qword ptr [rdx] ; cmp rax, rcx ; cmovg rax, rcx ; test rdx, rdx ; jne 0x73070 ; ret
0x000000000007d024 : mov rdx, qword ptr [rdx] ; cmp rax, rcx ; cmovg rax, rcx ; test rdx, rdx ; jne 0x7d030 ; ret
0x000000000002de1c : mov rdx, qword ptr [rdx] ; mov rdx, qword ptr [rdx + 0x48] ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000002ddec : mov rdx, qword ptr [rdx] ; mov rdx, qword ptr [rdx + 0x58] ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000010b0e3 : mov rdx, qword ptr [rip + 0x2b92ce] ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000000e8f50 : mov rdx, qword ptr [rip + 0x2d8051] ; mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x000000000008b890 : mov rdx, qword ptr [rip + 0x3356c1] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000008b610 : mov rdx, qword ptr [rip + 0x335941] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000008b558 : mov rdx, qword ptr [rip + 0x3359f9] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000002e104 : mov rdx, qword ptr [rip + 0x392e25] ; mov qword ptr fs:[rdx], rax ; ret
0x00000000000a7773 : mov rdx, qword ptr [rsi + 5] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a85b3 : mov rdx, qword ptr [rsi + 5] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a7793 : mov rdx, qword ptr [rsi + 6] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a85d3 : mov rdx, qword ptr [rsi + 6] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a77b3 : mov rdx, qword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a85f3 : mov rdx, qword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a76f0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a8520 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000001109ff : mov rdx, qword ptr [rsp + 0x10] ; mov edi, 0x2000004 ; call rax
0x00000000001108fb : mov rdx, qword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000000c9847 : mov rdx, qword ptr [rsp + 0x28] ; mov rdi, qword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000146368 : mov rdx, qword ptr [rsp + 0x38] ; add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000087160 : mov rdx, qword ptr [rsp + 0x68] ; call rax
0x0000000000088478 : mov rdx, qword ptr [rsp + 0x68] ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000012515d : mov rdx, r10 ; mov qword ptr [r14 + 8], rax ; mov rdi, rax ; call 0x9139c
0x0000000000115f0d : mov rdx, r12 ; call rax
0x0000000000089f25 : mov rdx, r12 ; mov rdi, r15 ; call rax
0x0000000000146735 : mov rdx, r13 ; add r9, qword ptr [rbp - 0x88] ; call rax
0x0000000000115a0e : mov rdx, r13 ; call rax
0x0000000000131b92 : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000115eaf : mov rdx, r14 ; call rax
0x00000000000c5180 : mov rdx, r14 ; mov rsi, qword ptr [rdi + rax*8] ; mov rdi, rbp ; call 0x913bc
0x00000000000c517f : mov rdx, r14 ; mov rsi, qword ptr [rdi + rax*8] ; mov rdi, rbp ; call 0x913bd
0x000000000003d17a : mov rdx, r14 ; xor r14d, r14d ; add rax, rax ; sub rdx, rax ; jmp 0x3d1c7
0x000000000008a445 : mov rdx, r15 ; mov rdi, r8 ; call rax
0x000000000011f6be : mov rdx, r15 ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000106d42 : mov rdx, rax ; jmp 0x106d91
0x0000000000110faa : mov rdx, rax ; jmp 0x110fb7
0x000000000013764f : mov rdx, rax ; jmp 0x13761c
0x0000000000089b63 : mov rdx, rax ; jmp 0x89af3
0x0000000000089b85 : mov rdx, rax ; jmp 0x89b4f
0x0000000000089b85 : mov rdx, rax ; jmp 0x89b51
0x00000000000997f4 : mov rdx, rax ; jmp 0x9977e
0x0000000000099941 : mov rdx, rax ; jmp 0x998cb
0x0000000000099b51 : mov rdx, rax ; jmp 0x99aeb
0x0000000000099d71 : mov rdx, rax ; jmp 0x99d09
0x000000000009ab01 : mov rdx, rax ; jmp 0x9aa8b
0x000000000009bb99 : mov rdx, rax ; jmp 0x9bb2b
0x000000000009d80c : mov rdx, rax ; jmp 0x9d7ab
0x00000000000bf1f2 : mov rdx, rax ; jmp 0xbf1fd
0x00000000000d14d1 : mov rdx, rax ; jmp 0xd1472
0x00000000000e25eb : mov rdx, rax ; jmp 0xe2601
0x00000000000f139b : mov rdx, rax ; jmp 0xf13d5
0x00000000000ffabb : mov rdx, rax ; jmp 0xffa51
0x0000000000128eaf : mov rdx, rax ; mov byte ptr [rdx], 0 ; ret
0x000000000013e687 : mov rdx, rax ; mov ecx, eax ; xor eax, eax ; cmp rdx, rcx ; je 0x13e6ad ; ret
0x000000000007ee5d : mov rdx, rax ; mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x7ee64 ; ret
0x00000000001142a6 : mov rdx, rax ; mov rdi, r14 ; xor eax, eax ; call 0x1105aa
0x000000000008b4a3 : mov rdx, rax ; xor edi, edi ; xor eax, eax ; call 0x6e17f
0x000000000008b198 : mov rdx, rbp ; mov rsi, r12 ; call rax
0x000000000008ac76 : mov rdx, rbp ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000000403c5 : mov rdx, rbp ; xor ebp, ebp ; add rax, rax ; sub rdx, rax ; jmp 0x40410
0x0000000000115f9c : mov rdx, rbx ; call rax
0x0000000000131a85 : mov rdx, rbx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000003a8c0 : mov rdx, rdi ; mov rax, rdi ; sar rdx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x0000000000091847 : mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000003a235 : mov rsi, qword ptr [rax + 0x20] ; ror rdx, 0x11 ; xor rdx, qword ptr fs:[0x30] ; call rdx
0x00000000001046a8 : mov rsi, qword ptr [rax] ; mov rdi, qword ptr [rbp - 0x40] ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000006f757 : mov rsi, qword ptr [rbx + 0x88] ; sub dword ptr [rsi + 4], 1 ; je 0x6f7a3 ; mov rax, rdx ; pop rbx ; ret
0x0000000000078897 : mov rsi, qword ptr [rbx + 0x88] ; sub dword ptr [rsi + 4], 1 ; je 0x788e3 ; mov rax, rdx ; pop rbx ; ret
0x000000000010431b : mov rsi, qword ptr [rbx] ; mov rdi, qword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000c5183 : mov rsi, qword ptr [rdi + rax*8] ; mov rdi, rbp ; call 0x913b9
0x00000000000c5182 : mov rsi, qword ptr [rdi + rax*8] ; mov rdi, rbp ; call 0x913ba
0x00000000000645d6 : mov rsi, qword ptr [rip + 0x35c993] ; call rax
0x000000000005c93e : mov rsi, qword ptr [rip + 0x36462b] ; call rax
0x000000000005c322 : mov rsi, qword ptr [rip + 0x364c47] ; call rax
0x000000000005969e : mov rsi, qword ptr [rip + 0x3678cb] ; call rax
0x00000000000509fa : mov rsi, qword ptr [rip + 0x37056f] ; call rax
0x000000000004db1e : mov rsi, qword ptr [rip + 0x37344b] ; call rax
0x000000000007da75 : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, qword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000088229 : mov rsi, qword ptr [rsp + 0x18] ; add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000086a88 : mov rsi, qword ptr [rsp + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000000877f0 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, r12 ; call rax
0x000000000002667a : mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000086e00 : mov rsi, qword ptr [rsp + 0x48] ; call rax
0x000000000002583b : mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000110900 : mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000000203de : mov rsi, qword ptr [rsp + 8] ; mov edi, dword ptr [rsp + 0x14] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000008b19b : mov rsi, r12 ; call rax
0x0000000000088e4c : mov rsi, r12 ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000008847d : mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000070ebe : mov rsi, r12 ; mov rdi, rbx ; xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000088b69 : mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x00000000000888bc : mov rsi, r12 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000acd8b : mov rsi, r13 ; lea r9, qword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x0000000000089d24 : mov rsi, r14 ; call rax
0x000000000008ac79 : mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000057221 : mov rsi, r15 ; mov dword ptr [rbp - 0x510], r11d ; mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x000000000004b85b : mov rsi, r15 ; mov rdi, r14 ; call rax
0x000000000012ccc0 : mov rsi, r15 ; mov rdi, rbx ; mov qword ptr [rsp], rax ; mov rcx, rax ; call r12
0x0000000000145c1e : mov rsi, rax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000acc55 : mov rsi, rbp ; mov rdi, qword ptr [r12] ; lea r9, qword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000003926e : mov rsi, rbp ; mov rdi, qword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x000000000008b040 : mov rsi, rbp ; mov rdi, r12 ; call rax
0x00000000000881ca : mov rsi, rbp ; mov rdi, rax ; mov rbx, rax ; call 0x844db
0x000000000008a192 : mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000013b2ac : mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000089ae6 : mov rsi, rbx ; mov rdi, rax ; call rcx
0x0000000000146167 : mov rsi, rdi ; mov rdi, qword ptr [rsp] ; mov rax, qword ptr [rax + 0x128] ; jmp rax
0x00000000000c7c32 : mov rsi, rdi ; xor edi, edi ; call rax
0x0000000000114eb7 : mov rsi, rdx ; call rax
0x00000000000f825d : mov rsi, rdx ; syscall ; cmp rax, -0x1000 ; ja 0xf827e ; ret
0x000000000013d46c : mov rsi, rsp ; call qword ptr [rax]
0x0000000000130e24 : mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000035617 : mov rsi, rsp ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; jmp rax
0x00000000001076e6 : mov ss, word ptr [rdi - 0x2708ffd5] ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001a45e4 : mov word ptr [rax + rax - 0x113ae800], gs ; call qword ptr [rax]
0x00000000000f823c : mov word ptr [rax + rax], gs ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000000f8184 : mov word ptr [rax + rax], gs ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8224 : mov word ptr [rax + rax], gs ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000013ad1b : mov word ptr [rax + rdx*8 - 4], cx ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012f77d : mov word ptr [rax + rsi + 0x75000001], ss ; ret
0x00000000000e0174 : mov word ptr [rax - 0x76ffffff], ss ; ret 0xd139
0x00000000000a68e0 : mov word ptr [rax], cs ; add byte ptr [rax], al ; ret
0x00000000001a25cd : mov word ptr [rax], es ; add al, dl ; ret 0xffed
0x0000000000117efa : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x117f6a ; lea rax, qword ptr [rip + 0x38855] ; ret
0x0000000000117f21 : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x117f6a ; lea rax, qword ptr [rip - 0x86af2] ; ret
0x0000000000117fba : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x11802a ; lea rax, qword ptr [rip + 0x38795] ; ret
0x0000000000117fe1 : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x11802a ; lea rax, qword ptr [rip - 0x86bb2] ; ret
0x000000000011807a : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x1180ea ; lea rax, qword ptr [rip + 0x386b5] ; ret
0x00000000001180a1 : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x1180ea ; lea rax, qword ptr [rip - 0x86c92] ; ret
0x0000000000091338 : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x91381 ; lea rax, qword ptr [rip + 0x107] ; ret
0x0000000000091311 : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x91381 ; lea rax, qword ptr [rip + 0xbf44e] ; ret
0x00000000000919c1 : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x91a31 ; lea rax, qword ptr [rip + 0xbed7e] ; ret
0x00000000000919e8 : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x91a31 ; lea rax, qword ptr [rip - 0x5c9] ; ret
0x0000000000096681 : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x966f1 ; lea rax, qword ptr [rip + 0xba0de] ; ret
0x00000000000966a8 : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; je 0x966f1 ; lea rax, qword ptr [rip - 0x5269] ; ret
0x0000000000117ed3 : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x117f6a ; lea rax, qword ptr [rip + 0x5665c] ; ret
0x0000000000117f93 : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x11802a ; lea rax, qword ptr [rip + 0x5659c] ; ret
0x0000000000118053 : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x1180ea ; lea rax, qword ptr [rip + 0x564bc] ; ret
0x000000000011814f : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x118171 ; lea rax, qword ptr [rip + 0x56960] ; ret
0x00000000000912ea : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x91381 ; lea rax, qword ptr [rip + 0xdd255] ; ret
0x00000000000917d2 : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x917f4 ; lea rax, qword ptr [rip + 0xdd2ed] ; ret
0x000000000009199a : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x91a31 ; lea rax, qword ptr [rip + 0xdcb85] ; ret
0x000000000009665a : mov word ptr [rax], es ; add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x966f1 ; lea rax, qword ptr [rip + 0xd7ee5] ; ret
0x000000000011b405 : mov word ptr [rax], es ; add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000006d8e0 : mov word ptr [rax], es ; add byte ptr [rax], al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000001ad670 : mov word ptr [rax], es ; add byte ptr [rax], al ; sbb al, 0x3d ; add dword ptr [rax], eax ; sub byte ptr [rcx - 0xb], bl ; call rdx
0x0000000000194dd5 : mov word ptr [rax], es ; add byte ptr [rsp + rdi*2 - 0x73330016], al ; add byte ptr [rax], al ; xchg eax, esp ; jl 0x194ddb ; jmp rsp
0x00000000001aa9e4 : mov word ptr [rax], ss ; add dword ptr [rax], eax ; sub byte ptr [rsi], dl ; hlt ; jmp qword ptr [rcx]
0x000000000012f1cb : mov word ptr [rbx + 2], ax ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001b35e4 : mov word ptr [rcx + rax - 0x8cf4800], ds ; call rcx
0x00000000001ae5e4 : mov word ptr [rcx + rax], cs ; test al, 0xab ; cmc ; jmp qword ptr [rcx]
0x0000000000196ca4 : mov word ptr [rcx + rax], fs ; xor al, 0x68 ; cmc ; call rsp
0x0000000000196b04 : mov word ptr [rcx + rax], ss ; push rdx ; hlt ; call rsp
0x000000000013dec3 : mov word ptr [rcx - 0x75], cs ; and al, 8 ; lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x00000000000a77fc : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a864c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a7904 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a8754 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000001ae8e4 : mov word ptr [rdi + 1], cs ; add byte ptr [rax - 0x51], ch ; cmc ; jmp qword ptr [rcx]
0x00000000000a09b2 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a09c2 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a84f8 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a0922 : mov word ptr [rdi + 4], dx ; mov rax, rdi ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a08b2 : mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00000000000a0874 : mov word ptr [rdi + 4], r11w ; mov byte ptr [rdi + 6], r8b ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a0864 : mov word ptr [rdi + 4], r11w ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a855a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a771a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a7693 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a84b6 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a7683 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a84a3 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a0820 : mov word ptr [rdi], r9w ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a0830 : mov word ptr [rdi], r9w ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a0970 : mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a0980 : mov word ptr [rdi], si ; mov byte ptr [rdi + 2], 0 ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a08f0 : mov word ptr [rdi], si ; mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x00000000000a08e0 : mov word ptr [rdi], si ; mov rax, rdi ; ret
0x000000000010af90 : mov word ptr [rdx + 0x2b], fs ; add byte ptr [rdx + rax + 0x5d], dh ; ret
0x00000000001682e8 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x00000000000a2e3d : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00000000000a2ec1 : mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x0000000000168293 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x00000000001682a3 : mov word ptr [rdx], ax ; mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x00000000000a2de8 : mov word ptr [rdx], ax ; mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000000a2dd8 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000001372f0 : mov word ptr [rip + 0x63480005], gs ; add al, 0x82 ; add rax, rdx ; jmp rax
0x00000000000b73da : mov word ptr [rsp + rax*4], fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor al, 0x83 ; sub r10, rax ; jmp 0xb740e
0x000000000006eeac : movabs al, byte ptr [0x130918948000000] ; add byte ptr [rax], al ; ret
0x00000000001a6feb : movabs al, byte ptr [0x1400000001] ; pushfq ; salc ; add byte ptr [rax], al ; mov byte ptr [rbp - 0xf], al ; call qword ptr [rsi]
0x000000000005a702 : movabs al, byte ptr [0x148900463480012] ; enter 0x1ba, 0 ; add byte ptr [rax], al ; jmp rax
0x00000000000356a4 : movabs al, byte ptr [0x148c48148000000] ; add byte ptr [rax], al ; ret
0x00000000001938a8 : movabs al, byte ptr [0x30fffc4fa0fffc4d] ; cld ; push rax ; cld ; call rax
0x0000000000193330 : movabs al, byte ptr [0x40fffba6f0fffba5] ; test al, 0xfb ; call qword ptr [rax - 0x1f000457]
0x0000000000193790 : movabs al, byte ptr [0x40fffc0ef0fffc0d] ; adc ah, bh ; call qword ptr [rax - 0x1f0003ef]
0x000000000019395c : movabs al, byte ptr [0x40fffc3af0fffc39] ; cmp al, 0xfc ; call qword ptr [rax - 0x1f0003c3]
0x0000000000193870 : movabs al, byte ptr [0x40fffc4460fffc42] ; cld ; jmp qword ptr [rax]
0x0000000000078d7d : movabs al, byte ptr [0x4820428b48000000] ; sub eax, dword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x0000000000078c6d : movabs al, byte ptr [0x4838428b48000000] ; sub eax, dword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x0000000000193304 : movabs al, byte ptr [0x60fffb8e80fffb8c] ; nop ; sti ; inc dword ptr [rax - 0x6e] ; sti ; jmp qword ptr [rax]
0x00000000001144fe : movabs al, byte ptr [0x78ede358d48fff1] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001942e4 : movabs al, byte ptr [0x80fffc9310fffc93] ; xchg eax, edx ; cld ; call qword ptr [rax]
0x00000000000e8dc8 : movabs al, byte ptr [0x833a8bfff4e442e8] ; jmp qword ptr [rax]
0x0000000000056b9f : movabs al, byte ptr [0x852c8d4c000000] ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000193264 : movabs al, byte ptr [0x90fffb5470fffb53] ; sti ; call rax
0x0000000000193db4 : movabs al, byte ptr [0x90fffc7320fffc73] ; jb 0x193dc6 ; call qword ptr [rax]
0x00000000001940f8 : movabs al, byte ptr [0x90fffc9910fffc99] ; cwde ; cld ; call qword ptr [rax]
0x0000000000193ed1 : movabs al, byte ptr [0x9f50fffc9fc0fffc] ; cld ; jmp rax
0x000000000016ba0f : movabs al, byte ptr [0xa096ef0f66000000] ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000194314 : movabs al, byte ptr [0xa0fffc9520fffc95] ; xchg eax, esp ; cld ; jmp qword ptr [rax]
0x000000000019430c : movabs al, byte ptr [0xa0fffc9620fffc96] ; xchg eax, ebp ; cld ; jmp qword ptr [rax]
0x0000000000194304 : movabs al, byte ptr [0xa0fffc9720fffc97] ; xchg eax, esi ; cld ; jmp qword ptr [rax]
0x00000000001942fc : movabs al, byte ptr [0xa0fffc9820fffc98] ; xchg eax, edi ; cld ; jmp qword ptr [rax]
0x000000000014343c : movabs al, byte ptr [0xba00282c] ; cmovne rax, rdx ; add rsp, 8 ; ret
0x0000000000186080 : movabs al, byte ptr [0xc0fff20db0fff20d] ; or eax, 0xdd0fff2 ; jmp rax
0x00000000001860f4 : movabs al, byte ptr [0xc0fff20fb0fff20f] ; pslld mm7, mm7 ; ror byte ptr [rdi], 1 ; jmp rax
0x0000000000186240 : movabs al, byte ptr [0xc0fff222b0fff222] ; and dh, dl ; jmp rax
0x00000000001862c8 : movabs al, byte ptr [0xc0fff225b0fff225] ; and eax, 0x25d0fff2 ; jmp rax
0x0000000000183cf4 : movabs al, byte ptr [0xc8c62d12fc87aa3c] ; lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000185fe8 : movabs al, byte ptr [0xe0fff209c0fff209] ; or edx, esi ; inc dword ptr [rax] ; or dh, dl ; jmp qword ptr [rax]
0x0000000000186008 : movabs al, byte ptr [0xe0fff20ac0fff20a] ; or dh, dl ; inc dword ptr [rax] ; or esi, edx ; jmp qword ptr [rax]
0x0000000000186028 : movabs al, byte ptr [0xe0fff20bc0fff20b] ; or esi, edx ; call qword ptr [rax]
0x00000000001861b0 : movabs al, byte ptr [0xe0fff21dc0fff21d] ; sbb eax, 0x1e00fff2 ; jmp qword ptr [rax]
0x0000000000186268 : movabs al, byte ptr [0xe0fff223c0fff223] ; and esi, edx ; push rax ; and esi, edx ; call qword ptr [rax]
0x000000000018735c : movabs al, byte ptr [0xe0fff47990fff479] ; jns 0x18736a ; push rax ; jns 0x18736e ; jmp rax
0x00000000000e1fd1 : movabs al, byte ptr [0xe800000000000000] ; adc dh, byte ptr [rax - 0x76b70001] ; ret 0x848b
0x00000000001938ac : movabs al, byte ptr [0xf0fffc4230fffc4f] ; cld ; call rax
0x0000000000148aac : movabs al, byte ptr [0xf10eb834900000c] ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000186040 : movabs al, byte ptr [0xfff20cd0fff20c] ; or eax, 0xd30fff2 ; jmp rax
0x0000000000106bdc : movabs byte ptr [0x1600c764002b], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000036ba4 : movabs byte ptr [0x1600c7640038], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000c815a : movabs byte ptr [0x6411c8c148002fa7], al ; xor rax, qword ptr [0x30] ; call rax
0x000000000011429c : movabs byte ptr [0x7910c358d48fff1], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000100ed4 : movabs byte ptr [0x841f0f000000], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000003ce20 : movabs byte ptr [0x8d0148b60f000001], al ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000040065 : movabs byte ptr [0x8d0170b60f000001], al ; push rsi ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000003cf20 : movabs byte ptr [0x8d0948b60f000000], al ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000040165 : movabs byte ptr [0x8d0970b60f000000], al ; push rsi ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000087157 : movabs byte ptr [0x90fffffe8ce90000], al ; mov rdx, qword ptr [rsp + 0x68] ; call rax
0x00000000001396ca : movabs byte ptr [0x9beffff95], al ; mov rdi, rax ; call qword ptr [r10]
0x0000000000193ebd : movabs byte ptr [0xa180fffca1f0fffc], al ; cld ; call qword ptr [rax]
0x00000000001940b9 : movabs byte ptr [0xa190fffca200fffc], al ; cld ; jmp qword ptr [rax]
0x00000000001940b5 : movabs byte ptr [0xa200fffca270fffc], al ; cld ; call qword ptr [rax + 0x20fffca1]
0x0000000000148daa : movabs byte ptr [0xf10eb8349000009], al ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011424a : movabs dword ptr [0x79196358d48fff1], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000114197 : movabs dword ptr [0x79245358d48fff1], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000f464d : movabs dword ptr [0x8024948b48000007], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000002f9e : movabs dword ptr [0x886fae9bda2e0a96], eax ; or esp, dword ptr [rdx] ; js 0x2f6a ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000146b24 : movabs dword ptr [0x894464d8f7410027], eax ; add byte ptr [rax - 1], bh ; ret
0x0000000000193511 : movabs dword ptr [0xa631fffda631fffd], eax ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x00000000000fd9d3 : movabs eax, dword ptr [0x1600c764002c34] ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000f85d3 : movabs eax, dword ptr [0x1600c764002c88] ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000001094d3 : movabs eax, dword ptr [0x18964d8f7002b79] ; or rax, 0xffffffffffffffff ; ret
0x00000000001091d3 : movabs eax, dword ptr [0x18964d8f7002b7c] ; or rax, 0xffffffffffffffff ; ret
0x00000000001090d3 : movabs eax, dword ptr [0x18964d8f7002b7d] ; or rax, 0xffffffffffffffff ; ret
0x0000000000102dd3 : movabs eax, dword ptr [0x18964d8f7002be0] ; or rax, 0xffffffffffffffff ; ret
0x00000000001006d3 : movabs eax, dword ptr [0x18964d8f7002c07] ; or rax, 0xffffffffffffffff ; ret
0x00000000000ff1d3 : movabs eax, dword ptr [0x18964d8f7002c1c] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa1d3 : movabs eax, dword ptr [0x18964d8f7002c6c] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f90d3 : movabs eax, dword ptr [0x18964d8f7002c7d] ; or rax, 0xffffffffffffffff ; ret
0x00000000000795d3 : movabs eax, dword ptr [0x1c00c764003478] ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000109bd3 : movabs eax, dword ptr [0x28964d8f7002b72] ; mov rax, -1 ; ret
0x00000000000b1f44 : movabs eax, dword ptr [0x294cea8948000008] ; fimul dword ptr [rax + 0x39] ; ret 0xf48
0x00000000000e879a : movabs eax, dword ptr [0x458b4828245c8b48] ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000007a71b : movabs eax, dword ptr [0x58d48c085003437] ; fdivr dword ptr [rsp + rsi] ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000116d03 : movabs eax, dword ptr [0x6411c8c148002af9] ; xor rax, qword ptr [0x30] ; jmp rax
0x00000000001167f3 : movabs eax, dword ptr [0x6411c8c148002afd] ; xor rax, qword ptr [0x30] ; jmp rax
0x0000000000114401 : movabs eax, dword ptr [0x78fd1358d48fff1] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000077dab : movabs eax, dword ptr [0x80c481480009ef] ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000001940c5 : movabs eax, dword ptr [0xa040fffca0b0fffc] ; cld ; call rax
0x00000000001940c1 : movabs eax, dword ptr [0xa0b0fffca120fffc] ; cld ; inc dword ptr [rax - 0x60] ; cld ; call rax
0x0000000000195105 : movabs eax, dword ptr [0xa1c4ffec23040000] ; add byte ptr [rax], al ; xchg eax, esp ; and ebp, esp ; jmp rsp
0x00000000000858d3 : movabs eax, dword ptr [0xc764f6310033b5] ; or al, 0 ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x00000000000bc8c4 : movabs eax, dword ptr [0xffff52158d480008] ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x00000000000bc7e4 : movabs eax, dword ptr [0xffff72158d480008] ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x0000000000036358 : movabs rax, -0x180000001 ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000103c88 : movabs rax, 0x5c415d5b00000001 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000db965 : movabs rax, 0x5c415d5b0000000c ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003b4fb : movabs rax, 0x5deece66d ; mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x0000000000034ab2 : movabs rax, 0x7ff0000000000000 ; sub rax, rdx ; shr rax, 0x3f ; ret
0x0000000000108ef8 : movabs rsi, -0x100000000000 ; and rdi, rsi ; or rax, rdi ; ret
0x0000000000185e7c : movabs rsi, -0x50f7000340970004 ; cld ; lcall ptr [rax] ; ret 0xfffc
0x0000000000034adc : movd eax, mm0 ; and rax, rdx ; sub rax, rdx ; shr rax, 0x3f ; ret
0x0000000000034b59 : movd mm0, rax ; ret
0x0000000000034bce : movd mm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000034b97 : movd mm1, rax ; movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x0000000000034adb : movd rax, mm0 ; and rax, rdx ; sub rax, rdx ; shr rax, 0x3f ; ret
0x00000000000a8610 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a77d0 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a77e0 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a79bd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a880d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a8a73 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a795d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a87ad : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a797d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a87cd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a799d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a87ed : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a8614 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a77d4 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a8627 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a77e4 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a7837 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a8687 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a7857 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a86aa : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a7817 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a8667 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a78b8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a8708 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a78d8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a872b : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a791b : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a876b : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a793b : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a878b : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a78fc : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a874c : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a7878 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a86c8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a7898 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a86e8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a77f8 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a8648 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a79b9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a8809 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a7959 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a87a9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a7979 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a87c9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a7999 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a87e9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x0000000000057121 : movhps xmm0, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x491e
0x00000000000a2f22 : movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f42 : movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f62 : movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000a2dac : movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a5b93 : movlpd qword ptr [rdx + 8], xmm1 ; xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00000000000a2e99 : movlpd qword ptr [rdx], xmm0 ; mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x00000000000a2eb9 : movlpd qword ptr [rdx], xmm0 ; mov ax, word ptr [rcx + 8] ; mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x00000000000a2ed9 : movlpd qword ptr [rdx], xmm0 ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000a2ef9 : movlpd qword ptr [rdx], xmm0 ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000000a2d56 : movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000a2da8 : movlpd qword ptr [rdx], xmm0 ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f19 : movlpd qword ptr [rdx], xmm0 ; movlpd xmm1, qword ptr [rcx + 5] ; movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f39 : movlpd qword ptr [rdx], xmm0 ; movlpd xmm1, qword ptr [rcx + 6] ; movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f59 : movlpd qword ptr [rdx], xmm0 ; movlpd xmm1, qword ptr [rcx + 7] ; movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000a5aa9 : movlpd qword ptr [rdx], xmm0 ; movlpd xmm1, qword ptr [rcx + 8] ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a5b2a : movlpd qword ptr [rdx], xmm0 ; xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000a2e95 : movlpd xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x00000000000a2ed5 : movlpd xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000a2ef5 : movlpd xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000000a2d52 : movlpd xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000a5b26 : movlpd xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000a2f1d : movlpd xmm1, qword ptr [rcx + 5] ; movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f3d : movlpd xmm1, qword ptr [rcx + 6] ; movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f5d : movlpd xmm1, qword ptr [rcx + 7] ; movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000a5aad : movlpd xmm1, qword ptr [rcx + 8] ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a2da3 : movlpd xmm1, qword ptr [rcx + 8] ; movlpd qword ptr [rdx], xmm0 ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f23 : movlps qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f43 : movlps qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f63 : movlps qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000a2dad : movlps qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a5b94 : movlps qword ptr [rdx + 8], xmm1 ; xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00000000000a2e9a : movlps qword ptr [rdx], xmm0 ; mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x00000000000a2eba : movlps qword ptr [rdx], xmm0 ; mov ax, word ptr [rcx + 8] ; mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x00000000000a2eda : movlps qword ptr [rdx], xmm0 ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000a2efa : movlps qword ptr [rdx], xmm0 ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000000a2d57 : movlps qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000a2da9 : movlps qword ptr [rdx], xmm0 ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f1a : movlps qword ptr [rdx], xmm0 ; movlpd xmm1, qword ptr [rcx + 5] ; movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f3a : movlps qword ptr [rdx], xmm0 ; movlpd xmm1, qword ptr [rcx + 6] ; movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f5a : movlps qword ptr [rdx], xmm0 ; movlpd xmm1, qword ptr [rcx + 7] ; movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000a5aaa : movlps qword ptr [rdx], xmm0 ; movlpd xmm1, qword ptr [rcx + 8] ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a5b2b : movlps qword ptr [rdx], xmm0 ; xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000a2e96 : movlps xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x00000000000a2ed6 : movlps xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000a2ef6 : movlps xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000000a2d53 : movlps xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000a5b27 : movlps xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000a2f1e : movlps xmm1, qword ptr [rcx + 5] ; movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f3e : movlps xmm1, qword ptr [rcx + 6] ; movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f5e : movlps xmm1, qword ptr [rcx + 7] ; movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000a5aae : movlps xmm1, qword ptr [rcx + 8] ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a5b8f : movlps xmm1, qword ptr [rcx + 8] ; movlpd qword ptr [rdx + 8], xmm1 ; xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00000000000a2da4 : movlps xmm1, qword ptr [rcx + 8] ; movlpd qword ptr [rdx], xmm0 ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a61ad : movnti dword ptr [rax + 0x66f0ff3], edx ; mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000077164 : movnti dword ptr [rsi + 0x2e], esp ; nop dword ptr [rax + rax] ; ret
0x000000000016eec2 : movnti dword ptr [rsi - 0x70], esp ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi] ; ret
0x00000000000a8621 : movq mm0, qword ptr [rsi] ; mov cl, byte ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a7831 : movq mm0, qword ptr [rsi] ; mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a8681 : movq mm0, qword ptr [rsi] ; mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a7811 : movq mm0, qword ptr [rsi] ; mov ecx, dword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a8661 : movq mm0, qword ptr [rsi] ; mov ecx, dword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a8611 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a77d1 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a77e1 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a79b5 : movq mm2, qword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a8805 : movq mm2, qword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a7955 : movq mm2, qword ptr [rsi + 0xd] ; movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a87a5 : movq mm2, qword ptr [rsi + 0xd] ; movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a7975 : movq mm2, qword ptr [rsi + 0xe] ; movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a87c5 : movq mm2, qword ptr [rsi + 0xe] ; movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a7995 : movq mm2, qword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a87e5 : movq mm2, qword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000008da57 : movq mm4, qword ptr [rax] ; pcmpeqb xmm4, xmm0 ; pmovmskb edx, xmm4 ; test edx, edx ; je 0x8da7b ; bsf eax, edx ; ret
0x00000000000a79be : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a880e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a8a74 : movq qword ptr [rdi + 0x30], mm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a795e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a87ae : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a797e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a87ce : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a799e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a87ee : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a8615 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a77d5 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a8628 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a77e5 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a7838 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a8688 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a7858 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a86ab : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a7818 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a8668 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a78b9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a8709 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a78d9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a872c : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a791c : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a876c : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a793c : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a878c : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a78fd : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a874d : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a7879 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a86c9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a7899 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a86e9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a77f9 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a8649 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a79ba : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a880a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a795a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a87aa : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a797a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a87ca : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a799a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a87ea : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x0000000000034ada : movq rax, xmm0 ; and rax, rdx ; sub rax, rdx ; shr rax, 0x3f ; ret
0x0000000000034b58 : movq xmm0, rax ; ret
0x0000000000034bcd : movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000034b96 : movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x00000000001aa9fc : movsb byte ptr [rdi], byte ptr [rsi] ; adc byte ptr [rcx], al ; add byte ptr [rax + 0x16], al ; hlt ; jmp qword ptr [rcx]
0x00000000000b081d : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000d6ab4 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx], al ; setg dl ; jmp 0xd6a54
0x00000000000e7886 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x000000000007f9b8 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0xf08
0x0000000000132b5f : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; test eax, eax ; setne al ; add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000087110 : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000000001595a7 : movsb byte ptr [rdi], byte ptr [rsi] ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000041a07 : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rbx - 0x76b2dbf4], cl ; ret
0x00000000000e7884 : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0xa4 ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x0000000000036c0e : movsb byte ptr [rdi], byte ptr [rsi] ; cmp byte ptr [rax], al ; mov eax, edx ; ret
0x0000000000036bc3 : movsb byte ptr [rdi], byte ptr [rsi] ; cmp byte ptr [rax], al ; ret
0x000000000013bf10 : movsb byte ptr [rdi], byte ptr [rsi] ; cmp ch, dh ; dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001b06fc : movsb byte ptr [rdi], byte ptr [rsi] ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rdx - 0xa], ah ; jmp qword ptr [rsi]
0x0000000000198948 : movsb byte ptr [rdi], byte ptr [rsi] ; mov edx, 0xe9cfff9 ; add al, byte ptr [rax] ; add al, 0xbb ; stc ; call rsp
0x0000000000195104 : movsb byte ptr [rdi], byte ptr [rsi] ; movabs eax, dword ptr [0xa1c4ffec23040000] ; add byte ptr [rax], al ; xchg eax, esp ; and ebp, esp ; jmp rsp
0x000000000019f8fc : movsb byte ptr [rdi], byte ptr [rsi] ; pop rdi ; add byte ptr [rax], al ; nop ; sbb ebp, ebp ; call rbx
0x0000000000196a8c : movsb byte ptr [rdi], byte ptr [rsi] ; push rax ; add dword ptr [rax], eax ; hlt ; and al, 0xf4 ; call rsp
0x00000000001993c4 : movsb byte ptr [rdi], byte ptr [rsi] ; push rsp ; add al, byte ptr [rax] ; adc al, 0xfb ; call rsp
0x00000000001b35fc : movsb byte ptr [rdi], byte ptr [rsi] ; pushfq ; add dword ptr [rax], eax ; xor byte ptr [rcx], 0xf7 ; jmp qword ptr [rsi]
0x00000000001a64fc : movsb byte ptr [rdi], byte ptr [rsi] ; retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x000000000019825c : movsb byte ptr [rdi], byte ptr [rsi] ; salc ; add dword ptr [rax], eax ; in al, 0x6a ; clc ; jmp rsp
0x0000000000196164 : movsb byte ptr [rdi], byte ptr [rsi] ; sgdt ptr [rax] ; push rsp ; ret
0x00000000000ff71c : movsb byte ptr [rdi], byte ptr [rsi] ; sub al, 0 ; lea rax, qword ptr [rip + 0x2c4871] ; ret
0x0000000000106a7c : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, dword ptr [rax] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x106b8f ; call rax
0x0000000000084b8b : movsd dword ptr [rdi], dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77cfdb9], cl ; add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x0000000000076fdf : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000011b480 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4104
0x00000000000906b7 : movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000001b3f2d : movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; shr cl, 0xfb ; call rsi
0x0000000000159427 : movsd dword ptr [rdi], dword ptr [rsi] ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000005fa81 : movsd dword ptr [rdi], dword ptr [rsi] ; cmp al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000368b4 : movsd dword ptr [rdi], dword ptr [rsi] ; cmp byte ptr [rax], al ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x0000000000056898 : movsd dword ptr [rdi], dword ptr [rsi] ; nop dword ptr [rax] ; mov qword ptr [rdi], rcx ; mov eax, 0xffffffff ; ret
0x0000000000193331 : movsd dword ptr [rdi], dword ptr [rsi] ; sti ; push rax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sti ; inc dword ptr [rax - 0x58] ; sti ; call qword ptr [rax - 0x1f000457]
0x000000000012b793 : movsd dword ptr [rdi], dword ptr [rsi] ; sub dword ptr [rax], eax ; ror rdi, 0x11 ; xor rdi, qword ptr fs:[0x30] ; call rax
0x000000000012a71c : movsd dword ptr [rdi], dword ptr [rsi] ; xor eax, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000034b51 : movsd qword ptr [rdi], xmm0 ; and rax, rdx ; movq xmm0, rax ; ret
0x000000000012b792 : movsq qword ptr [rdi], qword ptr [rsi] ; sub dword ptr [rax], eax ; ror rdi, 0x11 ; xor rdi, qword ptr fs:[0x30] ; call rax
0x00000000000a066d : movsx eax, byte ptr [rdi + rax] ; test r8b, r8b ; jne 0xa065a ; ret
0x00000000000a06c4 : movsx ecx, byte ptr [rdi + rax] ; cmp ecx, edx ; je 0xa06cd ; cmp ecx, esi ; je 0xa06cd ; ret
0x00000000000a0614 : movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0xa0611 ; ret
0x00000000000235d7 : movsx ecx, byte ptr [rdx + 0x1a] ; movsx edx, byte ptr [rdx + 0x1b] ; mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000000a05d0 : movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0xa05d1 ; ret
0x00000000000235db : movsx edx, byte ptr [rdx + 0x1b] ; mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000045cfd : movsx esi, byte ptr [rsi + rcx] ; mov ecx, esi ; shl ecx, 0x1e ; or edx, ecx ; cmp esi, 0x40 ; cmovne rax, rdx ; ret
0x00000000000a066c : movsx r8d, byte ptr [rdi + rax] ; test r8b, r8b ; jne 0xa065b ; ret
0x00000000000235d6 : movsx r9, byte ptr [rdx + 0x1a] ; movsx edx, byte ptr [rdx + 0x1b] ; mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000000423a3 : movsx rax, byte ptr [rbx] ; jmp 0x4219a
0x00000000000b73d6 : movsxd r10, ebp ; mov ecx, dword ptr [rsp + 0x84] ; lea rsi, qword ptr [rbx + rax*4] ; sub r10, rax ; jmp 0xb7412
0x00000000000a08a0 : movsxd r9, dword ptr [rax + r9*4] ; add r9, rax ; jmp r9
0x00000000000a0940 : movsxd rax, dword ptr [r10 + r9*4] ; add rax, r10 ; jmp rax
0x00000000000a07eb : movsxd rax, dword ptr [r10 + rax*4] ; add rax, r10 ; jmp rax
0x000000000002eb3f : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x00000000000c3967 : movsxd rax, dword ptr [r8 + rdi*4] ; add rax, r8 ; jmp rax
0x000000000004e8c3 : movsxd rax, dword ptr [rax + rcx*4] ; lea rcx, qword ptr [rip + 0x2b2] ; add rax, rcx ; jmp rax
0x000000000004bb13 : movsxd rax, dword ptr [rax + rcx*4] ; lea rcx, qword ptr [rip + 0xb87] ; add rax, rcx ; jmp rax
0x000000000005a8d7 : movsxd rax, dword ptr [rax + rcx*4] ; lea rcx, qword ptr [rip - 0x2e2] ; add rax, rcx ; jmp rax
0x000000000004eed5 : movsxd rax, dword ptr [rax + rcx*4] ; lea rcx, qword ptr [rip - 0x360] ; add rax, rcx ; jmp rax
0x000000000005aa91 : movsxd rax, dword ptr [rax + rcx*4] ; lea rcx, qword ptr [rip - 0x49c] ; add rax, rcx ; jmp rax
0x000000000004f049 : movsxd rax, dword ptr [rax + rcx*4] ; lea rcx, qword ptr [rip - 0x4d4] ; add rax, rcx ; jmp rax
0x000000000005ab89 : movsxd rax, dword ptr [rax + rcx*4] ; lea rcx, qword ptr [rip - 0x594] ; add rax, rcx ; jmp rax
0x000000000005a705 : movsxd rax, dword ptr [rax + rdx*4] ; add rax, rcx ; mov edx, 1 ; jmp rax
0x000000000004dd74 : movsxd rax, dword ptr [rax + rdx*4] ; add rax, rcx ; xor r8d, r8d ; mov edx, 1 ; jmp rax
0x0000000000057795 : movsxd rax, dword ptr [rax + rdx*4] ; lea rdx, qword ptr [rip - 0x2de] ; add rax, rdx ; jmp rax
0x00000000000c0737 : movsxd rax, dword ptr [rax + rsi*4] ; lea rsi, qword ptr [rip + 0xc6152] ; add rax, rsi ; jmp rax
0x000000000003b4a5 : movsxd rax, dword ptr [rbx + 2] ; mov qword ptr [rbp], rax ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000005c808 : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000005cbca : movsxd rax, dword ptr [rcx + rbx*4] ; add rax, rcx ; jmp rax
0x00000000000646b5 : movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x00000000001378d6 : movsxd rax, dword ptr [rcx + rsi*4] ; add rax, rcx ; jmp rax
0x000000000013efe5 : movsxd rax, dword ptr [rcx + rsi*4] ; shr rdx, 3 ; add rax, rcx ; jmp rax
0x000000000013044c : movsxd rax, dword ptr [rdi + 0x18] ; cmp eax, 3 ; jbe 0x13046e ; mov eax, 2 ; ret
0x00000000000c5a6a : movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x00000000000da81d : movsxd rax, dword ptr [rdx + r15*4] ; add rax, rdx ; jmp rax
0x0000000000020c3c : movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000e4c50 : movsxd rax, dword ptr [rdx + rax*4] ; mov rbp, rsi ; mov qword ptr [rsp + 0x28], rdi ; add rax, rdx ; jmp rax
0x00000000000cefbb : movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x000000000002e885 : movsxd rax, dword ptr [rdx + rcx*4] ; add rax, rdx ; jmp rax
0x00000000000cec4b : movsxd rax, dword ptr [rdx + rsi*4] ; add rax, rdx ; jmp rax
0x000000000006d17a : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000da739 : movsxd rax, dword ptr [rsi + rbp*4] ; add rax, rsi ; jmp rax
0x00000000000aac67 : movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x00000000000aad27 : movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x000000000003adba : movsxd rax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00000000000abcbc : movsxd rax, ebx ; nop ; mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xabd2c ; ret
0x000000000014d4c4 : movsxd rax, ecx ; add rax, rdi ; ret
0x000000000014d388 : movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x000000000014d5dd : movsxd rax, ecx ; add rax, rdi ; sub rax, rdx ; ret
0x00000000000367b7 : movsxd rax, ecx ; mov rcx, qword ptr [rsi + rax*8] ; and rcx, qword ptr [rdx + rax*8] ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x0000000000036aa7 : movsxd rax, ecx ; mov rcx, qword ptr [rsi + rax*8] ; or rcx, qword ptr [rdx + rax*8] ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x000000000014d45a : movsxd rax, ecx ; ret
0x000000000014a6fb : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014e6a8 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000014dec8 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000014e2b8 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014dad8 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b25b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014aa3b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000014a21b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000014dc77 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014ad7b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a55b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000149d3b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000014af1b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000014e168 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d988 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ea98 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a07b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a1b1 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014aeb1 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a9d1 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014e069 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014e999 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014b1f1 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a4f1 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000014a011 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ad11 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000014e1b9 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014d9d9 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000036289 : movsxd rax, ecx ; shl rdx, cl ; shr rax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x000000000014d3a3 : movsxd rbx, ebx ; cmp cl, byte ptr [rax + 0x63] ; leave ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x00000000000aac8f : movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x000000000014d3a7 : movsxd rcx, ecx ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x000000000003626c : movsxd rcx, ecx ; shr rcx, 6 ; test qword ptr [rdi + rcx*8], rax ; setne al ; movzx eax, al ; ret
0x000000000007a609 : movsxd rdi, dword ptr [rbx + 0x70] ; syscall ; cmp rax, -0x1000 ; ja 0x7a62f ; pop rbx ; ret
0x000000000007aff0 : movsxd rdi, dword ptr [rdi + 0x70] ; xor eax, eax ; syscall ; cmp rax, -0x1000 ; ja 0x7b013 ; ret
0x00000000001932a9 : movsxd rdi, ebx ; jmp qword ptr [rax]
0x00000000001932a5 : movsxd rdi, ebx ; push rax ; movsxd rdi, ebx ; jmp qword ptr [rax]
0x00000000000fd8d1 : movsxd rdi, edi ; mov eax, 0x11d ; syscall ; cmp rax, -0x1000 ; ja 0xfd8f9 ; ret
0x000000000002e025 : movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002d988 : movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000002dd98 : movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002ddb8 : movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002dcf8 : movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002dd78 : movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002dc98 : movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002dd38 : movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002dcd8 : movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002dd18 : movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000002de38 : movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000002dcb8 : movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 2 ; movzx eax, ax ; ret
0x000000000002dd58 : movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 4 ; movzx eax, ax ; ret
0x000000000002dc78 : movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 8 ; movzx eax, ax ; ret
0x000000000002dfe5 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002e005 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002df45 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002dfc5 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002dee5 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002df85 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002df25 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002df65 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000002deb5 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000002df05 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 2 ; movzx eax, ax ; ret
0x000000000002dfa5 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 4 ; movzx eax, ax ; ret
0x000000000002dec5 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 8 ; movzx eax, ax ; ret
0x0000000000119336 : movsxd rdi, edi ; xor eax, eax ; syscall ; cmp rax, -0x1000 ; ja 0x11935f ; ret
0x0000000000119335 : movsxd rdi, edi ; xor eax, eax ; syscall ; cmp rax, -0x1000 ; ja 0x119360 ; ret
0x0000000000153bc9 : movsxd rdi, edx ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000193e69 : movsxd rdi, esp ; call qword ptr [rax]
0x00000000000b73d7 : movsxd rdx, ebp ; mov ecx, dword ptr [rsp + 0x84] ; lea rsi, qword ptr [rbx + rax*4] ; sub r10, rax ; jmp 0xb7411
0x0000000000108f27 : movsxd rdx, ecx ; mov eax, 0x119 ; syscall ; cmp rax, -0x1000 ; ja 0x108f51 ; ret
0x000000000010a25e : movsxd rdx, ecx ; mov eax, 0x120 ; syscall ; cmp rax, -0x1000 ; ja 0x10a281 ; ret
0x000000000010a300 : movsxd rdx, ecx ; mov eax, 0x12b ; syscall ; cmp rax, -0x1000 ; ja 0x10a329 ; ret
0x000000000010a3b0 : movsxd rdx, ecx ; mov eax, 0x133 ; syscall ; cmp rax, -0x1000 ; ja 0x10a3d9 ; ret
0x0000000000109d74 : movsxd rdx, ecx ; mov eax, 0x2c ; syscall ; cmp rax, -0x1000 ; ja 0x109da1 ; ret
0x0000000000109bb4 : movsxd rdx, ecx ; mov eax, 0x2d ; syscall ; cmp rax, -0x1000 ; ja 0x109be1 ; ret
0x00000000000cd142 : movsxd rdx, ecx ; mov eax, 0xf7 ; syscall ; cmp rax, -0x1000 ; ja 0xcd169 ; ret
0x0000000000109e2e : movsxd rdx, edx ; mov eax, 0x2e ; syscall ; cmp rax, -0x1000 ; ja 0x109e51 ; ret
0x0000000000109cce : movsxd rdx, edx ; mov eax, 0x2f ; syscall ; cmp rax, -0x1000 ; ja 0x109cf1 ; ret
0x0000000000126a9d : movsxd rdx, edx ; shr rdx, 4 ; cmp rsi, rdx ; mov edx, 0 ; cmovae rax, rdx ; ret
0x00000000000fd98a : movups xmm0, xmmword ptr [rax] ; add bl, al ; nop ; xor eax, eax ; ret
0x0000000000034b52 : movups xmmword ptr [rdi], xmm0 ; and rax, rdx ; movq xmm0, rax ; ret
0x000000000005c805 : movzx eax, al ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x00000000000c166a : movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000006d177 : movzx eax, al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000cea46 : movzx eax, al ; neg rax ; or rax, 0x20 ; ret
0x00000000000ce916 : movzx eax, al ; neg rax ; or rax, 0x7f ; ret
0x00000000000ceb26 : movzx eax, al ; neg rax ; or rax, 1 ; ret
0x0000000000021460 : movzx eax, al ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x000000000004ac2b : movzx eax, byte ptr [r8 + rdi] ; mov rdi, rdx ; mov byte ptr [rsi], al ; jne 0x4ac1f ; mov rax, rsi ; ret
0x000000000004aba7 : movzx eax, byte ptr [r8 + rdx] ; test rdi, rdi ; mov byte ptr [rsi], al ; jne 0x4aba7 ; mov rax, rsi ; ret
0x00000000000d69b5 : movzx eax, byte ptr [r9 + rax] ; mov byte ptr [rdi + 8], 1 ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x0000000000098bd5 : movzx eax, byte ptr [r9] ; test al, al ; jne 0x98c4b ; mov rax, rdi ; ret
0x00000000000a126d : movzx eax, byte ptr [rax + rcx] ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000004ac2c : movzx eax, byte ptr [rax + rdi] ; mov rdi, rdx ; mov byte ptr [rsi], al ; jne 0x4ac1e ; mov rax, rsi ; ret
0x00000000001329ae : movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x000000000004aba8 : movzx eax, byte ptr [rax + rdx] ; test rdi, rdi ; mov byte ptr [rsi], al ; jne 0x4aba6 ; mov rax, rsi ; ret
0x000000000007e4ab : movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007b6bc : movzx eax, byte ptr [rax] ; add rsp, 0x98 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007d479 : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007c67b : movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000079952 : movzx eax, byte ptr [rax] ; ret
0x0000000000126846 : movzx eax, byte ptr [rcx + 1] ; lea edx, dword ptr [rdx + rax + 2] ; cmp esi, edx ; ja 0x126845 ; mov eax, 0xffffffff ; ret
0x00000000000d69b6 : movzx eax, byte ptr [rcx + rax] ; mov byte ptr [rdi + 8], 1 ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x0000000000098bd6 : movzx eax, byte ptr [rcx] ; test al, al ; jne 0x98c4a ; mov rax, rdi ; ret
0x0000000000125dbc : movzx eax, byte ptr [rdi + 1] ; lea rax, qword ptr [rdi + rax + 2] ; cmp rdx, rax ; sbb eax, eax ; ret
0x0000000000126a66 : movzx eax, byte ptr [rdi + 1] ; shl eax, 3 ; cdqe ; shr rax, 4 ; ret
0x00000000000d6076 : movzx eax, byte ptr [rdi + rax] ; mov r9, rdi ; xor eax, eax ; mov rdx, r8 ; jmp 0xd60a5
0x00000000000aae77 : movzx eax, byte ptr [rsi - 1] ; mov r9, rax ; mov eax, dword ptr [rcx + rax*4] ; sub eax, dword ptr [rcx + r8*4] ; je 0xaae71 ; ret
0x0000000000091844 : movzx eax, dh ; mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000000aaca0 : movzx eax, dl ; and dh, 0xf0 ; mov edx, 0 ; cmove rax, rdx ; pop rbx ; ret
0x0000000000091843 : movzx eax, sil ; mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000002e055 : movzx eax, word ptr [rax + rdi*2 + 0x100] ; and eax, esi ; ret
0x000000000002dd9e : movzx eax, word ptr [rax + rdi*2] ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002ddbe : movzx eax, word ptr [rax + rdi*2] ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002dcfe : movzx eax, word ptr [rax + rdi*2] ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002dd7e : movzx eax, word ptr [rax + rdi*2] ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002dc9e : movzx eax, word ptr [rax + rdi*2] ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002dd3e : movzx eax, word ptr [rax + rdi*2] ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002dcde : movzx eax, word ptr [rax + rdi*2] ; and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002dd1e : movzx eax, word ptr [rax + rdi*2] ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000002de3e : movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000002dcbe : movzx eax, word ptr [rax + rdi*2] ; and eax, 2 ; movzx eax, ax ; ret
0x000000000002dd5e : movzx eax, word ptr [rax + rdi*2] ; and eax, 4 ; movzx eax, ax ; ret
0x000000000002dc7e : movzx eax, word ptr [rax + rdi*2] ; and eax, 8 ; movzx eax, ax ; ret
0x00000000001166c2 : movzx eax, word ptr [rax + rdx*2] ; shr ax, 0xe ; and eax, 1 ; ret
0x00000000000da735 : movzx ebp, bpl ; movsxd rax, dword ptr [rsi + rbp*4] ; add rax, rsi ; jmp rax
0x00000000000da736 : movzx ebp, ch ; movsxd rax, dword ptr [rsi + rbp*4] ; add rax, rsi ; jmp rax
0x000000000005cc73 : movzx ebx, bl ; movsxd rax, dword ptr [rcx + rbx*4] ; add rax, rcx ; jmp rax
0x0000000000128e07 : movzx ecx, byte ptr [rax - 1] ; test cl, cl ; jne 0x128dfa ; ret
0x00000000000aa80a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xaa80d ; sub rax, 1 ; ret
0x00000000000aae30 : movzx ecx, byte ptr [rsi - 1] ; mov r8, rax ; mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0xaae30 ; ret
0x00000000000da81a : movzx edi, bh ; movsxd rax, dword ptr [rdx + r15*4] ; add rax, rdx ; jmp rax
0x0000000000108ec4 : movzx edi, bh ; shr rax, 0xc ; xor al, al ; or eax, edi ; ret
0x000000000010a462 : movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000108ec3 : movzx edi, dil ; shr rax, 0xc ; xor al, al ; or eax, edi ; ret
0x00000000000c3964 : movzx edi, dl ; movsxd rax, dword ptr [r8 + rdi*4] ; add rax, r8 ; jmp rax
0x00000000000d2738 : movzx edx, byte ptr [rbx + 1] ; test dl, dl ; jne 0xd2736 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001329a7 : movzx edx, byte ptr [rdi + 7] ; and edx, 0x7f ; movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x00000000000aa6ba : movzx edx, byte ptr [rsi + rax + 3] ; test dl, dl ; jne 0xaa6bd ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000000aad30 : movzx edx, cl ; mov eax, 0 ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000000c3900 : movzx edx, dh ; movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x00000000000c38ff : movzx edx, sil ; movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x00000000000c0734 : movzx esi, dh ; movsxd rax, dword ptr [rax + rsi*4] ; lea rsi, qword ptr [rip + 0xc6152] ; add rax, rsi ; jmp rax
0x00000000000da819 : movzx r15d, r15b ; movsxd rax, dword ptr [rdx + r15*4] ; add rax, rdx ; jmp rax
0x00000000000d6075 : movzx r8d, byte ptr [rdi + rax] ; mov r9, rdi ; xor eax, eax ; mov rdx, r8 ; jmp 0xd60a6
0x00000000000fa064 : movzx rax, al ; ret
0x0000000000193f08 : mul byte ptr [rax - 0x5f790004] ; cld ; call qword ptr [rsi]
0x00000000000858d8 : mul byte ptr [rdi + rax*8] ; or al, 0 ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x0000000000130936 : neg dh ; add byte ptr [rax], al ; lea rax, qword ptr [rbx + 0x2260] ; pop rbx ; ret
0x000000000008a758 : neg dword ptr [rbx - 0x39] ; add eax, 0x339084 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000ec1c0 : neg eax ; mov dword ptr fs:[rax], r8d ; mov eax, 0xffffffff ; ret
0x0000000000035ab7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000007b009 : neg eax ; mov dword ptr fs:[rdx], eax ; mov rax, -1 ; ret
0x000000000001fb80 : neg eax ; mov dword ptr fs:[rdx], eax ; mov rax, rbp ; cmp r9, rax ; je 0x1fb37 ; jmp 0x1fb60
0x00000000000cea4a : neg eax ; or rax, 0x20 ; ret
0x00000000000cf002 : neg eax ; or rax, 0x31069 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000ce91a : neg eax ; or rax, 0x7f ; ret
0x00000000000ceb2a : neg eax ; or rax, 1 ; ret
0x0000000000034a87 : neg eax ; or rax, rdx ; sar rax, 0x3f ; not eax ; and eax, ecx ; ret
0x00000000000f813d : neg edx ; mov dword ptr fs:[rax], edx ; add rsp, 0x10 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000035a17 : neg edx ; mov dword ptr fs:[rax], edx ; mov eax, 0xffffffff ; add rsp, 0xd0 ; ret
0x00000000000ec217 : neg edx ; mov dword ptr fs:[rax], edx ; mov eax, 0xffffffff ; ret
0x00000000000ec1bf : neg r8d ; mov dword ptr fs:[rax], r8d ; mov eax, 0xffffffff ; ret
0x00000000000cea49 : neg rax ; or rax, 0x20 ; ret
0x00000000000cf001 : neg rax ; or rax, 0x31069 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000ce919 : neg rax ; or rax, 0x7f ; ret
0x00000000000ceb29 : neg rax ; or rax, 1 ; ret
0x0000000000034a86 : neg rax ; or rax, rdx ; sar rax, 0x3f ; not eax ; and eax, ecx ; ret
0x00000000000adf4a : neg rax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003b824 : neg rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000008fd0 : nop ; adc byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + rax], bl ; add byte ptr [rax], al ; ret
0x000000000019379c : nop ; adc esp, edi ; jmp rax
0x000000000007b7d4 : nop ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000013533d : nop ; add byte ptr [rax], al ; add byte ptr [rax + rax], al ; add byte ptr [rax], al ; mov dword ptr [rbx + 0x98], eax ; jmp 0x13531e
0x000000000011fb1c : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000015a727 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000076a8e : nop ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x00000000000769ab : nop ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000007af7b : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x48], bl ; sub ebp, eax ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000007a93d : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000035de3 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000138256 : nop ; add byte ptr [rax], al ; add byte ptr [rbx - 0x37f0fe18], al ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000102afe : nop ; add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x0000000000046a8b : nop ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x8b44
0x0000000000138296 : nop ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; enter 0x4289, 0x10 ; mov eax, 1 ; ret
0x0000000000138176 : nop ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; enter 0x4289, 0xc ; mov eax, 1 ; ret
0x000000000016b9fc : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016b9f4 : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000023ae5 : nop ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000001a2a45 : nop ; add byte ptr [rax], al ; fmul st(4) ; in eax, dx ; call qword ptr [rdx]
0x00000000001a297d : nop ; add byte ptr [rax], al ; ror dl, 1 ; in eax, dx ; call rdi
0x00000000001461f8 : nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000112c54 : nop ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000feaed : nop ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001010ac : nop ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x800008], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000fea3a : nop ; add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x10], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bfd55 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; xlatb ; sete al ; add eax, 0x16d ; ret
0x00000000000bd7c7 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x000000000019f911 : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; add bl, byte ptr [rax + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000001a0dea : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; fsub qword ptr [rcx] ; add byte ptr [rax], al ; call 0x2719fb78
0x00000000000a069f : nop ; add rax, 1 ; cmp byte ptr [rdi + rax], dl ; je 0xa06ab ; ret
0x00000000000a069e : nop ; add rax, 1 ; cmp byte ptr [rdi + rax], dl ; je 0xa06ac ; ret
0x000000000005a708 : nop ; add rax, rcx ; mov edx, 1 ; jmp rax
0x000000000004ee02 : nop ; add rax, rcx ; mov edx, 1 ; mov r8d, 1 ; jmp rax
0x000000000004dd77 : nop ; add rax, rcx ; xor r8d, r8d ; mov edx, 1 ; jmp rax
0x00000000000a105f : nop ; add rsp, 8 ; mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001195ff : nop ; add rsp, 8 ; mov rbx, r13 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000186288 : nop ; and al, 0xf2 ; push qword ptr [rax - 0x2f000ddc] ; and al, 0xf2 ; push rax ; and al, 0xf2 ; call qword ptr [rax]
0x0000000000130931 : nop ; and al, byte ptr [rax] ; add al, ch ; neg dh ; add byte ptr [rax], al ; lea rax, qword ptr [rbx + 0x2260] ; pop rbx ; ret
0x0000000000186200 : nop ; and dl, dh ; inc eax ; and dl, dh ; push rax ; and dl, dh ; jmp qword ptr [rax]
0x00000000001862a8 : nop ; and eax, 0x25b0fff2 ; call rax
0x00000000001936e8 : nop ; and eax, 0x2790fffc ; cld ; jmp qword ptr [rax]
0x00000000001936e4 : nop ; and edi, esp ; call qword ptr [rax - 0x6f0003db]
0x0000000000090dcf : nop ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x0000000000090e2f : nop ; bsf eax, eax ; sub rdx, rax ; jbe 0x90e5e ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000090e3f : nop ; bsf eax, eax ; sub rdx, rax ; jbe 0x90e5e ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000090e2e : nop ; bsf eax, eax ; sub rdx, rax ; jbe 0x90e5f ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000090e3e : nop ; bsf eax, eax ; sub rdx, rax ; jbe 0x90e5f ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000a0c1f : nop ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000a0daf : nop ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000193968 : nop ; cmp eax, 0x3ee0fffc ; cld ; jmp qword ptr [rax]
0x00000000000ceb4f : nop ; cmp rax, 0x2f ; je 0xceb1e ; mov eax, 1 ; ret
0x00000000000ceb4e : nop ; cmp rax, 0x2f ; je 0xceb1f ; mov eax, 1 ; ret
0x0000000000194100 : nop ; cwde ; cld ; call qword ptr [rax]
0x00000000001934b0 : nop ; cwde ; std ; jmp qword ptr [rax]
0x000000000019cce0 : nop ; in eax, -0x17 ; jmp qword ptr [rax]
0x0000000000193df4 : nop ; jae 0x193df6 ; call qword ptr [rax]
0x0000000000193dbc : nop ; jb 0x193dbe ; call qword ptr [rax]
0x00000000001932d0 : nop ; je 0x1932d5 ; push qword ptr [rax] ; jbe 0x1932d9 ; call rax
0x0000000000193dc4 : nop ; jno 0x193dc6 ; call qword ptr [rax]
0x0000000000187360 : nop ; jns 0x18735a ; jmp rax
0x0000000000193dcc : nop ; jo 0x193dce ; call qword ptr [rax]
0x0000000000193bc8 : nop ; jp 0x193bca ; jmp qword ptr [rax]
0x0000000000057798 : nop ; lea rdx, qword ptr [rip - 0x2de] ; add rax, rdx ; jmp rax
0x000000000010984f : nop ; mov eax, 0x11f ; syscall ; cmp rax, -0xfff ; jae 0x109870 ; ret
0x000000000010984e : nop ; mov eax, 0x11f ; syscall ; cmp rax, -0xfff ; jae 0x109871 ; ret
0x000000000010a6ef : nop ; mov eax, 0x1e ; syscall ; cmp rax, -0xfff ; jae 0x10a710 ; ret
0x000000000010a6ee : nop ; mov eax, 0x1e ; syscall ; cmp rax, -0xfff ; jae 0x10a711 ; ret
0x0000000000109f4f : nop ; mov eax, 0x30 ; syscall ; cmp rax, -0xfff ; jae 0x109f70 ; ret
0x0000000000109f4e : nop ; mov eax, 0x30 ; syscall ; cmp rax, -0xfff ; jae 0x109f71 ; ret
0x0000000000109b6f : nop ; mov eax, 0x32 ; syscall ; cmp rax, -0xfff ; jae 0x109b90 ; ret
0x0000000000109b6e : nop ; mov eax, 0x32 ; syscall ; cmp rax, -0xfff ; jae 0x109b91 ; ret
0x00000000000fa18f : nop ; mov eax, 0x57 ; syscall ; cmp rax, -0xfff ; jae 0xfa1b0 ; ret
0x00000000000fa18e : nop ; mov eax, 0x57 ; syscall ; cmp rax, -0xfff ; jae 0xfa1b1 ; ret
0x00000000000fa0cf : nop ; mov eax, 0x58 ; syscall ; cmp rax, -0xfff ; jae 0xfa0f0 ; ret
0x00000000000fa0ce : nop ; mov eax, 0x58 ; syscall ; cmp rax, -0xfff ; jae 0xfa0f1 ; ret
0x00000000001090bf : nop ; mov eax, 0x87 ; syscall ; cmp rax, -0xfff ; jae 0x1090e0 ; ret
0x00000000001090be : nop ; mov eax, 0x87 ; syscall ; cmp rax, -0xfff ; jae 0x1090e1 ; ret
0x00000000000f840f : nop ; mov eax, 0x89 ; syscall ; cmp rax, -0xfff ; jae 0xf8430 ; ret
0x00000000000f840e : nop ; mov eax, 0x89 ; syscall ; cmp rax, -0xfff ; jae 0xf8431 ; ret
0x0000000000102dbf : nop ; mov eax, 0x95 ; syscall ; cmp rax, -0xfff ; jae 0x102de0 ; ret
0x0000000000102dbe : nop ; mov eax, 0x95 ; syscall ; cmp rax, -0xfff ; jae 0x102de1 ; ret
0x00000000000ff15f : nop ; mov eax, 0x99 ; syscall ; cmp rax, -0xfff ; jae 0xff180 ; ret
0x00000000000ff15e : nop ; mov eax, 0x99 ; syscall ; cmp rax, -0xfff ; jae 0xff181 ; ret
0x000000000010918f : nop ; mov eax, 0x9f ; syscall ; cmp rax, -0xfff ; jae 0x1091b0 ; ret
0x000000000010918e : nop ; mov eax, 0x9f ; syscall ; cmp rax, -0xfff ; jae 0x1091b1 ; ret
0x000000000010954f : nop ; mov eax, 0xb4 ; syscall ; cmp rax, -0xfff ; jae 0x109570 ; ret
0x000000000010954e : nop ; mov eax, 0xb4 ; syscall ; cmp rax, -0xfff ; jae 0x109571 ; ret
0x00000000001075af : nop ; mov eax, 0xc2 ; syscall ; cmp rax, -0xfff ; jae 0x1075d0 ; ret
0x00000000001075ae : nop ; mov eax, 0xc2 ; syscall ; cmp rax, -0xfff ; jae 0x1075d1 ; ret
0x000000000010760f : nop ; mov eax, 0xc3 ; syscall ; cmp rax, -0xfff ; jae 0x107630 ; ret
0x000000000010760e : nop ; mov eax, 0xc3 ; syscall ; cmp rax, -0xfff ; jae 0x107631 ; ret
0x00000000001074ef : nop ; mov eax, 0xc4 ; syscall ; cmp rax, -0xfff ; jae 0x107510 ; ret
0x00000000001074ee : nop ; mov eax, 0xc4 ; syscall ; cmp rax, -0xfff ; jae 0x107511 ; ret
0x000000000010769f : nop ; mov eax, 0xc5 ; syscall ; cmp rax, -0xfff ; jae 0x1076c0 ; ret
0x000000000010769e : nop ; mov eax, 0xc5 ; syscall ; cmp rax, -0xfff ; jae 0x1076c1 ; ret
0x00000000001093ff : nop ; mov eax, 0xfe ; syscall ; cmp rax, -0xfff ; jae 0x109420 ; ret
0x00000000001093fe : nop ; mov eax, 0xfe ; syscall ; cmp rax, -0xfff ; jae 0x109421 ; ret
0x00000000001682df : nop ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov ax, word ptr [rcx + 4] ; mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000163f9f : nop ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov ax, word ptr [rcx + 4] ; mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00000000001379bf : nop ; mov eax, dword ptr [rdi + 0x54] ; bswap eax ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x00000000000a085f : nop ; mov eax, dword ptr [rsp + 0x10] ; mov word ptr [rdi + 4], r11w ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a84ef : nop ; mov ecx, dword ptr [rsi] ; mov dx, word ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000091a4f : nop ; mov edx, 0xffffffff ; bsf rax, rdi ; cmove rax, rdx ; add eax, 1 ; ret
0x0000000000115ea7 : nop ; mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00000000001161fe : nop ; mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x000000000011603d : nop ; mov edx, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000115f06 : nop ; mov edx, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00000000001164e4 : nop ; mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, qword ptr [rbp - 0x158] ; call rax
0x000000000011628d : nop ; mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000115ac6 : nop ; mov edx, dword ptr [rbx - 0x30] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x0000000000115f95 : nop ; mov edx, dword ptr [rcx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000000a769f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000007e3ff : nop ; mov rax, -1 ; ret
0x00000000000fcd2f : nop ; mov rax, qword ptr [r12 + 0x10] ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000016830f : nop ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x0000000000163fbf : nop ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x00000000000c8e6f : nop ; mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000078d8f : nop ; mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000078c7f : nop ; mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x000000000013daff : nop ; mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000134b4f : nop ; mov rax, qword ptr [rdx] ; bswap eax ; mov dword ptr [rcx + 0xb4], eax ; mov eax, 1 ; ret
0x00000000001378df : nop ; mov rax, qword ptr [rdx] ; bswap eax ; mov dword ptr [rdi + 0x54], eax ; mov eax, 1 ; ret
0x000000000013abef : nop ; mov rax, qword ptr [rip + 0x2863e9] ; add rsp, 8 ; ret
0x000000000012ae3f : nop ; mov rax, qword ptr [rip + 0x295ff1] ; mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x12ae5f ; ret
0x000000000012ae3e : nop ; mov rax, qword ptr [rip + 0x295ff1] ; mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x12ae60 ; ret
0x000000000012388f : nop ; mov rax, qword ptr [rip + 0x29efc1] ; ret
0x000000000011721f : nop ; mov rax, qword ptr [rip + 0x2adee1] ; test rax, rax ; je 0x11723d ; ret
0x000000000011721e : nop ; mov rax, qword ptr [rip + 0x2adee1] ; test rax, rax ; je 0x11723e ; ret
0x000000000010bcbf : nop ; mov rax, qword ptr [rip + 0x2b51a1] ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000010773f : nop ; mov rax, qword ptr [rip + 0x2b9731] ; mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x00000000000d263f : nop ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007fc88 : nop ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a90f : nop ; mov rax, rdi ; cqo ; idiv rsi ; ret
0x00000000000a075f : nop ; mov rax, rdi ; ret
0x000000000009183f : nop ; mov rcx, rdx ; movzx eax, sil ; mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000008b60f : nop ; mov rdx, qword ptr [rip + 0x335941] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00000000000a76ef : nop ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a851f : nop ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000008715f : nop ; mov rdx, qword ptr [rsp + 0x68] ; call rax
0x0000000000115a0d : nop ; mov rdx, r13 ; call rax
0x00000000001940c0 : nop ; movabs eax, dword ptr [0xa0b0fffca120fffc] ; cld ; inc dword ptr [rax - 0x60] ; cld ; call rax
0x0000000000193e68 : nop ; movsxd rdi, esp ; call qword ptr [rax]
0x00000000000ac005 : nop ; nop word ptr cs:[rax + rax] ; add rax, 3 ; ret
0x000000000016ef55 : nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000016ef65 : nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000016ef75 : nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000016ef85 : nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000016ef95 : nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000016eed5 : nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000016eee5 : nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000016eef5 : nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000016ef05 : nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000016ef15 : nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000016ef25 : nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000016ef35 : nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000016ef45 : nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000ac655 : nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000ac675 : nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000ac665 : nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi - 8] ; ret
0x000000000016eec5 : nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi] ; ret
0x00000000000a7055 : nop ; nop word ptr cs:[rax + rax] ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000a7065 : nop ; nop word ptr cs:[rax + rax] ; mov dword ptr [rdi], edx ; ret
0x00000000000a6d45 : nop ; nop word ptr cs:[rax + rax] ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000007ee75 : nop ; nop word ptr cs:[rax + rax] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000165f95 : nop ; nop word ptr cs:[rax + rax] ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x00000000000a70b5 : nop ; nop word ptr cs:[rax + rax] ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a70a5 : nop ; nop word ptr cs:[rax + rax] ; mov qword ptr [rdi], rdx ; ret
0x000000000007f165 : nop ; nop word ptr cs:[rax + rax] ; mov rax, rdi ; ret
0x0000000000165f35 : nop ; nop word ptr cs:[rax + rax] ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000013ea45 : nop ; nop word ptr cs:[rax + rax] ; xor eax, eax ; ret
0x00000000000ac015 : nop ; nop word ptr cs:[rax + rax] ; xor rax, rax ; ret
0x0000000000193ddc : nop ; outsb dx, byte ptr [rsi] ; cld ; call qword ptr [rax]
0x0000000000193dd4 : nop ; outsd dx, dword ptr [rsi] ; cld ; call qword ptr [rax]
0x0000000000193e58 : nop ; pop rbp ; cld ; call qword ptr [rax]
0x0000000000193e8c : nop ; pop rcx ; cld ; call qword ptr [rax]
0x0000000000193e9c : nop ; pop rdi ; cld ; call qword ptr [rax]
0x0000000000193e50 : nop ; pop rdx ; cld ; call qword ptr [rax]
0x0000000000193e94 : nop ; pop rsp ; cld ; call qword ptr [rax]
0x0000000000193ee8 : nop ; popfq ; cld ; jmp qword ptr [rax]
0x0000000000193e74 : nop ; push rax ; cld ; call qword ptr [rax]
0x0000000000193e7c : nop ; push rbx ; cld ; call qword ptr [rax]
0x0000000000193e38 : nop ; push rcx ; cld ; call qword ptr [rax]
0x0000000000193e48 : nop ; push rdi ; cld ; call qword ptr [rax]
0x0000000000193e84 : nop ; push rsi ; cld ; call qword ptr [rax]
0x0000000000193e40 : nop ; push rsp ; cld ; call qword ptr [rax]
0x000000000000a548 : nop ; rcl dword ptr [rbx], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x34
0x000000000002d936 : nop ; rol byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; add eax, 0x3934a6 ; mov qword ptr [rax], rdx ; ret
0x00000000000ff3e4 : nop ; sbb ch, byte ptr [rax + rax] ; mov dword ptr fs:[rax], 0 ; mov rax, qword ptr [rsp - 0x50] ; ret
0x00000000001a47b0 : nop ; shr dh, 1 ; call qword ptr [rax]
0x00000000001933b9 : nop ; std ; call rax
0x000000000019326c : nop ; sti ; call rax
0x000000000019330d : nop ; sti ; inc dword ptr [rax - 0x6e] ; sti ; jmp qword ptr [rax]
0x00000000001932b0 : nop ; sti ; push qword ptr [rax] ; imul edi, ebx, 0xfb6ad0ff ; push qword ptr [rax + 0x6c] ; sti ; call qword ptr [rax]
0x00000000000eb19c : nop ; sub dl, bh ; dec dword ptr [rax + 1] ; ret
0x00000000000004aa : nop ; sub eax, 0xf02493 ; add cl, byte ptr [rdx] ; add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x000000000010b36c : nop ; sub eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x000000000007eeaf : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000194118 : nop ; xchg eax, ebp ; cld ; call qword ptr [rax]
0x00000000001934dc : nop ; xchg eax, ebp ; std ; jmp qword ptr [rax]
0x0000000000194324 : nop ; xchg eax, ebx ; cld ; inc dword ptr [rax] ; xchg eax, ebx ; cld ; push qword ptr [rax - 0x6e] ; cld ; call rax
0x0000000000194108 : nop ; xchg eax, edi ; cld ; call qword ptr [rax]
0x0000000000194110 : nop ; xchg eax, esi ; cld ; call qword ptr [rax]
0x0000000000194120 : nop ; xchg eax, esp ; cld ; inc dword ptr [rax] ; xchg eax, esp ; cld ; push qword ptr [rax - 0x6d] ; cld ; jmp rax
0x00000000000bd499 : nop ; xor byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000146240 : nop ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000014646b : nop ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000008a75d : nop ; xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000008a773 : nop ; xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000087dd2 : nop ; xor eax, dword ptr [rax] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x87dea ; call rax
0x0000000000088083 : nop ; xor eax, dword ptr [rax] ; test eax, eax ; js 0x88098 ; ret
0x000000000006bbef : nop ; xor ebp, ebp ; add rsp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000090e4f : nop ; xor rax, rax ; ret
0x000000000013ea68 : nop dword ptr [rax + rax] ; add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x000000000006c413 : nop dword ptr [rax + rax] ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x00000000000ac008 : nop dword ptr [rax + rax] ; add rax, 3 ; ret
0x0000000000048543 : nop dword ptr [rax + rax] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006bccb : nop dword ptr [rax + rax] ; add rsp, 0x1000 ; xor eax, eax ; pop rbx ; ret
0x000000000013d7fb : nop dword ptr [rax + rax] ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000008044b : nop dword ptr [rax + rax] ; add rsp, 0x18 ; xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000136413 : nop dword ptr [rax + rax] ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012d743 : nop dword ptr [rax + rax] ; add rsp, 8 ; mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000010c6d3 : nop dword ptr [rax + rax] ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008d7b3 : nop dword ptr [rax + rax] ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000798d8 : nop dword ptr [rax + rax] ; and dword ptr [rdi], 0xffffffcf ; ret
0x000000000007715b : nop dword ptr [rax + rax] ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x0000000000090de8 : nop dword ptr [rax + rax] ; bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000097f68 : nop dword ptr [rax + rax] ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000000a0c28 : nop dword ptr [rax + rax] ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000055f7b : nop dword ptr [rax + rax] ; call 0x721f7
0x000000000007d573 : nop dword ptr [rax + rax] ; call 0x79877
0x0000000000146638 : nop dword ptr [rax + rax] ; call rax
0x00000000000d81eb : nop dword ptr [rax + rax] ; cmp al, 1 ; jne 0xd81f8 ; xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xd8199 ; ret
0x0000000000136058 : nop dword ptr [rax + rax] ; cmp dword ptr [rsi + 0x10], 0xc ; je 0x136080 ; xor eax, eax ; ret
0x000000000013d36b : nop dword ptr [rax + rax] ; cmp eax, 1 ; jne 0x13d36f ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x0000000000114e8b : nop dword ptr [rax + rax] ; cmp edi, 0x56 ; je 0x114eaf ; mov eax, 7 ; ret
0x00000000000fcbdb : nop dword ptr [rax + rax] ; cmp edx, 4 ; ja 0xfcc00 ; mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x0000000000036c03 : nop dword ptr [rax + rax] ; lea eax, dword ptr [rdx + 1] ; mov dword ptr [rip + 0x38a47b], eax ; mov eax, edx ; ret
0x000000000016ef58 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000016ef68 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000016ef78 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000016ef88 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000016ef98 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000016eed8 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000016eee8 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000016eef8 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000016ef08 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000016ef18 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000016ef28 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000016ef38 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000016ef48 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000ac658 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000ac678 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000ac668 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi - 8] ; ret
0x000000000016eec8 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi] ; ret
0x000000000002cb23 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rip + 0x15def6] ; ret
0x00000000000204e8 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rip + 0x16a074] ; ret
0x00000000000204f8 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rip + 0x16bf78] ; ret
0x000000000012d7db : nop dword ptr [rax + rax] ; lea rax, qword ptr [rip + 0x5d23e] ; ret
0x000000000013045b : nop dword ptr [rax + rax] ; lea rdx, qword ptr [rip + 0x290719] ; jmp qword ptr [rdx + rax*8]
0x0000000000168278 : nop dword ptr [rax + rax] ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000163f48 : nop dword ptr [rax + rax] ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000163f58 : nop dword ptr [rax + rax] ; mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000165f18 : nop dword ptr [rax + rax] ; mov byte ptr [rcx], dl ; ret
0x00000000000d6948 : nop dword ptr [rax + rax] ; mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x0000000000079d08 : nop dword ptr [rax + rax] ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000a7668 : nop dword ptr [rax + rax] ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000a6068 : nop dword ptr [rax + rax] ; mov byte ptr [rdi], dh ; ret
0x00000000000a7038 : nop dword ptr [rax + rax] ; mov byte ptr [rdi], dl ; ret
0x00000000000a080b : nop dword ptr [rax + rax] ; mov byte ptr [rdi], sil ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a6088 : nop dword ptr [rax + rax] ; mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000a8488 : nop dword ptr [rax + rax] ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a6d38 : nop dword ptr [rax + rax] ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000a9ef8 : nop dword ptr [rax + rax] ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x0000000000134c2b : nop dword ptr [rax + rax] ; mov dword ptr [rcx + 4], 1 ; mov eax, 1 ; ret
0x0000000000165f58 : nop dword ptr [rax + rax] ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x0000000000165f78 : nop dword ptr [rax + rax] ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x0000000000165f68 : nop dword ptr [rax + rax] ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x0000000000165f48 : nop dword ptr [rax + rax] ; mov dword ptr [rcx], edx ; ret
0x000000000013794b : nop dword ptr [rax + rax] ; mov dword ptr [rdi + 4], 1 ; mov eax, 1 ; ret
0x00000000000f7368 : nop dword ptr [rax + rax] ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000a7058 : nop dword ptr [rax + rax] ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000a0908 : nop dword ptr [rax + rax] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000a08bb : nop dword ptr [rax + rax] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x00000000000a08fb : nop dword ptr [rax + rax] ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00000000000a09ab : nop dword ptr [rax + rax] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a08ab : nop dword ptr [rax + rax] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00000000000a7078 : nop dword ptr [rax + rax] ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a7088 : nop dword ptr [rax + rax] ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a7068 : nop dword ptr [rax + rax] ; mov dword ptr [rdi], edx ; ret
0x0000000000130028 : nop dword ptr [rax + rax] ; mov dword ptr [rsi], 0xa ; ret
0x0000000000130048 : nop dword ptr [rax + rax] ; mov dword ptr [rsi], 0xc ; ret
0x0000000000130038 : nop dword ptr [rax + rax] ; mov dword ptr [rsi], 8 ; ret
0x00000000000a6078 : nop dword ptr [rax + rax] ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000a9f0b : nop dword ptr [rax + rax] ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x0000000000089ad8 : nop dword ptr [rax + rax] ; mov eax, 0x16 ; ret
0x00000000000ce198 : nop dword ptr [rax + rax] ; mov eax, 0x66 ; syscall ; ret
0x00000000000ce1b8 : nop dword ptr [rax + rax] ; mov eax, 0x68 ; syscall ; ret
0x00000000000ce1a8 : nop dword ptr [rax + rax] ; mov eax, 0x6b ; syscall ; ret
0x00000000000ce1c8 : nop dword ptr [rax + rax] ; mov eax, 0x6c ; syscall ; ret
0x00000000000ce3db : nop dword ptr [rax + rax] ; mov eax, 0x6f ; syscall ; ret
0x00000000000dfd68 : nop dword ptr [rax + rax] ; mov eax, 0xc ; ret
0x000000000011b1a8 : nop dword ptr [rax + rax] ; mov eax, 0xca ; ret
0x000000000010914b : nop dword ptr [rax + rax] ; mov eax, 0xe4 ; syscall ; ret
0x00000000000ce988 : nop dword ptr [rax + rax] ; mov eax, 0xfc17 ; ret
0x0000000000056843 : nop dword ptr [rax + rax] ; mov eax, 0xffffffff ; mov qword ptr [rdi], r10 ; ret
0x000000000007d888 : nop dword ptr [rax + rax] ; mov eax, 0xffffffff ; ret
0x0000000000170d1b : nop dword ptr [rax + rax] ; mov eax, 1 ; jg 0x170d3e ; neg eax ; ret
0x00000000000cf9b3 : nop dword ptr [rax + rax] ; mov eax, 1 ; ret
0x0000000000130748 : nop dword ptr [rax + rax] ; mov eax, 2 ; ret
0x00000000001682b8 : nop dword ptr [rax + rax] ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x000000000016b668 : nop dword ptr [rax + rax] ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000000f7e2b : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi + 0x108] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000007ee78 : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000000abc98 : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0xabd30 ; ret
0x00000000000abce8 : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xabd30 ; ret
0x00000000000d8103 : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x00000000000f7358 : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000fd968 : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x0000000000078cb8 : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x0000000000075ed8 : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000116b6b : nop dword ptr [rax + rax] ; mov eax, dword ptr [rip + 0x2afbba] ; test eax, eax ; jne 0x116b91 ; xor eax, eax ; ret
0x0000000000036bc8 : nop dword ptr [rax + rax] ; mov eax, dword ptr [rip + 0x38a4b2] ; ret
0x00000000000cd24b : nop dword ptr [rax + rax] ; mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000010e9a8 : nop dword ptr [rax + rax] ; mov eax, edx ; ret
0x00000000000a60a8 : nop dword ptr [rax + rax] ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000a6d8b : nop dword ptr [rax + rax] ; mov ecx, dword ptr [rsi] ; mov dx, word ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000015ae58 : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a84c8 : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a609b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000a9f38 : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x0000000000165f98 : nop dword ptr [rax + rax] ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x0000000000165fb8 : nop dword ptr [rax + rax] ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x0000000000165fc8 : nop dword ptr [rax + rax] ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x0000000000165fd8 : nop dword ptr [rax + rax] ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x0000000000165fe8 : nop dword ptr [rax + rax] ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x0000000000165ff8 : nop dword ptr [rax + rax] ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x0000000000166008 : nop dword ptr [rax + rax] ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x0000000000165fa8 : nop dword ptr [rax + rax] ; mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x0000000000165f88 : nop dword ptr [rax + rax] ; mov qword ptr [rcx], rdx ; ret
0x000000000013e69b : nop dword ptr [rax + rax] ; mov qword ptr [rdi + 0x18], rsi ; mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x00000000000a7098 : nop dword ptr [rax + rax] ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000a70b8 : nop dword ptr [rax + rax] ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a70d8 : nop dword ptr [rax + rax] ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a70e8 : nop dword ptr [rax + rax] ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a70f8 : nop dword ptr [rax + rax] ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a7108 : nop dword ptr [rax + rax] ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a70c8 : nop dword ptr [rax + rax] ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a70a8 : nop dword ptr [rax + rax] ; mov qword ptr [rdi], rdx ; ret
0x000000000011b1b8 : nop dword ptr [rax + rax] ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x000000000006efb3 : nop dword ptr [rax + rax] ; mov rax, -1 ; ret
0x00000000000ac028 : nop dword ptr [rax + rax] ; mov rax, 1 ; ret
0x00000000000ac038 : nop dword ptr [rax + rax] ; mov rax, 2 ; ret
0x00000000000ac048 : nop dword ptr [rax + rax] ; mov rax, 3 ; ret
0x00000000000ac058 : nop dword ptr [rax + rax] ; mov rax, 4 ; ret
0x00000000000ac068 : nop dword ptr [rax + rax] ; mov rax, 5 ; ret
0x00000000000ac078 : nop dword ptr [rax + rax] ; mov rax, 6 ; ret
0x00000000000ac088 : nop dword ptr [rax + rax] ; mov rax, 7 ; ret
0x0000000000116673 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000130e1b : nop dword ptr [rax + rax] ; mov rax, qword ptr [rbx + 8] ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000cd4d3 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rbx] ; mov rdx, qword ptr [rax + 0x18] ; test rdx, rdx ; je 0xcd4fa ; call rdx
0x0000000000163ed8 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000013e658 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000076858 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007f158 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000013d828 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013d463 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000013abbb : nop dword ptr [rax + rax] ; mov rax, qword ptr [rip + 0x2863c1] ; add rsp, 8 ; ret
0x000000000007f138 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rip + 0x3433b9] ; ret
0x00000000000215c8 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rip + 0x3a4d39] ; ret
0x00000000000215b8 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rip + 0x3a4d59] ; ret
0x000000000002e02b : nop dword ptr [rax + rax] ; mov rax, qword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000003419b : nop dword ptr [rax + rax] ; mov rax, rcx ; ret
0x000000000007f168 : nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000000a60e8 : nop dword ptr [rax + rax] ; mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000155128 : nop dword ptr [rax + rax] ; mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000a60db : nop dword ptr [rax + rax] ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000086a83 : nop dword ptr [rax + rax] ; mov rsi, qword ptr [rsp + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000086df8 : nop dword ptr [rax + rax] ; mov rsi, qword ptr [rsp + 0x48] ; call rax
0x0000000000165f38 : nop dword ptr [rax + rax] ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x0000000000165f28 : nop dword ptr [rax + rax] ; mov word ptr [rcx], dx ; ret
0x00000000000a7048 : nop dword ptr [rax + rax] ; mov word ptr [rdi], dx ; ret
0x00000000000a0818 : nop dword ptr [rax + rax] ; mov word ptr [rdi], r9w ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a096b : nop dword ptr [rax + rax] ; mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a08d8 : nop dword ptr [rax + rax] ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x00000000000a7118 : nop dword ptr [rax + rax] ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000a7128 : nop dword ptr [rax + rax] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000001266fb : nop dword ptr [rax + rax] ; movsxd rdx, edx ; mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x000000000017022b : nop dword ptr [rax + rax] ; movzx eax, byte ptr [rdi - 0xa] ; movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x000000000017021b : nop dword ptr [rax + rax] ; movzx eax, byte ptr [rdi - 0xb] ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000017020b : nop dword ptr [rax + rax] ; movzx eax, byte ptr [rdi - 0xc] ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000001701fb : nop dword ptr [rax + rax] ; movzx eax, byte ptr [rdi - 0xd] ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x00000000001701eb : nop dword ptr [rax + rax] ; movzx eax, byte ptr [rdi - 0xe] ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x00000000001701db : nop dword ptr [rax + rax] ; movzx eax, byte ptr [rdi - 0xf] ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000016b6e8 : nop dword ptr [rax + rax] ; movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008d448 : nop dword ptr [rax + rax] ; movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000015afe8 : nop dword ptr [rax + rax] ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000015af68 : nop dword ptr [rax + rax] ; movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000036bb6 : nop dword ptr [rax + rax] ; nop ; mov eax, dword ptr [rip + 0x38a4c6] ; ret
0x000000000011b217 : nop dword ptr [rax + rax] ; nop ; mov eax, edi ; ror ax, 8 ; ret
0x00000000000f7327 : nop dword ptr [rax + rax] ; nop ; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x000000000013e643 : nop dword ptr [rax + rax] ; nop dword ptr [rax + rax] ; ret
0x000000000012e5d4 : nop dword ptr [rax + rax] ; nop dword ptr [rax] ; ret
0x0000000000165f11 : nop dword ptr [rax + rax] ; nop word ptr cs:[rax + rax] ; mov byte ptr [rcx], dl ; ret
0x00000000000a7031 : nop dword ptr [rax + rax] ; nop word ptr cs:[rax + rax] ; mov byte ptr [rdi], dl ; ret
0x00000000000a6d21 : nop dword ptr [rax + rax] ; nop word ptr cs:[rax + rax] ; ret
0x0000000000170d31 : nop dword ptr [rax + rax] ; nop word ptr cs:[rax + rax] ; xor eax, eax ; ret
0x000000000007a698 : nop dword ptr [rax + rax] ; or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000049c93 : nop dword ptr [rax + rax] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012ec8b : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000117658 : nop dword ptr [rax + rax] ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x0000000000020148 : nop dword ptr [rax + rax] ; ret
0x0000000000112768 : nop dword ptr [rax + rax] ; sub eax, edi ; ret
0x000000000010c053 : nop dword ptr [rax + rax] ; sub edi, 0x30 ; xor eax, eax ; cmp edi, 9 ; setbe al ; ret
0x000000000007e543 : nop dword ptr [rax + rax] ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x00000000000743f3 : nop dword ptr [rax + rax] ; sub r8, rcx ; sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000089be8 : nop dword ptr [rax + rax] ; test edi, edi ; je 0x89c11 ; mov eax, 0x16 ; ret
0x000000000013ed78 : nop dword ptr [rax + rax] ; test edx, edx ; jne 0x13eda1 ; mov eax, 1 ; ret
0x000000000013edbb : nop dword ptr [rax + rax] ; test edx, edx ; jne 0x13edde ; mov eax, 1 ; ret
0x000000000002a44b : nop dword ptr [rax + rax] ; test esi, esi ; je 0x2a46e ; cmp esi, 3 ; je 0x2a46e ; ret
0x000000000008993b : nop dword ptr [rax + rax] ; test sil, 7 ; mov eax, 0x16 ; je 0x89960 ; ret
0x00000000000a9ee8 : nop dword ptr [rax + rax] ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x0000000000146a53 : nop dword ptr [rax + rax] ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000000000e8f3b : nop dword ptr [rax + rax] ; xor eax, eax ; add rsp, 8 ; ret
0x000000000002de98 : nop dword ptr [rax + rax] ; xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x0000000000131318 : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003aa6b : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x00000000000365b3 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000078cc8 : nop dword ptr [rax + rax] ; xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x000000000007c368 : nop dword ptr [rax + rax] ; xor eax, eax ; test rdx, rdx ; jne 0x7c38f ; ret
0x000000000006bc68 : nop dword ptr [rax + rax] ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; ret
0x0000000000071cab : nop dword ptr [rax + rax] ; xor edx, edx ; mov rax, rdx ; ret
0x0000000000119213 : nop dword ptr [rax + rax] ; xor esi, esi ; mov rax, rsi ; ret
0x00000000000a0cc8 : nop dword ptr [rax + rax] ; xor rax, rax ; ret
0x000000000013ea29 : nop dword ptr [rax] ; add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000004818c : nop dword ptr [rax] ; add rax, 1 ; cmp edx, eax ; jg 0x48165 ; ret
0x00000000000abffc : nop dword ptr [rax] ; add rax, 1 ; ret
0x0000000000037655 : nop dword ptr [rax] ; add rbx, r14 ; mov rdx, r13 ; mov rsi, rbx ; mov rdi, r12 ; call r15
0x0000000000146fdc : nop dword ptr [rax] ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000013d879 : nop dword ptr [rax] ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000071845 : nop dword ptr [rax] ; add rsp, 8 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00000000001726c5 : nop dword ptr [rax] ; add rsp, 8 ; ret
0x00000000001307f4 : nop dword ptr [rax] ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000350c9 : nop dword ptr [rax] ; addss xmm0, xmm0 ; ret
0x000000000016ccec : nop dword ptr [rax] ; and eax, 0xff ; and ecx, 0xff ; sub eax, ecx ; ret
0x00000000000ac62d : nop dword ptr [rax] ; and rax, 0x1f ; je 0xac6a1 ; test al, 0xf0 ; jne 0xac671 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000090dd9 : nop dword ptr [rax] ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000090df9 : nop dword ptr [rax] ; bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000090e1c : nop dword ptr [rax] ; bsf eax, eax ; sub rdx, rax ; jbe 0x90e61 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000000a0c39 : nop dword ptr [rax] ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x00000000000a0c49 : nop dword ptr [rax] ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x00000000001462f4 : nop dword ptr [rax] ; call qword ptr [rax]
0x0000000000173389 : nop dword ptr [rax] ; call qword ptr [rbx]
0x00000000001177f9 : nop dword ptr [rax] ; cmp eax, 0xff ; jne 0x117806 ; xor eax, eax ; leave ; ret
0x00000000000f7efc : nop dword ptr [rax] ; cmp esi, 2 ; mov eax, 0x16 ; jbe 0xf7f1f ; ret
0x000000000007d7cd : nop dword ptr [rax] ; cmp qword ptr [rdi + 0x38], 0 ; je 0x7d7ea ; ret
0x00000000001194ad : nop dword ptr [rax] ; cmp rdx, 0xfff ; jbe 0x1194cc ; jmp 0x456de
0x00000000000353f9 : nop dword ptr [rax] ; fadd st(0) ; ret
0x0000000000050e65 : nop dword ptr [rax] ; lea eax, dword ptr [rdi - 1] ; xor edx, edx ; div ecx ; add r8d, eax ; mov eax, r8d ; ret
0x00000000000ac905 : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000ac8f5 : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000ac8fd : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a0465 : nop dword ptr [rax] ; mov byte ptr [rcx - 1], 0 ; mov qword ptr [rdx], rcx ; ret
0x00000000000d6975 : nop dword ptr [rax] ; mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x00000000000a0949 : nop dword ptr [rax] ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x0000000000134c3d : nop dword ptr [rax] ; mov dword ptr [rcx + 4], 0 ; mov eax, 1 ; ret
0x00000000000f7f0c : nop dword ptr [rax] ; mov dword ptr [rdi + 0x10c], esi ; xor eax, eax ; ret
0x000000000013795d : nop dword ptr [rax] ; mov dword ptr [rdi + 4], 0 ; mov eax, 1 ; ret
0x0000000000071d99 : nop dword ptr [rax] ; mov dword ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000a098c : nop dword ptr [rax] ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000086829 : nop dword ptr [rax] ; mov dword ptr [rip + 0x33cf6e], 0 ; ret
0x000000000012ff95 : nop dword ptr [rax] ; mov dword ptr [rsi], 0x10 ; mov qword ptr [rsi + 8], rax ; ret
0x00000000000a8499 : nop dword ptr [rax] ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000117604 : nop dword ptr [rax] ; mov eax, 0x16 ; ret
0x00000000000ce18c : nop dword ptr [rax] ; mov eax, 0x6e ; syscall ; ret
0x00000000000ce975 : nop dword ptr [rax] ; mov eax, 0x7e ; ret
0x00000000000dfc81 : nop dword ptr [rax] ; mov eax, 0xc ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000126671 : nop dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000036c14 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x00000000000abd19 : nop dword ptr [rax] ; mov eax, 1 ; jg 0xabd39 ; neg eax ; ret
0x00000000000f71c4 : nop dword ptr [rax] ; mov eax, 1 ; pop rbx ; ret
0x0000000000078cac : nop dword ptr [rax] ; mov eax, 1 ; ret
0x000000000013073d : nop dword ptr [rax] ; mov eax, 2 ; ret
0x0000000000021425 : nop dword ptr [rax] ; mov eax, 8 ; ret
0x0000000000134c19 : nop dword ptr [rax] ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000116e29 : nop dword ptr [rax] ; mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0x116e4f ; ret
0x00000000000f7e1c : nop dword ptr [rax] ; mov eax, dword ptr [rdi + 0x10c] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000013ea39 : nop dword ptr [rax] ; mov eax, dword ptr [rdi + 0x28] ; ret
0x0000000000078ce9 : nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x000000000013793d : nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000c8f7d : nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; ret
0x00000000000798f9 : nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x0000000000075274 : nop dword ptr [rax] ; mov eax, dword ptr [rdx] ; ret
0x00000000001726dc : nop dword ptr [rax] ; mov eax, dword ptr [rip + 0x25404a] ; test eax, eax ; jne 0x1726ff ; ret
0x000000000012ec9c : nop dword ptr [rax] ; mov eax, dword ptr [rip + 0x297116] ; test eax, eax ; je 0x12ecbe ; ret
0x00000000000355fc : nop dword ptr [rax] ; mov eax, dword ptr [rip + 0x39112a] ; test eax, eax ; jne 0x3561f ; ret
0x00000000000f7f19 : nop dword ptr [rax] ; mov eax, dword ptr [rsi] ; mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x00000000000a083c : nop dword ptr [rax] ; mov eax, dword ptr [rsp + 0x10] ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000365bc : nop dword ptr [rax] ; mov eax, ecx ; ret
0x000000000002de8d : nop dword ptr [rax] ; mov eax, edi ; and eax, 0x7f ; ret
0x000000000011b20c : nop dword ptr [rax] ; mov eax, edi ; bswap eax ; ret
0x0000000000071559 : nop dword ptr [rax] ; mov eax, edi ; ret
0x000000000013e79c : nop dword ptr [rax] ; mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x13e7bd ; xor eax, eax ; ret
0x000000000013e7dc : nop dword ptr [rax] ; mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x13e7fd ; xor eax, eax ; ret
0x00000000000a60cd : nop dword ptr [rax] ; mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000015b509 : nop dword ptr [rax] ; mov edx, dword ptr [rsi + 1] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b499 : nop dword ptr [rax] ; mov edx, dword ptr [rsi + 2] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b429 : nop dword ptr [rax] ; mov edx, dword ptr [rsi + 3] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000000a6d6d : nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000785ad : nop dword ptr [rax] ; mov edx, eax ; jmp 0x7853a
0x0000000000056899 : nop dword ptr [rax] ; mov qword ptr [rdi], rcx ; mov eax, 0xffffffff ; ret
0x00000000000c384c : nop dword ptr [rax] ; mov r10d, eax ; jmp 0xc3828
0x000000000002e9f5 : nop dword ptr [rax] ; mov r13, rbp ; jmp 0x2e9c6
0x00000000000c2ba4 : nop dword ptr [rax] ; mov r8d, dword ptr [r15 + 0x10] ; jmp 0xc2aa8
0x000000000013b2a4 : nop dword ptr [rax] ; mov rax, qword ptr [r15 + 8] ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000010775d : nop dword ptr [rax] ; mov rax, qword ptr [rax + 0x108] ; ret
0x0000000000107751 : nop dword ptr [rax] ; mov rax, qword ptr [rax + 0x58] ; ret
0x000000000013dc3d : nop dword ptr [rax] ; mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000130db9 : nop dword ptr [rax] ; mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x00000000000299fc : nop dword ptr [rax] ; mov rax, qword ptr [rip + 0x398ec9] ; ret
0x000000000010c894 : nop dword ptr [rax] ; mov rax, qword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000002cb31 : nop dword ptr [rax] ; mov rax, qword ptr [rsi + rax*8 + 0x80] ; ret
0x0000000000104641 : nop dword ptr [rax] ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a919 : nop dword ptr [rax] ; mov rax, rdi ; cqo ; idiv rsi ; ret
0x0000000000097c31 : nop dword ptr [rax] ; mov rax, rdi ; ret
0x000000000008001c : nop dword ptr [rax] ; mov rax, rdx ; ret
0x00000000000a6dcd : nop dword ptr [rax] ; mov rcx, qword ptr [rsi] ; mov dx, word ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a611d : nop dword ptr [rax] ; mov rcx, qword ptr [rsi] ; mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a612d : nop dword ptr [rax] ; mov rcx, qword ptr [rsi] ; mov rdx, qword ptr [rsi + 5] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000001358cc : nop dword ptr [rax] ; mov rdi, qword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1358ee ; ret
0x000000000013ba6c : nop dword ptr [rax] ; mov rdi, qword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x13ba8e ; ret
0x00000000001236b9 : nop dword ptr [rax] ; mov rdi, qword ptr [rsp + 0x28] ; call 0x1f9c6
0x0000000000116e39 : nop dword ptr [rax] ; mov rdx, qword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x000000000008b554 : nop dword ptr [rax] ; mov rdx, qword ptr [rip + 0x3359f9] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000015b3b9 : nop dword ptr [rax] ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000877ec : nop dword ptr [rax] ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, r12 ; call rax
0x0000000000090f6d : nop dword ptr [rax] ; movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000007c685 : nop dword ptr [rax] ; movzx eax, byte ptr [rdx] ; ret
0x00000000000aace9 : nop dword ptr [rax] ; movzx eax, cl ; pop rbx ; ret
0x000000000015b6c9 : nop dword ptr [rax] ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000015b659 : nop dword ptr [rax] ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000007f153 : nop dword ptr [rax] ; nop word ptr cs:[rax + rax] ; mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000165f23 : nop dword ptr [rax] ; nop word ptr cs:[rax + rax] ; mov word ptr [rcx], dx ; ret
0x00000000000a7043 : nop dword ptr [rax] ; nop word ptr cs:[rax + rax] ; mov word ptr [rdi], dx ; ret
0x000000000012deb3 : nop dword ptr [rax] ; nop word ptr cs:[rax + rax] ; ret
0x00000000000a9ee3 : nop dword ptr [rax] ; nop word ptr cs:[rax + rax] ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000000aa832 : nop dword ptr [rax] ; nop word ptr cs:[rax + rax] ; xor eax, eax ; ret
0x00000000000a0cc2 : nop dword ptr [rax] ; nop word ptr cs:[rax + rax] ; xor rax, rax ; ret
0x000000000006effd : nop dword ptr [rax] ; or dword ptr [rdi], 0x20 ; ret
0x000000000003515d : nop dword ptr [rax] ; pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x0000000000088b64 : nop dword ptr [rax] ; pop rbx ; mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x00000000000874e4 : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000ba3ac : nop dword ptr [rax] ; pop rbx ; ret
0x00000000000e98bc : nop dword ptr [rax] ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000002c34c : nop dword ptr [rax] ; push rbx ; mov rax, qword ptr [rdi + 0x20] ; mov rbx, rdi ; test rax, rax ; je 0x2c370 ; call rax
0x000000000002bae1 : nop dword ptr [rax] ; ret
0x0000000000077249 : nop dword ptr [rax] ; shr edx, 4 ; and edx, 1 ; mov eax, edx ; ret
0x0000000000077339 : nop dword ptr [rax] ; shr edx, 5 ; and edx, 1 ; mov eax, edx ; ret
0x000000000010c994 : nop dword ptr [rax] ; sub edi, 0x30 ; xor eax, eax ; cmp edi, 9 ; setbe al ; ret
0x00000000000ceb5c : nop dword ptr [rax] ; test edi, edi ; mov eax, 1 ; js 0xceb7e ; ret
0x0000000000034f5d : nop dword ptr [rax] ; test edx, 0x7fffff ; je 0x34f5d ; ret
0x000000000008dbcc : nop dword ptr [rax] ; test rsi, rsi ; jne 0x8dbe5 ; xor rax, rax ; ret
0x00000000000a2dcd : nop dword ptr [rax] ; xor ah, ah ; mov byte ptr [rdx + 2], ah ; mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000000c7f51 : nop dword ptr [rax] ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000121231 : nop dword ptr [rax] ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000000000db285 : nop dword ptr [rax] ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000d8bad : nop dword ptr [rax] ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000073c05 : nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000078cd9 : nop dword ptr [rax] ; xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x000000000006bb75 : nop dword ptr [rax] ; xor ebx, ebx ; add rsp, 0x1008 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000034d7d : nop dword ptr [rax] ; xor ecx, ecx ; addsd xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x000000000011a355 : nop dword ptr [rax] ; xor esi, esi ; mov rax, rsi ; ret
0x0000000000097fa9 : nop dword ptr [rax] ; xor rax, rax ; ret
0x00000000000ac007 : nop dword ptr cs:[rax + rax] ; add rax, 3 ; ret
0x00000000000798d7 : nop dword ptr cs:[rax + rax] ; and dword ptr [rdi], 0xffffffcf ; ret
0x0000000000097f67 : nop dword ptr cs:[rax + rax] ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x0000000000136057 : nop dword ptr cs:[rax + rax] ; cmp dword ptr [rsi + 0x10], 0xc ; je 0x136081 ; xor eax, eax ; ret
0x000000000016ef57 : nop dword ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000016ef67 : nop dword ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000016ef77 : nop dword ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000016ef87 : nop dword ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000016ef97 : nop dword ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000016eed7 : nop dword ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000016eee7 : nop dword ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000016eef7 : nop dword ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000016ef07 : nop dword ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000016ef17 : nop dword ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000016ef27 : nop dword ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000016ef37 : nop dword ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000016ef47 : nop dword ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000ac657 : nop dword ptr cs:[rax + rax] ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000ac677 : nop dword ptr cs:[rax + rax] ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000ac667 : nop dword ptr cs:[rax + rax] ; lea rax, qword ptr [rdi - 8] ; ret
0x000000000016eec7 : nop dword ptr cs:[rax + rax] ; lea rax, qword ptr [rdi] ; ret
0x00000000000204e7 : nop dword ptr cs:[rax + rax] ; lea rax, qword ptr [rip + 0x16a074] ; ret
0x0000000000168277 : nop dword ptr cs:[rax + rax] ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000163f47 : nop dword ptr cs:[rax + rax] ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000165f17 : nop dword ptr cs:[rax + rax] ; mov byte ptr [rcx], dl ; ret
0x0000000000079d07 : nop dword ptr cs:[rax + rax] ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000a7667 : nop dword ptr cs:[rax + rax] ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000a6067 : nop dword ptr cs:[rax + rax] ; mov byte ptr [rdi], dh ; ret
0x00000000000a7037 : nop dword ptr cs:[rax + rax] ; mov byte ptr [rdi], dl ; ret
0x00000000000a8487 : nop dword ptr cs:[rax + rax] ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a6d37 : nop dword ptr cs:[rax + rax] ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000165f57 : nop dword ptr cs:[rax + rax] ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x0000000000165f67 : nop dword ptr cs:[rax + rax] ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x00000000000a7057 : nop dword ptr cs:[rax + rax] ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000a7077 : nop dword ptr cs:[rax + rax] ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a7087 : nop dword ptr cs:[rax + rax] ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a7067 : nop dword ptr cs:[rax + rax] ; mov dword ptr [rdi], edx ; ret
0x00000000000a6077 : nop dword ptr cs:[rax + rax] ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000ce987 : nop dword ptr cs:[rax + rax] ; mov eax, 0xfc17 ; ret
0x000000000007f117 : nop dword ptr cs:[rax + rax] ; mov eax, 0xffffffff ; ret
0x000000000012de97 : nop dword ptr cs:[rax + rax] ; mov eax, 1 ; ret
0x0000000000130747 : nop dword ptr cs:[rax + rax] ; mov eax, 2 ; ret
0x00000000001682b7 : nop dword ptr cs:[rax + rax] ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x000000000007ee77 : nop dword ptr cs:[rax + rax] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000000abce7 : nop dword ptr cs:[rax + rax] ; mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xabd31 ; ret
0x00000000000f7357 : nop dword ptr cs:[rax + rax] ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000fd967 : nop dword ptr cs:[rax + rax] ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x000000000010e9a7 : nop dword ptr cs:[rax + rax] ; mov eax, edx ; ret
0x00000000000a60a7 : nop dword ptr cs:[rax + rax] ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000015ae57 : nop dword ptr cs:[rax + rax] ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a84c7 : nop dword ptr cs:[rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000165f97 : nop dword ptr cs:[rax + rax] ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x0000000000165f87 : nop dword ptr cs:[rax + rax] ; mov qword ptr [rcx], rdx ; ret
0x00000000000a70b7 : nop dword ptr cs:[rax + rax] ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a70a7 : nop dword ptr cs:[rax + rax] ; mov qword ptr [rdi], rdx ; ret
0x000000000011b1b7 : nop dword ptr cs:[rax + rax] ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x000000000007f0f7 : nop dword ptr cs:[rax + rax] ; mov rax, -1 ; ret
0x00000000000ac027 : nop dword ptr cs:[rax + rax] ; mov rax, 1 ; ret
0x000000000013e657 : nop dword ptr cs:[rax + rax] ; mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000076857 : nop dword ptr cs:[rax + rax] ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007f157 : nop dword ptr cs:[rax + rax] ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000007f137 : nop dword ptr cs:[rax + rax] ; mov rax, qword ptr [rip + 0x3433b9] ; ret
0x000000000007f167 : nop dword ptr cs:[rax + rax] ; mov rax, rdi ; ret
0x0000000000155127 : nop dword ptr cs:[rax + rax] ; mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000086df7 : nop dword ptr cs:[rax + rax] ; mov rsi, qword ptr [rsp + 0x48] ; call rax
0x0000000000165f37 : nop dword ptr cs:[rax + rax] ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x0000000000165f27 : nop dword ptr cs:[rax + rax] ; mov word ptr [rcx], dx ; ret
0x00000000000a7047 : nop dword ptr cs:[rax + rax] ; mov word ptr [rdi], dx ; ret
0x00000000000a7127 : nop dword ptr cs:[rax + rax] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000008d447 : nop dword ptr cs:[rax + rax] ; movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000015afe7 : nop dword ptr cs:[rax + rax] ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000015af67 : nop dword ptr cs:[rax + rax] ; movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000036bb5 : nop dword ptr cs:[rax + rax] ; nop ; mov eax, dword ptr [rip + 0x38a4c6] ; ret
0x000000000011b216 : nop dword ptr cs:[rax + rax] ; nop ; mov eax, edi ; ror ax, 8 ; ret
0x000000000013e642 : nop dword ptr cs:[rax + rax] ; nop dword ptr [rax + rax] ; ret
0x000000000012e5d3 : nop dword ptr cs:[rax + rax] ; nop dword ptr [rax] ; ret
0x000000000004adc7 : nop dword ptr cs:[rax + rax] ; ret
0x00000000000a9ee7 : nop dword ptr cs:[rax + rax] ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x000000000002de97 : nop dword ptr cs:[rax + rax] ; xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x0000000000131317 : nop dword ptr cs:[rax + rax] ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fd0a7 : nop dword ptr cs:[rax + rax] ; xor eax, eax ; pop rbx ; ret
0x000000000003b027 : nop dword ptr cs:[rax + rax] ; xor eax, eax ; ret
0x000000000007c367 : nop dword ptr cs:[rax + rax] ; xor eax, eax ; test rdx, rdx ; jne 0x7c390 ; ret
0x00000000000a0cc7 : nop dword ptr cs:[rax + rax] ; xor rax, rax ; ret
0x0000000000048542 : nop word ptr [rax + rax] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013d7fa : nop word ptr [rax + rax] ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012d742 : nop word ptr [rax + rax] ; add rsp, 8 ; mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000008d807 : nop word ptr [rax + rax] ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000090de7 : nop word ptr [rax + rax] ; bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x00000000000a0c27 : nop word ptr [rax + rax] ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000055f7a : nop word ptr [rax + rax] ; call 0x721f8
0x000000000007d572 : nop word ptr [rax + rax] ; call 0x79878
0x0000000000146637 : nop word ptr [rax + rax] ; call rax
0x000000000002cb22 : nop word ptr [rax + rax] ; lea rax, qword ptr [rip + 0x15def6] ; ret
0x000000000012d7da : nop word ptr [rax + rax] ; lea rax, qword ptr [rip + 0x5d23e] ; ret
0x00000000000a08ca : nop word ptr [rax + rax] ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000a080a : nop word ptr [rax + rax] ; mov byte ptr [rdi], sil ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000165f77 : nop word ptr [rax + rax] ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x0000000000165f47 : nop word ptr [rax + rax] ; mov dword ptr [rcx], edx ; ret
0x00000000000a08ba : nop word ptr [rax + rax] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x00000000000a08aa : nop word ptr [rax + rax] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x0000000000130027 : nop word ptr [rax + rax] ; mov dword ptr [rsi], 0xa ; ret
0x0000000000130047 : nop word ptr [rax + rax] ; mov dword ptr [rsi], 0xc ; ret
0x0000000000130037 : nop word ptr [rax + rax] ; mov dword ptr [rsi], 8 ; ret
0x00000000000a9f0a : nop word ptr [rax + rax] ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x0000000000089ad7 : nop word ptr [rax + rax] ; mov eax, 0x16 ; ret
0x00000000000dfd67 : nop word ptr [rax + rax] ; mov eax, 0xc ; ret
0x000000000011b1a7 : nop word ptr [rax + rax] ; mov eax, 0xca ; ret
0x000000000007d887 : nop word ptr [rax + rax] ; mov eax, 0xffffffff ; ret
0x000000000013d25a : nop word ptr [rax + rax] ; mov eax, 1 ; ret
0x000000000016b667 : nop word ptr [rax + rax] ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000078cb7 : nop word ptr [rax + rax] ; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x0000000000036bc7 : nop word ptr [rax + rax] ; mov eax, dword ptr [rip + 0x38a4b2] ; ret
0x00000000000cd24a : nop word ptr [rax + rax] ; mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000a609a : nop word ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000165fc7 : nop word ptr [rax + rax] ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x0000000000165fd7 : nop word ptr [rax + rax] ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x0000000000165fa7 : nop word ptr [rax + rax] ; mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x00000000000a7097 : nop word ptr [rax + rax] ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000a70e7 : nop word ptr [rax + rax] ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a70f7 : nop word ptr [rax + rax] ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a70c7 : nop word ptr [rax + rax] ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x000000000006efb2 : nop word ptr [rax + rax] ; mov rax, -1 ; ret
0x0000000000116672 : nop word ptr [rax + rax] ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000013abba : nop word ptr [rax + rax] ; mov rax, qword ptr [rip + 0x2863c1] ; add rsp, 8 ; ret
0x00000000000215b7 : nop word ptr [rax + rax] ; mov rax, qword ptr [rip + 0x3a4d59] ; ret
0x000000000003419a : nop word ptr [rax + rax] ; mov rax, rcx ; ret
0x00000000000a07b7 : nop word ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000000a08d7 : nop word ptr [rax + rax] ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x00000000001266fa : nop word ptr [rax + rax] ; movsxd rdx, edx ; mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x000000000008f6b7 : nop word ptr [rax + rax] ; movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000012ec8a : nop word ptr [rax + rax] ; pop rbx ; ret
0x0000000000117657 : nop word ptr [rax + rax] ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x00000000000474e2 : nop word ptr [rax + rax] ; ret
0x000000000010c052 : nop word ptr [rax + rax] ; sub edi, 0x30 ; xor eax, eax ; cmp edi, 9 ; setbe al ; ret
0x000000000007e542 : nop word ptr [rax + rax] ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x00000000000743f2 : nop word ptr [rax + rax] ; sub r8, rcx ; sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000013edba : nop word ptr [rax + rax] ; test edx, edx ; jne 0x13eddf ; mov eax, 1 ; ret
0x000000000008993a : nop word ptr [rax + rax] ; test sil, 7 ; mov eax, 0x16 ; je 0x89961 ; ret
0x0000000000146a52 : nop word ptr [rax + rax] ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000000000e8f3a : nop word ptr [rax + rax] ; xor eax, eax ; add rsp, 8 ; ret
0x000000000003aa6a : nop word ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x00000000000365b2 : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000119212 : nop word ptr [rax + rax] ; xor esi, esi ; mov rax, rsi ; ret
0x00000000000abd2a : nop word ptr [rax + rax] ; xor rax, rax ; ret
0x00000000000ac006 : nop word ptr cs:[rax + rax] ; add rax, 3 ; ret
0x00000000000798d6 : nop word ptr cs:[rax + rax] ; and dword ptr [rdi], 0xffffffcf ; ret
0x000000000016ef56 : nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000016ef66 : nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000016ef76 : nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000016ef86 : nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000016ef96 : nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000016eed6 : nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000016eee6 : nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000016eef6 : nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000016ef06 : nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000016ef16 : nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000016ef26 : nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000016ef36 : nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000016ef46 : nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000ac656 : nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000ac676 : nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000ac666 : nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi - 8] ; ret
0x000000000016eec6 : nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi] ; ret
0x00000000000204e6 : nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rip + 0x16a074] ; ret
0x0000000000168276 : nop word ptr cs:[rax + rax] ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000163f46 : nop word ptr cs:[rax + rax] ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000165f16 : nop word ptr cs:[rax + rax] ; mov byte ptr [rcx], dl ; ret
0x0000000000079d06 : nop word ptr cs:[rax + rax] ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000a7666 : nop word ptr cs:[rax + rax] ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000a6066 : nop word ptr cs:[rax + rax] ; mov byte ptr [rdi], dh ; ret
0x00000000000a7036 : nop word ptr cs:[rax + rax] ; mov byte ptr [rdi], dl ; ret
0x00000000000a6d36 : nop word ptr cs:[rax + rax] ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000165f56 : nop word ptr cs:[rax + rax] ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x0000000000165f66 : nop word ptr cs:[rax + rax] ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x00000000000a7056 : nop word ptr cs:[rax + rax] ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000a7076 : nop word ptr cs:[rax + rax] ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a7086 : nop word ptr cs:[rax + rax] ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a7066 : nop word ptr cs:[rax + rax] ; mov dword ptr [rdi], edx ; ret
0x00000000000a6076 : nop word ptr cs:[rax + rax] ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000ce986 : nop word ptr cs:[rax + rax] ; mov eax, 0xfc17 ; ret
0x000000000007f116 : nop word ptr cs:[rax + rax] ; mov eax, 0xffffffff ; ret
0x000000000012de96 : nop word ptr cs:[rax + rax] ; mov eax, 1 ; ret
0x0000000000130746 : nop word ptr cs:[rax + rax] ; mov eax, 2 ; ret
0x000000000007ee76 : nop word ptr cs:[rax + rax] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000000f7356 : nop word ptr cs:[rax + rax] ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000010e9a6 : nop word ptr cs:[rax + rax] ; mov eax, edx ; ret
0x00000000000a60a6 : nop word ptr cs:[rax + rax] ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000015ae56 : nop word ptr cs:[rax + rax] ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000165f96 : nop word ptr cs:[rax + rax] ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x0000000000165f86 : nop word ptr cs:[rax + rax] ; mov qword ptr [rcx], rdx ; ret
0x00000000000a70b6 : nop word ptr cs:[rax + rax] ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a70a6 : nop word ptr cs:[rax + rax] ; mov qword ptr [rdi], rdx ; ret
0x000000000011b1b6 : nop word ptr cs:[rax + rax] ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x000000000007f0f6 : nop word ptr cs:[rax + rax] ; mov rax, -1 ; ret
0x00000000000ac026 : nop word ptr cs:[rax + rax] ; mov rax, 1 ; ret
0x0000000000076856 : nop word ptr cs:[rax + rax] ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007f156 : nop word ptr cs:[rax + rax] ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000007f136 : nop word ptr cs:[rax + rax] ; mov rax, qword ptr [rip + 0x3433b9] ; ret
0x000000000007f166 : nop word ptr cs:[rax + rax] ; mov rax, rdi ; ret
0x0000000000086df6 : nop word ptr cs:[rax + rax] ; mov rsi, qword ptr [rsp + 0x48] ; call rax
0x0000000000165f36 : nop word ptr cs:[rax + rax] ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x0000000000165f26 : nop word ptr cs:[rax + rax] ; mov word ptr [rcx], dx ; ret
0x00000000000a7046 : nop word ptr cs:[rax + rax] ; mov word ptr [rdi], dx ; ret
0x00000000000a7126 : nop word ptr cs:[rax + rax] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000015afe6 : nop word ptr cs:[rax + rax] ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000011b215 : nop word ptr cs:[rax + rax] ; nop ; mov eax, edi ; ror ax, 8 ; ret
0x000000000013e641 : nop word ptr cs:[rax + rax] ; nop dword ptr [rax + rax] ; ret
0x000000000012e5d2 : nop word ptr cs:[rax + rax] ; nop dword ptr [rax] ; ret
0x000000000004adc6 : nop word ptr cs:[rax + rax] ; ret
0x00000000000a9ee6 : nop word ptr cs:[rax + rax] ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x0000000000131316 : nop word ptr cs:[rax + rax] ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fd0a6 : nop word ptr cs:[rax + rax] ; xor eax, eax ; pop rbx ; ret
0x000000000003b026 : nop word ptr cs:[rax + rax] ; xor eax, eax ; ret
0x000000000007c366 : nop word ptr cs:[rax + rax] ; xor eax, eax ; test rdx, rdx ; jne 0x7c391 ; ret
0x00000000000a0cc6 : nop word ptr cs:[rax + rax] ; xor rax, rax ; ret
0x000000000009829a : not eax ; add rbx, rax ; jne 0x98296 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000362b3 : not eax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x0000000000098299 : not rax ; add rbx, rax ; jne 0x98297 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000362b2 : not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000001937c1 : or ah, bh ; jmp qword ptr [rax]
0x0000000000020402 : or ah, byte ptr [rbx + 0x3a] ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x000000000002d9d0 : or ah, byte ptr [rbx] ; ja 0x2d9f0 ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000011821d : or al, 0 ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000148ab7 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c6c9 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000148ae5 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000008072 : or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x45
0x0000000000088d7c : or al, 0 ; add byte ptr [rax], al ; add rsp, 0x10 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000122f3a : or al, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000011058a : or al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000fe4aa : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000858dc : or al, 0 ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x00000000000db2ba : or al, 0 ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000d6dfd : or al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000e9715 : or al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000dfc89 : or al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008c010 : or al, 0 ; add byte ptr [rax], al ; ret
0x0000000000089e0f : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008bb28 : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008576a : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007f271 : or al, 0 ; add byte ptr [rdx + rdx + 0x48], dh ; mov eax, dword ptr [rdi + 8] ; cmp rax, rdx ; jae 0x7f2b1 ; movzx eax, byte ptr [rax] ; ret
0x00000000000c0740 : or al, 0 ; add rax, rsi ; jmp rax
0x00000000000c59f6 : or al, 0 ; mov edx, ecx ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000c5a66 : or al, 0 ; mov esi, edx ; movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x00000000000ca1bf : or al, 0 ; mov rdi, r12 ; cmove rcx, rax ; xor eax, eax ; call 0x5648d
0x00000000000c1668 : or al, 0 ; movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000c3962 : or al, 0 ; movzx edi, dl ; movsxd rax, dword ptr [r8 + rdi*4] ; add rax, r8 ; jmp rax
0x00000000000c38fd : or al, 0 ; movzx edx, sil ; movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x0000000000198994 : or al, 0x10 ; add al, byte ptr [rax] ; xchg eax, esp ; ret
0x000000000004b512 : or al, 0x17 ; add rdx, r13 ; call qword ptr [r10 + rax*8]
0x00000000001ab664 : or al, 0x1d ; add dword ptr [rax], eax ; or bl, cl ; hlt ; jmp qword ptr [rcx]
0x0000000000085a30 : or al, 0x1e ; add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000000858c0 : or al, 0x1e ; mov rax, rsi ; pop rbx ; ret
0x000000000007a354 : or al, 0x24 ; mov rdi, rbx ; call rax
0x0000000000187ce4 : or al, 0x2f ; cmc ; push qword ptr [rdi - 0x14000ad1] ; cmc ; call rax
0x00000000000ada44 : or al, 0x31 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000801a4 : or al, 0x34 ; add byte ptr [rax - 0x77], cl ; cmc ; xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x00000000000abc12 : or al, 0x3b ; or al, 0xf ; test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x00000000001ad564 : or al, 0x3c ; add dword ptr [rax], eax ; clc ; push rdi ; cmc ; jmp qword ptr [rcx]
0x0000000000107733 : or al, 0x48 ; cmp edi, edx ; jne 0x107732 ; mov rax, qword ptr [rax + 8] ; ret
0x000000000007d3a4 : or al, 0x48 ; mov edi, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000010b0e2 : or al, 0x48 ; mov edx, dword ptr [rip + 0x2b92ce] ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000001ae764 : or al, 0x4e ; add dword ptr [rax], eax ; pop rax ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000000ba3a8 : or al, 0x56 ; idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x0000000000131315 : or al, 0x66 ; nop dword ptr cs:[rax + rax] ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000909c0 : or al, 0x74 ; or ecx, dword ptr [rdx + 0xc38034a] ; or al, 0x75 ; fisttp qword ptr [rax - 1] ; ret 0xff48
0x00000000001199b8 : or al, 0x75 ; cdq ; mov rax, rdi ; ret
0x00000000000909c8 : or al, 0x75 ; fisttp qword ptr [rax - 1] ; ret 0xff48
0x000000000009758b : or al, 0x80 ; jb 0x975ab ; sub al, bl ; nop dword ptr [rax] ; ret
0x00000000000aad23 : or al, 0x83 ; loop 0xaad41 ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000aac8b : or al, 0x83 ; loopne 0xaaca9 ; movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x000000000005713d : or al, 0x85 ; add byte ptr [rax], 0 ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000fdf36 : or al, 0x85 ; sar byte ptr [rax + 0xd], cl ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a08a2 : or al, 0x88 ; add r9, rax ; jmp r9
0x000000000010c720 : or al, 0x89 ; shl dword ptr [rbx], 0x4e ; adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000093e94 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000003cf7f : or al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000000401c4 : or al, 0x8d ; push rsi ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000001a2b64 : or al, 0x92 ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; std ; jmp rdi
0x00000000000adb26 : or al, 0x97 ; test r9d, r9d ; jne 0xadaeb ; mov rax, rdx ; ret
0x00000000001a3c64 : or al, 0xa3 ; add byte ptr [rax], al ; pop rax ; outsd dx, dword ptr [rsi] ; out dx, al ; jmp qword ptr [rdi]
0x00000000001a4164 : or al, 0xa8 ; add byte ptr [rax], al ; clc ; xchg eax, edx ; out dx, al ; call qword ptr [rax]
0x000000000003b590 : or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x000000000013817e : or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000013ecdb : or al, 0xba ; add dword ptr [rax], eax ; add byte ptr [rax], al ; bswap eax ; mov dword ptr [rbx], eax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00000000000484e2 : or al, 0xc0 ; mov qword ptr [rsi + rax*8], rcx ; add rax, 1 ; cmp rax, rdx ; jne 0x484f1 ; xor eax, eax ; ret
0x00000000000367bf : or al, 0xc2 ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x000000000016ef83 : or al, 0xc3 ; nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000484e6 : or al, 0xc6 ; add rax, 1 ; cmp rax, rdx ; jne 0x484ed ; xor eax, eax ; ret
0x00000000000367bb : or al, 0xc6 ; and rcx, qword ptr [rdx + rax*8] ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x0000000000036aab : or al, 0xc6 ; or rcx, qword ptr [rdx + rax*8] ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x00000000000867b5 : or al, 0xc7 ; add eax, 0x33cff8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001a8864 : or al, 0xef ; add byte ptr [rax], al ; sbb byte ptr [rcx], bh ; call rsi
0x00000000001311fd : or al, 0xf ; enter 0x389, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000abc15 : or al, 0xf ; test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x000000000016a2b7 : or al, 0xf ; test dword ptr [rdx + 2], eax ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000000a6a23 : or al, 0xf ; test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x000000000002c177 : or al, 0xf ; xchg dword ptr [rdx], edx ; add dword ptr [rax], eax ; add byte ptr [rdi + 0x63], cl ; add al, 0x8b ; add r8, r11 ; jmp r8
0x000000000002bbff : or al, 0xf ; xchg edx, ebx ; add byte ptr [rax], al ; add byte ptr [rbx + 0x63], cl ; xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x0000000000186041 : or al, 0xf2 ; call rax
0x0000000000186035 : or al, 0xf2 ; inc dword ptr [rax + 0xc] ; push qword ptr [rax + 0xc] ; jmp qword ptr [rax - 0x2f000df4]
0x0000000000186055 : or al, 0xf2 ; inc dword ptr [rax] ; or eax, 0xd10fff2 ; jmp qword ptr [rax]
0x0000000000186045 : or al, 0xf2 ; inc dword ptr [rax] ; or eax, 0xd30fff2 ; jmp rax
0x000000000018603d : or al, 0xf2 ; jmp qword ptr [rax - 0x2f000df4]
0x0000000000186039 : or al, 0xf2 ; push qword ptr [rax + 0xc] ; jmp qword ptr [rax - 0x2f000df4]
0x0000000000186051 : or al, 0xf2 ; push rax ; or al, 0xf2 ; inc dword ptr [rax] ; or eax, 0xd10fff2 ; jmp qword ptr [rax]
0x000000000013ec51 : or al, 0xf3 ; dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000001a9164 : or al, 0xf8 ; add byte ptr [rax], al ; sbb byte ptr [rdi - 0xe], ah ; call qword ptr [rax]
0x00000000001106da : or al, 0xf8 ; dec dword ptr [rax + 1] ; imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001b6951 : or al, 0xf8 ; jmp qword ptr [rax]
0x00000000000865dc : or al, 0xfb ; call qword ptr [rax - 0x72b71077]
0x00000000001937cd : or al, 0xfc ; call qword ptr [rax]
0x00000000000f7e22 : or al, 1 ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000000884 : or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x00000000000f85a3 : or al, 1 ; add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xf85c7 ; ret
0x00000000000f7f12 : or al, 1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000047322 : or al, 5 ; add byte ptr [rax - 0x77], cl ; ret 0x3dbe
0x00000000000a6c60 : or al, 5 ; add byte ptr [rax], al ; ret
0x000000000019eed3 : or al, 7 ; or byte ptr [rcx + 0xb], al ; xor al, 0 ; add byte ptr [rax], al ; test byte ptr [rbp], dl ; add al, dh ; in al, dx ; jmp qword ptr [rax]
0x00000000000bf1f0 : or al, 8 ; mov rdx, rax ; jmp 0xbf1ff
0x000000000016ef63 : or al, bl ; nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a0463 : or al, bl ; nop dword ptr [rax] ; mov byte ptr [rcx - 1], 0 ; mov qword ptr [rdx], rcx ; ret
0x00000000000e3440 : or al, byte ptr [r8] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000019f6ad : or al, byte ptr [rax] ; add byte ptr [rax + 0x12], dh ; in eax, dx ; call qword ptr [rax]
0x0000000000037671 : or al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x0000000000104acb : or al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; std ; xor edx, edx ; xor esi, esi ; call rbx
0x0000000000147c8d : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a8a1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000147cb1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000102e0 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000144ef9 : or al, byte ptr [rax] ; add byte ptr [rax], al ; call 0xcd1ec
0x0000000000139df6 : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rax ; lea r9, qword ptr [rsp + 0x14] ; call qword ptr [r10]
0x00000000000fb269 : or al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000130032 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000102ca1 : or al, byte ptr [rax] ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x102cbe ; ret
0x00000000000ed26f : or al, byte ptr [rax] ; add byte ptr [rcx - 0x75], al ; add al, 0x85 ; ror byte ptr [rdi], 0x94 ; ret 0xf883
0x000000000017afd5 : or al, byte ptr [rax] ; add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x0000000000071779 : or al, byte ptr [rax] ; add rsp, 0x80 ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000006ea23 : or al, byte ptr [rax] ; add rsp, 0x80 ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006c714 : or al, byte ptr [rax] ; add rsp, 0x80 ; add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000007154c : or al, byte ptr [rax] ; add rsp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x000000000006c9fe : or al, byte ptr [rax] ; add rsp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x00000000000724a5 : or al, byte ptr [rax] ; add rsp, 0x80 ; mov eax, r8d ; pop rbx ; ret
0x000000000007011d : or al, byte ptr [rax] ; add rsp, 0x80 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006edf2 : or al, byte ptr [rax] ; add rsp, 0x80 ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x000000000006c456 : or al, byte ptr [rax] ; add rsp, 0x80 ; ret
0x00000000000e3441 : or al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000da733 : or al, byte ptr [rax] ; movzx ebp, bpl ; movsxd rax, dword ptr [rsi + rbp*4] ; add rax, rsi ; jmp rax
0x00000000000da817 : or al, byte ptr [rax] ; movzx r15d, r15b ; movsxd rax, dword ptr [rdx + r15*4] ; add rax, rdx ; jmp rax
0x000000000006c3ee : or al, byte ptr [rbp - 0x47f28b40] ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000008ac72 : or al, byte ptr [rcx] ; add byte ptr [rax], al ; mov rdx, rbp ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000000fa101 : or al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfa11e ; ret
0x000000000014fc87 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000003b2cf : or al, ch ; add qword ptr [r8], rax ; add byte ptr [rax - 0x75], cl ; and al, 8 ; add rsp, 0x18 ; ret
0x000000000003b31f : or al, ch ; imul eax, dword ptr [rcx], 0 ; add byte ptr [rax - 0x75], cl ; and al, 8 ; add rsp, 0x18 ; ret
0x00000000001725f5 : or al, ch ; mov ebp, 0x48ffead3 ; cmp ebx, ebp ; jb 0x1725fd ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000003b34a : or al, ch ; rol byte ptr [rcx], 0 ; add byte ptr [rax - 0x73], cl ; add eax, 0x38b0ff ; add rsp, 8 ; ret
0x000000000011821a : or al, ch ; ror byte ptr [rax + rax], 1 ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000076fd4 : or al, ch ; salc ; mov edx, edi ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001039cf : or al, ch ; sbb eax, dword ptr [rcx] ; add byte ptr [rax], al ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x000000000003b27f : or al, ch ; sti ; add byte ptr [rax], al ; add dl, dh ; movups xmm0, xmmword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x0000000000077c24 : or al, ch ; xchg byte ptr [rbp - 6], bh ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001937c5 : or bh, ah ; push qword ptr [rax + 0xb] ; cld ; inc eax ; or al, 0xfc ; call qword ptr [rax]
0x000000000013e4e7 : or bh, bh ; push rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013e140 : or bh, bh ; push rax ; test eax, eax ; jne 0x13e1b0 ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013e210 : or bh, bh ; push rax ; test eax, eax ; jne 0x13e280 ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013e2e0 : or bh, bh ; push rax ; test eax, eax ; jne 0x13e350 ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013e3a0 : or bh, bh ; push rax ; test eax, eax ; jne 0x13e410 ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000006eeea : or bh, bl ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x00000000000790ed : or bh, byte ptr [rax - 1] ; ret
0x0000000000116a22 : or bh, ch ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x116a3a ; xor eax, eax ; ret
0x000000000013ac4e : or bl, al ; mov rax, qword ptr [rip + 0x286241] ; add rsp, 8 ; ret
0x000000000013ac1e : or bl, al ; mov rax, qword ptr [rip + 0x2862d9] ; add rsp, 8 ; ret
0x000000000013abec : or bl, al ; nop ; mov rax, qword ptr [rip + 0x2863e9] ; add rsp, 8 ; ret
0x000000000016ef43 : or bl, al ; nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000ffc16 : or bl, al ; nop dword ptr [rax + rax] ; mov eax, 1 ; ret
0x0000000000165fb6 : or bl, al ; nop dword ptr [rax + rax] ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x00000000000a70d6 : or bl, al ; nop dword ptr [rax + rax] ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000143f76 : or bl, al ; nop dword ptr [rax + rax] ; ret
0x0000000000087936 : or bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000ac903 : or bl, al ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000012ff93 : or bl, al ; nop dword ptr [rax] ; mov dword ptr [rsi], 0x10 ; mov qword ptr [rsi + 8], rax ; ret
0x000000000013793b : or bl, al ; nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000008001a : or bl, al ; nop dword ptr [rax] ; mov rax, rdx ; ret
0x00000000000a0808 : or bl, al ; nop word ptr [rax + rax] ; mov byte ptr [rdi], sil ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000010e9a4 : or bl, al ; nop word ptr cs:[rax + rax] ; mov eax, edx ; ret
0x000000000012ff92 : or bl, r8b ; nop dword ptr [rax] ; mov dword ptr [rsi], 0x10 ; mov qword ptr [rsi + 8], rax ; ret
0x00000000000ac8dd : or byte ptr [r10 + r10 + 0x3b], r14b ; ja 0xac8f7 ; cmove rax, rcx ; ret
0x000000000012eba8 : or byte ptr [r10], r13b ; push 0x19 ; call qword ptr [rax]
0x000000000007c677 : or byte ptr [r11 + 0x5d], bl ; movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a2da6 : or byte ptr [r14 + 0xf], spl ; adc eax, dword ptr [rdx] ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a5ab0 : or byte ptr [r14 + 0xf], spl ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000000a5b91 : or byte ptr [r14 + 0xf], spl ; adc ecx, dword ptr [rdx + 8] ; xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00000000000a2ebf : or byte ptr [r14 - 0x77], spl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000007f278 : or byte ptr [r8 + 0x39], r9b ; sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x000000000007b512 : or byte ptr [r8 + 0x3b], r9b ; adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x00000000000d69e1 : or byte ptr [r8 + r15*4], r11b ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000bf1e5 : or byte ptr [r8 - 0x75], cl ; add eax, 0x304902 ; lea rcx, qword ptr [rax + r9] ; mov rdx, rax ; jmp 0xbf20a
0x00000000001107a1 : or byte ptr [r8 - 0x77], cl ; imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000163f38 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000130e22 : or byte ptr [r8 - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x0000000000134b71 : or byte ptr [r8 - 0x77], cl ; push rcx ; adc byte ptr [rax + 1], bh ; ret
0x000000000013b2aa : or byte ptr [r8 - 0x77], r9b ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x0000000000137900 : or byte ptr [r8 - 0x77], r9b ; push rdi ; adc byte ptr [rax + 1], bh ; ret
0x0000000000067ce7 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000014fe62 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000004aac7 : or byte ptr [r8], r8b ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00000000000d6bb9 : or byte ptr [r9 + 0x4478330], r9b ; add dword ptr [rax + 1], edi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013dd82 : or byte ptr [r9 + r9*4 + 0x44], r9b ; and al, 8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00000000000e9d60 : or byte ptr [r9 - 0x75], r9b ; push rbp ; adc byte ptr [rax + 0x63], cl ; ret
0x0000000000125927 : or byte ptr [r9], r13b ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rcx - 0x76b7f3a9], 0x3e ; ret
0x000000000007eeee : or byte ptr [r9], r14b ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000012e663 : or byte ptr [rax + 0x10], bh ; pop rbx ; pop rbp ; ret
0x0000000000034b7d : or byte ptr [rax + 0x21], 0xd0 ; movq xmm0, rax ; ret
0x0000000000034bc9 : or byte ptr [rax + 0x21], 0xd0 ; movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x00000000001266ed : or byte ptr [rax + 0x242c602], ch ; add byte ptr [rbp + 0x48], dh ; mov eax, r8d ; ret
0x0000000000075857 : or byte ptr [rax + 0x29], cl ; ret
0x0000000000143223 : or byte ptr [rax + 0x29], cl ; ret 0x1be
0x00000000000bc069 : or byte ptr [rax + 0x29], r9b ; ret
0x0000000000075841 : or byte ptr [rax + 0x2b], cl ; adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000007f86b : or byte ptr [rax + 0x2b], cl ; imul ebx, dword ptr [rax], 0x5b ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000108d49 : or byte ptr [rax + 0x38], bh ; syscall ; test rax, rax ; jl 0x108d96 ; je 0x108d68 ; ret
0x000000000002ab46 : or byte ptr [rax + 0x39], cl ; ret
0x0000000000027fdc : or byte ptr [rax + 0x39], cl ; ret 0x8e0f
0x00000000000868d1 : or byte ptr [rax + 0x39], cl ; ret 0xf177
0x000000000007f279 : or byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x000000000007b513 : or byte ptr [rax + 0x3b], cl ; adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x00000000000ceb09 : or byte ptr [rax + 0x3d], cl ; jne 0xceb8b ; add byte ptr [rax], al ; jne 0xceaf6 ; xor eax, eax ; ret
0x000000000009efa4 : or byte ptr [rax + 0x44c93d54], 0x89 ; ret 0x798d
0x000000000009efba : or byte ptr [rax + 0x44c93d54], 0x89 ; ret 0xcf89
0x000000000009efee : or byte ptr [rax + 0x44c93d54], 0x89 ; ret 0xfac1
0x0000000000000542 : or byte ptr [rax + 0x60000201], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x00000000000e921e : or byte ptr [rax + 0x63], cl ; ret
0x00000000000d8143 : or byte ptr [rax + 0x63], cl ; ret 0xb60f
0x00000000000e921d : or byte ptr [rax + 0x63], r9b ; ret
0x00000000001b5c93 : or byte ptr [rax + 0xb], cl ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; ret
0x00000000001a7c92 : or byte ptr [rax + 0xb], cl ; push rdx ; ret
0x00000000001adab4 : or byte ptr [rax + 0xb], cl ; ret
0x00000000001aa5fd : or byte ptr [rax + 0xb], dl ; ret
0x000000000011b13b : or byte ptr [rax + 0xca], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000adf87 : or byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x00000000000d3c3a : or byte ptr [rax + 0xf], 0xa3 ; ret 0x830f
0x00000000000895b6 : or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8949
0x000000000008b9dc : or byte ptr [rax + 1], bh ; mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013d173 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008ba5e : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000079d94 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008bb67 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000110575 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x00000000001181a5 : or byte ptr [rax + 1], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000030ffd : or byte ptr [rax + 1], cl ; ret
0x00000000001176e9 : or byte ptr [rax + 5], bh ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000114b4b : or byte ptr [rax + 7], bh ; pop rbx ; pop rbp ; ret
0x0000000000107954 : or byte ptr [rax + 9], bh ; pop rbx ; pop rbp ; ret
0x00000000000e4de2 : or byte ptr [rax + rax - 0x7f172cb8], cl ; stc ; adc cl, byte ptr [rax - 9] ; ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x00000000001005cc : or byte ptr [rax + rax], ch ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000001005ac : or byte ptr [rax + rax], ch ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000001a9a3f : or byte ptr [rax + rax], cl ; add ah, ch ; add byte ptr [rcx], al ; add byte ptr [rax + 0x17], ch ; call qword ptr [rsi]
0x00000000001a28ef : or byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; pop qword ptr [rax] ; add byte ptr [rax], bh ; leave ; in eax, dx ; jmp qword ptr [rax]
0x00000000000d69e2 : or byte ptr [rax + rdi*4], bl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000c24e9 : or byte ptr [rax - 0x1486dbbc], cl ; or dword ptr [rax - 0x7d], ecx ; ret
0x000000000003a4e5 : or byte ptr [rax - 0x39], cl ; add byte ptr [rax + rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a304 : or byte ptr [rax - 0x39], cl ; add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000033b8f : or byte ptr [rax - 0x39], cl ; ret 0xfffe
0x000000000007594e : or byte ptr [rax - 0x3f], cl ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000000001889c4 : or byte ptr [rax - 0x4ff7000a], dh ; idiv bh ; cmc ; ret
0x00000000001889bc : or byte ptr [rax - 0x4ff7000a], dh ; idiv bh ; or byte ptr [rax - 0x4ff7000a], dh ; idiv bh ; cmc ; ret
0x0000000000090e72 : or byte ptr [rax - 0x73], cl ; add eax, 0x26 ; ret
0x00000000000ac936 : or byte ptr [rax - 0x73], cl ; add eax, 0xc03c2 ; ret
0x0000000000090e86 : or byte ptr [rax - 0x73], cl ; add eax, 0xda832 ; ret
0x00000000000ac922 : or byte ptr [rax - 0x73], cl ; add eax, 0xec76 ; ret
0x00000000000abd52 : or byte ptr [rax - 0x73], cl ; add eax, 0xf8f6 ; ret
0x000000000013dec8 : or byte ptr [rax - 0x73], cl ; je 0x13defa ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000013e00c : or byte ptr [rax - 0x73], cl ; je 0x13e03e ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x00000000000a6999 : or byte ptr [rax - 0x73], cl ; jg 0xa69b1 ; jne 0xa717b ; ret
0x00000000000a803d : or byte ptr [rax - 0x73], cl ; jg 0xa8055 ; jne 0xa898b ; ret
0x00000000000acade : or byte ptr [rax - 0x73], cl ; pop rdi ; or al, 0x85 ; ror byte ptr [rcx - 0x528bf7b9], 0x48 ; mov eax, ebx ; pop rbx ; ret
0x0000000000063e4c : or byte ptr [rax - 0x73], cl ; push rax ; add al, 0x48 ; mov dword ptr [rbx], edx ; mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005c388 : or byte ptr [rax - 0x73], cl ; push rax ; add dword ptr [rax - 0x77], ecx ; adc eax, dword ptr [rax - 0x78] ; sub byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000090899 : or byte ptr [rax - 0x73], cl ; push rax ; add eax, ebp ; insd dword ptr [rdi], dx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000005c0d0 : or byte ptr [rax - 0x73], cl ; push rax ; or byte ptr [rcx - 0x77], cl ; push rsp ; and al, 8 ; jmp 0x5c0a9
0x000000000004a1b4 : or byte ptr [rax - 0x73], cl ; push rsi ; add dword ptr [rcx - 0x77], ecx ; push rsp ; ret 0x4808
0x00000000000acadd : or byte ptr [rax - 0x73], r9b ; pop rdi ; or al, 0x85 ; ror byte ptr [rcx - 0x528bf7b9], 0x48 ; mov eax, ebx ; pop rbx ; ret
0x00000000000730a0 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000000818c3 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x000000000010bd21 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x000000000010bd82 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x40 ; ret
0x0000000000048630 : or byte ptr [rax - 0x75], cl ; add al, 0xf0 ; mov qword ptr [rcx + rsi*8], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000bf1e6 : or byte ptr [rax - 0x75], cl ; add eax, 0x304902 ; lea rcx, qword ptr [rax + r9] ; mov rdx, rax ; jmp 0xbf209
0x0000000000112575 : or byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x75], cl ; push rbx ; and byte ptr [rax + 0x2b], cl ; xor r9b, bpl ; ret
0x0000000000104231 : or byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x00000000000f5576 : or byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x77] ; ret
0x0000000000137913 : or byte ptr [rax - 0x75], cl ; jg 0x137939 ; mov eax, 1 ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x00000000001381bb : or byte ptr [rax - 0x75], cl ; jg 0x1381e1 ; mov eax, 1 ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000134b83 : or byte ptr [rax - 0x75], cl ; jns 0x134ba9 ; mov eax, 1 ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x000000000006efe4 : or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x0000000000137832 : or byte ptr [rax - 0x75], cl ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000130edf : or byte ptr [rax - 0x75], cl ; pop rdi ; sbb byte ptr [rbx + 0x7eb5e83b], cl ; std ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x0000000000138112 : or byte ptr [rax - 0x75], cl ; push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000001304ea : or byte ptr [rax - 0x75], cl ; push rdx ; cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x00000000000a2e9f : or byte ptr [rax - 0x76b7f7be], cl ; clc ; ret
0x0000000000115f9b : or byte ptr [rax - 0x77], 0xda ; call rax
0x000000000004a5d9 : or byte ptr [rax - 0x77], 7 ; mov dword ptr [rdx], 0xffffc002 ; mov eax, 1 ; ret
0x00000000000730e4 : or byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; jo 0x73108 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000100ffe : or byte ptr [rax - 0x77], cl ; adc eax, 0x2c30ea ; add rsp, 8 ; ret
0x0000000000100fd7 : or byte ptr [rax - 0x77], cl ; adc eax, 0x2c3111 ; ret
0x000000000008ba0b : or byte ptr [rax - 0x77], cl ; adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000d8f76 : or byte ptr [rax - 0x77], cl ; add al, byte ptr [rbp - 0x77] ; xor byte ptr [rcx + 0x63], cl ; add r9b, r13b ; ret
0x00000000001399a3 : or byte ptr [rax - 0x77], cl ; add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x0000000000139e54 : or byte ptr [rax - 0x77], cl ; add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000001381d6 : or byte ptr [rax - 0x77], cl ; and byte ptr [r8 - 0x77], r9b ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x000000000007fe62 : or byte ptr [rax - 0x77], cl ; clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000a2db0 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000011aec8 : or byte ptr [rax - 0x77], cl ; clc ; sar rax, 6 ; ret
0x00000000000e8ee3 : or byte ptr [rax - 0x77], cl ; enter -0x3eb8, -0x18 ; sbb dword ptr [rbx - 0x1f3efe20], eax ; add al, 0x89 ; ret 0xb60f
0x0000000000105532 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000039a59 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006f4c7 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000328f6 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000000d0d69 : or byte ptr [rax - 0x77], cl ; fimul dword ptr [rcx + 3] ; push rdi ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000131a84 : or byte ptr [rax - 0x77], cl ; fimul dword ptr [rcx + rcx*4 - 0x1a] ; mov rdi, rbp ; call rax
0x000000000013b2ab : or byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x0000000000073673 : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x00000000000d1563 : or byte ptr [rax - 0x77], cl ; fmul dword ptr [rcx + 3] ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000103ecf : or byte ptr [rax - 0x77], cl ; fsubp st(0) ; enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x00000000001059d8 : or byte ptr [rax - 0x77], cl ; fsubp st(0) ; mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x0000000000105dd7 : or byte ptr [rax - 0x77], cl ; fsubp st(0) ; rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000006e519 : or byte ptr [rax - 0x77], cl ; fucompi st(0) ; xchg eax, esi ; adc al, 0xfb ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x00000000001107a2 : or byte ptr [rax - 0x77], cl ; imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000aa005 : or byte ptr [rax - 0x77], cl ; jns 0xffffffffed3aa871 ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a9fa5 : or byte ptr [rax - 0x77], cl ; js 0xffffffffed3aa811 ; mov byte ptr [rdi + 9], ch ; ret
0x0000000000134b6e : or byte ptr [rax - 0x77], cl ; or byte ptr [r8 - 0x77], cl ; push rcx ; adc byte ptr [rax + 1], bh ; ret
0x0000000000163f39 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000130e23 : or byte ptr [rax - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x000000000012c163 : or byte ptr [rax - 0x77], cl ; out 0xe8, al ; xchg eax, esp ; movabs eax, dword ptr [0x8948884d8b480001] ; ret 0x8b48
0x000000000012e647 : or byte ptr [rax - 0x77], cl ; out dx, al ; mov rcx, rbx ; add rdi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x0000000000088231 : or byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x000000000012fe0b : or byte ptr [rax - 0x77], cl ; out dx, eax ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x00000000000a9fc6 : or byte ptr [rax - 0x77], cl ; pcmpgtd mm1, qword ptr [rcx - 0x12cff7a9] ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000740ff : or byte ptr [rax - 0x77], cl ; push 0x60894c30 ; cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x0000000000134b72 : or byte ptr [rax - 0x77], cl ; push rcx ; adc byte ptr [rax + 1], bh ; ret
0x0000000000137901 : or byte ptr [rax - 0x77], cl ; push rdi ; adc byte ptr [rax + 1], bh ; ret
0x0000000000032823 : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c8b2b : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x00000000000869eb : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000000c0cb6 : or byte ptr [rax - 0x77], cl ; ret
0x00000000000e0a25 : or byte ptr [rax - 0x77], cl ; ret 0x1bb
0x0000000000131fcc : or byte ptr [rax - 0x77], cl ; ret 0x314c
0x000000000013e15f : or byte ptr [rax - 0x77], cl ; ret 0x4489
0x00000000000bf1f1 : or byte ptr [rax - 0x77], cl ; ret 0x4eb
0x00000000000f0360 : or byte ptr [rax - 0x77], cl ; ret 0x830f
0x0000000000022f53 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000e827a : or byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000003a1ab : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000006a977 : or byte ptr [rax - 0x77], cl ; xchg eax, ebp ; push -0x14000005 ; ret 0x894d
0x000000000013818e : or byte ptr [rax - 0x77], cl ; xor byte ptr [r8 - 0x77], r9b ; push rdi ; cmp byte ptr [rax + 1], bh ; ret
0x00000000000e0a24 : or byte ptr [rax - 0x77], r9b ; ret 0x1bb
0x000000000012ae88 : or byte ptr [rax - 0x7b], cl ; push qword ptr [rbp - 0x16] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008b8dd : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x13], 0xf3 ; ret
0x000000000008b987 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x000000000010079f : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbx + rax + 0x48], 0x89 ; adc bl, dh ; ret
0x000000000008bbe9 : or byte ptr [rax - 0x7bf0ffc8], al ; ret 0
0x00000000000858f8 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000798bd : or byte ptr [rax - 0x7d], cl ; js 0x798fe ; add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x38 ; ret
0x0000000000087e42 : or byte ptr [rax - 0x7d], cl ; js 0x87e84 ; add byte ptr [rdi], cl ; test dword ptr [rsi - 0x16000002], esi ; ret 0xfffe
0x0000000000049086 : or byte ptr [rax - 0x7d], cl ; ret
0x000000000003c1b5 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000055982 : or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x00000000000cdefc : or byte ptr [rax - 0x7d], cl ; ret 0xc610
0x00000000000ac9fa : or byte ptr [rax - 0x7d], cl ; rol byte ptr [rax*4 + 0x751089d2], 0xf3 ; ret
0x000000000010f231 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003a0a1 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007184b : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000147eec : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000107762 : or byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x00000000001b9966 : or byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; adc al, 0 ; add al, byte ptr [rax] ; loopne 0x1b9940 ; clc ; call qword ptr [rbx]
0x00000000001aca76 : or byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; and al, 0x31 ; add dword ptr [rax], eax ; loopne 0x1acab1 ; cmc ; jmp qword ptr [rcx]
0x00000000001ad546 : or byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; hlt ; cmp eax, dword ptr [rcx] ; add al, ah ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001ae93e : or byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; add qword ptr [r8], r8 ; clc ; scasd eax, dword ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae9b6 : or byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rax ; add dword ptr [rax], eax ; nop ; mov al, 0xf5 ; jmp qword ptr [rcx]
0x00000000001acaa6 : or byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; xor dword ptr [rcx], eax ; add byte ptr [rax + 0x23], al ; cmc ; jmp qword ptr [rcx]
0x000000000019ccd6 : or byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; test byte ptr [rbx], dh ; add byte ptr [rax], al ; nop ; in eax, -0x17 ; jmp qword ptr [rax]
0x00000000001a8355 : or byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; add al, 0xea ; add byte ptr [rax], al ; adc byte ptr [rcx], ah ; call rsi
0x00000000001b2f8d : or byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; cmp al, 0x96 ; add dword ptr [rax], eax ; add rdi, rsi ; call rsi
0x00000000001a885d : or byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; or al, 0xef ; add byte ptr [rax], al ; sbb byte ptr [rcx], bh ; call rsi
0x00000000001af7d5 : or byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; test byte ptr [rsi + 1], bl ; add al, dh ; jrcxz 0x1af7e6 ; call rsi
0x00000000001a13cd : or byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; jl 0x1a145e ; add byte ptr [rax], al ; clc ; jns 0x1a13d6 ; call rcx
0x00000000001aab35 : or byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, 0x11 ; add dword ptr [rax], eax ; xor byte ptr [rdi], dl ; hlt ; call qword ptr [rdx]
0x00000000001b7ca5 : or byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rbx + 1], dl ; add byte ptr [rax], ah ; push rcx ; clc ; call rdi
0x000000000008678f : or byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; cmp byte ptr [rax + 8], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x0000000000067ce8 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000147eed : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014aa41 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000147f11 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000ffbeb : or byte ptr [rax], al ; add byte ptr [rax], 0 ; lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000100d40 : or byte ptr [rax], al ; add byte ptr [rax], 0 ; mov eax, 1 ; add rsp, 8 ; ret
0x00000000001aa9c4 : or byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; je 0x1aa9ed ; add dword ptr [rax], eax ; adc byte ptr [rsi], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001b4b7c : or byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; sub al, 0xb2 ; add dword ptr [rax], eax ; call 0x241b432e
0x00000000000007b2 : or byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rdx], ah ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x000000000007dfac : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000001a8e8b : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cmp al, 0xf5 ; add byte ptr [rax], al ; call 0x221a8101
0x0000000000086796 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x000000000001b040 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001df50 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18a6
0x00000000001a50ba : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr fs:[rax], al ; add byte ptr [rdi + rsi*4], ch ; add byte ptr [rax + 0x3d], cl ; out dx, eax ; jmp rsi
0x00000000001a70c2 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; je 0x1a70b6 ; add byte ptr [rax], al ; nop ; int1 ; call rdx
0x00000000001b5bea : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; pushfq ; ret 1
0x00000000000e0b24 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000fdd4a : or byte ptr [rax], al ; add byte ptr [rax], al ; add dh, al ; or al, 0 ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x00000000001185e4 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x000000000004e6d3 : or byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x4e674
0x0000000000139d02 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x00000000000aad5f : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000021429 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001aa984 : or byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; xor al, 0x10 ; add dword ptr [rax], eax ; adc byte ptr [rsi], dl ; hlt ; call qword ptr [rsi]
0x0000000000108da1 : or byte ptr [rax], al ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x108dbe ; ret
0x00000000001a19e6 : or byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rax + rax*4 - 0x73400000], dl ; in eax, dx ; jmp rcx
0x00000000001ac206 : or byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rax + rbp + 0xbb00001], dh ; cmc ; jmp rcx
0x00000000001ad0fe : or byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rdi + rsi + 0x3c980001], ch ; cmc ; call qword ptr [rdi]
0x0000000000078c9c : or byte ptr [rax], al ; add byte ptr [rbp + 0x14], dh ; xor eax, eax ; cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x00000000000902d3 : or byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bc974 : or byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; ror byte ptr [rax + 0x3d], 1 ; ret 0x10
0x00000000000334eb : or byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000086696 : or byte ptr [rax], al ; add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x86669 ; ret
0x000000000004c8c4 : or byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000082feb : or byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000001bb315 : or byte ptr [rax], al ; add byte ptr [rdx + 4], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000016c420 : or byte ptr [rax], al ; add byte ptr [rip + 0xffff], ah ; and ecx, 0xffff ; sub eax, ecx ; ret
0x0000000000080be8 : or byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000087bda : or byte ptr [rax], al ; add rsp, 0x80 ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000104ac6 : or byte ptr [rax], al ; je 0x1055af ; mov rbp, rdi ; xor edx, edx ; xor esi, esi ; call rbx
0x0000000000090e83 : or byte ptr [rax], al ; je 0x90e9a ; lea rax, qword ptr [rip + 0xda832] ; ret
0x00000000000ac933 : or byte ptr [rax], al ; je 0xac94a ; lea rax, qword ptr [rip + 0xc03c2] ; ret
0x000000000001ff0a : or byte ptr [rax], al ; mov edi, 0xbf ; mov r12, rax ; call 0xaac30
0x000000000004aac8 : or byte ptr [rax], al ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00000000001a7166 : or byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; adc al, 0xd8 ; add byte ptr [rax], al ; xor byte ptr [rbx - 0xf], cl ; jmp qword ptr [rcx]
0x000000000013d905 : or byte ptr [rax], al ; setne al ; mov dword ptr [rbx], eax ; add rsp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x000000000013972a : or byte ptr [rax], al ; setne dl ; add rsp, 0x70 ; mov eax, edx ; pop rbx ; ret
0x000000000006c2e5 : or byte ptr [rax], al ; test eax, eax ; setne al ; movzx eax, al ; neg eax ; pop rbx ; ret
0x00000000001b5bb6 : or byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; ret 1
0x00000000001b6e48 : or byte ptr [rax], ch ; clc ; jmp rdi
0x00000000000a9fcd : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000aa00b : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a9fab : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x000000000006bb6b : or byte ptr [rax], dl ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000014e45e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000006cd02 : or byte ptr [rbp + 0x3d8e0fd2], al ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x3948
0x000000000006f7da : or byte ptr [rbp + 0x648575c9], al ; mov dword ptr [rax], 5 ; mov rax, rdx ; pop rbx ; ret
0x00000000001a724a : or byte ptr [rbp + 0xb], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; cld ; fadd dword ptr [rax] ; add al, ch ; push rsp ; int1 ; jmp qword ptr [rax]
0x00000000001b8bca : or byte ptr [rbp + 0xb], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; jl 0x1b8bd9 ; add dword ptr [rax], eax ; clc ; sahf ; sti ; jmp qword ptr [rdx]
0x00000000001b8afa : or byte ptr [rbp + 0xb], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; int1 ; add dword ptr [rax], eax ; cwde ; lahf ; sti ; jmp qword ptr [rdx]
0x000000000007eea2 : or byte ptr [rbp + 0xb], dh ; sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000000e0a21 : or byte ptr [rbp - 0x75], cl ; or byte ptr [rax - 0x77], r9b ; ret 0x1bb
0x000000000010438e : or byte ptr [rbp - 0x7b], al ; test byte ptr [rax - 0x75], 0x7d ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x0000000000071b39 : or byte ptr [rbx + 0x14], dh ; lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x00000000000203e2 : or byte ptr [rbx + 0x4814247c], cl ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000086a90 : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000007c678 : or byte ptr [rbx + 0x5d], bl ; movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001b5a4b : or byte ptr [rbx + 0xb], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; cld ; rol byte ptr [rcx], 0 ; pop rax ; ret 0xfff7
0x00000000000719b2 : or byte ptr [rbx + 0xb], dh ; lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x000000000019f6a2 : or byte ptr [rbx + rcx], al ; add byte ptr [rax], al ; push rsp ; add byte ptr [rax], al ; add byte ptr [rdx + rcx + 0x12700000], dl ; in eax, dx ; call qword ptr [rax]
0x000000000012de7b : or byte ptr [rbx - 0x72b7a3a9], cl ; ja 0x12deda ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000012de7a : or byte ptr [rbx - 0x72b7a3a9], cl ; ja 0x12dedb ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000019323c : or byte ptr [rbx - 5], 0xff ; push rax ; sti ; jmp qword ptr [rax]
0x00000000000cf6c5 : or byte ptr [rbx], 0 ; mov esi, esi ; movsxd rax, dword ptr [rdx + rsi*4] ; add rax, rdx ; jmp rax
0x0000000000116d8b : or byte ptr [rbx], al ; add byte ptr [rax], al ; jne 0x116d88 ; and r11d, 0xffffffbb ; cmp r11d, 0xa ; je 0x116dac ; ret
0x0000000000116dee : or byte ptr [rbx], al ; add byte ptr [rax], al ; jne 0x116df1 ; mov eax, r11d ; and eax, 0xc ; cmp eax, 4 ; je 0x116e11 ; ret
0x0000000000193630 : or byte ptr [rbx], bl ; cld ; call rax
0x00000000000d6bba : or byte ptr [rcx + 0x4478330], cl ; add dword ptr [rax + 1], edi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013a728 : or byte ptr [rcx + 0x56], al ; push r13 ; mov rcx, qword ptr [rsp + 0x18] ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00000000001a8b2c : or byte ptr [rcx + 0xb], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; fdivr st(1), st(0) ; add byte ptr [rax], al ; test al, 0x46 ; jmp qword ptr [rcx]
0x00000000001a8abb : or byte ptr [rcx + 0xb], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; int1 ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0xe], al ; call qword ptr [rdx]
0x00000000001b9aa2 : or byte ptr [rcx + 0xb], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add byte ptr [rcx + rax + 2], dl ; add byte ptr [rax - 0x3d], ah ; clc ; jmp rcx
0x00000000001ad44a : or byte ptr [rcx + 0xb], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; cmp al, byte ptr [rcx] ; add byte ptr [rax + 0x55], ch ; cmc ; call qword ptr [rdx]
0x000000000019eed5 : or byte ptr [rcx + 0xb], al ; xor al, 0 ; add byte ptr [rax], al ; test byte ptr [rbp], dl ; add al, dh ; in al, dx ; jmp qword ptr [rax]
0x00000000000aaa50 : or byte ptr [rcx + 0xfffe3], al ; add byte ptr [rax - 0x73], cl ; add dword ptr [r11 + 0x5d], ebx ; pop r12 ; pop r13 ; ret
0x00000000001199ad : or byte ptr [rcx + r9*4 - 0x37], r9b ; test r8d, r8d ; mov dword ptr [rax + 0xc], r8d ; jne 0x119965 ; mov rax, rdi ; ret
0x0000000000049500 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x000000000013dd83 : or byte ptr [rcx + rcx*4 + 0x44], cl ; and al, 8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00000000000549c1 : or byte ptr [rcx + rcx*4 + 4], cl ; and al, 0xe8 ; jne 0x5495d ; add al, byte ptr [rax] ; jmp 0x5499b
0x000000000006f4db : or byte ptr [rcx + rcx*4 - 0x15], cl ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000131b91 : or byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000013decd : or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x00000000001199ae : or byte ptr [rcx + rcx*4 - 0x37], cl ; test r8d, r8d ; mov dword ptr [rax + 0xc], r8d ; jne 0x119964 ; mov rax, rdi ; ret
0x00000000000757c2 : or byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x000000000008417c : or byte ptr [rcx + rcx*4 - 9], cl ; mov qword ptr [rsp + 0x10], r14 ; call qword ptr [rax]
0x000000000013d2a3 : or byte ptr [rcx - 0x3b7cb7fd], cl ; adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000009eca3 : or byte ptr [rcx - 0x73], 0x4f ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000000d9fa1 : or byte ptr [rcx - 0x73], cl ; jl 0xd9fd2 ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000078efa : or byte ptr [rcx - 0x74b777ab], cl ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000000ac7e9 : or byte ptr [rcx - 0x75], al ; add dword ptr [rcx + 0x39], eax ; add dh, byte ptr [rbp + 0x7a] ; test eax, eax ; jne 0xac7e1 ; mov rax, rdi ; ret
0x0000000000048495 : or byte ptr [rcx - 0x75], cl ; adc al, 0xc0 ; mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; pop rbx ; ret
0x000000000010c6c2 : or byte ptr [rcx - 0x75], cl ; lds r8d, ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e9d61 : or byte ptr [rcx - 0x75], cl ; push rbp ; adc byte ptr [rax + 0x63], cl ; ret
0x00000000000e9320 : or byte ptr [rcx - 0x75], cl ; push rsi ; adc byte ptr [rax + 0x63], cl ; ret
0x00000000000e931f : or byte ptr [rcx - 0x75], r9b ; push rsi ; adc byte ptr [rax + 0x63], cl ; ret
0x0000000000128ea9 : or byte ptr [rcx - 0x77], cl ; shr ebx, 1 ; scasd eax, dword ptr [rdi] ; mov rdx, rax ; mov byte ptr [rdx], 0 ; ret
0x000000000004892e : or byte ptr [rcx - 0x7d], cl ; clc ; clc ; jne 0x4892a ; mov rax, rdx ; ret
0x00000000000f7e32 : or byte ptr [rcx], al ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000fb82b : or byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011ab04 : or byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000035d2f : or byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000006c334 : or byte ptr [rcx], al ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x6c351 ; ret
0x00000000000f7f24 : or byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000d80fc : or byte ptr [rcx], al ; rcr byte ptr [rbx + 0x5d], 0xeb ; xchg eax, edi ; nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x0000000000125928 : or byte ptr [rcx], ch ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rcx - 0x76b7f3a9], 0x3e ; ret
0x000000000007eeef : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000127cad : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000183cfe : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000001af87a : or byte ptr [rdi + 0xb], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rdi + rbx*2], ch ; add dword ptr [rax], eax ; cmp bh, ah ; cmc ; jmp rsp
0x00000000001a4581 : or byte ptr [rdi + 0xb], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xor al, 0xac ; add byte ptr [rax], al ; push rax ; ret
0x00000000000e009d : or byte ptr [rdi], cl ; test byte ptr [rbx], bh ; add eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0f607], al ; pop rcx ; add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; ret
0x00000000000e0a17 : or byte ptr [rdi], cl ; test dl, dl ; add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0x53], cl ; or byte ptr [rbp - 0x75], cl ; or byte ptr [rax - 0x77], r9b ; ret 0x1bb
0x0000000000169e91 : or byte ptr [rdi], cl ; test dword ptr [rax + 6], ebp ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000109051 : or byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000010907b : or byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x00000000001b35dd : or byte ptr [rdx + 0xb], al ; adc al, 0 ; add byte ptr [rax], al ; mov word ptr [rcx + rax - 0x8cf4800], ds ; call rcx
0x00000000001af04d : or byte ptr [rdx + 0xb], cl ; adc al, 0 ; add byte ptr [rax], al ; cld ; push rsi ; add dword ptr [rax], eax ; pop rax ; ret 0xfff5
0x000000000019caad : or byte ptr [rdx + 0xb], cl ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; xor dword ptr [rax], eax ; add byte ptr [rax], bl ; fucompi st(1) ; jmp qword ptr [rsi]
0x00000000000ac8de : or byte ptr [rdx + rdx + 0x3b], dh ; ja 0xac8f6 ; cmove rax, rcx ; ret
0x0000000000116663 : or byte ptr [rdx + rdx + 0x48], dh ; add eax, 0x48 ; cmp rax, rdx ; jb 0x11666e ; xor eax, eax ; ret
0x000000000012eba9 : or byte ptr [rdx], ch ; push 0x19 ; call qword ptr [rax]
0x00000000000646b2 : or byte ptr [rdx], dl ; add byte ptr [rax + 0x63], cl ; add al, 0x91 ; add rax, rcx ; jmp rax
0x00000000001a9e4a : or byte ptr [rsi + 0xb], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; cld ; add al, 1 ; add byte ptr [rax + 0x41], cl ; call qword ptr [rdx]
0x000000000019e04a : or byte ptr [rsi + 0xb], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add ah, bh ; add byte ptr [rax], r8b ; shr rdx, 1 ; jmp rdi
0x00000000001a5472 : or byte ptr [rsi + 0xb], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; and al, 0xbb ; add byte ptr [rax], al ; xor bh, bl ; cld ; call qword ptr [rax]
0x00000000001a9292 : or byte ptr [rsi + 0xb], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; stc ; add byte ptr [rax], al ; mov al, 0x91 ; call rbx
0x00000000001aafb3 : or byte ptr [rsi + 0xb], al ; add byte ptr [rax], al ; xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rsi + rdx + 1], ah ; add byte ptr [rax], dl ; jge 0x1aafc7 ; jmp rdi
0x00000000000a2e74 : or byte ptr [rsi + 0xf], ah ; adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000a2da7 : or byte ptr [rsi + 0xf], ah ; adc eax, dword ptr [rdx] ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a5ab1 : or byte ptr [rsi + 0xf], ah ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000000a5b92 : or byte ptr [rsi + 0xf], ah ; adc ecx, dword ptr [rdx + 8] ; xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x000000000014d3d7 : or byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; enter 0xf66, 0x3a ; movsxd rcx, ecx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000006f02f : or byte ptr [rsi + rbx + 0x48], dh ; lea esi, dword ptr [rsp + 8] ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x0000000000193308 : or byte ptr [rsi - 0x6f9f0005], 0xfb ; inc dword ptr [rax - 0x6e] ; sti ; jmp qword ptr [rax]
0x00000000000a2ec0 : or byte ptr [rsi - 0x77], ah ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000193808 : or byte ptr [rsi - 4], 0xff ; adc byte ptr [rax - 4], 0xff ; adc byte ptr [rbx - 4], al ; call rax
0x00000000001860ac : or byte ptr [rsi], 0xf2 ; jmp qword ptr [rax - 0x3f000df2]
0x000000000001fb92 : or byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ecdc0 : or byte ptr [rsi], cl ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000193804 : or byte ptr [rsp + rdi*8 - 1], 0x80 ; cld ; inc dword ptr [rax + 0x10fffc50] ; cld ; call rax
0x00000000000004a8 : or ch, byte ptr [rax] ; nop ; sub eax, 0xf02493 ; add cl, byte ptr [rdx] ; add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x0000000000002fa0 : or ch, byte ptr [rsi] ; ficomp dword ptr [rbx + 0xb886fae] ; and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000bb6ff : or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x0000000000029b08 : or cl, byte ptr [rax + 0x39] ; ret 0x1a76
0x000000000014014a : or cl, byte ptr [rax + 0xf] ; ret
0x000000000007a936 : or cl, byte ptr [rax + 1] ; ret 0x8949
0x00000000000a69e1 : or cl, byte ptr [rax - 0x73] ; jg 0xa69fb ; jne 0xa717b ; ret
0x00000000000a8085 : or cl, byte ptr [rax - 0x73] ; jg 0xa809f ; jne 0xa898b ; ret
0x0000000000165e62 : or cl, byte ptr [rax - 0x73] ; or cl, byte ptr [rdi] ; test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x00000000000bb9e1 : or cl, byte ptr [rax - 0x77] ; ret 0xc148
0x00000000000e9886 : or cl, byte ptr [rax - 0x77] ; ret 0xc1e8
0x00000000000c1be2 : or cl, byte ptr [rax - 0x77] ; ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x0000000000070a1b : or cl, byte ptr [rax - 0x7d] ; ret
0x0000000000096962 : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000004b073 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000fd985 : or cl, byte ptr [rbx + 0xf250847] ; adc byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x0000000000146734 : or cl, byte ptr [rcx + rcx*4 - 0x16] ; add r9, qword ptr [rbp - 0x88] ; call rax
0x000000000011b235 : or cl, byte ptr [rcx - 0xda08] ; inc dword ptr [rax] ; ret
0x000000000019eed2 : or cl, byte ptr [rdi + rax] ; or byte ptr [rcx + 0xb], al ; xor al, 0 ; add byte ptr [rax], al ; test byte ptr [rbp], dl ; add al, dh ; in al, dx ; jmp qword ptr [rax]
0x0000000000165e66 : or cl, byte ptr [rdi] ; test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x000000000016a257 : or cl, byte ptr [rdi] ; test dword ptr [rdx - 0x7ffffffe], esp ; cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x000000000005457c : or cl, byte ptr [rdi] ; xchg eax, esp ; rol byte ptr [rax + rax*8 + 0x180850f], 0 ; add byte ptr [rbx + rcx*4 + 4], al ; and al, 0x83 ; ret
0x000000000019caab : or cl, byte ptr [rsi] ; or byte ptr [rdx + 0xb], cl ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; xor dword ptr [rax], eax ; add byte ptr [rax], bl ; fucompi st(1) ; jmp qword ptr [rsi]
0x000000000008fac5 : or cl, cl ; cmove rax, rdx ; ret
0x00000000000deed6 : or dh, ah ; dec dword ptr [rax - 0x77] ; ret
0x000000000007625f : or dh, byte ptr [rax + rdi*4 + 0x48] ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000186001 : or dh, dl ; inc dword ptr [rax - 0x5f000df6] ; or dh, dl ; inc eax ; or dh, dl ; jmp rax
0x0000000000186011 : or dh, dl ; inc dword ptr [rax] ; or esi, edx ; jmp qword ptr [rax]
0x0000000000186009 : or dh, dl ; inc eax ; or dh, dl ; jmp rax
0x0000000000185ff5 : or dh, dl ; jmp qword ptr [rax]
0x000000000018600d : or dh, dl ; jmp rax
0x000000000004deb4 : or dl, bh ; add byte ptr ss:[rax - 0x77], cl ; ret 0x2948
0x0000000000118682 : or dl, byte ptr [rdx - 0xd] ; dec dword ptr [rax - 0x7f] ; ret
0x0000000000185fd1 : or dl, dh ; inc dword ptr [rax] ; or edx, esi ; jmp qword ptr [rax]
0x0000000000029aff : or dword ptr [rax + 0x39], 0xf2372c2 ; mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1a76
0x0000000000087916 : or dword ptr [rax + 0x3b], ecx ; or eax, 0x33beba ; jb 0x87941 ; sub rax, 0x10 ; ret
0x0000000000134c0a : or dword ptr [rax + 0x66000000], 0xb86c4289 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000008944b : or dword ptr [rax + 0x74], ecx ; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ab041 : or dword ptr [rax + 0xf], ecx ; mov esp, 0xc83948ca ; ja 0xab071 ; sub rdi, 0x10 ; add rax, rdi ; ret
0x000000000010051c : or dword ptr [rax + rax], ebp ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000122630 : or dword ptr [rax - 0x73], ecx ; cmp eax, 0x2a3068 ; call rax
0x00000000000a69bc : or dword ptr [rax - 0x73], ecx ; jg 0xa69d5 ; jne 0xa717b ; ret
0x00000000000a8060 : or dword ptr [rax - 0x73], ecx ; jg 0xa8079 ; jne 0xa898b ; ret
0x0000000000134af3 : or dword ptr [rax - 0x73], ecx ; mov ebx, 0xc8 ; call rax
0x0000000000165e42 : or dword ptr [rax - 0x73], ecx ; or qword ptr [rdi], rcx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x00000000000c24ef : or dword ptr [rax - 0x7d], ecx ; ret
0x00000000000b6a90 : or dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000da4ab : or dword ptr [rax - 0x7d], ecx ; ret 0x4901
0x00000000000b8358 : or dword ptr [rax - 0x7d], ecx ; ret 0x4c01
0x0000000000026d46 : or dword ptr [rax - 0x7d], ecx ; ret 0x8301
0x000000000002c49d : or dword ptr [rax - 0x7d], ecx ; rol dword ptr [rcx], 1 ; ret 0x3948
0x00000000000cea6b : or dword ptr [rax - 0x7f], ecx ; cli ; jmp 0xcea60
0x00000000000cea25 : or dword ptr [rax - 0x7f], ecx ; cli ; jnp 0xcea8b ; add byte ptr [rax], al ; je 0xcea84 ; mov eax, 0x20 ; ret
0x000000000008bd7e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x00000000000ffbea : or dword ptr [rax], 0x8000 ; lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000100d3f : or dword ptr [rax], 0x8000 ; mov eax, 1 ; add rsp, 8 ; ret
0x0000000000147e1d : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014e30f : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000147d77 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001a5ba4 : or dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; ret 0
0x000000000006caf3 : or dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x00000000000f7015 : or dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0xf7036 ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000341fa : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000753c7 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000020daa : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edi ; ret
0x00000000001396cf : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rax ; call qword ptr [r10]
0x0000000000130012 : or dword ptr [rax], eax ; add byte ptr [rax], al ; movdqu xmm0, xmmword ptr [rdi + 0x38] ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x00000000000f7138 : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000107956 : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000a5005 : or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000076e0d : or dword ptr [rax], eax ; add rsp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x000000000007723d : or dword ptr [rax], eax ; add rsp, 0x80 ; mov eax, edx ; ret
0x0000000000077996 : or dword ptr [rax], eax ; add rsp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x0000000000086cc8 : or dword ptr [rax], eax ; add rsp, 0x80 ; mov rax, rbx ; pop rbx ; ret
0x0000000000077ee8 : or dword ptr [rax], eax ; add rsp, 0x80 ; pop rbx ; ret
0x0000000000077151 : or dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x00000000000f36cb : or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000f4144 : or dword ptr [rax], eax ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x0000000000056763 : or dword ptr [rax], ebx ; add al, byte ptr [rax] ; add rsp, 0xd8 ; ret
0x000000000010066b : or dword ptr [rax], ecx ; sub al, 0 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000000c04bc : or dword ptr [rax], esi ; add byte ptr [rcx + 0x48d23102], cl ; add esp, 8 ; mov rax, rdx ; ret
0x00000000000f4143 : or dword ptr [rax], r8d ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x000000000008aa19 : or dword ptr [rbx + 0x67], edx ; fmul dword ptr [rax + 0x33] ; push rdi ; fmul dword ptr [rax + 0x39] ; ret 0x5a74
0x00000000000adb23 : or dword ptr [rbx + rcx*4 + 0xc], eax ; xchg eax, edi ; test r9d, r9d ; jne 0xadaee ; mov rax, rdx ; ret
0x00000000000cefb8 : or dword ptr [rbx], 0 ; movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x00000000000a7303 : or dword ptr [rcx - 0x73], 0xc ; or edi, edi ; loope 0xa7381 ; nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000000a8b13 : or dword ptr [rcx - 0x73], 0xc ; or edi, edi ; loope 0xa8b91 ; nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000000aa393 : or dword ptr [rcx - 0x73], 0xc ; or edi, edi ; loope 0xaa40e ; nop dword ptr [rax + rax] ; ret
0x00000000000fa0a4 : or dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfa0c1 ; ret
0x0000000000146386 : or dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x0000000000036293 : or dword ptr [rdi + rax*8], edx ; xor eax, eax ; ret
0x0000000000087db0 : or dword ptr [rdi - 0x5f], esi ; movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x00000000000ffd29 : or dword ptr [rdi], ecx ; test dl, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000165e46 : or dword ptr [rdi], ecx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x000000000016a227 : or dword ptr [rdi], ecx ; test edx, edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x00000000000c193b : or dword ptr [rdi], ecx ; xchg dword ptr [rbp + rbp*8 - 1], edx ; dec dword ptr [rax - 0x7d] ; ret
0x00000000001035ba : or dword ptr [rdi], ecx ; xchg edi, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000103052 : or dword ptr [rdi], ecx ; xchg edi, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f83f3 : or dword ptr [rdx - 0x389bffd4], 0x1600 ; add byte ptr [rax - 1], bh ; ret
0x0000000000064850 : or dword ptr [rdx], edx ; add byte ptr [rax + 0x63], cl ; add al, 0x91 ; add rax, rcx ; jmp rax
0x00000000000ebff3 : or dword ptr [rsi + 0x2d], 0x64d8f700 ; mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000139c53 : or dword ptr [rsi], esi ; add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x000000000010794c : or eax, 0 ; add byte ptr [rax], al ; add rsp, 8 ; mov eax, 9 ; pop rbx ; pop rbp ; ret
0x000000000006d371 : or eax, 0x118522 ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000002a48b : or eax, 0x11bf1fe8 ; add byte ptr [rax - 0x39], cl ; adc byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x00000000000647d0 : or eax, 0x12083f ; movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x00000000000646b0 : or eax, 0x1208af ; movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x000000000006484e : or eax, 0x120911 ; movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x000000000006415b : or eax, 0x120d48 ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000005cdf6 : or eax, 0x127f5d ; movzx ebx, bl ; movsxd rax, dword ptr [rcx + rbx*4] ; add rax, rcx ; jmp rax
0x000000000005cc6e : or eax, 0x128035 ; movzx ebx, bl ; movsxd rax, dword ptr [rcx + rbx*4] ; add rax, rcx ; jmp rax
0x000000000005c800 : or eax, 0x128297 ; movzx eax, al ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x0000000000165ec8 : or eax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x000000000016a2e9 : or eax, 0x210850f ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000015066f : or eax, 0x242ec ; mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000014ef8e : or eax, 0x259cd ; mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000014ecca : or eax, 0x25c91 ; mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000014d8b5 : or eax, 0x270a6 ; mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000014d2bf : or eax, 0x2769c ; mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000001432e5 : or eax, 0x27db8e ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000143295 : or eax, 0x27dbde ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000014b62e : or eax, 0x2932d ; mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000014b2fa : or eax, 0x29661 ; mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000149a25 : or eax, 0x2af36 ; mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000004e8c9 : or eax, 0x2b2 ; add rax, rcx ; jmp rax
0x000000000010a792 : or eax, 0x2b66e1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a762 : or eax, 0x2b6711 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a732 : or eax, 0x2b6741 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a702 : or eax, 0x2b6771 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a6d5 : or eax, 0x2b679e ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a6a5 : or eax, 0x2b67ce ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a672 : or eax, 0x2b6801 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a642 : or eax, 0x2b6831 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a612 : or eax, 0x2b6861 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a5e2 : or eax, 0x2b6891 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a5c1 : or eax, 0x2b68b2 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010a561 : or eax, 0x2b6912 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109fc5 : or eax, 0x2b6eae ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109f92 : or eax, 0x2b6ee1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109f62 : or eax, 0x2b6f11 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109f35 : or eax, 0x2b6f3e ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109f11 : or eax, 0x2b6f62 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109cb1 : or eax, 0x2b71c2 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109b82 : or eax, 0x2b72f1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109b55 : or eax, 0x2b731e ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109b22 : or eax, 0x2b7351 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109af2 : or eax, 0x2b7381 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109acb : or eax, 0x2b73a8 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109a62 : or eax, 0x2b7411 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109a3b : or eax, 0x2b7438 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001099b5 : or eax, 0x2b74be ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109985 : or eax, 0x2b74ee ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109952 : or eax, 0x2b7521 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010992b : or eax, 0x2b7548 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001098c5 : or eax, 0x2b75ae ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109892 : or eax, 0x2b75e1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109862 : or eax, 0x2b7611 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109835 : or eax, 0x2b763e ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109802 : or eax, 0x2b7671 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001097e1 : or eax, 0x2b7692 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109772 : or eax, 0x2b7701 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109742 : or eax, 0x2b7731 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109721 : or eax, 0x2b7752 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001096b2 : or eax, 0x2b77c1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109691 : or eax, 0x2b77e2 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109625 : or eax, 0x2b784e ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001095f5 : or eax, 0x2b787e ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001095c5 : or eax, 0x2b78ae ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109592 : or eax, 0x2b78e1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109562 : or eax, 0x2b7911 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109535 : or eax, 0x2b793e ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109505 : or eax, 0x2b796e ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001094d2 : or eax, 0x2b79a1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001094a2 : or eax, 0x2b79d1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109472 : or eax, 0x2b7a01 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109442 : or eax, 0x2b7a31 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109412 : or eax, 0x2b7a61 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001093e5 : or eax, 0x2b7a8e ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001093b2 : or eax, 0x2b7ac1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109391 : or eax, 0x2b7ae2 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109325 : or eax, 0x2b7b4e ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001092f2 : or eax, 0x2b7b81 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001092c2 : or eax, 0x2b7bb1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109292 : or eax, 0x2b7be1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109262 : or eax, 0x2b7c11 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109232 : or eax, 0x2b7c41 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109202 : or eax, 0x2b7c71 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001091d2 : or eax, 0x2b7ca1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001091a2 : or eax, 0x2b7cd1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109175 : or eax, 0x2b7cfe ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109132 : or eax, 0x2b7d41 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109102 : or eax, 0x2b7d71 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001090d2 : or eax, 0x2b7da1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001090a5 : or eax, 0x2b7dce ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000109022 : or eax, 0x2b7e51 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108e82 : or eax, 0x2b7ff1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108e52 : or eax, 0x2b8021 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108e22 : or eax, 0x2b8051 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108df2 : or eax, 0x2b8081 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108db2 : or eax, 0x2b80c1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108d89 : or eax, 0x2b80ea ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108c92 : or eax, 0x2b81e1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108c62 : or eax, 0x2b8211 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001076e5 : or eax, 0x2b978e ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001076b2 : or eax, 0x2b97c1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107685 : or eax, 0x2b97ee ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107652 : or eax, 0x2b9821 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107622 : or eax, 0x2b9851 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001075f5 : or eax, 0x2b987e ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001075c2 : or eax, 0x2b98b1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107595 : or eax, 0x2b98de ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107565 : or eax, 0x2b990e ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107532 : or eax, 0x2b9941 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000107502 : or eax, 0x2b9971 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001074d5 : or eax, 0x2b999e ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102e62 : or eax, 0x2be011 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102e32 : or eax, 0x2be041 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102e02 : or eax, 0x2be071 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102dd2 : or eax, 0x2be0a1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102da5 : or eax, 0x2be0ce ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102d72 : or eax, 0x2be101 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102d42 : or eax, 0x2be131 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102d1b : or eax, 0x2be158 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102cb2 : or eax, 0x2be1c1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102c82 : or eax, 0x2be1f1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000102a04 : or eax, 0x2be46f ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000100702 : or eax, 0x2c0771 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001006d2 : or eax, 0x2c07a1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ff1d2 : or eax, 0x2c1ca1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ff1a2 : or eax, 0x2c1cd1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ff172 : or eax, 0x2c1d01 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fee02 : or eax, 0x2c2071 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000feddb : or eax, 0x2c2098 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fed72 : or eax, 0x2c2101 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fed4b : or eax, 0x2c2128 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fece2 : or eax, 0x2c2191 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fecb2 : or eax, 0x2c21c1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000feb91 : or eax, 0x2c22e2 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000feb22 : or eax, 0x2c2351 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fea82 : or eax, 0x2c23f1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fe721 : or eax, 0x2c2752 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fe6c1 : or eax, 0x2c27b2 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fe65b : or eax, 0x2c2818 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fe5fb : or eax, 0x2c2878 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fe592 : or eax, 0x2c28e1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fe3b2 : or eax, 0x2c2ac1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fe022 : or eax, 0x2c2e51 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fdff2 : or eax, 0x2c2e81 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fdfc2 : or eax, 0x2c2eb1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd8b1 : or eax, 0x2c35c2 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fd0e5 : or eax, 0x2c3d8e ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fcdab : or eax, 0x2c40c8 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa202 : or eax, 0x2c6c71 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa1d2 : or eax, 0x2c6ca1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa1a2 : or eax, 0x2c6cd1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa175 : or eax, 0x2c6cfe ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa142 : or eax, 0x2c6d31 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa112 : or eax, 0x2c6d61 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa0e2 : or eax, 0x2c6d91 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa0b5 : or eax, 0x2c6dbe ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa082 : or eax, 0x2c6df1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f99f5 : or eax, 0x2c747e ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f99c2 : or eax, 0x2c74b1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f9992 : or eax, 0x2c74e1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f9962 : or eax, 0x2c7511 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f9102 : or eax, 0x2c7d71 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f90d2 : or eax, 0x2c7da1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f90ab : or eax, 0x2c7dc8 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f9042 : or eax, 0x2c7e31 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f9012 : or eax, 0x2c7e61 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8fe2 : or eax, 0x2c7e91 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8fb2 : or eax, 0x2c7ec1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8f82 : or eax, 0x2c7ef1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8f5b : or eax, 0x2c7f18 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8de2 : or eax, 0x2c8091 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8952 : or eax, 0x2c8521 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f892b : or eax, 0x2c8548 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f88cb : or eax, 0x2c85a8 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f86ab : or eax, 0x2c87c8 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8642 : or eax, 0x2c8831 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8612 : or eax, 0x2c8861 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8552 : or eax, 0x2c8921 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8522 : or eax, 0x2c8951 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8452 : or eax, 0x2c8a21 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8422 : or eax, 0x2c8a51 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8182 : or eax, 0x2c8cf1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f6f11 : or eax, 0x2c9f62 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f6eb1 : or eax, 0x2c9fc2 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ec142 : or eax, 0x2d4d31 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ec112 : or eax, 0x2d4d61 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ec0e2 : or eax, 0x2d4d91 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ec0b2 : or eax, 0x2d4dc1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ec082 : or eax, 0x2d4df1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ec052 : or eax, 0x2d4e21 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ec022 : or eax, 0x2d4e51 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ebff2 : or eax, 0x2d4e81 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000016ef93 : or eax, 0x2e6690c3 ; nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000ce4b2 : or eax, 0x2f29c1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ce482 : or eax, 0x2f29f1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ce452 : or eax, 0x2f2a21 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ce422 : or eax, 0x2f2a51 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ce3c2 : or eax, 0x2f2ab1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ce392 : or eax, 0x2f2ae1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ce1f2 : or eax, 0x2f2c81 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd772 : or eax, 0x2f3701 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd6ec : or eax, 0x2f3787 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd30b : or eax, 0x2f3b68 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd2ab : or eax, 0x2f3bc8 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd1f2 : or eax, 0x2f3c81 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cd115 : or eax, 0x2f3d5e ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ccf32 : or eax, 0x2f3f41 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000bfcb2 : or eax, 0x3011c1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000bfc82 : or eax, 0x3011f1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000bc912 : or eax, 0x304561 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000087919 : or eax, 0x33beba ; jb 0x8793e ; sub rax, 0x10 ; ret
0x000000000006c345 : or eax, 0x354b2e ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000006c312 : or eax, 0x354b61 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000b638e : or eax, 0x358d4800 ; xchg eax, ecx ; or rax, 0x3d8d4800 ; ret 0xd83
0x00000000000483c2 : or eax, 0x378ab1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000048092 : or eax, 0x378de1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000047ffe : or eax, 0x378e75 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000036182 : or eax, 0x38acf1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000035ab2 : or eax, 0x38b3c1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000006d1d2 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000006d8f2 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x0000000000098002 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x000000000008dcd5 : or eax, 0x48fad348 ; test edx, edx ; je 0x8dd0c ; bsf rax, rdx ; ret
0x000000000008dcd5 : or eax, 0x48fad348 ; test edx, edx ; je 0x8dd0d ; bsf rax, rdx ; ret
0x000000000012f24f : or eax, 0x4c0000e0 ; lea ecx, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013815f : or eax, 0x52340 ; mov esi, esi ; movsxd rax, dword ptr [rcx + rsi*4] ; add rax, rcx ; jmp rax
0x00000000001378cf : or eax, 0x52b90 ; mov esi, esi ; movsxd rax, dword ptr [rcx + rsi*4] ; add rax, rcx ; jmp rax
0x0000000000199399 : or eax, 0x5384fffb ; add al, byte ptr [rax] ; in al, 0xe ; sti ; call rsp
0x00000000000b3bed : or eax, 0x590ff300 ; shl byte ptr [rdi + rax*8], 0x22 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000148586 : or eax, 0x633a0f66 ; add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000148562 : or eax, 0x633a0f66 ; add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000006415d : or eax, 0x63480012 ; add al, 0x81 ; add rax, rcx ; jmp rax
0x00000000000a6a45 : or eax, 0x724850f ; add byte ptr [rax], al ; ret
0x00000000000a7958 : or eax, 0x77f0ff3 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a87a8 : or eax, 0x77f0ff3 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000bcb16 : or eax, 0x841f0f66 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000000a80f9 : or eax, 0x880850f ; add byte ptr [rax], al ; ret
0x0000000000096586 : or eax, 0x8a0c8b00 ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000004bb19 : or eax, 0xb87 ; add rax, rcx ; jmp rax
0x000000000010a45a : or eax, 0xbe058d48 ; out 7, eax ; add byte ptr [rdi], cl ; mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000c38fa : or eax, 0xc3291 ; movzx edx, sil ; movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x00000000000d6d2d : or eax, 0xc58351eb ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000fe43b : or eax, 0xc764e975 ; add eax, dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000aac87 : or eax, 0xce8c100 ; and eax, 0xf ; movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x00000000000aad1f : or eax, 0xceac100 ; and edx, 0xf ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x0000000000186059 : or eax, 0xd10fff2 ; jmp qword ptr [rax]
0x0000000000186049 : or eax, 0xd30fff2 ; jmp rax
0x0000000000186081 : or eax, 0xdb0fff2 ; inc eax ; or eax, 0xdd0fff2 ; jmp rax
0x000000000017b3d9 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x0000000000186085 : or eax, 0xdc0fff2 ; call rax
0x0000000000186089 : or eax, 0xdd0fff2 ; jmp rax
0x000000000018608d : or eax, 0xde0fff2 ; push rax ; or eax, 0xe00fff2 ; jmp qword ptr [rax]
0x0000000000186095 : or eax, 0xe00fff2 ; jmp qword ptr [rax]
0x0000000000193791 : or eax, 0xef0fffc ; cld ; inc dword ptr [rax + 0x10] ; cld ; call qword ptr [rax - 0x1f0003ef]
0x000000000002db03 : or eax, 0xf8834800 ; dec dword ptr [rax - 0x77] ; ret
0x00000000001ba096 : or eax, 0xffff0000 ; add dword ptr [rax], ebp ; stosd dword ptr [rdi], eax ; add cl, al ; add dword ptr [rax], eax ; add al, bl ; add al, 5 ; ret 0xb
0x000000000005ab8f : or eax, 0xfffffa6c ; add rax, rcx ; jmp rax
0x000000000004f04f : or eax, 0xfffffb2c ; add rax, rcx ; jmp rax
0x000000000005aa97 : or eax, 0xfffffb64 ; add rax, rcx ; jmp rax
0x000000000004eedb : or eax, 0xfffffca0 ; add rax, rcx ; jmp rax
0x000000000005a8dd : or eax, 0xfffffd1e ; add rax, rcx ; jmp rax
0x00000000001a8b2d : or eax, dword ptr [r8] ; adc al, 0 ; add byte ptr [rax], al ; fdivr st(1), st(0) ; add byte ptr [rax], al ; test al, 0x46 ; jmp qword ptr [rcx]
0x00000000001b5a4c : or eax, dword ptr [r8] ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; cld ; rol byte ptr [rcx], 0 ; pop rax ; ret 0xfff7
0x00000000001a8abc : or eax, dword ptr [r8] ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; int1 ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0xe], al ; call qword ptr [rdx]
0x00000000001ad44b : or eax, dword ptr [r8] ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; cmp al, byte ptr [rcx] ; add byte ptr [rax + 0x55], ch ; cmc ; call qword ptr [rdx]
0x00000000001b9aa3 : or eax, dword ptr [r8] ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rcx + rax + 2], dl ; add byte ptr [rax - 0x3d], ah ; clc ; jmp rcx
0x00000000001a8b2e : or eax, dword ptr [rax] ; adc al, 0 ; add byte ptr [rax], al ; fdivr st(1), st(0) ; add byte ptr [rax], al ; test al, 0x46 ; jmp qword ptr [rcx]
0x00000000001aafb5 : or eax, dword ptr [rax] ; add byte ptr [rax + rax + 0x16640000], dl ; add dword ptr [rax], eax ; adc byte ptr [rbp - 0xc], bh ; jmp rdi
0x00000000001b5a4d : or eax, dword ptr [rax] ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; cld ; rol byte ptr [rcx], 0 ; pop rax ; ret 0xfff7
0x00000000001b5c95 : or eax, dword ptr [rax] ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; ret
0x00000000001a8abd : or eax, dword ptr [rax] ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; int1 ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0xe], al ; call qword ptr [rdx]
0x000000000003ca1c : or eax, dword ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000147bbd : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a701 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000147be1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001a5474 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; and al, 0xbb ; add byte ptr [rax], al ; xor bh, bl ; cld ; call qword ptr [rax]
0x00000000001ad44c : or eax, dword ptr [rax] ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; cmp al, byte ptr [rcx] ; add byte ptr [rax + 0x55], ch ; cmc ; call qword ptr [rdx]
0x00000000001b8bcc : or eax, dword ptr [rax] ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; jl 0x1b8bd7 ; add dword ptr [rax], eax ; clc ; sahf ; sti ; jmp qword ptr [rdx]
0x00000000001b8afc : or eax, dword ptr [rax] ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; int1 ; add dword ptr [rax], eax ; cwde ; lahf ; sti ; jmp qword ptr [rdx]
0x00000000001a9294 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; stc ; add byte ptr [rax], al ; mov al, 0x91 ; call rbx
0x00000000001b2b1b : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + rax], al ; add ah, cl ; xchg eax, ecx ; add dword ptr [rax], eax ; enter -0x91b, -1 ; ret
0x00000000001a9dab : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add byte ptr [rsp + rax + 1], bl ; add byte ptr [rax + 0x36], ch ; call qword ptr [rcx]
0x00000000001b6943 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; hlt ; iretd ; add dword ptr [rax], eax ; adc byte ptr [rax + rdi*8], cl ; jmp qword ptr [rax]
0x00000000001ad4fb : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; cmp eax, dword ptr [rcx] ; add byte ptr [rax + 0x57], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001ab65b : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; or al, 0x1d ; add dword ptr [rax], eax ; or bl, cl ; hlt ; jmp qword ptr [rcx]
0x00000000001b69d3 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; test al, dl ; add dword ptr [rax], eax ; and byte ptr [rsi], cl ; clc ; jmp qword ptr [rax]
0x00000000001a4583 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xor al, 0xac ; add byte ptr [rax], al ; push rax ; ret
0x00000000001ac99b : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xor byte ptr [rcx], r8b ; add byte ptr [rax + 0x21], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001abc32 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, 0x22 ; add dword ptr [rax], eax ; adc ch, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001a2a3a : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; nop ; add byte ptr [rax], al ; fmul st(4) ; in eax, dx ; call qword ptr [rdx]
0x00000000001a72da : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov ecx, ds ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0xf], dl ; jmp qword ptr [rcx]
0x00000000001aec82 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xor al, 0x53 ; add dword ptr [rax], eax ; nop ; mov ch, 0xf5 ; jmp qword ptr [rbx]
0x000000000000ddd8 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x00000000001b3f22 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, dl ; movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; shr cl, 0xfb ; call rsi
0x000000000019f3ba : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr fs:[rax], al ; add byte ptr [rdi + rax + 0x5180000], ch ; in eax, dx ; call qword ptr [rcx]
0x000000000019e04c : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, bh ; add byte ptr [rax], r8b ; shr rdx, 1 ; jmp rdi
0x00000000001b9aa4 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rcx + rax + 2], dl ; add byte ptr [rax - 0x3d], ah ; clc ; jmp rcx
0x000000000003b54b : or eax, dword ptr [rax] ; add byte ptr [rax], al ; mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x00000000001af87c : or eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rsp ; add byte ptr [rax], al ; add byte ptr [rdi + rbx*2], ch ; add dword ptr [rax], eax ; cmp bh, ah ; cmc ; jmp rsp
0x000000000019f6a4 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; push rsp ; add byte ptr [rax], al ; add byte ptr [rdx + rcx + 0x12700000], dl ; in eax, dx ; call qword ptr [rax]
0x0000000000130022 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001a724c : or eax, dword ptr [rax] ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cld ; fadd dword ptr [rax] ; add al, ch ; push rsp ; int1 ; jmp qword ptr [rax]
0x00000000001a9e4c : or eax, dword ptr [rax] ; add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; cld ; add al, 1 ; add byte ptr [rax + 0x41], cl ; call qword ptr [rdx]
0x0000000000102c71 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x102c8e ; ret
0x00000000000cec47 : or eax, dword ptr [rax] ; mov esi, esi ; movsxd rax, dword ptr [rdx + rsi*4] ; add rax, rdx ; jmp rax
0x00000000000d2a8e : or eax, dword ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000cefb9 : or eax, dword ptr [rax] ; movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x00000000000d501f : or eax, dword ptr [rax] ; movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000008d5af : or eax, dword ptr [rax] ; ret
0x00000000000fa164 : or eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfa181 ; ret
0x0000000000036b98 : or eax, dword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000001aab32 : or eax, dword ptr [rsi + rcx + 8] ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, 0x11 ; add dword ptr [rax], eax ; xor byte ptr [rdi], dl ; hlt ; call qword ptr [rdx]
0x00000000000d4a5d : or eax, dword ptr cs:[rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000154e23 : or eax, ebp ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000016ef73 : or eax, ebx ; nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000003b446 : or eax, ecx ; cdqe ; mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000098117 : or eax, ecx ; shl rdx, 0x30 ; or rax, rdx ; bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000009811e : or eax, edx ; bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000034d75 : or eax, edx ; movq xmm0, rax ; ret
0x0000000000034a8a : or eax, edx ; sar rax, 0x3f ; not eax ; and eax, ecx ; ret
0x000000000012a17b : or ebp, 2 ; mov dword ptr [r12 + 0x40], ebp ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007eea4 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000071d70 : or ebp, edx ; mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001a19e2 : or ebx, dword ptr [r9 + 0xe] ; or byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rax + rax*4 - 0x73400000], dl ; in eax, dx ; jmp rcx
0x00000000001934ac : or ebx, dword ptr [rax - 0x676f0003] ; std ; jmp qword ptr [rax]
0x00000000001a19e3 : or ebx, dword ptr [rcx + 0xe] ; or byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rax + rax*4 - 0x73400000], dl ; in eax, dx ; jmp rcx
0x000000000016ef53 : or ebx, eax ; nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000007c9c7 : or ecx, 0x20 ; mov dword ptr [rdi], ecx ; mov dword ptr fs:[rax], 9 ; mov eax, 0xffffffff ; ret
0x0000000000087b7b : or ecx, dword ptr [rax + 0x63] ; ret
0x000000000013ac44 : or ecx, dword ptr [rax + 5] ; test al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000913fc : or ecx, dword ptr [rax - 0x73] ; adc al, 0xe ; cmp rdi, rdx ; jb 0x91415 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000719b4 : or ecx, dword ptr [rax - 0x73] ; add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x00000000000a69ff : or ecx, dword ptr [rax - 0x73] ; jg 0xa6a1a ; jne 0xa717b ; ret
0x00000000000a80b3 : or ecx, dword ptr [rax - 0x73] ; jg 0xa80ce ; jne 0xa898b ; ret
0x000000000006f044 : or ecx, dword ptr [rax - 0x75] ; and al, 8 ; add rsp, 0x18 ; ret
0x00000000001724a4 : or ecx, dword ptr [rax - 0x75] ; jg 0x1724c4 ; test rdi, rdi ; jne 0x1724ab ; ret
0x0000000000071348 : or ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x00000000000cae9b : or ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000100ffa : or ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x000000000011286d : or ecx, dword ptr [rax - 0x7d] ; ret 0x4830
0x00000000000ec442 : or ecx, dword ptr [rax - 0x7d] ; ret 0xf01
0x000000000002458d : or ecx, dword ptr [rax - 0x7d] ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000007f759 : or ecx, dword ptr [rax] ; pop rbx ; ret
0x0000000000158c49 : or ecx, dword ptr [rbp + rcx*4 + 0x1d] ; pop rdi ; lodsd eax, dword ptr [rsi] ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000f3ad9 : or ecx, dword ptr [rcx + rcx] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000016a287 : or ecx, dword ptr [rdi] ; test dword ptr [rdx + 2], esi ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000000a6a03 : or ecx, dword ptr [rdi] ; test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x00000000000909c2 : or ecx, dword ptr [rdx + 0xc38034a] ; or al, 0x75 ; fisttp qword ptr [rax - 1] ; ret 0xff48
0x0000000000036aae : or ecx, dword ptr [rdx + rax*8] ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x00000000001566e3 : or ecx, edx ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000a1267 : or ecx, esi ; bsf rcx, rcx ; movzx eax, byte ptr [rax + rcx] ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000000ce8fb : or edi, dword ptr [rax + 0xfde8] ; jne 0xce8d4 ; ret
0x00000000001104fc : or edi, dword ptr [rax + 1] ; ret
0x0000000000130454 : or edi, dword ptr [rax + 2] ; ret
0x0000000000114e94 : or edi, dword ptr [rax + 7] ; ret
0x000000000006c2e3 : or edi, ebx ; or byte ptr [rax], al ; test eax, eax ; setne al ; movzx eax, al ; neg eax ; pop rbx ; ret
0x00000000001725d0 : or edi, edi ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a6063 : or edi, edi ; loope 0xa60dc ; nop dword ptr cs:[rax + rax] ; mov byte ptr [rdi], dh ; ret
0x00000000000a7307 : or edi, edi ; loope 0xa737d ; nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000000a8b17 : or edi, edi ; loope 0xa8b8d ; nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000000a9143 : or edi, edi ; loope 0xa91bc ; nop dword ptr cs:[rax + rax] ; mov byte ptr [rdi], dh ; ret
0x00000000000a9c13 : or edi, edi ; loope 0xa9c8c ; nop dword ptr cs:[rax + rax] ; mov byte ptr [rdi], dh ; ret
0x00000000000aa397 : or edi, edi ; loope 0xaa40a ; nop dword ptr [rax + rax] ; ret
0x0000000000170d26 : or edi, esi ; fadd st(3) ; nop word ptr [rax + rax] ; ret
0x00000000001937c9 : or edi, esp ; inc eax ; or al, 0xfc ; call qword ptr [rax]
0x000000000007615e : or edx, 0x20 ; mov dword ptr [rdi], edx ; mov dword ptr fs:[rax], 9 ; mov eax, 0xffffffff ; ret
0x0000000000088b19 : or edx, 0xffffffff ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000001b35de : or edx, dword ptr [rax + r8] ; add byte ptr [rax], al ; mov word ptr [rcx + rax - 0x8cf4800], ds ; call rcx
0x00000000001af04f : or edx, dword ptr [rax + rax] ; add byte ptr [rax], al ; cld ; push rsi ; add dword ptr [rax], eax ; pop rax ; ret 0xfff5
0x00000000001b35df : or edx, dword ptr [rax + rax] ; add byte ptr [rax], al ; mov word ptr [rcx + rax - 0x8cf4800], ds ; call rcx
0x000000000019caaf : or edx, dword ptr [rax + rax] ; add byte ptr [rax], al ; pop rsp ; xor dword ptr [rax], eax ; add byte ptr [rax], bl ; fucompi st(1) ; jmp qword ptr [rsi]
0x00000000000ce8f9 : or edx, eax ; or edi, dword ptr [rax + 0xfde8] ; jne 0xce8d6 ; ret
0x000000000008dbbf : or edx, ecx ; bsf rdx, rdx ; add rax, rdx ; sub rax, rdi ; ret
0x000000000008dd80 : or edx, ecx ; bts rdx, r11 ; bsf rdx, rdx ; add rax, rdx ; sub rax, rdi ; ret
0x0000000000045d06 : or edx, ecx ; cmp esi, 0x40 ; cmovne rax, rdx ; ret
0x000000000004a649 : or edx, ecx ; or rdx, rax ; mov qword ptr [rsp - 8], rdx ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000185fe1 : or edx, esi ; inc dword ptr [rax - 0x5f000df7] ; or edx, esi ; inc eax ; or edx, esi ; jmp rax
0x0000000000185ff1 : or edx, esi ; inc dword ptr [rax] ; or dh, dl ; jmp qword ptr [rax]
0x0000000000185fe9 : or edx, esi ; inc eax ; or edx, esi ; jmp rax
0x0000000000185fd5 : or edx, esi ; jmp qword ptr [rax]
0x0000000000185fed : or edx, esi ; jmp rax
0x000000000019eed6 : or esi, dword ptr [r8 + rax] ; add byte ptr [rax], al ; test byte ptr [rbp], dl ; add al, dh ; in al, dx ; jmp qword ptr [rax]
0x000000000019eed7 : or esi, dword ptr [rax + rax] ; add byte ptr [rax], al ; test byte ptr [rbp], dl ; add al, dh ; in al, dx ; jmp qword ptr [rax]
0x000000000012e0d4 : or esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000013eda8 : or esi, ebx ; dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000186031 : or esi, edx ; call qword ptr [rax]
0x0000000000186021 : or esi, edx ; inc dword ptr [rax - 0x5f000df5] ; or esi, edx ; inc eax ; or esi, edx ; jmp rax
0x0000000000186029 : or esi, edx ; inc eax ; or esi, edx ; jmp rax
0x0000000000186015 : or esi, edx ; jmp qword ptr [rax]
0x000000000018602d : or esi, edx ; jmp rax
0x00000000000cfafe : or esi, esi ; rol dword ptr [rdi + rcx], -0x7b ; sahf ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000341f3 : or esp, 0xc7640038 ; add byte ptr [rcx], cl ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000006eff4 : or esp, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000075ea2 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000007a6a1 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000002fa7 : or esp, dword ptr [rdx] ; js 0x2f61 ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000f36ca : or qword ptr [r8], r8 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000f3ada : or qword ptr [rax], r8 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000036292 : or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x00000000000363a5 : or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000165e45 : or qword ptr [rdi], rcx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x000000000016a226 : or qword ptr [rdi], rcx ; test edx, edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x00000000000ac902 : or r11b, r8b ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a0807 : or r11b, r8b ; nop word ptr [rax + rax] ; mov byte ptr [rdi], sil ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000013e4e6 : or r15b, r15b ; push rax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000d2a8d : or r8, qword ptr [r8] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000037670 : or r8b, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x00000000001b8bcb : or r8d, dword ptr [r8] ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; jl 0x1b8bd8 ; add dword ptr [rax], eax ; clc ; sahf ; sti ; jmp qword ptr [rdx]
0x00000000001b8afb : or r8d, dword ptr [r8] ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; int1 ; add dword ptr [rax], eax ; cwde ; lahf ; sti ; jmp qword ptr [rdx]
0x00000000001b69d2 : or r8d, dword ptr [r8] ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; test al, dl ; add dword ptr [rax], eax ; and byte ptr [rsi], cl ; clc ; jmp qword ptr [rax]
0x00000000001a4582 : or r8d, dword ptr [r8] ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xor al, 0xac ; add byte ptr [rax], al ; push rax ; ret
0x00000000001af87b : or r8d, dword ptr [r8] ; add byte ptr [rax], al ; pop rsp ; add byte ptr [rax], al ; add byte ptr [rdi + rbx*2], ch ; add dword ptr [rax], eax ; cmp bh, ah ; cmc ; jmp rsp
0x00000000001a724b : or r8d, dword ptr [r8] ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; cld ; fadd dword ptr [rax] ; add al, ch ; push rsp ; int1 ; jmp qword ptr [rax]
0x00000000000d3077 : or r8d, dword ptr [r8] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000001aafb4 : or r8d, dword ptr [rax] ; add byte ptr [rax + rax + 0x16640000], dl ; add dword ptr [rax], eax ; adc byte ptr [rbp - 0xc], bh ; jmp rdi
0x00000000001a5473 : or r8d, dword ptr [rax] ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; and al, 0xbb ; add byte ptr [rax], al ; xor bh, bl ; cld ; call qword ptr [rax]
0x00000000001a9293 : or r8d, dword ptr [rax] ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; stc ; add byte ptr [rax], al ; mov al, 0x91 ; call rbx
0x00000000001a9daa : or r8d, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add byte ptr [rsp + rax + 1], bl ; add byte ptr [rax + 0x36], ch ; call qword ptr [rcx]
0x00000000001b6942 : or r8d, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; hlt ; iretd ; add dword ptr [rax], eax ; adc byte ptr [rax + rdi*8], cl ; jmp qword ptr [rax]
0x00000000001ad4fa : or r8d, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; cmp eax, dword ptr [rcx] ; add byte ptr [rax + 0x57], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001ab65a : or r8d, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; or al, 0x1d ; add dword ptr [rax], eax ; or bl, cl ; hlt ; jmp qword ptr [rcx]
0x000000000019e04b : or r8d, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, bh ; add byte ptr [rax], r8b ; shr rdx, 1 ; jmp rdi
0x000000000019f6a3 : or r8d, dword ptr [rax] ; add byte ptr [rax], al ; push rsp ; add byte ptr [rax], al ; add byte ptr [rdx + rcx + 0x12700000], dl ; in eax, dx ; call qword ptr [rax]
0x00000000001a9e4b : or r8d, dword ptr [rax] ; add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; cld ; add al, 1 ; add byte ptr [rax + 0x41], cl ; call qword ptr [rdx]
0x0000000000165ec7 : or rax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x00000000000cea4c : or rax, 0x20 ; ret
0x000000000016a2e8 : or rax, 0x210850f ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000000cf004 : or rax, 0x31069 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000b6394 : or rax, 0x3d8d4800 ; ret 0xd83
0x000000000006d1d1 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000006d8f1 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000006415c : or rax, 0x63480012 ; add al, 0x81 ; add rax, rcx ; jmp rax
0x00000000000ce91c : or rax, 0x7f ; ret
0x000000000003cf9a : or rax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003d114 : or rax, 0xb8480000 ; ret 0xffff
0x0000000000035abc : or rax, 0xffffffffffffffff ; ret
0x00000000000ceb2c : or rax, 1 ; ret
0x00000000001b7d9e : or rax, qword ptr [r14 + r9 + 0x38] ; ret
0x000000000014fb62 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001ac99a : or rax, qword ptr [r8] ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xor byte ptr [rcx], r8b ; add byte ptr [rax + 0x21], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001b5c94 : or rax, qword ptr [rax] ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; ret
0x0000000000036b97 : or rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000001adb50 : or rax, qword ptr [rsi + rcx + 0x38] ; ret
0x0000000000108f05 : or rax, rdi ; ret
0x000000000009811d : or rax, rdx ; bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000034d74 : or rax, rdx ; movq xmm0, rax ; ret
0x000000000003a90b : or rax, rdx ; ret
0x0000000000034a89 : or rax, rdx ; sar rax, 0x3f ; not eax ; and eax, ecx ; ret
0x000000000016a286 : or rcx, qword ptr [rdi] ; test dword ptr [rdx + 2], esi ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000036aad : or rcx, qword ptr [rdx + rax*8] ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x00000000000a1266 : or rcx, rsi ; bsf rcx, rcx ; movzx eax, byte ptr [rax + rcx] ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000001af04e : or rdx, qword ptr [rax + r8] ; add byte ptr [rax], al ; cld ; push rsi ; add dword ptr [rax], eax ; pop rax ; ret 0xfff5
0x000000000019caae : or rdx, qword ptr [rax + r8] ; add byte ptr [rax], al ; pop rsp ; xor dword ptr [rax], eax ; add byte ptr [rax], bl ; fucompi st(1) ; jmp qword ptr [rsi]
0x000000000004a64b : or rdx, rax ; mov qword ptr [rsp - 8], rdx ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000008dbbe : or rdx, rcx ; bsf rdx, rdx ; add rax, rdx ; sub rax, rdi ; ret
0x000000000008dd7f : or rdx, rcx ; bts rdx, r11 ; bsf rdx, rdx ; add rax, rdx ; sub rax, rdi ; ret
0x000000000004a648 : or rdx, rcx ; or rdx, rax ; mov qword ptr [rsp - 8], rdx ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000004a512 : or rsi, rax ; mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x000000000010074b : out -0x10, eax ; add edi, 0x26 ; mov dword ptr fs:[rax], edi ; mov eax, 0xffffffff ; ret
0x0000000000154845 : out -0x13, eax ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000019ced9 : out -0x17, eax ; call qword ptr [rax]
0x000000000012ad91 : out -0x18, eax ; cdq ; sub al, 0xf6 ; dec dword ptr [rax + 0x39] ; ret
0x00000000000ca2c6 : out -0x18, eax ; je 0xca30b ; sti ; lcall ptr [rcx + 0x2404f741] ; add byte ptr [rax - 0x7af10000], al ; ret
0x0000000000105e03 : out -0x18, eax ; scasd eax, dword ptr [rdi] ; wait ; int1 ; dec dword ptr [rax - 0x75] ; jge 0x105e17 ; call rbx
0x0000000000157605 : out -0x3f, eax ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000011758d : out -0x68, eax ; sub al, byte ptr [rax] ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000001870b4 : out -4, eax ; lcall ptr [rdi] ; out dx, al ; call qword ptr [rax]
0x00000000000f71ed : out -8, eax ; sub rcx, rdi ; add ecx, 0x150 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000f6f7a : out -8, eax ; sub rcx, rdi ; add ecx, 0x50 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000362df : out -8, eax ; sub rcx, rdi ; sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000172098 : out 0x24, eax ; add byte ptr [rcx - 0x77], cl ; sbb al, 0x24 ; mov rdx, qword ptr [rax + rbp*8] ; test rdx, rdx ; je 0x1720ba ; call rdx
0x0000000000050965 : out 0x31, eax ; test byte ptr [rax - 0x3f], 0xc8 ; adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000034c33 : out 0x34, eax ; and rdx, rax ; or rdi, rdx ; movq xmm1, rdi ; movapd xmm0, xmm1 ; ret
0x0000000000034179 : out 0x41, al ; mov eax, dword ptr [rcx + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x000000000008847f : out 0x48, al ; mov edi, ebp ; call rax
0x0000000000130e26 : out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x000000000007346d : out 0x48, al ; mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000070ec0 : out 0x48, al ; mov edi, ebx ; xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000035619 : out 0x48, al ; ror eax, 0x11 ; xor rax, qword ptr fs:[0x30] ; jmp rax
0x00000000000888be : out 0x5b, al ; pop rbp ; pop r12 ; jmp rax
0x0000000000088b6b : out 0x5d, al ; pop r12 ; jmp rax
0x00000000000b0b43 : out 0x89, al ; ror dword ptr [rax - 0x77], 1 ; ret 0xd348
0x0000000000104b16 : out 0xa, al ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000000a0fea : out 0xc6, al ; add al, 3 ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0xb6e8
0x0000000000072cbf : out 0xe8, al ; cmp esp, dword ptr [rdi - 2] ; dec dword ptr [rax - 0x75] ; xchg eax, esp ; and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000001106d7 : out 0xe8, al ; ror dword ptr [rax + rdi*8], cl ; dec dword ptr [rax + 1] ; imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000aaca4 : out 0xf0, al ; mov edx, 0 ; cmove rax, rdx ; pop rbx ; ret
0x00000000000aad52 : out 0xf0, al ; mov edx, 0 ; cmove rax, rdx ; ret
0x0000000000102097 : out 0xf1, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000069f37 : out 0xff, al ; dec dword ptr [rax - 0x7d] ; ret 0xbe08
0x00000000001babf8 : out 1, al ; add byte ptr [rax], al ; ret
0x000000000013efe3 : out 7, al ; movsxd rax, dword ptr [rcx + rsi*4] ; shr rdx, 3 ; add rax, rcx ; jmp rax
0x000000000010a45f : out 7, eax ; add byte ptr [rdi], cl ; mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000001433c6 : out 8, al ; add byte ptr [rax], al ; add rsp, 0x510 ; mov rax, rbx ; pop rbx ; ret
0x000000000004e295 : out 8, eax ; add byte ptr [rax], al ; mov dword ptr [rbp - 0x4f0], 1 ; jmp rax
0x00000000001309f9 : out dx, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x000000000004ea13 : out dx, al ; add byte ptr ss:[rax - 0x77], cl ; ret 0x2948
0x0000000000044011 : out dx, al ; add dword ptr [rax - 0x77], ecx ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret
0x0000000000041199 : out dx, al ; add dword ptr [rax - 0x77], ecx ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0xc148
0x000000000012650f : out dx, al ; add dword ptr [rax - 0x78], eax ; ja 0x12651c ; ret
0x0000000000198565 : out dx, al ; add dword ptr [rax], eax ; add edi, ecx ; push qword ptr [rsi + rbp*8 + 0x3a40001] ; stc ; jmp rsp
0x000000000019856d : out dx, al ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; add edi, ecx ; jmp rsp
0x0000000000098c0b : out dx, al ; add dword ptr [rbp - 0xf], esi ; xor edi, edi ; mov rax, rdi ; ret
0x0000000000154794 : out dx, al ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001870b9 : out dx, al ; call qword ptr [rax]
0x00000000000794cf : out dx, al ; cmp qword ptr [rdi + 0x10], rax ; jb 0x794ce ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x0000000000195a2a : out dx, al ; dec dword ptr [rax - 0x5fdc0000] ; out dx, al ; jmp rsp
0x0000000000135f22 : out dx, al ; dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000133557 : out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000130955 : out dx, al ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rax - 0x77], 0xc3 ; jne 0x1308ff ; xor eax, eax ; pop rbx ; ret
0x000000000013ab85 : out dx, al ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + rax*4 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000001366cb : out dx, al ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000185312 : out dx, al ; inc dword ptr [rax - 0x7f001185] ; jnp 0x18531a ; inc dword ptr [rax - 0x7f001185] ; jnp 0x185322 ; jmp rax
0x000000000018531a : out dx, al ; inc dword ptr [rax - 0x7f001185] ; jnp 0x18531a ; jmp rax
0x0000000000109986 : out dx, al ; je 0x1099c1 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001852c2 : out dx, al ; jmp qword ptr [rax]
0x0000000000185322 : out dx, al ; jmp rax
0x00000000000acd8d : out dx, al ; lea r9, qword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x0000000000195662 : out dx, al ; ljmp ptr [rax + rcx*8 + 0x2db40000] ; out dx, al ; call rsp
0x000000000019565a : out dx, al ; ljmp ptr [rax + rcx*8] ; add ah, al ; sub al, 0xee ; ljmp ptr [rax + rcx*8 + 0x2db40000] ; out dx, al ; call rsp
0x00000000000acc57 : out dx, al ; mov rdi, qword ptr [r12] ; lea r9, qword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000039270 : out dx, al ; mov rdi, qword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x000000000008b042 : out dx, al ; mov rdi, r12 ; call rax
0x00000000000881cc : out dx, al ; mov rdi, rax ; mov rbx, rax ; call 0x844d9
0x000000000008a194 : out dx, al ; mov rdi, rbx ; call rax
0x00000000000ac169 : out dx, al ; nop word ptr [rax + rax] ; ret
0x000000000014e1be : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000077ee7 : out dx, al ; or dword ptr [rax], eax ; add rsp, 0x80 ; pop rbx ; ret
0x0000000000195a22 : out dx, al ; push qword ptr [rax] ; add ah, dh ; pushfq ; out dx, al ; dec dword ptr [rax - 0x5fdc0000] ; out dx, al ; jmp rsp
0x00000000000c9845 : out dx, al ; push rdx ; mov rdx, qword ptr [rsp + 0x28] ; mov rdi, qword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000c8264 : out dx, al ; test eax, eax ; jne 0xc829d ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000107686 : out dx, al ; xchg eax, edi ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ab04d : out dx, eax ; adc byte ptr [rax + 1], cl ; clc ; ret
0x00000000001035bd : out dx, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ce8c2 : out dx, eax ; add byte ptr [rax], al ; je 0xce9ae ; mov eax, 0x7f ; ret
0x00000000001a8865 : out dx, eax ; add byte ptr [rax], al ; sbb byte ptr [rcx], bh ; call rsi
0x00000000001b891d : out dx, eax ; add dword ptr [rax], eax ; loopne 0x1b898c ; clc ; jmp qword ptr [rcx]
0x0000000000154644 : out dx, eax ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000012514a : out dx, eax ; add ecx, dword ptr [rax - 0x7d] ; call qword ptr [rcx]
0x00000000001254fa : out dx, eax ; add ecx, dword ptr [rcx + rcx*4 + 0x4d] ; mov byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x0000000000153bc4 : out dx, eax ; and byte ptr [rbp + rcx*4 + 0x1d], cl ; movsxd rdi, edx ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000204b1 : out dx, eax ; call rax
0x0000000000126ca6 : out dx, eax ; dec dword ptr [rax - 0x73] ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000001224fa : out dx, eax ; dec dword ptr [rax - 0x75] ; jnp 0x122554 ; test rdi, rdi ; jne 0x1224fc ; pop rbx ; ret
0x0000000000122e5c : out dx, eax ; dec dword ptr [rax - 0x77] ; add eax, 0x29f9db ; add rsp, 8 ; ret
0x000000000012d786 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x0000000000137615 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x000000000013764d : out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x0000000000195e72 : out dx, eax ; dec esp ; inc dword ptr [rax] ; add byte ptr [rbx + rsi*4], dh ; out dx, eax ; jmp rsp
0x0000000000195e12 : out dx, eax ; dec esp ; std ; add byte ptr [rax], al ; in al, -0x6f ; out dx, eax ; jmp rsp
0x0000000000195d42 : out dx, eax ; inc dword ptr [rax + rdi*8 + 0x6a140000] ; out dx, eax ; jmp rsp
0x0000000000195ed2 : out dx, eax ; inc esp ; add dword ptr [rcx], eax ; add byte ptr [rsi + rax*8], dh ; out dx, eax ; jmp rsp
0x000000000012f199 : out dx, eax ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012f0bf : out dx, eax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x0000000000195eca : out dx, eax ; ljmp ptr [rcx + rax - 0x3acbffff] ; out dx, eax ; inc esp ; add dword ptr [rcx], eax ; add byte ptr [rsi + rax*8], dh ; out dx, eax ; jmp rsp
0x000000000007af46 : out dx, eax ; mov qword ptr [rbx + 0x90], rax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000107738 : out dx, eax ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000048fe0 : out dx, eax ; mov rax, rdx ; ret
0x000000000008b197 : out dx, eax ; mov rdx, rbp ; mov rsi, r12 ; call rax
0x000000000014e2bd : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000077dac : out dx, eax ; or dword ptr [rax], eax ; add rsp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x00000000001725ff : out dx, eax ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000088234 : out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x0000000000195e0a : out dx, eax ; push qword ptr [rbp + rdi*8 - 0x6e4c0000] ; out dx, eax ; dec esp ; std ; add byte ptr [rax], al ; in al, -0x6f ; out dx, eax ; jmp rsp
0x0000000000195f72 : out dx, eax ; push qword ptr [rbx + rax - 0x2b9bffff] ; out dx, eax ; dec esp ; add eax, dword ptr [rcx] ; add byte ptr [rsp + rdx*8 - 0x11], dh ; jmp rsp
0x0000000000195e6a : out dx, eax ; push qword ptr [rdi + rdi*8 - 0x4d0c0000] ; out dx, eax ; dec esp ; inc dword ptr [rax] ; add byte ptr [rbx + rsi*4], dh ; out dx, eax ; jmp rsp
0x000000000003759a : out dx, eax ; ror byte ptr [rax + 0xf], 0xaf ; ret 0x8949
0x000000000002f2a9 : out dx, eax ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x000000000012387c : out dx, eax ; sub dword ptr [rax], eax ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000123894 : out dx, eax ; sub dword ptr [rax], eax ; ret
0x000000000016b9df : out dx, eax ; xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ba9c : out dx, eax ; xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016b9fa : out dx, eax ; xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ba4b : out dx, eax ; xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008fdad : out dx, eax ; xlatb ; or eax, dword ptr [rax] ; ret
0x0000000000149e6e : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000006f75f : outsb dx, byte ptr [rsi] ; add al, 1 ; je 0x6f79b ; mov rax, rdx ; pop rbx ; ret
0x000000000007889f : outsb dx, byte ptr [rsi] ; add al, 1 ; je 0x788db ; mov rax, rdx ; pop rbx ; ret
0x000000000016ed7e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000193ddd : outsb dx, byte ptr [rsi] ; cld ; call qword ptr [rax]
0x0000000000193e1d : outsb dx, byte ptr [rsi] ; cld ; inc dword ptr [rax] ; outsb dx, byte ptr [rsi] ; cld ; push qword ptr [rax + 0x6d] ; cld ; jmp rax
0x0000000000193c21 : outsb dx, byte ptr [rsi] ; cld ; jmp rax
0x0000000000193e21 : outsb dx, byte ptr [rsi] ; cld ; push qword ptr [rax + 0x6d] ; cld ; jmp rax
0x0000000000193c1d : outsb dx, byte ptr [rsi] ; cld ; push qword ptr [rax + 0x6e] ; cld ; jmp rax
0x0000000000109506 : outsb dx, byte ptr [rsi] ; jns 0x109541 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000010267e : outsb dx, byte ptr [rsi] ; loopne 0x102678 ; dec dword ptr [rax - 0x77] ; ret
0x000000000008a772 : outsb dx, byte ptr [rsi] ; nop ; xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000350c4 : outsb dx, byte ptr [rsi] ; ror byte ptr [rcx + 0x1f0fc317], 0x80 ; add byte ptr [rax], al ; add byte ptr [rax], al ; addss xmm0, xmm0 ; ret
0x0000000000109f94 : outsb dx, byte ptr [rsi] ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001b093d : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; and byte ptr [rbx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001b0955 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; cmp byte ptr [rbx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001b08f5 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; fsub dword ptr [rdx - 0xa] ; jmp qword ptr [rsi]
0x00000000001b0925 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; or byte ptr [rbx - 0xa], ah ; jmp qword ptr [rsi]
0x000000000015cf87 : outsd dx, dword ptr [rsi] ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000119b8d : outsd dx, dword ptr [rsi] ; clc ; dec dword ptr [rax - 0x75] ; xchg eax, esp ; and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000193dd9 : outsd dx, dword ptr [rsi] ; cld ; call qword ptr [rax + 0x10fffc6e]
0x0000000000193dd5 : outsd dx, dword ptr [rsi] ; cld ; call qword ptr [rax]
0x0000000000193e19 : outsd dx, dword ptr [rsi] ; cld ; inc dword ptr [rax + 0xfffc6e] ; outsb dx, byte ptr [rsi] ; cld ; push qword ptr [rax + 0x6d] ; cld ; jmp rax
0x0000000000193c15 : outsd dx, dword ptr [rsi] ; cld ; push qword ptr [rax + 0x6f] ; cld ; push rax ; outsb dx, byte ptr [rsi] ; cld ; push qword ptr [rax + 0x6e] ; cld ; jmp rax
0x0000000000193c19 : outsd dx, dword ptr [rsi] ; cld ; push rax ; outsb dx, byte ptr [rsi] ; cld ; push qword ptr [rax + 0x6e] ; cld ; jmp rax
0x000000000014d4fa : outsd dx, dword ptr [rsi] ; fsub dword ptr [rsi + 0xf] ; cmp byte ptr [rax], al ; fldenv dword ptr [rsi + 0xf] ; cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x0000000000102a05 : outsd dx, dword ptr [rsi] ; in al, 0x2b ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000002fa5 : outsd dx, dword ptr [rsi] ; mov byte ptr [rbx], cl ; and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000014d3d6 : outsd dx, dword ptr [rsi] ; or byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; enter 0xf66, 0x3a ; movsxd rcx, ecx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x0000000000137614 : outsd dx, dword ptr [rsi] ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x000000000013764c : outsd dx, dword ptr [rsi] ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x000000000007b005 : outsd dx, dword ptr [rsi] ; pop rsi ; xor al, 0 ; neg eax ; mov dword ptr fs:[rdx], eax ; mov rax, -1 ; ret
0x00000000000a79b6 : outsd dx, dword ptr [rsi] ; push rsi ; adc bl, dh ; movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a8806 : outsd dx, dword ptr [rsi] ; push rsi ; adc bl, dh ; movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a7956 : outsd dx, dword ptr [rsi] ; push rsi ; or eax, 0x77f0ff3 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a87a6 : outsd dx, dword ptr [rsi] ; push rsi ; or eax, 0x77f0ff3 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a7996 : outsd dx, dword ptr [rsi] ; push rsi ; psllq mm1, qword ptr [rdi] ; jg 0xa79b4 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a87e6 : outsd dx, dword ptr [rsi] ; push rsi ; psllq mm1, qword ptr [rdi] ; jg 0xa8804 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000003010d : outsd dx, dword ptr [rsi] ; sub dword ptr [rcx], edi ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x0000000000109f13 : outsd dx, dword ptr [rsi] ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ba58d : outsd dx, dword ptr [rsi] ; xor dword ptr [rax], 0 ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000109f36 : outsd dx, dword ptr ds:[rsi] ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000015cf86 : outsd dx, dword ptr es:[rsi] ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000090dbf : pcmpeqb mm1, qword ptr [rdi + 0x10] ; pmovmskb eax, xmm1 ; test eax, eax ; jne 0x90e2f ; xor rax, rax ; ret
0x00000000000abff4 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x0000000000090dbe : pcmpeqb xmm1, xmmword ptr [rdi + 0x10] ; pmovmskb eax, xmm1 ; test eax, eax ; jne 0x90e30 ; xor rax, rax ; ret
0x000000000007c9cb : pcmpgtb mm0, mm7 ; add byte ptr [rcx], cl ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000a0bd6 : pcmpgtd mm1, qword ptr [rdi] ; xlatb ; rol dword ptr [rbp + 0x7d850fc0], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000014d3a0 : pcmpistri xmm3, xmm3, 0x3a ; movsxd rcx, ecx ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x000000000014d5d4 : pcmpistri xmm3, xmmword ptr [rdi], 0x12 ; jae 0x14d5e1 ; movsxd rax, ecx ; add rax, rdi ; sub rax, rdx ; ret
0x0000000000097ffc : pmovmskb eax, mm0 ; test eax, eax ; je 0x9801e ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x00000000000a0cf5 : pmovmskb eax, mm1 ; and eax, edx ; test eax, eax ; je 0xa0cdf ; bsr eax, eax ; add rax, rdi ; ret
0x0000000000090d1c : pmovmskb eax, mm1 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000a0b73 : pmovmskb eax, mm1 ; bsr eax, eax ; add rax, rdi ; ret
0x0000000000090dc4 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x90e2a ; xor rax, rax ; ret
0x0000000000090d84 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x90e4e ; xor rax, rax ; ret
0x0000000000097ffb : pmovmskb eax, xmm0 ; test eax, eax ; je 0x9801f ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x00000000000a0cf4 : pmovmskb eax, xmm1 ; and eax, edx ; test eax, eax ; je 0xa0ce0 ; bsr eax, eax ; add rax, rdi ; ret
0x0000000000090d1b : pmovmskb eax, xmm1 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000a0b72 : pmovmskb eax, xmm1 ; bsr eax, eax ; add rax, rdi ; ret
0x0000000000090dc3 : pmovmskb eax, xmm1 ; test eax, eax ; jne 0x90e2b ; xor rax, rax ; ret
0x0000000000090d83 : pmovmskb eax, xmm1 ; test eax, eax ; jne 0x90e4f ; xor rax, rax ; ret
0x00000000000ec011 : pop qword ptr [rax] ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xec02e ; ret
0x00000000001a28f5 : pop qword ptr [rax] ; add byte ptr [rax], bh ; leave ; in eax, dx ; jmp qword ptr [rax]
0x00000000001a3c5b : pop qword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rbx], cl ; add byte ptr [rax], al ; pop rax ; outsd dx, dword ptr [rsi] ; out dx, al ; jmp qword ptr [rdi]
0x0000000000114408 : pop qword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001b9932 : pop qword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, -1 ; add dword ptr [rax], eax ; rol cl, 0xf8 ; call qword ptr [rdi]
0x000000000014ed19 : pop r12 ; add al, byte ptr [rax] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000073473 : pop r12 ; jmp rax
0x00000000000ff8e8 : pop r12 ; mov dword ptr [rip + 0x2c46d4], eax ; lea rax, qword ptr [rip + 0x2c46a1] ; ret
0x00000000000ff718 : pop r12 ; mov dword ptr [rip + 0x2c48a4], eax ; lea rax, qword ptr [rip + 0x2c4871] ; ret
0x0000000000070ec8 : pop r12 ; pop r13 ; jmp rax
0x0000000000105538 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000070eca : pop r13 ; jmp rax
0x000000000010553a : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000010553c : pop r14 ; pop r15 ; jmp rax
0x000000000003af33 : pop r15 ; cmp byte ptr [rax], al ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x000000000010553e : pop r15 ; jmp rax
0x000000000013812d : pop r8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x000000000007d324 : pop r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000137999 : pop r8 ; bswap eax ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x000000000008b613 : pop r9 ; xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x0000000000074cfd : pop rax ; adc byte ptr [rax - 0x3f], cl ; sti ; add cl, byte ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fa5fa : pop rax ; adc ecx, dword ptr [rax - 0x77] ; fucompi st(0) ; sub al, 0x34 ; stc ; dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x000000000013812e : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x000000000019947d : pop rax ; add al, byte ptr [rax] ; and al, 0x1f ; sti ; ljmp ptr [rax + rbx*2 + 0x1fd40002] ; sti ; call rsp
0x000000000007d325 : pop rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x000000000019f1bd : pop rax ; add byte ptr [rax], al ; sar dh, 1 ; in al, dx ; call qword ptr [rax]
0x000000000013a257 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000013a395 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000010153c : pop rax ; add dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x000000000013cfef : pop rax ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013e147 : pop rax ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000111809 : pop rax ; add rsp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000081312 : pop rax ; add rsp, 0x78 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013799a : pop rax ; bswap eax ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x00000000001382f4 : pop rax ; call rax
0x00000000001967a9 : pop rax ; call rsp
0x0000000000198191 : pop rax ; clc ; call rsp
0x0000000000193e89 : pop rax ; cld ; call qword ptr [rax + 0x10fffc59]
0x00000000001ad599 : pop rax ; cmc ; jmp qword ptr [rcx]
0x000000000002af7a : pop rax ; cmp dword ptr [rax], eax ; mov qword ptr [r14], rcx ; mov rcx, qword ptr [rax + r15*8] ; test rcx, rcx ; je 0x2af9a ; call rcx
0x0000000000106904 : pop rax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sub eax, dword ptr [rax] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x1069b8 ; call rax
0x0000000000138136 : pop rax ; jmp rcx
0x000000000018a074 : pop rax ; lodsb al, byte ptr [rsi] ; cli ; push qword ptr [rax - 0x54] ; cli ; call qword ptr [rax]
0x00000000001ae768 : pop rax ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x0000000000102d1c : pop rax ; loope 0x102d57 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000e2ed3 : pop rax ; mov eax, 0xc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c9283 : pop rax ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000131226 : pop rax ; mov eax, 1 ; ret
0x000000000002de64 : pop rax ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002ddf2 : pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x0000000000024269 : pop rax ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fa8eb : pop rax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000024c7c : pop rax ; mov eax, r10d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000023cc3 : pop rax ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000028759 : pop rax ; mov eax, r15d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010405c : pop rax ; mov ecx, 0x8b49fff1 ; call rbx
0x0000000000130f0c : pop rax ; mov esi, edx ; sub esi, eax ; mov eax, esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000130e7e : pop rax ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00000000000ddcfc : pop rax ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000722e3 : pop rax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000103508 : pop rax ; mov rax, rbx ; pop rdx ; pop rbx ; ret
0x000000000009042b : pop rax ; mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007154b : pop rax ; or al, byte ptr [rax] ; add rsp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x00000000000e0cb9 : pop rax ; or bh, dh ; ret
0x00000000000a5004 : pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000001a3c68 : pop rax ; outsd dx, dword ptr [rsi] ; out dx, al ; jmp qword ptr [rdi]
0x00000000001ad5c8 : pop rax ; pop rax ; cmc ; jmp qword ptr [rcx]
0x00000000001a9098 : pop rax ; pop rbp ; jmp rcx
0x000000000012b9a5 : pop rax ; pop rbx ; neg eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002468f : pop rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000001fa41 : pop rax ; pop rbx ; pop rbp ; ret
0x0000000000108d7b : pop rax ; pop rdi ; call rax
0x0000000000146201 : pop rax ; pop rdx ; pop rbx ; ret
0x00000000001864d0 : pop rax ; push qword ptr [rax + 0x48] ; dec dword ptr [rax - 0x3f000db8] ; jmp rax
0x000000000003a998 : pop rax ; ret
0x00000000001af058 : pop rax ; ret 0xfff5
0x00000000001b5a58 : pop rax ; ret 0xfff7
0x000000000008426c : pop rax ; retf ; xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], r8 ; xor edi, edi ; call qword ptr [rax]
0x0000000000074c6e : pop rax ; sbb byte ptr [rax - 0x3f], cl ; sti ; add cl, byte ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001a47f8 : pop rax ; shr esi, 1 ; call rcx
0x000000000018a04c : pop rax ; stosd dword ptr [rdi], eax ; cli ; dec dword ptr [rax - 0x77000554] ; lodsb al, byte ptr [rsi] ; cli ; jmp rax
0x0000000000131291 : pop rax ; sub qword ptr [rax + 0x68], 4 ; mov eax, 1 ; ret
0x000000000006d280 : pop rax ; test dword ptr [rcx], edx ; add byte ptr [rdi], cl ; mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x0000000000076836 : pop rax ; test eax, eax ; jne 0x76856 ; mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x0000000000076835 : pop rax ; test eax, eax ; jne 0x76857 ; mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x0000000000111c7d : pop rax ; xor byte ptr [rcx - 0x75], al ; or byte ptr [r13 - 0x7c968b40], r8b ; call 0xffffffffc39a689d
0x0000000000128a5d : pop rax ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d05b4 : pop rbp ; add al, byte ptr [rax] ; add dh, dh ; ret
0x000000000016d767 : pop rbp ; add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000006b8b4 : pop rbp ; add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x000000000010334a : pop rbp ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000111cdf : pop rbp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000193e59 : pop rbp ; cld ; call qword ptr [rax]
0x000000000005cdf7 : pop rbp ; jg 0x5ce1a ; add byte ptr [rdi], cl ; mov dh, 0xdb ; movsxd rax, dword ptr [rcx + rbx*4] ; add rax, rcx ; jmp rax
0x0000000000070bb8 : pop rbp ; jmp rax
0x0000000000186f04 : pop rbp ; loope 0x186f05 ; ljmp ptr [rax + 0x7dfff3db] ; fcomi st(3) ; call rax
0x00000000000e1e6a : pop rbp ; mov rax, rcx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007c67a : pop rbp ; movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009eca2 : pop rbp ; or byte ptr [rcx - 0x73], 0x4f ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000073472 : pop rbp ; pop r12 ; jmp rax
0x0000000000070ec7 : pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000105537 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000010553b : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x000000000014ecff : pop rbp ; pop rsp ; add al, byte ptr [rax] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000000fe467 : pop rbp ; sub ch, byte ptr [rax + rax] ; mov qword ptr [rax], rdx ; xor eax, eax ; cmp rdi, rdx ; ja 0xfe4af ; ret
0x0000000000073bc1 : pop rbp ; sub rax, r12 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ad1ea : pop rbp ; sub rax, r12 ; pop r12 ; ret
0x0000000000073d39 : pop rbp ; sub rax, r14 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d6340 : pop rbx ; add ebp, ecx ; imul ebp, esi, 0x8b48ffff ; mov esp, 0x8824 ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000aad4b : pop rbx ; and eax, 0x7ff80000 ; and dh, 0xf0 ; mov edx, 0 ; cmove rax, rdx ; ret
0x0000000000193e91 : pop rbx ; cld ; call qword ptr [rax + 0x10fffc5c]
0x0000000000099218 : pop rbx ; cmovne rax, rdx ; ret
0x0000000000098687 : pop rbx ; dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007d384 : pop rbx ; jmp rax
0x0000000000103479 : pop rbx ; lea rax, qword ptr [rip + 0x2c0ddf] ; pop rbp ; pop r12 ; ret
0x00000000000aac85 : pop rbx ; mov eax, 0xe8c1000d ; or al, 0x83 ; loopne 0xaacaf ; movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x000000000003a995 : pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000007dea9 : pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000078400 : pop rbx ; mov qword ptr [r12 + 0x28], rax ; mov rax, r13 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bb378 : pop rbx ; mov rax, -3 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000075f5a : pop rbx ; mov rax, qword ptr [rax + 0x130] ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000006d55c : pop rbx ; mov rax, r12 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000103d7c : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; jmp rax
0x000000000007f7fc : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006edfb : pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x0000000000070d8f : pop rbx ; mov rax, rsi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000088b68 : pop rbx ; mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x00000000000adf49 : pop rbx ; neg rax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f36c9 : pop rbx ; or qword ptr [r8], r8 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000070bb7 : pop rbx ; pop rbp ; jmp rax
0x00000000000e1e69 : pop rbx ; pop rbp ; mov rax, rcx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007c679 : pop rbx ; pop rbp ; movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000073471 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000070ec6 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000105536 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000073bc0 : pop rbx ; pop rbp ; sub rax, r12 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ad1e9 : pop rbx ; pop rbp ; sub rax, r12 ; pop r12 ; ret
0x0000000000073d38 : pop rbx ; pop rbp ; sub rax, r14 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fbed1 : pop rbx ; sbb edi, ecx ; dec dword ptr [rax + 0x39] ; ret
0x0000000000076b96 : pop rbx ; sub rax, r14 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000007dbad : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007af7f : pop rbx ; sub rbp, rax ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000007de72 : pop rbx ; xor edx, edx ; jmp rax
0x000000000003cd40 : pop rcx ; adc eax, 0xc0834900 ; add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x000000000014ef90 : pop rcx ; add al, byte ptr [rax] ; mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000196b7d : pop rcx ; add dword ptr [rax], eax ; adc al, 0x8c ; hlt ; inc dword ptr [rcx + rbx*2 - 0x6fbbffff] ; hlt ; call rsp
0x0000000000196b85 : pop rcx ; add dword ptr [rax], eax ; nop ; hlt ; call rsp
0x00000000000e00a9 : pop rcx ; add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; ret
0x0000000000193e4d : pop rcx ; cld ; call qword ptr [rax + 0x10fffc5a]
0x0000000000193e8d : pop rcx ; cld ; call qword ptr [rax]
0x000000000002adf0 : pop rcx ; cmp dword ptr [rax], eax ; mov qword ptr [rbp + r12*8], r15 ; mov rax, qword ptr [rax + r12*8] ; test rax, rax ; je 0x2ae14 ; call rax
0x000000000002d167 : pop rcx ; dec dword ptr [rax + 0x63] ; ret
0x00000000000aac63 : pop rcx ; mov eax, 0x6348000d ; add al, 0xbe ; add rax, rsi ; jmp rax
0x000000000010051b : pop rcx ; or dword ptr [rax + rax], ebp ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000003c3f1 : pop rcx ; ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000034e1b : pop rcx ; sar byte ptr [rax], 0 ; mov dword ptr fs:[rax], 0x22 ; add rsp, 0x28 ; ret
0x000000000003c581 : pop rcx ; shl byte ptr [rdi + rax*8], 0x22 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000011b544 : pop rcx ; sub al, byte ptr [rax] ; add rax, qword ptr fs:[0] ; ret
0x000000000008b55c : pop rcx ; xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00000000000a0877 : pop rdi ; add al, 0x44 ; mov byte ptr [rdi + 6], al ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000f85f2 : pop rdi ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000019f8fd : pop rdi ; add byte ptr [rax], al ; nop ; sbb ebp, ebp ; call rbx
0x00000000001af885 : pop rdi ; add dword ptr [rax], eax ; cmp bh, ah ; cmc ; jmp rsp
0x000000000014e94d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000108d7c : pop rdi ; call rax
0x0000000000193e5d : pop rdi ; cld ; call qword ptr [rax + 0x10fffc60]
0x0000000000193e9d : pop rdi ; cld ; call qword ptr [rax]
0x000000000003ae9c : pop rdi ; cmp byte ptr [rax], al ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x000000000002cacb : pop rdi ; cmp dword ptr [rax], eax ; mov byte ptr [rip + 0x395fa9], dl ; ret
0x000000000002cad1 : pop rdi ; cmp dword ptr [rax], eax ; ret
0x0000000000103476 : pop rdi ; je 0x103496 ; pop rbx ; lea rax, qword ptr [rip + 0x2c0ddf] ; pop rbp ; pop r12 ; ret
0x000000000010553f : pop rdi ; jmp rax
0x0000000000158c4d : pop rdi ; lodsd eax, dword ptr [rsi] ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000130ee2 : pop rdi ; sbb byte ptr [rbx + 0x7eb5e83b], cl ; std ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x000000000012ae44 : pop rdi ; sub dword ptr [rax], eax ; mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x12ae5a ; ret
0x000000000012b0c4 : pop rdi ; sub dword ptr [rax], eax ; mov rax, qword ptr fs:[rax] ; ret
0x0000000000099452 : pop rdx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000016047e : pop rdx ; add al, byte ptr [rax] ; movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000025f75 : pop rdx ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x52880fd2], al ; add dword ptr [rax], eax ; add bh, dh ; ret 0xf800
0x0000000000193e51 : pop rdx ; cld ; call qword ptr [rax]
0x0000000000103443 : pop rdx ; mov rax, qword ptr [rip + 0x2bf345] ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116bd2 : pop rdx ; sti ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x116bea ; xor eax, eax ; ret
0x0000000000140e71 : pop rdx ; sub byte ptr [rax], al ; jle 0x140a11 ; jmp 0x140e48
0x00000000000301a2 : pop rdx ; sub dword ptr [rcx], edi ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x00000000000ac635 : pop rdx ; test al, 0xf0 ; jne 0xac669 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000014e84e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000005b1e9 : pop rsi ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x63], cl ; ret
0x000000000016d65e : pop rsi ; add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000077478 : pop rsi ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x77423
0x00000000000eb2aa : pop rsi ; and byte ptr [rax - 0x77], cl ; fucompi st(0) ; jl 0xeb2e5 ; cli ; dec dword ptr [rax + 1] ; ret
0x0000000000193e99 : pop rsi ; cld ; call qword ptr [rax + 0x10fffc5f]
0x00000000000c9b40 : pop rsi ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000cd116 : pop rsi ; cmp eax, 0xd8f7002f ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010553d : pop rsi ; pop r15 ; jmp rax
0x0000000000103475 : pop rsi ; pop rdi ; je 0x103497 ; pop rbx ; lea rax, qword ptr [rip + 0x2c0ddf] ; pop rbp ; pop r12 ; ret
0x00000000000fa7a4 : pop rsi ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000198709 : pop rsi ; stc ; inc dword ptr [rax + rdi*8 + 0x66240001] ; stc ; call rsp
0x000000000007b006 : pop rsi ; xor al, 0 ; neg eax ; mov dword ptr fs:[rdx], eax ; mov rax, -1 ; ret
0x000000000014a080 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000004e8c0 : pop rsp ; adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rax + rcx*4] ; lea rcx, qword ptr [rip + 0x2b2] ; add rax, rcx ; jmp rax
0x00000000001a9db4 : pop rsp ; add al, 1 ; add byte ptr [rax + 0x36], ch ; call qword ptr [rcx]
0x0000000000149534 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000085eb7 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000014ed00 : pop rsp ; add al, byte ptr [rax] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014eccc : pop rsp ; add al, byte ptr [rax] ; mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000001a3c60 : pop rsp ; add byte ptr [rax], al ; add byte ptr [rbx], cl ; add byte ptr [rax], al ; pop rax ; outsd dx, dword ptr [rsi] ; out dx, al ; jmp qword ptr [rdi]
0x00000000001af880 : pop rsp ; add byte ptr [rax], al ; add byte ptr [rdi + rbx*2], ch ; add dword ptr [rax], eax ; cmp bh, ah ; cmc ; jmp rsp
0x00000000001a1b88 : pop rsp ; add byte ptr [rax], al ; add byte ptr [rdx + rax*4], dh ; add byte ptr [rax], al ; nop ; xchg eax, esp ; in eax, dx ; call qword ptr [rcx]
0x0000000000083f45 : pop rsp ; and al, 0x28 ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x0000000000193e55 : pop rsp ; cld ; call qword ptr [rax + 0x10fffc5d]
0x0000000000193e95 : pop rsp ; cld ; call qword ptr [rax]
0x0000000000121a08 : pop rsp ; cmp al, 0x2a ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000073474 : pop rsp ; jmp rax
0x000000000012de7e : pop rsp ; lea rsi, qword ptr [rdi + 0x48] ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000000ff8e9 : pop rsp ; mov dword ptr [rip + 0x2c46d4], eax ; lea rax, qword ptr [rip + 0x2c46a1] ; ret
0x00000000000ff719 : pop rsp ; mov dword ptr [rip + 0x2c48a4], eax ; lea rax, qword ptr [rip + 0x2c4871] ; ret
0x0000000000070bab : pop rsp ; mov rax, qword ptr [rbp + 0x48] ; add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000147f10 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000070ec9 : pop rsp ; pop r13 ; jmp rax
0x0000000000105539 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000001a64b4 : pop rsp ; retf ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001a92b4 : pop rsp ; stc ; add byte ptr [rax], al ; js 0x1a9253 ; call rbx
0x00000000000fb184 : pop rsp ; sub al, 0 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x0000000000034175 : pop rsp ; xchg eax, ecx ; add al, 0x75 ; out 0x41, al ; mov eax, dword ptr [rcx + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x0000000000100c64 : pop rsp ; xor al, 0x2c ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000019cab4 : pop rsp ; xor dword ptr [rax], eax ; add byte ptr [rax], bl ; fucompi st(1) ; jmp qword ptr [rsi]
0x000000000005ab86 : popfq ; adc al, byte ptr [rax] ; movsxd rax, dword ptr [rax + rcx*4] ; lea rcx, qword ptr [rip - 0x594] ; add rax, rcx ; jmp rax
0x0000000000145a13 : popfq ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; sub byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x00000000001940a9 : popfq ; cld ; dec edx ; pushfq ; cld ; push qword ptr [rax - 0x64] ; cld ; jmp rax
0x0000000000193ee9 : popfq ; cld ; jmp qword ptr [rax]
0x000000000011483e : popfq ; int1 ; dec dword ptr [rax - 0x77] ; ret
0x000000000014b760 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000aff3d : popfq ; xor al, byte ptr [rax + rax] ; add cl, ch ; ret 0xfff3
0x0000000000186109 : pslld mm7, mm7 ; add byte ptr [rax], dl ; call qword ptr [rax]
0x0000000000186101 : pslld mm7, mm7 ; loopne 0x186123 ; push rax ; pslld mm7, mm7 ; add byte ptr [rax], dl ; call qword ptr [rax]
0x00000000001860f5 : pslld mm7, mm7 ; mov al, 0xf ; inc eax ; pslld mm7, mm7 ; ror byte ptr [rdi], 1 ; jmp rax
0x00000000001860f9 : pslld mm7, mm7 ; ror byte ptr [rdi], 0xf2 ; call rax
0x00000000001860fd : pslld mm7, mm7 ; ror byte ptr [rdi], 1 ; jmp rax
0x00000000000a7816 : psllq mm1, qword ptr [rdi] ; jg 0xa782e ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a7815 : psllq mm1, qword ptr [rdi] ; jg 0xa782f ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a7897 : psllq mm1, qword ptr [rdi] ; jg 0xa78b0 ; mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a7896 : psllq mm1, qword ptr [rdi] ; jg 0xa78b1 ; mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a7998 : psllq mm1, qword ptr [rdi] ; jg 0xa79b2 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a8666 : psllq mm1, qword ptr [rdi] ; jg 0xa867e ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a8665 : psllq mm1, qword ptr [rdi] ; jg 0xa867f ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a86e7 : psllq mm1, qword ptr [rdi] ; jg 0xa8700 ; mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a86e6 : psllq mm1, qword ptr [rdi] ; jg 0xa8701 ; mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a87e8 : psllq mm1, qword ptr [rdi] ; jg 0xa8802 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000bf8ac : psubb mm1, qword ptr [rax - 0x77] ; ret
0x000000000010a5c3 : push -0x2708ffd5 ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000007d987 : push -0x277874b7 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000185f2c : push -0x57000245 ; mov ebp, 0xbfe8fffd ; std ; ljmp ptr [rax] ; ret 0xfffd
0x000000000014d2f4 : push -0x74fffd8a ; or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000134c07 : push -0x777e48f1 ; add byte ptr [rax], al ; add byte ptr [rsi - 0x77], ah ; insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x0000000000169e94 : push -0x7ffffffa ; cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x00000000000cd30c : push -0x8ffd0c5 ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000ce28d : push 0 ; add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xce2ae ; ret
0x00000000000ad19a : push 0 ; lea rcx, qword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000012ebaa : push 0 ; push 0x19 ; call qword ptr [rax]
0x00000000000acd86 : push 0 ; xor r8d, r8d ; mov rsi, r13 ; lea r9, qword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x000000000012ebac : push 0x19 ; call qword ptr [rax]
0x0000000000131295 : push 0x1b804 ; add byte ptr [rax], al ; ret
0x0000000000137856 : push 0x1f0fe1ff ; add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000007f163 : push 0x2e6690c3 ; nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000000c1a80 : push 0x41be0f48 ; add dword ptr [rax - 0x47], ecx ; ret
0x000000000008847c : push 0x48e6894c ; mov edi, ebp ; call rax
0x0000000000185de8 : push 0x78fff1aa ; stosb byte ptr [rdi], al ; int1 ; dec dword ptr [rax - 0x67000e56] ; stosb byte ptr [rdi], al ; int1 ; jmp qword ptr [rax]
0x0000000000185e80 : push 0x8fffcbf ; scasd eax, dword ptr [rdi] ; cld ; lcall ptr [rax] ; ret 0xfffc
0x0000000000199aa1 : push 0xe8 ; call qword ptr [rax]
0x000000000013a5b3 : push 0xf6 ; inc dword ptr [rcx - 0x3a] ; add al, 0x2c ; add byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116cc2 : push 0xfa ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x116cda ; xor eax, eax ; ret
0x00000000001932b9 : push 0xfb ; push qword ptr [rax + 0x6c] ; sti ; call qword ptr [rax]
0x00000000001169c2 : push 0xfd ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x1169da ; xor eax, eax ; ret
0x00000000000d1001 : push 0xfffffe ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000000ad195 : push 1 ; xor r8d, r8d ; push 0 ; lea rcx, qword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000a6c02 : push 5 ; add byte ptr [rax], al ; ret
0x00000000001862a3 : push qword ptr [rax + 0x25] ; call qword ptr [rax - 0x4f000ddb]
0x000000000019393f : push qword ptr [rax + 0x30] ; cld ; inc eax ; xor esp, edi ; call qword ptr [rax]
0x0000000000193373 : push qword ptr [rax + 0x30fffbbd] ; mov edi, 0xc0b0fffb ; sti ; push qword ptr [rax] ; ret 0xfffb
0x000000000019337b : push qword ptr [rax + 0x30fffbc0] ; ret 0xfffb
0x00000000001933a3 : push qword ptr [rax + 0x30fffbcf] ; sar ebx, 1 ; jmp rax
0x00000000001942db : push qword ptr [rax + 0x30fffc94] ; xchg eax, esp ; cld ; jmp qword ptr [rax + 0x10fffc93]
0x00000000001942f3 : push qword ptr [rax + 0x30fffc99] ; cdq ; cld ; jmp qword ptr [rax + 0x20fffc98]
0x0000000000061897 : push qword ptr [rax + 0x31] ; shr cl, cl ; ret 0xffc1
0x0000000000193993 : push qword ptr [rax + 0x37] ; cld ; inc eax ; cmp ah, bh ; call qword ptr [rax]
0x0000000000193bcf : push qword ptr [rax + 0x40fffc79] ; jns 0x193bdb ; call rax
0x00000000001939b7 : push qword ptr [rax + 0x40fffc7c] ; jl 0x1939c3 ; call rax
0x000000000019390f : push qword ptr [rax + 0x41] ; cld ; jmp qword ptr [rax]
0x000000000019388f : push qword ptr [rax + 0x42] ; cld ; push qword ptr [rax] ; cld ; call qword ptr [rax]
0x00000000001938f3 : push qword ptr [rax + 0x43] ; cld ; inc dword ptr [rax + 0x45] ; cld ; jmp qword ptr [rax]
0x00000000001864d3 : push qword ptr [rax + 0x48] ; dec dword ptr [rax - 0x3f000db8] ; jmp rax
0x00000000001932e3 : push qword ptr [rax + 0x50fffb7c] ; jle 0x1932ee ; jmp qword ptr [rax]
0x0000000000193267 : push qword ptr [rax + 0x54] ; sti ; call qword ptr [rax - 0x2f0004b8]
0x00000000001932bb : push qword ptr [rax + 0x6c] ; sti ; call qword ptr [rax]
0x0000000000193e23 : push qword ptr [rax + 0x6d] ; cld ; jmp rax
0x0000000000193c1f : push qword ptr [rax + 0x6e] ; cld ; jmp rax
0x0000000000193c17 : push qword ptr [rax + 0x6f] ; cld ; push rax ; outsb dx, byte ptr [rsi] ; cld ; push qword ptr [rax + 0x6e] ; cld ; jmp rax
0x00000000001938ef : push qword ptr [rax + 0x70fffc41] ; cld ; inc dword ptr [rax + 0x45] ; cld ; jmp qword ptr [rax]
0x00000000001932db : push qword ptr [rax + 0x79] ; sti ; call qword ptr [rax]
0x0000000000193bbf : push qword ptr [rax + 0x7b] ; cld ; inc dword ptr [rax] ; jnp 0x193bcf ; call qword ptr [rax + 0x20fffc7a]
0x00000000001937c7 : push qword ptr [rax + 0xb] ; cld ; inc eax ; or al, 0xfc ; call qword ptr [rax]
0x000000000018603b : push qword ptr [rax + 0xc] ; jmp qword ptr [rax - 0x2f000df4]
0x000000000010a065 : push qword ptr [rax + rbx + 0x48] ; add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000019814b : push qword ptr [rax + rdx*8 + 0x54240001] ; clc ; dec esp ; rol byte ptr [rcx], 1 ; add byte ptr [rsp + rdx*2 - 8], ah ; jmp rsp
0x00000000001276d5 : push qword ptr [rax + rsi - 0x7d] ; mov ebp, 0xffffff4c ; inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x3945
0x00000000001870af : push qword ptr [rax - 0x11] ; jmp rdi
0x0000000000186217 : push qword ptr [rax - 0x1f000ddf] ; and edx, esi ; call qword ptr [rax]
0x000000000018628b : push qword ptr [rax - 0x2f000ddc] ; and al, 0xf2 ; push rax ; and al, 0xf2 ; call qword ptr [rax]
0x0000000000187e4b : push qword ptr [rax - 0x32] ; cmc ; inc dword ptr [rbx - 0x20] ; cmc ; call rsp
0x0000000000187e47 : push qword ptr [rax - 0x32] ; cmc ; push qword ptr [rax - 0x32] ; cmc ; inc dword ptr [rbx - 0x20] ; cmc ; call rsp
0x00000000001862cb : push qword ptr [rax - 0x3f000ddb] ; and eax, 0x25d0fff2 ; jmp rax
0x0000000000186243 : push qword ptr [rax - 0x3f000dde] ; and dh, dl ; jmp rax
0x00000000001860f7 : push qword ptr [rax - 0x3f000df1] ; pslld mm7, mm7 ; ror byte ptr [rdi], 1 ; jmp rax
0x0000000000186083 : push qword ptr [rax - 0x3f000df3] ; or eax, 0xdd0fff2 ; jmp rax
0x0000000000193353 : push qword ptr [rax - 0x4f] ; sti ; inc eax ; mov dl, 0xfb ; call qword ptr [rax]
0x000000000018a077 : push qword ptr [rax - 0x54] ; cli ; call qword ptr [rax]
0x0000000000193edf : push qword ptr [rax - 0x62] ; cld ; inc dword ptr [rax] ; sahf ; cld ; call qword ptr [rax + 0x20fffc9d]
0x00000000001940af : push qword ptr [rax - 0x64] ; cld ; jmp rax
0x00000000001934d3 : push qword ptr [rax - 0x6c] ; std ; inc dword ptr [rax] ; xchg eax, ebp ; std ; call qword ptr [rax + 0x20fffd95]
0x0000000000194127 : push qword ptr [rax - 0x6d] ; cld ; jmp rax
0x000000000019432b : push qword ptr [rax - 0x6e] ; cld ; call rax
0x0000000000195a23 : push qword ptr [rax] ; add ah, dh ; pushfq ; out dx, al ; dec dword ptr [rax - 0x5fdc0000] ; out dx, al ; jmp rsp
0x00000000001942f7 : push qword ptr [rax] ; cdq ; cld ; jmp qword ptr [rax + 0x20fffc98]
0x000000000019385f : push qword ptr [rax] ; cld ; call qword ptr [rax]
0x00000000001938af : push qword ptr [rax] ; cld ; push rax ; cld ; call rax
0x00000000001932b3 : push qword ptr [rax] ; imul edi, ebx, 0xfb6ad0ff ; push qword ptr [rax + 0x6c] ; sti ; call qword ptr [rax]
0x00000000001932d3 : push qword ptr [rax] ; jbe 0x1932d6 ; call rax
0x00000000001808bb : push qword ptr [rax] ; jns 0x1808af ; call qword ptr [rax]
0x00000000000a5a0f : push qword ptr [rax] ; leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000193343 : push qword ptr [rax] ; lodsb al, byte ptr [rsi] ; sti ; inc dword ptr [rax - 0x2f000453] ; scasb al, byte ptr [rdi] ; sti ; jmp qword ptr [rax]
0x0000000000193377 : push qword ptr [rax] ; mov edi, 0xc0b0fffb ; sti ; push qword ptr [rax] ; ret 0xfffb
0x0000000000193ecf : push qword ptr [rax] ; movabs al, byte ptr [0x9f50fffc9fc0fffc] ; cld ; jmp rax
0x0000000000193257 : push qword ptr [rax] ; push rcx ; sti ; inc dword ptr [rax] ; push rdx ; sti ; call rax
0x000000000019337f : push qword ptr [rax] ; ret 0xfffb
0x00000000001933a7 : push qword ptr [rax] ; sar ebx, 1 ; jmp rax
0x0000000000193737 : push qword ptr [rax] ; sbb eax, 0x1f10fffc ; cld ; inc dword ptr [rax] ; and esp, edi ; call rax
0x00000000001932f3 : push qword ptr [rax] ; test ebx, edi ; call qword ptr [rax]
0x00000000001942d7 : push qword ptr [rax] ; xchg eax, ebp ; cld ; push qword ptr [rax + 0x30fffc94] ; xchg eax, esp ; cld ; jmp qword ptr [rax + 0x10fffc93]
0x00000000001942df : push qword ptr [rax] ; xchg eax, esp ; cld ; jmp qword ptr [rax + 0x10fffc93]
0x0000000000193983 : push qword ptr [rax] ; xor bh, ah ; inc dword ptr [rax - 0x2f0003cd] ; xor al, 0xfc ; jmp qword ptr [rax]
0x0000000000036bf6 : push qword ptr [rbp + 0xf] ; lea edx, dword ptr [rax - 1] ; mov dword ptr [rip + 0x38a486], edx ; ret
0x0000000000127fb7 : push qword ptr [rbp + rax - 0x77] ; ret
0x000000000007dedd : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000074195 : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x000000000008dcd3 : push qword ptr [rbp + rcx + 0x48] ; sar edx, cl ; test rdx, rdx ; je 0x8dd0e ; bsf rax, rdx ; ret
0x000000000008dcd3 : push qword ptr [rbp + rcx + 0x48] ; sar edx, cl ; test rdx, rdx ; je 0x8dd0f ; bsf rax, rdx ; ret
0x0000000000195e0b : push qword ptr [rbp + rdi*8 - 0x6e4c0000] ; out dx, eax ; dec esp ; std ; add byte ptr [rax], al ; in al, -0x6f ; out dx, eax ; jmp rsp
0x00000000001721b4 : push qword ptr [rbp + rdx + 0x48] ; mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x1721d3 ; call rax
0x0000000000048fde : push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x0000000000195f73 : push qword ptr [rbx + rax - 0x2b9bffff] ; out dx, eax ; dec esp ; add eax, dword ptr [rcx] ; add byte ptr [rsp + rdx*8 - 0x11], dh ; jmp rsp
0x0000000000074309 : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000074365 : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003639a : push qword ptr [rbx + rdx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000199393 : push qword ptr [rbx + rdx*2] ; add al, byte ptr [rax] ; mov ah, 0xd ; sti ; inc dword ptr [rbx + rdx*2 + 0xee40002] ; sti ; call rsp
0x0000000000081be4 : push qword ptr [rbx] ; add byte ptr [rbp + rcx*4 + 0x34], cl ; sub ecx, dword ptr [rax + 0x39] ; ret
0x000000000019800b : push qword ptr [rcx + rcx*8 + 0x3b840001] ; clc ; dec esp ; leave ; add dword ptr [rax], eax ; cmp al, 0xf8 ; jmp rsp
0x000000000019362b : push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; dec dword ptr [rax] ; sbb edi, esp ; call rax
0x000000000019351b : push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x0000000000193627 : push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; dec dword ptr [rax] ; sbb edi, esp ; call rax
0x0000000000193517 : push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x0000000000193623 : push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; dec dword ptr [rax] ; sbb edi, esp ; call rax
0x0000000000193513 : push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x00000000000c82e1 : push qword ptr [rcx] ; fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000d1967 : push qword ptr [rcx] ; fisttp dword ptr [rax - 0x77] ; fmul dword ptr [rcx + 3] ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000d89d9 : push qword ptr [rcx] ; rol byte ptr [rax + 0xf00657b], cl ; xchg eax, ebp ; ret 0xd201
0x00000000000d0310 : push qword ptr [rcx] ; ror byte ptr [rax - 0x75], 0x54 ; ret
0x0000000000135009 : push qword ptr [rcx] ; ror byte ptr [rax - 0x75], 0x74 ; and al, 0x50 ; mov rdi, r12 ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x00000000000d26eb : push qword ptr [rcx] ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x00000000000e96ba : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000aa936 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000097bdf : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013c262 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000077828 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000feae7 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7f], 0xc4 ; nop ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000119337 : push qword ptr [rcx] ; ror byte ptr [rdi], 5 ; cmp rax, -0x1000 ; ja 0x11935e ; ret
0x000000000005961b : push qword ptr [rcx] ; test byte ptr [rax - 0x3f], 0xc8 ; adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000ccf62 : push qword ptr [rdi + 0x13] ; cmp rax, 0xff ; mov edx, 0 ; cmove rax, rdx ; ret
0x00000000000e9936 : push qword ptr [rdi + rax - 0x48] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000195313 : push qword ptr [rdi + rbp*4] ; add byte ptr [rsp + rsi*4 - 0x504b0013], al ; add byte ptr [rax], al ; add al, 0xb5 ; in eax, dx ; jmp rsp
0x0000000000195e6b : push qword ptr [rdi + rdi*8 - 0x4d0c0000] ; out dx, eax ; dec esp ; inc dword ptr [rax] ; add byte ptr [rbx + rsi*4], dh ; out dx, eax ; jmp rsp
0x0000000000187ce7 : push qword ptr [rdi - 0x14000ad1] ; cmc ; call rax
0x000000000019697b : push qword ptr [rdx + rcx*2 - 0x602bffff] ; dec esp ; add qword ptr [rax], rax ; add al, 0xa0 ; jmp rsp
0x000000000019644b : push qword ptr [rsi + 0x22e40001] ; dec esp ; add dword ptr es:[rax], eax ; push rsp ; and esi, edx ; jmp rsp
0x000000000010b359 : push qword ptr [rsi + rax - 0x7d] ; rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x0000000000198563 : push qword ptr [rsi + rbp*8 + 1] ; add byte ptr [rbx + rax - 7], ah ; push qword ptr [rsi + rbp*8 + 0x3a40001] ; stc ; jmp rsp
0x000000000012f633 : push qword ptr [rsp + 0xc8] ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00000000000c92e2 : push qword ptr [rsp + rax + 0x4d] ; mov dword ptr [rbp], esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010a237 : push qword ptr [rsp + rax - 0x75] ; and al, 0xc ; add rsp, 0x18 ; ret
0x00000000000907b5 : push qword ptr [rsp + rsi + 0xf] ; mov dh, 0x75 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000001379c1 : push r12 ; bswap eax ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x000000000013a72b : push r13 ; mov rcx, qword ptr [rsp + 0x18] ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x000000000013a729 : push r14 ; push r13 ; mov rcx, qword ptr [rsp + 0x18] ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x000000000002d1b1 : push r15 ; cmp dword ptr [rax], eax ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x000000000007d32c : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000008b939 : push r8 ; add cl, byte ptr [rax - 0x7b] ; in eax, dx ; jne 0x8b92c ; test r12, r12 ; jne 0x8b976 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000074576 : push rax ; adc byte ptr [rax - 0x77], cl ; jo 0x745cc ; lea rdx, qword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000000730aa : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000001309f3 : push rax ; adc byte ptr [rbp - 0x117bf040], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x000000000007eeb1 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000012ee3d : push rax ; adc dh, dh ; ret 0x7401
0x0000000000083e8d : push rax ; adc dh, dh ; ret 0xf0f
0x00000000001937e7 : push rax ; adc eax, 0x1740fffc ; cld ; lcall ptr [rax] ; cld ; jmp rax
0x0000000000063e4f : push rax ; add al, 0x48 ; mov dword ptr [rbx], edx ; mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019932d : push rax ; add al, byte ptr [rax] ; je 0x199331 ; cli ; call rsp
0x00000000000742a1 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000007d32d : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000371dc : push rax ; add byte ptr [rax], r8b ; add rsp, 8 ; ret
0x000000000008b93a : push rax ; add cl, byte ptr [rax - 0x7b] ; in eax, dx ; jne 0x8b92b ; test r12, r12 ; jne 0x8b975 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005c38b : push rax ; add dword ptr [rax - 0x77], ecx ; adc eax, dword ptr [rax - 0x78] ; sub byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000a04a4 : push rax ; add dword ptr [rax - 0x77], ecx ; adc eax, esi ; add byte ptr [rax], al ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000110747 : push rax ; add dword ptr [rax - 0x77], ecx ; push rbp ; cmp byte ptr [rax - 0x3c41f0e8], cl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007d65b : push rax ; add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007994c : push rax ; add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x0000000000106118 : push rax ; add dword ptr [rax - 0x77], ecx ; push rdi ; sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000099210 : push rax ; add dword ptr [rax - 0x7b], ecx ; ror byte ptr [rax - 0x77], 0xd8 ; pop rbx ; cmovne rax, rdx ; ret
0x000000000005e789 : push rax ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000196a8d : push rax ; add dword ptr [rax], eax ; hlt ; and al, 0xf4 ; call rsp
0x00000000001ae98d : push rax ; add dword ptr [rax], eax ; mov al, 0xf5 ; call qword ptr [rsi]
0x00000000001ae9bd : push rax ; add dword ptr [rax], eax ; nop ; mov al, 0xf5 ; jmp qword ptr [rcx]
0x000000000009089c : push rax ; add eax, ebp ; insd dword ptr [rdi], dx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000013e4e9 : push rax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000186293 : push rax ; and al, 0xf2 ; call qword ptr [rax]
0x0000000000074c47 : push rax ; and byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000143c61 : push rax ; and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x000000000013086b : push rax ; and byte ptr [rbx - 0x48], bl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000018624f : push rax ; and dh, dl ; inc dword ptr [rax] ; and esi, edx ; jmp qword ptr [rax]
0x000000000019d240 : push rax ; and dl, ch ; call rcx
0x0000000000186207 : push rax ; and dl, dh ; jmp qword ptr [rax]
0x00000000001862a0 : push rax ; and eax, 0x2570fff2 ; call qword ptr [rax - 0x4f000ddb]
0x00000000001862db : push rax ; and eax, 0x2600fff2 ; call qword ptr [rax]
0x0000000000193708 : push rax ; and eax, 0x2750fffc ; cld ; jmp rax
0x0000000000186210 : push rax ; and edx, esi ; inc dword ptr [rax - 0x4f000ddf] ; and edx, esi ; jmp rax
0x0000000000186273 : push rax ; and esi, edx ; call qword ptr [rax]
0x00000000001936bf : push rax ; and esp, edi ; call rax
0x0000000000021468 : push rax ; call rbx
0x0000000000193e70 : push rax ; cld ; call qword ptr [rax + 0x10fffc50]
0x0000000000193e35 : push rax ; cld ; call qword ptr [rax + 0x10fffc51]
0x000000000019380d : push rax ; cld ; call qword ptr [rax]
0x000000000019384d : push rax ; cld ; call rax
0x0000000000193840 : push rax ; cld ; inc dword ptr [rax + 0x4c] ; cld ; inc dword ptr [rax + 0x4e] ; cld ; inc dword ptr [rax + 0x50] ; cld ; call rax
0x00000000001938e0 : push rax ; cld ; jmp qword ptr [rax]
0x000000000013e6fd : push rax ; cld ; mov qword ptr [rdi + 0x18], rax ; mov eax, 1 ; ret
0x000000000019385c : push rax ; cld ; push qword ptr [rax] ; cld ; call qword ptr [rax]
0x000000000019395f : push rax ; cmp bh, ah ; inc dword ptr [rax + 0x3c] ; cld ; call qword ptr [rax - 0x1f0003c3]
0x000000000013782d : push rax ; cmp byte ptr [rax - 0x77], cl ; push rsi ; or byte ptr [rax - 0x75], cl ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000018018f : push rax ; cmp ebp, ebx ; jmp rcx
0x00000000001932f0 : push rax ; cmp ebx, 0xff ; xor byte ptr [rbp - 0x78ef0005], al ; sti ; jmp rax
0x0000000000193333 : push rax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sti ; inc dword ptr [rax - 0x58] ; sti ; call qword ptr [rax - 0x1f000457]
0x000000000008b4ea : push rax ; dec byte ptr [rcx + rcx*4 + 0x43] ; movsxd rdi, esi ; mov dword ptr [rbx + 0x30], eax ; mov qword ptr [rbx], rdi ; call rcx
0x0000000000193def : push rax ; imul edi, esp, -1 ; nop ; jae 0x193dfb ; call qword ptr [rax]
0x0000000000193e2c : push rax ; insb byte ptr [rdi], dx ; cld ; push rax ; cld ; call qword ptr [rax]
0x00000000001821b5 : push rax ; jae 0x1821da ; lodsd eax, dword ptr [rsi] ; xor eax, 0x444be0a8 ; sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000001877ab : push rax ; jg 0x1877ab ; dec dword ptr [rax - 0x80] ; hlt ; call rax
0x00000000001877a7 : push rax ; jg 0x1877ab ; push rax ; jg 0x1877af ; dec dword ptr [rax - 0x80] ; hlt ; call rax
0x0000000000193bb8 : push rax ; jl 0x193bba ; jmp rax
0x00000000001b40f0 : push rax ; jl 0x1b40ed ; call rcx
0x00000000001932e8 : push rax ; jle 0x1932e9 ; jmp qword ptr [rax]
0x00000000001808b8 : push rax ; jns 0x1808ae ; push qword ptr [rax] ; jns 0x1808b2 ; call qword ptr [rax]
0x0000000000187367 : push rax ; jns 0x187363 ; jmp rax
0x00000000001939e0 : push rax ; js 0x1939e2 ; jmp rax
0x0000000000193ed8 : push rax ; lahf ; cld ; jmp rax
0x00000000000768d2 : push rax ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00000000001ae690 : push rax ; lodsb al, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000000235e1 : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000135960 : push rax ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000138116 : push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000fd829 : push rax ; mov qword ptr [rsi + 0x50], r8 ; test al, 0x20 ; je 0xfd851 ; xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x000000000013810d : push rax ; mov qword ptr [rsi + 8], rdx ; mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000025cd6 : push rax ; mov r9, qword ptr [rsp + 0x38] ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000135010 : push rax ; mov rdi, r12 ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x0000000000073815 : push rax ; mov rdx, rdi ; jbe 0x7374e ; mov eax, dword ptr [rsi] ; jmp 0x737f4
0x000000000002583a : push rax ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000114eb6 : push rax ; mov rsi, rdx ; call rax
0x00000000001932a7 : push rax ; movsxd rdi, ebx ; jmp qword ptr [rax]
0x00000000001b0970 : push rax ; movsxd rsi, esi ; jmp qword ptr [rsi]
0x0000000000037b8e : push rax ; nop ; mov rsi, r13 ; mov rdi, r14 ; mov rdx, rbp ; call r15
0x0000000000186053 : push rax ; or al, 0xf2 ; inc dword ptr [rax] ; or eax, 0xd10fff2 ; jmp qword ptr [rax]
0x0000000000071c71 : push rax ; or al, byte ptr [rax] ; add rsp, 0x80 ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x0000000000033b8e : push rax ; or byte ptr [rax - 0x39], cl ; ret 0xfffe
0x00000000000818c2 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x00000000000730e3 : push rax ; or byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; jo 0x73109 ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000007eea1 : push rax ; or byte ptr [rbp + 0xb], dh ; sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000013d452 : push rax ; or byte ptr [rbp - 0x3f6af040], al ; add rsp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000071b38 : push rax ; or byte ptr [rbx + 0x14], dh ; lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x00000000000719b1 : push rax ; or byte ptr [rbx + 0xb], dh ; lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x000000000005c0d3 : push rax ; or byte ptr [rcx - 0x77], cl ; push rsp ; and al, 8 ; jmp 0x5c0a6
0x0000000000084872 : push rax ; or dh, dh ; ret 0x7404
0x00000000000847b5 : push rax ; or dh, dh ; ret 0xf04
0x0000000000147e1c : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000186093 : push rax ; or eax, 0xe00fff2 ; jmp qword ptr [rax]
0x000000000002db02 : push rax ; or eax, 0xf8834800 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000193c1b : push rax ; outsb dx, byte ptr [rsi] ; cld ; push qword ptr [rax + 0x6e] ; cld ; jmp rax
0x0000000000193c13 : push rax ; outsd dx, dword ptr [rsi] ; cld ; push qword ptr [rax + 0x6f] ; cld ; push rax ; outsb dx, byte ptr [rsi] ; cld ; push qword ptr [rax + 0x6e] ; cld ; jmp rax
0x0000000000192ace : push rax ; pop r9 ; clc ; ret 0x6e1f
0x00000000001210bd : push rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000acbbd : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000186107 : push rax ; pslld mm7, mm7 ; add byte ptr [rax], dl ; call qword ptr [rax]
0x0000000000076b7c : push rax ; push 0 ; lea r9, qword ptr [rbp - 0x38] ; mov rcx, r13 ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x00000000000235e3 : push rax ; push rsp ; ret
0x0000000000005988 : push rax ; ret
0x000000000000f930 : push rax ; ret 0x10
0x0000000000004e00 : push rax ; ret 0xa
0x000000000000e538 : push rax ; ret 6
0x000000000018a09c : push rax ; sar edx, cl ; jmp rax
0x000000000007eea6 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000007420a : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x0000000000111bf2 : push rax ; sbb dh, dh ; ret 0x7508
0x00000000001166c5 : push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x00000000000f6f81 : push rax ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000001a4930 : push rax ; shr esi, cl ; call qword ptr [rax]
0x000000000008b52b : push rax ; stc ; add rsp, 0x10 ; pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x0000000000193233 : push rax ; sti ; inc eax ; sti ; inc dword ptr [rax + 0x50fffb4b] ; sti ; jmp qword ptr [rax]
0x0000000000193240 : push rax ; sti ; jmp qword ptr [rax]
0x0000000000193255 : push rax ; sti ; push qword ptr [rax] ; push rcx ; sti ; inc dword ptr [rax] ; push rdx ; sti ; call rax
0x00000000001ae470 : push rax ; stosb byte ptr [rdi], al ; cmc ; call qword ptr [rax]
0x000000000018a05f : push rax ; stosd dword ptr [rdi], eax ; cli ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; cli ; call qword ptr [rax]
0x00000000001ae570 : push rax ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x000000000019366c : push rax ; sub ah, bh ; jmp rax
0x0000000000193973 : push rax ; sub al, 0xfc ; inc dword ptr [rax + 0x2e] ; cld ; call qword ptr [rax - 0x1f0003d1]
0x0000000000074206 : push rax ; sub byte ptr [rax - 0x77], cl ; push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000000ebf14 : push rax ; sub eax, 0x5a0a8900 ; pop rcx ; pop rbx ; ret
0x00000000000fd82d : push rax ; test al, 0x20 ; je 0xfd84d ; xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x00000000000fd82c : push rax ; test al, 0x20 ; je 0xfd84e ; xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x000000000013e142 : push rax ; test eax, eax ; jne 0x13e1ae ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013e212 : push rax ; test eax, eax ; jne 0x13e27e ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013e2e2 : push rax ; test eax, eax ; jne 0x13e34e ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013e3a2 : push rax ; test eax, eax ; jne 0x13e40e ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001934cf : push rax ; xchg eax, ebx ; std ; push qword ptr [rax - 0x6c] ; std ; inc dword ptr [rax] ; xchg eax, ebp ; std ; call qword ptr [rax + 0x20fffd95]
0x00000000000e9d64 : push rbp ; adc byte ptr [rax + 0x63], cl ; ret
0x0000000000170dbb : push rbp ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000001993fd : push rbp ; add al, byte ptr [rax] ; mov ah, 0x17 ; sti ; call rsp
0x000000000013b60a : push rbp ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000019eedd : push rbp ; add byte ptr [rax], al ; in al, dx ; jmp qword ptr [rax]
0x0000000000077dc8 : push rbp ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x77d73
0x0000000000089ac8 : push rbp ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000001aeecd : push rbp ; add dword ptr [rax], eax ; mov al, 0xb8 ; cmc ; jmp qword ptr [rcx]
0x0000000000055b77 : push rbp ; add eax, dword ptr [rax] ; add cl, bl ; in eax, -0x21 ; loopne 0x55b12 ; ret 0xe680
0x0000000000193e81 : push rbp ; cld ; call qword ptr [rax + 0x10fffc56]
0x00000000000709f1 : push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000011074b : push rbp ; cmp byte ptr [rax - 0x3c41f0e8], cl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000115ea2 : push rbp ; cmp byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00000000001161f9 : push rbp ; cmp byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000118083 : push rbp ; lea rax, qword ptr [rip + 0x386b5] ; ret
0x0000000000117fc3 : push rbp ; lea rax, qword ptr [rip + 0x38795] ; ret
0x0000000000117f03 : push rbp ; lea rax, qword ptr [rip + 0x38855] ; ret
0x000000000009668a : push rbp ; lea rax, qword ptr [rip + 0xba0de] ; ret
0x00000000000919ca : push rbp ; lea rax, qword ptr [rip + 0xbed7e] ; ret
0x000000000009131a : push rbp ; lea rax, qword ptr [rip + 0xbf44e] ; ret
0x0000000000078efc : push rbp ; mov byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000146730 : push rbp ; mov byte ptr [rbx + rcx*4 + 0xa], al ; mov rdx, r13 ; add r9, qword ptr [rbp - 0x88] ; call rax
0x000000000013a72c : push rbp ; mov rcx, qword ptr [rsp + 0x18] ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x0000000000115ea6 : push rbp ; nop ; mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00000000001161fd : push rbp ; nop ; mov edx, dword ptr [r13 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x000000000011603c : push rbp ; nop ; mov edx, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000115f05 : push rbp ; nop ; mov edx, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00000000001164e3 : push rbp ; nop ; mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, qword ptr [rbp - 0x158] ; call rax
0x000000000011628c : push rbp ; nop ; mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000115ac5 : push rbp ; nop ; mov edx, dword ptr [rbx - 0x30] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x0000000000115f94 : push rbp ; nop ; mov edx, dword ptr [rcx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000115a0c : push rbp ; nop ; mov rdx, r13 ; call rax
0x000000000014c8a8 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000115f9a : push rbp ; or byte ptr [rax - 0x77], 0xda ; call rax
0x000000000006cd01 : push rbp ; or byte ptr [rbp + 0x3d8e0fd2], al ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x3948
0x0000000000115eaa : push rbp ; sbb byte ptr [rcx - 0x76b37fab], cl ; call rax
0x0000000000078316 : push rbp ; std ; dec dword ptr [rax - 0x7f] ; ret
0x0000000000113248 : push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x0000000000078482 : push rbp ; xor byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000090dca : push rbp ; xor rax, rax ; ret
0x00000000000d2638 : push rbx ; add al, 0x85 ; sal byte ptr [rbp - 0x18], cl ; nop ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019939d : push rbx ; add al, byte ptr [rax] ; in al, 0xe ; sti ; call rsp
0x0000000000199395 : push rbx ; add al, byte ptr [rax] ; mov ah, 0xd ; sti ; inc dword ptr [rbx + rdx*2 + 0xee40002] ; sti ; call rsp
0x00000000000ceae5 : push rbx ; add byte ptr [r15 - 0x48], sil ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000075f46 : push rbx ; add byte ptr [rax], al ; cmp eax, 0xff ; jne 0x75f59 ; pop rbx ; ret
0x00000000000f849a : push rbx ; add byte ptr [rax], al ; xor eax, eax ; sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000107321 : push rbx ; add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x00000000000dc0d7 : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000001aec8d : push rbx ; add dword ptr [rax], eax ; nop ; mov ch, 0xf5 ; jmp qword ptr [rbx]
0x000000000011257c : push rbx ; and byte ptr [rax + 0x2b], cl ; xor r9b, bpl ; ret
0x0000000000140589 : push rbx ; and byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000193e3d : push rbx ; cld ; call qword ptr [rax + 0x10fffc54]
0x0000000000193e7d : push rbx ; cld ; call qword ptr [rax]
0x0000000000115f01 : push rbx ; cmp byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov edx, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x000000000002d50b : push rbx ; cmp dword ptr [rax], eax ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x000000000008fd29 : push rbx ; cmp esi, dword ptr [rbx] ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x000000000008aa1a : push rbx ; fmul dword ptr [eax + 0x33] ; push rdi ; fmul dword ptr [rax + 0x39] ; ret 0x5a74
0x000000000013b7e9 : push rbx ; idiv edi ; dec dword ptr [rax - 0x75] ; sub eax, 0 ; add byte ptr [rax], al ; test rax, rax ; jne 0x13b7f1 ; pop rbx ; ret
0x00000000000ac60c : push rbx ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000002c350 : push rbx ; mov rax, qword ptr [rdi + 0x20] ; mov rbx, rdi ; test rax, rax ; je 0x2c36c ; call rax
0x00000000000a8a72 : push rbx ; movq qword ptr [rdi + 0x30], mm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000c1667 : push rbx ; or al, 0 ; movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000063e4b : push rbx ; or byte ptr [rax - 0x73], cl ; push rax ; add al, 0x48 ; mov dword ptr [rbx], edx ; mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005c387 : push rbx ; or byte ptr [rax - 0x73], cl ; push rax ; add dword ptr [rax - 0x77], ecx ; adc eax, dword ptr [rax - 0x78] ; sub byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000e0a20 : push rbx ; or byte ptr [rbp - 0x75], cl ; or byte ptr [rax - 0x77], r9b ; ret 0x1bb
0x00000000000ce8c1 : push rbx ; out dx, eax ; add byte ptr [rax], al ; je 0xce9af ; mov eax, 0x7f ; ret
0x0000000000170da8 : push rbx ; std ; dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x0000000000193265 : push rbx ; sti ; push qword ptr [rax + 0x54] ; sti ; call qword ptr [rax - 0x2f0004b8]
0x00000000000dfc35 : push rbx ; sub byte ptr [rax - 0x75], cl ; cmp eax, dword ptr [rcx] ; ret 0xc083
0x00000000000dfce9 : push rbx ; sub byte ptr [rax - 0x75], cl ; xor eax, dword ptr [rcx] ; ret 0x6348
0x0000000000173171 : push rbx ; sub byte ptr [rsi + rdx - 0x15], dh ; sub eax, 0x841f0f66 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000007a34d : push rbx ; sub rdx, rsi ; mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x000000000006d76a : push rbx ; xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000000299d4 : push rbx ; xor byte ptr [rax - 0x73], cl ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000bbb04 : push rbx ; xor byte ptr [rax], al ; xor ebx, ebx ; mov dword ptr fs:[rax], 0x4b ; mov rax, rbx ; pop rbx ; ret
0x0000000000134b75 : push rcx ; adc byte ptr [rax + 1], bh ; ret
0x000000000004c56b : push rcx ; adc esi, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000165f74 : push rcx ; add al, 0xc3 ; nop word ptr [rax + rax] ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x0000000000165f44 : push rcx ; add al, bl ; nop word ptr [rax + rax] ; mov dword ptr [rcx], edx ; ret
0x00000000000cea2a : push rcx ; add byte ptr [rax], al ; je 0xcea7f ; mov eax, 0x20 ; ret
0x000000000010031b : push rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x3f7cb7f0], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000001a5c34 : push rcx ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add ah, ch ; ret 0
0x00000000001259ab : push rcx ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x2e7af025], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000008de21 : push rcx ; add dword ptr [rax], eax ; ret
0x0000000000150d3e : push rcx ; add eax, dword ptr [rax] ; movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000165f83 : push rcx ; add eax, ebx ; nop word ptr cs:[rax + rax] ; mov qword ptr [rcx], rdx ; ret
0x00000000000a0519 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x00000000000a0598 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00000000000feb23 : push rcx ; and ebp, dword ptr [rax + rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000193e39 : push rcx ; cld ; call qword ptr [rax]
0x0000000000115f90 : push rcx ; cmp byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov edx, dword ptr [rcx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x000000000002d71b : push rcx ; cmp dword ptr [rax], eax ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000107623 : push rcx ; cwde ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ffa1b : push rcx ; dec dword ptr [rax - 0x77] ; add eax, 0x2c2d5b ; add rsp, 8 ; ret
0x0000000000109b23 : push rcx ; jae 0x109b5e ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109023 : push rcx ; jle 0x10905e ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000119423 : push rcx ; jp 0x119460 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 2] ; mov rax, -1 ; ret
0x00000000000f8423 : push rcx ; mov ch, byte ptr [rax + rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8523 : push rcx ; mov dword ptr [rax + rax], ebp ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8323 : push rcx ; mov ebp, dword ptr [rax + rax] ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000f8223 : push rcx ; mov word ptr [rax + rax], gs ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000146b23 : push rcx ; movabs dword ptr [0x894464d8f7410027], eax ; add byte ptr [rax - 1], bh ; ret
0x00000000000c191c : push rcx ; or al, 0 ; movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000165fb5 : push rcx ; or bl, al ; nop dword ptr [rax + rax] ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x0000000000075840 : push rcx ; or byte ptr [rax + 0x2b], cl ; adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000006a976 : push rcx ; or byte ptr [rax - 0x77], cl ; xchg eax, ebp ; push -0x14000005 ; ret 0x894d
0x00000000000ebf13 : push rcx ; push rax ; sub eax, 0x5a0a8900 ; pop rcx ; pop rbx ; ret
0x000000000003ce09 : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000116853 : push rcx ; std ; sub al, byte ptr [rax] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000193259 : push rcx ; sti ; inc dword ptr [rax] ; push rdx ; sti ; call rax
0x00000000000fe023 : push rcx ; sub al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000113fcc : push rcx ; sub byte ptr [rax - 0x77], cl ; ret
0x0000000000108e23 : push rcx ; sub byte ptr [rbx], 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ce423 : push rcx ; sub ch, byte ptr [rdi] ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000010bcc4 : push rcx ; sub eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000ec023 : push rcx ; sub rax, 0x64d8f700 ; mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000137904 : push rdi ; adc byte ptr [rax + 1], bh ; ret
0x00000000000aa2a3 : push rdi ; adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000aa1a1 : push rdi ; adc byte ptr [rax - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000d0d6f : push rdi ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000aa280 : push rdi ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x0000000000075949 : push rdi ; adc byte ptr [rcx + 0x2b], cl ; push rdi ; or byte ptr [rax - 0x3f], cl ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000000000a60ca : push rdi ; add al, 0xc3 ; nop dword ptr [rax] ; mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000000a7094 : push rdi ; add al, 0xc3 ; nop word ptr [rax + rax] ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000a6d6a : push rdi ; add al, bl ; nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000084587 : push rdi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x000000000019448d : push rdi ; add byte ptr [rax], al ; push rsp ; ret
0x00000000000a9f2a : push rdi ; add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000dc23b : push rdi ; add dword ptr [rax - 0x7d], ecx ; mov dword ptr [rcx], 0x24bc8948 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x0000000000196b4d : push rdi ; add dword ptr [rax], eax ; adc al, 0x76 ; hlt ; inc dword ptr [rdi + rdx*2 + 0x78640001] ; hlt ; call rsp
0x00000000001af06d : push rdi ; add dword ptr [rax], eax ; and bl, al ; cmc ; jmp qword ptr [rdi]
0x00000000001af085 : push rdi ; add dword ptr [rax], eax ; cmp bl, al ; cmc ; jmp rax
0x0000000000196b55 : push rdi ; add dword ptr [rax], eax ; js 0x196b55 ; call rsp
0x000000000008bbc1 : push rdi ; add dword ptr [rax], eax ; ret
0x00000000000a60d8 : push rdi ; add eax, ebx ; nop dword ptr [rax + rax] ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a9f88 : push rdi ; add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x000000000007a132 : push rdi ; and byte ptr [rax - 0x75], cl ; sub byte ptr [r8 + 0x39], r9b ; ret 0x850f
0x000000000007a046 : push rdi ; and byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x0000000000193e49 : push rdi ; cld ; call qword ptr [rax]
0x0000000000138195 : push rdi ; cmp byte ptr [rax + 1], bh ; ret
0x000000000002d13b : push rdi ; cmp dword ptr [rax], eax ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x000000000008aa1f : push rdi ; fmul dword ptr [rax + 0x39] ; ret 0x5a74
0x00000000000a7061 : push rdi ; inc ebx ; nop ; nop word ptr cs:[rax + rax] ; mov dword ptr [rdi], edx ; ret
0x00000000000a70a2 : push rdi ; inc ebx ; nop ; nop word ptr cs:[rax + rax] ; mov qword ptr [rdi], rdx ; ret
0x000000000006cbfd : push rdi ; loop 0x6cc17 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000008aa16 : push rdi ; loopne 0x8a9de ; or dword ptr [rbx + 0x67], edx ; fmul dword ptr [rax + 0x33] ; push rdi ; fmul dword ptr [rax + 0x39] ; ret 0x5a74
0x000000000007d220 : push rdi ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000007d254 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a70d5 : push rdi ; or bl, al ; nop dword ptr [rax + rax] ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000007594d : push rdi ; or byte ptr [rax - 0x3f], cl ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000000000a9fcc : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000aa00a : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a9faa : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x000000000012de7d : push rdi ; pop rsp ; lea rsi, qword ptr [rdi + 0x48] ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000013e793 : push rdi ; sbb byte ptr [rax + 1], bh ; ret
0x00000000001110a2 : push rdi ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000001381dd : push rdi ; sub byte ptr [rax + 1], bh ; ret
0x00000000000757b9 : push rdi ; sub rdx, rsi ; mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x0000000000100f8d : push rdi ; xor dword ptr [rax + rax], ebp ; add rsp, 0x98 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f84e5 : push rdx ; add byte ptr [rax], al ; xor eax, eax ; sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000025f7d : push rdx ; add dword ptr [rax], eax ; add bh, dh ; ret 0xf800
0x0000000000088a57 : push rdx ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x48], bl ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000193e79 : push rdx ; cld ; call qword ptr [rax + 0x10fffc53]
0x00000000001304ed : push rdx ; cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x0000000000118683 : push rdx ; dec dword ptr [rax - 0x7f] ; ret
0x0000000000109722 : push rdx ; ja 0x10975d ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000002de21 : push rdx ; mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x00000000000c9846 : push rdx ; mov rdx, qword ptr [rsp + 0x28] ; mov rdi, qword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000071aa0 : push rdx ; or al, byte ptr [rax] ; add rsp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x00000000001381d5 : push rdx ; or byte ptr [rax - 0x77], cl ; and byte ptr [r8 - 0x77], r9b ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x0000000000134b6d : push rdx ; or byte ptr [rax - 0x77], cl ; or byte ptr [r8 - 0x77], cl ; push rcx ; adc byte ptr [rax + 1], bh ; ret
0x000000000013818d : push rdx ; or byte ptr [rax - 0x77], cl ; xor byte ptr [r8 - 0x77], r9b ; push rdi ; cmp byte ptr [rax + 1], bh ; ret
0x000000000008b986 : push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x000000000002ddf1 : push rdx ; pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000002caca : push rdx ; pop rdi ; cmp dword ptr [rax], eax ; mov byte ptr [rip + 0x395fa9], dl ; ret
0x000000000019325d : push rdx ; sti ; call rax
0x00000000000bbc14 : push rdx ; xor byte ptr [rax], al ; mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x00000000000bbbf4 : push rdx ; xor byte ptr [rax], al ; mov dword ptr fs:[rax], 0x4b ; xor eax, eax ; add rsp, 8 ; ret
0x00000000000a86a8 : push rsi ; adc al, 0xf3 ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a79b7 : push rsi ; adc bl, dh ; movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a8807 : push rsi ; adc bl, dh ; movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000e9323 : push rsi ; adc byte ptr [rax + 0x63], cl ; ret
0x00000000000e9219 : push rsi ; adc byte ptr [rcx - 0x75], cl ; or byte ptr [rax + 0x63], r9b ; ret
0x000000000004eed2 : push rsi ; adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rax + rcx*4] ; lea rcx, qword ptr [rip - 0x360] ; add rax, rcx ; jmp rax
0x00000000000735da : push rsi ; add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e8797 : push rsi ; add al, 0xeb ; movabs eax, dword ptr [0x458b4828245c8b48] ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000143916 : push rsi ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x483278c0], al ; mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x0000000000194485 : push rsi ; add byte ptr [rax], al ; adc al, 0xc3 ; call 0x70619a
0x00000000001af055 : push rsi ; add dword ptr [rax], eax ; pop rax ; ret 0xfff5
0x00000000000a7775 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a85b5 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a76e3 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a8513 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000193e45 : push rsi ; cld ; call qword ptr [rax + 0x10fffc57]
0x0000000000193e85 : push rsi ; cld ; call qword ptr [rax]
0x0000000000116038 : push rsi ; cmp byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov edx, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000046765 : push rsi ; dec dword ptr [rax + 1] ; ret 0xf66
0x00000000000ba3a9 : push rsi ; idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x00000000000f7285 : push rsi ; jo 0xf72df ; mov eax, dword ptr [rdi + 0x80] ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000f7e02 : push rsi ; jo 0xf7e5c ; mov eax, dword ptr [rdi + 0x100] ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x0000000000087156 : push rsi ; movabs byte ptr [0x90fffffe8ce90000], al ; mov rdx, qword ptr [rsp + 0x68] ; call rax
0x0000000000137831 : push rsi ; or byte ptr [rax - 0x75], cl ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000138111 : push rsi ; or byte ptr [rax - 0x75], cl ; push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000aa004 : push rsi ; or byte ptr [rax - 0x77], cl ; jns 0xffffffffed3aa872 ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a9fa4 : push rsi ; or byte ptr [rax - 0x77], cl ; js 0xffffffffed3aa812 ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a9fc5 : push rsi ; or byte ptr [rax - 0x77], cl ; pcmpgtd mm1, qword ptr [rcx - 0x12cff7a9] ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a7957 : push rsi ; or eax, 0x77f0ff3 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a87a7 : push rsi ; or eax, 0x77f0ff3 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x0000000000102096 : push rsi ; out 0xf1, al ; dec dword ptr [rax - 0x77] ; ret
0x00000000000a7997 : push rsi ; psllq mm1, qword ptr [rdi] ; jg 0xa79b3 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a87e7 : push rsi ; psllq mm1, qword ptr [rdi] ; jg 0xa8803 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000013a72a : push rsi ; push r13 ; mov rcx, qword ptr [rsp + 0x18] ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x000000000004004e : push rsi ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000001932ad : push rsi ; sti ; call qword ptr [rax + 0x30fffb67]
0x00000000000f0287 : push rsi ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000013b7a4 : push rsi ; sub byte ptr [rax], al ; cmp dword ptr fs:[rax], 0x18 ; je 0x13b7b9 ; ret
0x000000000008b894 : push rsi ; xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000004f046 : push rsp ; adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rax + rcx*4] ; lea rcx, qword ptr [rip - 0x4d4] ; add rax, rcx ; jmp rax
0x00000000001993c5 : push rsp ; add al, byte ptr [rax] ; adc al, 0xfb ; call rsp
0x00000000001b7ca8 : push rsp ; add byte ptr [rax], al ; add byte ptr [rbx + 1], dl ; add byte ptr [rax], ah ; push rcx ; clc ; call rdi
0x000000000019f6a8 : push rsp ; add byte ptr [rax], al ; add byte ptr [rdx + rcx + 0x12700000], dl ; in eax, dx ; call qword ptr [rax]
0x00000000001a25c8 : push rsp ; add byte ptr [rax], al ; add byte ptr [rsp + rcx*4], dh ; add al, dl ; ret 0xffed
0x0000000000196afd : push rsp ; add dword ptr [rax], eax ; adc al, 0x4a ; hlt ; dec dword ptr [rsp + rdx*2 + 0x52440001] ; hlt ; call rsp
0x0000000000196b05 : push rsp ; add dword ptr [rax], eax ; push rdx ; hlt ; call rsp
0x00000000001b9aac : push rsp ; add dword ptr [rdx], eax ; add byte ptr [rax - 0x3d], ah ; clc ; jmp rcx
0x0000000000110a01 : push rsp ; and al, 0x10 ; mov edi, 0x2000004 ; call rax
0x000000000010bd1a : push rsp ; and al, 0x10 ; mov rcx, qword ptr [rsp + 8] ; mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000010bd7b : push rsp ; and al, 0x10 ; mov rcx, qword ptr [rsp + 8] ; mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x00000000001108fd : push rsp ; and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x0000000000083f40 : push rsp ; and al, 0x18 ; mov byte ptr [rsp + 0x28], r11b ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x0000000000145d12 : push rsp ; and al, 0x18 ; mov esi, 0x40 ; mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000083f4a : push rsp ; and al, 0x20 ; call qword ptr [rax]
0x00000000000c9849 : push rsp ; and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000014636a : push rsp ; and al, 0x38 ; add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000087162 : push rsp ; and al, 0x68 ; call rax
0x000000000008847a : push rsp ; and al, 0x68 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000108d47 : push rsp ; and al, 8 ; mov eax, 0x38 ; syscall ; test rax, rax ; jl 0x108d98 ; je 0x108d6a ; ret
0x00000000001379c2 : push rsp ; bswap eax ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x0000000000193e41 : push rsp ; cld ; call qword ptr [rax]
0x00000000001a8eac : push rsp ; cmc ; add byte ptr [rax], al ; add byte ptr [rbp - 0xe], dl ; jmp qword ptr [rcx]
0x00000000000f56a8 : push rsp ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001ad5ac : push rsp ; cmp al, 1 ; add byte ptr [rax + 0x58], al ; cmc ; jmp qword ptr [rcx]
0x0000000000195924 : push rsp ; fld dword ptr [rax] ; add byte ptr [rdi + rsi*2 - 0x12], ah ; inc dword ptr [rcx + rbx*8 + 0x7ed40000] ; out dx, al ; call rsp
0x0000000000195e34 : push rsp ; inc byte ptr [rax] ; add byte ptr [rsp + rdx*4 - 0x11], al ; dec dword ptr [rsi + rdi*8 - 0x6b2c0000] ; out dx, eax ; call rsp
0x00000000001a7259 : push rsp ; int1 ; jmp qword ptr [rax]
0x000000000019710c : push rsp ; jnp 0x19711f ; add byte ptr [rax + rbp*2], ah ; idiv bh ; movsb byte ptr [rdi], byte ptr [rsi] ; jnp 0x197127 ; add byte ptr [rbp + rbp*2 - 0xa], dh ; call rsp
0x00000000001b7cac : push rsp ; jrcxz 0x1b7cb7 ; add byte ptr [rax], ah ; push rcx ; clc ; call rdi
0x000000000019898b : push rsp ; lar eax, word ptr [rax] ; test bl, al ; stc ; dec dword ptr [rax + rdx] ; add al, byte ptr [rax] ; xchg eax, esp ; ret
0x00000000000a0c7b : push rsp ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000197f7c : push rsp ; mov byte ptr [rcx], 0 ; je 0x197fbb ; clc ; inc dword ptr [rsi + rax*8 + 0x2ad40001] ; clc ; call rsp
0x000000000007192e : push rsp ; or al, byte ptr [rax] ; add rsp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x000000000019505b : push rsp ; pushfq ; add byte ptr [rax], al ; hlt ; ret
0x00000000001a47ac : push rsp ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; nop ; shr dh, 1 ; call qword ptr [rax]
0x0000000000153ad8 : push rsp ; sti ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000193269 : push rsp ; sti ; call qword ptr [rax - 0x2f0004b8]
0x00000000000ffaac : push rsp ; sub al, 0 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov qword ptr [rip + 0x2c2cc5], rax ; mov rdx, rax ; jmp 0xffa60
0x00000000001acaac : push rsp ; xor dword ptr [rcx], eax ; add byte ptr [rax + 0x23], al ; cmc ; jmp qword ptr [rcx]
0x00000000000a7a20 : pushfq ; add al, byte ptr [rax] ; add byte ptr [rsi + 0xf], ah ; je 0xa7a7d ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000019505d : pushfq ; add byte ptr [rax], al ; hlt ; ret
0x000000000019e3f4 : pushfq ; add byte ptr [rax], al ; je 0x19e3ed ; call rdi
0x0000000000198634 : pushfq ; add dword ptr [rax], eax ; xor al, 0x25 ; stc ; push qword ptr [rdx + rsi*8 + 0x25840001] ; stc ; jmp rsp
0x00000000001b35fd : pushfq ; add dword ptr [rax], eax ; xor byte ptr [rcx], 0xf7 ; jmp qword ptr [rsi]
0x00000000000328e0 : pushfq ; add dword ptr [rcx], edi ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x0000000000159d27 : pushfq ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001ae3f4 : pushfq ; add qword ptr [rax], rax ; call 0x221ad9ad
0x00000000000e0e23 : pushfq ; and al, 0x8c ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b49
0x0000000000023ae3 : pushfq ; and al, 0x90 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000dc0d0 : pushfq ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7fead], cl ; ret
0x000000000004712a : pushfq ; and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x8b4c
0x0000000000030560 : pushfq ; and eax, 0xc1480039 ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x0000000000193eb1 : pushfq ; cld ; inc dword ptr [rax - 0x5d] ; cld ; call rax
0x00000000001940b1 : pushfq ; cld ; jmp rax
0x00000000001940ad : pushfq ; cld ; push qword ptr [rax - 0x64] ; cld ; jmp rax
0x0000000000195d84 : pushfq ; cli ; add byte ptr [rax], al ; xchg eax, esp ; jno 0x195d81 ; call rsp
0x0000000000126653 : pushfq ; nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x000000000014aa40 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000195a29 : pushfq ; out dx, al ; dec dword ptr [rax - 0x5fdc0000] ; out dx, al ; jmp rsp
0x00000000001b08f4 : pushfq ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; fsub dword ptr [rdx - 0xa] ; jmp qword ptr [rsi]
0x00000000001a28f4 : pushfq ; pop qword ptr [rax] ; add byte ptr [rax], bh ; leave ; in eax, dx ; jmp qword ptr [rax]
0x000000000019584c : pushfq ; rol dword ptr [rax], cl ; add ah, ah ; push rdi ; out dx, al ; call rsp
0x00000000001a6ff4 : pushfq ; salc ; add byte ptr [rax], al ; mov byte ptr [rbp - 0xf], al ; call qword ptr [rsi]
0x00000000000f7446 : pushfq ; sar bh, 1 ; add dword ptr [rax], eax ; add byte ptr [rax - 9], cl ; fmul dword ptr [rax + 0x21] ; ret
0x00000000001a47f4 : pushfq ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; pop rax ; shr esi, 1 ; call rcx
0x000000000006cc20 : pushfq ; xchg byte ptr [rcx], dl ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x0000000000097e03 : rcl bl, 0xf8 ; test eax, eax ; je 0x97e30 ; bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x00000000000bfd54 : rcl byte ptr [rax + 0x39000001], cl ; xlatb ; sete al ; add eax, 0x16d ; ret
0x00000000001933c8 : rcl byte ptr [rax - 0x6e4f0003], 0xfd ; call rsi
0x00000000000a8a1c : rcl byte ptr [rax], 0x4c ; lea ebx, dword ptr [rip + 0xdd89b] ; movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a720c : rcl byte ptr [rax], 0x4c ; lea ebx, dword ptr [rip + 0xdeecb] ; movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000001933bc : rcl byte ptr [rcx - 0x70fe0003], 1 ; std ; call rax
0x00000000001937ac : rcl byte ptr [rsi], 1 ; cld ; call qword ptr [rax]
0x00000000000f6f80 : rcl dword ptr [rax - 0x3f], -0x17 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x000000000000a549 : rcl dword ptr [rbx], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x34
0x00000000000bfcb3 : rcl dword ptr [rcx], 0x30 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001076b3 : rcl dword ptr [rdi - 0x2708ffd5], 0x64 ; mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000008b893 : rcl dword ptr [rsi + 0x33], 0 ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00000000000aadb2 : rcr byte ptr [rbx + 0x25], cl ; add byte ptr [rax], al ; clc ; jg 0xaadbc ; int1 ; mov eax, eax ; ret
0x000000000013d45f : rcr byte ptr [rbx + 0x5d], 0xc3 ; nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x00000000000d80fe : rcr byte ptr [rbx + 0x5d], 0xeb ; xchg eax, edi ; nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x0000000000070ec5 : rcr byte ptr [rbx + 0x5d], cl ; pop r12 ; pop r13 ; jmp rax
0x0000000000071556 : rcr byte ptr [rbx - 0x3d], 1 ; nop dword ptr [rax] ; mov eax, edi ; ret
0x0000000000193ed4 : rcr byte ptr [rdi - 0x60af0004], 0xfc ; jmp rax
0x00000000001861ec : rcr byte ptr [rdi], 0xf2 ; jmp rax
0x00000000001940ec : rcr byte ptr [rsp + rdi*8 - 0x36d9f01], 0xff ; and byte ptr [rdx - 0x665f0004], bl ; cld ; call qword ptr [rax]
0x00000000001175a3 : rcr dword ptr [rax - 0x389bffd6], 1 ; add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000001074a3 : rcr dword ptr [rcx + 0x64ba002b], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x000000000014a6fc : rcr dword ptr [rdx], 0xf ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014e2b9 : rcr dword ptr [rdx], 0xf ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014dad9 : rcr dword ptr [rdx], 0xf ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b25c : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014aa3c : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000014a21c : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000014dc78 : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014ad7c : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a55c : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014af1c : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000014e169 : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d989 : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ea99 : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a07c : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a1b2 : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014aeb2 : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a9d2 : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014e06a : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014e99a : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014b1f2 : rcr dword ptr [rdx], 0xf ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a012 : rcr dword ptr [rdx], 0xf ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014e1ba : rcr dword ptr [rdx], 0xf ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014d9da : rcr dword ptr [rdx], 0xf ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000ff1a3 : rcr dword ptr [rsp + rbp], 1 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001432b3 : rcr ebx, 0x27 ; add byte ptr [rdi + rax*8], ah ; add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000ad794 : rdtsc ; add byte ptr [rax + 0x39], cl ; ret
0x000000000009184a : rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000126737 : rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x00000000000362ea : rep stosq qword ptr [rdi], rax ; ret
0x000000000013a03e : retf -0x1d7f ; add byte ptr [rax - 0x178b7f80], 0x89 ; rol ecx, 1 ; jmp 0xffffffff80d6976e
0x000000000013a2c5 : retf -0x1d7f ; add byte ptr [rax - 0x178b7f80], 0x89 ; rol ecx, 1 ; jmp 0xffffffff80d699f5
0x00000000001940ac : retf -0x364 ; push qword ptr [rax - 0x64] ; cld ; jmp rax
0x00000000001a6425 : retf 0 ; sub byte ptr [rdi - 0x10], dh ; jmp qword ptr [rax]
0x00000000001a643d : retf 0 ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000000c59f9 : retf 0x6348 ; add al, 0x96 ; add rax, rsi ; jmp rax
0x00000000000d3076 : retf 0xb47 ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x00000000000c96b9 : retf 7 ; mov rax, rbx ; call rax
0x00000000001a6485 : retf ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001a646d : retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x000000000008a441 : retf ; add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, r8 ; call rax
0x000000000019807d : retf ; add dword ptr [rax], eax ; hlt ; clc ; jmp rsp
0x0000000000156c24 : retf ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001462f3 : retf ; nop dword ptr [rax] ; call qword ptr [rax]
0x00000000001934a4 : retf ; xchg eax, esi ; std ; ljmp ptr [rbx - 0x69] ; std ; dec dword ptr [rbx] ; cwde ; std ; call qword ptr [rax + 0x20fffd98]
0x000000000008426d : retf ; xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], r8 ; xor edi, edi ; call qword ptr [rax]
0x00000000000a0dac : rol bl, 0x66 ; nop ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x00000000000a075c : rol bl, 0x66 ; nop ; mov rax, rdi ; ret
0x0000000000116670 : rol bl, 0x66 ; nop dword ptr [rax + rax] ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000000a07b5 : rol bl, 0x66 ; nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x000000000013edb8 : rol bl, 0x66 ; nop dword ptr [rax + rax] ; test edx, edx ; jne 0x13ede1 ; mov eax, 1 ; ret
0x00000000000365b0 : rol bl, 0x66 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000090dcd : rol bl, 0x90 ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000000a0c1d : rol bl, 0x90 ; bsr eax, eax ; add rax, rdi ; ret
0x000000000016db14 : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jl 0x16db2b ; neg eax ; ret
0x00000000000ace1e : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; movzx eax, al ; ret
0x00000000000adb3b : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000003a90d : rol bl, 1 ; nop ; mov rax, rdi ; cqo ; idiv rsi ; ret
0x000000000007eeac : rol bl, 1 ; nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000170229 : rol bl, 1 ; nop dword ptr [rax + rax] ; movzx eax, byte ptr [rdi - 0xa] ; movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x0000000000170219 : rol bl, 1 ; nop dword ptr [rax + rax] ; movzx eax, byte ptr [rdi - 0xb] ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000170209 : rol bl, 1 ; nop dword ptr [rax + rax] ; movzx eax, byte ptr [rdi - 0xc] ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000001701f9 : rol bl, 1 ; nop dword ptr [rax + rax] ; movzx eax, byte ptr [rdi - 0xd] ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x00000000001701e9 : rol bl, 1 ; nop dword ptr [rax + rax] ; movzx eax, byte ptr [rdi - 0xe] ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x00000000001701d9 : rol bl, 1 ; nop dword ptr [rax + rax] ; movzx eax, byte ptr [rdi - 0xf] ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000036c12 : rol bl, 1 ; nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x0000000000077247 : rol bl, 1 ; nop dword ptr [rax] ; shr edx, 4 ; and edx, 1 ; mov eax, edx ; ret
0x0000000000077337 : rol bl, 1 ; nop dword ptr [rax] ; shr edx, 5 ; and edx, 1 ; mov eax, edx ; ret
0x000000000014d5e4 : rol bl, 1 ; nop word ptr cs:[rax + rax] ; xor eax, eax ; ret
0x000000000003a937 : rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x00000000001126cc : rol byte ptr [rax + 0x38], 0xd6 ; cmovne eax, ecx ; ret
0x00000000000bc96b : rol byte ptr [rax + 0x42], cl ; str word ptr [rax - 0x73] ; and dword ptr [rcx + 8], 0x29490000 ; ror byte ptr [rax + 0x3d], 1 ; ret 0x10
0x00000000000a11b2 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000008dd12 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000001877a4 : rol byte ptr [rax + 0x7ff0fff4], 0xf4 ; push rax ; jg 0x1877b2 ; dec dword ptr [rax - 0x80] ; hlt ; call rax
0x0000000000139726 : rol byte ptr [rax + 0x8247c], cl ; setne dl ; add rsp, 0x70 ; mov eax, edx ; pop rbx ; ret
0x00000000000d89db : rol byte ptr [rax + 0xf00657b], cl ; xchg eax, ebp ; ret 0xd201
0x00000000000d80dd : rol byte ptr [rax + 0xf00657f], 0x95 ; rol byte ptr [rcx], 0xc0 ; ret
0x00000000000274ea : rol byte ptr [rax + 0xf4180fa], 0x94 ; ret
0x000000000005457f : rol byte ptr [rax + rax*8 + 0x180850f], 0 ; add byte ptr [rbx + rcx*4 + 4], al ; and al, 0x83 ; ret
0x0000000000076240 : rol byte ptr [rax + rax*8 - 0x7cb7e28c], 0xc4 ; or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000017ee80 : rol byte ptr [rax + rax], 0 ; ret 4
0x0000000000024590 : rol byte ptr [rax + rcx*2], 0x83 ; ret
0x00000000000d80d6 : rol byte ptr [rax - 0x418af506], 0x31 ; rol byte ptr [rax + 0xf00657f], 0x95 ; rol byte ptr [rcx], 0xc0 ; ret
0x000000000003ce0a : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000000ac9fd : rol byte ptr [rax*4 + 0x751089d2], 0xf3 ; ret
0x000000000002d937 : rol byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; add eax, 0x3934a6 ; mov qword ptr [rax], rdx ; ret
0x000000000007b4aa : rol byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 + 0x6b], cl ; sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x000000000007a839 : rol byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 + 0x7b], cl ; sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000000e787e : rol byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x5c], al ; and al, 0xa4 ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x0000000000053ca7 : rol byte ptr [rax], 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000016ba4d : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ba45 : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000027bfd : rol byte ptr [rax], 0 ; add dh, dh ; ret
0x00000000001a5975 : rol byte ptr [rax], 0 ; clc ; jp 0x1a597b ; jmp qword ptr [rdi]
0x0000000000109d32 : rol byte ptr [rax], 1 ; add byte ptr [rax - 0x75], cl ; and al, 8 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b5854 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000003e6f9 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x00000000000bc9f7 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x000000000011883c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006c5cf : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x00000000001354df : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x135501 ; mov rdi, r12 ; call rax
0x0000000000106b13 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000106977 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bca60 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000359dc : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x000000000002145a : rol byte ptr [rbp + 0x31], 0xc0 ; xor ecx, ecx ; movzx eax, al ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x00000000000365ab : rol byte ptr [rbp - 0x3f6bf02e], 0xc3 ; nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000997eb : rol byte ptr [rbp - 0x77], 1 ; cli ; cmp r10b, r8b ; jb 0x997db ; mov rdx, rax ; jmp 0x99787
0x000000000011835e : rol byte ptr [rbp - 0x78], 0x41 ; add esi, dword ptr [rbp - 0x6d] ; mov rax, rdi ; ret
0x000000000006f03f : rol byte ptr [rbx + 0xb74fff8], 1 ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000dda1d : rol byte ptr [rbx + 0xf6601c0], 0xfe ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000170706 : rol byte ptr [rbx + 0xfc3ffd8], 0x1f ; add byte ptr [rax], r8b ; xor eax, eax ; ret
0x00000000000ac052 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000012532d : rol byte ptr [rbx], 0x25 ; cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000ac012 : rol byte ptr [rbx], 0xc3 ; nop ; nop word ptr cs:[rax + rax] ; xor rax, rax ; ret
0x0000000000099d6b : rol byte ptr [rcx + 0x38], 1 ; clc ; jb 0x99d58 ; mov rdx, rax ; jmp 0x99d0f
0x000000000004ac2a : rol byte ptr [rcx + 0xf], cl ; mov dh, 4 ; cmp byte ptr [rax - 0x77], cl ; xlatb ; mov byte ptr [rsi], al ; jne 0x4ac20 ; mov rax, rsi ; ret
0x00000000000ac72f : rol byte ptr [rcx + rcx*2], 0x89 ; add al, 0x24 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001199b4 : rol byte ptr [rcx + rcx*4 + 0x40], 0xc ; jne 0x11995e ; mov rax, rdi ; ret
0x00000000000b2fbc : rol byte ptr [rcx - 0x44], 0x40 ; add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; fisttp dword ptr [rcx - 0x39] ; ret 0xffff
0x00000000001046ae : rol byte ptr [rcx - 0x77], 0xdd ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000005f987 : rol byte ptr [rcx - 0x77], 1 ; dec dword ptr [rax - 0x7d] ; ret
0x000000000003b34c : rol byte ptr [rcx], 0 ; add byte ptr [rax - 0x73], cl ; add eax, 0x38b0ff ; add rsp, 8 ; ret
0x00000000000ac032 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000001b5a55 : rol byte ptr [rcx], 0 ; pop rax ; ret 0xfff7
0x00000000000ac6da : rol byte ptr [rcx], 0x44 ; mov eax, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0xac6bc ; ret
0x00000000000a066a : rol byte ptr [rcx], 0x44 ; movsx eax, byte ptr [rdi + rax] ; test r8b, r8b ; jne 0xa065d ; ret
0x0000000000096720 : rol byte ptr [rcx], 0x48 ; mov dword ptr [rbx], eax ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000009682f : rol byte ptr [rcx], 0x49 ; cmp ebx, eax ; jb 0x9684d ; mov qword ptr [rdx], r12 ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000098d2a : rol byte ptr [rcx], 0x84 ; sar byte ptr [rdx], cl ; cmove rax, rdx ; ret
0x00000000000f806c : rol byte ptr [rcx], cl ; ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x000000000010c42d : rol byte ptr [rdi + rcx], 0xb7 ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000013e6f8 : rol byte ptr [rdi + rcx], 0xca ; mov dword ptr [rax - 4], edx ; mov qword ptr [rdi + 0x18], rax ; mov eax, 1 ; ret
0x000000000013e728 : rol byte ptr [rdi + rcx], 0xca ; mov dword ptr [rsi], edx ; mov qword ptr [rdi + 0x18], rax ; mov eax, 1 ; ret
0x00000000000ac092 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000ac042 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000abff9 : rol byte ptr [rdx], 0xc3 ; nop dword ptr [rax] ; add rax, 1 ; ret
0x0000000000108d77 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00000000000ce187 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x000000000016a22a : rol byte ptr [rdx], cl ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000056471 : rol byte ptr [rip + 0x107], 0x89 ; add bh, byte ptr [rax + 1] ; ret
0x00000000000ac082 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x0000000000003b01 : rol dh, 1 ; sbb esi, dword ptr [rdx - 0x2f] ; clc ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x00000000000abfdc : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x00000000000009ef : rol dword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x0000000000145c19 : rol dword ptr [rax + 0x48000001], -0x77 ; mov cl, 0xe9 ; add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000091842 : rol dword ptr [rax + 0xf], 1 ; mov dh, 0xc6 ; mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000023bc8 : rol dword ptr [rax + rcx*2], -0x7d ; ret
0x0000000000108db3 : rol dword ptr [rax - 0x2708ffd5], 0x64 ; mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000126532 : rol dword ptr [rax - 0x69f0fe07], cl ; ret 0x8341
0x0000000000131c7e : rol dword ptr [rax], 0 ; test eax, eax ; jne 0x131c9f ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000016ec0f : rol dword ptr [rax], 1 ; add byte ptr [rax], al ; cmp rdx, rcx ; jne 0x16ebff ; vzeroupper ; ret
0x0000000000020da3 : rol dword ptr [rax], 1 ; cmp al, byte ptr [rax] ; mov dword ptr fs:[rax], 9 ; mov eax, edi ; ret
0x000000000006cc98 : rol dword ptr [rax], 1 ; ret
0x000000000019584d : rol dword ptr [rax], cl ; add ah, ah ; push rdi ; out dx, al ; call rsp
0x0000000000195845 : rol dword ptr [rax], cl ; add byte ptr [rdi + rdx*2 - 0x2c630012], al ; add byte ptr [rax], al ; in al, 0x57 ; out dx, al ; call rsp
0x0000000000181816 : rol dword ptr [rax], cl ; mov esi, 0x440496fc ; mov r10d, 0xcac982a4 ; call 0xffffffffaedab6a6
0x00000000000a0bda : rol dword ptr [rbp + 0x7d850fc0], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000090d86 : rol dword ptr [rbp - 0x4e7af040], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000011835b : rol dword ptr [rbp - 0x7c], 1 ; rol byte ptr [rbp - 0x78], 0x41 ; add esi, dword ptr [rbp - 0x6d] ; mov rax, rdi ; ret
0x0000000000069973 : rol dword ptr [rcx], -0x77 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8304
0x00000000000246b2 : rol dword ptr [rcx], -0x77 ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000098c07 : rol dword ptr [rcx], 0x48 ; sub esi, 1 ; jne 0x98c0d ; xor edi, edi ; mov rax, rdi ; ret
0x00000000001b6a6d : rol dword ptr [rcx], 1 ; add byte ptr [rax + 0xe], dl ; clc ; call qword ptr [rbx]
0x00000000001b6a85 : rol dword ptr [rcx], 1 ; add byte ptr [rax + 0xf], bl ; clc ; call qword ptr [rsi]
0x000000000019818d : rol dword ptr [rcx], 1 ; add byte ptr [rax + rbx*2], al ; clc ; call rsp
0x00000000000cfb00 : rol dword ptr [rdi + rcx], -0x7b ; sahf ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000a81a9 : rol dword ptr [rdi], cl ; add byte ptr [rax], al ; ret
0x00000000001268ae : rol dword ptr [rdx], 0x41 ; mov dword ptr [rax], edi ; mov qword ptr [r9], rcx ; ret
0x000000000005e783 : rol dword ptr [rip - 0x72b80000], cl ; push rax ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000207a3 : rol dword ptr [rsi], 1 ; cmp al, byte ptr [rax] ; add rax, qword ptr fs:[0] ; ret
0x0000000000195844 : rol dword ptr fs:[rax], cl ; add byte ptr [rdi + rdx*2 - 0x2c630012], al ; add byte ptr [rax], al ; in al, 0x57 ; out dx, al ; call rsp
0x00000000000363e5 : rol eax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000009ee : rol qword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x00000000000363e4 : rol rax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000966dc : ror bh, 1 ; or eax, dword ptr [rax] ; ret
0x0000000000034ade : ror byte ptr [rax + 0x21], 0xd0 ; sub rax, rdx ; shr rax, 0x3f ; ret
0x00000000000362b4 : ror byte ptr [rax + 0x21], 1 ; add al, 0xd7 ; xor eax, eax ; ret
0x000000000008f75c : ror byte ptr [rax + 0x21], 1 ; enter -0x7bf1, -0x46 ; add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x00000000000363e6 : ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x0000000000034b92 : ror byte ptr [rax + 0x21], cl ; shl byte ptr [rsi + 0x48], 1 ; movd mm1, eax ; movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x0000000000090e12 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x90e59 ; add rax, rdi ; ret
0x0000000000090e22 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x90e5b ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000090e32 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x90e5b ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000090e42 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x90e5b ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000090b9c : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x90e60 ; add rax, rdi ; add rax, rcx ; ret
0x000000000003d182 : ror byte ptr [rax + 0x29], 0xc2 ; jmp 0x3d1bf
0x00000000000403cc : ror byte ptr [rax + 0x29], 0xc2 ; jmp 0x40409
0x000000000008dbc7 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000000a15ce : ror byte ptr [rax + 0x29], 1 ; enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x0000000000075c81 : ror byte ptr [rax + 0x29], 1 ; ret
0x00000000000d444f : ror byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000029b13 : ror byte ptr [rax + 0x39], 0xca ; jb 0x29b39 ; add rsp, 0xa0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013e68d : ror byte ptr [rax + 0x39], 0xca ; je 0x13e6a7 ; ret
0x00000000000fa241 : ror byte ptr [rax + 0x39], 0xd1 ; setb dl ; seta al ; movzx edx, dl ; sub eax, edx ; ret
0x00000000000fe46f : ror byte ptr [rax + 0x39], 0xd7 ; ja 0xfe4a7 ; ret
0x0000000000116748 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000000f806e : ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x000000000003daa9 : ror byte ptr [rax + 0x39], cl ; call 0x48c66cc6
0x00000000000b4c69 : ror byte ptr [rax + 0x39], cl ; fmul dword ptr [rdi] ; xchg eax, edx ; ret 0x2948
0x00000000000aaf79 : ror byte ptr [rax + 0x39], cl ; ror byte ptr [rdi], 1 ; xchg ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000000bc979 : ror byte ptr [rax + 0x3d], 1 ; ret 0x10
0x00000000000ceb3f : ror byte ptr [rax + 0x3d], cl ; push rsp ; push rbx ; je 0xceb20 ; mov eax, 1 ; ret
0x0000000000116668 : ror byte ptr [rax + 0x48], 0x39 ; sal byte ptr [rdx - 0xf], 1 ; xor eax, eax ; ret
0x0000000000047345 : ror byte ptr [rax + 0xf], 0x44 ; ret
0x00000000000bc7f0 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x0000000000117772 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x000000000012b61c : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x000000000003759b : ror byte ptr [rax + 0xf], 0xaf ; ret 0x8949
0x000000000002c869 : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000002c85c : ror byte ptr [rax + 0xf], 1 ; ret 0x578b
0x0000000000106d27 : ror byte ptr [rax + 0xf], cl ; ret 0xc148
0x0000000000128e29 : ror byte ptr [rax + 0xf], cl ; ret 0xff81
0x0000000000116742 : ror byte ptr [rax + 0xf], cl ; sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000000a0d63 : ror byte ptr [rax + 1], 0xf8 ; add rax, r8 ; ret
0x0000000000097e0c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x000000000008f769 : ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000032ba3 : ror byte ptr [rax + 1], 1 ; ret
0x0000000000126883 : ror byte ptr [rax + 1], 1 ; xlatb ; mov qword ptr [r9], rdi ; ret
0x000000000008dbc4 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x0000000000125c22 : ror byte ptr [rax + 1], cl ; sal esi, cl ; ret
0x00000000000e1b70 : ror byte ptr [rax + 9], 0x14 ; ret
0x000000000003a90a : ror byte ptr [rax + 9], 0xd0 ; ret
0x000000000017b288 : ror byte ptr [rax + rax], 0 ; ret
0x000000000011821c : ror byte ptr [rax + rax], 1 ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000090f95 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x000000000008db06 : ror byte ptr [rax - 0x2d], 0xfa ; test rdx, rdx ; je 0x8db2c ; bsf rax, rdx ; ret
0x000000000008db06 : ror byte ptr [rax - 0x2d], 0xfa ; test rdx, rdx ; je 0x8db2d ; bsf rax, rdx ; ret
0x000000000008daa5 : ror byte ptr [rax - 0x2d], 0xfa ; test rdx, rdx ; je 0x8db40 ; bsf rax, rdx ; ret
0x000000000008daa5 : ror byte ptr [rax - 0x2d], 0xfa ; test rdx, rdx ; je 0x8db41 ; bsf rax, rdx ; ret
0x00000000000aa90c : ror byte ptr [rax - 0x2f], 1 ; call 0xffffffffc30f3668
0x000000000002d872 : ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x000000000009d7c2 : ror byte ptr [rax - 0x3f], 0xe0 ; or byte ptr [rsi + 0xf], al ; mov dh, 0xc ; add dword ptr [rcx - 0x77], ecx ; ret 0xf43
0x00000000000c18a5 : ror byte ptr [rax - 0x3f], 1 ; call 0x149960be
0x00000000000adf7d : ror byte ptr [rax - 0x48], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x00000000000ff5a3 : ror byte ptr [rax - 0x73], 0x15 ; ret
0x00000000000c04a1 : ror byte ptr [rax - 0x73], 0x15 ; xchg eax, edi ; xor byte ptr ss:[rax], al ; jne 0xc04c9 ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000111f8c : ror byte ptr [rax - 0x73], 0x35 ; ret
0x0000000000090dd2 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x0000000000090e02 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x00000000000a0c52 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dh ; ret
0x0000000000090df2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x0000000000039d35 : ror byte ptr [rax - 0x73], 0x65 ; fcomp dword ptr [rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000162a83 : ror byte ptr [rax - 0x73], 0x76 ; adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000162abf : ror byte ptr [rax - 0x73], 0x76 ; adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000a1940 : ror byte ptr [rax - 0x73], 0x76 ; adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x13
0x00000000000769a7 : ror byte ptr [rax - 0x73], 0xb5 ; nop ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000002cac6 : ror byte ptr [rax - 0x73], 1 ; add eax, 0x395f52 ; mov byte ptr [rip + 0x395fa9], dl ; ret
0x00000000000ba59f : ror byte ptr [rax - 0x73], 1 ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000007a720 : ror byte ptr [rax - 0x73], 5 ; fdivr dword ptr [rsp + rsi] ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000d0312 : ror byte ptr [rax - 0x75], 0x54 ; ret
0x000000000010bdb1 : ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000012e716 : ror byte ptr [rax - 0x75], 0x74 ; and al, 0x10 ; mov rdi, rbp ; call r14
0x0000000000138469 : ror byte ptr [rax - 0x75], 0x74 ; and al, 0x30 ; mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000134df1 : ror byte ptr [rax - 0x75], 0x74 ; and al, 0x38 ; mov rdi, r12 ; mov rcx, qword ptr [rsp + 0x30] ; call rcx
0x000000000013500b : ror byte ptr [rax - 0x75], 0x74 ; and al, 0x50 ; mov rdi, r12 ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x00000000000c69f6 : ror byte ptr [rax - 0x75], 0x7c ; ret
0x000000000012fbd6 : ror byte ptr [rax - 0x75], 0xb4 ; and al, 0 ; sub al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; or al, 0x24 ; call rcx
0x000000000008b983 : ror byte ptr [rax - 0x75], 1 ; push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x000000000008a43a : ror byte ptr [rax - 0x77], 0x45 ; add byte ptr [rdi], cl ; test bl, cl ; add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, r8 ; call rax
0x00000000000e9654 : ror byte ptr [rax - 0x77], 0x45 ; and byte ptr [rdi], cl ; test byte ptr [rcx - 0xa000000], dh ; ret
0x000000000008ba07 : ror byte ptr [rax - 0x77], 0x6b ; or byte ptr [rax - 0x77], cl ; adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000a0479 : ror byte ptr [rax - 0x77], 0xa ; ret
0x0000000000130959 : ror byte ptr [rax - 0x77], 0xc3 ; jne 0x1308fb ; xor eax, eax ; pop rbx ; ret
0x0000000000135658 : ror byte ptr [rax - 0x77], 0xd6 ; add rdi, 0x10 ; jmp rcx
0x0000000000135678 : ror byte ptr [rax - 0x77], 0xd6 ; mov dword ptr [rdi + 0x10], 2 ; add rdi, 0x10 ; jmp rcx
0x0000000000138128 : ror byte ptr [rax - 0x77], 0xd6 ; mov dword ptr [rdi + 0x58], 2 ; add rdi, 0x58 ; jmp rcx
0x0000000000137848 : ror byte ptr [rax - 0x77], 0xd6 ; mov dword ptr [rdi + 0x68], 2 ; add rdi, 0x68 ; jmp rcx
0x0000000000099214 : ror byte ptr [rax - 0x77], 0xd8 ; pop rbx ; cmovne rax, rdx ; ret
0x000000000010af87 : ror byte ptr [rax - 0x77], 0xe5 ; lock cmpxchg qword ptr [rip + 0x2b628c], rdx ; je 0x10afa8 ; pop rbp ; ret
0x0000000000117662 : ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x00000000000acc54 : ror byte ptr [rax - 0x77], 0xee ; mov rdi, qword ptr [r12] ; lea r9, qword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000000c80e0 : ror byte ptr [rax - 0x77], 1 ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000004acb7 : ror byte ptr [rax - 0x77], 1 ; ret
0x000000000007ad21 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x00000000000bf885 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x00000000000201e3 : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000052a14 : ror byte ptr [rax - 0x77], 1 ; ret 0xd3e8
0x0000000000033ee1 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x0000000000134c59 : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x000000000013ed24 : ror byte ptr [rax - 0x77], 3 ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x0000000000089d1a : ror byte ptr [rax - 0x77], 3 ; je 0x89e2d ; mov rsi, r14 ; call rax
0x0000000000103a7e : ror byte ptr [rax - 0x77], 3 ; setne al ; movzx eax, al ; pop rbx ; ret
0x000000000011cebd : ror byte ptr [rax - 0x77], 5 ; and ebx, dword ptr [rcx + 0x2a] ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rdi], -0x7b ; ret
0x00000000000ba83b : ror byte ptr [rax - 0x77], cl ; push rbx ; adc byte ptr [rdi + rdx*8 + 0x48], dh ; add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000080455 : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000007c371 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x7c386 ; ret
0x00000000000d26ed : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x00000000001039fa : ror byte ptr [rax - 0x7d], 0x3e ; add byte ptr [rdi + rax - 0xd], dh ; ret
0x0000000000078ca2 : ror byte ptr [rax - 0x7d], 0x7f ; sbb byte ptr [rax], al ; setne al ; ret
0x00000000000eabcf : ror byte ptr [rax - 0x7d], 0xc0 ; add dword ptr [rcx + 0x39], eax ; ret 0xe77f
0x0000000000096d81 : ror byte ptr [rax - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000bcd01 : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000074e1f : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000130d49 : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx - 0x3d], bl ; mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x0000000000116fc2 : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx - 0x7d], bl ; loopne 0x116fe3 ; pop rbp ; pop r12 ; ret
0x00000000000799d4 : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; pop rbx ; ret
0x000000000013daaa : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013dbf1 : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000029cfa : ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001399a8 : ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000000fa060 : ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x000000000012d6ea : ror byte ptr [rax - 0x7d], 0xc4 ; or bl, al ; mov eax, 1 ; ret
0x000000000008018c : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003b0c1 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000003a30d : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000001358f1 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; add eax, 1 ; ret
0x0000000000109054 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000131c65 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000000456c4 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000012b9a1 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; pop rbx ; neg eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000090411 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007059c : ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d72d1 : ror byte ptr [rax - 0x7d], 0xc4 ; push 0x5c415d5b ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001462c0 : ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x0000000000097be1 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cca4d : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000124b13 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000006c2b4 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000013d458 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000013ec5a : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000003b847 : ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000879fc : ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000013626f : ror byte ptr [rax - 0x7d], 0xc4 ; xor byte ptr [rbx + 0xf], bl ; mov dh, 0xc0 ; pop rbp ; pop r12 ; ret
0x00000000000f6f77 : ror byte ptr [rax - 0x7d], 0xe7 ; clc ; sub rcx, rdi ; add ecx, 0x50 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000362dc : ror byte ptr [rax - 0x7d], 0xe7 ; clc ; sub rcx, rdi ; sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000a0cb2 : ror byte ptr [rax - 0x7d], 0xea ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x00000000000a0c62 : ror byte ptr [rax - 0x7d], 0xea ; add rdx, rax ; jl 0xa0cdd ; add rax, rdi ; ret
0x00000000000a0c92 : ror byte ptr [rax - 0x7d], 0xea ; and byte ptr [rax + 1], cl ; ret 0x347c
0x00000000000a0c72 : ror byte ptr [rax - 0x7d], 0xea ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x00000000000f849e : ror byte ptr [rax - 0x7d], 0xec ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000085609 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2919e28
0x000000000003e057 : ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000000de0db : ror byte ptr [rax - 0x7d], 1 ; ret 0x8301
0x00000000000ff0b5 : ror byte ptr [rax - 0x7d], cl ; clc ; add al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x000000000007782a : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000467f4 : ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000e69a4 : ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000a67b6 : ror byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000bf4de : ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000139f3d : ror byte ptr [rax - 0x7f], 0xc4 ; add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008d64b : ror byte ptr [rax - 0x7f], 0xc4 ; add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000008fabb : ror byte ptr [rax - 0x7f], 0xc4 ; add byte ptr [rcx], al ; add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x00000000000fe32d : ror byte ptr [rax - 0x7f], 0xc4 ; cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000f9c21 : ror byte ptr [rax - 0x7f], 0xc4 ; cwde ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000fa331 : ror byte ptr [rax - 0x7f], 0xc4 ; movabs al, byte ptr [0x415c415d5b000000] ; pop rbp ; pop r14 ; ret
0x000000000010a01f : ror byte ptr [rax - 0x7f], 0xc4 ; nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000feae9 : ror byte ptr [rax - 0x7f], 0xc4 ; nop ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000008d648 : ror byte ptr [rax - 1], 0xc0 ; add rsp, 0x100 ; sub rax, rdx ; ret
0x000000000008d645 : ror byte ptr [rax - 1], 0xc0 ; inc rax ; add rsp, 0x100 ; sub rax, rdx ; ret
0x00000000000cea48 : ror byte ptr [rax - 9], 0xd8 ; or rax, 0x20 ; ret
0x00000000000cf000 : ror byte ptr [rax - 9], 0xd8 ; or rax, 0x31069 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000ce918 : ror byte ptr [rax - 9], 0xd8 ; or rax, 0x7f ; ret
0x00000000000ceb28 : ror byte ptr [rax - 9], 0xd8 ; or rax, 1 ; ret
0x0000000000079b9a : ror byte ptr [rax - 9], cl ; cmc ; mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000868d0 : ror byte ptr [rax], 0x48 ; cmp edx, eax ; ja 0x868d2 ; xor eax, eax ; ret
0x000000000013acd5 : ror byte ptr [rax], 0x83 ; js 0x13acdf ; dec dword ptr [rdi] ; test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x00000000001937c0 : ror byte ptr [rax], 1 ; cld ; jmp qword ptr [rax]
0x000000000008fac4 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000018602c : ror byte ptr [rbx], 0xf2 ; jmp rax
0x00000000000350c5 : ror byte ptr [rcx + 0x1f0fc317], 0x80 ; add byte ptr [rax], al ; add byte ptr [rax], al ; addss xmm0, xmm0 ; ret
0x0000000000101355 : ror byte ptr [rcx + 0x2c2e6435], cl ; add byte ptr [rax + rcx - 9], dh ; ret 0xfc07
0x000000000010081d : ror byte ptr [rcx + 0x49e475c2], 0x89 ; leave ; mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x00000000000acd8a : ror byte ptr [rcx + rcx*4 - 0x12], 0x4c ; lea ecx, dword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000bb41a : ror byte ptr [rcx + rcx*4 - 0x17], 0x4c ; lea ecx, dword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x000000000012ccbf : ror byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, rbx ; mov qword ptr [rsp], rax ; mov rcx, rax ; call r12
0x0000000000098419 : ror byte ptr [rcx - 0x39], 4 ; and al, 0 ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000089f1a : ror byte ptr [rcx - 0x77], 0x45 ; add byte ptr [rdi], cl ; test bl, ch ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x000000000008b035 : ror byte ptr [rcx - 0x77], 0x45 ; add byte ptr [rdi], cl ; test byte ptr [rax + 0x48000000], cl ; mov esi, ebp ; mov rdi, r12 ; call rax
0x000000000008aea9 : ror byte ptr [rcx - 0x77], 4 ; and al, 0xf ; test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000008a187 : ror byte ptr [rcx - 0x77], 4 ; and al, 0xf ; test dh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x0000000000185fec : ror byte ptr [rcx], 0xf2 ; jmp rax
0x00000000000f4bab : ror byte ptr [rdi], 0x84 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000caff8 : ror byte ptr [rdi], 0x84 ; imul edi, edi, 0x3c6ffff ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000d5e85 : ror byte ptr [rdi], 0x84 ; mov edx, 0x8b000001 ; mov ah, 0x24 ; add byte ptr [rax], 0 ; add byte ptr [rcx + 0x63], cl ; ret 0x8b48
0x00000000000f464a : ror byte ptr [rdi], 0x84 ; movabs dword ptr [0x8024948b48000007], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000076fdc : ror byte ptr [rdi], 0x84 ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001010a9 : ror byte ptr [rdi], 0x84 ; nop ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x800008], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001309f6 : ror byte ptr [rdi], 0x84 ; out dx, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000077c2c : ror byte ptr [rdi], 0x84 ; xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000872f5 : ror byte ptr [rdi], 0x85 ; in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000a0bdc : ror byte ptr [rdi], 0x85 ; jge 0xa0bea ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000088971 : ror byte ptr [rdi], 0x85 ; lock add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000090d88 : ror byte ptr [rdi], 0x85 ; mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000000a0b6b : ror byte ptr [rdi], 0x85 ; mov esi, 0x66000000 ; pmovmskb eax, mm1 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000a5001 : ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000000b1f41 : ror byte ptr [rdi], 0x88 ; movabs eax, dword ptr [0x294cea8948000008] ; fimul dword ptr [rax + 0x39] ; ret 0xf48
0x0000000000145a10 : ror byte ptr [rdi], 0x88 ; popfq ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; sub byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x00000000000459a0 : ror byte ptr [rdi], 0x8e ; imul eax, dword ptr [rcx], 0 ; add byte ptr [rbx + 0x28ba28f8], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8539
0x00000000000fa05d : ror byte ptr [rdi], 0x94 ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x000000000012d6e7 : ror byte ptr [rdi], 0x94 ; ror byte ptr [rax - 0x7d], 0xc4 ; or bl, al ; mov eax, 1 ; ret
0x00000000000456c1 : ror byte ptr [rdi], 0x94 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000006c2b1 : ror byte ptr [rdi], 0x94 ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x00000000000ace18 : ror byte ptr [rdi], 0x94 ; ror byte ptr [rdi], 0xb6 ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; movzx eax, al ; ret
0x00000000000799d1 : ror byte ptr [rdi], 0x95 ; ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; pop rbx ; ret
0x00000000001358ee : ror byte ptr [rdi], 0x95 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; add eax, 1 ; ret
0x0000000000131c62 : ror byte ptr [rdi], 0x95 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000001329ca : ror byte ptr [rdi], 0x95 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000013d455 : ror byte ptr [rdi], 0x95 ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000013626c : ror byte ptr [rdi], 0x95 ; ror byte ptr [rax - 0x7d], 0xc4 ; xor byte ptr [rbx + 0xf], bl ; mov dh, 0xc0 ; pop rbp ; pop r12 ; ret
0x00000000001308c8 : ror byte ptr [rdi], 0x95 ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000ace1b : ror byte ptr [rdi], 0xb6 ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; movzx eax, al ; ret
0x0000000000130dac : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001308cb : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000013e12a : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000010a01c : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7f], 0xc4 ; nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000cea45 : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 9], 0xd8 ; or rax, 0x20 ; ret
0x00000000000ce915 : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 9], 0xd8 ; or rax, 0x7f ; ret
0x00000000000ceb25 : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 9], 0xd8 ; or rax, 1 ; ret
0x0000000000132cdf : ror byte ptr [rdi], 0xb6 ; shr bl, 0xab ; nop dword ptr [rax] ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001860fc : ror byte ptr [rdi], 0xf2 ; call rax
0x0000000000186100 : ror byte ptr [rdi], 1 ; jmp rax
0x000000000008270d : ror byte ptr [rdi], 1 ; test byte ptr [rsi + rax], bh ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000aaf7c : ror byte ptr [rdi], 1 ; xchg ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000119339 : ror byte ptr [rdi], 5 ; cmp rax, -0x1000 ; ja 0x11935c ; ret
0x000000000007aff5 : ror byte ptr [rdi], 5 ; cmp rax, -0x1000 ; ja 0x7b00e ; ret
0x000000000008d71b : ror byte ptr [rdi], cl ; mov dh, 0x14 ; adc dword ptr [rax + 0x437402fa], eax ; cmp dl, 3 ; je 0x8d751 ; movsx eax, dl ; ret
0x0000000000025d9c : ror byte ptr [rdi], cl ; mov dl, al ; add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x000000000008daab : ror byte ptr [rdi], cl ; test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000029555 : ror byte ptr [rdi], cl ; test byte ptr [rsi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret 0x860f
0x00000000000365ad : ror byte ptr [rdi], cl ; xchg eax, esp ; rol bl, 0x66 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000186044 : ror byte ptr [rdx + rsi*8], 1 ; inc dword ptr [rax] ; or eax, 0xd30fff2 ; jmp rax
0x0000000000193238 : ror byte ptr [rdx - 5], 0xff ; or byte ptr [rbx - 5], 0xff ; push rax ; sti ; jmp qword ptr [rax]
0x000000000018600c : ror byte ptr [rdx], 0xf2 ; jmp rax
0x0000000000104aca : ror byte ptr [rdx], cl ; add byte ptr [rax], al ; mov rbp, rdi ; xor edx, edx ; xor esi, esi ; call rbx
0x0000000000186088 : ror byte ptr [rip + 0xdd0fff2], 0xf2 ; jmp rax
0x000000000018608c : ror byte ptr [rip + 0xde0fff2], 1 ; push rax ; or eax, 0xe00fff2 ; jmp qword ptr [rax]
0x00000000001860b4 : ror byte ptr [rsi], 0xf2 ; jmp rax
0x000000000000def0 : ror dh, 0x10 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rcx]
0x00000000000579a1 : ror dword ptr [rax + 0x39], 1 ; enter -0x79f1, 0x30 ; adc eax, 0x894c0000 ; ret 0x894c
0x000000000007d376 : ror dword ptr [rax + 0x39], 1 ; enter 0x1476, 0x48 ; mov eax, dword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000013adda : ror dword ptr [rax + 0x3b], 1 ; sbb byte ptr [rax + rdx + 0x48], dh ; add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004815e : ror dword ptr [rax + 0x63], 0xc ; mov cs, word ptr [rax + 1] ; int1 ; cmp r9d, 0x2f ; jmp rcx
0x00000000000ce311 : ror dword ptr [rax + 0x63], cl ; ret
0x000000000014d4c5 : ror dword ptr [rax + 1], -8 ; ret
0x000000000014d389 : ror dword ptr [rax + 1], -8 ; sub rax, r8 ; ret
0x000000000014d5de : ror dword ptr [rax + 1], -8 ; sub rax, rdx ; ret
0x00000000000b7e02 : ror dword ptr [rax + 1], 1 ; ret 0x8b41
0x00000000001106d9 : ror dword ptr [rax + rdi*8], cl ; dec dword ptr [rax + 1] ; imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003628a : ror dword ptr [rax - 0x2d], -0x1e ; shr rax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x00000000000362aa : ror dword ptr [rax - 0x2d], 1 ; loopne 0x36308 ; shr edx, 6 ; not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000b0b40 : ror dword ptr [rax - 0x2d], 1 ; out 0x89, al ; ror dword ptr [rax - 0x77], 1 ; ret 0xd348
0x000000000006cc8e : ror dword ptr [rax - 0x73], 0x4a ; add cl, byte ptr [rcx + 0x440f48c3] ; rol dword ptr [rax], 1 ; ret
0x00000000000a0516 : ror dword ptr [rax - 0x73], 0x51 ; add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x00000000000a0595 : ror dword ptr [rax - 0x73], 0x51 ; add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00000000000e3986 : ror dword ptr [rax - 0x75], 4 ; ret
0x00000000000e22b3 : ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x0000000000114eaa : ror dword ptr [rax - 0x75], cl ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rbx + 0x48], 0x8b ; jp 0x114f17 ; mov rsi, rdx ; call rax
0x00000000000dba4c : ror dword ptr [rax - 0x75], cl ; cmp cl, byte ptr [rax - 0x7d] ; ret
0x00000000000909e6 : ror dword ptr [rax - 0x77], 1 ; adc eax, 0x332f1a ; add rsp, 0x100 ; ret
0x000000000010732d : ror dword ptr [rax - 0x77], 1 ; fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x0000000000053650 : ror dword ptr [rax - 0x77], 1 ; ret 0x27e9
0x0000000000089aed : ror dword ptr [rax - 0x77], 1 ; ret 0x8548
0x00000000000b0a8b : ror dword ptr [rax - 0x77], 1 ; ret 0xd348
0x000000000007306d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x73067 ; ret
0x000000000007d02d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x7d027 ; ret
0x000000000008db02 : ror dword ptr [rax - 0x7d], -0x20 ; ror byte ptr [rax - 0x2d], 0xfa ; test rdx, rdx ; je 0x8db30 ; bsf rax, rdx ; ret
0x000000000008db02 : ror dword ptr [rax - 0x7d], -0x20 ; ror byte ptr [rax - 0x2d], 0xfa ; test rdx, rdx ; je 0x8db31 ; bsf rax, rdx ; ret
0x000000000013b576 : ror dword ptr [rax - 0x7d], -0x3c ; or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000004a227 : ror dword ptr [rax - 0x7d], -0x40 ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000013acd2 : ror dword ptr [rax - 0x7d], -0x40 ; or byte ptr [rbx + 0xffff878], al ; test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x000000000003e12d : ror dword ptr [rax - 0x7d], 1 ; ret
0x000000000003a3f8 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000000c1be5 : ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x000000000007f2b3 : ror dword ptr [rax], 0x74 ; adc dword ptr [rcx], esi ; rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x00000000000ec0b3 : ror dword ptr [rbp + 0x2d], 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000012672d : ror dword ptr [rcx + 0x3e8c1c8], -0x77 ; sal dword ptr [rcx], -0x40 ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x000000000012fffd : ror dword ptr [rcx + 0x63], 0x14 ; mov byte ptr [rcx + rax - 0x3e], cl ; jmp rdx
0x00000000000494f8 : ror dword ptr [rcx + rdx - 0x3e], 0x4e ; mov dword ptr [rdi + rbx*8 + 8], ecx ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000117088 : ror dword ptr [rcx - 0x75], 1 ; adc dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp - 0x11], cl ; ret
0x00000000000a0b75 : ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000016c2b8 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016c9c4 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016d8c0 : ror dword ptr [rdi], -0x7b ; cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016ca54 : ror dword ptr [rdi], -0x7b ; je 0x16ca64 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016c54b : ror dword ptr [rdi], -0x7b ; jno 0x16c560 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016c613 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016c290 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000122d4b : ror dword ptr [rdx + 2], 1 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000da732 : ror dword ptr [rdx], cl ; add byte ptr [rax + 0xf], al ; mov dh, 0xed ; movsxd rax, dword ptr [rsi + rbp*4] ; add rax, rsi ; jmp rax
0x0000000000020741 : ror eax, 0x11 ; xor rax, qword ptr fs:[0x30] ; add rsp, 0x28 ; jmp rax
0x000000000008fb60 : ror eax, 0x11 ; xor rax, qword ptr fs:[0x30] ; add rsp, 8 ; jmp rax
0x00000000000645a1 : ror eax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x000000000003561b : ror eax, 0x11 ; xor rax, qword ptr fs:[0x30] ; jmp rax
0x00000000000f76aa : ror eax, 0x11 ; xor rax, qword ptr fs:[0x30] ; mov edi, 1 ; call rax
0x0000000000047bbd : ror eax, 0x11 ; xor rax, qword ptr fs:[0x30] ; mov edi, dword ptr [rsp + 0x3c] ; call rax
0x000000000003a86c : ror eax, 0x11 ; xor rax, qword ptr fs:[0x30] ; mov qword ptr fs:[rbp], rdx ; call rax
0x000000000002f5f1 : ror eax, 0x11 ; xor rax, qword ptr fs:[0x30] ; mov rdi, r13 ; call rax
0x00000000001174f3 : ror eax, 0x11 ; xor rax, qword ptr fs:[0x30] ; test rax, rax ; je 0x117541 ; call rax
0x000000000004dae1 : ror eax, 0x11 ; xor rax, qword ptr fs:[0x30] ; xor esi, esi ; call rax
0x000000000012b797 : ror edi, 0x11 ; xor rdi, qword ptr fs:[0x30] ; call rax
0x0000000000020740 : ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; add rsp, 0x28 ; jmp rax
0x000000000008fb5f : ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; add rsp, 8 ; jmp rax
0x00000000000645a0 : ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x000000000003561a : ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000047bbc : ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; mov edi, dword ptr [rsp + 0x3c] ; call rax
0x000000000002f5f0 : ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; mov rdi, r13 ; call rax
0x000000000004dae0 : ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; xor esi, esi ; call rax
0x000000000012b796 : ror rdi, 0x11 ; xor rdi, qword ptr fs:[0x30] ; call rax
0x00000000001950a5 : sahf ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x1950b1
0x00000000000cfb04 : sahf ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x0000000000159ba7 : sahf ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001074d6 : sahf ; cdq ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000193ee5 : sahf ; cld ; call qword ptr [rax + 0x20fffc9d]
0x00000000001940dd : sahf ; cld ; call qword ptr [rax]
0x0000000000193ee1 : sahf ; cld ; inc dword ptr [rax] ; sahf ; cld ; call qword ptr [rax + 0x20fffc9d]
0x0000000000193edd : sahf ; cld ; push qword ptr [rax - 0x62] ; cld ; inc dword ptr [rax] ; sahf ; cld ; call qword ptr [rax + 0x20fffc9d]
0x00000000001939b0 : sahf ; jbe 0x1939b2 ; jmp qword ptr [rax]
0x00000000000639d4 : sahf ; mov al, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0xbe08
0x000000000014e30e : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000002463 : sahf ; sbb byte ptr [rax], cl ; ret 0x5576
0x000000000010a6d6 : sahf ; sub eax, dword ptr [eax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000972ee : sahf ; xchg al, bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000125dc9 : sal bl, 0xc3 ; nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x00000000000365b9 : sal bl, 0xc3 ; nop dword ptr [rax] ; mov eax, ecx ; ret
0x0000000000045d11 : sal bl, 0xc3 ; nop dword ptr [rax] ; ret
0x000000000004de3e : sal byte ptr [rax + 0x4d], 0x63 ; ret
0x00000000001462b5 : sal byte ptr [rax + rbx - 0x80], 0x7c ; and al, 0xf ; add byte ptr [rbp + 0x29], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x00000000001266eb : sal byte ptr [rax + rcx - 0x58], 2 ; mov byte ptr [rdx + 2], 0 ; jne 0x12674c ; mov eax, r8d ; ret
0x00000000000206fd : sal byte ptr [rax + rdx + 0x48], 0xc1 ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x000000000005646f : sal byte ptr [rax], 0xc0 ; add eax, 0x107 ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000132bbd : sal byte ptr [rbp + 0x10], 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000006bbdd : sal byte ptr [rbp + 0x10], 0x48 ; test ebp, ebp ; je 0x6bc11 ; add rsp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000f7134 : sal byte ptr [rbp + 0x11], 0xb8 ; or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000100f3a : sal byte ptr [rbp + 0x12], 0xeb ; and dl, byte ptr [rax + 0xf23fa80] ; xchg eax, ebp ; ret 0xc084
0x000000000013592a : sal byte ptr [rbp + 0x13], 0xc7 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000012f488 : sal byte ptr [rbp + 0x15], 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008fad7 : sal byte ptr [rbp + 0x16], 0x48 ; lea eax, dword ptr [rip + 0x333dbf] ; mov qword ptr [rip + 0x333da0], rax ; ret
0x0000000000098bd2 : sal byte ptr [rbp + 0x3a], 0x41 ; movzx eax, byte ptr [rcx] ; test al, al ; jne 0x98c4e ; mov rax, rdi ; ret
0x0000000000097f52 : sal byte ptr [rbp + 0x4b], 0x66 ; pmovmskb eax, mm1 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000013eab7 : sal byte ptr [rbp + 0x4e], 0x39 ; ja 0x13eaec ; jbe 0x13eadf ; add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000013dd91 : sal byte ptr [rbp + 0x6c], 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000a0c19 : sal byte ptr [rbp + 0x74], 0x31 ; rol bl, 0x90 ; bsr eax, eax ; add rax, rdi ; ret
0x000000000012e0d2 : sal byte ptr [rbp + 0xb], 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000116757 : sal byte ptr [rbp + 6], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000204ac : sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x00000000001304f1 : sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x000000000013ab89 : sal byte ptr [rbp + rax*4 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x0000000000114eb0 : sal byte ptr [rbp + rbx + 0x48], 0x8b ; jp 0x114f11 ; mov rsi, rdx ; call rax
0x000000000014d4c0 : sal byte ptr [rbp + rbx*8 + 0x48], cl ; movsxd rax, ecx ; add rax, rdi ; ret
0x00000000000abfd8 : sal byte ptr [rbp + rdx - 0x78], cl ; rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x0000000000098d25 : sal byte ptr [rbp - 0x10], cl ; add rax, 1 ; test dl, dl ; mov edx, 0 ; cmove rax, rdx ; ret
0x00000000000aa6c0 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000000d263b : sal byte ptr [rbp - 0x18], cl ; nop ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d273d : sal byte ptr [rbp - 0x19], cl ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007f27c : sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x000000000013abdc : sal byte ptr [rbx + 0x39480028], 0xd0 ; je 0x13ac01 ; sub rax, -0x80 ; add rsp, 8 ; ret
0x000000000012f35c : sal byte ptr [rbx + 0x48], 0x8b ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x00000000001007a2 : sal byte ptr [rbx + rax + 0x48], 0x89 ; adc bl, dh ; ret
0x00000000001177cf : sal byte ptr [rbx + rsi + 0x48], 0x8d ; jne 0x1177c4 ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x000000000014d384 : sal byte ptr [rcx + rbx*8 + 0x48], cl ; movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x000000000012262e : sal byte ptr [rcx + rcx + 0x48], 0x8d ; cmp eax, 0x2a3068 ; call rax
0x0000000000134af1 : sal byte ptr [rcx + rcx + 0x48], 0x8d ; mov ebx, 0xc8 ; call rax
0x000000000002145d : sal byte ptr [rcx], 0xc9 ; movzx eax, al ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x0000000000021462 : sal byte ptr [rcx], 0xd2 ; add eax, 1 ; push rax ; call rbx
0x0000000000193944 : sal byte ptr [rcx], 0xfc ; call qword ptr [rax]
0x0000000000116746 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x0000000000029a3d : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x73], 0x3d ; jmp 0xffffffff8902b09b
0x00000000000f8107 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xdf ; call rax
0x000000000006efa6 : sal byte ptr [rdi + rcx + 0x48], 0x8b ; mov edi, 0xe0 ; jmp rax
0x00000000001932d8 : sal byte ptr [rdi - 5], 1 ; push qword ptr [rax + 0x79] ; sti ; call qword ptr [rax]
0x000000000002d9ce : sal byte ptr [rdx + rcx + 0x23], cl ; ja 0x2d9f2 ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x00000000000f8103 : sal byte ptr [rdx + rcx*2 + 0x31], 0xd2 ; xor esi, esi ; mov rdi, rbx ; call rax
0x00000000000a0cfb : sal byte ptr [rdx + rdx*8 + 0xf], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000007da45 : sal byte ptr [rsi + 0x10], 0x48 ; mov eax, dword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000070ba9 : sal byte ptr [rsi + 0x5c], 0x48 ; mov eax, dword ptr [rbp + 0x48] ; add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000140917 : sal byte ptr [rsi + rax + 0x31], 0xc0 ; ret
0x00000000001356ba : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x1356d8 ; call rax
0x000000000013b87a : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x13b898 ; call rax
0x000000000013bf93 : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x13bfb1 ; call rax
0x000000000013788e : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x137904 ; call rax
0x00000000001382ee : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x138354 ; call rax
0x0000000000097e07 : sal byte ptr [rsi + rdx + 0xf], 0xbc ; ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x000000000016b637 : sal byte ptr [rsi + rdx - 0x58], 1 ; jne 0x16b680 ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000010076d : sal byte ptr [rsp + rax + 0x48], 0x89 ; js 0x10078a ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000100799 : sal byte ptr [rsp + rax + 0x48], cl ; mov dword ptr [rdx + 8], eax ; test rax, rax ; je 0x1007b8 ; mov qword ptr [rax], rdx ; ret
0x00000000000f811e : sal byte ptr [rsp + rax - 0x75], 1 ; and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000107731 : sal byte ptr [rsp + rcx + 0x48], cl ; cmp edi, edx ; jne 0x107734 ; mov rax, qword ptr [rax + 8] ; ret
0x000000000010c71e : sal byte ptr [rsp + rcx - 0x77], cl ; shl dword ptr [rbx], 0x4e ; adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x00000000000d8b73 : sal byte ptr [rsp + rdi + 0x40], 0xf6 ; mov dword ptr [rdi + rcx], 0xe084 ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x000000000019398c : sal byte ptr [rsp + rdi*8], 1 ; jmp qword ptr [rax]
0x000000000002da19 : sal byte ptr [rsp + rdx*8 + 0x23], cl ; ja 0x2da3c ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000016db04 : sal dword ptr [rbp + 0xf], 0x48 ; shr ecx, 0x20 ; shr rax, 0x20 ; cmp ecx, eax ; jne 0x16db27 ; xor eax, eax ; ret
0x000000000016db10 : sal dword ptr [rbp + 3], 0x31 ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jl 0x16db2f ; neg eax ; ret
0x0000000000035ab3 : sal dword ptr [rbx - 0x2708ffc8], 0x64 ; mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000126734 : sal dword ptr [rcx], -0x40 ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x00000000001096b3 : sal dword ptr [rdi + 0x2b], 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000085a2b : sal dword ptr [rdx - 0x26], cl ; mov byte ptr [rsi + rbx], r9b ; add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000000858bb : sal dword ptr [rdx - 0x26], cl ; mov byte ptr [rsi + rbx], r9b ; mov rax, rsi ; pop rbx ; ret
0x0000000000147063 : sal ebp, 0x27 ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; jmp rax
0x00000000001106ff : sal edi, cl ; dec dword ptr [rax - 0x77] ; ret
0x00000000001a7025 : salc ; add byte ptr [rax], al ; clc ; xchg eax, esi ; cld ; jmp qword ptr [rbx]
0x00000000001a6ff5 : salc ; add byte ptr [rax], al ; mov byte ptr [rbp - 0xf], al ; call qword ptr [rsi]
0x000000000012fd51 : salc ; add byte ptr [rax], al ; test eax, eax ; jne 0x12fd77 ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000016ed36 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000019825d : salc ; add dword ptr [rax], eax ; in al, 0x6a ; clc ; jmp rsp
0x00000000001b6fdd : salc ; add dword ptr [rax], eax ; mov al, 0x2c ; clc ; jmp rdi
0x0000000000155f7d : salc ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000114eb9 : salc ; call rax
0x00000000000f820d : salc ; mov eax, 4 ; syscall ; cmp rax, -0x1000 ; ja 0xf8231 ; ret
0x00000000000f82ad : salc ; mov eax, 6 ; syscall ; cmp rax, -0x1000 ; ja 0xf82d1 ; ret
0x0000000000126aa5 : salc ; mov edx, 0 ; cmovae rax, rdx ; ret
0x0000000000076fd6 : salc ; mov edx, edi ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000011473c : salc ; mov rax, qword ptr [r12 + 0x38] ; jmp 0x11470e
0x00000000000c3902 : salc ; movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x00000000000c5a69 : salc ; movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x00000000000c8f7c : salc ; nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; ret
0x00000000000fa78a : salc ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000000f825f : salc ; syscall ; cmp rax, -0x1000 ; ja 0xf827c ; ret
0x00000000001307f1 : sar bh, 0xe1 ; nop dword ptr [rax] ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000008dcd0 : sar bh, 0xff ; push qword ptr [rbp + rcx + 0x48] ; sar edx, cl ; test rdx, rdx ; je 0x8dd11 ; bsf rax, rdx ; ret
0x00000000000f7447 : sar bh, 1 ; add dword ptr [rax], eax ; add byte ptr [rax - 9], cl ; fmul dword ptr [rax + 0x21] ; ret
0x00000000001133bc : sar bh, 1 ; dec dword ptr [rax - 0x73] ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000695ec : sar bh, 1 ; dec dword ptr [rax - 0x7d] ; ret 0xbe08
0x000000000006ac12 : sar bh, cl ; dec dword ptr [rax - 0x7d] ; ret 0xbe08
0x000000000005d7ca : sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret
0x000000000005dc9d : sar bl, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x348
0x0000000000123830 : sar bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000fe9c2 : sar byte ptr [rax + 0x100], 0x48 ; cmovns eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000000f85a1 : sar byte ptr [rax + 0x10c], cl ; syscall ; cmp rax, -0x1000 ; ja 0xf85c9 ; ret
0x00000000000f71b4 : sar byte ptr [rax + 0x11], 0x48 ; cmp eax, ebx ; setg al ; pop rbx ; ret
0x00000000000cd23b : sar byte ptr [rax + 0x12], 0x64 ; mov dword ptr [rbx], ebp ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000f7f37 : sar byte ptr [rax + 0x1c], cl ; syscall ; neg eax ; ret
0x0000000000143d72 : sar byte ptr [rax + 0x2b], 0x48 ; mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000109e2f : sar byte ptr [rax + 0x2e], cl ; syscall ; cmp rax, -0x1000 ; ja 0x109e50 ; ret
0x0000000000109ccf : sar byte ptr [rax + 0x2f], cl ; syscall ; cmp rax, -0x1000 ; ja 0x109cf0 ; ret
0x000000000014391b : sar byte ptr [rax + 0x32], 0x48 ; mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000bbae0 : sar byte ptr [rax + 0x35], 0x83 ; clc ; sbb dword ptr [rdi + 0x18], edi ; mov rax, rbx ; pop rbx ; ret
0x0000000000079f07 : sar byte ptr [rax + 0x36], 0x48 ; mov dword ptr [rbx + 0x90], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000002b02a : sar byte ptr [rax + 0x39], cl ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x00000000000cd052 : sar byte ptr [rax + 0x3d], cl ; syscall ; cmp rax, -0x1000 ; ja 0xcd078 ; ret
0x00000000001246d3 : sar byte ptr [rax + 0x5e], 0x89 ; ret
0x0000000000124301 : sar byte ptr [rax + 0x64], 0x89 ; ret
0x00000000000ce4df : sar byte ptr [rax + 0x75], cl ; syscall ; cmp rax, -0x1000 ; ja 0xce500 ; ret
0x00000000000ce55f : sar byte ptr [rax + 0x77], cl ; syscall ; cmp rax, -0x1000 ; ja 0xce580 ; ret
0x00000000000fd983 : sar byte ptr [rax + 0xa], 0x8b ; or byte ptr [rip + 0x100f], r12b ; ret
0x0000000000143892 : sar byte ptr [rax + 0xb], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000050e53 : sar byte ptr [rax + 0xb], cl ; test dl, dl ; je 0x50e79 ; movsx ecx, byte ptr [rsi] ; cmp edi, ecx ; ja 0x50e51 ; mov eax, r8d ; ret
0x00000000000fdf38 : sar byte ptr [rax + 0xd], cl ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013a62e : sar byte ptr [rax + 0xf], 0x48 ; add esp, 0x18 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000fdd96 : sar byte ptr [rax + 0xf], 0x8b ; and al, 0xc ; add rsp, 0x18 ; ret
0x0000000000112a6e : sar byte ptr [rax + 1], 0xe9 ; movabs al, byte ptr [0xffffffffb8fffffe] ; ret
0x000000000002a60b : sar byte ptr [rax + 1], 0xf ; ret 0x4389
0x0000000000088087 : sar byte ptr [rax + 6], 0xf3 ; ret
0x000000000007737c : sar byte ptr [rax + 9], 0xf3 ; ret
0x00000000000271b3 : sar byte ptr [rax + rax*4], 0xf ; xchg eax, esp ; ret 0x8348
0x00000000000fe53a : sar byte ptr [rax - 0x39], 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001040e2 : sar byte ptr [rax - 0x74b6000f], cl ; call rbx
0x0000000000127ccf : sar byte ptr [rax - 1], 0xf ; and al, 0xc ; add rsp, 0x18 ; ret
0x00000000001939dc : sar byte ptr [rax - 4], 0xff ; push rax ; js 0x1939e6 ; jmp rax
0x0000000000034e1c : sar byte ptr [rax], 0 ; mov dword ptr fs:[rax], 0x22 ; add rsp, 0x28 ; ret
0x00000000000ff233 : sar byte ptr [rax], 0x48 ; cmove eax, ebx ; pop rbx ; ret
0x0000000000193998 : sar byte ptr [rax], 0xfc ; call qword ptr [rax]
0x00000000000ff203 : sar byte ptr [rcx + 3], 0xc6 ; add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x00000000001877b4 : sar byte ptr [rdi - 0xc], 1 ; call rax
0x000000000008be05 : sar byte ptr [rdx], 0x48 ; lea eax, dword ptr [rdi + rax] ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x0000000000098d2d : sar byte ptr [rdx], cl ; cmove rax, rdx ; ret
0x00000000001821bf : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000193bb4 : sar byte ptr [rsp + rdi*8 - 1], 0x50 ; jl 0x193bbe ; jmp rax
0x0000000000198971 : sar cl, 0xff ; jl 0x198995 ; add al, byte ptr [rax] ; xchg eax, esp ; sar cl, 0xff ; xchg eax, esp ; lar eax, word ptr [rax] ; ret
0x0000000000198970 : sar cl, 0xff ; jl 0x198996 ; add al, byte ptr [rax] ; xchg eax, esp ; sar cl, 0xff ; xchg eax, esp ; lar eax, word ptr [rax] ; ret
0x0000000000198979 : sar cl, 0xff ; xchg eax, esp ; lar eax, word ptr [rax] ; ret
0x000000000019f1c0 : sar dh, 1 ; in al, dx ; call qword ptr [rax]
0x000000000018a0a5 : sar dl, cl ; jmp rax
0x00000000000fd10a : sar dword ptr [rax + 0x118], 1 ; syscall ; cmp rax, -0x1000 ; ja 0xfd131 ; ret
0x0000000000108f28 : sar dword ptr [rax + 0x119], 1 ; syscall ; cmp rax, -0x1000 ; ja 0x108f50 ; ret
0x000000000010a25f : sar dword ptr [rax + 0x120], 1 ; syscall ; cmp rax, -0x1000 ; ja 0x10a280 ; ret
0x000000000010a301 : sar dword ptr [rax + 0x12b], 1 ; syscall ; cmp rax, -0x1000 ; ja 0x10a328 ; ret
0x000000000010a3b1 : sar dword ptr [rax + 0x133], 1 ; syscall ; cmp rax, -0x1000 ; ja 0x10a3d8 ; ret
0x0000000000109d75 : sar dword ptr [rax + 0x2c], 1 ; syscall ; cmp rax, -0x1000 ; ja 0x109da0 ; ret
0x0000000000109bb5 : sar dword ptr [rax + 0x2d], 1 ; syscall ; cmp rax, -0x1000 ; ja 0x109be0 ; ret
0x00000000000cd143 : sar dword ptr [rax + 0xf7], 1 ; syscall ; cmp rax, -0x1000 ; ja 0xcd168 ; ret
0x000000000016dbec : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jno 0x16dbfd ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000016dbf3 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x16dbfe ; ret
0x00000000000fff8f : sar dword ptr [rax], 0xf ; xchg eax, esp ; ret 0xd108
0x00000000000aad32 : sar dword ptr [rax], 1 ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000001091a3 : sar dword ptr [rbx + rbp], 1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000003ab1b : sar dword ptr [rbx], 0x38 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000001094a3 : sar dword ptr [rcx + 0x2b], 1 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001093b3 : sar dword ptr [rdx + 0x2b], 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000016b6d9 : sar dword ptr [rdx + rax], cl ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000010a4a5 : sar dword ptr [rdx], 1 ; cmovb rax, rdx ; ret
0x00000000000f8fb3 : sar dword ptr [rsi + 0x2c], 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000003b05 : sar eax, 1 ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000076efc : sar eax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000097e04 : sar eax, cl ; test eax, eax ; je 0x97e2f ; bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x0000000000116a33 : sar ebx, 0x2a ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; jmp rax
0x00000000001933a9 : sar ebx, 1 ; jmp rax
0x0000000000074c71 : sar ebx, 2 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000100747 : sar edi, 0x1f ; and edi, 0xfffffff0 ; add edi, 0x26 ; mov dword ptr fs:[rax], edi ; mov eax, 0xffffffff ; ret
0x000000000007675e : sar edi, 1 ; dec dword ptr [rax + 0x29] ; ret
0x000000000006a07a : sar edi, cl ; dec dword ptr [rax - 0x7d] ; ret 0xbf08
0x000000000003a8c7 : sar edx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x00000000000bbc6e : sar edx, 7 ; sub rdx, rsi ; add rdx, rcx ; mov rax, rdx ; add rsp, 0x18 ; ret
0x000000000018a095 : sar edx, cl ; inc dword ptr [rax + 0x50fffad2] ; sar edx, cl ; jmp rax
0x000000000018a0a1 : sar edx, cl ; inc dword ptr [rax - 0x1f00052e] ; sar edx, cl ; jmp rax
0x000000000018a081 : sar edx, cl ; jmp rax
0x000000000008db08 : sar edx, cl ; test rdx, rdx ; je 0x8db2a ; bsf rax, rdx ; ret
0x000000000008db08 : sar edx, cl ; test rdx, rdx ; je 0x8db2b ; bsf rax, rdx ; ret
0x000000000008daa7 : sar edx, cl ; test rdx, rdx ; je 0x8db3e ; bsf rax, rdx ; ret
0x000000000008daa7 : sar edx, cl ; test rdx, rdx ; je 0x8db3f ; bsf rax, rdx ; ret
0x000000000008dcd7 : sar edx, cl ; test rdx, rdx ; je 0x8dd0a ; bsf rax, rdx ; ret
0x000000000008dcd7 : sar edx, cl ; test rdx, rdx ; je 0x8dd0b ; bsf rax, rdx ; ret
0x000000000008dc67 : sar edx, cl ; test rdx, rdx ; je 0x8dd1e ; bsf rax, rdx ; ret
0x000000000008dc67 : sar edx, cl ; test rdx, rdx ; je 0x8dd1f ; bsf rax, rdx ; ret
0x0000000000034a8c : sar rax, 0x3f ; not eax ; and eax, ecx ; ret
0x0000000000076efb : sar rax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000074bc8 : sar rax, 2 ; ret
0x000000000011aecc : sar rax, 6 ; ret
0x0000000000090f90 : sar rax, cl ; movzx eax, al ; sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000074c70 : sar rbx, 2 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003a8c6 : sar rdx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x00000000000bbc6d : sar rdx, 7 ; sub rdx, rsi ; add rdx, rcx ; mov rax, rdx ; add rsp, 0x18 ; ret
0x000000000008db07 : sar rdx, cl ; test rdx, rdx ; je 0x8db2b ; bsf rax, rdx ; ret
0x000000000008db07 : sar rdx, cl ; test rdx, rdx ; je 0x8db2c ; bsf rax, rdx ; ret
0x000000000008daa6 : sar rdx, cl ; test rdx, rdx ; je 0x8db3f ; bsf rax, rdx ; ret
0x000000000008daa6 : sar rdx, cl ; test rdx, rdx ; je 0x8db40 ; bsf rax, rdx ; ret
0x000000000008dcd6 : sar rdx, cl ; test rdx, rdx ; je 0x8dd0b ; bsf rax, rdx ; ret
0x000000000008dcd6 : sar rdx, cl ; test rdx, rdx ; je 0x8dd0c ; bsf rax, rdx ; ret
0x000000000008dce6 : sar rdx, cl ; test rdx, rdx ; je 0x8dd0d ; bsf rax, rdx ; ret
0x000000000008dc66 : sar rdx, cl ; test rdx, rdx ; je 0x8dd1f ; bsf rax, rdx ; ret
0x000000000008dc66 : sar rdx, cl ; test rdx, rdx ; je 0x8dd20 ; bsf rax, rdx ; ret
0x00000000001a7168 : sbb al, 0 ; add byte ptr [rax], al ; adc al, 0xd8 ; add byte ptr [rax], al ; xor byte ptr [rbx - 0xf], cl ; jmp qword ptr [rcx]
0x000000000007921a : sbb al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001a7250 : sbb al, 0 ; add byte ptr [rax], al ; cld ; fadd dword ptr [rax] ; add al, ch ; push rsp ; int1 ; jmp qword ptr [rax]
0x00000000001aa948 : sbb al, 0 ; add byte ptr [rax], al ; hlt ; sgdt ptr [rax] ; adc byte ptr [rsi], dl ; hlt ; call qword ptr [rbx]
0x0000000000102d31 : sbb al, 0 ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x102d4e ; ret
0x00000000000f7f39 : sbb al, 0 ; add byte ptr [rax], al ; syscall ; neg eax ; ret
0x00000000001aa988 : sbb al, 0 ; add byte ptr [rax], al ; xor al, 0x10 ; add dword ptr [rax], eax ; adc byte ptr [rsi], dl ; hlt ; call qword ptr [rsi]
0x00000000000795da : sbb al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000037612 : sbb al, 0x15 ; add byte ptr [rax], al ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, qword ptr [rsp + 0x18] ; call r15
0x00000000001abb74 : sbb al, 0x22 ; add dword ptr [rax], eax ; js 0x1abb56 ; hlt ; jmp qword ptr [rcx]
0x000000000017209d : sbb al, 0x24 ; mov rdx, qword ptr [rax + rbp*8] ; test rdx, rdx ; je 0x1720b5 ; call rdx
0x00000000001abe74 : sbb al, 0x25 ; add dword ptr [rax], eax ; sbb bl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000000ff1a4 : sbb al, 0x2c ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001acb74 : sbb al, 0x32 ; add dword ptr [rax], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001ad674 : sbb al, 0x3d ; add dword ptr [rax], eax ; sub byte ptr [rcx - 0xb], bl ; call rdx
0x00000000001112a8 : sbb al, 0x45 ; cmp byte ptr [rax], dl ; je 0x1112d4 ; mov rdx, r8 ; jmp 0x1112c4
0x000000000019448c : sbb al, 0x57 ; add byte ptr [rax], al ; push rsp ; ret
0x0000000000196b7c : sbb al, 0x59 ; add dword ptr [rax], eax ; adc al, 0x8c ; hlt ; inc dword ptr [rcx + rbx*2 - 0x6fbbffff] ; hlt ; call rsp
0x00000000001261a6 : sbb al, 0x74 ; sbb dword ptr [rbx + 0x7ba14fe], eax ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xfc3
0x0000000000122220 : sbb al, 0x9b ; add byte ptr [rax], al ; test rax, rax ; je 0x12223a ; mov rdi, rbx ; call rax
0x00000000000aff3c : sbb al, 0x9d ; xor al, byte ptr [rax + rax] ; add cl, ch ; ret 0xfff3
0x00000000000d69e3 : sbb al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001a5974 : sbb al, 0xc0 ; add byte ptr [rax], al ; clc ; jp 0x1a597c ; jmp qword ptr [rdi]
0x00000000000ecb40 : sbb al, 0xeb ; hlt ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c8263 : sbb al, 0xee ; test eax, eax ; jne 0xc829e ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000019867c : sbb al, 0xf4 ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; xor al, 0xf9 ; push qword ptr [rsp + rsi*8 + 1] ; add byte ptr [rsi + rsi], ah ; stc ; call rsp
0x0000000000102cda : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x102d27 ; ret
0x00000000000431e7 : sbb al, byte ptr [rax] ; add byte ptr [rcx - 0x73], cl ; add byte ptr [rbx + 0x49000013], 0x89 ; ret
0x00000000001ab3e5 : sbb al, byte ptr [rcx] ; add byte ptr [rax - 0x49], ch ; stc ; call qword ptr [rax]
0x00000000001ab425 : sbb al, byte ptr [rcx] ; add byte ptr [rax], bh ; mov bh, 0xf9 ; call qword ptr [rax]
0x00000000001034c8 : sbb al, ch ; and al, byte ptr [rbx] ; add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x2c0d4b] ; add rsp, 0x18 ; ret
0x0000000000118497 : sbb al, ch ; and eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x00000000000566d1 : sbb al, ch ; cdq ; scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add rsp, 0xd8 ; ret
0x00000000000567f1 : sbb al, ch ; fstp dword ptr [rax] ; add al, byte ptr [rax] ; add rsp, 0xd8 ; ret
0x000000000006b8b1 : sbb al, ch ; imul ebx, dword ptr [rbp], 0xc4814800 ; fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001185e2 : sbb al, ch ; or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x000000000006caf1 : sbb al, ch ; or dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x0000000000056761 : sbb al, ch ; or dword ptr [rax], ebx ; add al, byte ptr [rax] ; add rsp, 0xd8 ; ret
0x00000000001936d1 : sbb bh, ah ; jmp qword ptr [rax]
0x00000000001936f1 : sbb bh, ah ; jmp rax
0x0000000000116b12 : sbb bh, ah ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x116b2a ; xor eax, eax ; ret
0x0000000000140962 : sbb bh, al ; add eax, 0x286003 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000116812 : sbb bh, bh ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x11682a ; xor eax, eax ; ret
0x00000000000d699f : sbb bh, byte ptr [rax + 2] ; ret
0x000000000008a9e9 : sbb bl, al ; nop dword ptr [rax + rax] ; mov eax, 0xffffffff ; ret
0x000000000013e6c8 : sbb bl, al ; nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000a872a : sbb bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a793a : sbb bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a878a : sbb bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a78fb : sbb bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a874b : sbb bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a8729 : sbb bl, r14b ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a7939 : sbb bl, r14b ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a8789 : sbb bl, r14b ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000007d39f : sbb byte ptr [r11 + 0x480c2474], cl ; mov edi, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000079653 : sbb byte ptr [r15 + 0x11], r14b ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000795a6 : sbb byte ptr [r15 + 0xe], r14b ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001356b2 : sbb byte ptr [r8 - 0x75], r9b ; cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x1356e0 ; call rax
0x000000000013b872 : sbb byte ptr [r8 - 0x75], r9b ; cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x13b8a0 ; call rax
0x000000000013bf8b : sbb byte ptr [r8 - 0x75], r9b ; cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x13bfb9 ; call rax
0x0000000000110801 : sbb byte ptr [r8 - 0x77], cl ; imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011023f : sbb byte ptr [r8 - 0x77], r9b ; fimul dword ptr [rax - 0x7d] ; ret
0x000000000007eeea : sbb byte ptr [r8 - 0x77], r9b ; or byte ptr [r9], r14b ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000007d250 : sbb byte ptr [r8 - 0x77], r9b ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000204a8 : sbb byte ptr [r8 - 0x7b], r9b ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x0000000000073469 : sbb byte ptr [r9 + rcx*4 - 0x1a], r8b ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000170db7 : sbb byte ptr [r9 - 0x75], r9b ; push rbp ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000033ef0 : sbb byte ptr [rax + 0x21], cl ; enter 0x3148, -0x30 ; movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x33ee6 ; ret
0x00000000000c0829 : sbb byte ptr [rax + 0x278244c], al ; jmp 0xc05b4
0x000000000007aafa : sbb byte ptr [rax + 0x29], cl ; ret 0x3948
0x0000000000081953 : sbb byte ptr [rax + 0x39], cl ; ret
0x0000000000146200 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x000000000007fc87 : sbb byte ptr [rax + 0x5bd88948], dl ; pop rbp ; pop r12 ; ret
0x00000000000d6dfb : sbb byte ptr [rax + 0xc], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001462b7 : sbb byte ptr [rax + 0xf247c], al ; jne 0x1462f6 ; xor eax, eax ; add rsp, 0x48 ; ret
0x000000000014703b : sbb byte ptr [rax + 1], bh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000bcc0d : sbb byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000769f3 : sbb byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013e702 : sbb byte ptr [rax + 1], bh ; ret
0x0000000000114e2c : sbb byte ptr [rax + 1], cl ; ret 0x8949
0x0000000000114e2b : sbb byte ptr [rax + 1], r9b ; ret 0x8949
0x00000000000769da : sbb byte ptr [rax + 2], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007eee7 : sbb byte ptr [rax + 3], cl ; sbb byte ptr [r8 - 0x77], r9b ; or byte ptr [r9], r14b ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000f1148 : sbb byte ptr [rax + 5], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000137757 : sbb byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000083f42 : sbb byte ptr [rax + rcx*4 + 0x5c], al ; and al, 0x28 ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x000000000013addd : sbb byte ptr [rax + rdx + 0x48], dh ; add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000078d88 : sbb byte ptr [rax - 0x3f], cl ; clc ; add al, bl ; nop ; mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000003a280 : sbb byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x0000000000074c6f : sbb byte ptr [rax - 0x3f], cl ; sti ; add cl, byte ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010b45f : sbb byte ptr [rax - 0x73], cl ; adc al, 0xb8 ; mov eax, dword ptr [rdx] ; cmp eax, 0xff ; je 0x10b481 ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x00000000000f28b1 : sbb byte ptr [rax - 0x73], cl ; fmul dword ptr gs:[rcx + 0x5c415bc8] ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000127cc3 : sbb byte ptr [rax - 0x73], cl ; je 0x127cf3 ; or al, 0xe8 ; ret 0xfffe
0x00000000000a6ba3 : sbb byte ptr [rax - 0x73], cl ; jg 0xa6bcb ; jne 0xa717b ; ret
0x00000000000a82e7 : sbb byte ptr [rax - 0x73], cl ; jg 0xa830f ; jne 0xa898b ; ret
0x00000000000872ef : sbb byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000007de67 : sbb byte ptr [rax - 0x75], cl ; add rsp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000139e4f : sbb byte ptr [rax - 0x75], cl ; and al, 8 ; mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000131b8c : sbb byte ptr [rax - 0x75], cl ; and al, 8 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000001356b3 : sbb byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x1356df ; call rax
0x000000000013b873 : sbb byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x13b89f ; call rax
0x000000000013bf8c : sbb byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x13bfb8 ; call rax
0x000000000007d219 : sbb byte ptr [rax - 0x75], cl ; mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000ad86f : sbb byte ptr [rax - 0x75], cl ; sub byte ptr [r8 - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000007d249 : sbb byte ptr [rax - 0x77], cl ; adc byte ptr [r8 - 0x77], r9b ; sbb byte ptr [r8 - 0x77], r9b ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000050a99 : sbb byte ptr [rax - 0x77], cl ; add al, 0xd1 ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000002e735 : sbb byte ptr [rax - 0x77], cl ; enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003c24f : sbb byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000a0f18 : sbb byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000001196bd : sbb byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000110240 : sbb byte ptr [rax - 0x77], cl ; fimul dword ptr [rax - 0x7d] ; ret
0x0000000000070bb3 : sbb byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000110802 : sbb byte ptr [rax - 0x77], cl ; imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007eeeb : sbb byte ptr [rax - 0x77], cl ; or byte ptr [r9], r14b ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000007d251 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000080412 : sbb byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000003e7c4 : sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000f139a : sbb byte ptr [rax - 0x77], cl ; ret 0x33eb
0x0000000000089e6f : sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x000000000008a2e7 : sbb byte ptr [rax - 0x77], cl ; ret 0x349
0x0000000000106d41 : sbb byte ptr [rax - 0x77], cl ; ret 0x48eb
0x0000000000130a0e : sbb byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000bdc55 : sbb byte ptr [rax - 0x77], cl ; sub byte ptr [rbx + 0x5d], r11b ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000032e9c : sbb byte ptr [rax - 0x77], cl ; sub cl, ch ; ret
0x000000000008a6a3 : sbb byte ptr [rax - 0x77], r9b ; ret 0x349
0x00000000000204a9 : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000007a840 : sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000000ca153 : sbb byte ptr [rax - 0x7d], cl ; ret
0x00000000000d9ecf : sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000086b76 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000a0667 : sbb byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x44 ; movsx eax, byte ptr [rdi + rax] ; test r8b, r8b ; jne 0xa0660 ; ret
0x00000000000731e0 : sbb byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000079ea0 : sbb byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00000000001b8130 : sbb byte ptr [rax - 8], 0xff ; ret
0x00000000001b8448 : sbb byte ptr [rax - 8], ah ; jmp qword ptr [rdi]
0x00000000001196ea : sbb byte ptr [rax - 9], cl ; cmc ; mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000ec0a1 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xec0be ; ret
0x00000000001462d4 : sbb byte ptr [rax], al ; mov rax, qword ptr [rsp + 0x38] ; jne 0x1462c5 ; add rsp, 0x48 ; ret
0x0000000000078ca6 : sbb byte ptr [rax], al ; setne al ; ret
0x00000000000fe65c : sbb byte ptr [rax], ch ; sub al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000334ea : sbb byte ptr [rax], cl ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000002464 : sbb byte ptr [rax], cl ; ret 0x5576
0x00000000000aa1a5 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000aa1c7 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000aa205 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000bb417 : sbb byte ptr [rbp + 0x31], al ; ror byte ptr [rcx + rcx*4 - 0x17], 0x4c ; lea ecx, dword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x000000000013a731 : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x3a ; call qword ptr [rax]
0x000000000013a4b4 : sbb byte ptr [rbp - 0x77], cl ; clc ; mov rcx, r14 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000b48bc : sbb byte ptr [rbp - 0x7b], al ; dec dword ptr [rax - 0x77] ; fisttp qword ptr [rax - 0x77] ; ret
0x000000000007d3a0 : sbb byte ptr [rbx + 0x480c2474], cl ; mov edi, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000007ad9d : sbb byte ptr [rbx + 0x5d], bl ; sub rax, r12 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007d9f8 : sbb byte ptr [rbx + 0x5d], bl ; sub rax, r14 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000130ee3 : sbb byte ptr [rbx + 0x7eb5e83b], cl ; std ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x0000000000035d77 : sbb byte ptr [rbx + 0x802484], cl ; add byte ptr [rax], al ; add rsp, 0x108 ; ret
0x0000000000027bf8 : sbb byte ptr [rbx + rcx*4 - 0x54], al ; and al, 0xc0 ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000000f7440 : sbb byte ptr [rbx - 0x72b5f83e], al ; pushfq ; sar bh, 1 ; add dword ptr [rax], eax ; add byte ptr [rax - 9], cl ; fmul dword ptr [rax + 0x21] ; ret
0x00000000001937f0 : sbb byte ptr [rbx - 4], al ; jmp rax
0x00000000001b5c8d : sbb byte ptr [rcx + 0xe], al ; adc byte ptr [rcx + 0xe], al ; or byte ptr [rax + 0xb], cl ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; ret
0x00000000001b5bb0 : sbb byte ptr [rcx + 0xe], al ; adc byte ptr [rcx + 0xe], al ; or byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; ret 1
0x0000000000097d3e : sbb byte ptr [rcx + rax - 0x18], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008b953 : sbb byte ptr [rcx + rcx*4 + 0x63], cl ; adc byte ptr [rax - 0x77], cl ; and byte ptr [r8 - 0x77], cl ; jnp 0x8b979 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cfe6b : sbb byte ptr [rcx + rcx*4 + 0x78], cl ; or byte ptr [rax - 0x77], cl ; ret
0x000000000007346a : sbb byte ptr [rcx + rcx*4 - 0x1a], al ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000b6c28 : sbb byte ptr [rcx + rcx*4 - 0x4c], al ; and al, 0xac ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b597f : sbb byte ptr [rcx + rcx*4 - 0x6c], cl ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov gs, word ptr [rbx - 0x7cfffff8] ; ret
0x000000000019b4c8 : sbb byte ptr [rcx - 0x17], dl ; call qword ptr [rax]
0x00000000000905cb : sbb byte ptr [rcx - 0x73], cl ; je 0x905dd ; add byte ptr [rax - 0x77], cl ; ret 0x14c
0x0000000000170db8 : sbb byte ptr [rcx - 0x75], cl ; push rbp ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000115eab : sbb byte ptr [rcx - 0x76b37fab], cl ; call rax
0x00000000000fcf02 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f5d80 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002aa1e : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dbf8e : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000100595 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0x1005b7 ; ret
0x0000000000100635 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0x100657 ; ret
0x00000000000fd10c : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xfd12f ; ret
0x00000000000fd160 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xfd17f ; ret
0x00000000000f1394 : sbb byte ptr [rcx], al ; mov rax, qword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xf13dc
0x0000000000080453 : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000012ccbd : sbb byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, rbx ; mov qword ptr [rsp], rax ; mov rcx, rax ; call r12
0x0000000000079654 : sbb byte ptr [rdi + 0x11], dh ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000f8f5c : sbb byte ptr [rdi + 0x2c], bh ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000795a7 : sbb byte ptr [rdi + 0xe], dh ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001a9168 : sbb byte ptr [rdi - 0xe], ah ; call qword ptr [rax]
0x0000000000104317 : sbb byte ptr [rdx], al ; add byte ptr [rax], al ; mov rsi, qword ptr [rbx] ; mov rdi, qword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000193718 : sbb byte ptr [rip + 0x1f60fffc], 0xfc ; inc dword ptr [rax + 0x21] ; cld ; call qword ptr [rax]
0x00000000001a02d8 : sbb byte ptr [rsi + 0x200e4103], al ; add dword ptr [rax + rbp*2], 0xa ; ret
0x00000000001a2208 : sbb byte ptr [rsi + 0x200e4103], al ; add dword ptr [rax + rdi*2], 0xa ; ret
0x0000000000145d14 : sbb byte ptr [rsi + 0x40], bh ; mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000001861cc : sbb byte ptr [rsi], 0xf2 ; jmp qword ptr [rax - 0x3f000de2]
0x00000000000c3960 : sbb byte ptr [rsp + rcx], dh ; add byte ptr [rdi], cl ; mov dh, 0xfa ; movsxd rax, dword ptr [r8 + rdi*4] ; add rax, r8 ; jmp rax
0x00000000001a45e8 : sbb ch, al ; out dx, al ; call qword ptr [rax]
0x00000000000ff3e5 : sbb ch, byte ptr [rax + rax] ; mov dword ptr fs:[rax], 0 ; mov rax, qword ptr [rsp - 0x50] ; ret
0x00000000000ff404 : sbb ch, byte ptr [rax + rax] ; neg eax ; mov dword ptr fs:[rdx], eax ; mov rax, -1 ; ret
0x00000000000909ea : sbb ch, byte ptr [rdi] ; xor eax, dword ptr [rax] ; add rsp, 0x100 ; ret
0x00000000000a6bfb : sbb cl, byte ptr [rax - 0x73] ; jg 0xa6c25 ; jne 0xa717b ; ret
0x00000000000a834f : sbb cl, byte ptr [rax - 0x73] ; jg 0xa8379 ; jne 0xa898b ; ret
0x0000000000106115 : sbb cl, byte ptr [rax - 0x73] ; push rax ; add dword ptr [rax - 0x77], ecx ; push rdi ; sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000235da : sbb cl, byte ptr [rdi] ; mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000000a6bff : sbb cl, byte ptr [rdi] ; test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x000000000014858d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014a6fd : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000147c89 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148499 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014e2ba : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014dada : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b25d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014aa3d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x0000000000147f0d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014a21d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000014824d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000148569 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014dc79 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000148639 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ad7d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a55d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014af1d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x00000000001483ed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000147fdd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000014e16a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d98a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ea9a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001484bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000014a07d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000147d4f : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001480ad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x000000000014a1b3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014aeb3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a9d3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014e06b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014e99b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014831d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014b1f3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a013 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014e1bb : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014d9db : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000147d73 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000013c345 : sbb dh, byte ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000014b9b8 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000081af4 : sbb dword ptr [rax + 0x39], ecx ; ret 0x840f
0x00000000000d796f : sbb dword ptr [rax + 0x39], ecx ; ret 0x870f
0x0000000000110fa4 : sbb dword ptr [rax + 0x3a], eax ; cmp byte ptr [rsi + rbx + 0x48], dh ; mov edx, eax ; jmp 0x110fbd
0x00000000001374c3 : sbb dword ptr [rax + 0x3d8d4800], ebp ; xor eax, 0x748b0005 ; ret 0x4804
0x000000000006dabf : sbb dword ptr [rax + 0x63480011], eax ; adc al, 0x91 ; add rdx, rcx ; jmp rdx
0x00000000000314b1 : sbb dword ptr [rax + 1], ecx ; ret
0x00000000000d697b : sbb dword ptr [rax + 1], edi ; ret
0x00000000001439f6 : sbb dword ptr [rax - 0x39], ecx ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a6bc6 : sbb dword ptr [rax - 0x73], ecx ; jg 0xa6bef ; jne 0xa717b ; ret
0x00000000000a831a : sbb dword ptr [rax - 0x73], ecx ; jg 0xa8343 ; jne 0xa898b ; ret
0x00000000000c83a3 : sbb dword ptr [rax - 0x77], ecx ; ret 0x894c
0x00000000000a07a6 : sbb dword ptr [rax - 0x7d], ecx ; mov dword ptr [rcx], 0x7be0f44 ; test r8b, r8b ; jne 0xa07a0 ; xor eax, eax ; ret
0x0000000000142fc4 : sbb dword ptr [rax - 0x7d], ecx ; ret
0x00000000000abff6 : sbb dword ptr [rax - 0x7d], ecx ; rol byte ptr [rdx], 0xc3 ; nop dword ptr [rax] ; add rax, 1 ; ret
0x000000000014b941 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b9b9 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000109524 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x109541 ; ret
0x00000000001261a8 : sbb dword ptr [rbx + 0x7ba14fe], eax ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xfc3
0x000000000004c03f : sbb dword ptr [rbx - 0x48743], eax ; call qword ptr [rax]
0x000000000011b543 : sbb dword ptr [rcx + 0x2a], ebx ; add byte ptr [rax + rcx*2 + 3], ah ; add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000108f2a : sbb dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0x108f4e ; ret
0x00000000000ac553 : sbb dword ptr [rcx], eax ; add byte ptr [rax], al ; test al, 0xf0 ; jne 0xac670 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000012d196 : sbb dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bbae5 : sbb dword ptr [rdi + 0x18], edi ; mov rax, rbx ; pop rbx ; ret
0x0000000000130463 : sbb dword ptr [rdi], eax ; sub dword ptr [rax], eax ; jmp qword ptr [rdx + rax*8]
0x00000000000a831e : sbb dword ptr [rdi], ecx ; test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x0000000000198ae5 : sbb dword ptr [rdx], eax ; add byte ptr [rdx + rbp*8 + 0x197cfff9], al ; add al, byte ptr [rax] ; in al, -0x14 ; stc ; jmp rsp
0x0000000000100af7 : sbb eax, -1 ; mov qword ptr [rip + 0x2c353f], rax ; jmp 0x100a59
0x00000000000a5a0d : sbb eax, -1 ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001861b1 : sbb eax, 0x1dc0fff2 ; jmp rax
0x00000000001861b9 : sbb eax, 0x1e00fff2 ; jmp qword ptr [rax]
0x0000000000193739 : sbb eax, 0x1f10fffc ; cld ; inc dword ptr [rax] ; and esp, edi ; call rax
0x0000000000193719 : sbb eax, 0x1f60fffc ; cld ; inc dword ptr [rax + 0x21] ; cld ; call qword ptr [rax]
0x000000000013ab03 : sbb eax, 0x2862a0 ; mov rax, qword ptr fs:[rbx] ; test rax, rax ; je 0x13ab27 ; pop rbx ; ret
0x00000000000fe7f7 : sbb eax, 0x48002c7f ; ror eax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000a6c89 : sbb eax, 0x4e0850f ; add byte ptr [rax], al ; ret
0x0000000000114eb2 : sbb eax, 0x507a8b48 ; mov rsi, rdx ; call rax
0x00000000000a83dd : sbb eax, 0x59c850f ; add byte ptr [rax], al ; ret
0x000000000004b35f : sbb eax, 0x8b4d0002 ; jl 0x4b394 ; and byte ptr [rax + 1], cl ; ret
0x00000000000ff144 : sbb eax, 0xc764002c ; add byte ptr [rsi], ah ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000ff174 : sbb eax, 0xd8f7002c ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000126504 : sbb eax, dword ptr [rax - 0xa] ; mov byte ptr [rdi], 0x75 ; adc eax, 0x8303eec1 ; out dx, al ; add dword ptr [rax - 0x78], eax ; ja 0x126527 ; ret
0x000000000014b761 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b7d9 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000102d61 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x102d7e ; ret
0x00000000001039d1 : sbb eax, dword ptr [rcx] ; add byte ptr [rax], al ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000001097f1 : sbb eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10980e ; ret
0x000000000001fcb0 : sbb eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fcaf : sbb eax, r11d ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ff294 : sbb ebp, dword ptr [rax + rax] ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x0000000000156ad3 : sbb ebp, ecx ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001004d5 : sbb ecx, dword ptr [rax + 0x39] ; ret
0x000000000003b4a4 : sbb ecx, dword ptr [rax + 0x63] ; add cl, byte ptr [r8 - 0x77] ; add byte ptr [r9], r14b ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000a6c29 : sbb ecx, dword ptr [rax - 0x73] ; jg 0xa6c54 ; jne 0xa717b ; ret
0x00000000000a837d : sbb ecx, dword ptr [rax - 0x73] ; jg 0xa83a8 ; jne 0xa898b ; ret
0x0000000000055990 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x6348
0x000000000012f361 : sbb ecx, dword ptr [rax - 0x7d] ; ret
0x000000000004a1af : sbb ecx, dword ptr [rcx - 0x75] ; je 0x4a183 ; or byte ptr [rax - 0x73], cl ; push rsi ; add dword ptr [rcx - 0x77], ecx ; push rsp ; ret 0x4808
0x0000000000153d13 : sbb ecx, edi ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000fbed2 : sbb edi, ecx ; dec dword ptr [rax + 0x39] ; ret
0x0000000000193631 : sbb edi, esp ; call rax
0x0000000000193755 : sbb edi, esp ; jmp rax
0x0000000000193735 : sbb edi, esp ; push qword ptr [rax] ; sbb eax, 0x1f10fffc ; cld ; inc dword ptr [rax] ; and esp, edi ; call rax
0x0000000000116c73 : sbb edx, edi ; sub al, byte ptr [rax] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; jmp rax
0x000000000004bd9c : sbb esi, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000003b03 : sbb esi, dword ptr [rdx - 0x2f] ; clc ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000193751 : sbb esp, edi ; call qword ptr [rax]
0x0000000000182f33 : sbb rax, -0x7602b604 ; cmc ; sub dword ptr [rdi], ecx ; push rbx ; xchg eax, edx ; jae 0x182f24 ; push rsi ; pop rdx ; je 0x182f19 ; ret 0xacfc
0x0000000000169e9b : sbb rax, -1 ; ret
0x00000000000a5a0c : sbb rax, -1 ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001a47dd : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; adc al, 0xee ; jmp rbx
0x00000000001a483d : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; adc dl, dl ; out dx, al ; call qword ptr [rcx]
0x00000000001496e2 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001a47ad : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; nop ; shr dh, 1 ; call qword ptr [rax]
0x00000000001a47f5 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; pop rax ; shr esi, 1 ; call rcx
0x00000000000566d4 : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add rsp, 0xd8 ; ret
0x00000000000dd490 : scasb al, byte ptr [rdi] ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0x3945
0x0000000000158965 : scasb al, byte ptr [rdi] ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000da73c : scasb al, byte ptr [rdi] ; add rax, rsi ; jmp rax
0x00000000001098c6 : scasb al, byte ptr [rdi] ; jne 0x109901 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001095c6 : scasb al, byte ptr [rdi] ; js 0x109601 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109fc6 : scasb al, byte ptr [rdi] ; outsb dx, byte ptr [rsi] ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000002fa4 : scasb al, byte ptr [rdi] ; outsd dx, dword ptr [rsi] ; mov byte ptr [rbx], cl ; and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000004b35e : scasb al, byte ptr [rdi] ; sbb eax, 0x8b4d0002 ; jl 0x4b395 ; and byte ptr [rax + 1], cl ; ret
0x000000000019334d : scasb al, byte ptr [rdi] ; sti ; jmp qword ptr [rax]
0x0000000000002faa : scasb al, byte ptr [rdi] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000100b7e : scasb al, byte ptr [rdi] ; xor al, 0x2c ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x000000000009c566 : scasd eax, dword ptr [rdi] ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret 0x8d44
0x000000000014e7fd : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000081f0d : scasd eax, dword ptr [rdi] ; add al, byte ptr [rax] ; add dh, dh ; ret
0x0000000000149a27 : scasd eax, dword ptr [rdi] ; add al, byte ptr [rax] ; mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000019531d : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add al, 0xb5 ; in eax, dx ; jmp rsp
0x00000000001a48cd : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; loopne 0x1a4926 ; cli ; call qword ptr [rax]
0x00000000001a492d : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; push rax ; shr esi, cl ; call qword ptr [rax]
0x00000000001a4945 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; shr rsi, cl ; jmp qword ptr [rsi]
0x00000000001329c6 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; test eax, eax ; setne al ; add rsp, 8 ; movzx eax, al ; ret
0x0000000000158c3b : scasd eax, dword ptr [rdi] ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000185e85 : scasd eax, dword ptr [rdi] ; cld ; lcall ptr [rax] ; ret 0xfffc
0x000000000012fd8d : scasd eax, dword ptr [rdi] ; fild dword ptr [rax] ; add byte ptr [rbp + 0x310b75c0], al ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000128eae : scasd eax, dword ptr [rdi] ; mov rdx, rax ; mov byte ptr [rdx], 0 ; ret
0x000000000007b7d3 : scasd eax, dword ptr [rdi] ; nop ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000007af7a : scasd eax, dword ptr [rdi] ; nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x48], bl ; sub ebp, eax ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000000646b1 : scasd eax, dword ptr [rdi] ; or byte ptr [rdx], dl ; add byte ptr [rax + 0x63], cl ; add al, 0x91 ; add rax, rcx ; jmp rax
0x000000000009d8e1 : scasd eax, dword ptr [rdi] ; sub dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x4a], al ; pop rsi ; add eax, 0x43b60f44 ; add dword ptr [rbp + 0x38], eax ; ret
0x0000000000105e05 : scasd eax, dword ptr [rdi] ; wait ; int1 ; dec dword ptr [rax - 0x75] ; jge 0x105e15 ; call rbx
0x000000000015a63d : scasd eax, dword ptr [rdi] ; xchg eax, ebp ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000075ef9 : scasd eax, dword ptr [rdi] ; xor al, 0 ; mov dword ptr fs:[rax], 9 ; mov eax, 0xffffffff ; ret
0x000000000014d4b8 : setb dl ; sete sil ; test edx, edx ; je 0x14d4b1 ; movsxd rax, ecx ; add rax, rdi ; ret
0x0000000000021458 : sete al ; xor r8d, r8d ; xor ecx, ecx ; movzx eax, al ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x000000000014d380 : sete dh ; test edx, edx ; je 0x14d370 ; movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x000000000014d4bc : sete dh ; test edx, edx ; je 0x14d4ad ; movsxd rax, ecx ; add rax, rdi ; ret
0x000000000014d37f : sete sil ; test edx, edx ; je 0x14d371 ; movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x000000000014d4bb : sete sil ; test edx, edx ; je 0x14d4ae ; movsxd rax, ecx ; add rax, rdi ; ret
0x00000000000cea43 : setne al ; movzx eax, al ; neg rax ; or rax, 0x20 ; ret
0x00000000000ce913 : setne al ; movzx eax, al ; neg rax ; or rax, 0x7f ; ret
0x00000000000ceb23 : setne al ; movzx eax, al ; neg rax ; or rax, 1 ; ret
0x00000000001aa94d : sgdt ptr [rax] ; adc byte ptr [rsi], dl ; hlt ; call qword ptr [rbx]
0x0000000000196175 : sgdt ptr [rax] ; hlt ; ret
0x0000000000196165 : sgdt ptr [rax] ; push rsp ; ret
0x0000000000196145 : sgdt ptr [rax] ; push rsp ; ret 0xfff0
0x000000000019616d : sgdt ptr [rax] ; xchg eax, esp ; ret
0x000000000017c4a8 : shl byte ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000186204 : shl byte ptr [rax], 0xf2 ; push rax ; and dl, dh ; jmp qword ptr [rax]
0x000000000018626c : shl byte ptr [rbx], 0xf2 ; jmp rax
0x00000000001936c4 : shl byte ptr [rbx], 1 ; cld ; call rax
0x000000000003c582 : shl byte ptr [rdi + rax*8], 0x22 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000c8708 : shl byte ptr [rdi + rax*8], cl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rdx ; ret
0x0000000000186290 : shl byte ptr [rdx + rsi*8], 1 ; push rax ; and al, 0xf2 ; call qword ptr [rax]
0x0000000000186248 : shl byte ptr [rdx], 0xf2 ; jmp rax
0x0000000000193744 : shl byte ptr [rdx], 1 ; cld ; call rax
0x00000000001862d0 : shl byte ptr [rip + 0x25d0fff2], 0xf2 ; jmp rax
0x00000000001862d4 : shl byte ptr [rip + 0x25e0fff2], 1 ; push rax ; and eax, 0x2600fff2 ; call qword ptr [rax]
0x000000000012f1ca : shl byte ptr [rsi - 0x77], 0x43 ; add cl, byte ptr [rax - 0x75] ; and al, 8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000193748 : shl byte ptr [rsp + rdi*8], 1 ; call rax
0x000000000017c4b0 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000112a3e : shl dword ptr [rax + rcx*2 - 0x75], 1 ; xor byte ptr [rdi], cl ; mov esi, 0xbe0f48cb ; ret
0x000000000010c722 : shl dword ptr [rbx], 0x4e ; adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x00000000000a0cf7 : shl dword ptr [rcx], -0x30 ; test eax, eax ; je 0xa0cdd ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000fecb3 : shl dword ptr [rcx], 0x2c ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000013a03c : shl dword ptr [rcx], 1 ; retf -0x1d7f ; add byte ptr [rax - 0x178b7f80], 0x89 ; rol ecx, 1 ; jmp 0xffffffff80d69770
0x000000000013a2c3 : shl dword ptr [rcx], 1 ; retf -0x1d7f ; add byte ptr [rax - 0x178b7f80], 0x89 ; rol ecx, 1 ; jmp 0xffffffff80d699f7
0x0000000000146bbb : shl dword ptr [rdi], cl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000013aae3 : shl dword ptr [rdx + 0x28], 0 ; lea rdx, qword ptr [rip + 0x28b4b2] ; mov qword ptr fs:[rax], rdx ; ret
0x0000000000036ba3 : shl dword ptr [rdx - 0x389bffc8], 1 ; add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000c07d9 : shl eax, 2 ; sub rcx, rax ; mov dword ptr [r15 + 8], ecx ; jmp 0xc05b8
0x0000000000126a6a : shl eax, 3 ; cdqe ; shr rax, 4 ; ret
0x00000000000363a3 : shl eax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000362ac : shl eax, cl ; shr rdx, 6 ; not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x0000000000036423 : shl eax, cl ; test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x0000000000045d03 : shl ecx, 0x1e ; or edx, ecx ; cmp esi, 0x40 ; cmovne rax, rdx ; ret
0x000000000008dbbb : shl ecx, 0x20 ; or rdx, rcx ; bsf rdx, rdx ; add rax, rdx ; sub rax, rdi ; ret
0x0000000000102cb3 : shl ecx, 0x2b ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000090f8d : shl ecx, 3 ; sar rax, cl ; movzx eax, al ; sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x000000000003a906 : shl edx, 0x20 ; mov eax, eax ; or rax, rdx ; ret
0x000000000009811a : shl edx, 0x30 ; or rax, rdx ; bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000004b50d : shl edx, 2 ; lea rcx, qword ptr [r15 + rdx] ; add rdx, r13 ; call qword ptr [r10 + rax*8]
0x000000000003628c : shl edx, cl ; shr rax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x00000000000363a2 : shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000362ab : shl rax, cl ; shr rdx, 6 ; not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x0000000000036422 : shl rax, cl ; test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x000000000008dbba : shl rcx, 0x20 ; or rdx, rcx ; bsf rdx, rdx ; add rax, rdx ; sub rax, rdi ; ret
0x000000000003a905 : shl rdx, 0x20 ; mov eax, eax ; or rax, rdx ; ret
0x0000000000098119 : shl rdx, 0x30 ; or rax, rdx ; bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000004b50c : shl rdx, 2 ; lea rcx, qword ptr [r15 + rdx] ; add rdx, r13 ; call qword ptr [r10 + rax*8]
0x000000000003628b : shl rdx, cl ; shr rax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000103502 : shr al, 0x48 ; xor ebp, esi ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x0000000000105fb8 : shr al, 0x82 ; jb 0x105fbf ; dec dword ptr [rax + 0x39] ; ret
0x000000000011b320 : shr al, 0x9a ; mov dl, 0xf3 ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x0000000000132ce2 : shr bl, 0xab ; nop dword ptr [rax] ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000146a61 : shr bl, 0xe5 ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000004aa77 : shr bl, cl ; in eax, dx ; cmp rdi, rsi ; mov rax, rsi ; cmovae rax, rdi ; ret
0x0000000000158b1a : shr byte ptr [rbx + rax + 0x14634900], cl ; xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000c292b : shr byte ptr [rcx - 0x40], 1 ; nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00000000001a4990 : shr byte ptr [rcx - 6], 1 ; call qword ptr [rax]
0x00000000001932b8 : shr byte ptr [rdx - 5], 1 ; push qword ptr [rax + 0x6c] ; sti ; call qword ptr [rax]
0x00000000000ad199 : shr byte ptr [rdx], 0x48 ; lea ecx, dword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000193938 : shr byte ptr [rip + 0x2f20fffc], 1 ; cld ; push qword ptr [rax + 0x30] ; cld ; inc eax ; xor esp, edi ; call qword ptr [rax]
0x000000000019334c : shr byte ptr [rsi - 0x4fdf0005], 1 ; sti ; push qword ptr [rax - 0x4f] ; sti ; inc eax ; mov dl, 0xfb ; call qword ptr [rax]
0x00000000000c517e : shr byte ptr [rsi], 0x4c ; mov edx, esi ; mov rsi, qword ptr [rdi + rax*8] ; mov rdi, rbp ; call 0x913be
0x00000000001a47b1 : shr dh, 1 ; call qword ptr [rax]
0x000000000016ed3e : shr dword ptr [rax - 0x267af0e0], 1 ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000103a9d : shr dword ptr [rbx], cl ; add byte ptr [rdi + rax*8], ah ; or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000ce4b3 : shr dword ptr [rcx], 0x2f ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fe4a3 : shr dword ptr [rcx], 1 ; sub al, 0 ; mov dword ptr fs:[rax], 0xc ; mov eax, 0xffffffff ; ret
0x00000000000fe3b3 : shr dword ptr [rdx], 0x2c ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa1a3 : shr dword ptr [rsp + rbp], 1 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000aac89 : shr eax, 0xc ; and eax, 0xf ; movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x00000000000375fb : shr eax, 1 ; imul rax, rbx ; mov rbx, rax ; lea r12, qword ptr [rsi + rbx] ; mov rdi, r12 ; call r15
0x0000000000126730 : shr eax, 3 ; mov ecx, eax ; xor eax, eax ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x000000000003628f : shr eax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000128eac : shr ebx, 1 ; scasd eax, dword ptr [rdi] ; mov rdx, rax ; mov byte ptr [rdx], 0 ; ret
0x000000000016db08 : shr ecx, 0x20 ; shr rax, 0x20 ; cmp ecx, eax ; jne 0x16db23 ; xor eax, eax ; ret
0x00000000000362e7 : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000003626f : shr ecx, 6 ; test qword ptr [rdi + rcx*8], rax ; setne al ; movzx eax, al ; ret
0x0000000000033eee : shr edx, 0x18 ; and rax, rcx ; xor rax, rdx ; movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x33ee8 ; ret
0x00000000000aad21 : shr edx, 0xc ; and edx, 0xf ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x00000000001727c0 : shr edx, 1 ; dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rax - 0x77] ; fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x0000000000107231 : shr edx, 1 ; shr rax, 1 ; cmp rdx, 1 ; jne 0x107241 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000001072a1 : shr edx, 1 ; shr rax, 1 ; cmp rdx, 1 ; jne 0x1072b1 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000013efea : shr edx, 3 ; add rax, rcx ; jmp rax
0x0000000000126aa0 : shr edx, 4 ; cmp rsi, rdx ; mov edx, 0 ; cmovae rax, rdx ; ret
0x00000000000aacff : shr edx, 6 ; and edx, 0x3fffc00 ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000000362af : shr edx, 6 ; not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x0000000000172640 : shr edx, cl ; dec dword ptr [rax - 0x39] ; add eax, 0x251402 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001a4931 : shr esi, cl ; call qword ptr [rax]
0x000000000016db0b : shr rax, 0x20 ; cmp ecx, eax ; jne 0x16db20 ; xor eax, eax ; ret
0x000000000004a696 : shr rax, 0x20 ; mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000034abf : shr rax, 0x3f ; ret
0x0000000000108ec7 : shr rax, 0xc ; xor al, al ; or eax, edi ; ret
0x0000000000107233 : shr rax, 1 ; cmp rdx, 1 ; jne 0x10723f ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000001072a3 : shr rax, 1 ; cmp rdx, 1 ; jne 0x1072af ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000000abfd3 : shr rax, 2 ; test dl, dl ; je 0xabfff ; mov cl, dl ; and cl, 0xf ; je 0xac00f ; ret
0x0000000000126a6f : shr rax, 4 ; ret
0x000000000003628e : shr rax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000108ea7 : shr rax, 8 ; and edi, 0xfffff000 ; and eax, 0xfff ; or eax, edi ; ret
0x000000000016db07 : shr rcx, 0x20 ; shr rax, 0x20 ; cmp ecx, eax ; jne 0x16db24 ; xor eax, eax ; ret
0x000000000003626e : shr rcx, 6 ; test qword ptr [rdi + rcx*8], rax ; setne al ; movzx eax, al ; ret
0x000000000013efe9 : shr rdx, 3 ; add rax, rcx ; jmp rax
0x0000000000126a9f : shr rdx, 4 ; cmp rsi, rdx ; mov edx, 0 ; cmovae rax, rdx ; ret
0x00000000000362ae : shr rdx, 6 ; not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000a09a1 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a0911 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x000000000009af41 : sldt word ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000188ac4 : sldt word ptr [rax] ; add byte ptr [rax], al ; loope 0x188ad8 ; add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001194b4 : sldt word ptr [rax] ; jbe 0x1194c5 ; jmp 0x456d7
0x00000000000aaa54 : sldt word ptr [rax] ; lea rax, qword ptr [rbx + 1] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e3439 : sldt word ptr [rax] ; lea rdx, qword ptr [rip + 0xa49a9] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000017b681 : sldt word ptr [rax] ; mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x0000000000108eb3 : sldt word ptr [rax] ; or eax, edi ; ret
0x000000000017b689 : sldt word ptr [rax] ; ret
0x00000000000e4de9 : stc ; adc cl, byte ptr [rax - 9] ; ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x000000000017032f : stc ; adc dword ptr [rdi], ecx ; test byte ptr [rbx], bl ; add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000001a92b5 : stc ; add byte ptr [rax], al ; js 0x1a9252 ; call rbx
0x00000000001a929d : stc ; add byte ptr [rax], al ; mov al, 0x91 ; call rbx
0x00000000001b92e5 : stc ; add dword ptr [rax], eax ; clc ; movsd dword ptr [rdi], dword ptr [rsi] ; clc ; call qword ptr [rbx]
0x00000000001b931d : stc ; add dword ptr [rax], eax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; clc ; jmp qword ptr [rcx]
0x0000000000198725 : stc ; add dword ptr [rax], eax ; push 0xf9 ; push qword ptr [rcx + rdi*8 + 0x6ac40001] ; stc ; jmp rsp
0x0000000000153c76 : stc ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000f71f1 : stc ; add ecx, 0x150 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000f6f7e : stc ; add ecx, 0x50 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000001ab3ea : stc ; call qword ptr [rax]
0x0000000000116b23 : stc ; cli ; sub al, byte ptr [rax] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; jmp rax
0x00000000000fa78b : stc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000198992 : stc ; dec dword ptr [rax + rdx] ; add al, byte ptr [rax] ; xchg eax, esp ; ret
0x000000000017247a : stc ; dec dword ptr [rax - 0x39] ; add eax, 0x250779 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000172025 : stc ; dec dword ptr [rax - 0x39] ; add eax, 0x2508ae ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000f263d : stc ; dec dword ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000fa602 : stc ; dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x000000000012570c : stc ; dec dword ptr [rdi] ; test byte ptr [rsi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x0000000000124e23 : stc ; dec dword ptr [rdi] ; test ch, ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x000000000019870a : stc ; inc dword ptr [rax + rdi*8 + 0x66240001] ; stc ; call rsp
0x0000000000198702 : stc ; inc dword ptr [rax + rdi*8 + 1] ; add byte ptr [rsi + rbx*2], al ; stc ; inc dword ptr [rax + rdi*8 + 0x66240001] ; stc ; call rsp
0x000000000019867a : stc ; lcall ptr [rsp + rsi*8] ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; xor al, 0xf9 ; push qword ptr [rsp + rsi*8 + 1] ; add byte ptr [rsi + rsi], ah ; stc ; call rsp
0x000000000006cd39 : stc ; loopne 0x6cd53 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000012a1c2 : stc ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013ab83 : stc ; out dx, al ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + rax*4 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x000000000008b55b : stc ; pop rcx ; xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x0000000000048fdd : stc ; push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x00000000000feae6 : stc ; push qword ptr [rcx] ; ror byte ptr [rax - 0x7f], 0xc4 ; nop ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000198562 : stc ; push qword ptr [rsi + rbp*8 + 1] ; add byte ptr [rbx + rax - 7], ah ; push qword ptr [rsi + rbp*8 + 0x3a40001] ; stc ; jmp rsp
0x000000000019898a : stc ; push rsp ; lar eax, word ptr [rax] ; test bl, al ; stc ; dec dword ptr [rax + rdx] ; add al, byte ptr [rax] ; xchg eax, esp ; ret
0x0000000000116ca4 : stc ; sub al, byte ptr [rax] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000122e62 : stc ; sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x00000000000362e3 : stc ; sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000007f247 : stc ; xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000195e15 : std ; add byte ptr [rax], al ; in al, -0x6f ; out dx, eax ; jmp rsp
0x00000000000ce8fe : std ; add byte ptr [rax], al ; jne 0xce8d1 ; ret
0x0000000000195e0d : std ; add byte ptr [rax], al ; mov ah, 0x91 ; out dx, eax ; dec esp ; std ; add byte ptr [rax], al ; in al, -0x6f ; out dx, eax ; jmp rsp
0x00000000001538c1 : std ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001934da : std ; call qword ptr [rax + 0x20fffd95]
0x00000000001934ae : std ; call qword ptr [rax + 0x20fffd98]
0x00000000001933ba : std ; call rax
0x0000000000172817 : std ; dec dword ptr [rax - 0x39] ; add eax, 0x25292c ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000170da9 : std ; dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x0000000000130ee9 : std ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x0000000000078317 : std ; dec dword ptr [rax - 0x7f] ; ret
0x000000000019362e : std ; dec dword ptr [rax] ; sbb edi, esp ; call rax
0x00000000001934aa : std ; dec dword ptr [rbx] ; cwde ; std ; call qword ptr [rax + 0x20fffd98]
0x00000000000302de : std ; dec dword ptr [rdi] ; test bl, ah ; add al, byte ptr [rax] ; add byte ptr [rcx], dh ; imul al ; ret
0x00000000001934a2 : std ; dec ebx ; xchg eax, esi ; std ; ljmp ptr [rbx - 0x69] ; std ; dec dword ptr [rbx] ; cwde ; std ; call qword ptr [rax + 0x20fffd98]
0x00000000001933b6 : std ; dec esi ; nop ; std ; call rax
0x000000000013a590 : std ; inc dword ptr [rax] ; add byte ptr [rax], al ; mov byte ptr [rax], 0 ; jle 0x13a5b8 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001934d6 : std ; inc dword ptr [rax] ; xchg eax, ebp ; std ; call qword ptr [rax + 0x20fffd95]
0x000000000019350e : std ; inc esi ; movabs dword ptr [0xa631fffda631fffd], eax ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x00000000001934b2 : std ; jmp qword ptr [rax]
0x00000000001933b2 : std ; jmp rax
0x0000000000185f36 : std ; ljmp ptr [rax] ; ret 0xfffd
0x00000000001934a6 : std ; ljmp ptr [rbx - 0x69] ; std ; dec dword ptr [rbx] ; cwde ; std ; call qword ptr [rax + 0x20fffd98]
0x000000000007625e : std ; or dh, byte ptr [rax + rdi*4 + 0x48] ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000008d5ae : std ; or eax, dword ptr [rax] ; ret
0x000000000003cd3f : std ; pop rcx ; adc eax, 0xc0834900 ; add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x00000000001934d2 : std ; push qword ptr [rax - 0x6c] ; std ; inc dword ptr [rax] ; xchg eax, ebp ; std ; call qword ptr [rax + 0x20fffd95]
0x000000000019362a : std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; dec dword ptr [rax] ; sbb edi, esp ; call rax
0x000000000019351a : std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x0000000000193626 : std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; dec dword ptr [rax] ; sbb edi, esp ; call rax
0x0000000000193516 : std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x0000000000193622 : std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; dec dword ptr [rax] ; sbb edi, esp ; call rax
0x0000000000193512 : std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x00000000001934ce : std ; push rax ; xchg eax, ebx ; std ; push qword ptr [rax - 0x6c] ; std ; inc dword ptr [rax] ; xchg eax, ebp ; std ; call qword ptr [rax + 0x20fffd95]
0x000000000007714f : std ; sti ; or dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x0000000000116794 : std ; sub al, byte ptr [rax] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000116933 : std ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x116949 ; xor eax, eax ; ret
0x0000000000116963 : std ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x116979 ; xor eax, eax ; ret
0x0000000000116993 : std ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x1169a9 ; xor eax, eax ; ret
0x00000000001169c3 : std ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x1169d9 ; xor eax, eax ; ret
0x00000000001169f3 : std ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x116a09 ; xor eax, eax ; ret
0x0000000000116a23 : std ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x116a39 ; xor eax, eax ; ret
0x000000000003b281 : sti ; add byte ptr [rax], al ; add dl, dh ; movups xmm0, xmmword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x0000000000075951 : sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000074c72 : sti ; add cl, byte ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000016a101 : sti ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x0000000000153ad9 : sti ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001932ae : sti ; call qword ptr [rax + 0x30fffb67]
0x000000000019333a : sti ; call qword ptr [rax - 0x1f000457]
0x000000000019326a : sti ; call qword ptr [rax - 0x2f0004b8]
0x00000000000865dd : sti ; call qword ptr [rax - 0x72b71077]
0x000000000019329e : sti ; call qword ptr [rax]
0x000000000019325e : sti ; call rax
0x000000000008fb05 : sti ; cmp eax, 0xc1480033 ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x00000000000bf0c8 : sti ; dec dword ptr [rax + 0x39] ; ret
0x000000000010bb90 : sti ; dec dword ptr [rax - 0x73] ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cee30 : sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000006eeeb : sti ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x0000000000142cab : sti ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000019323a : sti ; inc dword ptr [rax + 0x50fffb4b] ; sti ; jmp qword ptr [rax]
0x0000000000193306 : sti ; inc dword ptr [rax + 0x60fffb8e] ; nop ; sti ; inc dword ptr [rax - 0x6e] ; sti ; jmp qword ptr [rax]
0x000000000019947a : sti ; inc dword ptr [rax + rbx*2 + 0x1f240002] ; sti ; ljmp ptr [rax + rbx*2 + 0x1fd40002] ; sti ; call rsp
0x0000000000193346 : sti ; inc dword ptr [rax - 0x2f000453] ; scasb al, byte ptr [rdi] ; sti ; jmp qword ptr [rax]
0x0000000000193336 : sti ; inc dword ptr [rax - 0x58] ; sti ; call qword ptr [rax - 0x1f000457]
0x000000000019330e : sti ; inc dword ptr [rax - 0x6e] ; sti ; jmp qword ptr [rax]
0x00000000001932a2 : sti ; inc dword ptr [rax] ; movsxd rdi, ebx ; push rax ; movsxd rdi, ebx ; jmp qword ptr [rax]
0x000000000019325a : sti ; inc dword ptr [rax] ; push rdx ; sti ; call rax
0x0000000000193316 : sti ; inc dword ptr [rax] ; xchg eax, esi ; sti ; jmp rax
0x0000000000145a0d : sti ; inc dword ptr [rbp - 0x6277f040] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; sub byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x0000000000193356 : sti ; inc eax ; mov dl, 0xfb ; call qword ptr [rax]
0x0000000000193236 : sti ; inc eax ; sti ; inc dword ptr [rax + 0x50fffb4b] ; sti ; jmp qword ptr [rax]
0x0000000000193302 : sti ; jmp qword ptr [rax - 0x7f000474]
0x0000000000193242 : sti ; jmp qword ptr [rax]
0x00000000001932fa : sti ; jmp rax
0x00000000000ca2ca : sti ; lcall ptr [rcx + 0x2404f741] ; add byte ptr [rax - 0x7af10000], al ; ret
0x00000000001995aa : sti ; lcall ptr [rsi + rax + 2] ; add byte ptr [rbp + rsi - 5], dh ; jmp rsp
0x0000000000199482 : sti ; ljmp ptr [rax + rbx*2 + 0x1fd40002] ; sti ; call rsp
0x0000000000199652 : sti ; ljmp ptr [rsi + rdx + 1] ; add byte ptr [rbx + rax*8 + 0x1684fffb], al ; add dword ptr [rax], eax ; xchg eax, esp ; ret
0x00000000000874a1 : sti ; loopne 0x874a9 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000c89ef : sti ; mov eax, 3 ; syscall ; cmp rax, -0x1000 ; ja 0xc8a19 ; pop rbx ; ret
0x00000000000c8009 : sti ; mov rax, qword ptr [rax] ; lea rdx, qword ptr [rdi + rdi*8] ; lea rax, qword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000002bbfe : sti ; or al, 0xf ; xchg edx, ebx ; add byte ptr [rax], al ; add byte ptr [rbx + 0x63], cl ; xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x0000000000140149 : sti ; or cl, byte ptr [rax + 0xf] ; ret
0x000000000007723c : sti ; or dword ptr [rax], eax ; add rsp, 0x80 ; mov eax, edx ; ret
0x0000000000077150 : sti ; or dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x000000000012a17a : sti ; or ebp, 2 ; mov dword ptr [r12 + 0x40], ebp ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000193372 : sti ; push qword ptr [rax + 0x30fffbbd] ; mov edi, 0xc0b0fffb ; sti ; push qword ptr [rax] ; ret 0xfffb
0x000000000019337a : sti ; push qword ptr [rax + 0x30fffbc0] ; ret 0xfffb
0x00000000001933a2 : sti ; push qword ptr [rax + 0x30fffbcf] ; sar ebx, 1 ; jmp rax
0x00000000001932e2 : sti ; push qword ptr [rax + 0x50fffb7c] ; jle 0x1932ef ; jmp qword ptr [rax]
0x0000000000193266 : sti ; push qword ptr [rax + 0x54] ; sti ; call qword ptr [rax - 0x2f0004b8]
0x00000000001932ba : sti ; push qword ptr [rax + 0x6c] ; sti ; call qword ptr [rax]
0x00000000001932da : sti ; push qword ptr [rax + 0x79] ; sti ; call qword ptr [rax]
0x0000000000193352 : sti ; push qword ptr [rax - 0x4f] ; sti ; inc eax ; mov dl, 0xfb ; call qword ptr [rax]
0x00000000001932b2 : sti ; push qword ptr [rax] ; imul edi, ebx, 0xfb6ad0ff ; push qword ptr [rax + 0x6c] ; sti ; call qword ptr [rax]
0x00000000001932d2 : sti ; push qword ptr [rax] ; jbe 0x1932d7 ; call rax
0x0000000000193342 : sti ; push qword ptr [rax] ; lodsb al, byte ptr [rsi] ; sti ; inc dword ptr [rax - 0x2f000453] ; scasb al, byte ptr [rdi] ; sti ; jmp qword ptr [rax]
0x0000000000193376 : sti ; push qword ptr [rax] ; mov edi, 0xc0b0fffb ; sti ; push qword ptr [rax] ; ret 0xfffb
0x0000000000193256 : sti ; push qword ptr [rax] ; push rcx ; sti ; inc dword ptr [rax] ; push rdx ; sti ; call rax
0x000000000019337e : sti ; push qword ptr [rax] ; ret 0xfffb
0x00000000001933a6 : sti ; push qword ptr [rax] ; sar ebx, 1 ; jmp rax
0x00000000001932f2 : sti ; push qword ptr [rax] ; test ebx, edi ; call qword ptr [rax]
0x0000000000199392 : sti ; push qword ptr [rbx + rdx*2] ; add al, byte ptr [rax] ; mov ah, 0xd ; sti ; inc dword ptr [rbx + rdx*2 + 0xee40002] ; sti ; call rsp
0x0000000000193332 : sti ; push rax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sti ; inc dword ptr [rax - 0x58] ; sti ; call qword ptr [rax - 0x1f000457]
0x00000000001932a6 : sti ; push rax ; movsxd rdi, ebx ; jmp qword ptr [rax]
0x0000000000193232 : sti ; push rax ; sti ; inc eax ; sti ; inc dword ptr [rax + 0x50fffb4b] ; sti ; jmp qword ptr [rax]
0x00000000000b597e : sti ; sbb byte ptr [rcx + rcx*4 - 0x6c], cl ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov gs, word ptr [rbx - 0x7cfffff8] ; ret
0x0000000000116b59 : sti ; sub al, byte ptr [rax] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000116a04 : sti ; sub al, byte ptr [rax] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000116b73 : sti ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x116b89 ; xor eax, eax ; ret
0x0000000000116ba3 : sti ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x116bb9 ; xor eax, eax ; ret
0x0000000000116bd3 : sti ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x116be9 ; xor eax, eax ; ret
0x0000000000116c03 : sti ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x116c19 ; xor eax, eax ; ret
0x000000000006efe0 : sti ; sub rsp, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000002c357 : sti ; test rax, rax ; je 0x2c365 ; call rax
0x00000000000b3307 : sti ; xor byte ptr [rax - 0x77], cl ; call 0x4ccdc826
0x00000000000b603f : sti ; xor byte ptr [rax - 0x77], cl ; call 0x4ccdf55e
0x000000000003c639 : sti ; xor dword ptr [rbp - 0x5f], 0xc6f7db31 ; add byte ptr [rax], al ; add byte ptr [rax], 0xf ; xchg eax, ebp ; ret
0x0000000000090ba2 : stosb byte ptr [rdi], al ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000000f13cc : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000125f22 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001a43c5 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; mov bl, 0xee ; jmp rdx
0x0000000000158fa7 : stosb byte ptr [rdi], al ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000116a82 : stosb byte ptr [rdi], al ; cld ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x116a9a ; xor eax, eax ; ret
0x00000000001ae471 : stosb byte ptr [rdi], al ; cmc ; call qword ptr [rax]
0x00000000000363b4 : stosb byte ptr [rdi], al ; cmp byte ptr [rax], al ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x0000000000036454 : stosb byte ptr [rdi], al ; cmp byte ptr [rax], al ; mov dword ptr fs:[rax], 0x26 ; mov eax, 0xffffffff ; ret
0x000000000018733c : stosb byte ptr [rdi], al ; in eax, dx ; jmp rax
0x0000000000185ded : stosb byte ptr [rdi], al ; int1 ; dec dword ptr [rax - 0x67000e56] ; stosb byte ptr [rdi], al ; int1 ; jmp qword ptr [rax]
0x0000000000185df5 : stosb byte ptr [rdi], al ; int1 ; jmp qword ptr [rax]
0x000000000002b052 : stosb byte ptr [rdi], al ; js 0x2b09f ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x0000000000050bb2 : stosb byte ptr [rdi], al ; mov edx, 0x2ebf000b ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000009184b : stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000004ea12 : stosb byte ptr [rdi], al ; out dx, al ; add byte ptr ss:[rax - 0x77], cl ; ret 0x2948
0x00000000000bf0c7 : stosb byte ptr [rdi], al ; sti ; dec dword ptr [rax + 0x39] ; ret
0x0000000000193341 : stosb byte ptr [rdi], al ; sti ; push qword ptr [rax] ; lodsb al, byte ptr [rsi] ; sti ; inc dword ptr [rax - 0x2f000453] ; scasb al, byte ptr [rdi] ; sti ; jmp qword ptr [rax]
0x000000000012c932 : stosb byte ptr [rdi], al ; xchg eax, ebx ; sub dword ptr [rax], eax ; ror rdi, 0x11 ; xor rdi, qword ptr fs:[0x30] ; call rax
0x0000000000183cf6 : stosb byte ptr [rdi], al ; xchg esp, edi ; adc ch, byte ptr [rip + 0x8acc8c6] ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000000ae1fb : stosd dword ptr [rdi], eax ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x63] ; ret
0x00000000000727dd : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x72785
0x00000000001ba09d : stosd dword ptr [rdi], eax ; add cl, al ; add dword ptr [rax], eax ; add al, bl ; add al, 5 ; ret 0xb
0x0000000000158e2e : stosd dword ptr [rdi], eax ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000018a04d : stosd dword ptr [rdi], eax ; cli ; dec dword ptr [rax - 0x77000554] ; lodsb al, byte ptr [rsi] ; cli ; jmp rax
0x000000000018a059 : stosd dword ptr [rdi], eax ; cli ; dec dword ptr [rax - 0xf000554] ; stosd dword ptr [rdi], eax ; cli ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; cli ; call qword ptr [rax]
0x000000000018a061 : stosd dword ptr [rdi], eax ; cli ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; cli ; call qword ptr [rax]
0x000000000018a07d : stosd dword ptr [rdi], eax ; cli ; jmp rax
0x000000000018a049 : stosd dword ptr [rdi], eax ; cli ; lcall ptr [rax - 0x55] ; cli ; dec dword ptr [rax - 0x77000554] ; lodsb al, byte ptr [rsi] ; cli ; jmp rax
0x00000000000362f4 : stosd dword ptr [rdi], eax ; cmp byte ptr [rax], al ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x000000000008dd84 : stosd dword ptr [rdi], eax ; fimul dword ptr [rax + 0xf] ; mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x0000000000132ce4 : stosd dword ptr [rdi], eax ; nop dword ptr [rax] ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000008dce5 : stosd dword ptr [rdi], eax ; sar rdx, cl ; test rdx, rdx ; je 0x8dd0d ; bsf rax, rdx ; ret
0x000000000008dce5 : stosd dword ptr [rdi], eax ; sar rdx, cl ; test rdx, rdx ; je 0x8dd0e ; bsf rax, rdx ; ret
0x00000000001a57c9 : stosd dword ptr [rdi], eax ; sti ; call qword ptr [rax]
0x0000000000126738 : stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x00000000000362eb : stosq qword ptr [rdi], rax ; ret
0x0000000000087b56 : str word ptr [rax + 0x63] ; add al, 0x82 ; add rax, rdx ; jmp rax
0x00000000000bc96e : str word ptr [rax - 0x73] ; and dword ptr [rcx + 8], 0x29490000 ; ror byte ptr [rax + 0x3d], 1 ; ret 0x10
0x000000000019366d : sub ah, bh ; jmp rax
0x00000000000ffaae : sub al, 0 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov qword ptr [rip + 0x2c2cc5], rax ; mov rdx, rax ; jmp 0xffa5e
0x00000000000ffaad : sub al, 0 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov qword ptr [rip + 0x2c2cc5], rax ; mov rdx, rax ; jmp 0xffa5f
0x00000000000ff9fa : sub al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000100c66 : sub al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000100d7d : sub al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; setne al ; add rsp, 8 ; movzx eax, al ; ret
0x00000000001a9e50 : sub al, 0 ; add byte ptr [rax], al ; cld ; add al, 1 ; add byte ptr [rax + 0x41], cl ; call qword ptr [rdx]
0x00000000001a9090 : sub al, 0 ; add byte ptr [rax], al ; cmp al, 0xf7 ; add byte ptr [rax], al ; pop rax ; pop rbp ; jmp rcx
0x00000000001a7dc8 : sub al, 0 ; add byte ptr [rax], al ; je 0x1a7dbd ; add byte ptr [rax], al ; mov al, 0x10 ; jmp qword ptr [rdi]
0x00000000001a13d0 : sub al, 0 ; add byte ptr [rax], al ; jl 0x1a145b ; add byte ptr [rax], al ; clc ; jns 0x1a13d3 ; call rcx
0x000000000007bd43 : sub al, 0 ; add byte ptr [rax], al ; mov rdi, r15 ; call 0x97fc9
0x000000000019f8f8 : sub al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rdi ; add byte ptr [rax], al ; nop ; sbb ebp, ebp ; call rbx
0x0000000000109d77 : sub al, 0 ; add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0x109d9e ; ret
0x0000000000109ecd : sub al, 0 ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x109f1d ; ret
0x00000000000ff8ee : sub al, 0 ; lea rax, qword ptr [rip + 0x2c46a1] ; ret
0x00000000000ff71e : sub al, 0 ; lea rax, qword ptr [rip + 0x2c4871] ; ret
0x00000000000ff538 : sub al, 0 ; lea rax, qword ptr [rip + 0x2c4a57] ; add rsp, 8 ; ret
0x00000000000ff3e6 : sub al, 0 ; mov dword ptr fs:[rax], 0 ; mov rax, qword ptr [rsp - 0x50] ; ret
0x00000000000f823d : sub al, 0 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000000fcbf5 : sub al, 0 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 1 ; ret
0x00000000000fe8a5 : sub al, 0 ; mov dword ptr fs:[rax], 0x16 ; mov eax, edi ; ret
0x00000000000fcd45 : sub al, 0 ; mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x00000000000f8575 : sub al, 0 ; mov dword ptr fs:[rax], 0x26 ; mov eax, 0xffffffff ; ret
0x00000000000fe565 : sub al, 0 ; mov dword ptr fs:[rax], 0x26 ; mov rax, -1 ; ret
0x00000000000f85ed : sub al, 0 ; mov dword ptr fs:[rax], 0x5f ; mov eax, 0xffffffff ; ret
0x00000000000fe4a5 : sub al, 0 ; mov dword ptr fs:[rax], 0xc ; mov eax, 0xffffffff ; ret
0x00000000000fd18d : sub al, 0 ; mov dword ptr fs:[rax], 9 ; mov eax, 0xffffffff ; ret
0x00000000000fe491 : sub al, 0 ; mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x00000000000fe469 : sub al, 0 ; mov qword ptr [rax], rdx ; xor eax, eax ; cmp rdi, rdx ; ja 0xfe4ad ; ret
0x00000000000fe975 : sub al, 0 ; mov rax, qword ptr [rax + 0x18] ; test rax, rax ; je 0xfe98e ; ret
0x0000000000100898 : sub al, 0 ; mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x00000000000ffab9 : sub al, 0 ; mov rdx, rax ; jmp 0xffa53
0x00000000000f6eb4 : sub al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ff405 : sub al, 0 ; neg eax ; mov dword ptr fs:[rdx], eax ; mov rax, -1 ; ret
0x00000000000f813b : sub al, 0 ; neg edx ; mov dword ptr fs:[rax], edx ; add rsp, 0x10 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000ff8e6 : sub al, 0 ; pop r12 ; mov dword ptr [rip + 0x2c46d4], eax ; lea rax, qword ptr [rip + 0x2c46a1] ; ret
0x00000000000ff716 : sub al, 0 ; pop r12 ; mov dword ptr [rip + 0x2c48a4], eax ; lea rax, qword ptr [rip + 0x2c4871] ; ret
0x00000000000fe789 : sub al, 0 ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000bd015 : sub al, 0x24 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000014343d : sub al, 0x28 ; add byte ptr [rdx], bh ; cmovne rax, rdx ; add rsp, 8 ; ret
0x00000000001a1744 : sub al, 0x2b ; add byte ptr [rax], al ; call 0x281a04d6
0x00000000000ffab8 : sub al, 0x2c ; add byte ptr [rax - 0x77], cl ; ret 0x8feb
0x0000000000101503 : sub al, 0x2c ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000ce1f4 : sub al, 0x2f ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa600 : sub al, 0x34 ; stc ; dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00000000000abcc2 : sub al, 0x3b ; sub al, 0x75 ; pop rax ; ret
0x00000000000f767c : sub al, 0x48 ; ror eax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x00000000001af084 : sub al, 0x57 ; add dword ptr [rax], eax ; cmp bl, al ; cmc ; jmp rax
0x00000000001af884 : sub al, 0x5f ; add dword ptr [rax], eax ; cmp bh, ah ; cmc ; jmp rsp
0x00000000001b0684 : sub al, 0x6d ; add dword ptr [rax], eax ; mov byte ptr [rcx - 0xa], ah ; jmp qword ptr [rsi]
0x0000000000150c82 : sub al, 0x72 ; add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x00000000000abcc5 : sub al, 0x75 ; pop rax ; ret
0x000000000016c293 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001b4b84 : sub al, 0xb2 ; add dword ptr [rax], eax ; call 0x241b4326
0x00000000001a5884 : sub al, 0xbf ; add byte ptr [rax], al ; mov byte ptr [rax + rsi*8], al ; jmp qword ptr [rbx]
0x00000000001a6484 : sub al, 0xcb ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001b8584 : sub al, 0xec ; add dword ptr [rax], eax ; sub byte ptr [rcx - 8], ah ; jmp qword ptr [rbx]
0x0000000000195661 : sub al, 0xee ; ljmp ptr [rax + rcx*8 + 0x2db40000] ; out dx, al ; call rsp
0x000000000012ad44 : sub al, 0xf6 ; dec dword ptr [rax + 0x39] ; ret
0x0000000000193935 : sub al, 0xfc ; call rax
0x0000000000193975 : sub al, 0xfc ; inc dword ptr [rax + 0x2e] ; cld ; call qword ptr [rax - 0x1f0003d1]
0x000000000008f7f0 : sub al, 1 ; add byte ptr [rax], al ; bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x0000000000109881 : sub al, 1 ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10989e ; ret
0x000000000009758f : sub al, bl ; nop dword ptr [rax] ; ret
0x00000000000abcd5 : sub al, byte ptr [rax + 0x15740fe2] ; mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0xabd2e ; ret
0x00000000000abbc5 : sub al, byte ptr [rax + 0x15740fe2] ; mov eax, dword ptr [rdi] ; cmp eax, dword ptr [rsi] ; jne 0xabd30 ; ret
0x0000000000084da2 : sub al, byte ptr [rax - 1] ; dec dword ptr [rax - 0x75] ; jae 0x84dc2 ; jmp 0x84752
0x000000000011e8e2 : sub al, byte ptr [rax] ; add byte ptr [rax + rax], al ; add al, ch ; ret
0x000000000012fbdc : sub al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; or al, 0x24 ; call rcx
0x0000000000034192 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x0000000000109a8a : sub al, byte ptr [rax] ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x109ad7 ; ret
0x0000000000060a82 : sub al, byte ptr [rax] ; add byte ptr [rcx - 0x7afcb730], cl ; push -0x7c000006 ; ret 0x8908
0x0000000000116ea2 : sub al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000011b545 : sub al, byte ptr [rax] ; add rax, qword ptr fs:[0] ; ret
0x00000000001173bf : sub al, byte ptr [rax] ; add rsp, 0x1000 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000122636 : sub al, byte ptr [rax] ; call rax
0x000000000011704f : sub al, byte ptr [rax] ; cmp rdx, rax ; jne 0x117038 ; ret
0x0000000000116e9c : sub al, byte ptr [rax] ; mov dword ptr [rip + 0x2af888], 1 ; pop rbx ; ret
0x00000000001175a5 : sub al, byte ptr [rax] ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x000000000011b200 : sub al, byte ptr [rax] ; mov eax, 0xca ; add rsp, 0x28 ; ret
0x00000000001166bc : sub al, byte ptr [rax] ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdx*2] ; shr ax, 0xe ; and eax, 1 ; ret
0x00000000001174cd : sub al, byte ptr [rax] ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000119355 : sub al, byte ptr [rax] ; neg eax ; mov dword ptr fs:[rdx], eax ; mov rax, -1 ; ret
0x000000000011b1a5 : sub al, byte ptr [rax] ; nop word ptr [rax + rax] ; mov eax, 0xca ; ret
0x000000000011777c : sub al, byte ptr [rax] ; pop rbp ; ret
0x0000000000116b5a : sub al, byte ptr [rax] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000116765 : sub al, byte ptr [rax] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000116754 : sub al, byte ptr [rax] ; test eax, eax ; jne 0x11676b ; mov eax, 1 ; ret
0x0000000000116784 : sub al, byte ptr [rax] ; test eax, eax ; jne 0x116798 ; xor eax, eax ; ret
0x00000000001167b4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0x1167c8 ; xor eax, eax ; ret
0x00000000001167e4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0x1167f8 ; xor eax, eax ; ret
0x0000000000116814 : sub al, byte ptr [rax] ; test eax, eax ; jne 0x116828 ; xor eax, eax ; ret
0x0000000000116844 : sub al, byte ptr [rax] ; test eax, eax ; jne 0x116858 ; xor eax, eax ; ret
0x0000000000116874 : sub al, byte ptr [rax] ; test eax, eax ; jne 0x116888 ; xor eax, eax ; ret
0x00000000001168a4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0x1168b8 ; xor eax, eax ; ret
0x00000000001168d4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0x1168e8 ; xor eax, eax ; ret
0x0000000000116904 : sub al, byte ptr [rax] ; test eax, eax ; jne 0x116918 ; xor eax, eax ; ret
0x0000000000116934 : sub al, byte ptr [rax] ; test eax, eax ; jne 0x116948 ; xor eax, eax ; ret
0x0000000000116964 : sub al, byte ptr [rax] ; test eax, eax ; jne 0x116978 ; xor eax, eax ; ret
0x0000000000116994 : sub al, byte ptr [rax] ; test eax, eax ; jne 0x1169a8 ; xor eax, eax ; ret
0x00000000001169c4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0x1169d8 ; xor eax, eax ; ret
0x00000000001169f4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0x116a08 ; xor eax, eax ; ret
0x0000000000116a24 : sub al, byte ptr [rax] ; test eax, eax ; jne 0x116a38 ; xor eax, eax ; ret
0x0000000000116a54 : sub al, byte ptr [rax] ; test eax, eax ; jne 0x116a68 ; xor eax, eax ; ret
0x0000000000116a84 : sub al, byte ptr [rax] ; test eax, eax ; jne 0x116a98 ; xor eax, eax ; ret
0x0000000000116ab4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0x116ac8 ; xor eax, eax ; ret
0x0000000000116ae4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0x116af8 ; xor eax, eax ; ret
0x0000000000116b14 : sub al, byte ptr [rax] ; test eax, eax ; jne 0x116b28 ; xor eax, eax ; ret
0x0000000000116b74 : sub al, byte ptr [rax] ; test eax, eax ; jne 0x116b88 ; xor eax, eax ; ret
0x0000000000116ba4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0x116bb8 ; xor eax, eax ; ret
0x0000000000116bd4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0x116be8 ; xor eax, eax ; ret
0x0000000000116c04 : sub al, byte ptr [rax] ; test eax, eax ; jne 0x116c18 ; xor eax, eax ; ret
0x0000000000116c34 : sub al, byte ptr [rax] ; test eax, eax ; jne 0x116c48 ; xor eax, eax ; ret
0x0000000000116c64 : sub al, byte ptr [rax] ; test eax, eax ; jne 0x116c78 ; xor eax, eax ; ret
0x0000000000116c94 : sub al, byte ptr [rax] ; test eax, eax ; jne 0x116ca8 ; xor eax, eax ; ret
0x0000000000116cc4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0x116cd8 ; xor eax, eax ; ret
0x0000000000116cf4 : sub al, byte ptr [rax] ; test eax, eax ; jne 0x116d08 ; xor eax, eax ; ret
0x0000000000117225 : sub al, byte ptr [rax] ; test rax, rax ; je 0x117237 ; ret
0x0000000000102f52 : sub al, byte ptr [rbx] ; add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x2c1273] ; add rsp, 8 ; ret
0x00000000001ac40d : sub al, byte ptr [rcx] ; add byte ptr [rax + 0x15], dh ; cmc ; call qword ptr [rbx]
0x000000000013f143 : sub al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmp al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010a794 : sub ax, word ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000193971 : sub bh, ah ; push rax ; sub al, 0xfc ; inc dword ptr [rax + 0x2e] ; cld ; call qword ptr [rax - 0x1f0003d1]
0x0000000000197f81 : sub bh, al ; inc dword ptr [rsi + rax*8 + 0x2ad40001] ; clc ; call rsp
0x0000000000116c02 : sub bh, bl ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x116c1a ; xor eax, eax ; ret
0x000000000003004b : sub bh, byte ptr [rcx] ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x0000000000116902 : sub bh, dh ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x11691a ; xor eax, eax ; ret
0x000000000010324a : sub bl, ah ; sub eax, dword ptr [rax] ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x000000000013ea42 : sub bl, al ; nop ; nop word ptr cs:[rax + rax] ; xor eax, eax ; ret
0x0000000000117602 : sub bl, al ; nop dword ptr [rax] ; mov eax, 0x16 ; ret
0x000000000011b20a : sub bl, al ; nop dword ptr [rax] ; mov eax, edi ; bswap eax ; ret
0x000000000012122f : sub bl, al ; nop dword ptr [rax] ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000000000145a0c : sub bl, bh ; inc dword ptr [rbp - 0x6277f040] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; sub byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x0000000000048083 : sub byte ptr [r11 + r9*4 + 0x4f], r9b ; xor byte ptr [rax - 0x75], cl ; jg 0x48101 ; xor eax, eax ; ret
0x00000000001108f4 : sub byte ptr [r15 + 0x2000001], r15b ; mov rdx, qword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; call rax
0x000000000013ea71 : sub byte ptr [r8 + r15*4], r8b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000007a042 : sub byte ptr [r8 - 0x75], r9b ; push rdi ; and byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x000000000007f7f7 : sub byte ptr [rax + 0x2b], cl ; imul esp, dword ptr [rax], 0x5b ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fc96 : sub byte ptr [rax + 0x39], cl ; ret
0x000000000007a137 : sub byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000000dbdcc : sub byte ptr [rax + 0xc], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001381ef : sub byte ptr [rax + 1], bh ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x00000000000cb113 : sub byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000d6bf5 : sub byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001381de : sub byte ptr [rax + 1], bh ; ret
0x000000000004587d : sub byte ptr [rax + 1], cl ; ret
0x0000000000049953 : sub byte ptr [rax + 1], cl ; ret 0x3f74
0x00000000000759e0 : sub byte ptr [rax + 1], cl ; ror dword ptr [rcx - 0x77], 0x47 ; and byte ptr [rcx - 0x77], cl ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x00000000000f16d3 : sub byte ptr [rax + 5], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f8de4 : sub byte ptr [rax + rax], 0xf7 ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fe594 : sub byte ptr [rax + rax], ch ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000013ea72 : sub byte ptr [rax + rdi*4], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000e879f : sub byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000dfc36 : sub byte ptr [rax - 0x75], cl ; cmp eax, dword ptr [rcx] ; ret 0xc083
0x0000000000024d66 : sub byte ptr [rax - 0x75], cl ; je 0x24d9b ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000002818d : sub byte ptr [rax - 0x75], cl ; je 0x281c1 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000002912d : sub byte ptr [rax - 0x75], cl ; je 0x29161 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000000c984b : sub byte ptr [rax - 0x75], cl ; jl 0xc987f ; and byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000007a043 : sub byte ptr [rax - 0x75], cl ; push rdi ; and byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x0000000000027daf : sub byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x38 ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000024bce : sub byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x48 ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000000dfcea : sub byte ptr [rax - 0x75], cl ; xor eax, dword ptr [rcx] ; ret 0x6348
0x000000000010457b : sub byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ad5ed : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x0000000000074207 : sub byte ptr [rax - 0x77], cl ; push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000000336fb : sub byte ptr [rax - 0x77], cl ; push rsp ; and al, 0x20 ; mov dword ptr [rsp + 0x38], eax ; call 0x1f9bc
0x0000000000113249 : sub byte ptr [rax - 0x77], cl ; ret
0x00000000000fb511 : sub byte ptr [rax - 0x77], cl ; ret 0x830f
0x0000000000145a1a : sub byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000fa607 : sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00000000000bc287 : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000072858 : sub byte ptr [rax - 0x78], al ; cmp al, byte ptr [rax + 0xf] ; mov dh, 0xc7 ; ret
0x00000000000ad873 : sub byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000000000f0288 : sub byte ptr [rax - 0x7d], cl ; ret
0x000000000003bf0c : sub byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001ad598 : sub byte ptr [rax - 0xb], bl ; jmp qword ptr [rcx]
0x00000000000004a9 : sub byte ptr [rax - 0xfdb6cd3], dl ; add byte ptr [rdx], al ; or al, byte ptr [rcx] ; or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x00000000000cb019 : sub byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003b823 : sub byte ptr [rax - 9], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000022e5 : sub byte ptr [rax], 0x10 ; salc ; ret
0x000000000000053f : sub byte ptr [rax], 0x40 ; or byte ptr [rax + 0x60000201], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x0000000000146170 : sub byte ptr [rax], 1 ; add byte ptr [rax], al ; jmp rax
0x000000000013ab37 : sub byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x0000000000140967 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000135959 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp + 0x50], rax ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fd0d4 : sub byte ptr [rax], al ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfd0f1 ; ret
0x0000000000145400 : sub byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x88 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000013abc5 : sub byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000013b7a5 : sub byte ptr [rax], al ; cmp dword ptr fs:[rax], 0x18 ; je 0x13b7b8 ; ret
0x000000000013abae : sub byte ptr [rax], al ; cmp rax, rdx ; je 0x13abcb ; add rsp, 8 ; ret
0x000000000013abde : sub byte ptr [rax], al ; cmp rax, rdx ; je 0x13abff ; sub rax, -0x80 ; add rsp, 8 ; ret
0x000000000013ac0e : sub byte ptr [rax], al ; cmp rax, rdx ; je 0x13ac31 ; add rax, 0xa0 ; add rsp, 8 ; ret
0x000000000013ac3e : sub byte ptr [rax], al ; cmp rax, rdx ; je 0x13ac61 ; add rax, 0xa8 ; add rsp, 8 ; ret
0x0000000000140e72 : sub byte ptr [rax], al ; jle 0x140a10 ; jmp 0x140e47
0x0000000000139b82 : sub byte ptr [rax], al ; jne 0x139b98 ; jmp 0x139bb2
0x0000000000139b82 : sub byte ptr [rax], al ; jne 0x139b99 ; jmp 0x139bb3
0x000000000013aae5 : sub byte ptr [rax], al ; lea rdx, qword ptr [rip + 0x28b4b2] ; mov qword ptr fs:[rax], rdx ; ret
0x000000000013ab31 : sub byte ptr [rax], al ; mov dword ptr [rip + 0x28b443], 2 ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000011082a : sub byte ptr [rax], al ; mov eax, 0 ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000001441ec : sub byte ptr [rax], al ; mov eax, 1 ; add rsp, 8 ; ret
0x000000000014343e : sub byte ptr [rax], al ; mov edx, 0 ; cmovne rax, rdx ; add rsp, 8 ; ret
0x000000000013d1e0 : sub byte ptr [rax], al ; mov edx, ebx ; mov rax, qword ptr [rax + 0x10] ; add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000013aaec : sub byte ptr [rax], al ; mov qword ptr fs:[rax], rdx ; ret
0x000000000013ab06 : sub byte ptr [rax], al ; mov rax, qword ptr fs:[rbx] ; test rax, rax ; je 0x13ab24 ; pop rbx ; ret
0x000000000013ab5b : sub byte ptr [rax], al ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000140914 : sub byte ptr [rax], al ; test eax, eax ; je 0x140928 ; xor eax, eax ; ret
0x0000000000097818 : sub byte ptr [rax], cl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000104d94 : sub byte ptr [rax], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000000022e6 : sub byte ptr [rax], dl ; salc ; ret
0x0000000000185e78 : sub byte ptr [rbp - 0x41b70004], bh ; cld ; ljmp ptr [rax - 0x41] ; cld ; dec dword ptr [rax] ; scasd eax, dword ptr [rdi] ; cld ; lcall ptr [rax] ; ret 0xfffc
0x0000000000193348 : sub byte ptr [rbp - 0x512f0005], 0xfb ; jmp qword ptr [rax]
0x0000000000072536 : sub byte ptr [rbx + 0x17], dh ; lea rax, qword ptr [rcx + 4] ; mov qword ptr [rdx + 0x20], rax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000072535 : sub byte ptr [rbx + 0x17], sil ; lea rax, qword ptr [rcx + 4] ; mov qword ptr [rdx + 0x20], rax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x00000000000e1e68 : sub byte ptr [rbx + 0x5d], bl ; mov rax, rcx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000073bbf : sub byte ptr [rbx + 0x5d], bl ; sub rax, r12 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000073d37 : sub byte ptr [rbx + 0x5d], bl ; sub rax, r14 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000483b3 : sub byte ptr [rbx + r9*4 + 0x4e], r9b ; xor byte ptr [rax - 0x75], cl ; jbe 0x48439 ; xor eax, eax ; ret
0x00000000000483b4 : sub byte ptr [rbx + rcx*4 + 0x4e], cl ; xor byte ptr [rax - 0x75], cl ; jbe 0x48438 ; xor eax, eax ; ret
0x0000000000048084 : sub byte ptr [rbx + rcx*4 + 0x4f], cl ; xor byte ptr [rax - 0x75], cl ; jg 0x48100 ; xor eax, eax ; ret
0x000000000005d781 : sub byte ptr [rbx - 0x5ff43], al ; call qword ptr [rax]
0x0000000000108d8b : sub byte ptr [rbx], 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000083f47 : sub byte ptr [rcx + rcx*4 + 0x54], cl ; and al, 0x20 ; call qword ptr [rax]
0x00000000000877f4 : sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x0000000000076732 : sub byte ptr [rcx + rcx*4 - 0x20], cl ; sub rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fed4c : sub byte ptr [rcx], ah ; sub al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000146171 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; jmp rax
0x0000000000136719 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, r15 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003b254 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; movsd xmm0, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000be5f4 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fe6dd : sub byte ptr [rcx], al ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfe72d ; ret
0x0000000000030076 : sub byte ptr [rcx], bh ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x00000000001108f5 : sub byte ptr [rdi + 0x2000001], bh ; mov rdx, qword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000001a6428 : sub byte ptr [rdi - 0x10], dh ; jmp qword ptr [rax]
0x000000000018a06c : sub byte ptr [rdx + rdi*8 - 0x553bf01], ch ; lcall ptr [rax - 0x54] ; cli ; push qword ptr [rax - 0x54] ; cli ; call qword ptr [rax]
0x00000000000781c6 : sub byte ptr [rdx], al ; add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000173172 : sub byte ptr [rsi + rdx - 0x15], dh ; sub eax, 0x841f0f66 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000193e1c : sub byte ptr [rsi - 4], 0xff ; add byte ptr [rsi - 4], ch ; push qword ptr [rax + 0x6d] ; cld ; jmp rax
0x00000000000fe490 : sub ch, byte ptr [rax + rax] ; mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x00000000000fe468 : sub ch, byte ptr [rax + rax] ; mov qword ptr [rax], rdx ; xor eax, eax ; cmp rdi, rdx ; ja 0xfe4ae ; ret
0x00000000000fe3b4 : sub ch, byte ptr [rax + rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000fe38c : sub ch, byte ptr [rax + rax] ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000ce394 : sub ch, byte ptr [rdi] ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000feae5 : sub cl, bh ; push qword ptr [rcx] ; ror byte ptr [rax - 0x7f], 0xc4 ; nop ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000110f9d : sub cl, byte ptr [rax + 0x39] ; enter -0x177, 0x73 ; sbb dword ptr [rax + 0x3a], eax ; cmp byte ptr [rsi + rbx + 0x48], dh ; mov edx, eax ; jmp 0x110fc4
0x000000000009ca6e : sub cl, byte ptr [rax + 0x63] ; test byte ptr [rcx + rcx*4 - 0x3d], 0x83 ; ret 0x410e
0x00000000000d26a5 : sub cl, byte ptr [rax - 0x7d] ; ret
0x000000000002b1d2 : sub dh, byte ptr [rdi + 0x39] ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x00000000000eb19d : sub dl, bh ; dec dword ptr [rax + 1] ; ret
0x0000000000035602 : sub dl, byte ptr [rcx] ; cmp dword ptr [rax], eax ; test eax, eax ; jne 0x35619 ; ret
0x0000000000194b19 : sub dl, ch ; dec esp ; jle 0x194b29 ; add byte ptr [rax + rbp - 0x16], dl ; jmp rsp
0x00000000001726f3 : sub dword ptr [rax + 0x25], eax ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; jmp rax
0x0000000000159369 : sub dword ptr [rax + 0x63490003], 0x14 ; xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000f702e : sub dword ptr [rax + 0x63], ecx ; ret 0xc283
0x0000000000131293 : sub dword ptr [rax + 0x68], 4 ; mov eax, 1 ; ret
0x0000000000134c51 : sub dword ptr [rax + 0xf000000], 0x48c089c8 ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000f8cb4 : sub dword ptr [rax + rax], 0x8964d8f7 ; add bh, byte ptr [rax - 1] ; ret
0x00000000000fe564 : sub dword ptr [rax + rax], ebp ; mov dword ptr fs:[rax], 0x26 ; mov rax, -1 ; ret
0x00000000000fe4a4 : sub dword ptr [rax + rax], ebp ; mov dword ptr fs:[rax], 0xc ; mov eax, 0xffffffff ; ret
0x0000000000134c71 : sub dword ptr [rax - 0x48000000], 1 ; ret
0x000000000005c376 : sub dword ptr [rax - 0x75], ecx ; adc byte ptr [r8 - 0x77], cl ; ret 0x348
0x0000000000073466 : sub dword ptr [rax - 0x75], ecx ; sbb byte ptr [r9 + rcx*4 - 0x1a], r8b ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000109f81 : sub dword ptr [rax], eax ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x109f9e ; ret
0x0000000000125929 : sub dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x000000000012f92b : sub dword ptr [rax], eax ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000009d8e2 : sub dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x4a], al ; pop rsi ; add eax, 0x43b60f44 ; add dword ptr [rbp + 0x38], eax ; ret
0x0000000000122e63 : sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x000000000012a1bd : sub dword ptr [rax], eax ; and dword ptr [rax + 0x40], 0xfffffff9 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000130465 : sub dword ptr [rax], eax ; jmp qword ptr [rdx + rax*8]
0x000000000012387d : sub dword ptr [rax], eax ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012ae45 : sub dword ptr [rax], eax ; mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x12ae59 ; ret
0x000000000012b0c5 : sub dword ptr [rax], eax ; mov rax, qword ptr fs:[rax] ; ret
0x000000000012dfb6 : sub dword ptr [rax], eax ; pop rbx ; ret
0x0000000000123895 : sub dword ptr [rax], eax ; ret
0x000000000012e093 : sub dword ptr [rax], eax ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x000000000012aa43 : sub dword ptr [rax], eax ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; jmp rax
0x000000000012b794 : sub dword ptr [rax], eax ; ror rdi, 0x11 ; xor rdi, qword ptr fs:[0x30] ; call rax
0x000000000012aa65 : sub dword ptr [rax], eax ; test byte ptr [rax + 0x40], 8 ; je 0x12aa81 ; cmp dword ptr [rdi + 0x10], 2 ; je 0x12aa86 ; ret
0x000000000012aa0e : sub dword ptr [rax], eax ; test eax, eax ; je 0x12aa1e ; ret
0x000000000012eca4 : sub dword ptr [rax], eax ; test eax, eax ; je 0x12ecb6 ; ret
0x000000000012aa04 : sub dword ptr [rax], eax ; test edx, edx ; jne 0x12aa40 ; mov eax, dword ptr [rip + 0x29b054] ; test eax, eax ; je 0x12aa28 ; ret
0x000000000010064b : sub dword ptr [rax], ecx ; sub al, 0 ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000362f3 : sub dword ptr [rbx - 0x389bffc8], 0x1600 ; add byte ptr [rax - 1], bh ; ret
0x0000000000108c3c : sub dword ptr [rbx], 0x138b4800 ; mov qword ptr [rax], rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000108c94 : sub dword ptr [rbx], 0x64d8f700 ; mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000004e853 : sub dword ptr [rbx], eax ; add byte ptr [rax], al ; add rax, rcx ; mov dword ptr [rbp - 0x4f8], 1 ; jmp rax
0x0000000000165d83 : sub dword ptr [rbx], eax ; add byte ptr [rax], al ; ret
0x00000000000d501e : sub dword ptr [rbx], ecx ; add byte ptr [rdi], cl ; mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000003059b : sub dword ptr [rcx + 0x39], esp ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x000000000007023e : sub dword ptr [rcx - 0x75], ecx ; test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000001ac32d : sub dword ptr [rcx], eax ; add byte ptr [rax + 0xe], dh ; cmc ; jmp qword ptr [rax]
0x000000000003010e : sub dword ptr [rcx], edi ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x00000000001462be : sub dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x000000000006d174 : sub dword ptr [rdi + 0x71], esi ; movzx eax, al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000ce1f3 : sub dword ptr [rdi + rbp], 0x64d8f700 ; mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ce52f : sub dword ptr [rdi], 0xc8c14800 ; adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000ce484 : sub dword ptr [rdi], ebp ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000006d8dd : sub dword ptr [rdi], ecx ; xchg dword ptr [rax + rax + 0x63480000], ecx ; add al, 0x86 ; add rax, rsi ; jmp rax
0x00000000000363f3 : sub dword ptr [rdx - 0x389bffc8], 0x1600 ; add byte ptr [rax - 1], bh ; ret
0x00000000000986d3 : sub dword ptr [rdx - 8], esi ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000016d8e9 : sub dword ptr [rdx], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000198d35 : sub dword ptr [rdx], eax ; add byte ptr [rsi + rcx*2 + 0x29bcfffa], ah ; add al, byte ptr [rax] ; push rsp ; cli ; jmp rsp
0x000000000006f75e : sub dword ptr [rsi + 4], 1 ; je 0x6f79c ; mov rax, rdx ; pop rbx ; ret
0x000000000007889e : sub dword ptr [rsi + 4], 1 ; je 0x788dc ; mov rax, rdx ; pop rbx ; ret
0x00000000000fdff3 : sub dword ptr [rsi], 0xd8f7002c ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f1391 : sub dword ptr [rsp + 0x18], 1 ; mov rax, qword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xf13df
0x00000000000644dd : sub dword ptr [rsp + rdi*8], -1 ; dec dword ptr [rax - 0x7d] ; ret
0x000000000013b7ef : sub eax, 0 ; add byte ptr [rax], al ; test rax, rax ; jne 0x13b7eb ; pop rbx ; ret
0x00000000000ebf0e : sub eax, 0x158b4800 ; push rcx ; push rax ; sub eax, 0x5a0a8900 ; pop rcx ; pop rbx ; ret
0x000000000006d170 : sub eax, 0x20 ; cmp al, 0x29 ; ja 0x6d1f9 ; movzx eax, al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x0000000000193939 : sub eax, 0x2f20fffc ; cld ; push qword ptr [rax + 0x30] ; cld ; inc eax ; xor esp, edi ; call qword ptr [rax]
0x000000000013a966 : sub eax, 0x3be0000 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x00000000000e9878 : sub eax, 0x3d8d4800 ; fbld dword ptr [rbp - 0x76b7ffd3] ; fimul word ptr [rax - 0x75] ; or cl, byte ptr [rax - 0x77] ; ret 0xc1e8
0x00000000001372f1 : sub eax, 0x63480005 ; add al, 0x82 ; add rax, rdx ; jmp rax
0x00000000000ebff5 : sub eax, 0x64d8f700 ; mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ec215 : sub eax, 0x64daf700 ; mov dword ptr [rax], edx ; mov eax, 0xffffffff ; ret
0x000000000005d77c : sub eax, 0x74ff8545 ; sub byte ptr [rbx - 0x5ff43], al ; call qword ptr [rax]
0x0000000000173176 : sub eax, 0x841f0f66 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000183cfa : sub eax, 0x8acc8c6 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000014b32f : sub eax, 0x8b000296 ; or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000000fe079 : sub eax, 0xc764002c ; add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000f0773 : sub eax, 0xc8c14800 ; adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000ec1bd : sub eax, 0xd8f74100 ; mov dword ptr fs:[rax], r8d ; mov eax, 0xffffffff ; ret
0x00000000000004ab : sub eax, 0xf02493 ; add cl, byte ptr [rdx] ; add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x0000000000087daa : sub eax, 6 ; cmp rax, 9 ; ja 0x87d64 ; movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000004892c : sub eax, 8 ; cmp r8, 0xf8 ; jne 0x4892c ; mov rax, rdx ; ret
0x000000000010a6a7 : sub eax, dword ptr [eax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010aed8 : sub eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010b013 : sub eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000010b006 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000001099fa : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x109a47 ; ret
0x000000000010acf4 : sub eax, dword ptr [rax] ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000102ebc : sub eax, dword ptr [rax] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010a193 : sub eax, dword ptr [rax] ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010b0e8 : sub eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x000000000010b0df : sub eax, dword ptr [rax] ; jae 0x10b0ff ; mov rdx, qword ptr [rip + 0x2b92ce] ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000001029c6 : sub eax, dword ptr [rax] ; je 0x1029db ; mov dword ptr [rip + 0x2be838], edi ; ret
0x000000000010af92 : sub eax, dword ptr [rax] ; je 0x10af9d ; pop rbp ; ret
0x0000000000101406 : sub eax, dword ptr [rax] ; jne 0x101385 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010324c : sub eax, dword ptr [rax] ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x0000000000103ae5 : sub eax, dword ptr [rax] ; mov dword ptr fs:[rax], 0x16 ; ret
0x0000000000103aaf : sub eax, dword ptr [rax] ; mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x00000000001099d5 : sub eax, dword ptr [rax] ; mov dword ptr fs:[rax], 0x26 ; mov rax, -1 ; ret
0x0000000000110585 : sub eax, dword ptr [rax] ; mov dword ptr fs:[rax], 0xc ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000103a9e : sub eax, dword ptr [rax] ; mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x0000000000107745 : sub eax, dword ptr [rax] ; mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x000000000010bcc5 : sub eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000010bf3d : sub eax, dword ptr [rax] ; mov edi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000001074a5 : sub eax, dword ptr [rax] ; mov edx, 0x64 ; mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x000000000010b47d : sub eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x000000000010b36d : sub eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x0000000000106906 : sub eax, dword ptr [rax] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x1069b6 ; call rax
0x0000000000106a7d : sub eax, dword ptr [rax] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x106b8e ; call rax
0x0000000000108c3d : sub eax, dword ptr [rax] ; mov rdx, qword ptr [rbx] ; mov qword ptr [rax], rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000102a07 : sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000106bc5 : sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000109bd5 : sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rdx], eax ; mov rax, -1 ; ret
0x000000000010af44 : sub eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000103449 : sub eax, dword ptr [rax] ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001029ce : sub eax, dword ptr [rax] ; ret
0x0000000000077b74 : sub eax, dword ptr [rbx + 0x20] ; mov rdx, qword ptr [rbx + 0xf8] ; mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000b1718 : sub eax, dword ptr [rbx] ; add byte ptr [rax], al ; test r13d, r13d ; mov r10, rbp ; setne dl ; jmp 0xb1743
0x00000000000aae82 : sub eax, dword ptr [rcx + rax*4] ; je 0xaae66 ; ret
0x000000000010a303 : sub eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0x10a326 ; ret
0x00000000001104f5 : sub eax, dword ptr [rdi + 0x38] ; cmp rax, rsi ; jb 0x110515 ; mov eax, 1 ; ret
0x0000000000074bc5 : sub eax, dword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x0000000000078d86 : sub eax, dword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x0000000000078c76 : sub eax, dword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x000000000010acf3 : sub eax, dword ptr gs:[rax] ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000007da41 : sub eax, ecx ; cmp rax, r8 ; jbe 0x7da68 ; mov rax, qword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x00000000000abfd1 : sub eax, ecx ; shr rax, 2 ; test dl, dl ; je 0xac001 ; mov cl, dl ; and cl, 0xf ; je 0xac011 ; ret
0x0000000000034abd : sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000145c16 : sub eax, esi ; add ecx, 0x180 ; mov rsi, rax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000106d37 : sub eax, esi ; mov qword ptr [rbp], r14 ; mov qword ptr [rsp + 0x18], rax ; mov rdx, rax ; jmp 0x106d9c
0x000000000013e685 : sub eax, esi ; mov rdx, rax ; mov ecx, eax ; xor eax, eax ; cmp rdx, rcx ; je 0x13e6af ; ret
0x0000000000130953 : sub eax, esi ; out dx, al ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rax - 0x77], 0xc3 ; jne 0x130901 ; xor eax, eax ; pop rbx ; ret
0x000000000007f86d : sub ebp, dword ptr [rbx + 0x18] ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007f7f9 : sub ebp, dword ptr [rbx + 0x20] ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007af81 : sub ebp, eax ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000116883 : sub ebp, edi ; sub al, byte ptr [rax] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000154103 : sub ebp, esi ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000aca98 : sub ebx, 4 ; mov rax, rbx ; pop rbx ; ret
0x0000000000002fab : sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000362e4 : sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000048fd5 : sub ecx, 1 ; div r8 ; cmp rcx, 0xff ; jne 0x48fdf ; mov rax, rdx ; ret
0x0000000000081bea : sub ecx, dword ptr [rax + 0x39] ; ret
0x0000000000143d74 : sub ecx, dword ptr [rax - 0x75] ; and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000049575 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000098cc4 : sub ecx, dword ptr [rax - 0x7d] ; rol byte ptr [rcx], 0x48 ; sub esi, 1 ; jne 0x98ccd ; xor eax, eax ; ret
0x0000000000098dc4 : sub ecx, dword ptr [rax - 0x7d] ; rol dword ptr [rcx], 0x48 ; sub eax, 1 ; jne 0x98dcd ; pop rbx ; pop rbp ; ret
0x00000000000a6941 : sub ecx, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000156ec3 : sub ecx, ecx ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000f71f0 : sub ecx, edi ; add ecx, 0x150 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000f6f7d : sub ecx, edi ; add ecx, 0x50 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000362e2 : sub ecx, edi ; sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000007d375 : sub ecx, edx ; cmp rax, rcx ; jbe 0x7d3a0 ; mov rax, qword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000000ab04c : sub edi, 0x10 ; add rax, rdi ; ret
0x000000000013d7ed : sub edi, dword ptr [rax + 1] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000006a028 : sub edi, dword ptr [rax - 0x7cb70001] ; ret 0xbf08
0x000000000004a4f6 : sub edi, eax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000000a0cb4 : sub edx, 0x10 ; add rdx, rax ; jl 0xa0cdd ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000a0c94 : sub edx, 0x20 ; add rdx, rax ; jl 0xa0cdd ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00000000000a0c74 : sub edx, 0x30 ; add rdx, rax ; jl 0xa0cdd ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000000a0c64 : sub edx, 0x40 ; add rdx, rax ; jl 0xa0cdb ; add rax, rdi ; ret
0x00000000000744fc : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x000000000007eeb0 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000007eea5 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000074511 : sub edx, dword ptr [rax + 8] ; mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x000000000014d44f : sub edx, eax ; cmp edx, ecx ; jle 0x14d375 ; movsxd rax, ecx ; ret
0x00000000000858b7 : sub edx, eax ; cmp rbx, rdx ; jb 0x858a7 ; mov byte ptr [rsi + rbx], r9b ; mov rax, rsi ; pop rbx ; ret
0x0000000000090e14 : sub edx, eax ; jbe 0x90e57 ; add rax, rdi ; ret
0x0000000000090e24 : sub edx, eax ; jbe 0x90e59 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000090e34 : sub edx, eax ; jbe 0x90e59 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000090e44 : sub edx, eax ; jbe 0x90e59 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000090b9e : sub edx, eax ; jbe 0x90e5e ; add rax, rdi ; add rax, rcx ; ret
0x000000000003d174 : sub edx, eax ; lea rax, qword ptr [rdx + rdx*4] ; mov rdx, r14 ; xor r14d, r14d ; add rax, rax ; sub rdx, rax ; jmp 0x3d1cd
0x00000000000403bf : sub edx, eax ; lea rax, qword ptr [rdx + rdx*4] ; mov rdx, rbp ; xor ebp, ebp ; add rax, rax ; sub rdx, rax ; jmp 0x40416
0x000000000004a49d : sub edx, eax ; mov qword ptr [rdi + 8], r10 ; mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000000bbc72 : sub edx, esi ; add rdx, rcx ; mov rax, rdx ; add rsp, 0x18 ; ret
0x00000000000757bc : sub edx, esi ; mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x000000000007a350 : sub edx, esi ; mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x0000000000098c0a : sub esi, 1 ; jne 0x98c0a ; xor edi, edi ; mov rax, rdi ; ret
0x0000000000080bfc : sub esi, dword ptr [rax + rax] ; jae 0x80bb9 ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000014587a : sub esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000005ada8 : sub esi, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000173381 : sub esp, 8 ; cmp rbx, rbp ; jae 0x1733aa ; nop dword ptr [rax] ; call qword ptr [rbx]
0x000000000006efe2 : sub esp, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x0000000000131292 : sub qword ptr [rax + 0x68], 4 ; mov eax, 1 ; ret
0x00000000000f1390 : sub qword ptr [rsp + 0x18], 1 ; mov rax, qword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xf13e0
0x00000000000b73e4 : sub r10, rax ; jmp 0xb7404
0x000000000004a49c : sub r10, rax ; mov qword ptr [rdi + 8], r10 ; mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000013ea41 : sub r11b, r8b ; nop ; nop word ptr cs:[rax + rax] ; xor eax, eax ; ret
0x000000000004892b : sub r8, 8 ; cmp r8, 0xf8 ; jne 0x4892d ; mov rax, rdx ; ret
0x000000000010bf3c : sub r8, qword ptr [rax] ; mov edi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000007da40 : sub r8, rcx ; cmp rax, r8 ; jbe 0x7da69 ; mov rax, qword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x00000000000ec1bc : sub rax, -0x2708bf00 ; mov dword ptr fs:[rax], r8d ; mov eax, 0xffffffff ; ret
0x000000000013abe5 : sub rax, -0x80 ; add rsp, 8 ; ret
0x0000000000087920 : sub rax, 0x10 ; ret
0x00000000000ebff4 : sub rax, 0x64d8f700 ; mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ec214 : sub rax, 0x64daf700 ; mov dword ptr [rax], edx ; mov eax, 0xffffffff ; ret
0x0000000000098dc9 : sub rax, 1 ; jne 0x98dc8 ; pop rbx ; pop rbp ; ret
0x00000000000aa813 : sub rax, 1 ; ret
0x0000000000087da9 : sub rax, 6 ; cmp rax, 9 ; ja 0x87d65 ; movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x0000000000087933 : sub rax, 8 ; ret
0x0000000000130f24 : sub rax, qword ptr [rbx + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000077b73 : sub rax, qword ptr [rbx + 0x20] ; mov rdx, qword ptr [rbx + 0xf8] ; mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000130f09 : sub rax, qword ptr [rbx + 0x58] ; mov esi, edx ; sub esi, eax ; mov eax, esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007f76d : sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000078d94 : sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000001104f4 : sub rax, qword ptr [rdi + 0x38] ; cmp rax, rsi ; jb 0x110516 ; mov eax, 1 ; ret
0x00000000001104f3 : sub rax, qword ptr [rdi + 0x38] ; cmp rax, rsi ; jb 0x110517 ; mov eax, 1 ; ret
0x00000000001104f2 : sub rax, qword ptr [rdi + 0x38] ; cmp rax, rsi ; jb 0x110518 ; mov eax, 1 ; ret
0x0000000000078c84 : sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000074bc4 : sub rax, qword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x0000000000078d85 : sub rax, qword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x0000000000078c75 : sub rax, qword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x0000000000073bc2 : sub rax, r12 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ad1eb : sub rax, r12 ; pop r12 ; ret
0x0000000000106d36 : sub rax, r14 ; mov qword ptr [rbp], r14 ; mov qword ptr [rsp + 0x18], rax ; mov rdx, rax ; jmp 0x106d9d
0x0000000000076b97 : sub rax, r14 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000073d3a : sub rax, r14 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000014d38d : sub rax, r8 ; ret
0x000000000007dbae : sub rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000076736 : sub rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008dbc8 : sub rax, rdi ; ret
0x000000000003a8cd : sub rax, rdx ; ret
0x0000000000034abc : sub rax, rdx ; shr rax, 0x3f ; ret
0x000000000013e684 : sub rax, rsi ; mov rdx, rax ; mov ecx, eax ; xor eax, eax ; cmp rdx, rcx ; je 0x13e6b0 ; ret
0x000000000007f86c : sub rbp, qword ptr [rbx + 0x18] ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007f7f8 : sub rbp, qword ptr [rbx + 0x20] ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007af80 : sub rbp, rax ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000000aca97 : sub rbx, 4 ; mov rax, rbx ; pop rbx ; ret
0x0000000000048fd4 : sub rcx, 1 ; div r8 ; cmp rcx, 0xff ; jne 0x48fe0 ; mov rax, rdx ; ret
0x00000000000c07dc : sub rcx, rax ; mov dword ptr [r15 + 8], ecx ; jmp 0xc05b5
0x00000000000bc9ed : sub rcx, rax ; mov qword ptr [rbx + 8], rcx ; add rsp, 0xd0 ; mov eax, edx ; pop rbx ; ret
0x00000000000f71ef : sub rcx, rdi ; add ecx, 0x150 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000f6f7c : sub rcx, rdi ; add ecx, 0x50 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000362e1 : sub rcx, rdi ; sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000007d374 : sub rcx, rdx ; cmp rax, rcx ; jbe 0x7d3a1 ; mov rax, qword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000000ab04b : sub rdi, 0x10 ; add rax, rdi ; ret
0x00000000000a0cb3 : sub rdx, 0x10 ; add rdx, rax ; jl 0xa0cde ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000a0c93 : sub rdx, 0x20 ; add rdx, rax ; jl 0xa0cde ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00000000000a0c73 : sub rdx, 0x30 ; add rdx, rax ; jl 0xa0cde ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000000a0c63 : sub rdx, 0x40 ; add rdx, rax ; jl 0xa0cdc ; add rax, rdi ; ret
0x00000000000744fb : sub rdx, qword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x0000000000074510 : sub rdx, qword ptr [rax + 8] ; mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x00000000000858b6 : sub rdx, rax ; cmp rbx, rdx ; jb 0x858a8 ; mov byte ptr [rsi + rbx], r9b ; mov rax, rsi ; pop rbx ; ret
0x0000000000090e13 : sub rdx, rax ; jbe 0x90e58 ; add rax, rdi ; ret
0x0000000000090e23 : sub rdx, rax ; jbe 0x90e5a ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000090e33 : sub rdx, rax ; jbe 0x90e5a ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000090e43 : sub rdx, rax ; jbe 0x90e5a ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000090b9d : sub rdx, rax ; jbe 0x90e5f ; add rax, rdi ; add rax, rcx ; ret
0x000000000003d183 : sub rdx, rax ; jmp 0x3d1be
0x00000000000403cd : sub rdx, rax ; jmp 0x40408
0x00000000000403be : sub rdx, rax ; lea rax, qword ptr [rdx + rdx*4] ; mov rdx, rbp ; xor ebp, ebp ; add rax, rax ; sub rdx, rax ; jmp 0x40417
0x00000000000bbc71 : sub rdx, rsi ; add rdx, rcx ; mov rax, rdx ; add rsp, 0x18 ; ret
0x00000000000757bb : sub rdx, rsi ; mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x000000000007a34f : sub rdx, rsi ; mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x0000000000098c09 : sub rsi, 1 ; jne 0x98c0b ; xor edi, edi ; mov rax, rdi ; ret
0x0000000000173380 : sub rsp, 8 ; cmp rbx, rbp ; jae 0x1733ab ; nop dword ptr [rax] ; call qword ptr [rbx]
0x000000000006efe1 : sub rsp, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x00000000000ce5ae : sub word ptr [rdi], 0x4800 ; ror eax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000100505 : syscall ; cmp rax, -0x1000 ; ja 0x100523 ; ret
0x0000000000100599 : syscall ; cmp rax, -0x1000 ; ja 0x1005b3 ; ret
0x0000000000100639 : syscall ; cmp rax, -0x1000 ; ja 0x100653 ; ret
0x000000000010068d : syscall ; cmp rax, -0x1000 ; ja 0x1006ab ; ret
0x0000000000106bac : syscall ; cmp rax, -0x1000 ; ja 0x106bcb ; ret
0x0000000000108cec : syscall ; cmp rax, -0x1000 ; ja 0x108d0b ; ret
0x0000000000108f2e : syscall ; cmp rax, -0x1000 ; ja 0x108f4a ; ret
0x0000000000108fe0 : syscall ; cmp rax, -0x1000 ; ja 0x108ffb ; ret
0x0000000000109bbb : syscall ; cmp rax, -0x1000 ; ja 0x109bda ; ret
0x0000000000109cd5 : syscall ; cmp rax, -0x1000 ; ja 0x109cea ; ret
0x0000000000109d7b : syscall ; cmp rax, -0x1000 ; ja 0x109d9a ; ret
0x0000000000109e35 : syscall ; cmp rax, -0x1000 ; ja 0x109e4a ; ret
0x000000000010a265 : syscall ; cmp rax, -0x1000 ; ja 0x10a27a ; ret
0x000000000010a307 : syscall ; cmp rax, -0x1000 ; ja 0x10a322 ; ret
0x000000000010a3b7 : syscall ; cmp rax, -0x1000 ; ja 0x10a3d2 ; ret
0x00000000001174b8 : syscall ; cmp rax, -0x1000 ; ja 0x1174d3 ; ret
0x000000000011753d : syscall ; cmp rax, -0x1000 ; ja 0x117524 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000117565 : syscall ; cmp rax, -0x1000 ; ja 0x117595 ; ret
0x000000000011933a : syscall ; cmp rax, -0x1000 ; ja 0x11935b ; ret
0x000000000011940a : syscall ; cmp rax, -0x1000 ; ja 0x11942b ; ret
0x0000000000035a6e : syscall ; cmp rax, -0x1000 ; ja 0x35a8b ; ret
0x0000000000035ada : syscall ; cmp rax, -0x1000 ; ja 0x35afb ; ret
0x0000000000035b24 : syscall ; cmp rax, -0x1000 ; ja 0x35b3a ; ret
0x0000000000079f59 : syscall ; cmp rax, -0x1000 ; ja 0x79f73 ; ret
0x000000000007a60d : syscall ; cmp rax, -0x1000 ; ja 0x7a62b ; pop rbx ; ret
0x000000000007aff6 : syscall ; cmp rax, -0x1000 ; ja 0x7b00d ; ret
0x00000000000bc825 : syscall ; cmp rax, -0x1000 ; ja 0xbc843 ; ret
0x00000000000c89f5 : syscall ; cmp rax, -0x1000 ; ja 0xc8a13 ; pop rbx ; ret
0x00000000000c9bdf : syscall ; cmp rax, -0x1000 ; ja 0xc9bfa ; ret
0x00000000000ccfbe : syscall ; cmp rax, -0x1000 ; ja 0xccfda ; ret
0x00000000000cd058 : syscall ; cmp rax, -0x1000 ; ja 0xcd072 ; ret
0x00000000000cd149 : syscall ; cmp rax, -0x1000 ; ja 0xcd162 ; ret
0x00000000000ce221 : syscall ; cmp rax, -0x1000 ; ja 0xce23a ; ret
0x00000000000ce291 : syscall ; cmp rax, -0x1000 ; ja 0xce2aa ; ret
0x00000000000ce4e5 : syscall ; cmp rax, -0x1000 ; ja 0xce4fa ; ret
0x00000000000ce565 : syscall ; cmp rax, -0x1000 ; ja 0xce57a ; ret
0x00000000000f8213 : syscall ; cmp rax, -0x1000 ; ja 0xf822b ; ret
0x00000000000f8260 : syscall ; cmp rax, -0x1000 ; ja 0xf827b ; ret
0x00000000000f82b3 : syscall ; cmp rax, -0x1000 ; ja 0xf82cb ; ret
0x00000000000f830e : syscall ; cmp rax, -0x1000 ; ja 0xf832b ; ret
0x00000000000f836f : syscall ; cmp rax, -0x1000 ; ja 0xf838b ; ret
0x00000000000f83c9 : syscall ; cmp rax, -0x1000 ; ja 0xf83e3 ; ret
0x00000000000f85a7 : syscall ; cmp rax, -0x1000 ; ja 0xf85c3 ; ret
0x00000000000f8c71 : syscall ; cmp rax, -0x1000 ; ja 0xf8cbb ; ret
0x00000000000f8d15 : syscall ; cmp rax, -0x1000 ; ja 0xf8d6f ; add rsp, 0x60 ; pop rbx ; ret
0x00000000000fd110 : syscall ; cmp rax, -0x1000 ; ja 0xfd12b ; ret
0x00000000000fd164 : syscall ; cmp rax, -0x1000 ; ja 0xfd17b ; ret
0x00000000000fd8d8 : syscall ; cmp rax, -0x1000 ; ja 0xfd8f2 ; ret
0x00000000000fddec : syscall ; cmp rax, -0x1000 ; ja 0xfde0a ; ret
0x00000000000fe743 : syscall ; cmp rax, -0x1000 ; ja 0xfe75a ; ret
0x00000000000fe7b3 : syscall ; cmp rax, -0x1000 ; ja 0xfe7ca ; ret
0x00000000000fe834 : syscall ; cmp rax, -0x1000 ; ja 0xfe84b ; ret
0x00000000000fe8e4 : syscall ; cmp rax, -0x1000 ; ja 0xfe8fb ; ret
0x00000000000fee34 : syscall ; cmp rax, -0x1000 ; ja 0xfee4b ; ret
0x00000000001006c5 : syscall ; cmp rax, -0xfff ; jae 0x1006da ; ret
0x00000000001006f5 : syscall ; cmp rax, -0xfff ; jae 0x10070a ; ret
0x00000000001029f7 : syscall ; cmp rax, -0xfff ; jae 0x102a0c ; ret
0x0000000000102c75 : syscall ; cmp rax, -0xfff ; jae 0x102c8a ; ret
0x0000000000102ca5 : syscall ; cmp rax, -0xfff ; jae 0x102cba ; ret
0x0000000000102cde : syscall ; cmp rax, -0xfff ; jae 0x102d23 ; ret
0x0000000000102d35 : syscall ; cmp rax, -0xfff ; jae 0x102d4a ; ret
0x0000000000102d65 : syscall ; cmp rax, -0xfff ; jae 0x102d7a ; ret
0x0000000000102d98 : syscall ; cmp rax, -0xfff ; jae 0x102dad ; ret
0x0000000000102dc5 : syscall ; cmp rax, -0xfff ; jae 0x102dda ; ret
0x0000000000102df5 : syscall ; cmp rax, -0xfff ; jae 0x102e0a ; ret
0x0000000000102e25 : syscall ; cmp rax, -0xfff ; jae 0x102e3a ; ret
0x0000000000102e55 : syscall ; cmp rax, -0xfff ; jae 0x102e6a ; ret
0x00000000001074c8 : syscall ; cmp rax, -0xfff ; jae 0x1074dd ; ret
0x00000000001074f5 : syscall ; cmp rax, -0xfff ; jae 0x10750a ; ret
0x0000000000107525 : syscall ; cmp rax, -0xfff ; jae 0x10753a ; ret
0x0000000000107558 : syscall ; cmp rax, -0xfff ; jae 0x10756d ; ret
0x0000000000107588 : syscall ; cmp rax, -0xfff ; jae 0x10759d ; ret
0x00000000001075b5 : syscall ; cmp rax, -0xfff ; jae 0x1075ca ; ret
0x00000000001075e8 : syscall ; cmp rax, -0xfff ; jae 0x1075fd ; ret
0x0000000000107615 : syscall ; cmp rax, -0xfff ; jae 0x10762a ; ret
0x0000000000107645 : syscall ; cmp rax, -0xfff ; jae 0x10765a ; ret
0x0000000000107678 : syscall ; cmp rax, -0xfff ; jae 0x10768d ; ret
0x00000000001076a5 : syscall ; cmp rax, -0xfff ; jae 0x1076ba ; ret
0x00000000001076d8 : syscall ; cmp rax, -0xfff ; jae 0x1076ed ; ret
0x0000000000108c55 : syscall ; cmp rax, -0xfff ; jae 0x108c6a ; ret
0x0000000000108c85 : syscall ; cmp rax, -0xfff ; jae 0x108c9a ; ret
0x0000000000108da5 : syscall ; cmp rax, -0xfff ; jae 0x108dba ; ret
0x0000000000108de5 : syscall ; cmp rax, -0xfff ; jae 0x108dfa ; ret
0x0000000000108e15 : syscall ; cmp rax, -0xfff ; jae 0x108e2a ; ret
0x0000000000108e45 : syscall ; cmp rax, -0xfff ; jae 0x108e5a ; ret
0x0000000000108e75 : syscall ; cmp rax, -0xfff ; jae 0x108e8a ; ret
0x0000000000109015 : syscall ; cmp rax, -0xfff ; jae 0x10902a ; ret
0x0000000000109098 : syscall ; cmp rax, -0xfff ; jae 0x1090ad ; ret
0x00000000001090c5 : syscall ; cmp rax, -0xfff ; jae 0x1090da ; ret
0x00000000001090f5 : syscall ; cmp rax, -0xfff ; jae 0x10910a ; ret
0x0000000000109125 : syscall ; cmp rax, -0xfff ; jae 0x10913a ; ret
0x0000000000109168 : syscall ; cmp rax, -0xfff ; jae 0x10917d ; ret
0x0000000000109195 : syscall ; cmp rax, -0xfff ; jae 0x1091aa ; ret
0x00000000001091c5 : syscall ; cmp rax, -0xfff ; jae 0x1091da ; ret
0x00000000001091f5 : syscall ; cmp rax, -0xfff ; jae 0x10920a ; ret
0x0000000000109225 : syscall ; cmp rax, -0xfff ; jae 0x10923a ; ret
0x0000000000109255 : syscall ; cmp rax, -0xfff ; jae 0x10926a ; ret
0x0000000000109285 : syscall ; cmp rax, -0xfff ; jae 0x10929a ; ret
0x00000000001092b5 : syscall ; cmp rax, -0xfff ; jae 0x1092ca ; ret
0x00000000001092e5 : syscall ; cmp rax, -0xfff ; jae 0x1092fa ; ret
0x0000000000109318 : syscall ; cmp rax, -0xfff ; jae 0x10932d ; ret
0x0000000000109351 : syscall ; cmp rax, -0xfff ; jae 0x109399 ; ret
0x00000000001093a5 : syscall ; cmp rax, -0xfff ; jae 0x1093ba ; ret
0x00000000001093d8 : syscall ; cmp rax, -0xfff ; jae 0x1093ed ; ret
0x0000000000109405 : syscall ; cmp rax, -0xfff ; jae 0x10941a ; ret
0x0000000000109435 : syscall ; cmp rax, -0xfff ; jae 0x10944a ; ret
0x0000000000109465 : syscall ; cmp rax, -0xfff ; jae 0x10947a ; ret
0x0000000000109495 : syscall ; cmp rax, -0xfff ; jae 0x1094aa ; ret
0x00000000001094c5 : syscall ; cmp rax, -0xfff ; jae 0x1094da ; ret
0x00000000001094f8 : syscall ; cmp rax, -0xfff ; jae 0x10950d ; ret
0x0000000000109528 : syscall ; cmp rax, -0xfff ; jae 0x10953d ; ret
0x0000000000109555 : syscall ; cmp rax, -0xfff ; jae 0x10956a ; ret
0x0000000000109585 : syscall ; cmp rax, -0xfff ; jae 0x10959a ; ret
0x00000000001095b8 : syscall ; cmp rax, -0xfff ; jae 0x1095cd ; ret
0x00000000001095e8 : syscall ; cmp rax, -0xfff ; jae 0x1095fd ; ret
0x0000000000109618 : syscall ; cmp rax, -0xfff ; jae 0x10962d ; ret
0x0000000000109651 : syscall ; cmp rax, -0xfff ; jae 0x109699 ; ret
0x00000000001096a5 : syscall ; cmp rax, -0xfff ; jae 0x1096ba ; ret
0x00000000001096e1 : syscall ; cmp rax, -0xfff ; jae 0x109729 ; ret
0x0000000000109735 : syscall ; cmp rax, -0xfff ; jae 0x10974a ; ret
0x0000000000109765 : syscall ; cmp rax, -0xfff ; jae 0x10977a ; ret
0x00000000001097a1 : syscall ; cmp rax, -0xfff ; jae 0x1097e9 ; ret
0x00000000001097f5 : syscall ; cmp rax, -0xfff ; jae 0x10980a ; ret
0x0000000000109828 : syscall ; cmp rax, -0xfff ; jae 0x10983d ; ret
0x0000000000109855 : syscall ; cmp rax, -0xfff ; jae 0x10986a ; ret
0x0000000000109885 : syscall ; cmp rax, -0xfff ; jae 0x10989a ; ret
0x00000000001098b8 : syscall ; cmp rax, -0xfff ; jae 0x1098cd ; ret
0x00000000001098ee : syscall ; cmp rax, -0xfff ; jae 0x109933 ; ret
0x0000000000109945 : syscall ; cmp rax, -0xfff ; jae 0x10995a ; ret
0x0000000000109978 : syscall ; cmp rax, -0xfff ; jae 0x10998d ; ret
0x00000000001099a8 : syscall ; cmp rax, -0xfff ; jae 0x1099bd ; ret
0x00000000001099fe : syscall ; cmp rax, -0xfff ; jae 0x109a43 ; ret
0x0000000000109a55 : syscall ; cmp rax, -0xfff ; jae 0x109a6a ; ret
0x0000000000109a8e : syscall ; cmp rax, -0xfff ; jae 0x109ad3 ; ret
0x0000000000109ae5 : syscall ; cmp rax, -0xfff ; jae 0x109afa ; ret
0x0000000000109b15 : syscall ; cmp rax, -0xfff ; jae 0x109b2a ; ret
0x0000000000109b48 : syscall ; cmp rax, -0xfff ; jae 0x109b5d ; ret
0x0000000000109b75 : syscall ; cmp rax, -0xfff ; jae 0x109b8a ; ret
0x0000000000109c71 : syscall ; cmp rax, -0xfff ; jae 0x109cb9 ; ret
0x0000000000109ed1 : syscall ; cmp rax, -0xfff ; jae 0x109f19 ; ret
0x0000000000109f28 : syscall ; cmp rax, -0xfff ; jae 0x109f3d ; ret
0x0000000000109f55 : syscall ; cmp rax, -0xfff ; jae 0x109f6a ; ret
0x0000000000109f85 : syscall ; cmp rax, -0xfff ; jae 0x109f9a ; ret
0x0000000000109fb8 : syscall ; cmp rax, -0xfff ; jae 0x109fcd ; ret
0x000000000010a521 : syscall ; cmp rax, -0xfff ; jae 0x10a569 ; ret
0x000000000010a581 : syscall ; cmp rax, -0xfff ; jae 0x10a5c9 ; ret
0x000000000010a5d5 : syscall ; cmp rax, -0xfff ; jae 0x10a5ea ; ret
0x000000000010a605 : syscall ; cmp rax, -0xfff ; jae 0x10a61a ; ret
0x000000000010a635 : syscall ; cmp rax, -0xfff ; jae 0x10a64a ; ret
0x000000000010a665 : syscall ; cmp rax, -0xfff ; jae 0x10a67a ; ret
0x000000000010a698 : syscall ; cmp rax, -0xfff ; jae 0x10a6ad ; ret
0x000000000010a6c8 : syscall ; cmp rax, -0xfff ; jae 0x10a6dd ; ret
0x000000000010a6f5 : syscall ; cmp rax, -0xfff ; jae 0x10a70a ; ret
0x000000000010a725 : syscall ; cmp rax, -0xfff ; jae 0x10a73a ; ret
0x000000000010a755 : syscall ; cmp rax, -0xfff ; jae 0x10a76a ; ret
0x000000000010a785 : syscall ; cmp rax, -0xfff ; jae 0x10a79a ; ret
0x0000000000143288 : syscall ; cmp rax, -0xfff ; jae 0x14329d ; ret
0x00000000001432d8 : syscall ; cmp rax, -0xfff ; jae 0x1432ed ; ret
0x0000000000035aa5 : syscall ; cmp rax, -0xfff ; jae 0x35aba ; ret
0x0000000000036175 : syscall ; cmp rax, -0xfff ; jae 0x3618a ; ret
0x0000000000047fef : syscall ; cmp rax, -0xfff ; jae 0x48008 ; xor eax, eax ; ret
0x000000000006c305 : syscall ; cmp rax, -0xfff ; jae 0x6c31a ; ret
0x000000000006c338 : syscall ; cmp rax, -0xfff ; jae 0x6c34d ; ret
0x00000000000bc905 : syscall ; cmp rax, -0xfff ; jae 0xbc91a ; ret
0x00000000000bfc75 : syscall ; cmp rax, -0xfff ; jae 0xbfc8a ; ret
0x00000000000bfca5 : syscall ; cmp rax, -0xfff ; jae 0xbfcba ; ret
0x00000000000ccf25 : syscall ; cmp rax, -0xfff ; jae 0xccf3a ; ret
0x00000000000cd108 : syscall ; cmp rax, -0xfff ; jae 0xcd11d ; ret
0x00000000000cd1e5 : syscall ; cmp rax, -0xfff ; jae 0xcd1fa ; ret
0x00000000000cd26e : syscall ; cmp rax, -0xfff ; jae 0xcd2b3 ; ret
0x00000000000cd2ce : syscall ; cmp rax, -0xfff ; jae 0xcd313 ; ret
0x00000000000cd765 : syscall ; cmp rax, -0xfff ; jae 0xcd77a ; ret
0x00000000000ce1e5 : syscall ; cmp rax, -0xfff ; jae 0xce1fa ; ret
0x00000000000ce385 : syscall ; cmp rax, -0xfff ; jae 0xce39a ; ret
0x00000000000ce3b5 : syscall ; cmp rax, -0xfff ; jae 0xce3ca ; ret
0x00000000000ce415 : syscall ; cmp rax, -0xfff ; jae 0xce42a ; ret
0x00000000000ce445 : syscall ; cmp rax, -0xfff ; jae 0xce45a ; ret
0x00000000000ce475 : syscall ; cmp rax, -0xfff ; jae 0xce48a ; ret
0x00000000000ce4a5 : syscall ; cmp rax, -0xfff ; jae 0xce4ba ; ret
0x00000000000ebfe5 : syscall ; cmp rax, -0xfff ; jae 0xebffa ; ret
0x00000000000ec015 : syscall ; cmp rax, -0xfff ; jae 0xec02a ; ret
0x00000000000ec045 : syscall ; cmp rax, -0xfff ; jae 0xec05a ; ret
0x00000000000ec075 : syscall ; cmp rax, -0xfff ; jae 0xec08a ; ret
0x00000000000ec0a5 : syscall ; cmp rax, -0xfff ; jae 0xec0ba ; ret
0x00000000000ec0d5 : syscall ; cmp rax, -0xfff ; jae 0xec0ea ; ret
0x00000000000ec105 : syscall ; cmp rax, -0xfff ; jae 0xec11a ; ret
0x00000000000ec135 : syscall ; cmp rax, -0xfff ; jae 0xec14a ; ret
0x00000000000f6e71 : syscall ; cmp rax, -0xfff ; jae 0xf6eb9 ; ret
0x00000000000f6ed1 : syscall ; cmp rax, -0xfff ; jae 0xf6f19 ; ret
0x00000000000f8175 : syscall ; cmp rax, -0xfff ; jae 0xf818a ; ret
0x00000000000f8415 : syscall ; cmp rax, -0xfff ; jae 0xf842a ; ret
0x00000000000f8445 : syscall ; cmp rax, -0xfff ; jae 0xf845a ; ret
0x00000000000f8515 : syscall ; cmp rax, -0xfff ; jae 0xf852a ; ret
0x00000000000f8545 : syscall ; cmp rax, -0xfff ; jae 0xf855a ; ret
0x00000000000f8605 : syscall ; cmp rax, -0xfff ; jae 0xf861a ; ret
0x00000000000f8635 : syscall ; cmp rax, -0xfff ; jae 0xf864a ; ret
0x00000000000f866e : syscall ; cmp rax, -0xfff ; jae 0xf86b3 ; ret
0x00000000000f888e : syscall ; cmp rax, -0xfff ; jae 0xf88d3 ; ret
0x00000000000f88ee : syscall ; cmp rax, -0xfff ; jae 0xf8933 ; ret
0x00000000000f8945 : syscall ; cmp rax, -0xfff ; jae 0xf895a ; ret
0x00000000000f8dd5 : syscall ; cmp rax, -0xfff ; jae 0xf8dea ; ret
0x00000000000f8f1e : syscall ; cmp rax, -0xfff ; jae 0xf8f63 ; ret
0x00000000000f8f75 : syscall ; cmp rax, -0xfff ; jae 0xf8f8a ; ret
0x00000000000f8fa5 : syscall ; cmp rax, -0xfff ; jae 0xf8fba ; ret
0x00000000000f8fd5 : syscall ; cmp rax, -0xfff ; jae 0xf8fea ; ret
0x00000000000f9005 : syscall ; cmp rax, -0xfff ; jae 0xf901a ; ret
0x00000000000f9035 : syscall ; cmp rax, -0xfff ; jae 0xf904a ; ret
0x00000000000f906e : syscall ; cmp rax, -0xfff ; jae 0xf90b3 ; ret
0x00000000000f90c5 : syscall ; cmp rax, -0xfff ; jae 0xf90da ; ret
0x00000000000f90f5 : syscall ; cmp rax, -0xfff ; jae 0xf910a ; ret
0x00000000000f9955 : syscall ; cmp rax, -0xfff ; jae 0xf996a ; ret
0x00000000000f9985 : syscall ; cmp rax, -0xfff ; jae 0xf999a ; ret
0x00000000000f99b5 : syscall ; cmp rax, -0xfff ; jae 0xf99ca ; ret
0x00000000000f99e8 : syscall ; cmp rax, -0xfff ; jae 0xf99fd ; ret
0x00000000000fa075 : syscall ; cmp rax, -0xfff ; jae 0xfa08a ; ret
0x00000000000fa0a8 : syscall ; cmp rax, -0xfff ; jae 0xfa0bd ; ret
0x00000000000fa0d5 : syscall ; cmp rax, -0xfff ; jae 0xfa0ea ; ret
0x00000000000fa105 : syscall ; cmp rax, -0xfff ; jae 0xfa11a ; ret
0x00000000000fa135 : syscall ; cmp rax, -0xfff ; jae 0xfa14a ; ret
0x00000000000fa168 : syscall ; cmp rax, -0xfff ; jae 0xfa17d ; ret
0x00000000000fa195 : syscall ; cmp rax, -0xfff ; jae 0xfa1aa ; ret
0x00000000000fa1c5 : syscall ; cmp rax, -0xfff ; jae 0xfa1da ; ret
0x00000000000fa1f5 : syscall ; cmp rax, -0xfff ; jae 0xfa20a ; ret
0x00000000000fcd6e : syscall ; cmp rax, -0xfff ; jae 0xfcdb3 ; ret
0x00000000000fd0d8 : syscall ; cmp rax, -0xfff ; jae 0xfd0ed ; ret
0x00000000000fd871 : syscall ; cmp rax, -0xfff ; jae 0xfd8b9 ; ret
0x00000000000fdfb5 : syscall ; cmp rax, -0xfff ; jae 0xfdfca ; ret
0x00000000000fdfe5 : syscall ; cmp rax, -0xfff ; jae 0xfdffa ; ret
0x00000000000fe015 : syscall ; cmp rax, -0xfff ; jae 0xfe02a ; ret
0x00000000000fe3a5 : syscall ; cmp rax, -0xfff ; jae 0xfe3ba ; ret
0x00000000000fe585 : syscall ; cmp rax, -0xfff ; jae 0xfe59a ; ret
0x00000000000fe5be : syscall ; cmp rax, -0xfff ; jae 0xfe603 ; ret
0x00000000000fe61e : syscall ; cmp rax, -0xfff ; jae 0xfe663 ; ret
0x00000000000fe681 : syscall ; cmp rax, -0xfff ; jae 0xfe6c9 ; ret
0x00000000000fe6e1 : syscall ; cmp rax, -0xfff ; jae 0xfe729 ; ret
0x00000000000fea75 : syscall ; cmp rax, -0xfff ; jae 0xfea8a ; ret
0x00000000000feb15 : syscall ; cmp rax, -0xfff ; jae 0xfeb2a ; ret
0x00000000000feb51 : syscall ; cmp rax, -0xfff ; jae 0xfeb99 ; ret
0x00000000000feca5 : syscall ; cmp rax, -0xfff ; jae 0xfecba ; ret
0x00000000000fecd5 : syscall ; cmp rax, -0xfff ; jae 0xfecea ; ret
0x00000000000fed0e : syscall ; cmp rax, -0xfff ; jae 0xfed53 ; ret
0x00000000000fed65 : syscall ; cmp rax, -0xfff ; jae 0xfed7a ; ret
0x00000000000fed9e : syscall ; cmp rax, -0xfff ; jae 0xfede3 ; ret
0x00000000000fedf5 : syscall ; cmp rax, -0xfff ; jae 0xfee0a ; ret
0x00000000000ff165 : syscall ; cmp rax, -0xfff ; jae 0xff17a ; ret
0x00000000000ff195 : syscall ; cmp rax, -0xfff ; jae 0xff1aa ; ret
0x00000000000ff1c5 : syscall ; cmp rax, -0xfff ; jae 0xff1da ; ret
0x0000000000108d4f : syscall ; test rax, rax ; jl 0x108d90 ; je 0x108d62 ; ret
0x00000000000c86ee : syscall ; xor edx, edx ; add rsp, 0x98 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000016eeb6 : test ah, 0x40 ; jne 0x16efad ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000ac600 : test ah, 0xf0 ; jne 0xac691 ; test ah, ah ; jne 0xac681 ; test al, 0xf0 ; jne 0xac671 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000c9127 : test ah, ah ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x13], cl ; mov rdi, rbx ; call r12
0x00000000000ac605 : test ah, ah ; jne 0xac67c ; test al, 0xf0 ; jne 0xac66c ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000089d1f : test ah, bh ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x000000000008aeaf : test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x00000000000eb597 : test ah, bl ; add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001a4165 : test al, 0 ; add al, bh ; xchg eax, edx ; out dx, al ; call qword ptr [rax]
0x000000000013ac47 : test al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000134c52 : test al, 0 ; add byte ptr [rax], al ; bswap eax ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x00000000000bc655 : test al, 0 ; add byte ptr [rax], al ; call r15
0x0000000000134c72 : test al, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000001369b1 : test al, 0 ; add byte ptr [rax], al ; mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000138b59 : test al, 0 ; add byte ptr [rax], al ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000084808 : test al, 0 ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bc19b : test al, 0 ; add byte ptr [rax], al ; mov rsi, qword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000006bd94 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000139431 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000002cb60 : test al, 0 ; add byte ptr [rax], al ; ret
0x00000000000ff1c1 : test al, 0 ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xff1de ; ret
0x0000000000172567 : test al, 0 ; add byte ptr [rax], al ; test rbx, rbx ; mov qword ptr [rip + 0x2511ab], rbx ; jne 0x172569 ; pop rbx ; ret
0x00000000000fd82e : test al, 0x20 ; je 0xfd84c ; xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x0000000000074136 : test al, 0x28 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x00000000000c80cf : test al, 0x2f ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x000000000016ee64 : test al, 0x40 ; jne 0x16ef3c ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000016ed4c : test al, 0x40 ; jne 0x16ef41 ; test dl, 0x40 ; jne 0x16ed21 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000109acc : test al, 0x73 ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cf6c4 : test al, 0x80 ; or eax, dword ptr [rax] ; mov esi, esi ; movsxd rax, dword ptr [rdx + rsi*4] ; add rax, rdx ; jmp rax
0x00000000000f88cc : test al, 0x85 ; sub al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000090e8b : test al, 0xd ; add bl, al ; lea rax, qword ptr [rip + 0xde11a] ; ret
0x00000000001821bb : test al, 0xe0 ; sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000000ac609 : test al, 0xf0 ; jne 0xac668 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac608 : test al, 0xf0 ; jne 0xac669 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac4f5 : test al, 0xf0 ; jne 0xac66c ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000193339 : test al, 0xfb ; call qword ptr [rax - 0x1f000457]
0x0000000000069b3d : test al, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0xbf08
0x000000000016b63a : test al, 1 ; jne 0x16b67d ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000016ed7a : test al, 4 ; jne 0x16ef01 ; test dl, 4 ; jne 0x16ed21 ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000d8b7b : test al, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x000000000016b636 : test al, al ; je 0x16b661 ; test al, 1 ; jne 0x16b681 ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000098bd1 : test al, al ; jne 0x98c1e ; movzx eax, byte ptr [r9] ; test al, al ; jne 0x98c4f ; mov rax, rdi ; ret
0x0000000000098bd9 : test al, al ; jne 0x98c47 ; mov rax, rdi ; ret
0x000000000011835d : test al, al ; mov byte ptr [r9 + 3], r8b ; jne 0x118303 ; mov rax, rdi ; ret
0x0000000000195d44 : test al, bh ; add byte ptr [rax], al ; adc al, 0x6a ; out dx, eax ; jmp rsp
0x000000000019870c : test al, bh ; add dword ptr [rax], eax ; and al, 0x66 ; stc ; call rsp
0x00000000001072d7 : test al, bh ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rsi + rsi*2 + 0x48], 0x39 ; ret
0x000000000009c64c : test al, cl ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; ret 0x8d44
0x00000000001b69dc : test al, dl ; add dword ptr [rax], eax ; and byte ptr [rsi], cl ; clc ; jmp qword ptr [rax]
0x00000000000d024b : test bh, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffcf8 ; call r12
0x00000000000accc4 : test bh, bh ; add byte ptr [rax], al ; add byte ptr [rbx + 0xa777fff], al ; mov eax, edi ; ret
0x00000000000ddc7c : test bh, cl ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7af7db8c], cl ; div byte ptr [rdi - 0xa] ; ret
0x0000000000070374 : test bh, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000112fe7 : test bh, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000302e1 : test bl, ah ; add al, byte ptr [rax] ; add byte ptr [rcx], dh ; imul al ; ret
0x000000000008a928 : test bl, al ; add byte ptr [rax], al ; add bh, al ; add eax, 0x338eb1 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000198990 : test bl, al ; stc ; dec dword ptr [rax + rdx] ; add al, byte ptr [rax] ; xchg eax, esp ; ret
0x0000000000089f20 : test bl, ch ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x000000000008a440 : test bl, cl ; add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, r8 ; call rax
0x0000000000025db6 : test bl, dh ; add al, byte ptr [rax] ; add bh, dh ; ret 0
0x000000000008a75c : test byte ptr [rax + 0x10033], dl ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000002de66 : test byte ptr [rax + 0x200], bh ; ret
0x000000000012aa67 : test byte ptr [rax + 0x40], 8 ; je 0x12aa7f ; cmp dword ptr [rdi + 0x10], 2 ; je 0x12aa84 ; ret
0x000000000008b03b : test byte ptr [rax + 0x48000000], cl ; mov esi, ebp ; mov rdi, r12 ; call rax
0x00000000000c0736 : test byte ptr [rax + 0x63], 4 ; mov al, 0x48 ; lea esi, dword ptr [rip + 0xc6152] ; add rax, rsi ; jmp rax
0x0000000000134b45 : test byte ptr [rax + 0x63], 4 ; mov bh, 0x48 ; add eax, edi ; jmp rax
0x00000000001378d5 : test byte ptr [rax + 0x63], 4 ; mov cl, 0x48 ; add eax, ecx ; jmp rax
0x00000000000cec4a : test byte ptr [rax + 0x63], 4 ; mov dl, 0x48 ; add eax, edx ; jmp rax
0x00000000000f808e : test byte ptr [rax + 0x82], 0x80 ; lea rax, qword ptr [rip - 0x4c] ; cmove rax, rdx ; ret
0x00000000000908ee : test byte ptr [rax + 0xb0], 0x10 ; lea rax, qword ptr [rip + 0x19ab4] ; cmove rax, rdx ; ret
0x000000000009846a : test byte ptr [rax + 0xf], 0x45 ; xlatb ; add rsp, 8 ; mov rbp, rdx ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000003d17f : test byte ptr [rax + 1], 0xc0 ; sub rdx, rax ; jmp 0x3d1c2
0x0000000000130e95 : test byte ptr [rax + 1], 0xc6 ; cmp rsi, qword ptr [rdx + 0x28] ; ja 0x130e96 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000019947c : test byte ptr [rax + 2], bl ; add byte ptr [rdi + rbx], ah ; sti ; ljmp ptr [rax + rbx*2 + 0x1fd40002] ; sti ; call rsp
0x0000000000199324 : test byte ptr [rax + 2], dl ; add ah, dl ; clc ; cli ; ljmp ptr [rax + rdx*2 - 0x68bfffe] ; cli ; call rsp
0x000000000010518b : test byte ptr [rax + 5], dh ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000001051ab : test byte ptr [rax + 6], dh ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000d6bef : test byte ptr [rax + rax + 0x28890000], dl ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b081c : test byte ptr [rax + rax - 0x38b80000], ah ; ret
0x00000000001109f8 : test byte ptr [rax + rax - 0x9cf0000], ch ; mov rdx, qword ptr [rsp + 0x10] ; mov edi, 0x2000004 ; call rax
0x0000000000044239 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add al, ch ; in al, dx ; fdivp st(7) ; dec dword ptr [rax - 0x77] ; ret
0x0000000000098792 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000013ebe7 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; ror byte ptr [rdi], 0x11 ; and al, 0x28 ; call rdx
0x00000000000e787c : test byte ptr [rax + rax*8], ah ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x5c], al ; and al, 0xa4 ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x00000000000fa058 : test byte ptr [rax + rax], bh ; add byte ptr [rbp - 0x3f6bf040], al ; add rsp, 0x48 ; movzx eax, al ; ret
0x00000000000bc199 : test byte ptr [rax + rbp*4], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; je 0xbc1d8 ; cmp byte ptr [rax - 0x75], cl ; jl 0xbc1dd ; call r15
0x0000000000047122 : test byte ptr [rax + rbp*4], ah ; add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 - 0x64], cl ; and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x8b4c
0x000000000002986c : test byte ptr [rax + rbx*4], ah ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000070241 : test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000000b59d6 : test byte ptr [rax + rcx*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x0000000000054140 : test byte ptr [rax + rcx*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000001321af : test byte ptr [rax + rdi*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x00000000000bc3b4 : test byte ptr [rax + rsi*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x00000000000bc2ad : test byte ptr [rax + rsi*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000006459f : test byte ptr [rax - 0x3f], 0xc8 ; adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000003a5da : test byte ptr [rax - 0x3f], 0xca ; adc dword ptr [rax + rcx*2 + 0x33], esp ; adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000029a3f : test byte ptr [rax - 0x73], 0x3d ; jmp 0xffffffff8902b099
0x00000000001109fe : test byte ptr [rax - 0x75], 0x54 ; and al, 0x10 ; mov edi, 0x2000004 ; call rax
0x0000000000104391 : test byte ptr [rax - 0x75], 0x7d ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x0000000000127f89 : test byte ptr [rax - 0x76000002], ch ; ret
0x00000000000cdf38 : test byte ptr [rax - 0x76b70004], ah ; ret 0x8949
0x00000000000ed0d3 : test byte ptr [rax - 0x76fffffe], al ; ret 0x8d4c
0x00000000000f8109 : test byte ptr [rax - 0x77], 0xdf ; call rax
0x000000000013e999 : test byte ptr [rax - 0x77], 0xef ; call r12
0x0000000000119219 : test byte ptr [rax - 0x77], 0xf0 ; ret
0x00000000000d1374 : test byte ptr [rax - 0x7d], cl ; ret 0xeb01
0x00000000000258c1 : test byte ptr [rax - 0x8fffffb], ah ; ret 0
0x00000000000e1fcf : test byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; adc dh, byte ptr [rax - 0x76b70001] ; ret 0x848b
0x00000000000e693e : test byte ptr [rax], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000111e4f : test byte ptr [rax], ah ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf10
0x000000000013ea6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x00000000000ac00a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x00000000000fe33a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x98 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012e65a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x000000000008d80a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000798da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x0000000000090dea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000097f6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000000a0c2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000014663a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000013605a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cmp dword ptr [rsi + 0x10], 0xc ; je 0x13607e ; xor eax, eax ; ret
0x0000000000136aaa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cmp dword ptr [rsi], 2 ; je 0x136ad0 ; mov eax, 1 ; ret
0x000000000008b25a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cmp qword ptr [rip + 0x3385e8], 0 ; je 0x8b280 ; ret
0x000000000016ef5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000016ef6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000016ef7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000016ef8a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000016ef9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000016eeda : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000016eeea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000016eefa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000016ef0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000016ef1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000016ef2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000016ef3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000016ef4a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000ac65a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000ac67a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000ac66a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x000000000016eeca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x00000000000204ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x16a074] ; ret
0x00000000000204fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x16bf78] ; ret
0x000000000016827a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000163f4a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000016828a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000163f5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000165f1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000d694a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x0000000000079d0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000a766a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000a606a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000a703a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00000000000abfea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov ch, dh ; and ch, 0xf ; je 0xac021 ; add rax, 2 ; ret
0x00000000000a608a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000a848a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a6d3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000a9efa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x0000000000165f5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x0000000000165f7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x0000000000165f6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x0000000000165f4a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000f736a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000a705a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000a099a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a090a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000a095a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a707a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a708a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a706a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x000000000008a76a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rip + 0x33906e], 1 ; ret
0x000000000013002a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rsi], 0xa ; ret
0x000000000013004a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rsi], 0xc ; ret
0x000000000013003a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rsi], 8 ; ret
0x00000000000a767a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a607a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000089ada : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x00000000000ce19a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x66 ; syscall ; ret
0x00000000000ce1ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x68 ; syscall ; ret
0x00000000000ce1aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6b ; syscall ; ret
0x00000000000ce1ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6c ; syscall ; ret
0x00000000000dfd6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xc ; ret
0x000000000011b1aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xca ; ret
0x00000000000ce98a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x000000000007354a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007d88a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000ffc1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000013074a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x00000000001682ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x000000000016b66a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000007ee7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000000abc9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0xabd2e ; ret
0x00000000000abcea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xabd2e ; ret
0x00000000000f735a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000fd96a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x0000000000078cba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x0000000000075eda : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000008807a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x3390be] ; test eax, eax ; js 0x880a1 ; ret
0x0000000000036bca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x38a4b2] ; ret
0x000000000010e9aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x00000000000a60aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000a6d7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000015ae5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a84ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a9f3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x0000000000165f9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x0000000000165fba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x0000000000165fca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x0000000000165fda : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x0000000000165fea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x0000000000165ffa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000016600a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x0000000000165faa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x0000000000165f8a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x00000000000a709a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000a70ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a70da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a70ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a70fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a710a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a70ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a70aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000011b1ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x000000000007f0fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, -1 ; ret
0x00000000000ac02a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, 1 ; ret
0x00000000000ac03a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, 2 ; ret
0x00000000000ac04a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, 3 ; ret
0x00000000000ac05a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000000ac06a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, 5 ; ret
0x00000000000ac07a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000000ac08a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, 7 ; ret
0x000000000016820a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000163eda : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000013e65a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000007685a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007f15a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000013d82a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000012b0ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x295f21] ; mov rax, qword ptr fs:[rax] ; ret
0x000000000007f13a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3433b9] ; ret
0x00000000000215ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3a4d39] ; ret
0x00000000000215ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3a4d59] ; ret
0x000000000002e01a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000007f16a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000000a60ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000015512a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000086dfa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, qword ptr [rsp + 0x48] ; call rax
0x0000000000165f3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x0000000000165f2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00000000000a704a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x00000000000a081a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], r9w ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a097a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], si ; mov byte ptr [rdi + 2], 0 ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a08ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], si ; mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x00000000000a08da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x00000000000a711a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000a712a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000124a8a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movsxd rdi, dword ptr [rdi] ; mov eax, 3 ; syscall ; ret
0x00000000001701ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 0x10] ; movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x000000000016b6ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008d44a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000015afea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000015af6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000001258f9 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; lea eax, dword ptr [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00000000000798e8 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x0000000000036bb8 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, dword ptr [rip + 0x38a4c6] ; ret
0x000000000011b219 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, edi ; ror ax, 8 ; ret
0x00000000000f7329 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x000000000013e645 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x000000000012e5d6 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x000000000007a69a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000011765a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x000000000002014a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000011b28a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; shl edi, 0x10 ; movzx eax, si ; or eax, edi ; bswap eax ; ret
0x000000000011276a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sub eax, edi ; ret
0x0000000000089bea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; test edi, edi ; je 0x89c0f ; mov eax, 0x16 ; ret
0x000000000013ed7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; test edx, edx ; jne 0x13ed9f ; mov eax, 1 ; ret
0x00000000000a9eea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x000000000002de9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x000000000013131a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fd0aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000003b02a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000078cca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x000000000007c36a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; test rdx, rdx ; jne 0x7c38d ; ret
0x000000000006bc6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; ret
0x00000000000a0cca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000000b73dc : test byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rbx + rax*4] ; sub r10, rax ; jmp 0xb740c
0x00000000000f8171 : test byte ptr [rax], al ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xf818e ; ret
0x0000000000166266 : test byte ptr [rbp + 0x48fffffb], ah ; mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000198420 : test byte ptr [rbp - 0x1b6b0008], dh ; add dword ptr [rax], eax ; mov ah, 0xb6 ; clc ; jmp rsp
0x000000000005fa5c : test byte ptr [rbp], ch ; add byte ptr [rax - 0x77], cl ; ret
0x000000000019eedc : test byte ptr [rbp], dl ; add al, dh ; in al, dx ; jmp qword ptr [rax]
0x000000000012fbf8 : test byte ptr [rbx + 0x48fffffe], dl ; mov edi, ebx ; call rax
0x000000000008b190 : test byte ptr [rbx + 0x4c000000], dl ; mov edi, ebp ; mov rdx, rbp ; mov rsi, r12 ; call rax
0x0000000000104e50 : test byte ptr [rbx + 0xa], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000001052c0 : test byte ptr [rbx + 3], bl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000000fc57f : test byte ptr [rbx + rax], ch ; add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x00000000001963ec : test byte ptr [rbx], ah ; add dword ptr [rax], eax ; in al, -0x33 ; int1 ; call rsp
0x000000000009789c : test byte ptr [rbx], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000000e009f : test byte ptr [rbx], bh ; add eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0f607], al ; pop rcx ; add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; ret
0x0000000000198010 : test byte ptr [rbx], bh ; clc ; dec esp ; leave ; add dword ptr [rax], eax ; cmp al, 0xf8 ; jmp rsp
0x0000000000170332 : test byte ptr [rbx], bl ; add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000000b1717 : test byte ptr [rbx], ch ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x7b], al ; in eax, dx ; mov r10, rbp ; setne dl ; jmp 0xb1744
0x000000000009c5d9 : test byte ptr [rbx], dh ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret 0x5a8d
0x000000000019ccdc : test byte ptr [rbx], dh ; add byte ptr [rax], al ; nop ; in eax, -0x17 ; jmp qword ptr [rax]
0x00000000001039f4 : test byte ptr [rcx + 0x31000000], dh ; ror byte ptr [rax - 0x7d], 0x3e ; add byte ptr [rdi + rax - 0xd], dh ; ret
0x000000000003aa5a : test byte ptr [rcx + 0x38], 0 ; add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x000000000008d827 : test byte ptr [rcx + 0x81e8fb], 0 ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000196b84 : test byte ptr [rcx + 1], bl ; add byte ptr [rax + rdx*4 - 0xc], al ; call rsp
0x00000000001ad5dc : test byte ptr [rcx + rax], bh ; add byte ptr [rax + 0x58], dh ; cmc ; jmp qword ptr [rcx]
0x0000000000118f2f : test byte ptr [rcx + rax], bh ; add byte ptr [rax - 0x77], cl ; ret
0x000000000008f7ef : test byte ptr [rcx + rax], ch ; add byte ptr [rax], al ; bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x00000000000b4829 : test byte ptr [rcx + rcx*4 + 0x5c], 0x24 ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000000c7d93 : test byte ptr [rcx - 0x7d], 0xc6 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000147d76 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000008741e : test byte ptr [rcx], bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000000f2b0d : test byte ptr [rcx], ch ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e25dd : test byte ptr [rcx], dh ; add al, byte ptr [rax] ; add byte ptr [rbx - 0x367afbb3], cl ; jle 0xe2670 ; xor ebx, ebx ; mov rdx, rax ; jmp 0xe260f
0x0000000000097c44 : test byte ptr [rcx], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000013dedf : test byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000196b54 : test byte ptr [rdi + 1], dl ; add byte ptr [rax + rdi*2 - 0xc], ah ; call rsp
0x0000000000104edc : test byte ptr [rdi + 7], bh ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000104efc : test byte ptr [rdi + 9], bl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000008792c : test byte ptr [rdi + rax - 8], 1 ; je 0x8794b ; sub rax, 8 ; ret
0x00000000000b42e1 : test byte ptr [rdi + rcx], dl ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000000d26be : test byte ptr [rdi + rdi*8 - 1], bl ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000313b6 : test byte ptr [rdi - 0x17000004], dl ; jo 0x31394 ; add eax, 0xc7834900 ; or byte ptr [rax + 1], cl ; ret
0x000000000009c671 : test byte ptr [rdi], 0x84 ; cdq ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; ret 0x5a8d
0x00000000001039f2 : test byte ptr [rdi], 0x84 ; mov cl, 0 ; add byte ptr [rax], al ; xor eax, eax ; cmp qword ptr [rsi], 0 ; je 0x103a18 ; ret
0x00000000000b081a : test byte ptr [rdi], 0x84 ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000003eb35 : test byte ptr [rdi], 0x84 ; xchg eax, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000084b88 : test byte ptr [rdi], 0x85 ; movsd dword ptr [rdi], dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77cfdb9], cl ; add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x0000000000076d81 : test byte ptr [rdi], 0x88 ; cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 0xe], dh ; mov edx, dword ptr [rdi + 0xc0] ; mov eax, edx ; ret
0x000000000019646c : test byte ptr [rdi], ah ; add dword ptr [rax], eax ; add al, 0x5e ; push qword ptr [rdi + 0x5e540001] ; jmp rsp
0x00000000000a69e8 : test byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x0000000000198bbc : test byte ptr [rdi], bl ; add al, byte ptr [rax] ; mov ah, 0x14 ; cli ; call rsp
0x00000000000ce261 : test byte ptr [rdi], ch ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x000000000007578c : test byte ptr [rdi], dh ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000082fe9 : test byte ptr [rdi], dl ; or byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000000ce2d0 : test byte ptr [rdi], r13b ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x00000000000d1963 : test byte ptr [rdx + 0x31fffffc], bh ; fisttp dword ptr [rax - 0x77] ; fmul dword ptr [rcx + 3] ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x000000000008f761 : test byte ptr [rdx + 0x48000001], bh ; bsr eax, eax ; add rax, rdi ; ret
0x0000000000105429 : test byte ptr [rdx + 3], dh ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000085eb6 : test byte ptr [rdx + rax], bl ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000198ed4 : test byte ptr [rdx + rax], dh ; add ah, al ; jbe 0x198ee4 ; lcall ptr [rsp + rsi + 0x77240002] ; cli ; call rsp
0x00000000000eb49e : test byte ptr [rdx + rax], dh ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; test dword ptr [rip + 0x148fffa], esp ; ret
0x00000000000d5e87 : test byte ptr [rdx - 0x74ffffff], bh ; mov ah, 0x24 ; add byte ptr [rax], 0 ; add byte ptr [rcx + 0x63], cl ; ret 0x8b48
0x00000000000260da : test byte ptr [rdx], ah ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf08
0x0000000000086acf : test byte ptr [rdx], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000031265 : test byte ptr [rdx], al ; add eax, 0x89450000 ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000887de : test byte ptr [rdx], ch ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000001988d4 : test byte ptr [rdx], cl ; add al, byte ptr [rax] ; hlt ; test al, 0xf9 ; lcall ptr [rdx + rcx - 0x560bfffe] ; stc ; call rsp
0x0000000000088a96 : test byte ptr [rdx], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000114add : test byte ptr [rsi + 0x31000000], dl ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000d1d97 : test byte ptr [rsi + 0x31fffff8], al ; fisttp dword ptr [rax - 0x77] ; fmul dword ptr [rcx + 3] ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x000000000019688c : test byte ptr [rsi + 1], al ; add byte ptr [rsp + rcx*4 - 0xd], ah ; ljmp ptr [rsi + rax*2 - 0x72fbffff] ; jmp rsp
0x000000000008270f : test byte ptr [rsi + rax], bh ; add byte ptr [rax + 0x39], cl ; ret
0x00000000001050ff : test byte ptr [rsi + rax], bh ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000097c5c : test byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000008daad : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000009c6e6 : test byte ptr [rsi], ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; ret 0x8d44
0x0000000000198944 : test byte ptr [rsi], cl ; add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; mov edx, 0xe9cfff9 ; add al, byte ptr [rax] ; add al, 0xbb ; stc ; call rsp
0x0000000000097884 : test byte ptr [rsi], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000025daa : test byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add bh, dh ; ret 0
0x000000000012570f : test byte ptr [rsi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x0000000000029557 : test byte ptr [rsi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret 0x860f
0x000000000019965c : test byte ptr [rsi], dl ; add dword ptr [rax], eax ; xchg eax, esp ; ret
0x0000000000104cf7 : test byte ptr [rsp + rcx], al ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000124e26 : test ch, ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x00000000000879e8 : test ch, al ; add byte ptr [rax], al ; add dh, dh ; ret
0x000000000011fd2e : test ch, bl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x2e66
0x000000000012e710 : test ch, ch ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x75], 0x74 ; and al, 0x10 ; mov rdi, rbp ; call r14
0x000000000009c53f : test ch, cl ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret 0x5a8d
0x00000000001986ac : test ch, dh ; add dword ptr [rax], eax ; je 0x1986fe ; stc ; call rsp
0x00000000001add39 : test ch, dh ; jmp rax
0x00000000000ce8c6 : test ch, dl ; add byte ptr [rax], al ; add byte ptr [rax + 0x7f], bh ; ret
0x00000000000ffc78 : test cl, ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000aa80f : test cl, cl ; jne 0xaa808 ; sub rax, 1 ; ret
0x000000000019818c : test cl, dl ; add dword ptr [rax], eax ; add al, 0x58 ; clc ; call rsp
0x000000000016edd7 : test dh, 0x40 ; jne 0x16ed1d ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000016ee1d : test dh, 4 ; jne 0x16ed1d ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000009c626 : test dh, ah ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; ret 0x5a8d
0x0000000000085f5c : test dh, bl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000001309f8 : test dh, ch ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000111517 : test dh, cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 2
0x000000000008a18d : test dh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x00000000001b6fdc : test dh, dl ; add dword ptr [rax], eax ; mov al, 0x2c ; clc ; jmp rdi
0x000000000016ed54 : test dl, 0x40 ; jne 0x16ed19 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000016ed82 : test dl, 4 ; jne 0x16ed19 ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000f2e09 : test dl, ah ; add byte ptr [rax], al ; add byte ptr [rbp - 0x78], al ; je 0xf2e3b ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000195d7c : test dl, bh ; add byte ptr [rax], al ; in al, 0x70 ; out dx, eax ; lcall ptr [rdx + rdi*8 + 0x71940000] ; out dx, eax ; call rsp
0x00000000000f73f8 : test dl, cl ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0x4b01
0x00000000000ffd2b : test dl, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000196589 : test dl, dh ; dec esp ; add dword ptr cs:[rax], eax ; je 0x196520 ; jmp rsp
0x0000000000121e2e : test dl, dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000000e0a19 : test dl, dl ; add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0x53], cl ; or byte ptr [rbp - 0x75], cl ; or byte ptr [rax - 0x77], r9b ; ret 0x1bb
0x00000000000aa6bf : test dl, dl ; jne 0xaa6b8 ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000000d273c : test dl, dl ; jne 0xd2732 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000098d2c : test dl, dl ; mov edx, 0 ; cmove rax, rdx ; ret
0x0000000000104ac9 : test dl, dl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; std ; xor edx, edx ; xor esi, esi ; call rbx
0x0000000000196588 : test dl, r14b ; dec esp ; add dword ptr cs:[rax], eax ; je 0x196521 ; jmp rsp
0x00000000000a6d1b : test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x0000000000169e93 : test dword ptr [rax + 6], ebp ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000000a822b : test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x00000000000a812b : test dword ptr [rax + 8], edx ; add byte ptr [rax], al ; ret
0x000000000016ee5f : test dword ptr [rax + rax + 0x40a80000], edi ; jne 0x16ef41 ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000ac5bf : test dword ptr [rax + rax - 0xf580000], ebp ; jne 0xac671 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000f88cd : test dword ptr [rax + rax], ebp ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000075137 : test dword ptr [rax + rax], edi ; add byte ptr [rcx - 0x7d], cl ; call qword ptr [rax]
0x000000000006a073 : test dword ptr [rax - 0x16000006], edx ; wait ; sar edi, cl ; dec dword ptr [rax - 0x7d] ; ret 0xbf08
0x00000000001056a6 : test dword ptr [rax - 0x4100000b], edi ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00000000000d9802 : test dword ptr [rax - 0x74000002], esp ; cmp byte ptr [rbp - 0x7cb7febd], cl ; ret
0x0000000000089e6b : test dword ptr [rax - 0x75], ecx ; sbb byte ptr [r8 - 0x77], cl ; ret 0x348
0x000000000012332d : test dword ptr [rax - 0x77], 0x1d8948de ; push -0x17ffd5dc ; ret
0x0000000000074200 : test dword ptr [rax - 0x77], 0x50894810 ; sub byte ptr [rax - 0x77], cl ; push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000000ffbac : test dword ptr [rax - 0x77], 0xde7be8f3 ; clc ; dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000f7942 : test dword ptr [rax - 0x7c000002], ecx ; ret
0x0000000000054812 : test dword ptr [rax - 0x7d000000], esp ; ret
0x000000000016a34b : test dword ptr [rax - 0x7fffffff], esi ; cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x0000000000100879 : test dword ptr [rax - 0xe89fe07], 0x7420fa80 ; in al, dx ; mov byte ptr [r9 - 1], 0 ; ret
0x00000000000cd145 : test dword ptr [rax], 0x50f0000 ; cmp rax, -0x1000 ; ja 0xcd166 ; ret
0x0000000000070375 : test dword ptr [rax], 0x89480000 ; ret 0x8b48
0x0000000000195d1d : test dword ptr [rax], 0xef643400 ; push qword ptr [rdi + rsi*8 + 0x65240000] ; out dx, eax ; jmp rsp
0x0000000000195d25 : test dword ptr [rax], 0xef652400 ; jmp rsp
0x00000000001a9095 : test dword ptr [rax], 0xf25d5800 ; jmp rcx
0x00000000000886b3 : test dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000056ba6 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000f830a : test dword ptr [rax], eax ; add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0xf832f ; ret
0x0000000000065023 : test dword ptr [rax], ebx ; xor al, byte ptr [rax] ; add byte ptr [rbx - 0x4d76b], cl ; inc dword ptr [rbx - 0x78f0d006] ; ret
0x0000000000061c05 : test dword ptr [rax], edi ; sar edi, 1 ; inc dword ptr [rcx - 0x77] ; ret 0x8b48
0x000000000016a2eb : test dword ptr [rax], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x000000000010b86b : test dword ptr [rax], esp ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000869e3 : test dword ptr [rbp + 0x48000000], ebp ; add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000105706 : test dword ptr [rbp - 0x41000006], eax ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000105826 : test dword ptr [rbp - 0x41000007], eax ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000000a0bde : test dword ptr [rbp], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000abbd0 : test dword ptr [rbx + 1], ecx ; add byte ptr [rax], al ; ret
0x00000000000ac4f0 : test dword ptr [rbx + 1], edi ; add byte ptr [rax], al ; test al, 0xf0 ; jne 0xac671 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac4f8 : test dword ptr [rbx + 1], esp ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000165e68 : test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x0000000000165e48 : test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x0000000000165d60 : test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000000a8320 : test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x000000000016c577 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016a1f7 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016c9c6 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016a197 : test dword ptr [rbx + rax], esp ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x00000000001057a6 : test dword ptr [rbx - 0x41000004], eax ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000000a2d4d : test dword ptr [rbx], eax ; add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000a0b48 : test dword ptr [rbx], eax ; add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000873dd : test dword ptr [rbx], edi ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x48], bl ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000088969 : test dword ptr [rbx], esi ; add byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; lock add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000008b264 : test dword ptr [rbx], esi ; add byte ptr [rax], al ; je 0x8b276 ; ret
0x0000000000165b6a : test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x000000000016c54d : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a6902 : test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x000000000016c45d : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016c389 : test dword ptr [rcx + 9], eax ; add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 1] ; movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000016c36d : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000cca47 : test dword ptr [rcx + rax - 0x3fcf0000], edx ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e67bf : test dword ptr [rcx + rax - 0x7cb80000], esi ; ret 0x4801
0x00000000000abc17 : test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x0000000000170c07 : test dword ptr [rcx + rax], edx ; add byte ptr [rax], al ; ret
0x00000000000abbe7 : test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x0000000000105746 : test dword ptr [rcx - 0x41000007], edi ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000000f7397 : test dword ptr [rcx], ecx ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000006d373 : test dword ptr [rcx], edx ; add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x000000000006d281 : test dword ptr [rcx], edx ; add byte ptr [rdi], cl ; mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000006f7de : test dword ptr [rdi + rax*8], esp ; add eax, 0x48000000 ; mov eax, edx ; pop rbx ; ret
0x00000000000a6a67 : test dword ptr [rdi + rax], eax ; add byte ptr [rax], al ; ret
0x00000000000a6a47 : test dword ptr [rdi + rax], esp ; add byte ptr [rax], al ; ret
0x000000000005a103 : test dword ptr [rdi + rbp*8 - 1], ecx ; call qword ptr [rax]
0x00000000000eb59d : test dword ptr [rdi + rdi*8 - 1], edi ; inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001057c6 : test dword ptr [rdi - 0x41000005], esi ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000105786 : test dword ptr [rdi*8 + 0x3beffff], ebx ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x000000000012a9e7 : test dword ptr [rdi], esi ; hlt ; dec dword ptr [rax - 0x75] ; jl 0x12aa1d ; sub al, ch ; ret
0x0000000000088796 : test dword ptr [rdx + 1], edi ; add byte ptr [rax], al ; add rsp, 0x10 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000088a56 : test dword ptr [rdx + 1], edx ; add byte ptr [rax], al ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x000000000016a2b9 : test dword ptr [rdx + 2], eax ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000016a289 : test dword ptr [rdx + 2], esi ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000000a6c01 : test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x000000000016c58b : test dword ptr [rdx + 7], ecx ; add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 1] ; movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x00000000000a8009 : test dword ptr [rdx + 9], esi ; add byte ptr [rax], al ; ret
0x00000000000a7a1f : test dword ptr [rdx + rax + 0xf660000], ebx ; je 0xa7a7e ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000016d8c2 : test dword ptr [rdx + rax], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016c292 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000e263a : test dword ptr [rdx + rdi*8 - 1], ecx ; dec dword ptr [rbx + 0x438d044d] ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000105626 : test dword ptr [rdx - 0x41000004], ebx ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00000000001058a6 : test dword ptr [rdx - 0x4100000b], ebp ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x000000000016a171 : test dword ptr [rdx - 0x7ffffffd], ecx ; cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x000000000016a149 : test dword ptr [rdx - 0x7ffffffd], esi ; cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x000000000016a259 : test dword ptr [rdx - 0x7ffffffe], esp ; cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x0000000000165e27 : test dword ptr [rdx], eax ; add byte ptr [rax], al ; ret
0x00000000000995d1 : test dword ptr [rdx], esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000016a1c9 : test dword ptr [rdx], esi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x00000000000a0b6d : test dword ptr [rsi + 0x66000000], edi ; pmovmskb eax, mm1 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000cfb03 : test dword ptr [rsi + 0xf000001], ebx ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x000000000016ed7d : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; test dl, 4 ; jne 0x16ed1e ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000170592 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000088d12 : test dword ptr [rsi + 1], ebx ; add byte ptr [rax], al ; add rsp, 0x10 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d8335 : test dword ptr [rsi + 4], esi ; add byte ptr [rax], al ; mov dword ptr [rbx + 0x2c], eax ; jmp 0xd830b
0x00000000000a6a25 : test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x00000000000a6a05 : test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x00000000000a691d : test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x0000000000105567 : test dword ptr [rsi - 0x41000006], esi ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000105866 : test dword ptr [rsi - 0x4100000a], edx ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000000cec45 : test dword ptr [rsi - 0x976fff5], 0xb2046348 ; add rax, rdx ; jmp rax
0x0000000000083307 : test dword ptr [rsi], ebx ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x00000000001005cb : test eax, 0x64002c08 ; mov dword ptr [rax], 0x16 ; mov eax, 0xffffffff ; ret
0x000000000002e063 : test eax, 0x6400392d ; add rax, qword ptr [0] ; ret
0x0000000000158d96 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000146467 : test eax, 0x90ff0027 ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000014d982 : test eax, 0xe3c4c9eb ; jns 0x14d9fd ; rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d9d3 : test eax, 0xe3c4c9eb ; jns 0x14da4e ; rcr dword ptr [rdx], 0xf ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014dad2 : test eax, 0xe3c4c9eb ; jns 0x14db4d ; rcr dword ptr [rdx], 0xf ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014dc71 : test eax, 0xe3c4c9eb ; jns 0x14dcec ; rcr dword ptr [rdx], 0xf ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014e063 : test eax, 0xe3c4c9eb ; jns 0x14e0de ; rcr dword ptr [rdx], 0xf ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014e162 : test eax, 0xe3c4c9eb ; jns 0x14e1dd ; rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014e1b3 : test eax, 0xe3c4c9eb ; jns 0x14e22e ; rcr dword ptr [rdx], 0xf ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014e2b2 : test eax, 0xe3c4c9eb ; jns 0x14e32d ; rcr dword ptr [rdx], 0xf ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014e993 : test eax, 0xe3c4c9eb ; jns 0x14ea0e ; rcr dword ptr [rdx], 0xf ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014ea92 : test eax, 0xe3c4c9eb ; jns 0x14eb0d ; rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000ac571 : test eax, 1 ; je 0xac4e4 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac621 : test eax, 1 ; je 0xac69b ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000bc7ef : test eax, eax ; cmove rax, rdx ; add rsp, 0x28 ; ret
0x0000000000117771 : test eax, eax ; cmove rax, rdx ; mov qword ptr [rip + 0x2ad9a2], rax ; pop rbp ; ret
0x000000000010076c : test eax, eax ; je 0x100783 ; mov qword ptr [rax + 8], rdi ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000001007a1 : test eax, eax ; je 0x1007b0 ; mov qword ptr [rax], rdx ; ret
0x000000000010690c : test eax, eax ; je 0x1069b0 ; call rax
0x0000000000106a83 : test eax, eax ; je 0x106b88 ; call rax
0x0000000000114739 : test eax, eax ; je 0x11471d ; mov rax, qword ptr [r12 + 0x38] ; jmp 0x114711
0x0000000000114eaf : test eax, eax ; je 0x114edb ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x0000000000117500 : test eax, eax ; je 0x117534 ; call rax
0x00000000001177ce : test eax, eax ; je 0x117814 ; lea rsi, qword ptr [rbp - 0x20] ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x0000000000122225 : test eax, eax ; je 0x122235 ; mov rdi, rbx ; call rax
0x000000000012251d : test eax, eax ; je 0x12252d ; mov rdi, rbx ; call rax
0x000000000012262d : test eax, eax ; je 0x122645 ; lea rdi, qword ptr [rip + 0x2a3068] ; call rax
0x000000000012df71 : test eax, eax ; je 0x12df81 ; mov rdi, rsp ; call rax
0x000000000012dfa9 : test eax, eax ; je 0x12dfd0 ; add rsp, 0x30 ; lea rax, qword ptr [rip + 0x297d88] ; pop rbx ; ret
0x000000000012e05c : test eax, eax ; je 0x12e06c ; mov rdi, rsp ; call rax
0x000000000012e917 : test eax, eax ; je 0x12e927 ; mov rdi, rbp ; call rax
0x000000000012f97a : test eax, eax ; je 0x12f98a ; mov rdi, rbx ; call rax
0x000000000012fbf5 : test eax, eax ; je 0x12fa9b ; mov rdi, rbx ; call rax
0x000000000012fcec : test eax, eax ; je 0x12fcfc ; mov rdi, rbx ; call rax
0x0000000000134af0 : test eax, eax ; je 0x134b08 ; lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x00000000001354e8 : test eax, eax ; je 0x1354f8 ; mov rdi, r12 ; call rax
0x00000000001356b9 : test eax, eax ; je 0x1356cb ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000136a6e : test eax, eax ; je 0x136993 ; mov rdi, rbx ; call rax
0x00000000001369a5 : test eax, eax ; je 0x1369b5 ; mov rdi, r12 ; call rax
0x0000000000136b96 : test eax, eax ; je 0x136ba6 ; mov rdi, rbp ; call rax
0x0000000000136db6 : test eax, eax ; je 0x136dc6 ; mov rdi, rbp ; call rax
0x000000000013788d : test eax, eax ; je 0x13789f ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000137f79 : test eax, eax ; je 0x137f89 ; mov rdi, r12 ; call rax
0x00000000001382ed : test eax, eax ; je 0x1382ff ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000013ab88 : test eax, eax ; je 0x13ab1a ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000013b879 : test eax, eax ; je 0x13b88b ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013bf92 : test eax, eax ; je 0x13bfa4 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000146a42 : test eax, eax ; je 0x146a6f ; mov rax, qword ptr [rax] ; add rax, qword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x00000000001721bc : test eax, eax ; je 0x1721cb ; call rax
0x00000000000204ab : test eax, eax ; je 0x204bb ; mov rdi, rbp ; call rax
0x00000000000206fc : test eax, eax ; je 0x20721 ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x000000000002adfd : test eax, eax ; je 0x2ae07 ; call rax
0x000000000002c359 : test eax, eax ; je 0x2c363 ; call rax
0x000000000006efa5 : test eax, eax ; je 0x6efc3 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006f075 : test eax, eax ; je 0x6f093 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x00000000000708f9 : test eax, eax ; je 0x70917 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000080a3d : test eax, eax ; je 0x80a47 ; call rax
0x0000000000087dd9 : test eax, eax ; je 0x87de3 ; call rax
0x0000000000097e06 : test eax, eax ; je 0x97e2d ; bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x0000000000097fff : test eax, eax ; je 0x9801b ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x00000000000a0cfa : test eax, eax ; je 0xa0cda ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000a0d59 : test eax, eax ; je 0xa0ce1 ; bsr eax, eax ; add rax, rdi ; add rax, r8 ; ret
0x00000000000abd9d : test eax, eax ; je 0xabd93 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ac30b : test eax, eax ; je 0xac347 ; mov eax, dword ptr [rsi + 8] ; mov dword ptr [rdi + 0xc], eax ; mov rax, rbx ; pop rbx ; ret
0x00000000000ac37b : test eax, eax ; je 0xac375 ; mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c7c2e : test eax, eax ; je 0xc7c50 ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000cd38f : test eax, eax ; je 0xcd399 ; call rax
0x00000000000cd571 : test eax, eax ; je 0xcd57e ; call rax
0x00000000000f8102 : test eax, eax ; je 0xf815b ; xor edx, edx ; xor esi, esi ; mov rdi, rbx ; call rax
0x000000000012d7c8 : test eax, eax ; jne 0x12d7c9 ; mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013eab6 : test eax, eax ; jne 0x13eb18 ; cmp dword ptr [rdi + 0x20], esi ; jbe 0x13eae0 ; add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000006bc5f : test eax, eax ; jne 0x6bc78 ; mov rax, rbx ; pop rbx ; ret
0x0000000000090dc7 : test eax, eax ; jne 0x90e27 ; xor rax, rax ; ret
0x0000000000090d87 : test eax, eax ; jne 0x90e4b ; xor rax, rax ; ret
0x0000000000097f51 : test eax, eax ; jne 0x97fb0 ; pmovmskb eax, xmm1 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000ac7f2 : test eax, eax ; jne 0xac7d8 ; mov rax, rdi ; ret
0x00000000000c8265 : test eax, eax ; jne 0xc829c ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ff202 : test eax, eax ; jns 0xff214 ; mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x000000000014391a : test eax, eax ; js 0x14395d ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x0000000000143d71 : test eax, eax ; js 0x143dae ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000143dd1 : test eax, eax ; js 0x143e0e ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000079f06 : test eax, eax ; js 0x79f51 ; mov qword ptr [rbx + 0x90], rax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000bbadf : test eax, eax ; js 0xbbb25 ; cmp eax, 0x19 ; jg 0xbbb0d ; mov rax, rbx ; pop rbx ; ret
0x00000000000f71b3 : test eax, eax ; js 0xf71d3 ; cmp rax, rbx ; setg al ; pop rbx ; ret
0x00000000000fe539 : test eax, eax ; js 0xfe50f ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001199b3 : test eax, eax ; mov dword ptr [rax + 0xc], r8d ; jne 0x11995f ; mov rax, rdi ; ret
0x00000000000acae3 : test eax, eax ; mov dword ptr [rdi + 8], eax ; je 0xacaa2 ; mov rax, rbx ; pop rbx ; ret
0x00000000000ff232 : test eax, eax ; mov eax, 0 ; cmove rax, rbx ; pop rbx ; ret
0x00000000000fe9c1 : test eax, eax ; mov eax, 0x100 ; cmovns rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x000000000010081c : test eax, eax ; mov edx, eax ; jne 0x100817 ; mov r9, rcx ; mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x0000000000089d19 : test eax, eax ; mov qword ptr [rbx], rax ; je 0x89e2e ; mov rsi, r14 ; call rax
0x0000000000103a7d : test eax, eax ; mov qword ptr [rbx], rax ; setne al ; movzx eax, al ; pop rbx ; ret
0x0000000000099213 : test eax, eax ; mov rax, rbx ; pop rbx ; cmovne rax, rdx ; ret
0x0000000000130958 : test eax, eax ; mov rbx, rax ; jne 0x1308fc ; xor eax, eax ; pop rbx ; ret
0x00000000000879f6 : test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000016a123 : test eax, ebx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x0000000000125a3b : test eax, edi ; add byte ptr [rax], al ; add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x000000000002a0ba : test eax, edx ; add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; in al, 0xf ; test byte ptr [rip - 0x76000002], al ; ret
0x0000000000088973 : test eax, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000eb193 : test eax, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; nop ; sub dl, bh ; dec dword ptr [rax + 1] ; ret
0x000000000016a31b : test eax, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x000000000006bbe1 : test ebp, ebp ; je 0x6bc0d ; add rsp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000090cf0 : test ebx, ebp ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000000cd565 : test ebx, ebx ; je 0xcd513 ; mov rdi, qword ptr [rbx] ; mov rax, qword ptr [rdi + 0x10] ; test rax, rax ; je 0xcd58a ; call rax
0x00000000001196b6 : test ebx, ebx ; jne 0x1196d5 ; add rsp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000079b6c : test ebx, ebx ; jne 0x79b8b ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f71ae : test ebx, ebx ; js 0xf71d0 ; test rax, rax ; js 0xf71d8 ; cmp rax, rbx ; setg al ; pop rbx ; ret
0x000000000016a100 : test ebx, edi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x00000000001932f5 : test ebx, edi ; call qword ptr [rax]
0x0000000000130528 : test ebx, esp ; add dword ptr [rax], eax ; add byte ptr [rbp + 0xf1374d2], al ; mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x000000000019b8a1 : test ecx, ebp ; jmp rax
0x000000000016ed42 : test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000000d7ccd : test ecx, ecx ; je 0xd7ce0 ; mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000e25e5 : test ecx, ecx ; jle 0xe2668 ; xor ebx, ebx ; mov rdx, rax ; jmp 0xe2607
0x000000000006f7db : test ecx, ecx ; jne 0x6f773 ; mov dword ptr fs:[rax], 5 ; mov rax, rdx ; pop rbx ; ret
0x000000000007891b : test ecx, ecx ; jne 0x788b3 ; mov dword ptr fs:[rax], 5 ; mov rax, rdx ; pop rbx ; ret
0x00000000000adb29 : test ecx, ecx ; jne 0xadae8 ; mov rax, rdx ; ret
0x00000000001259b2 : test ecx, edx ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000e6683 : test edi, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001721b3 : test edi, edi ; je 0x1721d9 ; mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x1721d4 ; call rax
0x0000000000036399 : test edi, edi ; je 0x363c1 ; mov eax, 1 ; shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000036bf5 : test edi, edi ; jne 0x36c15 ; lea edx, dword ptr [rax - 1] ; mov dword ptr [rip + 0x38a486], edx ; ret
0x000000000004abad : test edi, edi ; mov byte ptr [rsi], al ; jne 0x4aba1 ; mov rax, rsi ; ret
0x000000000016a229 : test edx, edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x0000000000097799 : test edx, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000116741 : test edx, edx ; cmove rdx, rax ; xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x0000000000100798 : test edx, edx ; je 0x1007b1 ; mov qword ptr [rdx + 8], rax ; test rax, rax ; je 0x1007b9 ; mov qword ptr [rax], rdx ; ret
0x0000000000107730 : test edx, edx ; je 0x10774d ; cmp rdi, rdx ; jne 0x107735 ; mov rax, qword ptr [rax + 8] ; ret
0x000000000014d383 : test edx, edx ; je 0x14d36d ; movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x000000000014d4bf : test edx, edx ; je 0x14d4aa ; movsxd rax, ecx ; add rax, rdi ; ret
0x000000000002d9cd : test edx, edx ; je 0x2d9ea ; and esi, dword ptr [rdi + 0x10] ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000002da18 : test edx, edx ; je 0x2d9fe ; and esi, dword ptr [rdi + 0x10] ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000008db0b : test edx, edx ; je 0x8db27 ; bsf rax, rdx ; ret
0x000000000008db0b : test edx, edx ; je 0x8db28 ; bsf rax, rdx ; ret
0x000000000008daaa : test edx, edx ; je 0x8db3b ; bsf rax, rdx ; ret
0x000000000008daaa : test edx, edx ; je 0x8db3c ; bsf rax, rdx ; ret
0x000000000008dcda : test edx, edx ; je 0x8dd07 ; bsf rax, rdx ; ret
0x000000000008dcda : test edx, edx ; je 0x8dd08 ; bsf rax, rdx ; ret
0x000000000008dc6a : test edx, edx ; je 0x8dd1b ; bsf rax, rdx ; ret
0x000000000008dc6a : test edx, edx ; je 0x8dd1c ; bsf rax, rdx ; ret
0x00000000000d263a : test edx, edx ; jne 0xd2633 ; nop ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ac9ff : test edx, edx ; mov dword ptr [rax], edx ; jne 0xac9ff ; ret
0x000000000004ac29 : test edx, edx ; movzx eax, byte ptr [r8 + rdi] ; mov rdi, rdx ; mov byte ptr [rsi], al ; jne 0x4ac21 ; mov rax, rsi ; ret
0x0000000000065169 : test edx, esi ; xor dword ptr [rax], eax ; add byte ptr [rbx - 0x4d76b], cl ; inc dword ptr [rbx - 0x78f0d006] ; ret 0x58
0x00000000000f7341 : test esi, 0x16b8ff80 ; add byte ptr [rax], al ; add byte ptr [rsp + rax - 0xd], dh ; ret
0x0000000000087685 : test esi, ebx ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x48], bl ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000016ed35 : test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000008dbd1 : test esi, esi ; jne 0x8dbe0 ; xor rax, rax ; ret
0x0000000000085f66 : test esp, ebp ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x00000000000872f7 : test esp, ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000016ed4f : test esp, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x00000000000282f6 : test esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000000f892c : test qword ptr [rax + rax], rbp ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000100878 : test qword ptr [rax - 0xe89fe07], 0x7420fa80 ; in al, dx ; mov byte ptr [r9 - 1], 0 ; ret
0x0000000000036272 : test qword ptr [rdi + rcx*8], rax ; setne al ; movzx eax, al ; ret
0x0000000000036425 : test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x000000000011835c : test r8b, r8b ; mov byte ptr [r9 + 3], r8b ; jne 0x118304 ; mov rax, rdi ; ret
0x00000000001199b2 : test r8d, r8d ; mov dword ptr [rax + 0xc], r8d ; jne 0x119960 ; mov rax, rdi ; ret
0x00000000000adb28 : test r9d, r9d ; jne 0xadae9 ; mov rax, rdx ; ret
0x00000000000ac570 : test rax, 1 ; je 0xac4e5 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac620 : test rax, 1 ; je 0xac69c ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000bc7ee : test rax, rax ; cmove rax, rdx ; add rsp, 0x28 ; ret
0x0000000000117770 : test rax, rax ; cmove rax, rdx ; mov qword ptr [rip + 0x2ad9a2], rax ; pop rbp ; ret
0x000000000010076b : test rax, rax ; je 0x100784 ; mov qword ptr [rax + 8], rdi ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000010076a : test rax, rax ; je 0x100785 ; mov qword ptr [rax + 8], rdi ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000001007a0 : test rax, rax ; je 0x1007b1 ; mov qword ptr [rax], rdx ; ret
0x0000000000100fcf : test rax, rax ; je 0x10101a ; add rdx, 8 ; mov qword ptr [rip + 0x2c3111], rdx ; ret
0x000000000010690b : test rax, rax ; je 0x1069b1 ; call rax
0x0000000000106a82 : test rax, rax ; je 0x106b89 ; call rax
0x0000000000114eae : test rax, rax ; je 0x114edc ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x0000000000117227 : test rax, rax ; je 0x117235 ; ret
0x00000000001174ff : test rax, rax ; je 0x117535 ; call rax
0x00000000001177cd : test rax, rax ; je 0x117815 ; lea rsi, qword ptr [rbp - 0x20] ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x0000000000119469 : test rax, rax ; je 0x119481 ; add rsp, 8 ; ret
0x0000000000122224 : test rax, rax ; je 0x122236 ; mov rdi, rbx ; call rax
0x000000000012251c : test rax, rax ; je 0x12252e ; mov rdi, rbx ; call rax
0x000000000012262c : test rax, rax ; je 0x122646 ; lea rdi, qword ptr [rip + 0x2a3068] ; call rax
0x000000000012d734 : test rax, rax ; je 0x12d72d ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012df70 : test rax, rax ; je 0x12df82 ; mov rdi, rsp ; call rax
0x000000000012e05b : test rax, rax ; je 0x12e06d ; mov rdi, rsp ; call rax
0x000000000012e916 : test rax, rax ; je 0x12e928 ; mov rdi, rbp ; call rax
0x000000000012f979 : test rax, rax ; je 0x12f98b ; mov rdi, rbx ; call rax
0x000000000012fbf4 : test rax, rax ; je 0x12fa9c ; mov rdi, rbx ; call rax
0x000000000012fceb : test rax, rax ; je 0x12fcfd ; mov rdi, rbx ; call rax
0x0000000000134aef : test rax, rax ; je 0x134b09 ; lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x00000000001354e7 : test rax, rax ; je 0x1354f9 ; mov rdi, r12 ; call rax
0x00000000001356b8 : test rax, rax ; je 0x1356cc ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000136a6d : test rax, rax ; je 0x136994 ; mov rdi, rbx ; call rax
0x00000000001369a4 : test rax, rax ; je 0x1369b6 ; mov rdi, r12 ; call rax
0x0000000000136b95 : test rax, rax ; je 0x136ba7 ; mov rdi, rbp ; call rax
0x0000000000136db5 : test rax, rax ; je 0x136dc7 ; mov rdi, rbp ; call rax
0x000000000013788c : test rax, rax ; je 0x1378a0 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000137f78 : test rax, rax ; je 0x137f8a ; mov rdi, r12 ; call rax
0x00000000001382ec : test rax, rax ; je 0x138300 ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000013ab87 : test rax, rax ; je 0x13ab1b ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000013ab0c : test rax, rax ; je 0x13ab1e ; pop rbx ; ret
0x000000000013b878 : test rax, rax ; je 0x13b88c ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013bf91 : test rax, rax ; je 0x13bfa5 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000146a41 : test rax, rax ; je 0x146a70 ; mov rax, qword ptr [rax] ; add rax, qword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x00000000001721bb : test rax, rax ; je 0x1721cc ; call rax
0x00000000000204aa : test rax, rax ; je 0x204bc ; mov rdi, rbp ; call rax
0x000000000002adfc : test rax, rax ; je 0x2ae08 ; call rax
0x000000000002c358 : test rax, rax ; je 0x2c364 ; call rax
0x000000000006efa4 : test rax, rax ; je 0x6efc4 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006f074 : test rax, rax ; je 0x6f094 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x00000000000708f8 : test rax, rax ; je 0x70918 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000793b5 : test rax, rax ; je 0x79429 ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000079fdc : test rax, rax ; je 0x79fee ; pop rbx ; ret
0x0000000000080a3c : test rax, rax ; je 0x80a48 ; call rax
0x0000000000087dd8 : test rax, rax ; je 0x87de4 ; call rax
0x000000000008d82f : test rax, rax ; je 0x8d849 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000abd9c : test rax, rax ; je 0xabd94 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ac37a : test rax, rax ; je 0xac376 ; mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c7c2d : test rax, rax ; je 0xc7c51 ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000cd38e : test rax, rax ; je 0xcd39a ; call rax
0x00000000000cd570 : test rax, rax ; je 0xcd57f ; call rax
0x00000000000f8101 : test rax, rax ; je 0xf815c ; xor edx, edx ; xor esi, esi ; mov rdi, rbx ; call rax
0x00000000000fe97b : test rax, rax ; je 0xfe988 ; ret
0x0000000000108d51 : test rax, rax ; jl 0x108d8e ; je 0x108d60 ; ret
0x000000000013b7f4 : test rax, rax ; jne 0x13b7e6 ; pop rbx ; ret
0x000000000007ee63 : test rax, rax ; jne 0x7ee5e ; ret
0x00000000000801d4 : test rax, rax ; jne 0x8020b ; xor edi, edi ; call qword ptr [r15]
0x000000000008b8de : test rax, rax ; jne 0x8b8d6 ; ret
0x00000000000ff6af : test rax, rax ; jne 0xff693 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000ff880 : test rax, rax ; jne 0xff863 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000f71b2 : test rax, rax ; js 0xf71d4 ; cmp rax, rbx ; setg al ; pop rbx ; ret
0x0000000000089d18 : test rax, rax ; mov qword ptr [rbx], rax ; je 0x89e2f ; mov rsi, r14 ; call rax
0x0000000000103a7c : test rax, rax ; mov qword ptr [rbx], rax ; setne al ; movzx eax, al ; pop rbx ; ret
0x0000000000144190 : test rax, rax ; mov r8, qword ptr [rsp + 8] ; jns 0x1440b3 ; jmp 0x144171
0x0000000000099212 : test rax, rax ; mov rax, rbx ; pop rbx ; cmovne rax, rdx ; ret
0x0000000000130957 : test rax, rax ; mov rbx, rax ; jne 0x1308fd ; xor eax, eax ; pop rbx ; ret
0x000000000006c2af : test rax, rax ; sete al ; add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
0x000000000012d6e5 : test rax, rax ; sete al ; add rsp, 8 ; ret
0x000000000006bbe0 : test rbp, rbp ; je 0x6bc0e ; add rsp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000cd564 : test rbx, rbx ; je 0xcd514 ; mov rdi, qword ptr [rbx] ; mov rax, qword ptr [rdi + 0x10] ; test rax, rax ; je 0xcd58b ; call rax
0x00000000001196b5 : test rbx, rbx ; jne 0x1196d6 ; add rsp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000001196b4 : test rbx, rbx ; jne 0x1196d7 ; add rsp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000079b6b : test rbx, rbx ; jne 0x79b8c ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d7ccc : test rcx, rcx ; je 0xd7ce1 ; mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000001721b2 : test rdi, rdi ; je 0x1721da ; mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x1721d5 ; call rax
0x000000000004abac : test rdi, rdi ; mov byte ptr [rsi], al ; jne 0x4aba2 ; mov rax, rsi ; ret
0x0000000000116740 : test rdx, rdx ; cmove rdx, rax ; xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x000000000010772f : test rdx, rdx ; je 0x10774e ; cmp rdi, rdx ; jne 0x107736 ; mov rax, qword ptr [rax + 8] ; ret
0x000000000008db0a : test rdx, rdx ; je 0x8db28 ; bsf rax, rdx ; ret
0x000000000008db0a : test rdx, rdx ; je 0x8db29 ; bsf rax, rdx ; ret
0x000000000008daa9 : test rdx, rdx ; je 0x8db3c ; bsf rax, rdx ; ret
0x000000000008daa9 : test rdx, rdx ; je 0x8db3d ; bsf rax, rdx ; ret
0x000000000008dcd9 : test rdx, rdx ; je 0x8dd08 ; bsf rax, rdx ; ret
0x000000000008dcd9 : test rdx, rdx ; je 0x8dd09 ; bsf rax, rdx ; ret
0x000000000008dc69 : test rdx, rdx ; je 0x8dd1c ; bsf rax, rdx ; ret
0x000000000008dc69 : test rdx, rdx ; je 0x8dd1d ; bsf rax, rdx ; ret
0x000000000008dbd0 : test rsi, rsi ; jne 0x8dbe1 ; xor rax, rax ; ret
0x00000000000ac647 : test spl, spl ; jne 0xac67d ; test al, 0xf0 ; jne 0xac66d ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000c5dd1 : vcmptruepd xmm15, xmm10, xmmword ptr [rax] ; ret 0x144
0x000000000013ac9b : vpaddw xmm7, xmm15, xmm7 ; add eax, dword ptr [rax] ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8e0f
0x0000000000032b95 : vpsubsb xmm10, xmm15, xmmword ptr [rsi + rbp*4 - 0x72b2fffb] ; jl 0x32bb8 ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x0000000000125bf1 : wait ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; fisttp dword ptr [rax + 1] ; ret
0x0000000000122221 : wait ; add byte ptr [rax], al ; test rax, rax ; je 0x122239 ; mov rdi, rbx ; call rax
0x0000000000159ea7 : wait ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000f4bc9 : wait ; cmp al, 9 ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x0000000000105e06 : wait ; int1 ; dec dword ptr [rax - 0x75] ; jge 0x105e14 ; call rbx
0x0000000000047c09 : wait ; mov edx, 0xc1480037 ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x0000000000087dd1 : wait ; nop ; xor eax, dword ptr [rax] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x87deb ; call rax
0x0000000000047321 : wait ; or al, 5 ; add byte ptr [rax - 0x77], cl ; ret 0x3dbe
0x000000000002db01 : wait ; push rax ; or eax, 0xf8834800 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000109d31 : wait ; rol byte ptr [rax], 1 ; add byte ptr [rax - 0x75], cl ; and al, 8 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006a079 : wait ; sar edi, cl ; dec dword ptr [rax - 0x7d] ; ret 0xbf08
0x0000000000002fa3 : wait ; scasb al, byte ptr [rdi] ; outsd dx, dword ptr [rsi] ; mov byte ptr [rbx], cl ; and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000da1a5 : xchg ah, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000014858f : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000148db3 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014a6ff : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000148ea3 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000148cc3 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000147c8b : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000972ef : xchg al, bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000014849b : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000881f1 : xchg bh, bh ; dec dword ptr [rax - 0x77] ; out dx, al ; mov rdi, rax ; mov rbx, rax ; call 0x844de
0x000000000014e2bc : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014dadc : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001505dd : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001502e1 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014f9e1 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014fce1 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014f3d9 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000012519d : xchg byte ptr [rax + 0x4c000000], al ; mov dword ptr [rbp - 0x78], edx ; call 0x913bb
0x0000000000159126 : xchg byte ptr [rax + 0x63490003], ch ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000aac92 : xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x000000000014970b : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x00000000000f3a38 : xchg byte ptr [rax + rax], al ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x000000000014b25f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014aa3f : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x0000000000147f0f : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014a21f : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x0000000000096fc7 : xchg byte ptr [rax - 0x73], cl ; add dword ptr [r9 + 0x39], ecx ; ret 0x8949
0x000000000014824f : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000149263 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000056125 : xchg byte ptr [rax - 0x7d000000], ah ; ret
0x0000000000080be6 : xchg byte ptr [rax], ah ; or byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000014856b : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000109761 : xchg byte ptr [rax], al ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10977e ; ret
0x0000000000086cc6 : xchg byte ptr [rax], al ; or dword ptr [rax], eax ; add rsp, 0x80 ; mov rax, rbx ; pop rbx ; ret
0x000000000003ad91 : xchg byte ptr [rax], bh ; add byte ptr [rbp + 0xa], dh ; jmp 0x3adc3
0x000000000014dc7b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000579a6 : xchg byte ptr [rax], dh ; adc eax, 0x894c0000 ; ret 0x894c
0x000000000014863b : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ad7f : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a55f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000077c26 : xchg byte ptr [rbp - 6], bh ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000159d26 : xchg byte ptr [rbx + rax + 0x14634900], bl ; xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000014af1f : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x00000000001483ef : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000149443 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000cec46 : xchg byte ptr [rbx], cl ; add byte ptr [rcx + 0x46348f6], cl ; mov dl, 0x48 ; add eax, edx ; jmp rax
0x000000000002eb42 : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x0000000000149623 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000006cc21 : xchg byte ptr [rcx], dl ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x0000000000147fdf : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000014e16c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d98c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000c8874 : xchg byte ptr [rdi], ch ; add byte ptr [rcx], dh ; shl byte ptr [rdi + rax*8], cl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rdx ; ret
0x000000000014ea9c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000090ba1 : xchg byte ptr [rdx + 0x48000002], ch ; add eax, edi ; add rax, rcx ; ret
0x00000000001484bf : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000149533 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014a07f : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000003ce9f : xchg byte ptr [rdx], ah ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x48 ; add eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000400e4 : xchg byte ptr [rdx], ah ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x70 ; add eax, 0x80d0568d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000147d51 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148e75 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148f65 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148d85 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001480af : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x000000000014f686 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a1b5 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014aeb5 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000150586 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014fc86 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a9d5 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014e06d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014f37e : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014e99d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014831f : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001a5cb9 : xchg byte ptr [rsp + rcx*4], al ; add ecx, dword ptr [rbp + 0x4c0002] ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x000000000014ca0f : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c82f : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d207 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c127 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014d027 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001000ea : xchg cl, dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000010008a : xchg cl, dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000014b1f5 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a015 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014e1bd : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014d9dd : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000147d75 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000003ceff : xchg dl, al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x48 ; or byte ptr [rbp - 0x57f2faf], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040144 : xchg dl, al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x70 ; or byte ptr [rbp - 0x57f2faa], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000148c95 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148ab5 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148ba5 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000025d96 : xchg dl, cl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x3d77f02e], al ; add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x00000000000f7289 : xchg dword ptr [rax + 0x48000000], eax ; mov dword ptr [rsi + 0x78], eax ; xor eax, eax ; ret
0x00000000000740d2 : xchg dword ptr [rax + 0x48000000], esp ; cmp dword ptr [rax + 0x30], 0 ; je 0x740ec ; ret
0x000000000007510c : xchg dword ptr [rax + 1], edi ; add byte ptr [rax], al ; mov rdx, r15 ; mov rdi, r12 ; call 0x913bd
0x000000000006d8df : xchg dword ptr [rax + rax + 0x63480000], ecx ; add al, 0x86 ; add rax, rsi ; jmp rax
0x00000000000f86ad : xchg dword ptr [rax + rax], ebp ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000423dd : xchg dword ptr [rax + rax], edx ; mov edx, 0x160 ; call 0x2dbc1
0x00000000000423be : xchg dword ptr [rax + rax], edx ; mov edx, 0x1a9 ; call 0x2dbc1
0x00000000000dc932 : xchg dword ptr [rax - 0x77000000], esp ; ret 0xeac1
0x0000000000103377 : xchg dword ptr [rax], eax ; add byte ptr [rax], al ; movmskpd eax, xmm0 ; and eax, 1 ; jmp 0x103353
0x00000000001090c1 : xchg dword ptr [rax], eax ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x1090de ; ret
0x0000000000194ca5 : xchg dword ptr [rax], eax ; add byte ptr [rcx + rbp*2 - 0x16], dl ; call rsp
0x0000000000030075 : xchg dword ptr [rax], ebp ; cmp dword ptr [rax], eax ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000c193d : xchg dword ptr [rbp + rbp*8 - 1], edx ; dec dword ptr [rax - 0x7d] ; ret
0x000000000004bb1a : xchg dword ptr [rbx], ecx ; add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x000000000004bb10 : xchg dword ptr [rbx], edx ; add byte ptr [rax + 0x63], cl ; add al, 0x88 ; lea rcx, qword ptr [rip + 0xb87] ; add rax, rcx ; jmp rax
0x00000000000f7e21 : xchg dword ptr [rcx + rax], ecx ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000060a80 : xchg dword ptr [rcx], eax ; sub al, byte ptr [rax] ; add byte ptr [rcx - 0x7afcb730], cl ; push -0x7c000006 ; ret 0x8908
0x00000000000c8704 : xchg dword ptr [rdi], ebp ; add byte ptr [rcx], dh ; shl byte ptr [rdi + rax*8], cl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rdx ; ret
0x00000000000207e8 : xchg dword ptr [rdx], eax ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000002c179 : xchg dword ptr [rdx], edx ; add dword ptr [rax], eax ; add byte ptr [rdi + 0x63], cl ; add al, 0x8b ; add r8, r11 ; jmp r8
0x00000000000d59ef : xchg dword ptr [rsi - 0x45000007], ebx ; add dword ptr [rax + rax], eax ; or byte ptr [rax + 0xf], 0xa3 ; ret 0x830f
0x00000000001811cb : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000074036 : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000077c2f : xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000080c20 : xchg eax, ebp ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000194ee5 : xchg eax, ebp ; add byte ptr [rax], al ; cmp ebp, ebx ; call rsp
0x000000000015a4a7 : xchg eax, ebp ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000194119 : xchg eax, ebp ; cld ; call qword ptr [rax]
0x0000000000194319 : xchg eax, ebp ; cld ; jmp qword ptr [rax + 0x20fffc94]
0x0000000000194315 : xchg eax, ebp ; cld ; jmp qword ptr [rax]
0x00000000001942d9 : xchg eax, ebp ; cld ; push qword ptr [rax + 0x30fffc94] ; xchg eax, esp ; cld ; jmp qword ptr [rax + 0x10fffc93]
0x000000000007951f : xchg eax, ebp ; cli ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; lea esp, dword ptr [rdx + rdi*8 - 1] ; xor eax, eax ; pop rbx ; ret
0x000000000007e3fe : xchg eax, ebp ; nop ; mov rax, -1 ; ret
0x0000000000130e1a : xchg eax, ebp ; nop dword ptr [rax + rax] ; mov rax, qword ptr [rbx + 8] ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000c191b : xchg eax, ebp ; push rcx ; or al, 0 ; movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000799d3 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; pop rbx ; ret
0x00000000001358f0 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; add eax, 1 ; ret
0x0000000000109053 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000131c64 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x0000000000100d84 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000e9a2e : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010907d : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000013d457 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000013626e : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; xor byte ptr [rbx + 0xf], bl ; mov dh, 0xc0 ; pop rbp ; pop r12 ; ret
0x00000000001308ca : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000cea44 : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 9], 0xd8 ; or rax, 0x20 ; ret
0x00000000000ce914 : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 9], 0xd8 ; or rax, 0x7f ; ret
0x00000000000ceb24 : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 9], 0xd8 ; or rax, 1 ; ret
0x00000000001934d9 : xchg eax, ebp ; std ; call qword ptr [rax + 0x20fffd95]
0x00000000001934dd : xchg eax, ebp ; std ; jmp qword ptr [rax]
0x000000000014b630 : xchg eax, ebx ; add al, byte ptr [rax] ; mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000001506c9 : xchg eax, ebx ; add al, byte ptr [rax] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000075793 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000008b191 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; mov rdx, rbp ; mov rsi, r12 ; call rax
0x0000000000083e87 : xchg eax, ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00000000001942e5 : xchg eax, ebx ; cld ; call qword ptr [rax]
0x0000000000194325 : xchg eax, ebx ; cld ; inc dword ptr [rax] ; xchg eax, ebx ; cld ; push qword ptr [rax - 0x6e] ; cld ; call rax
0x0000000000194129 : xchg eax, ebx ; cld ; jmp rax
0x0000000000194329 : xchg eax, ebx ; cld ; push qword ptr [rax - 0x6e] ; cld ; call rax
0x00000000000fe881 : xchg eax, ebx ; jle 0xfe8c1 ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x0000000000118364 : xchg eax, ebx ; mov rax, rdi ; ret
0x00000000001934d1 : xchg eax, ebx ; std ; push qword ptr [rax - 0x6c] ; std ; inc dword ptr [rax] ; xchg eax, ebp ; std ; call qword ptr [rax + 0x20fffd95]
0x000000000012c933 : xchg eax, ebx ; sub dword ptr [rax], eax ; ror rdi, 0x11 ; xor rdi, qword ptr fs:[0x30] ; call rax
0x00000000000d501d : xchg eax, ebx ; sub dword ptr [rbx], ecx ; add byte ptr [rdi], cl ; mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000034176 : xchg eax, ecx ; add al, 0x75 ; out 0x41, al ; mov eax, dword ptr [rcx + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x000000000003eb38 : xchg eax, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000001a2a7d : xchg eax, ecx ; add byte ptr [rax], al ; loopne 0x1a2a54 ; in eax, dx ; call qword ptr [rdx]
0x00000000000fffcb : xchg eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000001b2b25 : xchg eax, ecx ; add dword ptr [rax], eax ; enter -0x91b, -1 ; ret
0x000000000015a7d1 : xchg eax, ecx ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000646b8 : xchg eax, ecx ; add rax, rcx ; jmp rax
0x00000000000fece3 : xchg eax, ecx ; and dword ptr [rax + rax], ebp ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000116be3 : xchg eax, ecx ; cli ; sub al, byte ptr [rax] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000186f00 : xchg eax, ecx ; fdivr st(3), st(0) ; lcall ptr [rbp - 0x1f] ; ljmp ptr [rax + 0x7dfff3db] ; fcomi st(3) ; call rax
0x00000000000fa0e3 : xchg eax, ecx ; insd dword ptr [rdi], dx ; sub al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000f8fe3 : xchg eax, ecx ; jle 0xf901f ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109ce3 : xchg eax, ecx ; jno 0x109d21 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 2] ; mov rax, -1 ; ret
0x000000000006c3ae : xchg eax, ecx ; mov byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; ret
0x000000000014b301 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000000b6393 : xchg eax, ecx ; or rax, 0x3d8d4800 ; ret 0xd83
0x0000000000195e11 : xchg eax, ecx ; out dx, eax ; dec esp ; std ; add byte ptr [rax], al ; in al, -0x6f ; out dx, eax ; jmp rsp
0x000000000014eccb : xchg eax, ecx ; pop rsp ; add al, byte ptr [rax] ; mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000010a5e3 : xchg eax, ecx ; push -0x2708ffd5 ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001933b5 : xchg eax, ecx ; std ; dec esi ; nop ; std ; call rax
0x00000000000f8de3 : xchg eax, ecx ; sub byte ptr [rax + rax], 0xf7 ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000ec0e3 : xchg eax, ecx ; sub rax, 0x64d8f700 ; mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000006eeb2 : xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000c38fb : xchg eax, ecx ; xor cl, byte ptr [rax + rax] ; movzx edx, sil ; movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x000000000007c3f5 : xchg eax, edi ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000016b9d8 : xchg eax, edi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001376e5 : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000194f65 : xchg eax, edi ; add byte ptr [rax], al ; je 0x194fb5 ; jmp 0x194f71
0x0000000000122629 : xchg eax, edi ; add byte ptr [rax], al ; test rax, rax ; je 0x122649 ; lea rdi, qword ptr [rip + 0x2a3068] ; call rax
0x00000000000f7eec : xchg eax, edi ; add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000f7ee1 : xchg eax, edi ; clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsi ; js 0xf7f43 ; mov dword ptr [rdi + 0x100], edx ; ret
0x000000000019410d : xchg eax, edi ; cld ; call qword ptr [rax + 0x10fffc96]
0x0000000000194109 : xchg eax, edi ; cld ; call qword ptr [rax]
0x0000000000194309 : xchg eax, edi ; cld ; jmp qword ptr [rax + 0x20fffc96]
0x0000000000194305 : xchg eax, edi ; cld ; jmp qword ptr [rax]
0x0000000000154995 : xchg eax, edi ; in al, dx ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000016ba95 : xchg eax, edi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001869cc : xchg eax, edi ; mov al, 0xf3 ; jmp rax
0x000000000006c402 : xchg eax, edi ; mov byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdx + 8], rsi ; mov dword ptr [rdx + 4], 1 ; ret
0x0000000000103a98 : xchg eax, edi ; mov rax, qword ptr [rip + 0x2bd3d8] ; mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x0000000000078d7c : xchg eax, edi ; movabs al, byte ptr [0x4820428b48000000] ; sub eax, dword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x0000000000078c6c : xchg eax, edi ; movabs al, byte ptr [0x4838428b48000000] ; sub eax, dword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x000000000016ba0e : xchg eax, edi ; movabs al, byte ptr [0xa096ef0f66000000] ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000138255 : xchg eax, edi ; nop ; add byte ptr [rax], al ; add byte ptr [rbx - 0x37f0fe18], al ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000138295 : xchg eax, edi ; nop ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; enter 0x4289, 0x10 ; mov eax, 1 ; ret
0x0000000000138175 : xchg eax, edi ; nop ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; enter 0x4289, 0xc ; mov eax, 1 ; ret
0x000000000016b9f3 : xchg eax, edi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000d8102 : xchg eax, edi ; nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x0000000000117656 : xchg eax, edi ; nop word ptr [rax + rax] ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x000000000003fc45 : xchg eax, edi ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000016ba44 : xchg eax, edi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001934a9 : xchg eax, edi ; std ; dec dword ptr [rbx] ; cwde ; std ; call qword ptr [rax + 0x20fffd98]
0x0000000000107744 : xchg eax, edi ; sub eax, dword ptr [rax] ; mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x0000000000107687 : xchg eax, edi ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000adb27 : xchg eax, edi ; test r9d, r9d ; jne 0xadaea ; mov rax, rdx ; ret
0x00000000000c04a5 : xchg eax, edi ; xor byte ptr ss:[rax], al ; jne 0xc04c5 ; mov rax, rdx ; add rsp, 8 ; ret
0x000000000010dae8 : xchg eax, edx ; add byte ptr [rax], al ; add rsp, 0x80 ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000001a2b65 : xchg eax, edx ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; std ; jmp rdi
0x00000000001942ed : xchg eax, edx ; cld ; call qword ptr [rax]
0x000000000019432d : xchg eax, edx ; cld ; call rax
0x00000000001940f1 : xchg eax, edx ; cld ; jmp qword ptr [rax]
0x00000000001942f1 : xchg eax, edx ; cld ; push qword ptr [rax + 0x30fffc99] ; cdq ; cld ; jmp qword ptr [rax + 0x20fffc98]
0x000000000011819f : xchg eax, edx ; idiv edi ; add rsp, 8 ; add rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001097e2 : xchg eax, edx ; jbe 0x10981d ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000015066c : xchg eax, edx ; lea rcx, qword ptr [rip + 0x242ec] ; mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000014ecc7 : xchg eax, edx ; lea rcx, qword ptr [rip + 0x25c91] ; mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000014d2bc : xchg eax, edx ; lea rcx, qword ptr [rip + 0x2769c] ; mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000014b2f7 : xchg eax, edx ; lea rcx, qword ptr [rip + 0x29661] ; mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000000dff24 : xchg eax, edx ; lea rdi, qword ptr [rax + rsi*4] ; shl rdx, 2 ; xor esi, esi ; call 0x9181f
0x000000000003d179 : xchg eax, edx ; mov rdx, r14 ; xor r14d, r14d ; add rax, rax ; sub rdx, rax ; jmp 0x3d1c8
0x00000000000403c4 : xchg eax, edx ; mov rdx, rbp ; xor ebp, ebp ; add rax, rax ; sub rdx, rax ; jmp 0x40411
0x00000000001a4169 : xchg eax, edx ; out dx, al ; call qword ptr [rax]
0x00000000001366ca : xchg eax, edx ; out dx, al ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ffa1a : xchg eax, edx ; push rcx ; dec dword ptr [rax - 0x77] ; add eax, 0x2c2d5b ; add rsp, 8 ; ret
0x0000000000193311 : xchg eax, edx ; sti ; jmp qword ptr [rax]
0x000000000010b0e7 : xchg eax, edx ; sub eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x000000000010b0de : xchg eax, edx ; sub eax, dword ptr [rax] ; jae 0x10b100 ; mov rdx, qword ptr [rip + 0x2b92ce] ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000000bd25a : xchg eax, edx ; xor byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000014b330 : xchg eax, esi ; add al, byte ptr [rax] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000014b2fc : xchg eax, esi ; add al, byte ptr [rax] ; mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000000e1900 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret
0x000000000016b9e0 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000015a593 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000001ac384 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rcx + 0x283100e] ; push rsp ; ret
0x0000000000114ade : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000194f2d : xchg eax, esi ; add byte ptr [rax], al ; and al, 0x41 ; jmp 0x194f39
0x0000000000188ac1 : xchg eax, esi ; add byte ptr [rax], al ; sldt word ptr [rax] ; add byte ptr [rax], al ; loope 0x188adb ; add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001b2f95 : xchg eax, esi ; add dword ptr [rax], eax ; add rdi, rsi ; call rsi
0x000000000015a327 : xchg eax, esi ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000aad2a : xchg eax, esi ; add rax, rsi ; jmp rax
0x0000000000194115 : xchg eax, esi ; cld ; call qword ptr [rax + 0x10fffc95]
0x0000000000194111 : xchg eax, esi ; cld ; call qword ptr [rax]
0x0000000000194311 : xchg eax, esi ; cld ; jmp qword ptr [rax + 0x20fffc95]
0x000000000019430d : xchg eax, esi ; cld ; jmp qword ptr [rax]
0x000000000016ba9d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000007a93c : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000016b9fb : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000002f9f : xchg eax, esi ; or ch, byte ptr [rsi] ; ficomp dword ptr [rbx + 0xb886fae] ; and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000016ba4c : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001934a5 : xchg eax, esi ; std ; ljmp ptr [rbx - 0x69] ; std ; dec dword ptr [rbx] ; cwde ; std ; call qword ptr [rax + 0x20fffd98]
0x0000000000193319 : xchg eax, esi ; sti ; jmp rax
0x00000000000bf0c6 : xchg eax, esi ; stosb byte ptr [rdi], al ; sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000001990d4 : xchg eax, esp ; add al, byte ptr [rax] ; push rsp ; movsd dword ptr [rdi], dword ptr [rsi] ; cli ; jmp rsp
0x00000000000d6bf0 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx + 0x1b828], cl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e7923 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x00000000001aafb8 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rsi + rdx + 1], ah ; add byte ptr [rax], dl ; jge 0x1aafc2 ; jmp rdi
0x0000000000194ecd : xchg eax, esp ; add byte ptr [rax], al ; je 0x194f0c ; jmp 0x194ed9
0x00000000000cca48 : xchg eax, esp ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000884c0 : xchg eax, esp ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000000000fd941 : xchg eax, esp ; add dword ptr [rax], eax ; mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001ac7ec : xchg eax, esp ; add dword ptr cs:[rax], eax ; jo 0x1ac816 ; cmc ; call qword ptr [rsi]
0x00000000001991ac : xchg eax, esp ; add r8b, byte ptr [rax] ; xchg eax, esp ; mov cl, 0xfa ; call rsp
0x00000000000e2f40 : xchg eax, esp ; and al, 0x10 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e663b : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x634c
0x00000000000f4653 : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b5982 : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov gs, word ptr [rbx - 0x7cfffff8] ; ret
0x00000000000e2f38 : xchg eax, esp ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xchg eax, esp ; and al, 0x10 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e7921 : xchg eax, esp ; and al, 0x94 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x0000000000056b9d : xchg eax, esp ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x2c], cl ; test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000053ca5 : xchg eax, esp ; and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000072cc7 : xchg eax, esp ; and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000194121 : xchg eax, esp ; cld ; inc dword ptr [rax] ; xchg eax, esp ; cld ; push qword ptr [rax - 0x6d] ; cld ; jmp rax
0x00000000001942e1 : xchg eax, esp ; cld ; jmp qword ptr [rax + 0x10fffc93]
0x000000000019431d : xchg eax, esp ; cld ; jmp qword ptr [rax]
0x0000000000194125 : xchg eax, esp ; cld ; push qword ptr [rax - 0x6d] ; cld ; jmp rax
0x00000000001942dd : xchg eax, esp ; cld ; push qword ptr [rax] ; xchg eax, esp ; cld ; jmp qword ptr [rax + 0x10fffc93]
0x00000000001b40ec : xchg eax, esp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; push rax ; jl 0x1b40f1 ; call rcx
0x00000000001a71ec : xchg eax, esp ; fadd dword ptr [rax] ; add byte ptr [rax], dh ; int1 ; call qword ptr [rcx]
0x00000000001a74ec : xchg eax, esp ; fild dword ptr [rax] ; add byte ptr [rax], ah ; pop rdi ; int1 ; call rbx
0x000000000019466c : xchg eax, esp ; imul eax, dword ptr [rax], 0xe9938400 ; jmp rsp
0x000000000019897c : xchg eax, esp ; lar eax, word ptr [rax] ; ret
0x000000000014d381 : xchg eax, esp ; mov byte ptr [rbp + 0x48d974d2], 0x63 ; ror dword ptr [rax + 1], -8 ; sub rax, r8 ; ret
0x000000000014d4bd : xchg eax, esp ; mov byte ptr [rbp + 0x48dd74d2], 0x63 ; ror dword ptr [rax + 1], -8 ; ret
0x000000000019f6ac : xchg eax, esp ; or al, byte ptr [rax] ; add byte ptr [rax + 0x12], dh ; in eax, dx ; call qword ptr [rax]
0x000000000019807c : xchg eax, esp ; retf ; add dword ptr [rax], eax ; hlt ; clc ; jmp rsp
0x00000000000365af : xchg eax, esp ; rol bl, 0x66 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000005457e : xchg eax, esp ; rol byte ptr [rax + rax*8 + 0x180850f], 0 ; add byte ptr [rbx + rcx*4 + 4], al ; and al, 0x83 ; ret
0x000000000007623f : xchg eax, esp ; rol byte ptr [rax + rax*8 - 0x7cb7e28c], 0xc4 ; or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000021459 : xchg eax, esp ; rol byte ptr [rbp + 0x31], 0xc0 ; xor ecx, ecx ; movzx eax, al ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x0000000000096d80 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000111a97 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fa05f : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x000000000012d6e9 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or bl, al ; mov eax, 1 ; ret
0x000000000013d1b7 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000000456c3 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000131ab8 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006c2b3 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000013ec59 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000131918 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ace1a : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; movzx eax, al ; ret
0x0000000000130dab : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000013e129 : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000010a01b : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7f], 0xc4 ; nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000198978 : xchg eax, esp ; sar cl, 0xff ; xchg eax, esp ; lar eax, word ptr [rax] ; ret
0x00000000000fff8e : xchg eax, esp ; sar dword ptr [rax], 0xf ; xchg eax, esp ; ret 0xd108
0x00000000001934d5 : xchg eax, esp ; std ; inc dword ptr [rax] ; xchg eax, ebp ; std ; call qword ptr [rax + 0x20fffd95]
0x0000000000193315 : xchg eax, esp ; sti ; inc dword ptr [rax] ; xchg eax, esi ; sti ; jmp rax
0x00000000000aaf7e : xchg ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000000899ba : xchg ebx, ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x00000000001932f9 : xchg ebx, edi ; jmp rax
0x00000000001035bc : xchg edi, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000103054 : xchg edi, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000002bc01 : xchg edx, ebx ; add byte ptr [rax], al ; add byte ptr [rbx + 0x63], cl ; xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x000000000006130c : xchg edx, edi ; and dword ptr [rax], eax ; add byte ptr [rcx - 0x7afcb730], cl ; push -0x7c000006 ; ret 0x8908
0x0000000000157365 : xchg esp, eax ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000183cf7 : xchg esp, edi ; adc ch, byte ptr [rip + 0x8acc8c6] ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000194170 : xchg rax, rdx ; cld ; push rdx ; cdq ; cld ; push qword ptr [rdx - 0x67] ; cld ; jmp rdx
0x0000000000117fee : xchg rax, rsp ; idiv edi ; ret
0x0000000000112fe8 : xlatb ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001a7105 : xlatb ; add byte ptr [rax], al ; cmp byte ptr [rdx - 0xf], cl ; jmp rcx
0x00000000001a70cd : xlatb ; add byte ptr [rax], al ; nop ; int1 ; call rdx
0x000000000005375c : xlatb ; add byte ptr ss:[rsi - 1], bh ; mov dword ptr fs:[rax], 0x16 ; mov eax, esi ; ret
0x000000000017e4d9 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000009846e : xlatb ; add rsp, 8 ; mov rbp, rdx ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000004e3ff : xlatb ; inc dword ptr [rax - 0x4e743] ; jmp qword ptr [rax]
0x0000000000154455 : xlatb ; int1 ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000116e49 : xlatb ; jmp rax
0x0000000000107736 : xlatb ; jne 0x10772f ; mov rax, qword ptr [rax + 8] ; ret
0x000000000011460f : xlatb ; lea eax, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000004ac32 : xlatb ; mov byte ptr [rsi], al ; jne 0x4ac18 ; mov rax, rsi ; ret
0x0000000000083f3d : xlatb ; mov qword ptr [rsp + 0x18], rdx ; mov byte ptr [rsp + 0x28], r11b ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x000000000008fdae : xlatb ; or eax, dword ptr [rax] ; ret
0x0000000000097e02 : xlatb ; rcl bl, 0xf8 ; test eax, eax ; je 0x97e31 ; bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x00000000000a0bd9 : xlatb ; rol dword ptr [rbp + 0x7d850fc0], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000090d85 : xlatb ; rol dword ptr [rbp - 0x4e7af040], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000162a82 : xlatb ; ror byte ptr [rax - 0x73], 0x76 ; adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000162abe : xlatb ; ror byte ptr [rax - 0x73], 0x76 ; adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000a193f : xlatb ; ror byte ptr [rax - 0x73], 0x76 ; adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x13
0x00000000000a0b74 : xlatb ; ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x00000000001471a0 : xlatb ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000a0cf6 : xlatb ; shl dword ptr [rcx], -0x30 ; test eax, eax ; je 0xa0cde ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000fe833 : xlatb ; syscall ; cmp rax, -0x1000 ; ja 0xfe84c ; ret
0x00000000000fe8e3 : xlatb ; syscall ; cmp rax, -0x1000 ; ja 0xfe8fc ; ret
0x00000000001877b1 : xor ah, 0xff ; sar byte ptr [rdi - 0xc], 1 ; call rax
0x00000000000a5b98 : xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00000000000a2dc0 : xor ah, ah ; mov byte ptr [rdx + 1], ah ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000000a2dd0 : xor ah, ah ; mov byte ptr [rdx + 2], ah ; mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000000a2e00 : xor ah, ah ; mov byte ptr [rdx + 4], ah ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000000a5b2e : xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000a2e70 : xor ah, ah ; mov byte ptr [rdx + 8], ah ; movlpd xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x0000000000193941 : xor ah, bh ; inc eax ; xor esp, edi ; call qword ptr [rax]
0x0000000000193981 : xor ah, bh ; push qword ptr [rax] ; xor bh, ah ; inc dword ptr [rax - 0x2f0003cd] ; xor al, 0xfc ; jmp qword ptr [rax]
0x00000000000301ca : xor ah, byte ptr [rdi] ; cmp dword ptr [rax], eax ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000c82ca : xor ah, byte ptr [rsi - 0x3eb7ffd1] ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x000000000007f23e : xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rip + 0x3444f9], 0 ; ret
0x000000000007f249 : xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000019ed10 : xor al, 0 ; add byte ptr [rax], al ; cld ; add byte ptr [rax], al ; add byte ptr [rax], ch ; fsub st(4), st(0) ; jmp qword ptr [rcx]
0x00000000001a0df0 : xor al, 0 ; add byte ptr [rax], al ; fsub qword ptr [rcx] ; add byte ptr [rax], al ; call 0x2719fb72
0x00000000001a70c8 : xor al, 0 ; add byte ptr [rax], al ; je 0x1a70b0 ; add byte ptr [rax], al ; nop ; int1 ; call rdx
0x00000000001a7100 : xor al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; xlatb ; add byte ptr [rax], al ; cmp byte ptr [rdx - 0xf], cl ; jmp rcx
0x00000000001a11c8 : xor al, 0 ; add byte ptr [rax], al ; mov ah, 0x25 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x13], dh ; jmp qword ptr [rcx]
0x00000000001b5bf0 : xor al, 0 ; add byte ptr [rax], al ; pushfq ; ret 1
0x00000000001b5c98 : xor al, 0 ; add byte ptr [rax], al ; ret
0x00000000001b5bb8 : xor al, 0 ; add byte ptr [rax], al ; ret 1
0x00000000001a1740 : xor al, 0 ; add byte ptr [rax], al ; sub al, 0x2b ; add byte ptr [rax], al ; call 0x281a04da
0x0000000000109ae1 : xor al, 0 ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x109afe ; ret
0x000000000019eed8 : xor al, 0 ; add byte ptr [rax], al ; test byte ptr [rbp], dl ; add al, dh ; in al, dx ; jmp qword ptr [rax]
0x00000000001a74e8 : xor al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; fild dword ptr [rax] ; add byte ptr [rax], ah ; pop rdi ; int1 ; call rbx
0x000000000019cde5 : xor al, 0 ; add byte ptr [rax], bl ; out 0xe9, al ; call qword ptr [rsi]
0x000000000008194d : xor al, 0 ; add dword ptr [r12 + 0x18], r9d ; cmp rbx, rax ; je 0x8196e ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008040d : xor al, 0 ; add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000007fe5b : xor al, 0 ; jne 0x7fe59 ; add rsp, 8 ; mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000079135 : xor al, 0 ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000000795d5 : xor al, 0 ; mov dword ptr fs:[rax], 0x1c ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000753c2 : xor al, 0 ; mov dword ptr fs:[rax], 9 ; mov eax, 0xffffffff ; ret
0x0000000000080a37 : xor al, 0 ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x80a4d ; call rax
0x00000000000801cf : xor al, 0 ; mov rax, qword ptr [rax] ; test rax, rax ; jne 0x80210 ; xor edi, edi ; call qword ptr [r15]
0x000000000007b007 : xor al, 0 ; neg eax ; mov dword ptr fs:[rdx], eax ; mov rax, -1 ; ret
0x00000000001aa98c : xor al, 0x10 ; add dword ptr [rax], eax ; adc byte ptr [rsi], dl ; hlt ; call qword ptr [rsi]
0x000000000004862d : xor al, 0x13 ; je 0x48648 ; mov rax, qword ptr [rax + rsi*8] ; mov qword ptr [rcx + rsi*8], rax ; xor eax, eax ; pop rbx ; ret
0x00000000001abe8c : xor al, 0x25 ; add dword ptr [rax], eax ; xor bl, ah ; hlt ; jmp qword ptr [rcx]
0x0000000000100b7f : xor al, 0x2c ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x0000000000100c65 : xor al, 0x2c ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000a0c9b : xor al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x00000000001ae68c : xor al, 0x4d ; add dword ptr [rax], eax ; push rax ; lodsb al, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000000d2a8c : xor al, 0x4d ; or eax, dword ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000001ae98c : xor al, 0x50 ; add dword ptr [rax], eax ; mov al, 0xf5 ; call qword ptr [rsi]
0x0000000000199394 : xor al, 0x53 ; add al, byte ptr [rax] ; mov ah, 0xd ; sti ; inc dword ptr [rbx + rdx*2 + 0xee40002] ; sti ; call rsp
0x00000000001aec8c : xor al, 0x53 ; add dword ptr [rax], eax ; nop ; mov ch, 0xf5 ; jmp qword ptr [rbx]
0x00000000001a1b8c : xor al, 0x82 ; add byte ptr [rax], al ; nop ; xchg eax, esp ; in eax, dx ; call qword ptr [rcx]
0x00000000000b73e2 : xor al, 0x83 ; sub r10, rax ; jmp 0xb7406
0x00000000000adf7b : xor al, 0x85 ; ror byte ptr [rax - 0x48], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x00000000001a458c : xor al, 0xac ; add byte ptr [rax], al ; push rax ; ret
0x00000000001a498c : xor al, 0xb0 ; add byte ptr [rax], al ; shr byte ptr [rcx - 6], 1 ; call qword ptr [rax]
0x000000000006d76b : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000000c3961 : xor al, 0xc ; add byte ptr [rdi], cl ; mov dh, 0xfa ; movsxd rax, dword ptr [r8 + rdi*4] ; add rax, r8 ; jmp rax
0x0000000000195ed0 : xor al, 0xc5 ; out dx, eax ; inc esp ; add dword ptr [rcx], eax ; add byte ptr [rsi + rax*8], dh ; out dx, eax ; jmp rsp
0x0000000000045cff : xor al, 0xe ; mov ecx, esi ; shl ecx, 0x1e ; or edx, ecx ; cmp esi, 0x40 ; cmovne rax, rdx ; ret
0x00000000000907b7 : xor al, 0xf ; mov dh, 0x75 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000fa601 : xor al, 0xf9 ; dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x000000000019398d : xor al, 0xfc ; jmp qword ptr [rax]
0x00000000001acd7d : xor al, 1 ; add byte ptr [rax + 0x2c], ah ; cmc ; jmp qword ptr [rsi]
0x00000000000abbe8 : xor al, 1 ; add byte ptr [rax], al ; ret
0x0000000000109941 : xor al, 1 ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10995e ; ret
0x00000000000aff3e : xor al, byte ptr [rax + rax] ; add cl, ch ; ret 0xfff3
0x0000000000109b71 : xor al, byte ptr [rax] ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x109b8e ; ret
0x0000000000065025 : xor al, byte ptr [rax] ; add byte ptr [rbx - 0x4d76b], cl ; inc dword ptr [rbx - 0x78f0d006] ; ret
0x000000000002e54a : xor al, byte ptr [rbp + 0x39] ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x000000000016a1ca : xor al, byte ptr [rbx] ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000001acb75 : xor al, byte ptr [rcx] ; add byte ptr [rax + 0x26], cl ; cmc ; jmp qword ptr [rcx]
0x00000000000fedf1 : xor al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0xfee0e ; ret
0x00000000001acb5d : xor al, byte ptr [rcx] ; add byte ptr [rax], dh ; cmc ; jmp qword ptr [rcx]
0x0000000000193985 : xor bh, ah ; inc dword ptr [rax - 0x2f0003cd] ; xor al, 0xfc ; jmp qword ptr [rax]
0x00000000001a5480 : xor bh, bl ; cld ; call qword ptr [rax]
0x0000000000090e4c : xor bl, al ; nop ; xor rax, rax ; ret
0x00000000000ca2c9 : xor bl, bh ; lcall ptr [rcx + 0x2404f741] ; add byte ptr [rax - 0x7af10000], al ; ret
0x00000000001441ea : xor bl, byte ptr [rdi] ; sub byte ptr [rax], al ; mov eax, 1 ; add rsp, 8 ; ret
0x000000000012b618 : xor byte ptr [eax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x0000000000090d81 : xor byte ptr [r14 + 0xf], r12b ; xlatb ; rol dword ptr [rbp - 0x4e7af040], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000138191 : xor byte ptr [r8 - 0x77], r9b ; push rdi ; cmp byte ptr [rax + 1], bh ; ret
0x00000000000bf1eb : xor byte ptr [r8], al ; lea rcx, qword ptr [rax + r9] ; mov rdx, rax ; jmp 0xbf204
0x00000000000577d6 : xor byte ptr [r8], r8b ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000bc914 : xor byte ptr [r8], r8b ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000908ef : xor byte ptr [rax + 0x10000000], 0x48 ; lea eax, dword ptr [rip + 0x19ab4] ; cmove rax, rdx ; ret
0x000000000007802b : xor byte ptr [rax + 0x29], cl ; ret
0x000000000007854d : xor byte ptr [rax + 0x29], cl ; ret 0x3949
0x000000000008a4d6 : xor byte ptr [rax + 0x31], cl ; ret 0x3949
0x00000000000790ff : xor byte ptr [rax + 0x39], cl ; adc byte ptr [r10 + 0x2a], r14b ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000ff2ee : xor byte ptr [rax + 0x42], al ; sldt word ptr [rbx] ; push rsp ; and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x0000000000107b92 : xor byte ptr [rax + 0x48000000], 0x89 ; mov edx, dword ptr [rax - 0x77000000] ; ret 0xe8c1
0x00000000000e4c4f : xor byte ptr [rax + 0x63], cl ; add al, 0x82 ; mov rbp, rsi ; mov qword ptr [rsp + 0x28], rdi ; add rax, rdx ; jmp rax
0x00000000000c4a38 : xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000000f70cf : xor byte ptr [rax + 0x63], cl ; ret 0xc283
0x000000000008be11 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x0000000000122097 : xor byte ptr [rax + 1], bh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a0c76 : xor byte ptr [rax + 1], cl ; ret 0x547c
0x00000000000759eb : xor byte ptr [rax + 1], cl ; ret 0x8b49
0x0000000000101046 : xor byte ptr [rax + rax], ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000101003 : xor byte ptr [rax + rax], ch ; add rsp, 8 ; ret
0x00000000000fde04 : xor byte ptr [rax + rax], ch ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000842b8 : xor byte ptr [rax + rcx*4 + 0x5c], al ; and al, 0x28 ; mov qword ptr [rsp + 0x20], r8 ; mov qword ptr [rsp + 0x18], r10 ; call rdx
0x0000000000078c78 : xor byte ptr [rax - 0x3f], cl ; clc ; add al, bl ; nop ; mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x00000000000f4bc5 : xor byte ptr [rax - 0x73], cl ; adc eax, 0x93c9b ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000f36c5 : xor byte ptr [rax - 0x73], cl ; adc eax, 0x94f5b ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000012e0a7 : xor byte ptr [rax - 0x73], cl ; add eax, 0x297c91 ; pop rbx ; ret
0x000000000012e06f : xor byte ptr [rax - 0x73], cl ; add eax, 0x297cc9 ; pop rbx ; ret
0x000000000012dfb0 : xor byte ptr [rax - 0x73], cl ; add eax, 0x297d88 ; pop rbx ; ret
0x00000000000299d5 : xor byte ptr [rax - 0x73], cl ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000a8a77 : xor byte ptr [rax - 0x73], cl ; ret
0x000000000008681d : xor byte ptr [rax - 0x75], cl ; add eax, 0x33a6bb ; mov qword ptr [rax], rdi ; ret
0x00000000000483b8 : xor byte ptr [rax - 0x75], cl ; jbe 0x48434 ; xor eax, eax ; ret
0x0000000000023f7b : xor byte ptr [rax - 0x75], cl ; je 0x23fb0 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000024fb2 : xor byte ptr [rax - 0x75], cl ; je 0x24fe7 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000026c1e : xor byte ptr [rax - 0x75], cl ; je 0x26c53 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00000000001381a3 : xor byte ptr [rax - 0x75], cl ; jg 0x1381f1 ; mov eax, 1 ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000048088 : xor byte ptr [rax - 0x75], cl ; jg 0x480fc ; xor eax, eax ; ret
0x00000000001046aa : xor byte ptr [rax - 0x75], cl ; jge 0x10467b ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000238b3 : xor byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x38 ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000023c38 : xor byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x48 ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00000000000483b7 : xor byte ptr [rax - 0x75], r9b ; jbe 0x48435 ; xor eax, eax ; ret
0x000000000008bd3f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000007d2cd : xor byte ptr [rax - 0x77], cl ; and byte ptr [r9 + 0x48c03113], cl ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000089d87 : xor byte ptr [rax - 0x77], cl ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x00000000000b3308 : xor byte ptr [rax - 0x77], cl ; call 0x4ccdc825
0x00000000000b6040 : xor byte ptr [rax - 0x77], cl ; call 0x4ccdf55d
0x000000000004ab32 : xor byte ptr [rax - 0x77], cl ; fucompi st(0) ; xor eax, 0x48000565 ; add esp, 0x440 ; pop rbx ; ret
0x000000000013846e : xor byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x00000000000783d2 : xor byte ptr [rax - 0x77], cl ; pop rbp ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000073812 : xor byte ptr [rax - 0x77], cl ; push rax ; mov rdx, rdi ; jbe 0x73751 ; mov eax, dword ptr [rsi] ; jmp 0x737f7
0x0000000000078483 : xor byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000138192 : xor byte ptr [rax - 0x77], cl ; push rdi ; cmp byte ptr [rax + 1], bh ; ret
0x0000000000032c7a : xor byte ptr [rax - 0x77], cl ; ret
0x00000000000d08ce : xor byte ptr [rax - 0x77], cl ; ret 0x8040
0x0000000000130f73 : xor byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000d80be : xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000012be61 : xor byte ptr [rax - 0x77], cl ; ror byte ptr gs:[rcx + rcx*4 - 0x19], 0xe8 ; ret 0xf61b
0x00000000000c0cca : xor byte ptr [rax - 0x78f0f606], al ; ret 0xfff9
0x0000000000074192 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x000000000012b619 : xor byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x00000000000e1bd9 : xor byte ptr [rax - 0x7d], cl ; ret 0x4108
0x0000000000099c8f : xor byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000005536a : xor byte ptr [rax - 0x7d], cl ; ret 0xe920
0x0000000000193298 : xor byte ptr [rax - 5], ah ; jmp qword ptr [rax]
0x0000000000075f5d : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000019c97d : xor byte ptr [rax], al ; add al, dl ; fucomp st(1) ; call qword ptr [rcx]
0x00000000000577d7 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000c5506 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rbp, r14 ; call 0x91819
0x0000000000020749 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x000000000008fb68 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x00000000000645a9 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000003a242 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000035623 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000122edc : xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rdi, qword ptr [rip + 0x2a2815] ; call rax
0x00000000000453ea : xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x00000000000704c5 : xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x30] ; call rax
0x000000000007e3c5 : xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x19b0] ; call rax
0x000000000007e87f : xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x1e6a] ; call rax
0x000000000007ed3f : xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x232a] ; call rax
0x00000000000707af : xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x2ba] ; call rax
0x000000000007cd25 : xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x310] ; call rax
0x000000000007cf95 : xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x580] ; call rax
0x00000000000f76b2 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000047bc5 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov edi, dword ptr [rsp + 0x3c] ; call rax
0x000000000003a874 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x000000000002f5f9 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x00000000000645d2 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x35c993] ; call rax
0x000000000005c93a : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x36462b] ; call rax
0x000000000005c31e : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x364c47] ; call rax
0x000000000005969a : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x3678cb] ; call rax
0x00000000000509f6 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x37056f] ; call rax
0x000000000004db1a : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x37344b] ; call rax
0x00000000000aad6d : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000109f51 : xor byte ptr [rax], al ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x109f6e ; ret
0x00000000001174fb : xor byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x117539 ; call rax
0x000000000006efa0 : xor byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x6efc8 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006f070 : xor byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x6f098 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x00000000000c7c29 : xor byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0xc7c55 ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000f80fd : xor byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0xf8160 ; xor edx, edx ; xor esi, esi ; mov rdi, rbx ; call rax
0x000000000004dae9 : xor byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x000000000003af1a : xor byte ptr [rax], al ; add byte ptr [rcx - 0x1e], al ; jg 0x3af73 ; mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x0000000000060933 : xor byte ptr [rax], al ; add byte ptr [rcx - 0x7afcb730], cl ; push -0x7c000006 ; ret 0x8908
0x00000000000bd25b : xor byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bd49a : xor byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bbbd1 : xor byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000740da : xor byte ptr [rax], al ; je 0x740e4 ; ret
0x00000000000798c1 : xor byte ptr [rax], al ; je 0x798d2 ; add rsp, 0x38 ; ret
0x00000000000c04a7 : xor byte ptr [rax], al ; jne 0xc04c3 ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000bf1ec : xor byte ptr [rax], al ; lea rcx, qword ptr [rax + r9] ; mov rdx, rax ; jmp 0xbf203
0x00000000000c04bd : xor byte ptr [rax], al ; mov dword ptr [rdx], eax ; xor edx, edx ; add rsp, 8 ; mov rax, rdx ; ret
0x00000000000bfd05 : xor byte ptr [rax], al ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000000bbc15 : xor byte ptr [rax], al ; mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x00000000000bbbf5 : xor byte ptr [rax], al ; mov dword ptr fs:[rax], 0x4b ; xor eax, eax ; add rsp, 8 ; ret
0x00000000000bb97c : xor byte ptr [rax], al ; mov dword ptr fs:[rax], 0x4b ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000000bc915 : xor byte ptr [rax], al ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000bc83d : xor byte ptr [rax], al ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000bd062 : xor byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ba58f : xor byte ptr [rax], al ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000bbb05 : xor byte ptr [rax], al ; xor ebx, ebx ; mov dword ptr fs:[rax], 0x4b ; mov rax, rbx ; pop rbx ; ret
0x00000000000aa2f7 : xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000bc83c : xor byte ptr [rax], r8b ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000fdbf7 : xor byte ptr [rbp + rax*2 - 0x77], ah ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001942d8 : xor byte ptr [rbp - 0x6b4f0004], dl ; cld ; push qword ptr [rax] ; xchg eax, esp ; cld ; jmp qword ptr [rax + 0x10fffc93]
0x00000000001932f4 : xor byte ptr [rbp - 0x78ef0005], al ; sti ; jmp rax
0x0000000000193370 : xor byte ptr [rbx + rdi*8 - 0x4424f01], bh ; push qword ptr [rax] ; mov edi, 0xc0b0fffb ; sti ; push qword ptr [rax] ; ret 0xfffb
0x0000000000193344 : xor byte ptr [rbx + rdi*8 - 0x4527f01], ch ; call rax
0x000000000008fcd0 : xor byte ptr [rbx + rsi], bh ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x00000000000d6bbc : xor byte ptr [rbx - 0x47fefbb9], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001a5cb6 : xor byte ptr [rbx - 0x73fb79fb], al ; add ecx, dword ptr [rbp + 0x4c0002] ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x00000000001035b7 : xor byte ptr [rbx - 0x78f0f606], al ; out dx, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000193988 : xor byte ptr [rbx], 0xfc ; call rax
0x0000000000072ce7 : xor byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010b865 : xor byte ptr [rcx + 0xfd829f0], cl ; test dword ptr [rax], esp ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000741a3 : xor byte ptr [rcx + rcx*4 + 0x61], cl ; cmp byte ptr [rax + 1], bh ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001808bc : xor byte ptr [rcx - 0x14], bh ; call qword ptr [rax]
0x00000000001942f8 : xor byte ptr [rcx - 0x675f0004], bl ; cld ; jmp qword ptr [rax]
0x00000000001932b4 : xor byte ptr [rcx - 5], ch ; call rax
0x0000000000193258 : xor byte ptr [rcx - 5], dl ; inc dword ptr [rax] ; push rdx ; sti ; call rax
0x00000000001ac9a5 : xor byte ptr [rcx], al ; add byte ptr [rax + 0x21], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001aca35 : xor byte ptr [rcx], al ; add byte ptr [rax + 0x22], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000146241 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000014646c : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000075f5e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000078332 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007a007 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000006eeb3 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000001098ea : xor byte ptr [rcx], al ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x109937 ; ret
0x00000000000d72cf : xor byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; push 0x5c415d5b ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001ac9a4 : xor byte ptr [rcx], r8b ; add byte ptr [rax + 0x21], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a6440 : xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x0000000000193378 : xor byte ptr [rdi - 0x3f4f0005], bh ; sti ; push qword ptr [rax] ; ret 0xfffb
0x00000000000cddac : xor byte ptr [rdi], ch ; add byte ptr [rdi + rax*8], ah ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000187b90 : xor byte ptr [rdi], ch ; cmc ; call rax
0x00000000000009e8 : xor byte ptr [rdx + 0x310e2046], ch ; rol qword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x00000000001938b0 : xor byte ptr [rdx - 4], al ; push rax ; cld ; call rax
0x0000000000193860 : xor byte ptr [rdx - 4], cl ; call qword ptr [rax]
0x0000000000193984 : xor byte ptr [rdx], dh ; cld ; inc dword ptr [rax - 0x2f0003cd] ; xor al, 0xfc ; jmp qword ptr [rax]
0x0000000000193738 : xor byte ptr [rip + 0x1f10fffc], bl ; cld ; inc dword ptr [rax] ; and esp, edi ; call rax
0x000000000008b8d7 : xor byte ptr [rsi + 0xe], dh ; mov rax, qword ptr [rax + 8] ; test rax, rax ; jne 0x8b8dd ; ret
0x0000000000090d82 : xor byte ptr [rsi + 0xf], ah ; xlatb ; rol dword ptr [rbp - 0x4e7af040], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000007b18 : xor byte ptr [rsi + 3], dh ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x000000000003927a : xor byte ptr [rsi - 0x73], cl ; cmp al, 0x33 ; call rax
0x00000000001932d4 : xor byte ptr [rsi - 5], dh ; call rax
0x00000000001937b8 : xor byte ptr [rsi], al ; cld ; inc dword ptr [rax - 0x2f0003f9] ; or ah, bh ; jmp qword ptr [rax]
0x00000000001936b8 : xor byte ptr [rsi], bl ; cld ; call qword ptr [rax]
0x00000000001942e0 : xor byte ptr [rsp + rdi*8 - 0x36c5f01], dl ; call qword ptr [rax]
0x0000000000193894 : xor byte ptr [rsp + rdi*8 - 1], al ; adc byte ptr [rsi - 4], al ; push rax ; cld ; call rax
0x00000000000c04a6 : xor byte ptr ss:[rax], al ; jne 0xc04c4 ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000001a49f0 : xor ch, 0xee ; call qword ptr [rax]
0x0000000000090e8a : xor ch, byte ptr [rax + 0x48c3000d] ; lea eax, dword ptr [rip + 0xde11a] ; ret
0x0000000000100e55 : xor ch, byte ptr [rax + rax] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003024a : xor ch, byte ptr [rax] ; cmp dword ptr [rax], eax ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x000000000003004a : xor ch, byte ptr [rdx] ; cmp dword ptr [rax], eax ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000c38fc : xor cl, byte ptr [rax + rax] ; movzx edx, sil ; movsxd rax, dword ptr [rcx + rdx*4] ; add rax, rcx ; jmp rax
0x000000000006da05 : xor cl, byte ptr [rax - 0x73] ; cmp eax, 0x118013 ; movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x0000000000126c6d : xor cl, byte ptr [rax - 0x73] ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000016b63d : xor cl, byte ptr [rax - 0x75] ; add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000087dcd : xor cl, byte ptr [rax - 0x75] ; add eax, 0x33909b ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x87def ; call rax
0x000000000014391d : xor cl, byte ptr [rax - 0x75] ; and al, 8 ; add rsp, 0x18 ; ret
0x0000000000134b8f : xor cl, byte ptr [rax - 0x77] ; jp 0x134ba1 ; ret
0x000000000013791f : xor cl, byte ptr [rax - 0x77] ; jp 0x137931 ; ret
0x0000000000137937 : xor cl, byte ptr [rax - 0x77] ; jp 0x137949 ; ret
0x00000000001381af : xor cl, byte ptr [rax - 0x77] ; jp 0x1381c1 ; ret
0x00000000001381c7 : xor cl, byte ptr [rax - 0x77] ; jp 0x1381d9 ; ret
0x00000000001381f7 : xor cl, byte ptr [rax - 0x77] ; jp 0x138209 ; ret
0x000000000008ff72 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000013345c : xor cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000019b2e9 : xor cl, ch ; call qword ptr [rax]
0x00000000000a5a10 : xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001933a8 : xor cl, dl ; sti ; jmp rax
0x00000000001933a0 : xor dh, cl ; sti ; push qword ptr [rax + 0x30fffbcf] ; sar ebx, 1 ; jmp rax
0x0000000000034b50 : xor dl, 0xf ; adc dword ptr [rdi], eax ; and rax, rdx ; movq xmm0, rax ; ret
0x00000000000bead2 : xor dl, byte ptr [rax + 0x30] ; add byte ptr [rax - 0x77], cl ; jmp 0xffffffffbece742e
0x000000000010a643 : xor dword ptr [rax + 0x2b], ebp ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109e43 : xor dword ptr [rax + 0x2b], esi ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 2] ; mov rax, -1 ; ret
0x000000000002d86f : xor dword ptr [rax + 0x39], ecx ; ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x000000000008457e : xor dword ptr [rax + 0x39], ecx ; ror byte ptr [rax - 0x77], 1 ; ret
0x0000000000106ba6 : xor dword ptr [rax + 0x88], edi ; syscall ; cmp rax, -0x1000 ; ja 0x106bd1 ; ret
0x0000000000134cb1 : xor dword ptr [rax + rax - 0x37f10000], 0x8948c089 ; add bh, byte ptr [rax + 1] ; ret
0x0000000000100f8e : xor dword ptr [rax + rax], ebp ; add rsp, 0x98 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000100fdc : xor dword ptr [rax + rax], ebp ; ret
0x00000000000f8643 : xor dword ptr [rax - 0x2708ffd4], ecx ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000009ee6b : xor dword ptr [rax - 0x39], ecx ; ret 0xffff
0x0000000000104183 : xor dword ptr [rax - 0x74b6000f], edi ; call rbx
0x000000000016cc91 : xor dword ptr [rax - 0x75], ecx ; clc ; mov rcx, qword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x16ccd3 ; xor eax, eax ; ret
0x000000000016dad1 : xor dword ptr [rax - 0x75], ecx ; clc ; mov rcx, qword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x16db13 ; xor eax, eax ; ret
0x000000000005364d : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0x27e9
0x0000000000089d17 : xor dword ptr [rax - 0x7b], ecx ; ror byte ptr [rax - 0x77], 3 ; je 0x89e30 ; mov rsi, r14 ; call rax
0x00000000000a045b : xor dword ptr [rax - 0x7c], eax ; div byte ptr [rbp - 0x11] ; mov qword ptr [rdx], rcx ; ret
0x000000000009eaf0 : xor dword ptr [rax - 0x7d], ecx ; ret
0x00000000000ba58e : xor dword ptr [rax], 0 ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000109a51 : xor dword ptr [rax], eax ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x109a6e ; ret
0x000000000019cab5 : xor dword ptr [rax], eax ; add byte ptr [rax], bl ; fucompi st(1) ; jmp qword ptr [rsi]
0x000000000006516b : xor dword ptr [rax], eax ; add byte ptr [rbx - 0x4d76b], cl ; inc dword ptr [rbx - 0x78f0d006] ; ret 0x58
0x00000000000aade5 : xor dword ptr [rax], eax ; mov eax, dword ptr [rdx + 0x70] ; cmp eax, 1 ; je 0xaae19 ; cmp eax, 2 ; je 0xaae11 ; xor eax, eax ; ret
0x00000000000fee43 : xor dword ptr [rax], esp ; sub al, 0 ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000fa143 : xor dword ptr [rbp + 0x2c], ebp ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000ec143 : xor dword ptr [rbp + 0x2d], ecx ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000003c63a : xor dword ptr [rbp - 0x5f], 0xc6f7db31 ; add byte ptr [rax], al ; add byte ptr [rax], 0xf ; xchg eax, ebp ; ret
0x0000000000109af3 : xor dword ptr [rbx + 0x2b], 0x64d8f700 ; mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000865db : xor dword ptr [rbx + rdi*8], ecx ; call qword ptr [rax - 0x72b71077]
0x00000000000aae84 : xor dword ptr [rcx + rbx*8 - 0xd], 0x801f0fc3 ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001acaad : xor dword ptr [rcx], eax ; add byte ptr [rax + 0x23], al ; cmc ; jmp qword ptr [rcx]
0x0000000000109221 : xor dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x10923e ; ret
0x00000000001acb45 : xor dword ptr [rcx], eax ; add byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x0000000000109743 : xor dword ptr [rdi + 0x2b], esi ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000013764b : xor dword ptr [rdi - 0x11], ebp ; dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x0000000000109443 : xor dword ptr [rdx + 0x2b], edi ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000e25de : xor dword ptr [rdx], eax ; add byte ptr [rax], al ; mov ecx, dword ptr [rbp + 4] ; test ecx, ecx ; jle 0xe266f ; xor ebx, ebx ; mov rdx, rax ; jmp 0xe260e
0x00000000000ff143 : xor dword ptr [rip - 0x389bffd4], ebx ; add byte ptr [rsi], ah ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000019362c : xor dword ptr [rsi + 0x1b08fffd], esp ; cld ; call rax
0x00000000000f9043 : xor dword ptr [rsi + 0x2c], edi ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000193628 : xor dword ptr [rsi - 0x59ce0003], esp ; std ; dec dword ptr [rax] ; sbb edi, esp ; call rax
0x0000000000193518 : xor dword ptr [rsi - 0x59ce0003], esp ; std ; jmp rax
0x0000000000193624 : xor dword ptr [rsi - 0x59ce0003], esp ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; dec dword ptr [rax] ; sbb edi, esp ; call rax
0x0000000000193514 : xor dword ptr [rsi - 0x59ce0003], esp ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x000000000006d27f : xor eax, 0x118558 ; movzx eax, al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000453f0 : xor eax, 0x1cb ; call rax
0x00000000000fd833 : xor eax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x000000000007b0bd : xor eax, 0x294d0034 ; dec byte ptr [rax - 0x77] ; ret 0x294c
0x0000000000100895 : xor eax, 0x2c3836 ; mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x00000000000704cb : xor eax, 0x30 ; call rax
0x00000000000645d8 : xor eax, 0x35c993 ; call rax
0x000000000005c940 : xor eax, 0x36462b ; call rax
0x000000000005c324 : xor eax, 0x364c47 ; call rax
0x00000000000596a0 : xor eax, 0x3678cb ; call rax
0x00000000000509fc : xor eax, 0x37056f ; call rax
0x000000000004db20 : xor eax, 0x37344b ; call rax
0x00000000001821ba : xor eax, 0x444be0a8 ; sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000000fe48f : xor eax, 0x48002c2a ; mov dword ptr [rax], 0xffffffff ; xor eax, eax ; ret
0x000000000006c315 : xor eax, 0x64d8f700 ; mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001995a9 : xor eax, 0x65cfffb ; add al, byte ptr [rax] ; je 0x1995f1 ; sti ; jmp rsp
0x00000000001142a1 : xor eax, 0x7910c ; mov rdx, rax ; mov rdi, r14 ; xor eax, eax ; call 0x1105af
0x00000000000da730 : xor eax, 0xad38b ; movzx ebp, bpl ; movsxd rax, dword ptr [rsi + rbp*4] ; add rax, rsi ; jmp rax
0x00000000000c59f3 : xor eax, 0xc1570 ; mov edx, ecx ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000ca1bc : xor eax, 0xc1f5f ; mov rdi, r12 ; cmove rcx, rax ; xor eax, eax ; call 0x56490
0x00000000000c073d : xor eax, 0xc6152 ; add rax, rsi ; jmp rax
0x00000000000fd8b3 : xor eax, 0xd8f7002c ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000aac62 : xor eax, 0xdb859 ; movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x000000000005cc6f : xor eax, 0xf001280 ; mov dh, 0xdb ; movsxd rax, dword ptr [rcx + rbx*4] ; add rax, rcx ; jmp rax
0x000000000007ed45 : xor eax, 0xffffdcd6 ; call rax
0x000000000007e885 : xor eax, 0xffffe196 ; call rax
0x000000000007e3cb : xor eax, 0xffffe650 ; call rax
0x000000000007cf9b : xor eax, 0xfffffa80 ; call rax
0x000000000007cd2b : xor eax, 0xfffffcf0 ; call rax
0x00000000000707b5 : xor eax, 0xfffffd46 ; call rax
0x0000000000020746 : xor eax, dword ptr [0x30] ; add rsp, 0x28 ; jmp rax
0x000000000008fb65 : xor eax, dword ptr [0x30] ; add rsp, 8 ; jmp rax
0x00000000000645a6 : xor eax, dword ptr [0x30] ; call rax
0x0000000000035620 : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000122ed9 : xor eax, dword ptr [0x30] ; lea rdi, qword ptr [rip + 0x2a2815] ; call rax
0x00000000000453e7 : xor eax, dword ptr [0x30] ; lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x00000000000704c2 : xor eax, dword ptr [0x30] ; lea rsi, qword ptr [rip + 0x30] ; call rax
0x000000000007e3c2 : xor eax, dword ptr [0x30] ; lea rsi, qword ptr [rip - 0x19b0] ; call rax
0x000000000007e87c : xor eax, dword ptr [0x30] ; lea rsi, qword ptr [rip - 0x1e6a] ; call rax
0x000000000007ed3c : xor eax, dword ptr [0x30] ; lea rsi, qword ptr [rip - 0x232a] ; call rax
0x00000000000707ac : xor eax, dword ptr [0x30] ; lea rsi, qword ptr [rip - 0x2ba] ; call rax
0x000000000007cd22 : xor eax, dword ptr [0x30] ; lea rsi, qword ptr [rip - 0x310] ; call rax
0x000000000007cf92 : xor eax, dword ptr [0x30] ; lea rsi, qword ptr [rip - 0x580] ; call rax
0x00000000000f76af : xor eax, dword ptr [0x30] ; mov edi, 1 ; call rax
0x0000000000047bc2 : xor eax, dword ptr [0x30] ; mov edi, dword ptr [rsp + 0x3c] ; call rax
0x000000000003a871 : xor eax, dword ptr [0x30] ; mov qword ptr fs:[rbp], rdx ; call rax
0x000000000002f5f6 : xor eax, dword ptr [0x30] ; mov rdi, r13 ; call rax
0x00000000000645cf : xor eax, dword ptr [0x30] ; mov rsi, qword ptr [rip + 0x35c993] ; call rax
0x000000000005c937 : xor eax, dword ptr [0x30] ; mov rsi, qword ptr [rip + 0x36462b] ; call rax
0x000000000005c31b : xor eax, dword ptr [0x30] ; mov rsi, qword ptr [rip + 0x364c47] ; call rax
0x0000000000059697 : xor eax, dword ptr [0x30] ; mov rsi, qword ptr [rip + 0x3678cb] ; call rax
0x00000000000509f3 : xor eax, dword ptr [0x30] ; mov rsi, qword ptr [rip + 0x37056f] ; call rax
0x000000000004db17 : xor eax, dword ptr [0x30] ; mov rsi, qword ptr [rip + 0x37344b] ; call rax
0x00000000001174f8 : xor eax, dword ptr [0x30] ; test rax, rax ; je 0x11753c ; call rax
0x00000000000c7c26 : xor eax, dword ptr [0x30] ; test rax, rax ; je 0xc7c58 ; mov rsi, rdi ; xor edi, edi ; call rax
0x000000000004dae6 : xor eax, dword ptr [0x30] ; xor esi, esi ; call rax
0x00000000001507d0 : xor eax, dword ptr [rax + 0x3b7701fa] ; jb 0x1507ea ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000005dbaf : xor eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000867ba : xor eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000109b11 : xor eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; cmp rax, -0xfff ; jae 0x109b2e ; ret
0x0000000000032bc2 : xor eax, dword ptr [rax] ; add cl, al ; cli ; add al, byte ptr [rcx - 0xccc1e] ; inc dword ptr [rcx] ; ret 0xd089
0x000000000008aa4b : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000008a75e : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000008a774 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000008a931 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000909ec : xor eax, dword ptr [rax] ; add rsp, 0x100 ; ret
0x000000000008a9e4 : xor eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x000000000008fb28 : xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000087913 : xor eax, dword ptr [rax] ; jb 0x87931 ; cmp rcx, qword ptr [rip + 0x33beba] ; jb 0x87944 ; sub rax, 0x10 ; ret
0x000000000008791c : xor eax, dword ptr [rax] ; jb 0x8793b ; sub rax, 0x10 ; ret
0x00000000000857c4 : xor eax, dword ptr [rax] ; jne 0x857dd ; jmp 0x857f7
0x000000000008aa45 : xor eax, dword ptr [rax] ; mov dword ptr [rip + 0x338d9b], 1 ; mov eax, ebx ; pop rbx ; ret
0x0000000000085765 : xor eax, dword ptr [rax] ; mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x0000000000086823 : xor eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x0000000000086819 : xor eax, dword ptr [rax] ; mov qword ptr [rax], rsi ; mov rax, qword ptr [rip + 0x33a6bb] ; mov qword ptr [rax], rdi ; ret
0x000000000008fb21 : xor eax, dword ptr [rax] ; mov qword ptr [rip + 0x333d5e], rax ; add rsp, 8 ; ret
0x000000000008fadf : xor eax, dword ptr [rax] ; mov qword ptr [rip + 0x333da0], rax ; ret
0x0000000000086917 : xor eax, dword ptr [rax] ; mov qword ptr [rip + 0x33ceb8], rsi ; xor eax, eax ; ret
0x000000000008426e : xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], r8 ; xor edi, edi ; call qword ptr [rax]
0x000000000008b55d : xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x0000000000084176 : xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rcx ; mov rdi, r14 ; mov qword ptr [rsp + 0x10], r14 ; call qword ptr [rax]
0x0000000000087dd3 : xor eax, dword ptr [rax] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x87de9 ; call rax
0x000000000008fae6 : xor eax, dword ptr [rax] ; ret
0x000000000008fb07 : xor eax, dword ptr [rax] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x000000000008fb3d : xor eax, dword ptr [rax] ; test eax, eax ; jne 0x8fb5a ; add rsp, 8 ; ret
0x0000000000088084 : xor eax, dword ptr [rax] ; test eax, eax ; js 0x88097 ; ret
0x000000000008a854 : xor eax, dword ptr [rax] ; test ebx, ebx ; je 0x8a877 ; xor ebx, ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x000000000008691e : xor eax, dword ptr [rax] ; xor eax, eax ; ret
0x00000000000843e6 : xor eax, dword ptr [rax] ; xor edi, edi ; call qword ptr [rax]
0x00000000000858d5 : xor eax, dword ptr [rax] ; xor esi, esi ; mov dword ptr fs:[rax], 0xc ; mov rax, rsi ; ret
0x000000000013e124 : xor eax, dword ptr [rbx - 0x6bf0fd08] ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000010a3b3 : xor eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall ; cmp rax, -0x1000 ; ja 0x10a3d6 ; ret
0x000000000012a71d : xor eax, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000086719 : xor eax, dword ptr [rsi] ; or dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x000000000004dd7c : xor eax, eax ; mov edx, 1 ; jmp rax
0x00000000000bb419 : xor eax, eax ; mov rcx, r13 ; lea r9, qword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x00000000000acd89 : xor eax, eax ; mov rsi, r13 ; lea r9, qword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x000000000012f1c9 : xor eax, eax ; mov word ptr [rbx + 2], ax ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000ad198 : xor eax, eax ; push 0 ; lea rcx, qword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000126735 : xor eax, eax ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x0000000000119338 : xor eax, eax ; syscall ; cmp rax, -0x1000 ; ja 0x11935d ; ret
0x000000000007aff4 : xor eax, eax ; syscall ; cmp rax, -0x1000 ; ja 0x7b00f ; ret
0x000000000002145c : xor eax, eax ; xor ecx, ecx ; movzx eax, al ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x000000000003a8cb : xor eax, edx ; sub rax, rdx ; ret
0x0000000000100d7c : xor ebp, dword ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; setne al ; add rsp, 8 ; movzx eax, al ; ret
0x00000000000403c8 : xor ebp, ebp ; add rax, rax ; sub rdx, rax ; jmp 0x4040d
0x000000000013bca7 : xor ebp, ebp ; add rsp, 0x20 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006bbf0 : xor ebp, ebp ; add rsp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000103505 : xor ebp, esi ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000006bb78 : xor ebx, ebx ; add rsp, 0x1008 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000bbb07 : xor ebx, ebx ; mov dword ptr fs:[rax], 0x4b ; mov rax, rbx ; pop rbx ; ret
0x0000000000143407 : xor ebx, ebx ; mov dword ptr fs:[rdx], eax ; add rsp, 0x510 ; mov rax, rbx ; pop rbx ; ret
0x000000000013ae36 : xor ebx, ebx ; mov r13, rax ; mov r12d, dword ptr [rax] ; jmp 0x13ae50
0x00000000000be4e4 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002a696 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006bc70 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; ret
0x00000000000e25e9 : xor ebx, ebx ; mov rdx, rax ; jmp 0xe2603
0x000000000002aefe : xor ebx, ebx ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x00000000001177d1 : xor ecx, dword ptr [rax - 0x73] ; jne 0x1177c2 ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x00000000000ba402 : xor ecx, dword ptr [rax - 0x75] ; and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000010431d : xor ecx, dword ptr [rax - 0x75] ; jl 0x104351 ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000000c8564 : xor ecx, dword ptr [rax - 0x77] ; jnp 0xc8582 ; mov qword ptr [rbx + 0x18], rdx ; add rsp, 0xd0 ; pop rbx ; ret
0x00000000000f4549 : xor ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000986f5 : xor ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000008db01 : xor ecx, eax ; and rax, 0xffffffffffffffc0 ; sar rdx, cl ; test rdx, rdx ; je 0x8db31 ; bsf rax, rdx ; ret
0x000000000002145e : xor ecx, ecx ; movzx eax, al ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x0000000000102d43 : xor ecx, esp ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000012b79c : xor edi, dword ptr [0x30] ; call rax
0x0000000000197fe1 : xor edi, eax ; lcall ptr [rax + rcx*8 + 0x33b40001] ; clc ; jmp rsp
0x0000000000084275 : xor edi, edi ; call qword ptr [rax]
0x00000000000c7c35 : xor edi, edi ; call rax
0x0000000000098c0f : xor edi, edi ; mov rax, rdi ; ret
0x0000000000193989 : xor edi, esp ; call rax
0x000000000003f78c : xor edx, dword ptr [rip + 0x590ff200] ; shl byte ptr [rdi + rax*8], 0x22 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000021463 : xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x00000000001196e5 : xor edx, edx ; add rsp, 0x18 ; div rbp ; mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000c86f0 : xor edx, edx ; add rsp, 0x98 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000c04c1 : xor edx, edx ; add rsp, 8 ; mov rax, rdx ; ret
0x0000000000079b99 : xor edx, edx ; div rbp ; mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007de73 : xor edx, edx ; jmp rax
0x00000000000c8707 : xor edx, edx ; mov dword ptr fs:[rax], 2 ; mov rax, rdx ; ret
0x00000000000cd051 : xor edx, edx ; mov eax, 0x3d ; syscall ; cmp rax, -0x1000 ; ja 0xcd079 ; ret
0x0000000000080454 : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000006ee20 : xor edx, edx ; mov rax, rdx ; ret
0x000000000012ccbe : xor edx, edx ; mov rsi, r15 ; mov rdi, rbx ; mov qword ptr [rsp], rax ; mov rcx, rax ; call r12
0x000000000008fac3 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000070ec4 : xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000000f8106 : xor edx, edx ; xor esi, esi ; mov rdi, rbx ; call rax
0x000000000008040c : xor esi, dword ptr [rax + rax] ; add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000007f144 : xor esi, dword ptr [rax + rax] ; ret
0x00000000001537fb : xor esi, edi ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000003d17e : xor esi, esi ; add rax, rax ; sub rdx, rax ; jmp 0x3d1c3
0x000000000004daed : xor esi, esi ; call rax
0x00000000000858d7 : xor esi, esi ; mov dword ptr fs:[rax], 0xc ; mov rax, rsi ; ret
0x0000000000119218 : xor esi, esi ; mov rax, rsi ; ret
0x00000000000f8108 : xor esi, esi ; mov rdi, rbx ; call rax
0x00000000001109fd : xor esi, esi ; mov rdx, qword ptr [rsp + 0x10] ; mov edi, 0x2000004 ; call rax
0x000000000004540c : xor esi, esi ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000193945 : xor esp, edi ; call qword ptr [rax]
0x000000000003d17d : xor r14d, r14d ; add rax, rax ; sub rdx, rax ; jmp 0x3d1c4
0x000000000003d17c : xor r14d, r14d ; add rax, rax ; sub rdx, rax ; jmp 0x3d1c5
0x000000000004dd7b : xor r8d, r8d ; mov edx, 1 ; jmp rax
0x00000000000bb418 : xor r8d, r8d ; mov rcx, r13 ; lea r9, qword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x00000000000acd88 : xor r8d, r8d ; mov rsi, r13 ; lea r9, qword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000ad197 : xor r8d, r8d ; push 0 ; lea rcx, qword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000002145b : xor r8d, r8d ; xor ecx, ecx ; movzx eax, al ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x00000000000fd832 : xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x000000000006c314 : xor rax, 0x64d8f700 ; mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000020745 : xor rax, qword ptr [0x30] ; add rsp, 0x28 ; jmp rax
0x000000000008fb64 : xor rax, qword ptr [0x30] ; add rsp, 8 ; jmp rax
0x00000000000645a5 : xor rax, qword ptr [0x30] ; call rax
0x000000000003561f : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000122ed8 : xor rax, qword ptr [0x30] ; lea rdi, qword ptr [rip + 0x2a2815] ; call rax
0x00000000000453e6 : xor rax, qword ptr [0x30] ; lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x00000000000704c1 : xor rax, qword ptr [0x30] ; lea rsi, qword ptr [rip + 0x30] ; call rax
0x000000000007e3c1 : xor rax, qword ptr [0x30] ; lea rsi, qword ptr [rip - 0x19b0] ; call rax
0x000000000007e87b : xor rax, qword ptr [0x30] ; lea rsi, qword ptr [rip - 0x1e6a] ; call rax
0x000000000007ed3b : xor rax, qword ptr [0x30] ; lea rsi, qword ptr [rip - 0x232a] ; call rax
0x00000000000707ab : xor rax, qword ptr [0x30] ; lea rsi, qword ptr [rip - 0x2ba] ; call rax
0x000000000007cd21 : xor rax, qword ptr [0x30] ; lea rsi, qword ptr [rip - 0x310] ; call rax
0x000000000007cf91 : xor rax, qword ptr [0x30] ; lea rsi, qword ptr [rip - 0x580] ; call rax
0x00000000000f76ae : xor rax, qword ptr [0x30] ; mov edi, 1 ; call rax
0x0000000000047bc1 : xor rax, qword ptr [0x30] ; mov edi, dword ptr [rsp + 0x3c] ; call rax
0x000000000003a870 : xor rax, qword ptr [0x30] ; mov qword ptr fs:[rbp], rdx ; call rax
0x000000000002f5f5 : xor rax, qword ptr [0x30] ; mov rdi, r13 ; call rax
0x00000000000645ce : xor rax, qword ptr [0x30] ; mov rsi, qword ptr [rip + 0x35c993] ; call rax
0x000000000005c936 : xor rax, qword ptr [0x30] ; mov rsi, qword ptr [rip + 0x36462b] ; call rax
0x000000000005c31a : xor rax, qword ptr [0x30] ; mov rsi, qword ptr [rip + 0x364c47] ; call rax
0x0000000000059696 : xor rax, qword ptr [0x30] ; mov rsi, qword ptr [rip + 0x3678cb] ; call rax
0x00000000000509f2 : xor rax, qword ptr [0x30] ; mov rsi, qword ptr [rip + 0x37056f] ; call rax
0x000000000004db16 : xor rax, qword ptr [0x30] ; mov rsi, qword ptr [rip + 0x37344b] ; call rax
0x00000000001174f7 : xor rax, qword ptr [0x30] ; test rax, rax ; je 0x11753d ; call rax
0x000000000004dae5 : xor rax, qword ptr [0x30] ; xor esi, esi ; call rax
0x0000000000020744 : xor rax, qword ptr fs:[0x30] ; add rsp, 0x28 ; jmp rax
0x000000000008fb63 : xor rax, qword ptr fs:[0x30] ; add rsp, 8 ; jmp rax
0x00000000000645a4 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000003561e : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000122ed7 : xor rax, qword ptr fs:[0x30] ; lea rdi, qword ptr [rip + 0x2a2815] ; call rax
0x00000000000453e5 : xor rax, qword ptr fs:[0x30] ; lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x00000000000704c0 : xor rax, qword ptr fs:[0x30] ; lea rsi, qword ptr [rip + 0x30] ; call rax
0x000000000007e3c0 : xor rax, qword ptr fs:[0x30] ; lea rsi, qword ptr [rip - 0x19b0] ; call rax
0x000000000007e87a : xor rax, qword ptr fs:[0x30] ; lea rsi, qword ptr [rip - 0x1e6a] ; call rax
0x000000000007ed3a : xor rax, qword ptr fs:[0x30] ; lea rsi, qword ptr [rip - 0x232a] ; call rax
0x00000000000707aa : xor rax, qword ptr fs:[0x30] ; lea rsi, qword ptr [rip - 0x2ba] ; call rax
0x000000000007cd20 : xor rax, qword ptr fs:[0x30] ; lea rsi, qword ptr [rip - 0x310] ; call rax
0x000000000007cf90 : xor rax, qword ptr fs:[0x30] ; lea rsi, qword ptr [rip - 0x580] ; call rax
0x00000000000f76ad : xor rax, qword ptr fs:[0x30] ; mov edi, 1 ; call rax
0x0000000000047bc0 : xor rax, qword ptr fs:[0x30] ; mov edi, dword ptr [rsp + 0x3c] ; call rax
0x000000000003a86f : xor rax, qword ptr fs:[0x30] ; mov qword ptr fs:[rbp], rdx ; call rax
0x000000000002f5f4 : xor rax, qword ptr fs:[0x30] ; mov rdi, r13 ; call rax
0x00000000000645cd : xor rax, qword ptr fs:[0x30] ; mov rsi, qword ptr [rip + 0x35c993] ; call rax
0x000000000005c935 : xor rax, qword ptr fs:[0x30] ; mov rsi, qword ptr [rip + 0x36462b] ; call rax
0x000000000005c319 : xor rax, qword ptr fs:[0x30] ; mov rsi, qword ptr [rip + 0x364c47] ; call rax
0x0000000000059695 : xor rax, qword ptr fs:[0x30] ; mov rsi, qword ptr [rip + 0x3678cb] ; call rax
0x00000000000509f1 : xor rax, qword ptr fs:[0x30] ; mov rsi, qword ptr [rip + 0x37056f] ; call rax
0x000000000004db15 : xor rax, qword ptr fs:[0x30] ; mov rsi, qword ptr [rip + 0x37344b] ; call rax
0x00000000001174f6 : xor rax, qword ptr fs:[0x30] ; test rax, rax ; je 0x11753e ; call rax
0x000000000004dae4 : xor rax, qword ptr fs:[0x30] ; xor esi, esi ; call rax
0x000000000007610e : xor rax, rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000012f0fe : xor rax, rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008dbd5 : xor rax, rax ; ret
0x0000000000033ef4 : xor rax, rdx ; movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x33ee2 ; ret
0x000000000003a8ca : xor rax, rdx ; sub rax, rdx ; ret
0x0000000000103504 : xor rbp, rsi ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000012b79b : xor rdi, qword ptr [0x30] ; call rax
0x000000000012b79a : xor rdi, qword ptr fs:[0x30] ; call rax
0x00000000000f8105 : xor rdx, rdx ; xor esi, esi ; mov rdi, rbx ; call rax
0x00000000001877b0 : xor spl, 0xff ; sar byte ptr [rdi - 0xc], 1 ; call rax
