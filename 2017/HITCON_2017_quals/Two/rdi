0x00000000001ae468 : adc al, 0 ; add byte ptr [rax], al ; adc al, 0x4b ; add dword ptr [rax], eax ; push rax ; stosb byte ptr [rdi], al ; cmc ; call qword ptr [rax]
0x00000000001ae568 : adc al, 0 ; add byte ptr [rax], al ; adc al, 0x4c ; add dword ptr [rax], eax ; push rax ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001af068 : adc al, 0 ; add byte ptr [rax], al ; adc al, 0x57 ; add dword ptr [rax], eax ; and bl, al ; cmc ; jmp qword ptr [rdi]
0x00000000001a6468 : adc al, 0 ; add byte ptr [rax], al ; adc al, 0xcb ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a6450 : adc al, 0 ; add byte ptr [rax], al ; cld ; retf 0 ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x000000000019a990 : adc al, 0 ; add byte ptr [rax], al ; cmp al, 0x10 ; add byte ptr [rax], al ; js 0x19aa1b ; std ; jmp qword ptr [rdi]
0x00000000001ad548 : adc al, 0 ; add byte ptr [rax], al ; hlt ; cmp eax, dword ptr [rcx] ; add al, ah ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001b6948 : adc al, 0 ; add byte ptr [rax], al ; hlt ; iretd ; add dword ptr [rax], eax ; adc byte ptr [rax + rdi*8], cl ; jmp qword ptr [rax]
0x00000000001a6438 : adc al, 0 ; add byte ptr [rax], al ; in al, -0x36 ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001b9938 : adc al, 0 ; add byte ptr [rax], al ; in al, -1 ; add dword ptr [rax], eax ; rol cl, 0xf8 ; call qword ptr [rdi]
0x00000000001aab38 : adc al, 0 ; add byte ptr [rax], al ; in al, 0x11 ; add dword ptr [rax], eax ; xor byte ptr [rdi], dl ; hlt ; call qword ptr [rdx]
0x00000000001ae940 : adc al, 0 ; add byte ptr [rax], al ; in al, dx ; add qword ptr [r8], r8 ; clc ; scasd eax, dword ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a4940 : adc al, 0 ; add byte ptr [rax], al ; in al, dx ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; shr rsi, cl ; jmp qword ptr [rsi]
0x00000000001ad5c0 : adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp al, 1 ; add byte ptr [rax + 0x58], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a8ac0 : adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; int1 ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0xe], al ; call qword ptr [rdx]
0x00000000001a12c0 : adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jns 0x1a12d2 ; add al, cl ; jns 0x1a12c3 ; jmp qword ptr [rdi]
0x00000000001a57c0 : adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov esi, 0xab880000 ; sti ; call qword ptr [rax]
0x00000000001a43c0 : adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; mov bl, 0xee ; jmp rdx
0x00000000001a64c8 : adc al, 0 ; add byte ptr [rax], al ; je 0x1a64a4 ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a64e0 : adc al, 0 ; add byte ptr [rax], al ; mov ebx, cs ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001aa810 : adc al, 0 ; add byte ptr [rax], al ; mov esp, 0xd800010e ; stc ; jmp qword ptr [rdi]
0x00000000001ae610 : adc al, 0 ; add byte ptr [rax], al ; mov esp, 0xd800014c ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001ae8e0 : adc al, 0 ; add byte ptr [rax], al ; mov word ptr [rdi + 1], cs ; add byte ptr [rax - 0x51], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001aa9f8 : adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc byte ptr [rcx], al ; add byte ptr [rax + 0x16], al ; hlt ; jmp qword ptr [rcx]
0x00000000001b06f8 : adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rdx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001a5bf8 : adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x00000000001a64f8 : adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001ad560 : adc al, 0 ; add byte ptr [rax], al ; or al, 0x3c ; add dword ptr [rax], eax ; clc ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001a64b0 : adc al, 0 ; add byte ptr [rax], al ; pop rsp ; retf ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001a47a8 : adc al, 0 ; add byte ptr [rax], al ; push rsp ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; nop ; shr dh, 1 ; call qword ptr [rax]
0x00000000001b1af0 : adc al, 0 ; add byte ptr [rax], al ; pushfq ; add dword ptr [rcx], 0xf6940800 ; call qword ptr [rdi]
0x00000000001a47f0 : adc al, 0 ; add byte ptr [rax], al ; pushfq ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; pop rax ; shr esi, 1 ; call rcx
0x00000000001a6498 : adc al, 0 ; add byte ptr [rax], al ; retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a5970 : adc al, 0 ; add byte ptr [rax], al ; sbb al, 0xc0 ; add byte ptr [rax], al ; clc ; jp 0x1a5980 ; jmp qword ptr [rdi]
0x00000000001a6480 : adc al, 0 ; add byte ptr [rax], al ; sub al, 0xcb ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000000418a2 : adc al, 0 ; lea rdi, qword ptr [rip + 0x14932c] ; mov edx, 0x559 ; call 0x2dbc0
0x0000000000033451 : adc al, 0 ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x000000000002d9cb : adc al, 0x11 ; test edx, edx ; je 0x2d9ec ; and esi, dword ptr [rdi + 0x10] ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000002da16 : adc al, 0x11 ; test edx, edx ; je 0x2da00 ; and esi, dword ptr [rdi + 0x10] ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x0000000000198bb8 : adc al, 0x13 ; cli ; inc dword ptr [rdi + rbx + 0x14b40002] ; cli ; call rsp
0x00000000000aa123 : adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000c2aab : adc al, 0x31 ; rol byte ptr [rcx - 0x7d], cl ; clc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x000000000004a00c : adc al, 0x31 ; ror byte ptr [rcx + 3], cl ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8949
0x00000000000a05cb : adc al, 0x48 ; add eax, 1 ; movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0xa05d6 ; ret
0x00000000000a7860 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x14] ; ret
0x00000000000a86b3 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x00000000000a0cbb : adc al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x00000000000a6b21 : adc al, 0x48 ; lea edi, dword ptr [rdi + 0x14] ; jne 0xa717b ; ret
0x00000000000a8225 : adc al, 0x48 ; lea edi, dword ptr [rdi + 0x14] ; jne 0xa898b ; ret
0x00000000000a6b40 : adc al, 0x49 ; sub eax, 0x15 ; lea rdi, qword ptr [rdi + 0x15] ; jne 0xa717f ; ret
0x00000000000a8254 : adc al, 0x49 ; sub eax, 0x15 ; lea rdi, qword ptr [rdi + 0x15] ; jne 0xa898f ; ret
0x00000000000a8253 : adc al, 0x49 ; sub eax, 0x15 ; lea rdi, qword ptr [rdi + 0x15] ; jne 0xa8990 ; ret
0x00000000001ae46c : adc al, 0x4b ; add dword ptr [rax], eax ; push rax ; stosb byte ptr [rdi], al ; cmc ; call qword ptr [rax]
0x00000000001ae56c : adc al, 0x4c ; add dword ptr [rax], eax ; push rax ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001af06c : adc al, 0x57 ; add dword ptr [rax], eax ; and bl, al ; cmc ; jmp qword ptr [rdi]
0x0000000000196b50 : adc al, 0x76 ; hlt ; inc dword ptr [rdi + rdx*2 + 0x78640001] ; hlt ; call rsp
0x00000000000dff23 : adc al, 0x92 ; lea rdi, qword ptr [rax + rsi*4] ; shl rdx, 2 ; xor esi, esi ; call 0x91820
0x0000000000122628 : adc al, 0x97 ; add byte ptr [rax], al ; test rax, rax ; je 0x12264a ; lea rdi, qword ptr [rip + 0x2a3068] ; call rax
0x0000000000033455 : adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x00000000001a646c : adc al, 0xcb ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000000913ff : adc al, 0xe ; cmp rdi, rdx ; jb 0x91412 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000019f709 : adc al, 0xed ; jmp qword ptr [rdi]
0x000000000015457b : adc al, 0xf ; sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000000a86a9 : adc al, 0xf3 ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a6e99 : adc al, 0xf3 ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000aa119 : adc al, 0xf3 ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000001961e5 : adc al, 1 ; add byte ptr [rdi + rbp - 0xf], al ; call rsp
0x0000000000021dcd : adc al, byte ptr [r8] ; mov rdi, r12 ; mov rcx, qword ptr [rbp - 0x60] ; call rcx
0x0000000000021dce : adc al, byte ptr [rax] ; mov rdi, r12 ; mov rcx, qword ptr [rbp - 0x60] ; call rcx
0x0000000000021764 : adc al, byte ptr [rax] ; mov rdi, rbx ; call r14
0x00000000000a2e97 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x00000000000a2eb7 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov ax, word ptr [rcx + 8] ; mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x00000000000a2ed7 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000a2ef7 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000000a2d54 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000a5b28 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000c9b3d : adc al, ch ; insd dword ptr [rdi], dx ; pop rsi ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000c523a : adc bh, byte ptr [rdi + rbp + 0x48b4800] ; ret 0x8548
0x0000000000090e2c : adc bl, al ; nop ; bsf eax, eax ; sub rdx, rax ; jbe 0x90e61 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000090df7 : adc bl, al ; nop dword ptr [rax] ; bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x00000000000a0c37 : adc bl, al ; nop dword ptr [rax] ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000035228 : adc bl, bl ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x0000000000048de2 : adc bl, ch ; jno 0x48e38 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000015b040 : adc bl, dh ; movq qword ptr [rdi + 0x10], mm0 ; lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000918a6 : adc bl, dh ; movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x00000000000a8626 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a6e46 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000aa096 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a7836 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a8686 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a7856 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a61c6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a61b6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000aa0f6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a78b7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a8707 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a78d7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a6247 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a6227 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000aa177 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a77f7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a8647 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a6187 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000aa0b7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a79b8 : adc bl, dh ; movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a8808 : adc bl, dh ; movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a6328 : adc bl, dh ; movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000aa278 : adc bl, dh ; movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x000000000015b03f : adc bl, r14b ; movq qword ptr [rdi + 0x10], mm0 ; lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a8625 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a6e45 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000aa095 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a7835 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a8685 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a7855 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a61c5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a61b5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000aa0f5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a78b6 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a8706 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a78d6 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a6246 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a6226 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000aa176 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a77f6 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a8646 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a6186 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000aa0b6 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x0000000000079102 : adc byte ptr [r10 + 0x2a], r14b ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000794d2 : adc byte ptr [r10 - 0x18], r14b ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x0000000000079946 : adc byte ptr [r11 + 0x16], r14b ; lea rdx, qword ptr [rax + 1] ; mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000007997d : adc byte ptr [r11 + 0xf], r14b ; lea rdx, qword ptr [rax + 1] ; mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x0000000000091552 : adc byte ptr [r15], r9b ; adc dword ptr [rdi + rdx - 0x10], edx ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x00000000000aa11f : adc byte ptr [r8 - 0x12cfeba9], r9b ; mov byte ptr [rdi + 0x15], ch ; ret
0x000000000007d24c : adc byte ptr [r8 - 0x77], r9b ; sbb byte ptr [r8 - 0x77], r9b ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000aa09c : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000aa0be : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000aa0fc : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000aa17e : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x0000000000129ea2 : adc byte ptr [r9 - 0x3c7cb726], r9b ; add dword ptr [rcx], edi ; sar byte ptr [rdi - 0x52], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007eea9 : adc byte ptr [r9], r13b ; rol bl, 1 ; nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000130e77 : adc byte ptr [rax + 0x29], cl ; int1 ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000025cd5 : adc byte ptr [rax + 0x4c], dl ; mov ecx, dword ptr [rsp + 0x38] ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000000a0853 : adc byte ptr [rax + 0x789044f], cl ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000134b87 : adc byte ptr [rax + 1], bh ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x00000000001b6950 : adc byte ptr [rax + rdi*8], cl ; jmp qword ptr [rax]
0x00000000000aa2a4 : adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000aa1a2 : adc byte ptr [rax - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000aa120 : adc byte ptr [rax - 0x12cfeba9], cl ; mov byte ptr [rdi + 0x15], ch ; ret
0x0000000000165b64 : adc byte ptr [rax - 0x73], cl ; adc byte ptr [rdi], cl ; test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x00000000000ad45b : adc byte ptr [rax - 0x75], cl ; je 0xad490 ; sbb byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x00000000000ad71b : adc byte ptr [rax - 0x75], cl ; je 0xad750 ; sbb byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbp ; call rbx
0x00000000000ad9fb : adc byte ptr [rax - 0x75], cl ; je 0xada30 ; sbb byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbp ; call rbx
0x000000000007d24d : adc byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 - 0x77], r9b ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x00000000001721b1 : adc byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdx + 0x48] ; mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x1721d6 ; call rax
0x0000000000162a87 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000162ac3 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000a1944 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x13
0x00000000000c517b : adc byte ptr [rax - 0x7d], cl ; shr byte ptr [rsi], 0x4c ; mov edx, esi ; mov rsi, qword ptr [rdi + rax*8] ; mov rdi, rbp ; call 0x913c1
0x000000000019a995 : adc byte ptr [rax], al ; add byte ptr [rax + 0x76], bh ; std ; jmp qword ptr [rdi]
0x00000000001b1aeb : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; add dword ptr [rcx], 0xf6940800 ; call qword ptr [rdi]
0x00000000001a2b5a : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; or al, 0x92 ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; std ; jmp rdi
0x0000000000125f1a : adc byte ptr [rax], al ; add byte ptr [rcx - 0x78f033a3], cl ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000207e4 : adc byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg dword ptr [rdx], eax ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000105584 : adc byte ptr [rax], al ; jne 0x104b05 ; mov esi, 3 ; mov rdi, r12 ; call rbx
0x0000000000105603 : adc byte ptr [rax], al ; jne 0x104b2a ; mov esi, 3 ; mov rdi, r13 ; call rbx
0x0000000000105643 : adc byte ptr [rax], al ; jne 0x104b4e ; mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000105883 : adc byte ptr [rax], al ; jne 0x104b6e ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x00000000001058e3 : adc byte ptr [rax], al ; jne 0x104be7 ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x00000000001056a3 : adc byte ptr [rax], al ; jne 0x104c73 ; mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000105923 : adc byte ptr [rax], al ; jne 0x104c93 ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000105903 : adc byte ptr [rax], al ; jne 0x104d0c ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x00000000001055c3 : adc byte ptr [rax], al ; jne 0x104da8 ; mov esi, 3 ; mov rdi, r13 ; call rbx
0x0000000000105683 : adc byte ptr [rax], al ; jne 0x104dcc ; mov esi, 3 ; mov rdi, r14 ; call rbx
0x00000000001058c3 : adc byte ptr [rax], al ; jne 0x104dec ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x00000000001058a3 : adc byte ptr [rax], al ; jne 0x104e65 ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000105663 : adc byte ptr [rax], al ; jne 0x104ef1 ; mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000105863 : adc byte ptr [rax], al ; jne 0x104f11 ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000105843 : adc byte ptr [rax], al ; jne 0x104f8a ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000105564 : adc byte ptr [rax], al ; jne 0x105032 ; mov esi, 3 ; mov rdi, r12 ; call rbx
0x00000000001055e3 : adc byte ptr [rax], al ; jne 0x105057 ; mov esi, 3 ; mov rdi, r13 ; call rbx
0x0000000000105723 : adc byte ptr [rax], al ; jne 0x10507b ; mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000105763 : adc byte ptr [rax], al ; jne 0x10509b ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000105743 : adc byte ptr [rax], al ; jne 0x105114 ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000105703 : adc byte ptr [rax], al ; jne 0x1051a0 ; mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000105823 : adc byte ptr [rax], al ; jne 0x1051c0 ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000105803 : adc byte ptr [rax], al ; jne 0x105239 ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000105623 : adc byte ptr [rax], al ; jne 0x1052d5 ; mov esi, 3 ; mov rdi, r13 ; call rbx
0x00000000001056e3 : adc byte ptr [rax], al ; jne 0x1052f9 ; mov esi, 3 ; mov rdi, r14 ; call rbx
0x00000000001057e3 : adc byte ptr [rax], al ; jne 0x105319 ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x00000000001057c3 : adc byte ptr [rax], al ; jne 0x105392 ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x00000000001056c3 : adc byte ptr [rax], al ; jne 0x10541e ; mov esi, 3 ; mov rdi, r14 ; call rbx
0x00000000001057a3 : adc byte ptr [rax], al ; jne 0x10543e ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000105783 : adc byte ptr [rax], al ; jne 0x1054b7 ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000083942 : adc byte ptr [rax], al ; lea rdi, qword ptr [rip + 0x10b835] ; mov edx, 0x236 ; call 0x7fb80
0x00000000000838f8 : adc byte ptr [rax], al ; lea rdi, qword ptr [rip + 0x10b91f] ; mov edx, 0x246 ; call 0x7fb80
0x000000000004a510 : adc byte ptr [rax], al ; or rsi, rax ; mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x00000000000aa09d : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000aa0bf : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000aa0fd : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000aa17f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000aa281 : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000744f8 : adc byte ptr [rbp + 0x15], dh ; sub rdx, qword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x00000000000aef42 : adc byte ptr [rbp - 0x57c2fa9], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000104197 : adc byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x00000000001aafc0 : adc byte ptr [rbp - 0xc], bh ; jmp rdi
0x0000000000079947 : adc byte ptr [rbx + 0x16], dh ; lea rdx, qword ptr [rax + 1] ; mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x00000000001ad543 : adc byte ptr [rbx + 0xe], ah ; or byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; hlt ; cmp eax, dword ptr [rcx] ; add al, ah ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001ae93b : adc byte ptr [rbx + 0xe], ah ; or byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; add qword ptr [r8], r8 ; clc ; scasd eax, dword ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x000000000007997e : adc byte ptr [rbx + 0xf], dh ; lea rdx, qword ptr [rax + 1] ; mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x00000000000a6287 : adc byte ptr [rbx + 0xff3174e], cl ; jg 0xa62a5 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a6f57 : adc byte ptr [rbx + 0xff3174e], cl ; jg 0xa6f75 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a9367 : adc byte ptr [rbx + 0xff3174e], cl ; jg 0xa9385 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a9e37 : adc byte ptr [rbx + 0xff3174e], cl ; jg 0xa9e55 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a62a7 : adc byte ptr [rbx + 0xff3184e], cl ; jg 0xa62c5 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a6f77 : adc byte ptr [rbx + 0xff3184e], cl ; jg 0xa6f95 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a9387 : adc byte ptr [rbx + 0xff3184e], cl ; jg 0xa93a5 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a9e57 : adc byte ptr [rbx + 0xff3184e], cl ; jg 0xa9e75 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000004a932 : adc byte ptr [rbx + rcx + 0x49], dh ; sub eax, 4 ; cmp rdi, r8 ; jbe 0x4a93d ; ret
0x0000000000130d4d : adc byte ptr [rbx - 0x3d], bl ; mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000007594a : adc byte ptr [rcx + 0x2b], cl ; push rdi ; or byte ptr [rax - 0x3f], cl ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000088e4b : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000000aa202 : adc byte ptr [rcx - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000aa1e2 : adc byte ptr [rcx - 0x12cfe8b1], cl ; mov byte ptr [rdi + 0x1b], ch ; ret
0x0000000000129ea3 : adc byte ptr [rcx - 0x3c7cb726], cl ; add dword ptr [rcx], edi ; sar byte ptr [rdi - 0x52], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006da0a : adc byte ptr [rcx], 0 ; movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x000000000007eeaa : adc byte ptr [rcx], ch ; rol bl, 1 ; nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000110a03 : adc byte ptr [rdi + 0x2000004], bh ; call rax
0x00000000000e842a : adc byte ptr [rdi + 0xc], dh ; movzx edx, cl ; movsxd rdx, dword ptr [r15 + rdx*4] ; add rdx, r15 ; jmp rdx
0x00000000001a8352 : adc byte ptr [rdi + 0xe], al ; or byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; add al, 0xea ; add byte ptr [rax], al ; adc byte ptr [rcx], ah ; call rsi
0x00000000001b2f8a : adc byte ptr [rdi + 0xe], al ; or byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; cmp al, 0x96 ; add dword ptr [rax], eax ; add rdi, rsi ; call rsi
0x00000000001a885a : adc byte ptr [rdi + 0xe], al ; or byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; or al, 0xef ; add byte ptr [rax], al ; sbb byte ptr [rcx], bh ; call rsi
0x00000000001af7d2 : adc byte ptr [rdi + 0xe], al ; or byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; test byte ptr [rsi + 1], bl ; add al, dh ; jrcxz 0x1af7e9 ; call rsi
0x00000000000ba83f : adc byte ptr [rdi + rdx*8 + 0x48], dh ; add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000019410c : adc byte ptr [rdi - 0x696f0004], dl ; cld ; call qword ptr [rax]
0x0000000000112c9d : adc byte ptr [rdi - 0x76b7fff9], ah ; ret 0x8948
0x0000000000193e5c : adc byte ptr [rdi - 4], bl ; call qword ptr [rax + 0x10fffc60]
0x0000000000193dd8 : adc byte ptr [rdi - 4], ch ; call qword ptr [rax + 0x10fffc6e]
0x0000000000008fd1 : adc byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + rax], bl ; add byte ptr [rax], al ; ret
0x000000000019373c : adc byte ptr [rdi], bl ; cld ; inc dword ptr [rax] ; and esp, edi ; call rax
0x000000000009166d : adc byte ptr [rdi], cl ; adc dword ptr [rdi + 0x20], esi ; movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000091553 : adc byte ptr [rdi], cl ; adc dword ptr [rdi + rdx - 0x10], edx ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x0000000000138279 : adc byte ptr [rdi], cl ; enter -0x3f77, 0x48 ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000002ddc5 : adc byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000011b292 : adc byte ptr [rdi], cl ; mov bh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x000000000008b6c3 : adc byte ptr [rdi], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x00000000000799d8 : adc byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; pop rbx ; ret
0x000000000010b3b2 : adc byte ptr [rdi], cl ; ret 0x66c3
0x00000000000360b5 : adc byte ptr [rdi], cl ; ret 0x8b48
0x00000000000ec248 : adc byte ptr [rdi], cl ; ret 0xfc3
0x0000000000165b68 : adc byte ptr [rdi], cl ; test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x000000000016ed33 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000148db1 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000148ea1 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000148cc1 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001505db : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014f0df : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x00000000001502df : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014f9df : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014fcdf : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014f3d7 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000149709 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x0000000000149261 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000001489f1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x0000000000149441 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000148bd1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000149621 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000149531 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000148e73 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148f63 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148d83 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014f684 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000150284 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000150584 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014fc84 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014f984 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000014f37c : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148ae1 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000014ca0d : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c82d : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d205 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c125 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014d025 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000148c93 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148ab3 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148ba3 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001489c3 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000036133 : adc byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5489
0x00000000000ec23d : adc byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; cmp dword ptr [rdi + 0x10], ecx ; cmovb eax, edx ; ret
0x000000000003767e : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x00000000000381a9 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x00000000000ece72 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8948
0x0000000000183a6d : adc byte ptr [rdi], dl ; pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000ec23c : adc byte ptr [rdi], r9b ; xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; cmp dword ptr [rdi + 0x10], ecx ; cmovb eax, edx ; ret
0x00000000000495ee : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x0000000000079103 : adc byte ptr [rdx + 0x2a], dh ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000001b7ca2 : adc byte ptr [rdx + 0xe], al ; or byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rbx + 1], dl ; add byte ptr [rax], ah ; push rcx ; clc ; call rdi
0x00000000001ad0fb : adc byte ptr [rdx + 0xe], bl ; or byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rdi + rsi + 0x3c980001], ch ; cmc ; call qword ptr [rdi]
0x00000000000a6e96 : adc byte ptr [rdx + 0xff31456], cl ; jg 0xa6eb3 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000a6e95 : adc byte ptr [rdx + 0xff31456], r9b ; jg 0xa6eb4 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000a6f17 : adc byte ptr [rdx + 0xff3184e], cl ; jg 0xa6f35 ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a7018 : adc byte ptr [rdx + 0xff3204e], cl ; jg 0xa7037 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000a8828 : adc byte ptr [rdx + 0xff3204e], cl ; jg 0xa8847 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x0000000000153cf9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000000794d3 : adc byte ptr [rdx - 0x18], dh ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000001932a0 : adc byte ptr [rdx - 5], ah ; inc dword ptr [rax] ; movsxd rdi, ebx ; push rax ; movsxd rdi, ebx ; jmp qword ptr [rax]
0x00000000000a0873 : adc byte ptr [rsi + 0x44], ah ; mov dword ptr [rdi + 4], ebx ; mov byte ptr [rdi + 6], r8b ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a0863 : adc byte ptr [rsi + 0x44], ah ; mov dword ptr [rdi + 4], ebx ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000016c16a : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000016b765 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016b760 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000913cb : adc byte ptr [rsi + rdx - 0x10], cl ; movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000016dcba : adc byte ptr [rsi - 0x75], ah ; mov cx, word ptr ss:[rcx - 2] ; mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x00000000000a6267 : adc byte ptr [rsi - 0x75], ah ; sbb bl, r14b ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000aa1c3 : adc byte ptr [rsi - 0x77], ah ; sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000913c8 : adc byte ptr [rsi], al ; movups xmm1, xmmword ptr [rsi + rdx - 0x10] ; movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000004a992 : adc byte ptr [rsp + rbp*4 + 0x49], dh ; sub eax, 4 ; cmp rdi, r8 ; jbe 0x4a9a0 ; nop ; pop rbx ; ret
0x0000000000193e54 : adc byte ptr [rsp + rdi*8 - 1], bl ; nop ; pop rbp ; cld ; call qword ptr [rax]
0x0000000000193864 : adc byte ptr [rsp + rdi*8 - 1], cl ; adc byte ptr [rsi - 4], cl ; call qword ptr [rax]
0x0000000000183cf9 : adc ch, byte ptr [rip + 0x8acc8c6] ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000000e4dea : adc cl, byte ptr [rax - 9] ; ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x00000000000cfd8a : adc cl, byte ptr [rbp + rcx*4 + 0x48] ; adc ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x00000000000a2f1f : adc cl, byte ptr [rcx + 5] ; movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f3f : adc cl, byte ptr [rcx + 6] ; movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f5f : adc cl, byte ptr [rcx + 7] ; movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000a5aaf : adc cl, byte ptr [rcx + 8] ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a5b90 : adc cl, byte ptr [rcx + 8] ; movlpd qword ptr [rdx + 8], xmm1 ; xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00000000000a2da5 : adc cl, byte ptr [rcx + 8] ; movlpd qword ptr [rdx], xmm0 ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x0000000000126a65 : adc cl, byte ptr [rdi] ; mov dh, 0x47 ; add ecx, eax ; loopne 0x126a7e ; cdqe ; shr rax, 4 ; ret
0x00000000000aadad : adc cl, byte ptr [rdi] ; mov dh, 0xca ; xor edx, edx ; pop rbx ; and eax, 0x7ff80000 ; div ecx ; mov eax, eax ; ret
0x0000000000132a0a : adc dh, byte ptr [rax + rax + 0xfc08500] ; xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000014d5d9 : adc dh, byte ptr [rbx - 0xc] ; movsxd rax, ecx ; add rax, rdi ; sub rax, rdx ; ret
0x000000000010a458 : adc dh, byte ptr [rdi + 0xd] ; lea rax, qword ptr [rip + 0x7e7be] ; movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000001a7dd1 : adc dl, dh ; jmp qword ptr [rdi]
0x00000000000f71b6 : adc dword ptr [rax + 0x39], ecx ; fmul dword ptr [rdi] ; lahf ; rcr byte ptr [rbx - 0x3d], 0x90 ; xor eax, eax ; pop rbx ; ret
0x0000000000122ed6 : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rdi, qword ptr [rip + 0x2a2815] ; call rax
0x000000000002f5f3 : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x0000000000075844 : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000000299b4 : adc dword ptr [rax], eax ; mov rdi, rbx ; call r12
0x000000000006da0b : adc dword ptr [rax], eax ; movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x000000000002d9cc : adc dword ptr [rbp + 0x230a74d2], eax ; ja 0x2d9f4 ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000002da17 : adc dword ptr [rbp + 0x23d474d2], eax ; ja 0x2da3e ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x0000000000098d6a : adc dword ptr [rbp + 0x38], eax ; ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x000000000013eabe : adc dword ptr [rcx], eax ; ja 0x13eaf2 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000009166b : adc dword ptr [rdi + 0x10], ebp ; movups xmmword ptr [rdi + 0x20], xmm6 ; movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000091551 : adc dword ptr [rdi + 0x10], ecx ; movups xmmword ptr [rdi + rdx - 0x10], xmm2 ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x000000000009166f : adc dword ptr [rdi + 0x20], esi ; movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000109f63 : adc dword ptr [rdi + 0x2b], ebp ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000010a763 : adc dword ptr [rdi + 0x2b], esp ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000091673 : adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000018219a : adc dword ptr [rdi + 0x5fa022da], 0xd849416 ; ret 0xbe57
0x000000000016dc24 : adc dword ptr [rdi + 1], ecx ; vmovups zmmword ptr [r9 - 0x80], zmm2 ; vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x000000000016e331 : adc dword ptr [rdi + 1], edx ; vmovups zmmword ptr [rsi - 0x80], zmm2 ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x00000000000913d3 : adc dword ptr [rdi + rdx - 0x10], ecx ; ret
0x0000000000091555 : adc dword ptr [rdi + rdx - 0x10], edx ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x000000000009152d : adc dword ptr [rdi + rdx - 0x20], ebp ; movups xmmword ptr [rdi + rdx - 0x30], xmm6 ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x000000000009155a : adc dword ptr [rdi + rdx - 0x20], ebx ; ret
0x0000000000091532 : adc dword ptr [rdi + rdx - 0x30], esi ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x0000000000091537 : adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x0000000000085763 : adc dword ptr [rdi - 0x389bffcd], esi ; add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016e0eb : adc dword ptr [rdi - 6], ebp ; vmovups zmmword ptr [rdi - 0x1c0], zmm14 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000016e0f2 : adc dword ptr [rdi - 7], esi ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000016e0f9 : adc dword ptr [rdi - 8], edi ; ret
0x0000000000034f07 : adc dword ptr [rdi], eax ; and eax, 0x80000000 ; movd xmm0, eax ; ret
0x0000000000034b53 : adc dword ptr [rdi], eax ; and rax, rdx ; movq xmm0, rax ; ret
0x0000000000034f4d : adc dword ptr [rdi], eax ; je 0x34f6f ; mov eax, edx ; and eax, 0x80000000 ; movd xmm0, eax ; ret
0x000000000009154e : adc dword ptr [rdi], eax ; movups xmmword ptr [rdi + 0x10], xmm1 ; movups xmmword ptr [rdi + rdx - 0x10], xmm2 ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x00000000000913d0 : adc dword ptr [rdi], eax ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000034bd4 : adc dword ptr [rdi], ecx ; ret
0x0000000000034b9d : adc dword ptr [rdi], ecx ; subsd xmm0, xmm1 ; ret
0x0000000000034f22 : adc dword ptr [rdi], ecx ; subss xmm0, xmm1 ; ret
0x0000000000170330 : adc dword ptr [rdi], ecx ; test byte ptr [rbx], bl ; add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x000000000016e34c : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x00000000000a0508 : adc dword ptr [rdx + rdx*8 - 0x2dce148b], eax ; mov qword ptr [rdi], rdx ; ret
0x00000000000744fa : adc eax, 0x10502b48 ; mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x00000000000ab04a : adc eax, 0x10ef8348 ; add rax, rdi ; ret
0x00000000000a8283 : adc eax, 0x16e88349 ; lea rdi, qword ptr [rdi + 0x16] ; jne 0xa898f ; ret
0x00000000000a8282 : adc eax, 0x16e88349 ; lea rdi, qword ptr [rdi + 0x16] ; jne 0xa8990 ; ret
0x00000000000e8f52 : adc eax, 0x2d8051 ; mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x0000000000139c52 : adc eax, 0x3609 ; mov rdi, rbx ; call qword ptr [rax]
0x000000000002cb15 : adc eax, 0x387a3b00 ; jae 0x2cb3b ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x000000000003f78d : adc eax, 0x590ff200 ; shl byte ptr [rdi + rax*8], 0x22 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000003c57d : adc eax, 0x590ff300 ; shl byte ptr [rdi + rax*8], 0x22 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000a10fa : adc eax, 0xd0bc0f48 ; movzx eax, byte ptr [rdi + rdx] ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000034f02 : adc eax, 0xff3d089 ; adc dword ptr [rdi], eax ; and eax, 0x80000000 ; movd xmm0, eax ; ret
0x000000000009191f : adc eax, dword ptr [rax + 0x157701fa] ; jb 0x91933 ; mov byte ptr [rdi], cl ; ret
0x000000000006da09 : adc eax, dword ptr [rax + 0x63480011] ; or al, 0x8f ; add rcx, rdi ; jmp rcx
0x000000000019970d : adc eax, dword ptr [rcx] ; add byte ptr [rdi + rdi*4 - 4], dh ; jmp rsp
0x0000000000199705 : adc eax, dword ptr [rcx] ; add byte ptr [rsi + rbx*4], dh ; cld ; dec esp ; adc eax, dword ptr [rcx] ; add byte ptr [rdi + rdi*4 - 4], dh ; jmp rsp
0x00000000000a2e9b : adc eax, dword ptr [rdx] ; mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x00000000000a2ebb : adc eax, dword ptr [rdx] ; mov ax, word ptr [rcx + 8] ; mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x00000000000a2edb : adc eax, dword ptr [rdx] ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000a2efb : adc eax, dword ptr [rdx] ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000000a2d58 : adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x00000000000a2daa : adc eax, dword ptr [rdx] ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f1b : adc eax, dword ptr [rdx] ; movlpd xmm1, qword ptr [rcx + 5] ; movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f3b : adc eax, dword ptr [rdx] ; movlpd xmm1, qword ptr [rcx + 6] ; movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f5b : adc eax, dword ptr [rdx] ; movlpd xmm1, qword ptr [rcx + 7] ; movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000a5aab : adc eax, dword ptr [rdx] ; movlpd xmm1, qword ptr [rcx + 8] ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a5b2c : adc eax, dword ptr [rdx] ; xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000abd0c : adc eax, ebx ; nop ; mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xabd2c ; ret
0x0000000000098c04 : adc ecx, dword ptr [rax - 0x7d] ; rol dword ptr [rcx], 0x48 ; sub esi, 1 ; jne 0x98c10 ; xor edi, edi ; mov rax, rdi ; ret
0x0000000000071d89 : adc ecx, dword ptr [rcx + rcx*4 - 0x19] ; mov rax, rdi ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000130530 : adc ecx, dword ptr [rdi] ; mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x0000000000097797 : adc ecx, dword ptr [rdi] ; test edx, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000cfd8e : adc ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x00000000000a2f24 : adc ecx, dword ptr [rdx + 5] ; mov rax, rdi ; ret
0x00000000000a2f44 : adc ecx, dword ptr [rdx + 6] ; mov rax, rdi ; ret
0x00000000000a2f64 : adc ecx, dword ptr [rdx + 7] ; mov rax, rdi ; ret
0x00000000000a2dae : adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000000a5b95 : adc ecx, dword ptr [rdx + 8] ; xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x000000000003639c : adc edi, dword ptr [rax + 1] ; shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000198bb9 : adc edi, edx ; inc dword ptr [rdi + rbx + 0x14b40002] ; cli ; call rsp
0x00000000000038f5 : adc edx, dword ptr [rbp - 0x5d] ; leave ; pop rdi ; ja 0x3961 ; clc ; salc ; jb 0x3987 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00000000000494fa : adc edx, eax ; mov qword ptr [rdi + r11*8 + 8], r9 ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000048751 : adc edx, ebx ; mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x00000000001a7ed1 : adc edx, esi ; jmp qword ptr [rdi]
0x000000000004c56c : adc esi, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000016df96 : adc qword ptr [rcx + 7], rdi ; ret
0x000000000016dbf5 : adc qword ptr [rcx - 1], rdi ; ret
0x000000000016e0f1 : adc qword ptr [rdi - 7], rsi ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000016e0f8 : adc qword ptr [rdi - 8], rdi ; ret
0x000000000016e34b : adc qword ptr [rdi], rdx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x0000000000048750 : adc r10, r11 ; mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x00000000000918a5 : adc r11b, r14b ; movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x00000000000cfd8d : adc rcx, qword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x00000000000494f9 : adc rdx, r8 ; mov qword ptr [rdi + r11*8 + 8], r9 ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000195d7f : add ah, ah ; jo 0x195d7e ; lcall ptr [rdx + rdi*8 + 0x71940000] ; out dx, eax ; call rsp
0x0000000000195d3f : add ah, ah ; out dx, eax ; inc dword ptr [rax + rdi*8 + 0x6a140000] ; out dx, eax ; jmp rsp
0x000000000019584f : add ah, ah ; push rdi ; out dx, al ; call rsp
0x00000000001a643b : add ah, ah ; retf 0 ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a483b : add ah, ah ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; adc dl, dl ; out dx, al ; call qword ptr [rcx]
0x0000000000196767 : add ah, al ; dec dword ptr [rbx + rdi + 1] ; add ah, dl ; call rsp
0x0000000000198e57 : add ah, al ; insd dword ptr [rdi], dx ; cli ; call rsp
0x00000000001b931b : add ah, al ; stc ; add dword ptr [rax], eax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; clc ; jmp qword ptr [rcx]
0x000000000019e053 : add ah, bh ; add byte ptr [rax], r8b ; shr rdx, 1 ; jmp rdi
0x00000000001a6453 : add ah, bh ; retf 0 ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000000a2f1c : add ah, byte ptr [rsi + 0xf] ; adc cl, byte ptr [rcx + 5] ; movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f3c : add ah, byte ptr [rsi + 0xf] ; adc cl, byte ptr [rcx + 6] ; movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f5c : add ah, byte ptr [rsi + 0xf] ; adc cl, byte ptr [rcx + 7] ; movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000a5aac : add ah, byte ptr [rsi + 0xf] ; adc cl, byte ptr [rcx + 8] ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a2dab : add ah, byte ptr [rsi + 0xf] ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000000a2e38 : add ah, byte ptr [rsi - 0x75] ; add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000000a9f25 : add ah, byte ptr [rsi - 0x77] ; js 0xffffffffed3aa191 ; mov byte ptr [rdi + 3], ch ; ret
0x00000000001ae943 : add ah, ch ; add qword ptr [r8], r8 ; clc ; scasd eax, dword ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a4943 : add ah, ch ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; shr rsi, cl ; jmp qword ptr [rsi]
0x00000000001b0623 : add ah, cl ; insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; sub byte ptr [rcx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001a6423 : add ah, cl ; retf 0 ; sub byte ptr [rdi - 0x10], dh ; jmp qword ptr [rax]
0x00000000001ad54b : add ah, dh ; cmp eax, dword ptr [rcx] ; add al, ah ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001b694b : add ah, dh ; iretd ; add dword ptr [rax], eax ; adc byte ptr [rax + rdi*8], cl ; jmp qword ptr [rax]
0x00000000001b072b : add ah, dl ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; xor byte ptr [rdx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001b3f2b : add ah, dl ; movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; shr cl, 0xfb ; call rsi
0x00000000001a492b : add ah, dl ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; push rax ; shr esi, cl ; call qword ptr [rax]
0x000000000019837f : add ah, dl ; wait ; clc ; ljmp ptr [rdi + rbx*8 - 0x636bffff] ; clc ; call rsp
0x00000000001050fa : add al, 0 ; add byte ptr [rax], al ; je 0x10574f ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000105081 : add al, 0 ; add byte ptr [rax], al ; je 0x10576f ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000010549d : add al, 0 ; add byte ptr [rax], al ; je 0x10578f ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000105424 : add al, 0 ; add byte ptr [rax], al ; je 0x1057af ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000105378 : add al, 0 ; add byte ptr [rax], al ; je 0x1057cf ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000001052ff : add al, 0 ; add byte ptr [rax], al ; je 0x1057ef ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000010521f : add al, 0 ; add byte ptr [rax], al ; je 0x10580f ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000001051a6 : add al, 0 ; add byte ptr [rax], al ; je 0x10582f ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104f70 : add al, 0 ; add byte ptr [rax], al ; je 0x10584f ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104ef7 : add al, 0 ; add byte ptr [rax], al ; je 0x10586f ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104b54 : add al, 0 ; add byte ptr [rax], al ; je 0x10588f ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104e4b : add al, 0 ; add byte ptr [rax], al ; je 0x1058af ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104dd2 : add al, 0 ; add byte ptr [rax], al ; je 0x1058cf ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104bcd : add al, 0 ; add byte ptr [rax], al ; je 0x1058ef ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104cf2 : add al, 0 ; add byte ptr [rax], al ; je 0x10590f ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104c79 : add al, 0 ; add byte ptr [rax], al ; je 0x10592f ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000139c4c : add al, 0 ; add byte ptr [rax], al ; lea rdx, qword ptr [rip + 0x3609] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000104ba1 : add al, 0 ; add byte ptr [rax], al ; mov esi, 2 ; mov rdi, r15 ; call rbx
0x000000000012f193 : add al, 0 ; add byte ptr [rax], al ; mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000011f6bb : add al, 0 ; add byte ptr [rcx + rcx*4 - 6], cl ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000000f3a39 : add al, 0 ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x000000000008bb22 : add al, 0 ; add byte ptr [rdi + rax*8], ah ; or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016be57 : add al, 0 ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; push rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016bd5b : add al, 0 ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000a09a4 : add al, 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000013da38 : add al, 0 ; mov edx, ebp ; mov rax, qword ptr [rax + 0x18] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000000a0914 : add al, 0 ; mov rax, rdi ; ret
0x000000000011673e : add al, 0 ; test rdx, rdx ; cmove rdx, rax ; xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x00000000001329b0 : add al, 0x10 ; mov byte ptr [rdi + 7], al ; ret
0x000000000004abaa : add al, 0x10 ; test rdi, rdi ; mov byte ptr [rsi], al ; jne 0x4aba4 ; mov rax, rsi ; ret
0x000000000014858b : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014817b : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000147c87 : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148497 : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147f0b : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014824b : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000148567 : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148637 : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001483eb : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000147bdb : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x0000000000147fdb : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x00000000001484bb : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000147cab : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000147d4d : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001480ab : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x000000000014831b : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000147d71 : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000013d24a : add al, 0x24 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x000000000008a18a : add al, 0x24 ; je 0x8a26e ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000008aeac : add al, 0x24 ; je 0x8af9e ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000011f6b7 : add al, 0x24 ; mov ecx, 0x400 ; mov rdx, r15 ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000108d75 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x0000000000122eda : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rdi, qword ptr [rip + 0x2a2815] ; call rax
0x000000000002f5f7 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x00000000000c7c27 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0xc7c57 ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000a9f59 : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a9f6b : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x000000000004ac2e : add al, 0x38 ; mov rdi, rdx ; mov byte ptr [rsi], al ; jne 0x4ac1c ; mov rax, rsi ; ret
0x00000000000a0878 : add al, 0x44 ; mov byte ptr [rdi + 6], al ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a09b5 : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x00000000000a09c5 : add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a84fb : add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x00000000000a0965 : add al, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x00000000000a0804 : add al, 0x48 ; lea eax, dword ptr [rdi + 8] ; ret
0x00000000000a6917 : add al, 0x48 ; lea edi, dword ptr [rdi + 4] ; jne 0xa717b ; ret
0x00000000000a7fbb : add al, 0x48 ; lea edi, dword ptr [rdi + 4] ; jne 0xa898b ; ret
0x000000000010076f : add al, 0x48 ; mov dword ptr [rax + 8], edi ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000015b20a : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00000000000a0925 : add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000015b203 : add al, 0x48 ; mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a7fda : add al, 0x49 ; sub eax, 5 ; lea rdi, qword ptr [rdi + 5] ; jne 0xa898f ; ret
0x00000000000a7fd9 : add al, 0x49 ; sub eax, 5 ; lea rdi, qword ptr [rdi + 5] ; jne 0xa8990 ; ret
0x00000000000a695b : add al, 0x49 ; sub eax, 6 ; lea rdi, qword ptr [rdi + 6] ; jne 0xa717f ; ret
0x0000000000196718 : add al, 0x4a ; lcall ptr [rcx + rdi + 0x4a940001] ; call rsp
0x0000000000196b4c : add al, 0x57 ; add dword ptr [rax], eax ; adc al, 0x76 ; hlt ; inc dword ptr [rdi + rdx*2 + 0x78640001] ; hlt ; call rsp
0x0000000000196470 : add al, 0x5e ; push qword ptr [rdi + 0x5e540001] ; jmp rsp
0x0000000000198708 : add al, 0x5e ; stc ; inc dword ptr [rax + rdi*8 + 0x66240001] ; stc ; call rsp
0x00000000000a2e3c : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000016dca7 : add al, 0x72 ; or al, 0x8b ; mov ecx, dword ptr ss:[rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000009191d : add al, 0x73 ; adc eax, dword ptr [rax + 0x157701fa] ; jb 0x91935 ; mov byte ptr [rdi], cl ; ret
0x000000000016e62e : add al, 0x73 ; cmp r10b, 1 ; ja 0x16e698 ; jb 0x16e64c ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000016ec33 : add al, 0x73 ; xor eax, 0x7701fa80 ; cmp dh, byte ptr [rdx + 2] ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000001507ce : add al, 0x73 ; xor eax, dword ptr [rax + 0x3b7701fa] ; jb 0x1507ec ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000d69d2 : add al, 0x74 ; xchg eax, ebx ; mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x0000000000034177 : add al, 0x75 ; out 0x41, al ; mov eax, dword ptr [rcx + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x00000000001724a2 : add al, 0x7f ; or ecx, dword ptr [rax - 0x75] ; jg 0x1724c6 ; test rdi, rdi ; jne 0x1724ad ; ret
0x00000000000e4c52 : add al, 0x82 ; mov rbp, rsi ; mov qword ptr [rsp + 0x28], rdi ; add rax, rdx ; jmp rax
0x00000000000743e3 : add al, 0x83 ; cmp dword ptr [rdx], ecx ; je 0x74406 ; cmp rsi, rcx ; jb 0x743ee ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000098bd0 : add al, 0x84 ; sal byte ptr [rbp + 0x3a], 0x41 ; movzx eax, byte ptr [rcx] ; test al, al ; jne 0x98c50 ; mov rax, rdi ; ret
0x0000000000053a88 : add al, 0x85 ; fisttp dword ptr [rdi] ; lahf ; ret 0xe683
0x00000000000ed275 : add al, 0x85 ; ror byte ptr [rdi], 0x94 ; ret 0xf883
0x00000000000a9f54 : add al, 0x89 ; js 0xffffffffed3aa3be ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a9f65 : add al, 0x89 ; pcmpgtd mm1, qword ptr [rcx - 0x12cffba9] ; mov byte ptr [rdi + 6], ch ; ret
0x00000000001a5cba : add al, 0x8c ; add ecx, dword ptr [rbp + 0x4c0002] ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x00000000000b1d3b : add al, 0x8d ; push rdi ; rol byte ptr [rbx - 0x6df0f506], 1 ; ret 0xb60f
0x00000000001a4cbe : add al, 0x8e ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x00000000001a3c5a : add al, 0x8f ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rsp ; add byte ptr [rax], al ; add byte ptr [rbx], cl ; add byte ptr [rax], al ; pop rax ; outsd dx, dword ptr [rsi] ; out dx, al ; jmp qword ptr [rdi]
0x0000000000198f90 : add al, 0x8f ; cli ; lcall ptr [rdx + rdi - 0x708bfffe] ; cli ; call rsp
0x00000000000c5a6c : add al, 0xb7 ; add rax, rdi ; jmp rax
0x0000000000104cf8 : add al, 0xc ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000016ef13 : add al, 0xc3 ; nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a09a9 : add al, 0xc3 ; nop dword ptr [rax + rax] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000ac8fb : add al, 0xc3 ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a60cb : add al, 0xc3 ; nop dword ptr [rax] ; mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000000a7095 : add al, 0xc3 ; nop word ptr [rax + rax] ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000f224c : add al, 0xf ; test byte ptr [rip - 0x7a000001], ah ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x000000000016ed7b : add al, 0xf ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; test dl, 4 ; jne 0x16ed20 ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000015b573 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000000d69b8 : add al, 1 ; mov byte ptr [rdi + 8], 1 ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000d6078 : add al, 7 ; mov r9, rdi ; xor eax, eax ; mov rdx, r8 ; jmp 0xd60a3
0x0000000000078c9b : add al, 8 ; add byte ptr [rax], al ; jne 0x78cc5 ; xor eax, eax ; cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x00000000001ad54f : add al, ah ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001ae86f : add al, al ; scasb al, byte ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae5ff : add al, al ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001a5977 : add al, bh ; jp 0x1a5979 ; jmp qword ptr [rdi]
0x00000000001b92e7 : add al, bh ; movsd dword ptr [rdi], dword ptr [rsi] ; clc ; call qword ptr [rbx]
0x00000000001ad567 : add al, bh ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001ae947 : add al, bh ; scasd eax, dword ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x00000000000a769c : add al, bl ; nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000078d8c : add al, bl ; nop ; mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000078c7c : add al, bl ; nop ; mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x000000000016eef3 : add al, bl ; nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a098a : add al, bl ; nop dword ptr [rax] ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a6d6b : add al, bl ; nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000a6098 : add al, bl ; nop word ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000001ae887 : add al, bl ; scasb al, byte ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x00000000001aa817 : add al, bl ; stc ; jmp qword ptr [rdi]
0x00000000001ae617 : add al, bl ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x0000000000198bb6 : add al, byte ptr [rax] ; adc al, 0x13 ; cli ; inc dword ptr [rdi + rbx + 0x14b40002] ; cli ; call rsp
0x0000000000198f8e : add al, byte ptr [rax] ; add al, 0x8f ; cli ; lcall ptr [rdx + rdi - 0x708bfffe] ; cli ; call rsp
0x0000000000111519 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 2
0x000000000016e614 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001b9933 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, -1 ; add dword ptr [rax], eax ; rol cl, 0xf8 ; call qword ptr [rdi]
0x000000000013567f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x000000000013812f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x000000000013784f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x0000000000134ab2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0xc8 ; jmp rcx
0x0000000000104d8e : add al, byte ptr [rax] ; add byte ptr [rax], al ; je 0x1055cf ; xor esi, esi ; mov rdi, r13 ; call rbx
0x000000000010503d : add al, byte ptr [rax] ; add byte ptr [rax], al ; je 0x1055ef ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000104b10 : add al, byte ptr [rax] ; add byte ptr [rax], al ; je 0x10560f ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000001052bb : add al, byte ptr [rax] ; add byte ptr [rax], al ; je 0x10562f ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000104c38 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov esi, 1 ; mov rdi, r13 ; call rbx
0x0000000000104d5d : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov esi, 2 ; mov rdi, r13 ; call rbx
0x0000000000104fef : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000104d62 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x000000000012f0b9 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x0000000000104c2e : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000104ba6 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000001397c1 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rax ; lea r9, qword ptr [rsp + 0x14] ; call qword ptr [r10]
0x0000000000103d75 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rbx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; jmp rax
0x000000000013d24c : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x0000000000108d70 : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 + 4], ah ; and eax, 0x2d0 ; pop rax ; pop rdi ; call rax
0x000000000008de18 : add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0x1516c] ; ret
0x000000000008bbb8 : add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0x157ac] ; ret
0x000000000008f6f8 : add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd495c] ; ret
0x0000000000091a98 : add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd513c] ; ret
0x000000000008d498 : add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd540c] ; ret
0x0000000000091bb8 : add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd682c] ; ret
0x00000000000264c9 : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x46 ; add dword ptr [rcx - 0x77], eax ; ret
0x000000000016c000 : add al, byte ptr [rax] ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; push rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000126a62 : add al, byte ptr [rax] ; jne 0x126a89 ; movzx eax, byte ptr [rdi + 1] ; shl eax, 3 ; cdqe ; shr rax, 4 ; ret
0x00000000000a0985 : add al, byte ptr [rax] ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a08f5 : add al, byte ptr [rax] ; mov rax, rdi ; ret
0x0000000000122cec : add al, byte ptr [rax] ; mov rdi, r14 ; call rbx
0x0000000000198946 : add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; mov edx, 0xe9cfff9 ; add al, byte ptr [rax] ; add al, 0xbb ; stc ; call rsp
0x000000000019959e : add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; xor al, 0xfb ; call rsp
0x00000000001990d6 : add al, byte ptr [rax] ; push rsp ; movsd dword ptr [rdi], dword ptr [rsi] ; cli ; jmp rsp
0x0000000000137982 : add al, byte ptr [rbx - 0x37f0fe18] ; mov dword ptr [rdi + 0x48], eax ; mov eax, 1 ; ret
0x00000000000360af : add al, byte ptr [rcx + 0xe1] ; adc byte ptr [rdi], cl ; ret 0x8b48
0x00000000001a2205 : add al, byte ptr [rcx + 0xe] ; sbb byte ptr [rsi + 0x200e4103], al ; add dword ptr [rax + rdi*2], 0xa ; ret
0x000000000012a17d : add al, byte ptr [rcx - 0x77] ; insb byte ptr [rdi], dx ; and al, 0x40 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000264c8 : add al, byte ptr es:[rax] ; add byte ptr [rdi], cl ; mov dh, 0x46 ; add dword ptr [rcx - 0x77], eax ; ret
0x0000000000122516 : add al, ch ; and al, 0x98 ; add byte ptr [rax], al ; test rax, rax ; je 0x122534 ; mov rdi, rbx ; call rax
0x00000000000deed3 : add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; or dh, ah ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d27f6 : add al, ch ; hlt ; jno 0xd27fe ; push qword ptr [rcx] ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x000000000006d0db : add al, ch ; jmp qword ptr [rdi]
0x00000000000715c7 : add al, ch ; mov bl, 0xe0 ; add byte ptr [rax], al ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rsp ; call 0x4d8a1
0x000000000012221e : add al, ch ; sbb al, 0x9b ; add byte ptr [rax], al ; test rax, rax ; je 0x12223c ; mov rdi, rbx ; call rax
0x00000000001a12c7 : add al, cl ; jns 0x1a12bc ; jmp qword ptr [rdi]
0x00000000001a632f : add al, dh ; jno 0x1a6327 ; call rdi
0x00000000001ae62f : add al, dh ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x000000000005a101 : add bh, al ; test dword ptr [rdi + rbp*8 - 1], ecx ; call qword ptr [rax]
0x00000000000eb59b : add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000025db2 : add bh, bh ; dec dword ptr [rdi] ; test bl, dh ; add al, byte ptr [rax] ; add bh, dh ; ret 0
0x00000000000258c9 : add bh, bh ; dec dword ptr [rdi] ; test byte ptr [rbx - 0x8fffffb], ch ; ret 0
0x0000000000025f90 : add bh, bh ; dec dword ptr [rdi] ; test byte ptr [rbx - 0x8ffffff], bh ; ret 0
0x00000000001b9fc9 : add bh, bh ; inc dword ptr [rcx] ; or ch, byte ptr [rdi + 5] ; ret
0x0000000000102af8 : add bh, byte ptr [rdi + 0x3d] ; add rsp, 0x90 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000089ae4 : add bl, al ; mov rsi, rbx ; mov rdi, rax ; call rcx
0x00000000000d69dd : add bl, al ; nop ; mov byte ptr [rdi + 8], 0x1c ; mov eax, 2 ; ret
0x00000000000d691d : add bl, al ; nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000a8473 : add bl, al ; nop ; nop word ptr cs:[rax + rax] ; mov rax, rdi ; ret
0x0000000000077159 : add bl, al ; nop dword ptr [rax + rax] ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000000d6973 : add bl, al ; nop dword ptr [rax] ; mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x000000000013795b : add bl, al ; nop dword ptr [rax] ; mov dword ptr [rdi + 4], 0 ; mov eax, 1 ; ret
0x000000000013ea37 : add bl, al ; nop dword ptr [rax] ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000011b1b4 : add bl, al ; nop word ptr cs:[rax + rax] ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00000000001883f7 : add bl, bh ; inc ebx ; add dh, bh ; jmp rdi
0x000000000003547f : add bl, bl ; insb byte ptr [rdi], dx ; and al, 8 ; fxam ; fnstsw ax ; fstp st(0) ; and eax, 0x200 ; ret
0x00000000001869c4 : add bl, byte ptr [rsi - 0x521d000d] ; call qword ptr [rdi - 0x1f000c50]
0x0000000000131a7d : add bl, ch ; add eax, 0x24448b48 ; or byte ptr [rax - 0x77], cl ; fimul dword ptr [rcx + rcx*4 - 0x1a] ; mov rdi, rbp ; call rax
0x000000000012ffdd : add bl, dh ; movq mm0, qword ptr [rdi + 0x20] ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x0000000000130015 : add bl, dh ; movq mm0, qword ptr [rdi + 0x38] ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x00000000000a6e3f : add bl, dh ; movq mm0, qword ptr [rsi] ; mov cl, byte ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a617f : add bl, dh ; movq mm0, qword ptr [rsi] ; mov cx, word ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a619f : add bl, dh ; movq mm0, qword ptr [rsi] ; mov ecx, dword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a621f : add bl, dh ; movq mm0, qword ptr [rsi] ; mov rcx, qword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a61df : add bl, dh ; movq mm0, qword ptr [rsi] ; mov rcx, qword ptr [rsi + 0xe] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a61ff : add bl, dh ; movq mm0, qword ptr [rsi] ; mov rcx, qword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a860f : add bl, dh ; movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a77cf : add bl, dh ; movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a77df : add bl, dh ; movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a616f : add bl, dh ; movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000aa07f : add bl, dh ; movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a711f : add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000a712f : add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x0000000000089f1d : add byte ptr [r15], r9b ; test bl, ch ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x000000000008a43d : add byte ptr [r15], r9b ; test bl, cl ; add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, r8 ; call rax
0x000000000008b038 : add byte ptr [r15], r9b ; test byte ptr [rax + 0x48000000], cl ; mov esi, ebp ; mov rdi, r12 ; call rax
0x00000000001a7ecf : add byte ptr [rax + 0x11], ah ; jmp qword ptr [rdi]
0x00000000001b6e07 : add byte ptr [rax + 0x27], bl ; clc ; jmp rdi
0x0000000000033452 : add byte ptr [rax + 0x63], cl ; adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x000000000006da0c : add byte ptr [rax + 0x63], cl ; or al, 0x8f ; add rcx, rdi ; jmp rcx
0x00000000001266ff : add byte ptr [rax + 0x63], cl ; rol byte ptr [rcx + rcx*4 - 0x40], cl ; mov byte ptr [rdi + rdx], 0 ; ret
0x0000000000126880 : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 1], 1 ; xlatb ; mov qword ptr [r9], rdi ; ret
0x0000000000036287 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x2d], -0x1e ; shr rax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000034bc8 : add byte ptr [rax + 0x66d02148], al ; movd mm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x00000000001a3c67 : add byte ptr [rax + 0x6f], bl ; out dx, al ; jmp qword ptr [rdi]
0x000000000019a997 : add byte ptr [rax + 0x76], bh ; std ; jmp qword ptr [rdi]
0x00000000000abcaf : add byte ptr [rax + 0xb740fe6], al ; mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xabd2e ; ret
0x00000000000abcff : add byte ptr [rax + 0xb740fe6], al ; mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xabd2e ; ret
0x00000000001aafb7 : add byte ptr [rax + rax + 0x16640000], dl ; add dword ptr [rax], eax ; adc byte ptr [rbp - 0xc], bh ; jmp rdi
0x00000000001a5973 : add byte ptr [rax + rax*8], bl ; add byte ptr [rax], al ; clc ; jp 0x1a597d ; jmp qword ptr [rdi]
0x00000000001a915f : add byte ptr [rax + rax], ah ; add byte ptr [rax + rdi*8], cl ; add byte ptr [rax], al ; sbb byte ptr [rdi - 0xe], ah ; call qword ptr [rax]
0x00000000001b35f7 : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pushfq ; add dword ptr [rax], eax ; xor byte ptr [rcx], 0xf7 ; jmp qword ptr [rsi]
0x00000000001a2b5f : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; or al, 0x92 ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; std ; jmp rdi
0x000000000019f3bf : add byte ptr [rax + rax], ah ; add byte ptr [rdi + rax + 0x5180000], ch ; in eax, dx ; call qword ptr [rcx]
0x00000000001ad8f7 : add byte ptr [rax + rax], ah ; add byte ptr [rdi + rdi + 0x61f00001], ah ; cmc ; jmp qword ptr [rbx]
0x00000000001a50bf : add byte ptr [rax + rax], ah ; add byte ptr [rdi + rsi*4], ch ; add byte ptr [rax + 0x3d], cl ; out dx, eax ; jmp rsi
0x000000000011f6ba : add byte ptr [rax + rax], al ; add byte ptr [rcx + rcx*4 - 6], cl ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000008bb21 : add byte ptr [rax + rax], al ; add byte ptr [rdi + rax*8], ah ; or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001b2f8f : add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; cmp al, 0x96 ; add dword ptr [rax], eax ; add rdi, rsi ; call rsi
0x00000000001b6fd7 : add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; test dh, dl ; add dword ptr [rax], eax ; mov al, 0x2c ; clc ; jmp rdi
0x00000000001b40e7 : add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; xchg eax, esp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; push rax ; jl 0x1b40f6 ; call rcx
0x00000000001a3c5f : add byte ptr [rax + rax], bl ; add byte ptr [rbx], cl ; add byte ptr [rax], al ; pop rax ; outsd dx, dword ptr [rsi] ; out dx, al ; jmp qword ptr [rdi]
0x00000000001af87f : add byte ptr [rax + rax], bl ; add byte ptr [rdi + rbx*2], ch ; add dword ptr [rax], eax ; cmp bh, ah ; cmc ; jmp rsp
0x00000000001a7dc7 : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; je 0x1a7dbe ; add byte ptr [rax], al ; mov al, 0x10 ; jmp qword ptr [rdi]
0x000000000019f8f7 : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rdi ; add byte ptr [rax], al ; nop ; sbb ebp, ebp ; call rbx
0x000000000019e04f : add byte ptr [rax + rax], cl ; add ah, bh ; add byte ptr [rax], r8b ; shr rdx, 1 ; jmp rdi
0x00000000001b3f27 : add byte ptr [rax + rax], cl ; add ah, dl ; movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; shr cl, 0xfb ; call rsi
0x00000000001a2977 : add byte ptr [rax + rax], cl ; add byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; ror dl, 1 ; in eax, dx ; call rdi
0x00000000001a1457 : add byte ptr [rax + rax], cl ; add byte ptr [rbx + rdi*2], al ; add byte ptr [rax], al ; adc byte ptr [rbp - 0x13], bh ; call rsi
0x00000000001ad0ff : add byte ptr [rax + rax], cl ; add byte ptr [rdi + rsi + 0x3c980001], ch ; cmc ; call qword ptr [rdi]
0x000000000019ffcf : add byte ptr [rax + rax], cl ; add byte ptr [rsi], bh ; add byte ptr [rax], bh ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001a74e7 : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; xchg eax, esp ; fild dword ptr [rax] ; add byte ptr [rax], ah ; pop rdi ; int1 ; call rbx
0x00000000001ae467 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; adc al, 0x4b ; add dword ptr [rax], eax ; push rax ; stosb byte ptr [rdi], al ; cmc ; call qword ptr [rax]
0x00000000001ae567 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; adc al, 0x4c ; add dword ptr [rax], eax ; push rax ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001af067 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; adc al, 0x57 ; add dword ptr [rax], eax ; and bl, al ; cmc ; jmp qword ptr [rdi]
0x00000000001a6467 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; adc al, 0xcb ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a644f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; retf 0 ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x000000000019a98f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cmp al, 0x10 ; add byte ptr [rax], al ; js 0x19aa1c ; std ; jmp qword ptr [rdi]
0x00000000001ad547 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; hlt ; cmp eax, dword ptr [rcx] ; add al, ah ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001b6947 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; hlt ; iretd ; add dword ptr [rax], eax ; adc byte ptr [rax + rdi*8], cl ; jmp qword ptr [rax]
0x00000000001a6437 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, -0x36 ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001b9937 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, -1 ; add dword ptr [rax], eax ; rol cl, 0xf8 ; call qword ptr [rdi]
0x00000000001aab37 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, 0x11 ; add dword ptr [rax], eax ; xor byte ptr [rdi], dl ; hlt ; call qword ptr [rdx]
0x00000000001ae93f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; add qword ptr [r8], r8 ; clc ; scasd eax, dword ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a493f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; shr rsi, cl ; jmp qword ptr [rsi]
0x00000000001ad5bf : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp al, 1 ; add byte ptr [rax + 0x58], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a8abf : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; int1 ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0xe], al ; call qword ptr [rdx]
0x00000000001a12bf : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jns 0x1a12d3 ; add al, cl ; jns 0x1a12c4 ; jmp qword ptr [rdi]
0x00000000001a57bf : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov esi, 0xab880000 ; sti ; call qword ptr [rax]
0x00000000001a43bf : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; mov bl, 0xee ; jmp rdx
0x00000000001a64c7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; je 0x1a64a5 ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a64df : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov ebx, cs ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001aa80f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov esp, 0xd800010e ; stc ; jmp qword ptr [rdi]
0x00000000001ae60f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov esp, 0xd800014c ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001ae8df : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov word ptr [rdi + 1], cs ; add byte ptr [rax - 0x51], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001aa9f7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc byte ptr [rcx], al ; add byte ptr [rax + 0x16], al ; hlt ; jmp qword ptr [rcx]
0x00000000001b06f7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rdx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001a5bf7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x00000000001a64f7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001ad55f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; or al, 0x3c ; add dword ptr [rax], eax ; clc ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001a64af : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; retf ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001a47a7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; nop ; shr dh, 1 ; call qword ptr [rax]
0x00000000001b1aef : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; add dword ptr [rcx], 0xf6940800 ; call qword ptr [rdi]
0x00000000001a47ef : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; pop rax ; shr esi, 1 ; call rcx
0x00000000001a6497 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a596f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; sbb al, 0xc0 ; add byte ptr [rax], al ; clc ; jp 0x1a5981 ; jmp qword ptr [rdi]
0x00000000001a647f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; sub al, 0xcb ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001b7ca7 : add byte ptr [rax + rax], dl ; add byte ptr [rbx + 1], dl ; add byte ptr [rax], ah ; push rcx ; clc ; call rdi
0x00000000000ac625 : add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x000000000019710f : add byte ptr [rax + rbp*2], ah ; idiv bh ; movsb byte ptr [rdi], byte ptr [rsi] ; jnp 0x197124 ; add byte ptr [rbp + rbp*2 - 0xa], dh ; call rsp
0x00000000000ad868 : add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x75], cl ; sub byte ptr [r8 - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000000001166bd : add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rdi], cl ; mov bh, 4 ; push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x0000000000196b57 : add byte ptr [rax + rdi*2 - 0xc], ah ; call rsp
0x0000000000197d3f : add byte ptr [rax + rdi*4 - 9], dl ; jmp rsp
0x00000000001a9163 : add byte ptr [rax + rdi*8], cl ; add byte ptr [rax], al ; sbb byte ptr [rdi - 0xe], ah ; call qword ptr [rax]
0x00000000001a297b : add byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; ror dl, 1 ; in eax, dx ; call rdi
0x000000000019a993 : add byte ptr [rax + rdx], bh ; add byte ptr [rax], al ; js 0x19aa18 ; std ; jmp qword ptr [rdi]
0x00000000000363a1 : add byte ptr [rax - 0x2d], cl ; loopne 0x363f7 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000036421 : add byte ptr [rax - 0x2d], cl ; loopne 0x3647b ; test dword ptr [rdi], eax ; setne al ; movzx eax, al ; ret
0x0000000000034f35 : add byte ptr [rax - 0x3791f09a], al ; movss dword ptr [rdi], xmm1 ; ret
0x00000000000ac08f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000001b9b17 : add byte ptr [rax - 0x3a], cl ; clc ; call qword ptr [rdi]
0x000000000002f5ef : add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; mov rdi, r13 ; call rax
0x00000000000ac56f : add byte ptr [rax - 0x57], cl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0xac4e6 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac61f : add byte ptr [rax - 0x57], cl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0xac69d ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000139c4f : add byte ptr [rax - 0x73], cl ; adc eax, 0x3609 ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000ac8f7 : add byte ptr [rax - 0x73], cl ; add al, 0xc3 ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a0986 : add byte ptr [rax - 0x73], cl ; add r8b, r11b ; nop dword ptr [rax] ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000003344b : add byte ptr [rax - 0x73], cl ; cmp eax, 0x14cc6d ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x0000000000134b3c : add byte ptr [rax - 0x73], cl ; cmp eax, 0x554fc ; mov esi, esi ; movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x00000000000c5a60 : add byte ptr [rax - 0x73], cl ; cmp eax, 0xc16ec ; mov esi, edx ; movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x00000000000ac8ff : add byte ptr [rax - 0x73], cl ; or r11b, r8b ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000147b35 : add byte ptr [rax - 0x73], cl ; or r14b, al ; movzx eax, byte ptr [rdi + rcx] ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000074133 : add byte ptr [rax - 0x73], cl ; test al, 0x28 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x00000000000aac5f : add byte ptr [rax - 0x73], cl ; xor eax, 0xdb859 ; movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x00000000000e8f4f : add byte ptr [rax - 0x75], cl ; adc eax, 0x2d8051 ; mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x000000000002de7d : add byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002de5d : add byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x75], cl ; pop rax ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000011151b : add byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 2
0x000000000008896b : add byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; lock add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000134c97 : add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rdi] ; enter -0x7e77, -0x48 ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000001379af : add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rdi] ; enter 0x4789, 0x58 ; mov eax, 1 ; ret
0x00000000001556af : add byte ptr [rax - 0x75], cl ; cmc ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000072a50 : add byte ptr [rax - 0x75], cl ; cmp al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; imul edi, esi, 0xc48148ff ; fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000015588f : add byte ptr [rax - 0x75], cl ; hlt ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155e7f : add byte ptr [rax - 0x75], cl ; int1 ; mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000013564f : add byte ptr [rax - 0x75], cl ; jg 0x1356a5 ; mov rcx, rsi ; xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x00000000001358cf : add byte ptr [rax - 0x75], cl ; jg 0x13591f ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1358eb ; ret
0x00000000001358ce : add byte ptr [rax - 0x75], cl ; jg 0x135920 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1358ec ; ret
0x000000000013b80f : add byte ptr [rax - 0x75], cl ; jg 0x13b865 ; mov rcx, rsi ; xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x000000000013ba6f : add byte ptr [rax - 0x75], cl ; jg 0x13babf ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x13ba8b ; ret
0x000000000013ba6e : add byte ptr [rax - 0x75], cl ; jg 0x13bac0 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x13ba8c ; ret
0x000000000013bf2f : add byte ptr [rax - 0x75], cl ; jg 0x13bf8d ; mov rcx, rsi ; xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x000000000002e01f : add byte ptr [rax - 0x75], cl ; jo 0x2e078 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e02f : add byte ptr [rax - 0x75], cl ; js 0x2e088 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002de80 : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + rdi*4 + 0x200] ; ret
0x0000000000155a7f : add byte ptr [rax - 0x75], cl ; mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155c7f : add byte ptr [rax - 0x75], cl ; mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000002e050 : add byte ptr [rax - 0x75], cl ; movzx eax, word ptr [rax + rdi*2 + 0x100] ; and eax, esi ; ret
0x000000000002de60 : add byte ptr [rax - 0x75], cl ; pop rax ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000007ee9e : add byte ptr [rax - 0x75], cl ; push rax ; or byte ptr [rbp + 0xb], dh ; sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000007a12f : add byte ptr [rax - 0x75], cl ; push rdi ; and byte ptr [rax - 0x75], cl ; sub byte ptr [r8 + 0x39], r9b ; ret 0x850f
0x000000000015b1ff : add byte ptr [rax - 0x75], cl ; push rsi ; add al, 0x48 ; mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b18f : add byte ptr [rax - 0x75], cl ; push rsi ; add eax, 0x480e8b48 ; mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000015512f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015aadf : add byte ptr [rax - 0x75], cl ; push rsi ; cmc ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015aa5f : add byte ptr [rax - 0x75], cl ; push rsi ; hlt ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015a8af : add byte ptr [rax - 0x75], cl ; push rsi ; int1 ; mov rcx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000f7ee5 : add byte ptr [rax - 0x75], cl ; push rsi ; js 0xf7f3f ; mov dword ptr [rdi + 0x100], edx ; ret
0x000000000015a9cf : add byte ptr [rax - 0x75], cl ; push rsi ; mov rcx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015a93f : add byte ptr [rax - 0x75], cl ; push rsi ; mov rcx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000088477 : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x68 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000391ef : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 8 ; mov rsi, qword ptr [r15] ; mov rdi, qword ptr [r12] ; call r14
0x000000000003946f : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 8 ; mov rsi, r15 ; mov rdi, r12 ; call r14
0x0000000000073494 : add byte ptr [rax - 0x75], cl ; sbb byte ptr [r9 + rcx*4 - 0x1a], r8b ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000ad86c : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x75], cl ; sub byte ptr [r8 - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000007a03f : add byte ptr [rax - 0x75], cl ; sub byte ptr [r8 - 0x75], r9b ; push rdi ; and byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x0000000000084177 : add byte ptr [rax - 0x77], cl ; and al, 8 ; mov rdi, r14 ; mov qword ptr [rsp + 0x10], r14 ; call qword ptr [rax]
0x000000000003a8bf : add byte ptr [rax - 0x77], cl ; cli ; mov rax, rdi ; sar rdx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x000000000013e69f : add byte ptr [rax - 0x77], cl ; ja 0x13e6c9 ; mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x0000000000145c1d : add byte ptr [rax - 0x77], cl ; mov cl, 0xe9 ; add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000001378fd : add byte ptr [rax - 0x77], cl ; or byte ptr [r8 - 0x77], r9b ; push rdi ; adc byte ptr [rax + 1], bh ; ret
0x000000000008b03f : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, r12 ; call rax
0x000000000008a191 : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x0000000000150b8f : add byte ptr [rax - 0x77], cl ; rol dword ptr [rax + 0xf], 1 ; mov dh, 0xc6 ; mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000011cec4 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rdi], -0x7b ; ret
0x0000000000091490 : add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000007b7d0 : add byte ptr [rax - 0x77], cl ; scasd eax, dword ptr [rdi] ; nop ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000008681a : add byte ptr [rax - 0x77], cl ; xor byte ptr [rax - 0x75], cl ; add eax, 0x33a6bb ; mov qword ptr [rax], rdi ; ret
0x0000000000100892 : add byte ptr [rax - 0x78], al ; xor eax, 0x2c3836 ; mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x000000000007413a : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x00000000000e9651 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax - 0x77], 0x45 ; and byte ptr [rdi], cl ; test byte ptr [rcx - 0xa000000], dh ; ret
0x000000000005a775 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0x10
0x000000000011151e : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 2
0x00000000000872f2 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000008896e : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; lock add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000a3613 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x000000000002b3b4 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0
0x000000000006c2ae : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x00000000001177cc : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbx + rsi + 0x48], 0x8d ; jne 0x1177c7 ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x000000000006efa3 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rdi + rcx + 0x48], 0x8b ; mov edi, 0xe0 ; jmp rax
0x00000000000f8100 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rcx*2 + 0x31], 0xd2 ; xor esi, esi ; mov rdi, rbx ; call rax
0x000000000009182d : add byte ptr [rax - 0x7d], cl ; cli ; and byte ptr [rdi + 0x64], dh ; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000009187d : add byte ptr [rax - 0x7d], cl ; cli ; and byte ptr [rdi + 0xb], dh ; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000012125f : add byte ptr [rax - 0x7d], cl ; in al, dx ; sub byte ptr [rcx - 0x77], cl ; enter -0x72b4, 0xd ; insb byte ptr [rdi], dx ; ret
0x00000000000f138f : add byte ptr [rax - 0x7d], cl ; insb byte ptr [rdi], dx ; and al, 0x18 ; add dword ptr [rax - 0x75], ecx ; and al, 0x18 ; mov rdx, rax ; jmp 0xf13e1
0x0000000000087927 : add byte ptr [rax - 0x7d], cl ; loopne 0x87934 ; test byte ptr [rdi + rax - 8], 1 ; je 0x87950 ; sub rax, 8 ; ret
0x00000000000ac62f : add byte ptr [rax - 0x7d], cl ; loopne 0xac662 ; je 0xac69f ; test al, 0xf0 ; jne 0xac66f ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac6d7 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x44 ; mov eax, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0xac6bf ; ret
0x00000000001194af : add byte ptr [rax - 0x7f], cl ; cli ; dec dword ptr [rdi] ; add byte ptr [rax], al ; jbe 0x1194ca ; jmp 0x456dc
0x0000000000056847 : add byte ptr [rax - 1], bh ; mov qword ptr [rdi], r10 ; ret
0x00000000001b8430 : add byte ptr [rax - 8], ah ; jmp qword ptr [rdi]
0x0000000000077156 : add byte ptr [rax], 0 ; add bl, al ; nop dword ptr [rax + rax] ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x000000000008de13 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0x1516c] ; ret
0x000000000008bbb3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0x157ac] ; ret
0x000000000008f6f3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd495c] ; ret
0x0000000000091a93 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd513c] ; ret
0x000000000008d493 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd540c] ; ret
0x0000000000091bb3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd682c] ; ret
0x000000000008fda0 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xbd7ef] ; ret
0x000000000008fa10 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xbda4f] ; ret
0x000000000008d5a0 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xbfd7f] ; ret
0x000000000013ea2b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x0000000000090ddb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000090dfb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000090e0b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; bsf eax, eax ; sub rdx, rax ; jbe 0x90e60 ; add rax, rdi ; ret
0x00000000000a0c3b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x00000000000a0c4b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x00000000000d24fb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; cmp byte ptr [rdi + 1], 0 ; jne 0xd2520 ; or esi, 2 ; mov eax, esi ; ret
0x00000000000a094b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x0000000000071d9b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov dword ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000a849b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000116e2b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0x116e4d ; ret
0x000000000013ea3b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x0000000000078ceb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x00000000000798fb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x00000000000f7f1b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rsi] ; mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x00000000000a76ab : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000015b50b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi + 1] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b49b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi + 2] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b42b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi + 3] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b57b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000005689b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov qword ptr [rdi], rcx ; mov eax, 0xffffffff ; ret
0x000000000013d47b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rbx + 8] ; lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000130dbb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000003aefb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, r8 ; mov qword ptr [rdi + 8], rdx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000003a91b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rdi ; cqo ; idiv rsi ; ret
0x0000000000097c33 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000001236bb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rdi, qword ptr [rsp + 0x28] ; call 0x1f9c4
0x0000000000116e3b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rdx, qword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x000000000015b3bb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000088473 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rdx, qword ptr [rsp + 0x68] ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000a082b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov word ptr [rdi], r9w ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a616b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000015b6cb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000015b65b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000078cdb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x0000000000158ca7 : add byte ptr [rax], 0 ; add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000015a623 : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000000b5984 : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; mov gs, word ptr [rbx - 0x7cfffff8] ; ret
0x00000000000d81db : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; ret 0xf35b
0x000000000016b9e1 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000013ebe9 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; ror byte ptr [rdi], 0x11 ; and al, 0x28 ; call rdx
0x000000000016b9d9 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000077372 : add byte ptr [rax], ah ; add byte ptr [rax], al ; je 0x77396 ; mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x77396 ; ret
0x00000000001a74ef : add byte ptr [rax], ah ; pop rdi ; int1 ; call rbx
0x00000000001b7caf : add byte ptr [rax], ah ; push rcx ; clc ; call rdi
0x00000000001ae466 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; adc al, 0x4b ; add dword ptr [rax], eax ; push rax ; stosb byte ptr [rdi], al ; cmc ; call qword ptr [rax]
0x00000000001ae566 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; adc al, 0x4c ; add dword ptr [rax], eax ; push rax ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001af066 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; adc al, 0x57 ; add dword ptr [rax], eax ; and bl, al ; cmc ; jmp qword ptr [rdi]
0x00000000001a6466 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; adc al, 0xcb ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a644e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; retf 0 ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x000000000019a98e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cmp al, 0x10 ; add byte ptr [rax], al ; js 0x19aa1d ; std ; jmp qword ptr [rdi]
0x00000000001b6946 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; hlt ; iretd ; add dword ptr [rax], eax ; adc byte ptr [rax + rdi*8], cl ; jmp qword ptr [rax]
0x00000000001a6436 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, -0x36 ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001b9936 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, -1 ; add dword ptr [rax], eax ; rol cl, 0xf8 ; call qword ptr [rdi]
0x00000000001aab36 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, 0x11 ; add dword ptr [rax], eax ; xor byte ptr [rdi], dl ; hlt ; call qword ptr [rdx]
0x00000000001a493e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; shr rsi, cl ; jmp qword ptr [rsi]
0x00000000001ad5be : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp al, 1 ; add byte ptr [rax + 0x58], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a8abe : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; int1 ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0xe], al ; call qword ptr [rdx]
0x00000000001a12be : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jns 0x1a12d4 ; add al, cl ; jns 0x1a12c5 ; jmp qword ptr [rdi]
0x00000000001a57be : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov esi, 0xab880000 ; sti ; call qword ptr [rax]
0x00000000001a43be : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; mov bl, 0xee ; jmp rdx
0x00000000001a64c6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; je 0x1a64a6 ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a64de : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov ebx, cs ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001aa80e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov esp, 0xd800010e ; stc ; jmp qword ptr [rdi]
0x00000000001ae60e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov esp, 0xd800014c ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001ae8de : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov word ptr [rdi + 1], cs ; add byte ptr [rax - 0x51], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001aa9f6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc byte ptr [rcx], al ; add byte ptr [rax + 0x16], al ; hlt ; jmp qword ptr [rcx]
0x00000000001b06f6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rdx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001a5bf6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x00000000001a64f6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001ad55e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; or al, 0x3c ; add dword ptr [rax], eax ; clc ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001a64ae : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; retf ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001a47a6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; nop ; shr dh, 1 ; call qword ptr [rax]
0x00000000001b1aee : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pushfq ; add dword ptr [rcx], 0xf6940800 ; call qword ptr [rdi]
0x00000000001a47ee : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pushfq ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; pop rax ; shr esi, 1 ; call rcx
0x00000000001a6496 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a596e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; sbb al, 0xc0 ; add byte ptr [rax], al ; clc ; jp 0x1a5982 ; jmp qword ptr [rdi]
0x00000000001a647e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; sub al, 0xcb ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001ae46a : add byte ptr [rax], al ; adc al, 0x4b ; add dword ptr [rax], eax ; push rax ; stosb byte ptr [rdi], al ; cmc ; call qword ptr [rax]
0x00000000001ae56a : add byte ptr [rax], al ; adc al, 0x4c ; add dword ptr [rax], eax ; push rax ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001af06a : add byte ptr [rax], al ; adc al, 0x57 ; add dword ptr [rax], eax ; and bl, al ; cmc ; jmp qword ptr [rdi]
0x00000000001a646a : add byte ptr [rax], al ; adc al, 0xcb ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x000000000004a50e : add byte ptr [rax], al ; adc byte ptr [rax], al ; or rsi, rax ; mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x00000000000360b3 : add byte ptr [rax], al ; adc byte ptr [rdi], cl ; ret 0x8b48
0x00000000001a6439 : add byte ptr [rax], al ; add ah, ah ; retf 0 ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a4839 : add byte ptr [rax], al ; add ah, ah ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; adc dl, dl ; out dx, al ; call qword ptr [rcx]
0x00000000001b9319 : add byte ptr [rax], al ; add ah, al ; stc ; add dword ptr [rax], eax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; clc ; jmp qword ptr [rcx]
0x000000000019e051 : add byte ptr [rax], al ; add ah, bh ; add byte ptr [rax], r8b ; shr rdx, 1 ; jmp rdi
0x00000000001a6451 : add byte ptr [rax], al ; add ah, bh ; retf 0 ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001ae941 : add byte ptr [rax], al ; add ah, ch ; add qword ptr [r8], r8 ; clc ; scasd eax, dword ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a4941 : add byte ptr [rax], al ; add ah, ch ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; shr rsi, cl ; jmp qword ptr [rsi]
0x00000000001b0621 : add byte ptr [rax], al ; add ah, cl ; insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; sub byte ptr [rcx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001a6421 : add byte ptr [rax], al ; add ah, cl ; retf 0 ; sub byte ptr [rdi - 0x10], dh ; jmp qword ptr [rax]
0x00000000001ad549 : add byte ptr [rax], al ; add ah, dh ; cmp eax, dword ptr [rcx] ; add al, ah ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001b6949 : add byte ptr [rax], al ; add ah, dh ; iretd ; add dword ptr [rax], eax ; adc byte ptr [rax + rdi*8], cl ; jmp qword ptr [rax]
0x00000000001b0729 : add byte ptr [rax], al ; add ah, dl ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; xor byte ptr [rdx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001b3f29 : add byte ptr [rax], al ; add ah, dl ; movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; shr cl, 0xfb ; call rsi
0x00000000001a4929 : add byte ptr [rax], al ; add ah, dl ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; push rax ; shr esi, cl ; call qword ptr [rax]
0x0000000000134ab0 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0xc8 ; jmp rcx
0x000000000008de16 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0x1516c] ; ret
0x000000000008bbb6 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0x157ac] ; ret
0x000000000008f6f6 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd495c] ; ret
0x0000000000091a96 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd513c] ; ret
0x000000000008d496 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd540c] ; ret
0x0000000000091bb6 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd682c] ; ret
0x00000000000deed1 : add byte ptr [rax], al ; add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; or dh, ah ; dec dword ptr [rax - 0x77] ; ret
0x000000000006d0d9 : add byte ptr [rax], al ; add al, ch ; jmp qword ptr [rdi]
0x000000000005a0ff : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rbp*8 - 1], ecx ; call qword ptr [rax]
0x0000000000089ae2 : add byte ptr [rax], al ; add bl, al ; mov rsi, rbx ; mov rdi, rax ; call rcx
0x00000000000d69db : add byte ptr [rax], al ; add bl, al ; nop ; mov byte ptr [rdi + 8], 0x1c ; mov eax, 2 ; ret
0x00000000000d691b : add byte ptr [rax], al ; add bl, al ; nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x0000000000077157 : add byte ptr [rax], al ; add bl, al ; nop dword ptr [rax + rax] ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000000d6971 : add byte ptr [rax], al ; add bl, al ; nop dword ptr [rax] ; mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x000000000013ea35 : add byte ptr [rax], al ; add bl, al ; nop dword ptr [rax] ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000012ffdb : add byte ptr [rax], al ; add bl, dh ; movq mm0, qword ptr [rdi + 0x20] ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x0000000000130013 : add byte ptr [rax], al ; add bl, dh ; movq mm0, qword ptr [rdi + 0x38] ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x00000000000a6e3d : add byte ptr [rax], al ; add bl, dh ; movq mm0, qword ptr [rsi] ; mov cl, byte ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a619d : add byte ptr [rax], al ; add bl, dh ; movq mm0, qword ptr [rsi] ; mov ecx, dword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a860d : add byte ptr [rax], al ; add bl, dh ; movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a77cd : add byte ptr [rax], al ; add bl, dh ; movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a616d : add byte ptr [rax], al ; add bl, dh ; movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000aa07d : add byte ptr [rax], al ; add bl, dh ; movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a711d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000a712d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000012687e : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 1], 1 ; xlatb ; mov qword ptr [r9], rdi ; ret
0x0000000000034bc6 : add byte ptr [rax], al ; add byte ptr [rax + 0x66d02148], al ; movd mm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x00000000000abcad : add byte ptr [rax], al ; add byte ptr [rax + 0xb740fe6], al ; mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xabd30 ; ret
0x00000000000abcfd : add byte ptr [rax], al ; add byte ptr [rax + 0xb740fe6], al ; mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xabd30 ; ret
0x00000000001a5971 : add byte ptr [rax], al ; add byte ptr [rax + rax*8], bl ; add byte ptr [rax], al ; clc ; jp 0x1a597f ; jmp qword ptr [rdi]
0x00000000001a915d : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax + rdi*8], cl ; add byte ptr [rax], al ; sbb byte ptr [rdi - 0xe], ah ; call qword ptr [rax]
0x00000000001b35f5 : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pushfq ; add dword ptr [rax], eax ; xor byte ptr [rcx], 0xf7 ; jmp qword ptr [rsi]
0x00000000001a2b5d : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; or al, 0x92 ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; std ; jmp rdi
0x000000000019f3bd : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rdi + rax + 0x5180000], ch ; in eax, dx ; call qword ptr [rcx]
0x00000000001ad8f5 : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rdi + rdi + 0x61f00001], ah ; cmc ; jmp qword ptr [rbx]
0x00000000001a50bd : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rdi + rsi*4], ch ; add byte ptr [rax + 0x3d], cl ; out dx, eax ; jmp rsi
0x00000000001b6fd5 : add byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; test dh, dl ; add dword ptr [rax], eax ; mov al, 0x2c ; clc ; jmp rdi
0x00000000001b40e5 : add byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; xchg eax, esp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; push rax ; jl 0x1b40f8 ; call rcx
0x00000000001a3c5d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rbx], cl ; add byte ptr [rax], al ; pop rax ; outsd dx, dword ptr [rsi] ; out dx, al ; jmp qword ptr [rdi]
0x00000000001af87d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rdi + rbx*2], ch ; add dword ptr [rax], eax ; cmp bh, ah ; cmc ; jmp rsp
0x00000000001a7dc5 : add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; je 0x1a7dc0 ; add byte ptr [rax], al ; mov al, 0x10 ; jmp qword ptr [rdi]
0x000000000019f8f5 : add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rdi ; add byte ptr [rax], al ; nop ; sbb ebp, ebp ; call rbx
0x000000000019e04d : add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add ah, bh ; add byte ptr [rax], r8b ; shr rdx, 1 ; jmp rdi
0x00000000001b3f25 : add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add ah, dl ; movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; shr cl, 0xfb ; call rsi
0x00000000001a2975 : add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; ror dl, 1 ; in eax, dx ; call rdi
0x00000000001a1455 : add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add byte ptr [rbx + rdi*2], al ; add byte ptr [rax], al ; adc byte ptr [rbp - 0x13], bh ; call rsi
0x000000000019ffcd : add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add byte ptr [rsi], bh ; add byte ptr [rax], bh ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001a74e5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; xchg eax, esp ; fild dword ptr [rax] ; add byte ptr [rax], ah ; pop rdi ; int1 ; call rbx
0x00000000001ae465 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; adc al, 0x4b ; add dword ptr [rax], eax ; push rax ; stosb byte ptr [rdi], al ; cmc ; call qword ptr [rax]
0x00000000001ae565 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; adc al, 0x4c ; add dword ptr [rax], eax ; push rax ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001af065 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; adc al, 0x57 ; add dword ptr [rax], eax ; and bl, al ; cmc ; jmp qword ptr [rdi]
0x00000000001a6465 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; adc al, 0xcb ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a644d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; retf 0 ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x000000000019a98d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cmp al, 0x10 ; add byte ptr [rax], al ; js 0x19aa1e ; std ; jmp qword ptr [rdi]
0x00000000001b6945 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; hlt ; iretd ; add dword ptr [rax], eax ; adc byte ptr [rax + rdi*8], cl ; jmp qword ptr [rax]
0x00000000001a6435 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, -0x36 ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001b9935 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, -1 ; add dword ptr [rax], eax ; rol cl, 0xf8 ; call qword ptr [rdi]
0x00000000001a493d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; shr rsi, cl ; jmp qword ptr [rsi]
0x00000000001ad5bd : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp al, 1 ; add byte ptr [rax + 0x58], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a12bd : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jns 0x1a12d5 ; add al, cl ; jns 0x1a12c6 ; jmp qword ptr [rdi]
0x00000000001a57bd : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov esi, 0xab880000 ; sti ; call qword ptr [rax]
0x00000000001a43bd : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; mov bl, 0xee ; jmp rdx
0x00000000001a64c5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; je 0x1a64a7 ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a64dd : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov ebx, cs ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001aa80d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov esp, 0xd800010e ; stc ; jmp qword ptr [rdi]
0x00000000001ae60d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov esp, 0xd800014c ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001ae8dd : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov word ptr [rdi + 1], cs ; add byte ptr [rax - 0x51], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001aa9f5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc byte ptr [rcx], al ; add byte ptr [rax + 0x16], al ; hlt ; jmp qword ptr [rcx]
0x00000000001b06f5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rdx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001a5bf5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x00000000001a64f5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001ad55d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; or al, 0x3c ; add dword ptr [rax], eax ; clc ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001a64ad : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; retf ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001a47a5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; nop ; shr dh, 1 ; call qword ptr [rax]
0x00000000001b1aed : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; add dword ptr [rcx], 0xf6940800 ; call qword ptr [rdi]
0x00000000001a47ed : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; pop rax ; shr esi, 1 ; call rcx
0x00000000001a6495 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a596d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; sbb al, 0xc0 ; add byte ptr [rax], al ; clc ; jp 0x1a5983 ; jmp qword ptr [rdi]
0x00000000001a647d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; sub al, 0xcb ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000000ac623 : add byte ptr [rax], al ; add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000001a9161 : add byte ptr [rax], al ; add byte ptr [rax + rdi*8], cl ; add byte ptr [rax], al ; sbb byte ptr [rdi - 0xe], ah ; call qword ptr [rax]
0x00000000001a2979 : add byte ptr [rax], al ; add byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; ror dl, 1 ; in eax, dx ; call rdi
0x000000000019a991 : add byte ptr [rax], al ; add byte ptr [rax + rdx], bh ; add byte ptr [rax], al ; js 0x19aa1a ; std ; jmp qword ptr [rdi]
0x000000000003639f : add byte ptr [rax], al ; add byte ptr [rax - 0x2d], cl ; loopne 0x363f9 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000003641f : add byte ptr [rax], al ; add byte ptr [rax - 0x2d], cl ; loopne 0x3647d ; test dword ptr [rdi], eax ; setne al ; movzx eax, al ; ret
0x0000000000034f33 : add byte ptr [rax], al ; add byte ptr [rax - 0x3791f09a], al ; movss dword ptr [rdi], xmm1 ; ret
0x00000000000ac08d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000ac61d : add byte ptr [rax], al ; add byte ptr [rax - 0x57], cl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0xac69f ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000139c4d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; adc eax, 0x3609 ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000e8f4d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc eax, 0x2d8051 ; mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x00000000001379ad : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rdi] ; enter 0x4789, 0x58 ; mov eax, 1 ; ret
0x00000000001556ad : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmc ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015588d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; hlt ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000002e01d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jo 0x2e07a ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000015b1fd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsi ; add al, 0x48 ; mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b18d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsi ; add eax, 0x480e8b48 ; mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000015512d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015aadd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsi ; cmc ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015aa5d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsi ; hlt ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000f7ee3 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsi ; js 0xf7f41 ; mov dword ptr [rdi + 0x100], edx ; ret
0x0000000000088475 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x68 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000003946d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsp ; and al, 8 ; mov rsi, r15 ; mov rdi, r12 ; call r14
0x000000000007a03d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sub byte ptr [r8 - 0x75], r9b ; push rdi ; and byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x00000000001378fb : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; or byte ptr [r8 - 0x77], r9b ; push rdi ; adc byte ptr [rax + 1], bh ; ret
0x000000000008b03d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, r12 ; call rax
0x000000000008a18f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000005a773 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0x10
0x000000000006efa1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rdi + rcx + 0x48], 0x8b ; mov edi, 0xe0 ; jmp rax
0x00000000000f80fe : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rcx*2 + 0x31], 0xd2 ; xor esi, esi ; mov rdi, rbx ; call rax
0x000000000012125d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; in al, dx ; sub byte ptr [rcx - 0x77], cl ; enter -0x72b4, 0xd ; insb byte ptr [rdi], dx ; ret
0x00000000000f138d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; insb byte ptr [rdi], dx ; and al, 0x18 ; add dword ptr [rax - 0x75], ecx ; and al, 0x18 ; mov rdx, rax ; jmp 0xf13e3
0x00000000000ac6d5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x44 ; mov eax, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0xac6c1 ; ret
0x00000000001ae464 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; adc al, 0x4b ; add dword ptr [rax], eax ; push rax ; stosb byte ptr [rdi], al ; cmc ; call qword ptr [rax]
0x00000000001ae564 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; adc al, 0x4c ; add dword ptr [rax], eax ; push rax ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001af064 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; adc al, 0x57 ; add dword ptr [rax], eax ; and bl, al ; cmc ; jmp qword ptr [rdi]
0x00000000001a6464 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; adc al, 0xcb ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a644c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; retf 0 ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x000000000019a98c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cmp al, 0x10 ; add byte ptr [rax], al ; js 0x19aa1f ; std ; jmp qword ptr [rdi]
0x00000000001b6944 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; hlt ; iretd ; add dword ptr [rax], eax ; adc byte ptr [rax + rdi*8], cl ; jmp qword ptr [rax]
0x00000000001a6434 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, -0x36 ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001b9934 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, -1 ; add dword ptr [rax], eax ; rol cl, 0xf8 ; call qword ptr [rdi]
0x00000000001a493c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; shr rsi, cl ; jmp qword ptr [rsi]
0x00000000001ad5bc : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp al, 1 ; add byte ptr [rax + 0x58], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a12bc : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jns 0x1a12d6 ; add al, cl ; jns 0x1a12c7 ; jmp qword ptr [rdi]
0x00000000001a57bc : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov esi, 0xab880000 ; sti ; call qword ptr [rax]
0x00000000001a43bc : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; mov bl, 0xee ; jmp rdx
0x00000000001a64c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; je 0x1a64a8 ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a64dc : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov ebx, cs ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001aa80c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov esp, 0xd800010e ; stc ; jmp qword ptr [rdi]
0x00000000001ae60c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov esp, 0xd800014c ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001ae8dc : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov word ptr [rdi + 1], cs ; add byte ptr [rax - 0x51], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001aa9f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc byte ptr [rcx], al ; add byte ptr [rax + 0x16], al ; hlt ; jmp qword ptr [rcx]
0x00000000001b06f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rdx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001a5bf4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x00000000001a64f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001ad55c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; or al, 0x3c ; add dword ptr [rax], eax ; clc ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001a64ac : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; retf ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001a47a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; nop ; shr dh, 1 ; call qword ptr [rax]
0x00000000001b1aec : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pushfq ; add dword ptr [rcx], 0xf6940800 ; call qword ptr [rdi]
0x00000000001a47ec : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pushfq ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; pop rax ; shr esi, 1 ; call rcx
0x00000000001a6494 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a596c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; sbb al, 0xc0 ; add byte ptr [rax], al ; clc ; jp 0x1a5984 ; jmp qword ptr [rdi]
0x00000000001a647c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; sub al, 0xcb ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x000000000004a50c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; or rsi, rax ; mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x000000000008de14 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0x1516c] ; ret
0x000000000008bbb4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0x157ac] ; ret
0x000000000008f6f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd495c] ; ret
0x0000000000091a94 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd513c] ; ret
0x000000000008d494 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd540c] ; ret
0x0000000000091bb4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd682c] ; ret
0x00000000000a860b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a77cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a711b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000a712b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000012687c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 1], 1 ; xlatb ; mov qword ptr [r9], rdi ; ret
0x00000000001a915b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax + rdi*8], cl ; add byte ptr [rax], al ; sbb byte ptr [rdi - 0xe], ah ; call qword ptr [rax]
0x00000000001b35f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pushfq ; add dword ptr [rax], eax ; xor byte ptr [rcx], 0xf7 ; jmp qword ptr [rsi]
0x00000000001a2b5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; or al, 0x92 ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; std ; jmp rdi
0x000000000019f3bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rdi + rax + 0x5180000], ch ; in eax, dx ; call qword ptr [rcx]
0x00000000001ad8f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rdi + rdi + 0x61f00001], ah ; cmc ; jmp qword ptr [rbx]
0x00000000001a50bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rdi + rsi*4], ch ; add byte ptr [rax + 0x3d], cl ; out dx, eax ; jmp rsi
0x00000000001b6fd3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; test dh, dl ; add dword ptr [rax], eax ; mov al, 0x2c ; clc ; jmp rdi
0x00000000001b40e3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; xchg eax, esp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; push rax ; jl 0x1b40fa ; call rcx
0x00000000001a7dc3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; je 0x1a7dc2 ; add byte ptr [rax], al ; mov al, 0x10 ; jmp qword ptr [rdi]
0x000000000019f8f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rdi ; add byte ptr [rax], al ; nop ; sbb ebp, ebp ; call rbx
0x00000000001b3f23 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add ah, dl ; movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; shr cl, 0xfb ; call rsi
0x00000000001a2973 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; ror dl, 1 ; in eax, dx ; call rdi
0x00000000001a1453 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add byte ptr [rbx + rdi*2], al ; add byte ptr [rax], al ; adc byte ptr [rbp - 0x13], bh ; call rsi
0x000000000019ffcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add byte ptr [rsi], bh ; add byte ptr [rax], bh ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001ae463 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; adc al, 0x4b ; add dword ptr [rax], eax ; push rax ; stosb byte ptr [rdi], al ; cmc ; call qword ptr [rax]
0x00000000001ae563 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; adc al, 0x4c ; add dword ptr [rax], eax ; push rax ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001af063 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; adc al, 0x57 ; add dword ptr [rax], eax ; and bl, al ; cmc ; jmp qword ptr [rdi]
0x00000000001a6463 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; adc al, 0xcb ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a644b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; retf 0 ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x000000000019a98b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cmp al, 0x10 ; add byte ptr [rax], al ; js 0x19aa20 ; std ; jmp qword ptr [rdi]
0x00000000001a6433 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, -0x36 ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a493b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; shr rsi, cl ; jmp qword ptr [rsi]
0x00000000001ad5bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp al, 1 ; add byte ptr [rax + 0x58], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a12bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jns 0x1a12d7 ; add al, cl ; jns 0x1a12c8 ; jmp qword ptr [rdi]
0x00000000001a57bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov esi, 0xab880000 ; sti ; call qword ptr [rax]
0x00000000001a43bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; mov bl, 0xee ; jmp rdx
0x00000000001a64c3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; je 0x1a64a9 ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a64db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov ebx, cs ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001aa80b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov esp, 0xd800010e ; stc ; jmp qword ptr [rdi]
0x00000000001ae60b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov esp, 0xd800014c ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001ae8db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; mov word ptr [rdi + 1], cs ; add byte ptr [rax - 0x51], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001aa9f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc byte ptr [rcx], al ; add byte ptr [rax + 0x16], al ; hlt ; jmp qword ptr [rcx]
0x00000000001b06f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rdx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001a5bf3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x00000000001a64f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001ad55b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; or al, 0x3c ; add dword ptr [rax], eax ; clc ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001a64ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; retf ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001a47a3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; nop ; shr dh, 1 ; call qword ptr [rax]
0x00000000001a47eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; pop rax ; shr esi, 1 ; call rcx
0x00000000001a6493 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a596b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; sbb al, 0xc0 ; add byte ptr [rax], al ; clc ; jp 0x1a5985 ; jmp qword ptr [rdi]
0x00000000001a647b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; sub al, 0xcb ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000000ac08b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000ac61b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x57], cl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0xac6a1 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000002e01b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jo 0x2e07c ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000015512b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000003946b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsp ; and al, 8 ; mov rsi, r15 ; mov rdi, r12 ; call r14
0x000000000012125b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; in al, dx ; sub byte ptr [rcx - 0x77], cl ; enter -0x72b4, 0xd ; insb byte ptr [rdi], dx ; ret
0x00000000001ae462 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; adc al, 0x4b ; add dword ptr [rax], eax ; push rax ; stosb byte ptr [rdi], al ; cmc ; call qword ptr [rax]
0x00000000001ae562 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; adc al, 0x4c ; add dword ptr [rax], eax ; push rax ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001af062 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; adc al, 0x57 ; add dword ptr [rax], eax ; and bl, al ; cmc ; jmp qword ptr [rdi]
0x00000000001a6462 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; adc al, 0xcb ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a644a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; retf 0 ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x000000000019a98a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cmp al, 0x10 ; add byte ptr [rax], al ; js 0x19aa21 ; std ; jmp qword ptr [rdi]
0x00000000001a6432 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, -0x36 ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a493a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; shr rsi, cl ; jmp qword ptr [rsi]
0x00000000001ad5ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp al, 1 ; add byte ptr [rax + 0x58], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a12ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jns 0x1a12d8 ; add al, cl ; jns 0x1a12c9 ; jmp qword ptr [rdi]
0x00000000001a57ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov esi, 0xab880000 ; sti ; call qword ptr [rax]
0x00000000001a43ba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; mov bl, 0xee ; jmp rdx
0x00000000001a64c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; je 0x1a64aa ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a64da : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov ebx, cs ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001aa80a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov esp, 0xd800010e ; stc ; jmp qword ptr [rdi]
0x00000000001ae60a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov esp, 0xd800014c ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001ae8da : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; mov word ptr [rdi + 1], cs ; add byte ptr [rax - 0x51], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001aa9f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc byte ptr [rcx], al ; add byte ptr [rax + 0x16], al ; hlt ; jmp qword ptr [rcx]
0x00000000001b06f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rdx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001a5bf2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x00000000001a64f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001ad55a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; or al, 0x3c ; add dword ptr [rax], eax ; clc ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001a64aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; retf ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001a47a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; nop ; shr dh, 1 ; call qword ptr [rax]
0x00000000001a47ea : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pushfq ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; pop rax ; shr esi, 1 ; call rcx
0x00000000001a6492 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a596a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; sbb al, 0xc0 ; add byte ptr [rax], al ; clc ; jp 0x1a5986 ; jmp qword ptr [rdi]
0x00000000001a647a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; sub al, 0xcb ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001a5bf1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x00000000001a5bf0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x00000000001a5bef : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x00000000001a5bee : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x00000000001a5bed : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x000000000001bbf9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rdi]
0x00000000001bbf44 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cmp dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 8
0x00000000001a2972 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; ror dl, 1 ; in eax, dx ; call rdi
0x00000000001a1452 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rbx + rdi*2], al ; add byte ptr [rax], al ; adc byte ptr [rbp - 0x13], bh ; call rsi
0x000000000019ffca : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rsi], bh ; add byte ptr [rax], bh ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001a915a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr fs:[rax], al ; add byte ptr [rax + rdi*8], cl ; add byte ptr [rax], al ; sbb byte ptr [rdi - 0xe], ah ; call qword ptr [rax]
0x00000000001ad8f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr fs:[rax], al ; add byte ptr [rdi + rdi + 0x61f00001], ah ; cmc ; jmp qword ptr [rbx]
0x00000000001b35f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pushfq ; add dword ptr [rax], eax ; xor byte ptr [rcx], 0xf7 ; jmp qword ptr [rsi]
0x000000000001bbfb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rdi]
0x00000000001b6fd2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cmp al, 0 ; add byte ptr [rax], al ; test dh, dl ; add dword ptr [rax], eax ; mov al, 0x2c ; clc ; jmp rdi
0x00000000001b40e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cmp al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; push rax ; jl 0x1b40fb ; call rcx
0x00000000001bbf46 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cmp dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 8
0x00000000001a7dc2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; je 0x1a7dc3 ; add byte ptr [rax], al ; mov al, 0x10 ; jmp qword ptr [rdi]
0x000000000019f8f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rdi ; add byte ptr [rax], al ; nop ; sbb ebp, ebp ; call rbx
0x000000000001bbf3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rdi]
0x00000000000a9eeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000008fda1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xbd7ef] ; ret
0x000000000008fa11 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xbda4f] ; ret
0x000000000008d5a1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xbfd7f] ; ret
0x00000000001b3f24 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, dl ; movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; shr cl, 0xfb ; call rsi
0x00000000001a2974 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; ror dl, 1 ; in eax, dx ; call rdi
0x00000000001a1454 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rbx + rdi*2], al ; add byte ptr [rax], al ; adc byte ptr [rbp - 0x13], bh ; call rsi
0x000000000019ffcc : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rsi], bh ; add byte ptr [rax], bh ; in eax, dx ; jmp qword ptr [rdi]
0x00000000000a9f3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x30178916], cl ; in eax, dx ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a6d7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x4568a0e], cl ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a60ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x00000000000a84cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x48178916], cl ; lea eax, dword ptr [rdi + 4] ; ret
0x0000000000155e9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x4e8bf956], cl ; cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155c9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x4e8bfa56], cl ; cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155a9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x4e8bfb56], cl ; cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000a095b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x4789440f], cl ; add al, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x000000000008d44b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000016b6eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000a0c2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000a0cab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov ebp, 0xea8348c0 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x00000000000a0c8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x00000000000a05eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esi, 0x74c08407 ; sub edi, dword ptr [rcx] ; ret 0x2774
0x00000000000a068b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esi, 0x89c63907 ; ret 0xb8
0x0000000000097f6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x0000000000090deb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000100d7e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000a9efb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx + 0x30178816], cl ; in eax, dx ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a848b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx + 0x48178816], cl ; lea eax, dword ptr [rdi + 1] ; ret
0x00000000000a081b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0x44], ah ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000798e9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x00000000001a915c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr fs:[rax], al ; add byte ptr [rax + rdi*8], cl ; add byte ptr [rax], al ; sbb byte ptr [rdi - 0xe], ah ; call qword ptr [rax]
0x000000000019f3bc : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr fs:[rax], al ; add byte ptr [rdi + rax + 0x5180000], ch ; in eax, dx ; call qword ptr [rcx]
0x00000000001ad8f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr fs:[rax], al ; add byte ptr [rdi + rdi + 0x61f00001], ah ; cmc ; jmp qword ptr [rbx]
0x00000000001a50bc : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr fs:[rax], al ; add byte ptr [rdi + rsi*4], ch ; add byte ptr [rax + 0x3d], cl ; out dx, eax ; jmp rsi
0x000000000017e4d3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000013ea6c : add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x000000000013ea2c : add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x00000000001b35f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pushfq ; add dword ptr [rax], eax ; xor byte ptr [rcx], 0xf7 ; jmp qword ptr [rsi]
0x00000000001a2b5c : add byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; or al, 0x92 ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; std ; jmp rdi
0x00000000000abcac : add byte ptr [rax], al ; add byte ptr [rax], al ; and dh, 0xf ; je 0xabcd1 ; mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xabd31 ; ret
0x00000000000abcfc : add byte ptr [rax], al ; add byte ptr [rax], al ; and dh, 0xf ; je 0xabd21 ; mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xabd31 ; ret
0x00000000000798dc : add byte ptr [rax], al ; add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x0000000000090ddc : add byte ptr [rax], al ; add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000090dec : add byte ptr [rax], al ; add byte ptr [rax], al ; bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000090dfc : add byte ptr [rax], al ; add byte ptr [rax], al ; bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000097f6c : add byte ptr [rax], al ; add byte ptr [rax], al ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x0000000000090e0c : add byte ptr [rax], al ; add byte ptr [rax], al ; bsf eax, eax ; sub rdx, rax ; jbe 0x90e5f ; add rax, rdi ; ret
0x00000000000a0c2c : add byte ptr [rax], al ; add byte ptr [rax], al ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x00000000000a0c3c : add byte ptr [rax], al ; add byte ptr [rax], al ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x00000000000a0c4c : add byte ptr [rax], al ; add byte ptr [rax], al ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x000000000001bbfd : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rdi]
0x000000000017e4dc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000001b6fd4 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp al, 0 ; add byte ptr [rax], al ; test dh, dl ; add dword ptr [rax], eax ; mov al, 0x2c ; clc ; jmp rdi
0x00000000001b40e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; push rax ; jl 0x1b40f9 ; call rcx
0x00000000000d24fc : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp byte ptr [rdi + 1], 0 ; jne 0xd251f ; or esi, 2 ; mov eax, esi ; ret
0x00000000001bbf48 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 8
0x000000000016ef5c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000016ef6c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000016ef7c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000016ef8c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000016ef9c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000016eedc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000016eeec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000016eefc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000016ef0c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000016ef1c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000016ef2c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000016ef3c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000016ef4c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000008be07 : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + rax] ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000ac65c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000ac67c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000ac66c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x000000000016eecc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x0000000000163f4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000163f5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000000d694c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x0000000000079d0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000a766c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000a606c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000a703c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00000000000a6d5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov cx, word ptr [rsi] ; mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000a608c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000a848c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a6d3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000a9efc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000f736c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000a705c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x0000000000071d9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000a099c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a090c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000a095c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a707c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a708c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a706c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00000000000a767c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a849c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a607c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000163f8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000016b66c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000007ee7c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000116e2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0x116e4c ; ret
0x00000000000abc3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x14] ; cmp eax, dword ptr [rsi + 0x14] ; jne 0xabd30 ; ret
0x00000000000abc6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x1c] ; cmp eax, dword ptr [rsi + 0x1c] ; jne 0xabd30 ; ret
0x00000000000abc9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0xabd2c ; ret
0x000000000013ea3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000abcec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xabd2c ; ret
0x00000000000abc0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0xc] ; cmp eax, dword ptr [rsi + 0xc] ; jne 0xabd30 ; ret
0x00000000000abbdc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; cmp eax, dword ptr [rsi + 4] ; jne 0xabd30 ; ret
0x00000000000f735c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000fd96c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x0000000000170bfc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi - 0xc] ; cmp eax, dword ptr [rsi - 0xc] ; jne 0x170d30 ; ret
0x0000000000170c2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi - 4] ; cmp eax, dword ptr [rsi - 4] ; jne 0x170d30 ; ret
0x0000000000078cec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x0000000000078cbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x00000000000798fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x00000000000f7f1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rsi] ; mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x00000000000a76ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a60ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000a6d7c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a60bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov dx, word ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000015b50c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi + 1] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b49c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi + 2] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b42c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi + 3] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015ae5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155a9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi - 5] ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155c9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi - 6] ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155e9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi - 7] ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000a84cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000015b57c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000a9f3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x000000000013ee10 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x20], 0 ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000100783 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 8], 0 ; ret
0x000000000013ee18 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a709c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x000000000005689c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rcx ; mov eax, 0xffffffff ; ret
0x00000000000a70bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a70dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a70ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a70fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a710c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a70cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a70ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000011b1bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x000000000013d47c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbx + 8] ; lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000163edc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000013e65c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000007685c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007f15c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000007b50c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; cmp rax, qword ptr [rdi + 0x10] ; jae 0x7b531 ; movzx eax, byte ptr [rax] ; ret
0x0000000000130dbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x00000000001379ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdx] ; bswap eax ; mov dword ptr [rdi + 0x58], eax ; mov eax, 1 ; ret
0x000000000002e01c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000003aefc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, r8 ; mov qword ptr [rdi + 8], rdx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000003a91c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; cqo ; idiv rsi ; ret
0x0000000000071da2 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000000a60ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000000a6dbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rcx, qword ptr [rsi] ; mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000001236bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rsp + 0x28] ; call 0x1f9c3
0x0000000000021815 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rbx ; and r12, 0xfffffffffffffff0 ; mov qword ptr [r12], rbx ; call 0x8da41
0x000000000007466c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdx, qword ptr [rbx + 0xa0] ; mov rdi, qword ptr [rdx + 0x40] ; jmp 0x74650
0x0000000000116e3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdx, qword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x00000000000e8f4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdx, qword ptr [rip + 0x2d8051] ; mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x000000000015512c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015b3bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000088474 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdx, qword ptr [rsp + 0x68] ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000003946c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdx, qword ptr [rsp + 8] ; mov rsi, r15 ; mov rdi, r12 ; call r14
0x00000000000a704c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x00000000000a081c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], r9w ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a082c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], r9w ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a097c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], si ; mov byte ptr [rdi + 2], 0 ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a08ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], si ; mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x00000000000a08dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x0000000000035320 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x00000000000a860c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a77cc : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a616c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000aa07c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a711c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000a712c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000124a8c : add byte ptr [rax], al ; add byte ptr [rax], al ; movsxd rdi, dword ptr [rdi] ; mov eax, 3 ; syscall ; ret
0x000000000012687d : add byte ptr [rax], al ; add byte ptr [rax], al ; movsxd rdx, eax ; add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x00000000001701cc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 0x10] ; movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x000000000016b6ec : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008d44c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000015afec : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000015b6cc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000015af6c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000015b65c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000001258fb : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; lea eax, dword ptr [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00000000000798ea : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x00000000000f732b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000034bc5 : add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rax + 0x21], 0xd0 ; movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x00000000001a7dc4 : add byte ptr [rax], al ; add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; je 0x1a7dc1 ; add byte ptr [rax], al ; mov al, 0x10 ; jmp qword ptr [rdi]
0x000000000019f8f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rdi ; add byte ptr [rax], al ; nop ; sbb ebp, ebp ; call rbx
0x000000000007450c : add byte ptr [rax], al ; add byte ptr [rax], al ; sub rdx, qword ptr [rax + 8] ; mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x00000000000ac61c : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, 1 ; je 0xac6a0 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000a2dbc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor ah, ah ; mov byte ptr [rdx + 1], ah ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000000a2dfc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor ah, ah ; mov byte ptr [rdx + 4], ah ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000000a9eec : add byte ptr [rax], al ; add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x0000000000034b4c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor dl, 0xf ; adc dword ptr [rdi], eax ; and rax, rdx ; movq xmm0, rax ; ret
0x0000000000078ccc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000078cdc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x000000000001bbf5 : add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rdi]
0x00000000000a9eed : add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000008fda3 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xbd7ef] ; ret
0x000000000008fa13 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xbda4f] ; ret
0x000000000008d5a3 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xbfd7f] ; ret
0x000000000019e04e : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, bh ; add byte ptr [rax], r8b ; shr rdx, 1 ; jmp rdi
0x00000000001b3f26 : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, dl ; movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; shr cl, 0xfb ; call rsi
0x00000000001a2976 : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; ror dl, 1 ; in eax, dx ; call rdi
0x00000000001a1456 : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rbx + rdi*2], al ; add byte ptr [rax], al ; adc byte ptr [rbp - 0x13], bh ; call rsi
0x000000000019ffce : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rsi], bh ; add byte ptr [rax], bh ; in eax, dx ; jmp qword ptr [rdi]
0x00000000000a0699 : add byte ptr [rax], al ; add byte ptr [rbp + 0xd], dh ; nop ; add rax, 1 ; cmp byte ptr [rdi + rax], dl ; je 0xa06b1 ; ret
0x0000000000076d85 : add byte ptr [rax], al ; add byte ptr [rbp + 0xe], dh ; mov edx, dword ptr [rdi + 0xc0] ; mov eax, edx ; ret
0x000000000019f701 : add byte ptr [rax], al ; add byte ptr [rbp + rbx*2 + 0x14280000], ch ; in eax, dx ; jmp qword ptr [rdi]
0x0000000000076a8f : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x00000000000769ac : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x00000000001a7ec9 : add byte ptr [rax], al ; add byte ptr [rbp], dh ; add byte ptr [rax + 0x11], ah ; jmp qword ptr [rdi]
0x00000000000a9f3d : add byte ptr [rax], al ; add byte ptr [rbx + 0x30178916], cl ; in eax, dx ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a76dd : add byte ptr [rax], al ; add byte ptr [rbx + 0x3568b0e], cl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a850d : add byte ptr [rax], al ; add byte ptr [rbx + 0x3568b0e], cl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a84dd : add byte ptr [rax], al ; add byte ptr [rbx + 0x4568a0e], cl ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a6d7d : add byte ptr [rax], al ; add byte ptr [rbx + 0x4568a0e], cl ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a76ad : add byte ptr [rax], al ; add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a60ad : add byte ptr [rax], al ; add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x00000000000a84cd : add byte ptr [rax], al ; add byte ptr [rbx + 0x48178916], cl ; lea eax, dword ptr [rdi + 4] ; ret
0x0000000000155e9d : add byte ptr [rax], al ; add byte ptr [rbx + 0x4e8bf956], cl ; cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155c9d : add byte ptr [rax], al ; add byte ptr [rbx + 0x4e8bfa56], cl ; cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155a9d : add byte ptr [rax], al ; add byte ptr [rbx + 0x4e8bfb56], cl ; cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015b50d : add byte ptr [rax], al ; add byte ptr [rbx + 0xe8b0156], cl ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b49d : add byte ptr [rax], al ; add byte ptr [rbx + 0xe8b0256], cl ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b42d : add byte ptr [rax], al ; add byte ptr [rbx + 0xe8b0356], cl ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000001b7ca9 : add byte ptr [rax], al ; add byte ptr [rbx + 1], dl ; add byte ptr [rax], ah ; push rcx ; clc ; call rdi
0x00000000001ae469 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*2], dl ; add dword ptr [rax], eax ; push rax ; stosb byte ptr [rdi], al ; cmc ; call qword ptr [rax]
0x00000000001a6481 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*8], ch ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001a6469 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*8], dl ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001ad501 : add byte ptr [rax], al ; add byte ptr [rbx + rdi + 0x57680001], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a1459 : add byte ptr [rax], al ; add byte ptr [rbx + rdi*2], al ; add byte ptr [rax], al ; adc byte ptr [rbp - 0x13], bh ; call rsi
0x00000000001a5479 : add byte ptr [rax], al ; add byte ptr [rbx + rdi*4], ah ; add byte ptr [rax], al ; xor bh, bl ; cld ; call qword ptr [rax]
0x00000000000d81d3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x1e7efe1e], al ; add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; ret 0xf35b
0x00000000000d69cd : add byte ptr [rax], al ; add byte ptr [rbx - 0x6c8bfb1e], al ; mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x00000000000ddc7e : add byte ptr [rax], al ; add byte ptr [rbx - 0x7af7db8c], cl ; div byte ptr [rdi - 0xa] ; ret
0x00000000001a3c61 : add byte ptr [rax], al ; add byte ptr [rbx], cl ; add byte ptr [rax], al ; pop rax ; outsd dx, dword ptr [rsi] ; out dx, al ; jmp qword ptr [rdi]
0x00000000000a095d : add byte ptr [rax], al ; add byte ptr [rcx + 0x4789440f], cl ; add al, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x0000000000136ee0 : add byte ptr [rax], al ; add byte ptr [rcx + 0xfffb], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret
0x00000000001b9b11 : add byte ptr [rax], al ; add byte ptr [rcx + rax - 0x39b7fffe], bh ; clc ; call qword ptr [rdi]
0x00000000000a4ff8 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x4a], al ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000000c9129 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x13], cl ; mov rdi, rbx ; call r12
0x0000000000089f22 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x000000000003aefd : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; mov qword ptr [rdi + 8], rdx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000001a12c1 : add byte ptr [rax], al ; add byte ptr [rcx + rdi*2], ch ; add al, cl ; jns 0x1a12c2 ; jmp qword ptr [rdi]
0x00000000001b92e1 : add byte ptr [rax], al ; add byte ptr [rcx + rdi*8 - 0x5a07ffff], cl ; clc ; call qword ptr [rbx]
0x00000000001a92b1 : add byte ptr [rax], al ; add byte ptr [rcx + rdi*8], bl ; add byte ptr [rax - 0x6e], bh ; call rbx
0x000000000013ea2d : add byte ptr [rax], al ; add byte ptr [rcx], al ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x000000000012e712 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x75], 0x74 ; and al, 0x10 ; mov rdi, rbp ; call r14
0x00000000001039f6 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0x3e ; add byte ptr [rdi + rax - 0xd], dh ; ret
0x000000000005371a : add byte ptr [rax], al ; add byte ptr [rdi + 0x100], bh ; mov qword ptr [rsp + 8], rdx ; call 0x1f98f
0x00000000001ad671 : add byte ptr [rax], al ; add byte ptr [rdi + 0x59280001], bl ; cmc ; call rdx
0x0000000000158ca8 : add byte ptr [rax], al ; add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x00000000001a40e9 : add byte ptr [rax], al ; add byte ptr [rdi + 0x7ca00000], dl ; out dx, al ; jmp qword ptr [rdx]
0x00000000000f76b3 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x00000000000abd22 : add byte ptr [rax], al ; add byte ptr [rdi + 2], bh ; neg eax ; ret
0x00000000001ba5d9 : add byte ptr [rax], al ; add byte ptr [rdi + 4], bl ; add byte ptr [rax], al ; mov dh, 2 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000170d22 : add byte ptr [rax], al ; add byte ptr [rdi + 9], bh ; neg eax ; ret
0x000000000008bda5 : add byte ptr [rax], al ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xe2edf] ; ret
0x000000000019f3c1 : add byte ptr [rax], al ; add byte ptr [rdi + rax + 0x5180000], ch ; in eax, dx ; call qword ptr [rcx]
0x00000000000ec1f5 : add byte ptr [rax], al ; add byte ptr [rdi + rax*8 + 4], ah ; and eax, 0x40 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001ac8f1 : add byte ptr [rax], al ; add byte ptr [rdi + rbp + 0x20b80001], bl ; cmc ; jmp qword ptr [rdx]
0x00000000001a48f9 : add byte ptr [rax], al ; add byte ptr [rdi + rbp*4 - 0x72400000], ah ; cli ; call qword ptr [rax]
0x00000000001a48c9 : add byte ptr [rax], al ; add byte ptr [rdi + rbp*4], dh ; add al, ah ; cli ; call qword ptr [rax]
0x00000000001a8861 : add byte ptr [rax], al ; add byte ptr [rdi + rbp*8], cl ; add byte ptr [rax], al ; sbb byte ptr [rcx], bh ; call rsi
0x000000000019f8f9 : add byte ptr [rax], al ; add byte ptr [rdi + rbx*2 + 0x1b900000], ah ; in eax, dx ; call rbx
0x00000000001af881 : add byte ptr [rax], al ; add byte ptr [rdi + rbx*2], ch ; add dword ptr [rax], eax ; cmp bh, ah ; cmc ; jmp rsp
0x00000000001ab869 : add byte ptr [rax], al ; add byte ptr [rdi + rbx], dl ; add dword ptr [rax], eax ; ror ch, 0xf4 ; jmp qword ptr [rcx]
0x00000000001ae8b1 : add byte ptr [rax], al ; add byte ptr [rdi + rcx*2 + 1], bl ; add byte ptr [rax], bh ; scasd eax, dword ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae8f9 : add byte ptr [rax], al ; add byte ptr [rdi + rcx*2 - 0x507fffff], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001ae8e1 : add byte ptr [rax], al ; add byte ptr [rdi + rcx*2 - 0x5097ffff], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a28f1 : add byte ptr [rax], al ; add byte ptr [rdi + rcx*4 - 0x36c80000], bl ; in eax, dx ; jmp qword ptr [rax]
0x00000000001ad8f9 : add byte ptr [rax], al ; add byte ptr [rdi + rdi + 0x61f00001], ah ; cmc ; jmp qword ptr [rbx]
0x00000000001a5881 : add byte ptr [rax], al ; add byte ptr [rdi + rdi*4], ch ; add byte ptr [rax], al ; mov byte ptr [rax + rsi*8], al ; jmp qword ptr [rbx]
0x00000000001af081 : add byte ptr [rax], al ; add byte ptr [rdi + rdx*2], ch ; add dword ptr [rax], eax ; cmp bl, al ; cmc ; jmp rax
0x00000000001af069 : add byte ptr [rax], al ; add byte ptr [rdi + rdx*2], dl ; add dword ptr [rax], eax ; and bl, al ; cmc ; jmp qword ptr [rdi]
0x00000000001a7101 : add byte ptr [rax], al ; add byte ptr [rdi + rdx*8 + 0x4a380000], ch ; int1 ; jmp rcx
0x00000000001ad101 : add byte ptr [rax], al ; add byte ptr [rdi + rsi + 0x3c980001], ch ; cmc ; call qword ptr [rdi]
0x00000000001a50c1 : add byte ptr [rax], al ; add byte ptr [rdi + rsi*4], ch ; add byte ptr [rax + 0x3d], cl ; out dx, eax ; jmp rsi
0x00000000001a9091 : add byte ptr [rax], al ; add byte ptr [rdi + rsi*8], bh ; add byte ptr [rax], al ; pop rax ; pop rbp ; jmp rcx
0x000000000019d689 : add byte ptr [rax], al ; add byte ptr [rdi - 0x6c000000], dh ; cli ; jmp qword ptr [rcx]
0x00000000000350be : add byte ptr [rax], al ; add byte ptr [rdi], bh ; movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x00000000001bb311 : add byte ptr [rax], al ; add byte ptr [rdi], bh ; or byte ptr [rax], al ; add byte ptr [rdx + 4], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000124330 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x1024448b ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003577a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x48c08944 ; add esp, 0x90 ; ret
0x00000000000f7f3a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x66c3d8f7 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000116d37 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x787d089 ; test eax, eax ; jne 0x116d44 ; pop rdx ; pop r10 ; ret
0x000000000015a624 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000013ed1e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; enter -0x3f77, 0x48 ; mov dword ptr [rbx], eax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x0000000000134c53 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; enter -0x3f77, 0x48 ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000013ecde : add byte ptr [rax], al ; add byte ptr [rdi], cl ; enter 0x389, 0x48 ; add esp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x0000000000138297 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; enter 0x4289, 0x10 ; mov eax, 1 ; ret
0x0000000000138177 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; enter 0x4289, 0xc ; mov eax, 1 ; ret
0x00000000000aac35 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000015b65d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000015b6cd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000012b525 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000003cf01 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x48 ; or byte ptr [rbp - 0x57f2faf], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003cf41 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x48 ; or cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003cf21 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x48 ; or dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000d27dd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4b ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000006dc5d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x0000000000040146 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x70 ; or byte ptr [rbp - 0x57f2faa], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040186 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x70 ; or cl, byte ptr [rbp - 0x57f2faa] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040166 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x70 ; or dword ptr [rbp - 0x57f2faa], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000ace22 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000aaced : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x00000000000aac9d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xc2 ; and dh, 0xf0 ; mov edx, 0 ; cmove rax, rdx ; pop rbx ; ret
0x000000000008d44d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000016b6ed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000a0c3d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000a0c4d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x00000000000a0c2d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000a0cad : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov ebp, 0xea8348c0 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x00000000000a0c8d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x00000000000a05ed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esi, 0x74c08407 ; sub edi, dword ptr [rcx] ; ret 0x2774
0x00000000000a068d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esi, 0x89c63907 ; ret 0xb8
0x0000000000097f6d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x0000000000090dfd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000090ded : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000090e0d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xc22948c0 ; jbe 0x90e5e ; add rax, rdi ; ret
0x0000000000090ddd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000000b5985 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov gs, word ptr [rbx - 0x7cfffff8] ; ret
0x00000000000ac23f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; sal bh, 0xd8 ; cmp ecx, r8d ; cmovg eax, edx ; ret
0x00000000000c5a94 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x00000000000c3c41 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x144
0x000000000013fd1f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3145
0x00000000000bca95 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3bba
0x000000000002a60e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4389
0x0000000000084f73 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x489
0x00000000000eef0f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x66e9
0x00000000000e2c04 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x833b
0x00000000001175f9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8348
0x00000000000459ac : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8539
0x00000000000fcec8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x90c3
0x00000000000b671c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc3f3
0x00000000000ed121 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xd5e9
0x00000000000d81dc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xf35b
0x0000000000105220 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test bh, dl ; add eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x0000000000105187 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test byte ptr [rax + 5], dh ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000001051a7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test byte ptr [rax + 6], dh ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000aed24 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test byte ptr [rbx + 0x45000003], ah ; test ebp, ebp ; mov r10, rbp ; setne dl ; jmp 0xaed58
0x0000000000104e4c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test byte ptr [rbx + 0xa], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000001052bc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test byte ptr [rbx + 3], bl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000000b1713 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test byte ptr [rbx], ch ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x7b], al ; in eax, dx ; mov r10, rbp ; setne dl ; jmp 0xb1748
0x0000000000104bce : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test byte ptr [rcx], cl ; or eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x0000000000104ed8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test byte ptr [rdi + 7], bh ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000104ef8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test byte ptr [rdi + 9], bl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000105425 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test byte ptr [rdx + 3], dh ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104b55 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test byte ptr [rdx], ah ; or eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x00000000001050fb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test byte ptr [rsi + rax], bh ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000105019 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test byte ptr [rsi], bh ; add eax, 0xf6310000 ; mov rdi, r12 ; call rbx
0x0000000000104cf3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test byte ptr [rsp + rcx], al ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000e7875 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x0000000000100d80 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000136ee6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret
0x000000000010b3a4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; cmp qword ptr [rcx + 0x10], rsi ; cmovb eax, edx ; ret
0x000000000014d4b5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xf40
0x0000000000062223 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000046f7c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b44
0x000000000003e6fb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x00000000000a9efd : add byte ptr [rax], al ; add byte ptr [rdx + 0x30178816], cl ; in eax, dx ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a848d : add byte ptr [rax], al ; add byte ptr [rdx + 0x48178816], cl ; lea eax, dword ptr [rdi + 1] ; ret
0x00000000001a1379 : add byte ptr [rax], al ; add byte ptr [rdx + rdi*2], ah ; add byte ptr [rax], al ; and byte ptr [rdx - 0x13], bh ; jmp qword ptr [rbx]
0x00000000001a13d1 : add byte ptr [rax], al ; add byte ptr [rdx + rdi*2], bh ; add al, bh ; jns 0x1a13d2 ; call rcx
0x00000000001a2b61 : add byte ptr [rax], al ; add byte ptr [rdx + rdx*4], cl ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; std ; jmp rdi
0x00000000000a081d : add byte ptr [rax], al ; add byte ptr [rsi + 0x44], ah ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a082d : add byte ptr [rax], al ; add byte ptr [rsi + 0x44], ah ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000014d373 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp ah, byte ptr [rbx - 0x35] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x000000000016b9e2 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000013ebea : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; ror byte ptr [rdi], 0x11 ; and al, 0x28 ; call rdx
0x000000000016b9da : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ba97 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016b9f5 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ba46 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000a0b6f : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000104d6d : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rbx
0x0000000000104c39 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; mov rdi, r13 ; call rbx
0x0000000000104bb1 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x0000000000104feb : add byte ptr [rax], al ; add byte ptr [rsi + 2], bh ; mov rdi, r12 ; call rbx
0x0000000000104d5e : add byte ptr [rax], al ; add byte ptr [rsi + 2], bh ; mov rdi, r13 ; call rbx
0x0000000000104c2a : add byte ptr [rax], al ; add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x0000000000104ba2 : add byte ptr [rax], al ; add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x00000000001aa811 : add byte ptr [rax], al ; add byte ptr [rsi + rcx - 0x627ffff], bh ; jmp qword ptr [rdi]
0x00000000001aafb9 : add byte ptr [rax], al ; add byte ptr [rsi + rdx + 1], ah ; add byte ptr [rax], dl ; jge 0x1aafc1 ; jmp rdi
0x00000000001b2f91 : add byte ptr [rax], al ; add byte ptr [rsi + rdx*4], bh ; add dword ptr [rax], eax ; add rdi, rsi ; call rsi
0x00000000001b6fd9 : add byte ptr [rax], al ; add byte ptr [rsi + rdx*8 + 0x2cb00001], al ; clc ; jmp rdi
0x00000000000798eb : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x0000000000035321 : add byte ptr [rax], al ; add byte ptr [rsi - 0x77], ah ; and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000134c0c : add byte ptr [rax], al ; add byte ptr [rsi - 0x77], ah ; insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x000000000019ffd1 : add byte ptr [rax], al ; add byte ptr [rsi], bh ; add byte ptr [rax], bh ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001ae569 : add byte ptr [rax], al ; add byte ptr [rsp + rcx*2], dl ; add dword ptr [rax], eax ; push rax ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001ad5d9 : add byte ptr [rax], al ; add byte ptr [rsp + rdi + 0x58700001], al ; cmc ; jmp qword ptr [rcx]
0x00000000001ad5c1 : add byte ptr [rax], al ; add byte ptr [rsp + rdi + 1], ch ; add byte ptr [rax + 0x58], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001ad5a9 : add byte ptr [rax], al ; add byte ptr [rsp + rdi + 1], dl ; add byte ptr [rax + 0x58], al ; cmc ; jmp qword ptr [rcx]
0x00000000001ad591 : add byte ptr [rax], al ; add byte ptr [rsp + rdi], bh ; add dword ptr [rax], eax ; sub byte ptr [rax - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001ad561 : add byte ptr [rax], al ; add byte ptr [rsp + rdi], cl ; add dword ptr [rax], eax ; clc ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001b6e01 : add byte ptr [rax], al ; add byte ptr [rsp + rdx*8 + 0x27580001], ch ; clc ; jmp rdi
0x00000000001a915e : add byte ptr [rax], al ; add byte ptr fs:[rax], al ; add byte ptr [rax + rdi*8], cl ; add byte ptr [rax], al ; sbb byte ptr [rdi - 0xe], ah ; call qword ptr [rax]
0x000000000019f3be : add byte ptr [rax], al ; add byte ptr fs:[rax], al ; add byte ptr [rdi + rax + 0x5180000], ch ; in eax, dx ; call qword ptr [rcx]
0x00000000001ad8f6 : add byte ptr [rax], al ; add byte ptr fs:[rax], al ; add byte ptr [rdi + rdi + 0x61f00001], ah ; cmc ; jmp qword ptr [rbx]
0x00000000001a50be : add byte ptr [rax], al ; add byte ptr fs:[rax], al ; add byte ptr [rdi + rsi*4], ch ; add byte ptr [rax + 0x3d], cl ; out dx, eax ; jmp rsi
0x00000000001b35bf : add byte ptr [rax], al ; add cl, byte ptr [rdi + 0xe] ; adc byte ptr [rbx + 0xa930202], al ; ret
0x000000000017e4d5 : add byte ptr [rax], al ; add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000013ea6e : add byte ptr [rax], al ; add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x000000000013ea2e : add byte ptr [rax], al ; add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x00000000000d6ab6 : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; lahf ; ret 0x8feb
0x00000000000ac6d6 : add byte ptr [rax], al ; add rax, 1 ; mov r8d, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0xac6c0 ; ret
0x0000000000090ba4 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x0000000000135681 : add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x0000000000138131 : add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x0000000000137851 : add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x0000000000134ab4 : add byte ptr [rax], al ; add rdi, 0xc8 ; jmp rcx
0x00000000001b35f6 : add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pushfq ; add dword ptr [rax], eax ; xor byte ptr [rcx], 0xf7 ; jmp qword ptr [rsi]
0x00000000001a2b5e : add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; or al, 0x92 ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; std ; jmp rdi
0x00000000001a297a : add byte ptr [rax], al ; and al, 0x90 ; add byte ptr [rax], al ; ror dl, 1 ; in eax, dx ; call rdi
0x00000000001a74ee : add byte ptr [rax], al ; and byte ptr [rdi - 0xf], bl ; call rbx
0x00000000000abcae : add byte ptr [rax], al ; and dh, 0xf ; je 0xabccf ; mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xabd2f ; ret
0x00000000000abcfe : add byte ptr [rax], al ; and dh, 0xf ; je 0xabd1f ; mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xabd2f ; ret
0x00000000000798de : add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x000000000007715e : add byte ptr [rax], al ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000000d69ce : add byte ptr [rax], al ; and edx, 4 ; je 0xd6978 ; mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x0000000000090dde : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000090dee : add byte ptr [rax], al ; bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000090dfe : add byte ptr [rax], al ; bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000097f6e : add byte ptr [rax], al ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x0000000000090e0e : add byte ptr [rax], al ; bsf eax, eax ; sub rdx, rax ; jbe 0x90e5d ; add rax, rdi ; ret
0x000000000008d42e : add byte ptr [rax], al ; bsf rdx, rdx ; movzx ecx, byte ptr [rsi + rdx] ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x00000000000a0c2e : add byte ptr [rax], al ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x00000000000a0c3e : add byte ptr [rax], al ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x00000000000a0c4e : add byte ptr [rax], al ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x00000000000a0c5e : add byte ptr [rax], al ; bsr eax, eax ; sub rdx, 0x40 ; add rdx, rax ; jl 0xa0ce1 ; add rax, rdi ; ret
0x000000000008f764 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x000000000008f7f2 : add byte ptr [rax], al ; bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000001bbff : add byte ptr [rax], al ; call qword ptr [rdi]
0x000000000017e4de : add byte ptr [rax], al ; call rdi
0x00000000001a5976 : add byte ptr [rax], al ; clc ; jp 0x1a597a ; jmp qword ptr [rdi]
0x000000000019e052 : add byte ptr [rax], al ; cld ; add byte ptr [rax], r8b ; shr rdx, 1 ; jmp rdi
0x00000000001a6452 : add byte ptr [rax], al ; cld ; retf 0 ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001b2f8e : add byte ptr [rax], al ; cmp al, 0 ; add byte ptr [rax], al ; cmp al, 0x96 ; add dword ptr [rax], eax ; add rdi, rsi ; call rsi
0x00000000001b6fd6 : add byte ptr [rax], al ; cmp al, 0 ; add byte ptr [rax], al ; test dh, dl ; add dword ptr [rax], eax ; mov al, 0x2c ; clc ; jmp rdi
0x00000000001b40e6 : add byte ptr [rax], al ; cmp al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; push rax ; jl 0x1b40f7 ; call rcx
0x000000000019a992 : add byte ptr [rax], al ; cmp al, 0x10 ; add byte ptr [rax], al ; js 0x19aa19 ; std ; jmp qword ptr [rdi]
0x00000000001b2f92 : add byte ptr [rax], al ; cmp al, 0x96 ; add dword ptr [rax], eax ; add rdi, rsi ; call rsi
0x0000000000034ea5 : add byte ptr [rax], al ; cmp byte ptr [rdi + 0x2d], 0 ; add byte ptr [rax + 0x1fe8c17f], al ; ret
0x00000000000d24fe : add byte ptr [rax], al ; cmp byte ptr [rdi + 1], 0 ; jne 0xd251d ; or esi, 2 ; mov eax, esi ; ret
0x0000000000034e61 : add byte ptr [rax], al ; cmp byte ptr [rdi - 0x77], 0xd0 ; neg eax ; or eax, edx ; sar eax, 0x1f ; not eax ; and eax, ecx ; ret
0x000000000019ffd6 : add byte ptr [rax], al ; cmp byte ptr [rsi], ch ; in eax, dx ; jmp qword ptr [rdi]
0x000000000004a92e : add byte ptr [rax], al ; cmp dword ptr [r8], edx ; je 0x4a951 ; sub r8, 4 ; cmp rdi, r8 ; jbe 0x4a941 ; ret
0x00000000001bbf4a : add byte ptr [rax], al ; cmp dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 8
0x000000000013d36e : add byte ptr [rax], al ; cmp eax, 1 ; jne 0x13d36c ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x0000000000079889 : add byte ptr [rax], al ; cmp rax, rdi ; je 0x798ab ; cmp qword ptr [rip + 0x34ca48], 0 ; je 0x798b1 ; ret
0x00000000001ad54a : add byte ptr [rax], al ; hlt ; cmp eax, dword ptr [rcx] ; add al, ah ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001b694a : add byte ptr [rax], al ; hlt ; iretd ; add dword ptr [rax], eax ; adc byte ptr [rax + rdi*8], cl ; jmp qword ptr [rax]
0x00000000001a643a : add byte ptr [rax], al ; in al, -0x36 ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001b993a : add byte ptr [rax], al ; in al, -1 ; add dword ptr [rax], eax ; rol cl, 0xf8 ; call qword ptr [rdi]
0x00000000001aab3a : add byte ptr [rax], al ; in al, 0x11 ; add dword ptr [rax], eax ; xor byte ptr [rdi], dl ; hlt ; call qword ptr [rdx]
0x0000000000195d3e : add byte ptr [rax], al ; in al, 0x67 ; out dx, eax ; inc dword ptr [rax + rdi*8 + 0x6a140000] ; out dx, eax ; jmp rsp
0x0000000000195d7e : add byte ptr [rax], al ; in al, 0x70 ; out dx, eax ; lcall ptr [rdx + rdi*8 + 0x71940000] ; out dx, eax ; call rsp
0x00000000001ae942 : add byte ptr [rax], al ; in al, dx ; add qword ptr [r8], r8 ; clc ; scasd eax, dword ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a4942 : add byte ptr [rax], al ; in al, dx ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; shr rsi, cl ; jmp qword ptr [rsi]
0x00000000001ad5c2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp al, 1 ; add byte ptr [rax + 0x58], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a8ac2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; int1 ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0xe], al ; call qword ptr [rdx]
0x00000000001a12c2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; jns 0x1a12d0 ; add al, cl ; jns 0x1a12c1 ; jmp qword ptr [rdi]
0x00000000001a50c2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov bh, 0 ; add byte ptr [rax + 0x3d], cl ; out dx, eax ; jmp rsi
0x00000000001a57c2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov esi, 0xab880000 ; sti ; call qword ptr [rax]
0x00000000001a5cc2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x00000000001a43c2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; mov bl, 0xee ; jmp rdx
0x000000000011aec5 : add byte ptr [rax], al ; ja 0x11aedc ; mov rax, rdi ; sar rax, 6 ; ret
0x000000000010501a : add byte ptr [rax], al ; je 0x10556d ; xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000104aed : add byte ptr [rax], al ; je 0x10558d ; xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000104d90 : add byte ptr [rax], al ; je 0x1055cd ; xor esi, esi ; mov rdi, r13 ; call rbx
0x000000000010503f : add byte ptr [rax], al ; je 0x1055ed ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000104b12 : add byte ptr [rax], al ; je 0x10560d ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000001052bd : add byte ptr [rax], al ; je 0x10562d ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000104b36 : add byte ptr [rax], al ; je 0x10564d ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000104ed9 : add byte ptr [rax], al ; je 0x10566d ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000104db4 : add byte ptr [rax], al ; je 0x10568d ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000104c5b : add byte ptr [rax], al ; je 0x1056ad ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000105406 : add byte ptr [rax], al ; je 0x1056cd ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000001052e1 : add byte ptr [rax], al ; je 0x1056ed ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000105188 : add byte ptr [rax], al ; je 0x10570d ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000105063 : add byte ptr [rax], al ; je 0x10572d ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000001050fc : add byte ptr [rax], al ; je 0x10574d ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000105083 : add byte ptr [rax], al ; je 0x10576d ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000010549f : add byte ptr [rax], al ; je 0x10578d ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000105426 : add byte ptr [rax], al ; je 0x1057ad ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000010537a : add byte ptr [rax], al ; je 0x1057cd ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000105301 : add byte ptr [rax], al ; je 0x1057ed ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000105221 : add byte ptr [rax], al ; je 0x10580d ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000001051a8 : add byte ptr [rax], al ; je 0x10582d ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104f72 : add byte ptr [rax], al ; je 0x10584d ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104ef9 : add byte ptr [rax], al ; je 0x10586d ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104b56 : add byte ptr [rax], al ; je 0x10588d ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104e4d : add byte ptr [rax], al ; je 0x1058ad ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104dd4 : add byte ptr [rax], al ; je 0x1058cd ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104bcf : add byte ptr [rax], al ; je 0x1058ed ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104cf4 : add byte ptr [rax], al ; je 0x10590d ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104c7b : add byte ptr [rax], al ; je 0x10592d ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000019e3f6 : add byte ptr [rax], al ; je 0x19e3eb ; call rdi
0x000000000019e3f5 : add byte ptr [rax], al ; je 0x19e3ec ; call rdi
0x00000000001a64ca : add byte ptr [rax], al ; je 0x1a64a2 ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a7dca : add byte ptr [rax], al ; je 0x1a7dbb ; add byte ptr [rax], al ; mov al, 0x10 ; jmp qword ptr [rdi]
0x0000000000077374 : add byte ptr [rax], al ; je 0x77394 ; mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x77394 ; ret
0x000000000007f272 : add byte ptr [rax], al ; je 0x7f298 ; mov rax, qword ptr [rdi + 8] ; cmp rax, rdx ; jae 0x7f2b0 ; movzx eax, byte ptr [rax] ; ret
0x00000000000ac574 : add byte ptr [rax], al ; je 0xac4e1 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac624 : add byte ptr [rax], al ; je 0xac698 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac644 : add byte ptr [rax], al ; je 0xac6a0 ; test ah, ah ; jne 0xac680 ; test al, 0xf0 ; jne 0xac670 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000019ffd2 : add byte ptr [rax], al ; jl 0x1a0045 ; add byte ptr [rax], al ; cmp byte ptr [rsi], ch ; in eax, dx ; jmp qword ptr [rdi]
0x0000000000076d86 : add byte ptr [rax], al ; jne 0x76da4 ; mov edx, dword ptr [rdi + 0xc0] ; mov eax, edx ; ret
0x0000000000078c9d : add byte ptr [rax], al ; jne 0x78cc3 ; xor eax, eax ; cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x00000000000a069a : add byte ptr [rax], al ; jne 0xa06bb ; nop ; add rax, 1 ; cmp byte ptr [rdi + rax], dl ; je 0xa06b0 ; ret
0x000000000019a996 : add byte ptr [rax], al ; js 0x19aa15 ; std ; jmp qword ptr [rdi]
0x0000000000076a90 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00000000000769ad : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x000000000016ef5e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000016ef6e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000016ef7e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000016ef8e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000016ef9e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000016eebd : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000016eede : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000016eeee : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000016eefe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000016ef0e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000016ef1e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000016ef2e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000016ee6a : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000016ef3e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000016ef4e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000008be09 : add byte ptr [rax], al ; lea rax, qword ptr [rdi + rax] ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000ac4fb : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac65e : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000ac67e : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000ac66e : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x000000000016eece : add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x0000000000147b34 : add byte ptr [rax], al ; lea rcx, qword ptr [rdx + rcx - 0x10] ; movzx eax, byte ptr [rdi + rcx] ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000003344a : add byte ptr [rax], al ; lea rdi, qword ptr [rip + 0x14cc6d] ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x0000000000122ede : add byte ptr [rax], al ; lea rdi, qword ptr [rip + 0x2a2815] ; call rax
0x0000000000139c4e : add byte ptr [rax], al ; lea rdx, qword ptr [rip + 0x3609] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000aac5e : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0xdb859] ; movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x00000000001a7dce : add byte ptr [rax], al ; mov al, 0x10 ; jmp qword ptr [rdi]
0x0000000000163f4e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000163f6e : add byte ptr [rax], al ; mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000163f5e : add byte ptr [rax], al ; mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000019b6e6 : add byte ptr [rax], al ; mov byte ptr [rcx - 0x17], dh ; call qword ptr [rdi]
0x00000000000d694e : add byte ptr [rax], al ; mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x0000000000079d0e : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000a766e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000a606e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000a703e : add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00000000000a080e : add byte ptr [rax], al ; mov byte ptr [rdi], sil ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a6d5e : add byte ptr [rax], al ; mov cx, word ptr [rsi] ; mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000a768e : add byte ptr [rax], al ; mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a608e : add byte ptr [rax], al ; mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000a848e : add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a6d3e : add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000a9efe : add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x000000000013794e : add byte ptr [rax], al ; mov dword ptr [rdi + 4], 1 ; mov eax, 1 ; ret
0x00000000000f736e : add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000a705e : add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x0000000000071d9e : add byte ptr [rax], al ; mov dword ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000a099e : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a090e : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000a095e : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a08be : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x00000000000a08fe : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00000000000a09ae : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a09be : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a091e : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a08ae : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00000000000a707e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a708e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a706e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x000000000012ffd6 : add byte ptr [rax], al ; mov dword ptr [rsi], 6 ; movdqu xmm0, xmmword ptr [rdi + 0x20] ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x000000000013000e : add byte ptr [rax], al ; mov dword ptr [rsi], 9 ; movdqu xmm0, xmmword ptr [rdi + 0x38] ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x0000000000108d71 : add byte ptr [rax], al ; mov dword ptr fs:[0x2d0], eax ; pop rax ; pop rdi ; call rax
0x000000000015b5ee : add byte ptr [rax], al ; mov dx, word ptr [rsi + 1] ; mov cx, word ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000000a767e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a849e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a607e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000a9f0e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x0000000000056846 : add byte ptr [rax], al ; mov eax, 0xffffffff ; mov qword ptr [rdi], r10 ; ret
0x0000000000163f8e : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000016b66e : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000000f7e2e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x108] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000007ee7e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000116e2e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0x116e4a ; ret
0x00000000000abc3e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x14] ; cmp eax, dword ptr [rsi + 0x14] ; jne 0xabd2e ; ret
0x00000000000abc6e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x1c] ; cmp eax, dword ptr [rsi + 0x1c] ; jne 0xabd2e ; ret
0x000000000012ff8c : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x00000000000abc9e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0xabd2a ; ret
0x000000000013ea3e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000012ffa6 : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x30] ; test eax, eax ; jne 0x12ffff ; mov dword ptr [rsi], 0 ; ret
0x00000000000abcee : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xabd2a ; ret
0x00000000000d8106 : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x0000000000137996 : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x58] ; bswap eax ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x00000000000abc0e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0xc] ; cmp eax, dword ptr [rsi + 0xc] ; jne 0xabd2e ; ret
0x00000000000abbde : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; cmp eax, dword ptr [rsi + 4] ; jne 0xabd2e ; ret
0x00000000000f735e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000fd96e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x0000000000170bfe : add byte ptr [rax], al ; mov eax, dword ptr [rdi - 0xc] ; cmp eax, dword ptr [rsi - 0xc] ; jne 0x170d2e ; ret
0x0000000000170c2e : add byte ptr [rax], al ; mov eax, dword ptr [rdi - 4] ; cmp eax, dword ptr [rsi - 4] ; jne 0x170d2e ; ret
0x0000000000078cee : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x0000000000078cbe : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x000000000012fee6 : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; mov dword ptr [rsi + 8], 0 ; test eax, eax ; je 0x12ff11 ; xor eax, eax ; ret
0x00000000000798fe : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x00000000000fd97e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; js 0xfd9a0 ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x00000000000f7f1e : add byte ptr [rax], al ; mov eax, dword ptr [rsi] ; mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x00000000000a084e : add byte ptr [rax], al ; mov eax, dword ptr [rsp + 0x10] ; mov byte ptr [rdi + 4], cl ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000034f2e : add byte ptr [rax], al ; mov eax, edx ; and eax, 0x80000000 ; movd xmm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x00000000001a64e2 : add byte ptr [rax], al ; mov ebx, cs ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000000abba6 : add byte ptr [rax], al ; mov ecx, dword ptr [rsi + 0xc] ; cmp dword ptr [rdi + 0xc], ecx ; jne 0xabd30 ; xor eax, eax ; ret
0x000000000016d8df : add byte ptr [rax], al ; mov ecx, dword ptr [rsi - 4] ; cmp ecx, dword ptr [rdi - 4] ; jne 0x16db26 ; xor eax, eax ; ret
0x00000000000a76ae : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a60ae : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000a84de : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a6d7e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a9f4e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a60be : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov dx, word ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a76de : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a850e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a9f7e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x000000000015b50e : add byte ptr [rax], al ; mov edx, dword ptr [rsi + 1] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b49e : add byte ptr [rax], al ; mov edx, dword ptr [rsi + 2] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b42e : add byte ptr [rax], al ; mov edx, dword ptr [rsi + 3] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015ae5e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155a9e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 5] ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155c9e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 6] ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155e9e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 7] ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000a84ce : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a609e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000a9f3e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x0000000000104d6e : add byte ptr [rax], al ; mov esi, 1 ; mov rdi, r12 ; call rbx
0x0000000000104c3a : add byte ptr [rax], al ; mov esi, 1 ; mov rdi, r13 ; call rbx
0x0000000000104bb2 : add byte ptr [rax], al ; mov esi, 1 ; mov rdi, r14 ; call rbx
0x0000000000104fec : add byte ptr [rax], al ; mov esi, 2 ; mov rdi, r12 ; call rbx
0x0000000000104d5f : add byte ptr [rax], al ; mov esi, 2 ; mov rdi, r13 ; call rbx
0x0000000000104c2b : add byte ptr [rax], al ; mov esi, 2 ; mov rdi, r14 ; call rbx
0x0000000000104ba3 : add byte ptr [rax], al ; mov esi, 2 ; mov rdi, r15 ; call rbx
0x000000000013a967 : add byte ptr [rax], al ; mov esi, 3 ; mov rdi, r15 ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000012f190 : add byte ptr [rax], al ; mov esi, 4 ; mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00000000001aa812 : add byte ptr [rax], al ; mov esp, 0xd800010e ; stc ; jmp qword ptr [rdi]
0x00000000001ae612 : add byte ptr [rax], al ; mov esp, 0xd800014c ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x000000000013e69e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x18], rsi ; mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000013ee12 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x20], 0 ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000100785 : add byte ptr [rax], al ; mov qword ptr [rdi + 8], 0 ; ret
0x00000000001378fc : add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; mov qword ptr [rdi + 0x10], rdx ; mov eax, 1 ; ret
0x000000000013ee1a : add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a709e : add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x000000000005689e : add byte ptr [rax], al ; mov qword ptr [rdi], rcx ; mov eax, 0xffffffff ; ret
0x00000000000a70be : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a70de : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a70ee : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a70fe : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a710e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a70ce : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a70ae : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000004a518 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000007a002 : add byte ptr [rax], al ; mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x0000000000060ecf : add byte ptr [rax], al ; mov qword ptr [rdx + 8], rdi ; mov rsi, qword ptr [rbp - 0x660] ; xor edx, edx ; jmp 0x5d0ff
0x0000000000134b8b : add byte ptr [rax], al ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x000000000011b1be : add byte ptr [rax], al ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x000000000004807f : add byte ptr [rax], al ; mov r8, qword ptr [rdi + 0x28] ; mov r9, qword ptr [rdi + 0x30] ; mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x00000000000204a4 : add byte ptr [rax], al ; mov rax, qword ptr [r13 + 0x18] ; test rax, rax ; je 0x204c2 ; mov rdi, rbp ; call rax
0x000000000012f973 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12f991 ; mov rdi, rbx ; call rax
0x000000000012fce5 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12fd03 ; mov rdi, rbx ; call rax
0x00000000001354e1 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x1354ff ; mov rdi, r12 ; call rax
0x0000000000136daf : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x136dcd ; mov rdi, rbp ; call rax
0x0000000000073493 : add byte ptr [rax], al ; mov rax, qword ptr [rbp + 0x18] ; mov esi, r12d ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000007d42e : add byte ptr [rax], al ; mov rax, qword ptr [rbp + 0x20] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000007366a : add byte ptr [rax], al ; mov rax, qword ptr [rbp + 0x28] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000013d47e : add byte ptr [rax], al ; mov rax, qword ptr [rbx + 8] ; lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000130e1e : add byte ptr [rax], al ; mov rax, qword ptr [rbx + 8] ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x000000000016b68e : add byte ptr [rax], al ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000163ede : add byte ptr [rax], al ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000013e65e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000007685e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007f15e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x00000000000740ce : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; cmp qword ptr [rax + 0x30], 0 ; je 0x740f0 ; ret
0x000000000007b50e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; cmp rax, qword ptr [rdi + 0x10] ; jae 0x7b52f ; movzx eax, byte ptr [rax] ; ret
0x0000000000130dbe : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013dd7e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; mov qword ptr [rsp + 8], r8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013d466 : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x00000000001379ae : add byte ptr [rax], al ; mov rax, qword ptr [rdx] ; bswap eax ; mov dword ptr [rdi + 0x58], eax ; mov eax, 1 ; ret
0x000000000002deae : add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000002e01e : add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e02e : add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000003aefe : add byte ptr [rax], al ; mov rax, r8 ; mov qword ptr [rdi + 8], rdx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000003a91e : add byte ptr [rax], al ; mov rax, rdi ; cqo ; idiv rsi ; ret
0x0000000000108ebe : add byte ptr [rax], al ; mov rax, rdi ; movzx edi, dil ; shr rax, 0xc ; xor al, al ; or eax, edi ; ret
0x0000000000071da4 : add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000000c912a : add byte ptr [rax], al ; mov rbp, r13 ; mov rdi, rbx ; call r12
0x0000000000104acc : add byte ptr [rax], al ; mov rbp, rdi ; xor edx, edx ; xor esi, esi ; call rbx
0x00000000001554ce : add byte ptr [rax], al ; mov rcx, qword ptr [rsi - 0xa] ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001556ae : add byte ptr [rax], al ; mov rcx, qword ptr [rsi - 0xb] ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015588e : add byte ptr [rax], al ; mov rcx, qword ptr [rsi - 0xc] ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001552ee : add byte ptr [rax], al ; mov rcx, qword ptr [rsi - 9] ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a76fe : add byte ptr [rax], al ; mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a60ee : add byte ptr [rax], al ; mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000000a6dbe : add byte ptr [rax], al ; mov rcx, qword ptr [rsi] ; mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a60fe : add byte ptr [rax], al ; mov rcx, qword ptr [rsi] ; mov dx, word ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000150b8e : add byte ptr [rax], al ; mov rcx, rdx ; movzx eax, sil ; mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000009148f : add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000d024e : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x308] ; call r12
0x0000000000074675 : add byte ptr [rax], al ; mov rdi, qword ptr [rdx + 0x40] ; jmp 0x74647
0x00000000001236be : add byte ptr [rax], al ; mov rdi, qword ptr [rsp + 0x28] ; call 0x1f9c1
0x0000000000104d73 : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x000000000002f5fb : add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x0000000000104c3f : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x000000000012f0bb : add byte ptr [rax], al ; mov rdi, r13 ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000008b193 : add byte ptr [rax], al ; mov rdi, r13 ; mov rdx, rbp ; mov rsi, r12 ; call rax
0x0000000000104bb7 : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x000000000007bd45 : add byte ptr [rax], al ; mov rdi, r15 ; call 0x97fc7
0x0000000000104ba8 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x000000000012eef3 : add byte ptr [rax], al ; mov rdi, r15 ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000013a96c : add byte ptr [rax], al ; mov rdi, r15 ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x00000000001396d1 : add byte ptr [rax], al ; mov rdi, rax ; call qword ptr [r10]
0x00000000001397c3 : add byte ptr [rax], al ; mov rdi, rax ; lea r9, qword ptr [rsp + 0x14] ; call qword ptr [r10]
0x0000000000139d04 : add byte ptr [rax], al ; mov rdi, rax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x00000000001309fb : add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x0000000000104ffd : add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x000000000012f195 : add byte ptr [rax], al ; mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000021817 : add byte ptr [rax], al ; mov rdi, rbx ; and r12, 0xfffffffffffffff0 ; mov qword ptr [r12], rbx ; call 0x8da3f
0x0000000000139c55 : add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x000000000006da76 : add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x000000000006d76f : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000145d18 : add byte ptr [rax], al ; mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000012fbdd : add byte ptr [rax], al ; mov rdi, rbx ; mov rcx, qword ptr [rsp] ; call rcx
0x0000000000075f55 : add byte ptr [rax], al ; mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x130] ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000103d77 : add byte ptr [rax], al ; mov rdi, rbx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; jmp rax
0x00000000000fe82f : add byte ptr [rax], al ; mov rdi, rdx ; syscall ; cmp rax, -0x1000 ; ja 0xfe850 ; ret
0x00000000000fe8df : add byte ptr [rax], al ; mov rdi, rdx ; syscall ; cmp rax, -0x1000 ; ja 0xfe900 ; ret
0x000000000013d24e : add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x000000000007ee9d : add byte ptr [rax], al ; mov rdx, qword ptr [rax + 8] ; jne 0x7eec0 ; sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000007466e : add byte ptr [rax], al ; mov rdx, qword ptr [rbx + 0xa0] ; mov rdi, qword ptr [rdx + 0x40] ; jmp 0x7464e
0x0000000000116e3e : add byte ptr [rax], al ; mov rdx, qword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x00000000000e8f4e : add byte ptr [rax], al ; mov rdx, qword ptr [rip + 0x2d8051] ; mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x00000000000f7ee4 : add byte ptr [rax], al ; mov rdx, qword ptr [rsi + 0x78] ; mov qword ptr [rdi + 0x100], rdx ; ret
0x000000000015b34e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi + 1] ; mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b2de : add byte ptr [rax], al ; mov rdx, qword ptr [rsi + 2] ; mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b26e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi + 3] ; mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b1fe : add byte ptr [rax], al ; mov rdx, qword ptr [rsi + 4] ; mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b18e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi + 5] ; mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b11e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi + 6] ; mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b0ae : add byte ptr [rax], al ; mov rdx, qword ptr [rsi + 7] ; mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015ab5e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi - 0xa] ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015aade : add byte ptr [rax], al ; mov rdx, qword ptr [rsi - 0xb] ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015aa5e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi - 0xc] ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015512e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015abde : add byte ptr [rax], al ; mov rdx, qword ptr [rsi - 9] ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000a60de : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000088476 : add byte ptr [rax], al ; mov rdx, qword ptr [rsp + 0x68] ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000391ee : add byte ptr [rax], al ; mov rdx, qword ptr [rsp + 8] ; mov rsi, qword ptr [r15] ; mov rdi, qword ptr [r12] ; call r14
0x000000000003946e : add byte ptr [rax], al ; mov rdx, qword ptr [rsp + 8] ; mov rsi, r15 ; mov rdi, r12 ; call r14
0x0000000000089f23 : add byte ptr [rax], al ; mov rdx, r12 ; mov rdi, r15 ; call rax
0x0000000000037614 : add byte ptr [rax], al ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, qword ptr [rsp + 0x18] ; call r15
0x00000000000715cb : add byte ptr [rax], al ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rsp ; call 0x4d89d
0x000000000007510f : add byte ptr [rax], al ; mov rdx, r15 ; mov rdi, r12 ; call 0x913ba
0x000000000008a443 : add byte ptr [rax], al ; mov rdx, r15 ; mov rdi, r8 ; call rax
0x000000000011f6bc : add byte ptr [rax], al ; mov rdx, r15 ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000008ac74 : add byte ptr [rax], al ; mov rdx, rbp ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000001046a6 : add byte ptr [rax], al ; mov rsi, qword ptr [rax] ; mov rdi, qword ptr [rbp - 0x40] ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000104319 : add byte ptr [rax], al ; mov rsi, qword ptr [rbx] ; mov rdi, qword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000bc19d : add byte ptr [rax], al ; mov rsi, qword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000145c1c : add byte ptr [rax], al ; mov rsi, rax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000008b03e : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, r12 ; call rax
0x000000000008a190 : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x00000000001ae8e2 : add byte ptr [rax], al ; mov word ptr [rdi + 1], cs ; add byte ptr [rax - 0x51], ch ; cmc ; jmp qword ptr [rcx]
0x00000000000a704e : add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x00000000000a081e : add byte ptr [rax], al ; mov word ptr [rdi], r9w ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a082e : add byte ptr [rax], al ; mov word ptr [rdi], r9w ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a096e : add byte ptr [rax], al ; mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a097e : add byte ptr [rax], al ; mov word ptr [rdi], si ; mov byte ptr [rdi + 2], 0 ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a08ee : add byte ptr [rax], al ; mov word ptr [rdi], si ; mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x00000000000a08de : add byte ptr [rax], al ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x0000000000035322 : add byte ptr [rax], al ; mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x00000000000353eb : add byte ptr [rax], al ; mov word ptr [rsp - 0x10], ax ; mov dword ptr [rdi], edx ; fld xword ptr [rsp - 0x18] ; ret
0x000000000012ffdc : add byte ptr [rax], al ; movdqu xmm0, xmmword ptr [rdi + 0x20] ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x0000000000130014 : add byte ptr [rax], al ; movdqu xmm0, xmmword ptr [rdi + 0x38] ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x00000000000a6e3e : add byte ptr [rax], al ; movdqu xmm0, xmmword ptr [rsi] ; mov cl, byte ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a619e : add byte ptr [rax], al ; movdqu xmm0, xmmword ptr [rsi] ; mov ecx, dword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a860e : add byte ptr [rax], al ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a77ce : add byte ptr [rax], al ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a616e : add byte ptr [rax], al ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000aa07e : add byte ptr [rax], al ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a711e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000a712e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a2d50 : add byte ptr [rax], al ; movlpd xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000001aa9fa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc byte ptr [rcx], al ; add byte ptr [rax + 0x16], al ; hlt ; jmp qword ptr [rcx]
0x00000000001b06fa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rdx - 0xa], ah ; jmp qword ptr [rsi]
0x0000000000194d9e : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ja 0x194d92 ; call rsp
0x0000000000194d96 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jb 0x194d92 ; call qword ptr [rbx + rcx*4]
0x00000000001950a6 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x1950b0
0x000000000019491e : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or ch, dl ; call rsp
0x000000000019f8fa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rdi ; add byte ptr [rax], al ; nop ; sbb ebp, ebp ; call rbx
0x00000000001b35fa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pushfq ; add dword ptr [rax], eax ; xor byte ptr [rcx], 0xf7 ; jmp qword ptr [rsi]
0x00000000001a5bfa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x00000000001a64fa : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x000000000013044a : add byte ptr [rax], al ; movsxd rax, dword ptr [rdi + 0x18] ; cmp eax, 3 ; jbe 0x130470 ; mov eax, 2 ; ret
0x000000000007a607 : add byte ptr [rax], al ; movsxd rdi, dword ptr [rbx + 0x70] ; syscall ; cmp rax, -0x1000 ; ja 0x7a631 ; pop rbx ; ret
0x0000000000124a8e : add byte ptr [rax], al ; movsxd rdi, dword ptr [rdi] ; mov eax, 3 ; syscall ; ret
0x000000000012687f : add byte ptr [rax], al ; movsxd rdx, eax ; add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x00000000001266fe : add byte ptr [rax], al ; movsxd rdx, edx ; mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000001701ce : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 0x10] ; movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x000000000017022e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 0xa] ; movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x000000000017021e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 0xb] ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000017020e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 0xc] ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000001701fe : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 0xd] ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x00000000001701ee : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 0xe] ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x00000000001701de : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 0xf] ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000170588 : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 1] ; cmp al, byte ptr [rsi - 1] ; jne 0x170716 ; xor eax, eax ; ret
0x000000000016c58e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 1] ; movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x000000000016c341 : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 1] ; movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000016b6ee : add byte ptr [rax], al ; movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008d44e : add byte ptr [rax], al ; movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000015afee : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000015b6ce : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000015af6e : add byte ptr [rax], al ; movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000015b65e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000001258fd : add byte ptr [rax], al ; nop ; lea eax, dword ptr [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00000000000798ec : add byte ptr [rax], al ; nop ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x00000000000f732d : add byte ptr [rax], al ; nop ; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000000f7e1a : add byte ptr [rax], al ; nop dword ptr [rax] ; mov eax, dword ptr [rdi + 0x10c] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000a7034 : add byte ptr [rax], al ; nop word ptr cs:[rax + rax] ; mov byte ptr [rdi], dl ; ret
0x00000000000a6d34 : add byte ptr [rax], al ; nop word ptr cs:[rax + rax] ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000a5ba4 : add byte ptr [rax], al ; nop word ptr cs:[rax + rax] ; mov rax, rdi ; ret
0x00000000001ad562 : add byte ptr [rax], al ; or al, 0x3c ; add dword ptr [rax], eax ; clc ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001a2b62 : add byte ptr [rax], al ; or al, 0x92 ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; std ; jmp rdi
0x00000000001a3c62 : add byte ptr [rax], al ; or al, 0xa3 ; add byte ptr [rax], al ; pop rax ; outsd dx, dword ptr [rsi] ; out dx, al ; jmp qword ptr [rdi]
0x00000000001a9162 : add byte ptr [rax], al ; or al, 0xf8 ; add byte ptr [rax], al ; sbb byte ptr [rdi - 0xe], ah ; call qword ptr [rax]
0x0000000000034bc7 : add byte ptr [rax], al ; or byte ptr [rax + 0x21], 0xd0 ; movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x00000000000360a5 : add byte ptr [rax], al ; or byte ptr [rdi], cl ; ret 0xc289
0x00000000000a0c0d : add byte ptr [rax], al ; pcmpeqb xmm1, xmmword ptr [rdi + 0x20] ; pmovmskb eax, xmm1 ; test eax, eax ; jne 0xa0ca1 ; xor eax, eax ; ret
0x0000000000090d19 : add byte ptr [rax], al ; pmovmskb eax, xmm1 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000a0b70 : add byte ptr [rax], al ; pmovmskb eax, xmm1 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000001a3c66 : add byte ptr [rax], al ; pop rax ; outsd dx, dword ptr [rsi] ; out dx, al ; jmp qword ptr [rdi]
0x0000000000108d79 : add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00000000001a3c5e : add byte ptr [rax], al ; pop rsp ; add byte ptr [rax], al ; add byte ptr [rbx], cl ; add byte ptr [rax], al ; pop rax ; outsd dx, dword ptr [rsi] ; out dx, al ; jmp qword ptr [rdi]
0x00000000001af87e : add byte ptr [rax], al ; pop rsp ; add byte ptr [rax], al ; add byte ptr [rdi + rbx*2], ch ; add dword ptr [rax], eax ; cmp bh, ah ; cmc ; jmp rsp
0x00000000001a64b2 : add byte ptr [rax], al ; pop rsp ; retf ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001b7ca6 : add byte ptr [rax], al ; push rsp ; add byte ptr [rax], al ; add byte ptr [rbx + 1], dl ; add byte ptr [rax], ah ; push rcx ; clc ; call rdi
0x00000000001b7caa : add byte ptr [rax], al ; push rsp ; jrcxz 0x1b7cb9 ; add byte ptr [rax], ah ; push rcx ; clc ; call rdi
0x00000000001a47aa : add byte ptr [rax], al ; push rsp ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; nop ; shr dh, 1 ; call qword ptr [rax]
0x000000000019e3f2 : add byte ptr [rax], al ; pushfq ; add byte ptr [rax], al ; je 0x19e3ef ; call rdi
0x00000000001b1af2 : add byte ptr [rax], al ; pushfq ; add dword ptr [rcx], 0xf6940800 ; call qword ptr [rdi]
0x00000000001a47f2 : add byte ptr [rax], al ; pushfq ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; pop rax ; shr esi, 1 ; call rcx
0x00000000001a649a : add byte ptr [rax], al ; retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a297e : add byte ptr [rax], al ; ror dl, 1 ; in eax, dx ; call rdi
0x00000000001a5972 : add byte ptr [rax], al ; sbb al, 0xc0 ; add byte ptr [rax], al ; clc ; jp 0x1a597e ; jmp qword ptr [rdi]
0x00000000001a9166 : add byte ptr [rax], al ; sbb byte ptr [rdi - 0xe], ah ; call qword ptr [rax]
0x00000000001a2b66 : add byte ptr [rax], al ; sbb byte ptr [rdi], al ; std ; jmp rdi
0x00000000000363a0 : add byte ptr [rax], al ; shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000036420 : add byte ptr [rax], al ; shl rax, cl ; test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x00000000000f71f6 : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000019e056 : add byte ptr [rax], al ; shr rdx, 1 ; jmp rdi
0x00000000001ae40f : add byte ptr [rax], al ; stosb byte ptr [rdi], al ; cmc ; jmp qword ptr [rcx]
0x00000000001ae50f : add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001a7dc6 : add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; je 0x1a7dbf ; add byte ptr [rax], al ; mov al, 0x10 ; jmp qword ptr [rdi]
0x000000000019f8f6 : add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rdi ; add byte ptr [rax], al ; nop ; sbb ebp, ebp ; call rbx
0x00000000001a6482 : add byte ptr [rax], al ; sub al, 0xcb ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001a6456 : add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001a6426 : add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; jmp qword ptr [rax]
0x000000000019ae36 : add byte ptr [rax], al ; sub rbp, rcx ; call qword ptr [rdi]
0x000000000007450e : add byte ptr [rax], al ; sub rdx, qword ptr [rax + 8] ; mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x0000000000116d38 : add byte ptr [rax], al ; syscall ; mov eax, edx ; xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x116d43 ; pop rdx ; pop r10 ; ret
0x000000000016eeb4 : add byte ptr [rax], al ; test ah, 0x40 ; jne 0x16efaf ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000016ee62 : add byte ptr [rax], al ; test al, 0x40 ; jne 0x16ef3e ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000ac4f3 : add byte ptr [rax], al ; test al, 0xf0 ; jne 0xac66e ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000195846 : add byte ptr [rax], al ; test byte ptr [rdi - 0x12], dl ; lcall ptr [rbx + rdx*8 + 0x57e40000] ; out dx, al ; call rsp
0x00000000000748be : add byte ptr [rax], al ; test byte ptr [rdi], 8 ; je 0x748e1 ; cmp esi, 0xff ; je 0x748e1 ; mov eax, 0xffffffff ; ret
0x000000000019570e : add byte ptr [rax], al ; test byte ptr [rdi], bh ; out dx, al ; jmp rsp
0x000000000016edd5 : add byte ptr [rax], al ; test dh, 0x40 ; jne 0x16ed1f ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000016ee1b : add byte ptr [rax], al ; test dh, 4 ; jne 0x16ed1f ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000001b6fda : add byte ptr [rax], al ; test dh, dl ; add dword ptr [rax], eax ; mov al, 0x2c ; clc ; jmp rdi
0x000000000016ed52 : add byte ptr [rax], al ; test dl, 0x40 ; jne 0x16ed1b ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000016ed80 : add byte ptr [rax], al ; test dl, 4 ; jne 0x16ed1b ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000ac61e : add byte ptr [rax], al ; test rax, 1 ; je 0xac69e ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000122222 : add byte ptr [rax], al ; test rax, rax ; je 0x122238 ; mov rdi, rbx ; call rax
0x000000000012251a : add byte ptr [rax], al ; test rax, rax ; je 0x122530 ; mov rdi, rbx ; call rax
0x000000000012262a : add byte ptr [rax], al ; test rax, rax ; je 0x122648 ; lea rdi, qword ptr [rip + 0x2a3068] ; call rax
0x000000000006efa2 : add byte ptr [rax], al ; test rax, rax ; je 0x6efc6 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006f072 : add byte ptr [rax], al ; test rax, rax ; je 0x6f096 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x00000000000c7c2b : add byte ptr [rax], al ; test rax, rax ; je 0xc7c53 ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000f80ff : add byte ptr [rax], al ; test rax, rax ; je 0xf815e ; xor edx, edx ; xor esi, esi ; mov rdi, rbx ; call rax
0x0000000000098332 : add byte ptr [rax], al ; test rdi, rdi ; je 0x9831c ; mov rsi, qword ptr [r12] ; test rsi, rsi ; jne 0x9835d ; jmp 0x98317
0x00000000000ace0e : add byte ptr [rax], al ; test rdi, rdi ; je 0xace31 ; mov eax, dword ptr [rdi] ; test eax, eax ; sete al ; movzx eax, al ; ret
0x000000000003a92e : add byte ptr [rax], al ; test rdi, rdi ; push rbx ; je 0x3a980 ; xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x3a950 ; pop rbx ; ret
0x00000000001aafb6 : add byte ptr [rax], al ; xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rsi + rdx + 1], ah ; add byte ptr [rax], dl ; jge 0x1aafc4 ; jmp rdi
0x00000000001b40ea : add byte ptr [rax], al ; xchg eax, esp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; push rax ; jl 0x1b40f3 ; call rcx
0x00000000001a74ea : add byte ptr [rax], al ; xchg eax, esp ; fild dword ptr [rax] ; add byte ptr [rax], ah ; pop rdi ; int1 ; call rbx
0x0000000000195e36 : add byte ptr [rax], al ; xchg eax, esp ; out dx, eax ; dec dword ptr [rsi + rdi*8 - 0x6b2c0000] ; out dx, eax ; call rsp
0x0000000000194b36 : add byte ptr [rax], al ; xchg eax, esp ; sub ebp, edx ; jmp qword ptr [rdi + rdi*2 + 0x2be40000]
0x00000000000a2dbe : add byte ptr [rax], al ; xor ah, ah ; mov byte ptr [rdx + 1], ah ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000000a2dfe : add byte ptr [rax], al ; xor ah, ah ; mov byte ptr [rdx + 4], ah ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000001a74e6 : add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; fild dword ptr [rax] ; add byte ptr [rax], ah ; pop rdi ; int1 ; call rbx
0x0000000000195d1e : add byte ptr [rax], al ; xor al, 0x64 ; out dx, eax ; push qword ptr [rdi + rsi*8 + 0x65240000] ; out dx, eax ; jmp rsp
0x00000000001a643e : add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000000a9eee : add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x0000000000034b4e : add byte ptr [rax], al ; xor dl, 0xf ; adc dword ptr [rdi], eax ; and rax, rdx ; movq xmm0, rax ; ret
0x000000000012592b : add byte ptr [rax], al ; xor eax, eax ; mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x000000000012e713 : add byte ptr [rax], al ; xor eax, eax ; mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x0000000000138466 : add byte ptr [rax], al ; xor eax, eax ; mov rsi, qword ptr [rsp + 0x30] ; mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000134dee : add byte ptr [rax], al ; xor eax, eax ; mov rsi, qword ptr [rsp + 0x38] ; mov rdi, r12 ; mov rcx, qword ptr [rsp + 0x30] ; call rcx
0x0000000000144b45 : add byte ptr [rax], al ; xor eax, eax ; rep movsq qword ptr [rdi], qword ptr [rsi] ; mov qword ptr [rbp], rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000078cce : add byte ptr [rax], al ; xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000078cde : add byte ptr [rax], al ; xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x0000000000104af3 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000104b18 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000104b3c : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000104b5c : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000019ffd7 : add byte ptr [rax], bh ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001ae8b7 : add byte ptr [rax], bh ; scasd eax, dword ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae427 : add byte ptr [rax], bl ; stosb byte ptr [rdi], al ; cmc ; jmp qword ptr [rcx]
0x000000000019f707 : add byte ptr [rax], ch ; adc al, 0xed ; jmp qword ptr [rdi]
0x000000000001bbf7 : add byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rdi]
0x00000000001b6e47 : add byte ptr [rax], cl ; sub al, bh ; jmp rdi
0x00000000000a9eef : add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x00000000001ae43f : add byte ptr [rax], dh ; stosb byte ptr [rdi], al ; cmc ; jmp qword ptr [rcx]
0x000000000008fda5 : add byte ptr [rax], dl ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xbd7ef] ; ret
0x000000000008fa15 : add byte ptr [rax], dl ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xbda4f] ; ret
0x000000000008d5a5 : add byte ptr [rax], dl ; add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xbfd7f] ; ret
0x00000000001aafbf : add byte ptr [rax], dl ; jge 0x1aafbb ; jmp rdi
0x00000000001a598f : add byte ptr [rax], dl ; jl 0x1a5991 ; call qword ptr [rdi]
0x000000000019e050 : add byte ptr [rax], r8b ; add ah, bh ; add byte ptr [rax], r8b ; shr rdx, 1 ; jmp rdi
0x00000000001b3f28 : add byte ptr [rax], r8b ; add ah, dl ; movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; shr cl, 0xfb ; call rsi
0x00000000001a2978 : add byte ptr [rax], r8b ; add byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; ror dl, 1 ; in eax, dx ; call rdi
0x00000000001a1458 : add byte ptr [rax], r8b ; add byte ptr [rbx + rdi*2], al ; add byte ptr [rax], al ; adc byte ptr [rbp - 0x13], bh ; call rsi
0x00000000001ad100 : add byte ptr [rax], r8b ; add byte ptr [rdi + rsi + 0x3c980001], ch ; cmc ; call qword ptr [rdi]
0x000000000019ffd0 : add byte ptr [rax], r8b ; add byte ptr [rsi], bh ; add byte ptr [rax], bh ; in eax, dx ; jmp qword ptr [rdi]
0x000000000007715d : add byte ptr [rax], r8b ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x000000000014879d : add byte ptr [rax], r8b ; bsf rdx, rdx ; movzx ecx, byte ptr [rsi + rdx] ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000013d36d : add byte ptr [rax], r8b ; cmp eax, 1 ; jne 0x13d36d ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x00000000000a08cd : add byte ptr [rax], r8b ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000a080d : add byte ptr [rax], r8b ; mov byte ptr [rdi], sil ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a768d : add byte ptr [rax], r8b ; mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000013794d : add byte ptr [rax], r8b ; mov dword ptr [rdi + 4], 1 ; mov eax, 1 ; ret
0x00000000000a08bd : add byte ptr [rax], r8b ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x00000000000a08fd : add byte ptr [rax], r8b ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00000000000a09ad : add byte ptr [rax], r8b ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a09bd : add byte ptr [rax], r8b ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a091d : add byte ptr [rax], r8b ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a08ad : add byte ptr [rax], r8b ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00000000000a9f0d : add byte ptr [rax], r8b ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x0000000000056845 : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; mov qword ptr [rdi], r10 ; ret
0x00000000000f7e2d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x108] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000012ffa5 : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x30] ; test eax, eax ; jne 0x130000 ; mov dword ptr [rsi], 0 ; ret
0x00000000000d8105 : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x00000000000a084d : add byte ptr [rax], r8b ; mov eax, dword ptr [rsp + 0x10] ; mov byte ptr [rdi + 4], cl ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a6d8d : add byte ptr [rax], r8b ; mov ecx, dword ptr [rsi] ; mov dx, word ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a609d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000013e69d : add byte ptr [rax], r8b ; mov qword ptr [rdi + 0x18], rsi ; mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x0000000000130e1d : add byte ptr [rax], r8b ; mov rax, qword ptr [rbx + 8] ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x000000000013dd7d : add byte ptr [rax], r8b ; mov rax, qword ptr [rdi + 8] ; mov qword ptr [rsp + 8], r8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013d465 : add byte ptr [rax], r8b ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000002e02d : add byte ptr [rax], r8b ; mov rax, qword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000a730d : add byte ptr [rax], r8b ; mov rax, rdi ; ret
0x00000000000a76fd : add byte ptr [rax], r8b ; mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a60fd : add byte ptr [rax], r8b ; mov rcx, qword ptr [rsi] ; mov dx, word ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a60dd : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a096d : add byte ptr [rax], r8b ; mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000001266fd : add byte ptr [rax], r8b ; movsxd rdx, edx ; mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x000000000017022d : add byte ptr [rax], r8b ; movzx eax, byte ptr [rdi - 0xa] ; movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x000000000017021d : add byte ptr [rax], r8b ; movzx eax, byte ptr [rdi - 0xb] ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000017020d : add byte ptr [rax], r8b ; movzx eax, byte ptr [rdi - 0xc] ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000001701fd : add byte ptr [rax], r8b ; movzx eax, byte ptr [rdi - 0xd] ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x00000000001701ed : add byte ptr [rax], r8b ; movzx eax, byte ptr [rdi - 0xe] ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x00000000001701dd : add byte ptr [rax], r8b ; movzx eax, byte ptr [rdi - 0xf] ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000000a7033 : add byte ptr [rax], r8b ; nop word ptr cs:[rax + rax] ; mov byte ptr [rdi], dl ; ret
0x00000000000a6d33 : add byte ptr [rax], r8b ; nop word ptr cs:[rax + rax] ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000a5ba3 : add byte ptr [rax], r8b ; nop word ptr cs:[rax + rax] ; mov rax, rdi ; ret
0x000000000019e055 : add byte ptr [rax], r8b ; shr rdx, 1 ; jmp rdi
0x0000000000126a63 : add byte ptr [rbp + 0x12], dh ; movzx eax, byte ptr [rdi + 1] ; shl eax, 3 ; cdqe ; shr rax, 4 ; ret
0x0000000000078c9e : add byte ptr [rbp + 0x14], dh ; xor eax, eax ; cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x000000000003aa08 : add byte ptr [rbp + 0x15], dh ; test rdi, rdi ; je 0x3aa81 ; mov dword ptr [rdi], 0 ; xor eax, eax ; pop rbx ; ret
0x00000000000fda1f : add byte ptr [rbp + 0x347789f6], al ; jne 0xfda16 ; or dword ptr [rdi], 0x80000000 ; xor eax, eax ; ret
0x00000000000fda1e : add byte ptr [rbp + 0x347789f6], al ; jne 0xfda17 ; or dword ptr [rdi], 0x80000000 ; xor eax, eax ; ret
0x00000000000ed269 : add byte ptr [rbp + 0x798e0fc0], al ; or al, byte ptr [rax] ; add byte ptr [rcx - 0x75], al ; add al, 0x85 ; ror byte ptr [rdi], 0x94 ; ret 0xf883
0x00000000000a069b : add byte ptr [rbp + 0xd], dh ; nop ; add rax, 1 ; cmp byte ptr [rdi + rax], dl ; je 0xa06af ; ret
0x0000000000076d87 : add byte ptr [rbp + 0xe], dh ; mov edx, dword ptr [rdi + 0xc0] ; mov eax, edx ; ret
0x0000000000048e3f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000019f703 : add byte ptr [rbp + rbx*2 + 0x14280000], ch ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001560fa : add byte ptr [rbp + rcx*4 + 0x1d], cl ; fadd dword ptr cs:[rbx] ; add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x0000000000076a91 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x00000000000769ae : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x0000000000076b7e : add byte ptr [rbp + rcx*4 + 0x4d], cl ; enter -0x76b4, -0x17 ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x000000000019443f : add byte ptr [rbp + rdi*4 - 0x18], dh ; call rsp
0x00000000001166fc : add byte ptr [rbp - 0x10], dh ; mov edx, dword ptr [rdi + 0x28] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x000000000007fe5c : add byte ptr [rbp - 0x17], dh ; add rsp, 8 ; mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b0817 : add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x84 ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000001a7ecb : add byte ptr [rbp], dh ; add byte ptr [rax + 0x11], ah ; jmp qword ptr [rdi]
0x00000000000459a6 : add byte ptr [rbx + 0x28ba28f8], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8539
0x000000000010b863 : add byte ptr [rbx + 0x29f08930], cl ; fmul dword ptr [rdi] ; test dword ptr [rax], esp ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000a9f3f : add byte ptr [rbx + 0x30178916], cl ; in eax, dx ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a76df : add byte ptr [rbx + 0x3568b0e], cl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a850f : add byte ptr [rbx + 0x3568b0e], cl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a60cf : add byte ptr [rbx + 0x3568b0e], cl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000000a9f7f : add byte ptr [rbx + 0x3568b0e], cl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x0000000000078db8 : add byte ptr [rbx + 0x440f02fe], 0xd1 ; mov dword ptr [rdi], edx ; ret
0x00000000000a84df : add byte ptr [rbx + 0x4568a0e], cl ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a6d7f : add byte ptr [rbx + 0x4568a0e], cl ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a9f4f : add byte ptr [rbx + 0x4568a0e], cl ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a76af : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a60af : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x00000000000a84cf : add byte ptr [rbx + 0x48178916], cl ; lea eax, dword ptr [rdi + 4] ; ret
0x000000000011c66f : add byte ptr [rbx + 0x488d01f8], al ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8b48
0x00000000000a059c : add byte ptr [rbx + 0x48], bl ; mov dword ptr [rdi], edx ; ret
0x000000000002c34f : add byte ptr [rbx + 0x48], dl ; mov eax, dword ptr [rdi + 0x20] ; mov rbx, rdi ; test rax, rax ; je 0x2c36d ; call rax
0x000000000002c34e : add byte ptr [rbx + 0x48], dl ; mov eax, dword ptr [rdi + 0x20] ; mov rbx, rdi ; test rax, rax ; je 0x2c36e ; call rax
0x0000000000155e9f : add byte ptr [rbx + 0x4e8bf956], cl ; cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155c9f : add byte ptr [rbx + 0x4e8bfa56], cl ; cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155a9f : add byte ptr [rbx + 0x4e8bfb56], cl ; cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000017249f : add byte ptr [rbx + 0xb7f043f], al ; mov rdi, qword ptr [rdi + 0x10] ; test rdi, rdi ; jne 0x1724b0 ; ret
0x000000000017249e : add byte ptr [rbx + 0xb7f043f], al ; mov rdi, qword ptr [rdi + 0x10] ; test rdi, rdi ; jne 0x1724b1 ; ret
0x000000000015b50f : add byte ptr [rbx + 0xe8b0156], cl ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b49f : add byte ptr [rbx + 0xe8b0256], cl ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b42f : add byte ptr [rbx + 0xe8b0356], cl ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000001b7cab : add byte ptr [rbx + 1], dl ; add byte ptr [rax], ah ; push rcx ; clc ; call rdi
0x00000000001ae46b : add byte ptr [rbx + rcx*2], dl ; add dword ptr [rax], eax ; push rax ; stosb byte ptr [rdi], al ; cmc ; call qword ptr [rax]
0x00000000001a6483 : add byte ptr [rbx + rcx*8], ch ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001a646b : add byte ptr [rbx + rcx*8], dl ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001ad503 : add byte ptr [rbx + rdi + 0x57680001], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000194ee7 : add byte ptr [rbx + rdi - 0x15], ah ; call rsp
0x000000000019800f : add byte ptr [rbx + rdi - 0x36330008], al ; add dword ptr [rax], eax ; cmp al, 0xf8 ; jmp rsp
0x00000000001a145b : add byte ptr [rbx + rdi*2], al ; add byte ptr [rax], al ; adc byte ptr [rbp - 0x13], bh ; call rsi
0x00000000001a547b : add byte ptr [rbx + rdi*4], ah ; add byte ptr [rax], al ; xor bh, bl ; cld ; call qword ptr [rax]
0x000000000019894f : add byte ptr [rbx + rdi*4], al ; stc ; call rsp
0x0000000000198bb7 : add byte ptr [rbx + rdx], dl ; cli ; inc dword ptr [rdi + rbx + 0x14b40002] ; cli ; call rsp
0x000000000019509f : add byte ptr [rbx + rsi*8 - 0x61330015], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x1950b7
0x000000000013d36f : add byte ptr [rbx - 0x138afe08], al ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x0000000000071d87 : add byte ptr [rbx - 0x1876b3ed], cl ; mov rax, rdi ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d81d5 : add byte ptr [rbx - 0x1e7efe1e], al ; add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; ret 0xf35b
0x00000000001166df : add byte ptr [rbx - 0x3fcef7b1], cl ; test ecx, ecx ; jne 0x116700 ; cmp qword ptr [rdi], 0 ; je 0x116709 ; ret
0x00000000000aaab2 : add byte ptr [rbx - 0x50f0fe3e], al ; ror dword ptr [rdi], -0x51 ; ret 0x78e9
0x00000000000ec23a : add byte ptr [rbx - 0x6af0efb2], cl ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; cmp dword ptr [rdi + 0x10], ecx ; cmovb eax, edx ; ret
0x00000000000d69cf : add byte ptr [rbx - 0x6c8bfb1e], al ; mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x00000000000b42d9 : add byte ptr [rbx - 0x7ae7dba4], cl ; fisttp dword ptr [rdi] ; test byte ptr [rdi + rcx], dl ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000000ddc80 : add byte ptr [rbx - 0x7af7db8c], cl ; div byte ptr [rdi - 0xa] ; ret
0x00000000001932a4 : add byte ptr [rbx - 5], ah ; push rax ; movsxd rdi, ebx ; jmp qword ptr [rax]
0x000000000002cb16 : add byte ptr [rbx], bh ; jp 0x2cb5d ; jae 0x2cb3a ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000001a3c63 : add byte ptr [rbx], cl ; add byte ptr [rax], al ; pop rax ; outsd dx, dword ptr [rsi] ; out dx, al ; jmp qword ptr [rdi]
0x000000000007b7ca : add byte ptr [rcx + 0x240c0f], al ; add byte ptr [rax - 0x77], cl ; scasd eax, dword ptr [rdi] ; nop ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000034f2f : add byte ptr [rcx + 0x25d0], cl ; add byte ptr [rax - 0x3791f09a], al ; movss dword ptr [rdi], xmm1 ; ret
0x00000000000f2246 : add byte ptr [rcx + 0x388364eb], cl ; add al, 0xf ; test byte ptr [rip - 0x7a000001], ah ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x000000000004a92f : add byte ptr [rcx + 0x39], al ; adc byte ptr [rbx + rcx + 0x49], dh ; sub eax, 4 ; cmp rdi, r8 ; jbe 0x4a940 ; ret
0x00000000000a095f : add byte ptr [rcx + 0x4789440f], cl ; add al, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x00000000000a09af : add byte ptr [rcx + 0x5789660f], cl ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x00000000000a09bf : add byte ptr [rcx + 0x5789660f], cl ; add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a091f : add byte ptr [rcx + 0x5789660f], cl ; add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000bd743 : add byte ptr [rcx + 0x76bc2], al ; add byte ptr [rdi], cl ; ret 0xf8c1
0x0000000000136ee2 : add byte ptr [rcx + 0xfffb], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret
0x00000000001b9b13 : add byte ptr [rcx + rax - 0x39b7fffe], bh ; clc ; call qword ptr [rdi]
0x0000000000037657 : add byte ptr [rcx + rax - 0xd], cl ; mov rdx, r13 ; mov rsi, rbx ; mov rdi, r12 ; call r15
0x00000000000a4ffa : add byte ptr [rcx + rcx*4 + 0x4a], al ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000108d72 : add byte ptr [rcx + rcx*4 + 4], ah ; and eax, 0x2d0 ; pop rax ; pop rdi ; call rax
0x00000000000c912b : add byte ptr [rcx + rcx*4 - 0x13], cl ; mov rdi, rbx ; call r12
0x0000000000037615 : add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov rdi, qword ptr [rsp + 0x18] ; call r15
0x00000000000715cc : add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov rdi, rsp ; call 0x4d89c
0x0000000000089f24 : add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x000000000003aeff : add byte ptr [rcx + rcx*4 - 0x40], cl ; mov qword ptr [rdi + 8], rdx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000075110 : add byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, r12 ; call 0x913b9
0x000000000008a444 : add byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, r8 ; call rax
0x000000000011f6bd : add byte ptr [rcx + rcx*4 - 6], cl ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000086698 : add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x86667 ; ret
0x00000000001a12c3 : add byte ptr [rcx + rdi*2], ch ; add al, cl ; jns 0x1a12c0 ; jmp qword ptr [rdi]
0x0000000000194437 : add byte ptr [rcx + rdi*4 - 0x18], dl ; call rsp
0x00000000001b92e3 : add byte ptr [rcx + rdi*8 - 0x5a07ffff], cl ; clc ; call qword ptr [rbx]
0x000000000019932f : add byte ptr [rcx + rdi*8 - 6], dh ; call rsp
0x00000000001a92b3 : add byte ptr [rcx + rdi*8], bl ; add byte ptr [rax - 0x6e], bh ; call rbx
0x00000000001986a7 : add byte ptr [rcx + rdi], al ; stc ; inc dword ptr [rbp + rsi*8 + 0x45740001] ; stc ; call rsp
0x000000000010be0e : add byte ptr [rcx - 0x74b79b01], cl ; add byte ptr [rdi], cl ; mov bh, 4 ; js 0x10bdae ; loopne 0x10be35 ; movzx eax, ax ; ret
0x000000000010bf3e : add byte ptr [rcx - 0x74b79b01], cl ; add byte ptr [rdi], cl ; mov bh, 4 ; js 0x10bedb ; loopne 0x10bf5b ; ret
0x000000000010bfce : add byte ptr [rcx - 0x74b79b01], cl ; add byte ptr [rdi], cl ; mov bh, 4 ; js 0x10bf6e ; loopne 0x10bfef ; movzx eax, ax ; ret
0x000000000010c2ce : add byte ptr [rcx - 0x74b79b01], cl ; add byte ptr [rdi], cl ; mov bh, 4 ; js 0x10c26e ; loopne 0x10c2f1 ; movzx eax, ax ; ret
0x00000000000ed271 : add byte ptr [rcx - 0x75], al ; add al, 0x85 ; ror byte ptr [rdi], 0x94 ; ret 0xf883
0x000000000013a3b5 : add byte ptr [rcx - 0x77], cl ; fadd dword ptr [rcx + rcx*4 - 0x1f] ; mov rdi, rbp ; call 0x5665c
0x000000000013a3fd : add byte ptr [rcx - 0x77], cl ; fmul dword ptr [rcx + rcx*4 - 0x1f] ; mov rdi, rbp ; xor eax, eax ; call 0x5665e
0x000000000011b70b : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x0000000000125f1c : add byte ptr [rcx - 0x78f033a3], cl ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000011c14f : add byte ptr [rcx - 0x7d], al ; clc ; add dword ptr [rcx - 0x73], eax ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8b48
0x00000000000f3a3b : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x0000000000145c1a : add byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; mov cl, 0xe9 ; add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000013ea2f : add byte ptr [rcx], al ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x0000000000035222 : add byte ptr [rcx], cl ; ror byte ptr [rcx - 0x24efdbbc], 1 ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x0000000000034d7f : add byte ptr [rcx], dh ; leave ; addsd xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x00000000000858d6 : add byte ptr [rcx], dh ; mul byte ptr [rdi + rax*8] ; or al, 0 ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x00000000000b4c67 : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; fmul dword ptr [rdi] ; xchg eax, edx ; ret 0x2948
0x000000000012e714 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x75], 0x74 ; and al, 0x10 ; mov rdi, rbp ; call r14
0x0000000000138467 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x75], 0x74 ; and al, 0x30 ; mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000134def : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x75], 0x74 ; and al, 0x38 ; mov rdi, r12 ; mov rcx, qword ptr [rsp + 0x30] ; call rcx
0x00000000001039f8 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0x3e ; add byte ptr [rdi + rax - 0xd], dh ; ret
0x0000000000144b46 : add byte ptr [rcx], dh ; sal bl, 0x48 ; movsd dword ptr [rdi], dword ptr [rsi] ; mov qword ptr [rbp], rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000c8706 : add byte ptr [rcx], dh ; shl byte ptr [rdi + rax*8], cl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rdx ; ret
0x000000000005371c : add byte ptr [rdi + 0x100], bh ; mov qword ptr [rsp + 8], rdx ; call 0x1f98d
0x00000000001560a0 : add byte ptr [rdi + 0x1d], dh ; movsxd r9, dword ptr [r11 + rdx*4] ; add rsi, rdx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000001536bd : add byte ptr [rdi + 0x20], dh ; movsxd r9, dword ptr [r11 + rdx*4] ; add rsi, rdx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000001ad673 : add byte ptr [rdi + 0x59280001], bl ; cmc ; call rdx
0x000000000002c17d : add byte ptr [rdi + 0x63], cl ; add al, 0x8b ; add r8, r11 ; jmp r8
0x000000000008c0a0 : add byte ptr [rdi + 0x63], cl ; or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000147aac : add byte ptr [rdi + 0x63], cl ; or al, 0x8a ; pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000014d7ac : add byte ptr [rdi + 0x63], cl ; or al, 0x8a ; vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000158caa : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000015372a : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x0000000000125c43 : add byte ptr [rdi + 0x72], bh ; mov byte ptr [rbp + 0x11], bl ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001a40eb : add byte ptr [rdi + 0x7ca00000], dl ; out dx, al ; jmp qword ptr [rdx]
0x000000000001ff0b : add byte ptr [rdi + 0xbf], bh ; mov r12, rax ; call 0xaac2f
0x00000000000f76b5 : add byte ptr [rdi + 1], bh ; call rax
0x0000000000102305 : add byte ptr [rdi + 2], bh ; cmp rax, rdx ; mov edx, ebx ; cmovne rbp, rax ; call 0xfe621
0x00000000000abd24 : add byte ptr [rdi + 2], bh ; neg eax ; ret
0x00000000001ba5db : add byte ptr [rdi + 4], bl ; add byte ptr [rax], al ; mov dh, 2 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000011aec6 : add byte ptr [rdi + 8], dh ; mov rax, rdi ; sar rax, 6 ; ret
0x0000000000170d24 : add byte ptr [rdi + 9], bh ; neg eax ; ret
0x000000000008de1a : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0x1516c] ; ret
0x000000000008bbba : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0x157ac] ; ret
0x000000000008fda7 : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xbd7ef] ; ret
0x000000000008fa17 : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xbda4f] ; ret
0x000000000008d5a7 : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xbfd7f] ; ret
0x000000000008f6fa : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd495c] ; ret
0x0000000000091a9a : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd513c] ; ret
0x000000000008d49a : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd540c] ; ret
0x0000000000091bba : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xd682c] ; ret
0x000000000008bda7 : add byte ptr [rdi + rax + 0x48], dh ; lea eax, dword ptr [rip + 0xe2edf] ; ret
0x000000000019f3c3 : add byte ptr [rdi + rax + 0x5180000], ch ; in eax, dx ; call qword ptr [rcx]
0x00000000001039fe : add byte ptr [rdi + rax - 0xd], dh ; ret
0x00000000000ec1f7 : add byte ptr [rdi + rax*8 + 4], ah ; and eax, 0x40 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000cddae : add byte ptr [rdi + rax*8], ah ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000107746 : add byte ptr [rdi + rax*8], ah ; add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000bb97d : add byte ptr [rdi + rax*8], ah ; add byte ptr [r8], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x00000000000ff3e7 : add byte ptr [rdi + rax*8], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rsp - 0x50] ; ret
0x0000000000036456 : add byte ptr [rdi + rax*8], ah ; add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000034e1e : add byte ptr [rdi + rax*8], ah ; and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000000000035470 : add byte ptr [rdi + rax*8], ah ; and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000110586 : add byte ptr [rdi + rax*8], ah ; or al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000fe4a6 : add byte ptr [rdi + rax*8], ah ; or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000008bb24 : add byte ptr [rdi + rax*8], ah ; or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000085766 : add byte ptr [rdi + rax*8], ah ; or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000341f6 : add byte ptr [rdi + rax*8], ah ; or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000753c3 : add byte ptr [rdi + rax*8], ah ; or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000020da6 : add byte ptr [rdi + rax*8], ah ; or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edi ; ret
0x00000000000f85ee : add byte ptr [rdi + rax*8], ah ; pop rdi ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000795d6 : add byte ptr [rdi + rax*8], ah ; sbb al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003418e : add byte ptr [rdi + rax*8], ah ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x00000000001ac8f3 : add byte ptr [rdi + rbp + 0x20b80001], bl ; cmc ; jmp qword ptr [rdx]
0x00000000000ceae0 : add byte ptr [rdi + rbp + 0x48], dh ; cmp eax, 0x414a53 ; je 0xceb22 ; mov eax, 1 ; ret
0x00000000001961e7 : add byte ptr [rdi + rbp - 0xf], al ; call rsp
0x00000000001a48fb : add byte ptr [rdi + rbp*4 - 0x72400000], ah ; cli ; call qword ptr [rax]
0x00000000001983d7 : add byte ptr [rdi + rbp*4], al ; clc ; jmp rsp
0x00000000001a48cb : add byte ptr [rdi + rbp*4], dh ; add al, ah ; cli ; call qword ptr [rax]
0x00000000001a8863 : add byte ptr [rdi + rbp*8], cl ; add byte ptr [rax], al ; sbb byte ptr [rcx], bh ; call rsi
0x00000000000d1600 : add byte ptr [rdi + rbx + 0x31], dh ; fisttp dword ptr [rax - 0x77] ; fmul dword ptr [rcx + 3] ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x000000000019f8fb : add byte ptr [rdi + rbx*2 + 0x1b900000], ah ; in eax, dx ; call rbx
0x00000000001af883 : add byte ptr [rdi + rbx*2], ch ; add dword ptr [rax], eax ; cmp bh, ah ; cmc ; jmp rsp
0x000000000019947f : add byte ptr [rdi + rbx], ah ; sti ; ljmp ptr [rax + rbx*2 + 0x1fd40002] ; sti ; call rsp
0x00000000001ab86b : add byte ptr [rdi + rbx], dl ; add dword ptr [rax], eax ; ror ch, 0xf4 ; jmp qword ptr [rcx]
0x000000000009d8e4 : add byte ptr [rdi + rcx - 0x4a], al ; pop rsi ; add eax, 0x43b60f44 ; add dword ptr [rbp + 0x38], eax ; ret
0x00000000001ae8b3 : add byte ptr [rdi + rcx*2 + 1], bl ; add byte ptr [rax], bh ; scasd eax, dword ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae8fb : add byte ptr [rdi + rcx*2 - 0x507fffff], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001ae8e3 : add byte ptr [rdi + rcx*2 - 0x5097ffff], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000198d3f : add byte ptr [rdi + rcx*2 - 6], dl ; jmp rsp
0x00000000001a28f3 : add byte ptr [rdi + rcx*4 - 0x36c80000], bl ; in eax, dx ; jmp qword ptr [rax]
0x00000000001968cf : add byte ptr [rdi + rcx*4 - 0xd], al ; call rsp
0x0000000000198f97 : add byte ptr [rdi + rcx*4 - 6], dh ; call rsp
0x0000000000198f8f : add byte ptr [rdi + rcx*4], al ; cli ; lcall ptr [rdx + rdi - 0x708bfffe] ; cli ; call rsp
0x0000000000198487 : add byte ptr [rdi + rcx*8], dh ; clc ; jmp rsp
0x000000000002dca4 : add byte ptr [rdi + rcx], al ; mov bh, 0xc0 ; ret
0x00000000001ad8fb : add byte ptr [rdi + rdi + 0x61f00001], ah ; cmc ; jmp qword ptr [rbx]
0x0000000000195207 : add byte ptr [rdi + rdi*2 - 0x13], dl ; call rsp
0x000000000019514f : add byte ptr [rdi + rdi*2 - 0x14], dh ; lcall ptr [rbx + 0x7fd40000] ; in al, dx ; call rsp
0x000000000019970f : add byte ptr [rdi + rdi*4 - 4], dh ; jmp rsp
0x00000000001a5883 : add byte ptr [rdi + rdi*4], ch ; add byte ptr [rax], al ; mov byte ptr [rax + rsi*8], al ; jmp qword ptr [rbx]
0x0000000000195547 : add byte ptr [rdi + rdi*8 - 0x13], ah ; push qword ptr [rdi + rdi*4 - 0x1c0000] ; in eax, dx ; jmp rsp
0x00000000001993f7 : add byte ptr [rdi + rdx + 0x55bcfffb], ah ; add al, byte ptr [rax] ; mov ah, 0x17 ; sti ; call rsp
0x0000000000195847 : add byte ptr [rdi + rdx*2 - 0x2c630012], al ; add byte ptr [rax], al ; in al, 0x57 ; out dx, al ; call rsp
0x00000000001af083 : add byte ptr [rdi + rdx*2], ch ; add dword ptr [rax], eax ; cmp bl, al ; cmc ; jmp rax
0x00000000001af06b : add byte ptr [rdi + rdx*2], dl ; add dword ptr [rax], eax ; and bl, al ; cmc ; jmp qword ptr [rdi]
0x0000000000198187 : add byte ptr [rdi + rdx*2], dl ; clc ; inc dword ptr [rcx + rdx*8 + 0x58040001] ; clc ; call rsp
0x00000000001a7103 : add byte ptr [rdi + rdx*8 + 0x4a380000], ch ; int1 ; jmp rcx
0x0000000000199207 : add byte ptr [rdi + rdx*8 - 6], dh ; jmp rsp
0x00000000001ad103 : add byte ptr [rdi + rsi + 0x3c980001], ch ; cmc ; call qword ptr [rdi]
0x0000000000195927 : add byte ptr [rdi + rsi*2 - 0x12], ah ; inc dword ptr [rcx + rbx*8 + 0x7ed40000] ; out dx, al ; call rsp
0x0000000000198edf : add byte ptr [rdi + rsi*2], ah ; cli ; call rsp
0x00000000001a50c3 : add byte ptr [rdi + rsi*4], ch ; add byte ptr [rax + 0x3d], cl ; out dx, eax ; jmp rsi
0x00000000001a9093 : add byte ptr [rdi + rsi*8], bh ; add byte ptr [rax], al ; pop rax ; pop rbp ; jmp rcx
0x000000000017b67b : add byte ptr [rdi - 0x45fffff1], dh ; sldt word ptr [rax] ; mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x00000000000ceae8 : add byte ptr [rdi - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000019d68b : add byte ptr [rdi - 0x6c000000], dh ; cli ; jmp qword ptr [rcx]
0x0000000000196217 : add byte ptr [rdi - 0xf], al ; jmp rsp
0x0000000000193e18 : add byte ptr [rdi - 4], ch ; inc dword ptr [rax + 0xfffc6e] ; outsb dx, byte ptr [rsi] ; cld ; push qword ptr [rax + 0x6d] ; cld ; jmp rax
0x00000000001937bc : add byte ptr [rdi], 0xfc ; call rax
0x000000000006ba6c : add byte ptr [rdi], ah ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000350c0 : add byte ptr [rdi], bh ; movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x00000000001bb313 : add byte ptr [rdi], bh ; or byte ptr [rax], al ; add byte ptr [rdx + 4], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000f85f1 : add byte ptr [rdi], bl ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000913c6 : add byte ptr [rdi], cl ; adc byte ptr [rsi], al ; movups xmm1, xmmword ptr [rsi + rdx - 0x10] ; movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000188ac3 : add byte ptr [rdi], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; loope 0x188ad9 ; add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000124332 : add byte ptr [rdi], cl ; add eax, 0x1024448b ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003577c : add byte ptr [rdi], cl ; add eax, 0x48c08944 ; add esp, 0x90 ; ret
0x00000000000f7f3c : add byte ptr [rdi], cl ; add eax, 0x66c3d8f7 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000116d39 : add byte ptr [rdi], cl ; add eax, 0x787d089 ; test eax, eax ; jne 0x116d42 ; pop rdx ; pop r10 ; ret
0x000000000002bf18 : add byte ptr [rdi], cl ; add eax, 0xd8658d48 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000013ec0b : add byte ptr [rdi], cl ; and al, 0x38 ; add rsp, 0x90 ; pop rbx ; mov eax, eax ; ret
0x000000000015a626 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000000bf071 : add byte ptr [rdi], cl ; cmp dword ptr [rsi + 0x48000000], -0x77 ; fmul dword ptr [rax - 0x7d] ; ret
0x000000000013ed20 : add byte ptr [rdi], cl ; enter -0x3f77, 0x48 ; mov dword ptr [rbx], eax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x0000000000134c55 : add byte ptr [rdi], cl ; enter -0x3f77, 0x48 ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000013ece0 : add byte ptr [rdi], cl ; enter 0x389, 0x48 ; add esp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x0000000000138299 : add byte ptr [rdi], cl ; enter 0x4289, 0x10 ; mov eax, 1 ; ret
0x0000000000138179 : add byte ptr [rdi], cl ; enter 0x4289, 0xc ; mov eax, 1 ; ret
0x00000000001860bc : add byte ptr [rdi], cl ; jmp qword ptr [rax]
0x00000000000aac37 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000015b65f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000005413d : add byte ptr [rdi], cl ; mov bh, 0x84 ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000010a461 : add byte ptr [rdi], cl ; mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000010be14 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x10bda8 ; loopne 0x10be2f ; movzx eax, ax ; ret
0x000000000010bf44 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x10bed5 ; loopne 0x10bf55 ; ret
0x000000000010bfd4 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x10bf68 ; loopne 0x10bfe9 ; movzx eax, ax ; ret
0x000000000010c2d4 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x10c268 ; loopne 0x10c2eb ; movzx eax, ax ; ret
0x000000000002dc7d : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x2dc11 ; loopne 0x2dc98 ; movzx eax, ax ; ret
0x000000000002dcbd : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x2dc51 ; loopne 0x2dcd2 ; movzx eax, ax ; ret
0x000000000002dd5d : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x2dcf1 ; loopne 0x2dd74 ; movzx eax, ax ; ret
0x000000000002de3d : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x2ddce ; loopne 0x2de4e ; ret
0x00000000001166c1 : add byte ptr [rdi], cl ; mov bh, 4 ; push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x0000000000140e73 : add byte ptr [rdi], cl ; mov cs, word ptr [rbp - 0x14000005] ; ret 0xffb9
0x000000000015b6cf : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000000d087a : add byte ptr [rdi], cl ; mov dh, 0x41 ; add dword ptr [rax - 0x7d], ecx ; rol dword ptr [rcx], -0x7c ; sal byte ptr [rbp - 0x2b], 0xf6 ; ret 0xf05
0x00000000000cfb07 : add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x000000000012b527 : add byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000264cb : add byte ptr [rdi], cl ; mov dh, 0x46 ; add dword ptr [rcx - 0x77], eax ; ret
0x000000000017021f : add byte ptr [rdi], cl ; mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000017020f : add byte ptr [rdi], cl ; mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000001701df : add byte ptr [rdi], cl ; mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000001701ff : add byte ptr [rdi], cl ; mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x00000000001701ef : add byte ptr [rdi], cl ; mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000003ce83 : add byte ptr [rdi], cl ; mov dh, 0x48 ; add al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000003ce43 : add byte ptr [rdi], cl ; mov dh, 0x48 ; add cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003ce23 : add byte ptr [rdi], cl ; mov dh, 0x48 ; add dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003cea3 : add byte ptr [rdi], cl ; mov dh, 0x48 ; add eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003ce63 : add byte ptr [rdi], cl ; mov dh, 0x48 ; add ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003cf03 : add byte ptr [rdi], cl ; mov dh, 0x48 ; or byte ptr [rbp - 0x57f2faf], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003cf43 : add byte ptr [rdi], cl ; mov dh, 0x48 ; or cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003cf23 : add byte ptr [rdi], cl ; mov dh, 0x48 ; or dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000d27df : add byte ptr [rdi], cl ; mov dh, 0x4b ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000006dc5f : add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x00000000000400c8 : add byte ptr [rdi], cl ; mov dh, 0x70 ; add al, 0x8d ; push rsi ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000040088 : add byte ptr [rdi], cl ; mov dh, 0x70 ; add cl, byte ptr [rbp - 0x57f2faa] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040068 : add byte ptr [rdi], cl ; mov dh, 0x70 ; add dword ptr [rbp - 0x57f2faa], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000400e8 : add byte ptr [rdi], cl ; mov dh, 0x70 ; add eax, 0x80d0568d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000400a8 : add byte ptr [rdi], cl ; mov dh, 0x70 ; add ecx, dword ptr [rbp - 0x57f2faa] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040148 : add byte ptr [rdi], cl ; mov dh, 0x70 ; or byte ptr [rbp - 0x57f2faa], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040188 : add byte ptr [rdi], cl ; mov dh, 0x70 ; or cl, byte ptr [rbp - 0x57f2faa] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040168 : add byte ptr [rdi], cl ; mov dh, 0x70 ; or dword ptr [rbp - 0x57f2faa], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000005c804 : add byte ptr [rdi], cl ; mov dh, 0xc0 ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x00000000000c1669 : add byte ptr [rdi], cl ; mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000006d283 : add byte ptr [rdi], cl ; mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000ace24 : add byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000aacef : add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x00000000000aac9f : add byte ptr [rdi], cl ; mov dh, 0xc2 ; and dh, 0xf0 ; mov edx, 0 ; cmove rax, rdx ; pop rbx ; ret
0x00000000000336b1 : add byte ptr [rdi], cl ; mov dh, 0xd2 ; movsxd rdx, dword ptr [r10 + rdx*4] ; add rdx, r10 ; jmp rdx
0x000000000005cc72 : add byte ptr [rdi], cl ; mov dh, 0xdb ; movsxd rax, dword ptr [rcx + rbx*4] ; add rax, rcx ; jmp rax
0x000000000008d44f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00000000000c3963 : add byte ptr [rdi], cl ; mov dh, 0xfa ; movsxd rax, dword ptr [r8 + rdi*4] ; add rax, r8 ; jmp rax
0x000000000007c687 : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000016b6ef : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000090f6f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000000a0c3f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000a0c4f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x00000000000a0c2f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000a0caf : add byte ptr [rdi], cl ; mov ebp, 0xea8348c0 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x00000000000a0c5f : add byte ptr [rdi], cl ; mov ebp, 0xea8348c0 ; add rdx, rax ; jl 0xa0ce0 ; add rax, rdi ; ret
0x00000000000a0c8f : add byte ptr [rdi], cl ; mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x00000000000a05ef : add byte ptr [rdi], cl ; mov esi, 0x74c08407 ; sub edi, dword ptr [rcx] ; ret 0x2774
0x00000000000a068f : add byte ptr [rdi], cl ; mov esi, 0x89c63907 ; ret 0xb8
0x0000000000097f6f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x0000000000090dff : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000090def : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000090e0f : add byte ptr [rdi], cl ; mov esp, 0xc22948c0 ; jbe 0x90e5c ; add rax, rdi ; ret
0x0000000000090e1f : add byte ptr [rdi], cl ; mov esp, 0xc22948c0 ; jbe 0x90e5e ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000090e1e : add byte ptr [rdi], cl ; mov esp, 0xc22948c0 ; jbe 0x90e5f ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000090ddf : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000000b5987 : add byte ptr [rdi], cl ; mov gs, word ptr [rbx - 0x7cfffff8] ; ret
0x0000000000034ff3 : add byte ptr [rdi], cl ; push rsi ; add eax, 0x15d6b5 ; mulss xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x0000000000034fce : add byte ptr [rdi], cl ; push rsi ; add eax, 0x15d6fa ; mulss xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x0000000000034ec7 : add byte ptr [rdi], cl ; push rsp ; ret
0x00000000000ac241 : add byte ptr [rdi], cl ; pushfq ; sal bh, 0xd8 ; cmp ecx, r8d ; cmovg eax, edx ; ret
0x00000000000c5a96 : add byte ptr [rdi], cl ; ret
0x00000000000c3c43 : add byte ptr [rdi], cl ; ret 0x144
0x000000000013fd21 : add byte ptr [rdi], cl ; ret 0x3145
0x00000000000bca97 : add byte ptr [rdi], cl ; ret 0x3bba
0x000000000002a610 : add byte ptr [rdi], cl ; ret 0x4389
0x0000000000084f75 : add byte ptr [rdi], cl ; ret 0x489
0x00000000000eef11 : add byte ptr [rdi], cl ; ret 0x66e9
0x00000000000e2c06 : add byte ptr [rdi], cl ; ret 0x833b
0x00000000001175fb : add byte ptr [rdi], cl ; ret 0x8348
0x00000000000459ae : add byte ptr [rdi], cl ; ret 0x8539
0x0000000000136492 : add byte ptr [rdi], cl ; ret 0x8d48
0x00000000000303e3 : add byte ptr [rdi], cl ; ret 0x8d49
0x00000000000fceca : add byte ptr [rdi], cl ; ret 0x90c3
0x00000000000b671e : add byte ptr [rdi], cl ; ret 0xc3f3
0x00000000000ed123 : add byte ptr [rdi], cl ; ret 0xd5e9
0x00000000000d81de : add byte ptr [rdi], cl ; ret 0xf35b
0x000000000012620b : add byte ptr [rdi], cl ; ret 0xf3c3
0x00000000000bd749 : add byte ptr [rdi], cl ; ret 0xf8c1
0x00000000001261b0 : add byte ptr [rdi], cl ; ret 0xfc3
0x00000000001261eb : add byte ptr [rdi], cl ; ret 0xff83
0x000000000006cc8b : add byte ptr [rdi], cl ; ror dword ptr [rax - 0x73], 0x4a ; add cl, byte ptr [rcx + 0x440f48c3] ; rol dword ptr [rax], 1 ; ret
0x0000000000105222 : add byte ptr [rdi], cl ; test bh, dl ; add eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x0000000000089f1e : add byte ptr [rdi], cl ; test bl, ch ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x000000000008a43e : add byte ptr [rdi], cl ; test bl, cl ; add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, r8 ; call rax
0x000000000008b039 : add byte ptr [rdi], cl ; test byte ptr [rax + 0x48000000], cl ; mov esi, ebp ; mov rdi, r12 ; call rax
0x0000000000105189 : add byte ptr [rdi], cl ; test byte ptr [rax + 5], dh ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000001051a9 : add byte ptr [rdi], cl ; test byte ptr [rax + 6], dh ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000166264 : add byte ptr [rdi], cl ; test byte ptr [rbp + 0x48fffffb], ah ; mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000002820b : add byte ptr [rdi], cl ; test byte ptr [rbp + rdi*8 - 0x7cb70001], dh ; jl 0x2824a ; add byte ptr [rsi + rbx*2 - 0xa], sil ; ret
0x00000000000aed26 : add byte ptr [rdi], cl ; test byte ptr [rbx + 0x45000003], ah ; test ebp, ebp ; mov r10, rbp ; setne dl ; jmp 0xaed56
0x0000000000104e4e : add byte ptr [rdi], cl ; test byte ptr [rbx + 0xa], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000001052be : add byte ptr [rdi], cl ; test byte ptr [rbx + 3], bl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000000b1715 : add byte ptr [rdi], cl ; test byte ptr [rbx], ch ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x7b], al ; in eax, dx ; mov r10, rbp ; setne dl ; jmp 0xb1746
0x0000000000104bd0 : add byte ptr [rdi], cl ; test byte ptr [rcx], cl ; or eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x0000000000104eda : add byte ptr [rdi], cl ; test byte ptr [rdi + 7], bh ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000104efa : add byte ptr [rdi], cl ; test byte ptr [rdi + 9], bl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000105427 : add byte ptr [rdi], cl ; test byte ptr [rdx + 3], dh ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000260d8 : add byte ptr [rdi], cl ; test byte ptr [rdx], ah ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf08
0x0000000000104b57 : add byte ptr [rdi], cl ; test byte ptr [rdx], ah ; or eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x00000000001050fd : add byte ptr [rdi], cl ; test byte ptr [rsi + rax], bh ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000010501b : add byte ptr [rdi], cl ; test byte ptr [rsi], bh ; add eax, 0xf6310000 ; mov rdi, r12 ; call rbx
0x0000000000104cf5 : add byte ptr [rdi], cl ; test byte ptr [rsp + rcx], al ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000ce8c4 : add byte ptr [rdi], cl ; test ch, dl ; add byte ptr [rax], al ; add byte ptr [rax + 0x7f], bh ; ret
0x0000000000104ac7 : add byte ptr [rdi], cl ; test dl, dl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; std ; xor edx, edx ; xor esi, esi ; call rbx
0x00000000001056a4 : add byte ptr [rdi], cl ; test dword ptr [rax - 0x4100000b], edi ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000105704 : add byte ptr [rdi], cl ; test dword ptr [rbp - 0x41000006], eax ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000105824 : add byte ptr [rdi], cl ; test dword ptr [rbp - 0x41000007], eax ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000001057a4 : add byte ptr [rdi], cl ; test dword ptr [rbx - 0x41000004], eax ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000105744 : add byte ptr [rdi], cl ; test dword ptr [rcx - 0x41000007], edi ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000001057c4 : add byte ptr [rdi], cl ; test dword ptr [rdi - 0x41000005], esi ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000105784 : add byte ptr [rdi], cl ; test dword ptr [rdi*8 + 0x3beffff], ebx ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000105624 : add byte ptr [rdi], cl ; test dword ptr [rdx - 0x41000004], ebx ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00000000001058a4 : add byte ptr [rdi], cl ; test dword ptr [rdx - 0x4100000b], ebp ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000000d8333 : add byte ptr [rdi], cl ; test dword ptr [rsi + 4], esi ; add byte ptr [rax], al ; mov dword ptr [rbx + 0x2c], eax ; jmp 0xd830d
0x0000000000087e47 : add byte ptr [rdi], cl ; test dword ptr [rsi - 0x16000002], esi ; ret 0xfffe
0x0000000000105565 : add byte ptr [rdi], cl ; test dword ptr [rsi - 0x41000006], esi ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000105864 : add byte ptr [rdi], cl ; test dword ptr [rsi - 0x4100000a], edx ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x000000000002a0b8 : add byte ptr [rdi], cl ; test eax, edx ; add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; in al, 0xf ; test byte ptr [rip - 0x76000002], al ; ret
0x00000000000258ab : add byte ptr [rdi], cl ; xchg byte ptr [rcx - 0x7afffffd], dh ; ror byte ptr [rdi], cl ; mov byte ptr [rcx - 0x8fffffd], ch ; ret 0xf800
0x0000000000025d94 : add byte ptr [rdi], cl ; xchg dl, cl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x3d77f02e], al ; add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x00000000000207e6 : add byte ptr [rdi], cl ; xchg dword ptr [rdx], eax ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000003c644 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000013972b : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x00000000000e7877 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x00000000000bd2a1 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000000d89df : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd201
0x00000000000bd20d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x00000000000d80e1 : add byte ptr [rdi], cl ; xchg eax, ebp ; rol byte ptr [rcx], 0xc0 ; ret
0x0000000000100d82 : add byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000013d906 : add byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rcx - 0x3b7cb7fd], 0x10 ; mov eax, 1 ; pop rbx ; ret
0x0000000000136ee8 : add byte ptr [rdi], cl ; xchg eax, edi ; ret
0x000000000010b3a6 : add byte ptr [rdi], cl ; xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; cmp qword ptr [rcx + 0x10], rsi ; cmovb eax, edx ; ret
0x000000000014d4b7 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xf40
0x0000000000062225 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000046f7e : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b44
0x0000000000022447 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9e9
0x000000000003e6fd : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x00000000000a9eff : add byte ptr [rdx + 0x30178816], cl ; in eax, dx ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a848f : add byte ptr [rdx + 0x48178816], cl ; lea eax, dword ptr [rdi + 1] ; ret
0x0000000000105016 : add byte ptr [rdx + 1], bh ; je 0x105571 ; xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000104ae9 : add byte ptr [rdx + 1], bh ; je 0x105591 ; xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000104d8c : add byte ptr [rdx + 2], bh ; je 0x1055d1 ; xor esi, esi ; mov rdi, r13 ; call rbx
0x000000000010503b : add byte ptr [rdx + 2], bh ; je 0x1055f1 ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000104b0e : add byte ptr [rdx + 2], bh ; je 0x105611 ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000001052b9 : add byte ptr [rdx + 2], bh ; je 0x105631 ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000104b32 : add byte ptr [rdx + 3], bh ; je 0x105651 ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000104ed5 : add byte ptr [rdx + 3], bh ; je 0x105671 ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000104db0 : add byte ptr [rdx + 3], bh ; je 0x105691 ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000104c57 : add byte ptr [rdx + 3], bh ; je 0x1056b1 ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000105402 : add byte ptr [rdx + 3], bh ; je 0x1056d1 ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000001052dd : add byte ptr [rdx + 3], bh ; je 0x1056f1 ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000105184 : add byte ptr [rdx + 3], bh ; je 0x105711 ; xor esi, esi ; mov rdi, r14 ; call rbx
0x000000000010505f : add byte ptr [rdx + 3], bh ; je 0x105731 ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000001050f8 : add byte ptr [rdx + 4], bh ; je 0x105751 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000010507f : add byte ptr [rdx + 4], bh ; je 0x105771 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000010549b : add byte ptr [rdx + 4], bh ; je 0x105791 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000105422 : add byte ptr [rdx + 4], bh ; je 0x1057b1 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000105376 : add byte ptr [rdx + 4], bh ; je 0x1057d1 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000001052fd : add byte ptr [rdx + 4], bh ; je 0x1057f1 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000010521d : add byte ptr [rdx + 4], bh ; je 0x105811 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000001051a4 : add byte ptr [rdx + 4], bh ; je 0x105831 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104f6e : add byte ptr [rdx + 4], bh ; je 0x105851 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104ef5 : add byte ptr [rdx + 4], bh ; je 0x105871 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104b52 : add byte ptr [rdx + 4], bh ; je 0x105891 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104e49 : add byte ptr [rdx + 4], bh ; je 0x1058b1 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104dd0 : add byte ptr [rdx + 4], bh ; je 0x1058d1 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104bcb : add byte ptr [rdx + 4], bh ; je 0x1058f1 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104cf0 : add byte ptr [rdx + 4], bh ; je 0x105911 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104c77 : add byte ptr [rdx + 4], bh ; je 0x105931 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000001b9fc4 : add byte ptr [rdx + rax - 0xfffffb], ch ; inc dword ptr [rcx] ; or ch, byte ptr [rdi + 5] ; ret
0x0000000000198727 : add byte ptr [rdx + rbp*2 - 7], ah ; push qword ptr [rcx + rdi*8 + 0x6ac40001] ; stc ; jmp rsp
0x0000000000196717 : add byte ptr [rdx + rcx*2], al ; lcall ptr [rcx + rdi + 0x4a940001] ; call rsp
0x00000000001a137b : add byte ptr [rdx + rdi*2], ah ; add byte ptr [rax], al ; and byte ptr [rdx - 0x13], bh ; jmp qword ptr [rbx]
0x00000000001a13d3 : add byte ptr [rdx + rdi*2], bh ; add al, bh ; jns 0x1a13d0 ; call rcx
0x0000000000198947 : add byte ptr [rdx + rdi*4 + 0xe9cfff9], ah ; add al, byte ptr [rax] ; add al, 0xbb ; stc ; call rsp
0x0000000000196637 : add byte ptr [rdx + rdi*4 - 0xe], al ; jmp rsp
0x000000000007f273 : add byte ptr [rdx + rdx + 0x48], dh ; mov eax, dword ptr [rdi + 8] ; cmp rax, rdx ; jae 0x7f2af ; movzx eax, byte ptr [rax] ; ret
0x00000000001a2b63 : add byte ptr [rdx + rdx*4], cl ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; std ; jmp rdi
0x0000000000194d97 : add byte ptr [rdx + rsi*2 - 0x74ab0016], ah ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ja 0x194d99 ; call rsp
0x00000000001976bf : add byte ptr [rdx - 0x65530009], al ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0xf7 ; jmp rsp
0x0000000000197e37 : add byte ptr [rdx - 8], ah ; dec esp ; rol dword ptr [rcx], 0 ; movsb byte ptr [rdi], byte ptr [rsi] ; and bh, al ; jmp rsp
0x0000000000020da4 : add byte ptr [rdx], bh ; add byte ptr [rdi + rax*8], ah ; or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edi ; ret
0x000000000012fbdb : add byte ptr [rdx], ch ; add byte ptr [rax], al ; mov rdi, rbx ; mov rcx, qword ptr [rsp] ; call rcx
0x00000000000fdeeb : add byte ptr [rip - 0x131], ah ; or eax, 0x30 ; mov dword ptr [rdi + 8], eax ; ret
0x00000000000a7035 : add byte ptr [rsi + 0x2e], ah ; nop dword ptr [rax + rax] ; mov byte ptr [rdi], dl ; ret
0x00000000000a6d35 : add byte ptr [rsi + 0x2e], ah ; nop dword ptr [rax + rax] ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000a7075 : add byte ptr [rsi + 0x2e], ah ; nop dword ptr [rax + rax] ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a6075 : add byte ptr [rsi + 0x2e], ah ; nop dword ptr [rax + rax] ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000015ae55 : add byte ptr [rsi + 0x2e], ah ; nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000007f155 : add byte ptr [rsi + 0x2e], ah ; nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi + 0x68] ; ret
0x00000000000a5ba5 : add byte ptr [rsi + 0x2e], ah ; nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000000a7045 : add byte ptr [rsi + 0x2e], ah ; nop dword ptr [rax + rax] ; mov word ptr [rdi], dx ; ret
0x00000000000a9ee5 : add byte ptr [rsi + 0x2e], ah ; nop dword ptr [rax + rax] ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000000a081f : add byte ptr [rsi + 0x44], ah ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a082f : add byte ptr [rsi + 0x44], ah ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a2d51 : add byte ptr [rsi + 0xf], ah ; adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x000000000014d39f : add byte ptr [rsi + 0xf], ah ; cmp ah, byte ptr [rbx - 0x25] ; cmp cl, byte ptr [rax + 0x63] ; leave ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x000000000014d375 : add byte ptr [rsi + 0xf], ah ; cmp ah, byte ptr [rbx - 0x35] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x000000000016b9e4 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000013ebec : add byte ptr [rsi + 0xf], ah ; out dx, eax ; ror byte ptr [rdi], 0x11 ; and al, 0x28 ; call rdx
0x000000000016b9dc : add byte ptr [rsi + 0xf], ah ; out dx, eax ; xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ba99 : add byte ptr [rsi + 0xf], ah ; out dx, eax ; xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016b9f7 : add byte ptr [rsi + 0xf], ah ; out dx, eax ; xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ba48 : add byte ptr [rsi + 0xf], ah ; out dx, eax ; xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016bc63 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; push rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016bc78 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; push rdi ; and byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016bc8d : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000a0b71 : add byte ptr [rsi + 0xf], ah ; xlatb ; ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000104d6f : add byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rbx
0x0000000000104c3b : add byte ptr [rsi + 1], bh ; mov rdi, r13 ; call rbx
0x0000000000104bb3 : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x000000000012eeef : add byte ptr [rsi + 1], bh ; mov rdi, r15 ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x0000000000104fed : add byte ptr [rsi + 2], bh ; mov rdi, r12 ; call rbx
0x0000000000104d60 : add byte ptr [rsi + 2], bh ; mov rdi, r13 ; call rbx
0x000000000012f0b7 : add byte ptr [rsi + 2], bh ; mov rdi, r13 ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x0000000000104c2c : add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x0000000000104ba4 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x000000000013a968 : add byte ptr [rsi + 3], bh ; mov rdi, r15 ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000012f191 : add byte ptr [rsi + 4], bh ; mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000019646f : add byte ptr [rsi + rbx*2], al ; push qword ptr [rdi + 0x5e540001] ; jmp rsp
0x0000000000198707 : add byte ptr [rsi + rbx*2], al ; stc ; inc dword ptr [rax + rdi*8 + 0x66240001] ; stc ; call rsp
0x0000000000199707 : add byte ptr [rsi + rbx*4], dh ; cld ; dec esp ; adc eax, dword ptr [rcx] ; add byte ptr [rdi + rdi*4 - 4], dh ; jmp rsp
0x00000000001aa813 : add byte ptr [rsi + rcx - 0x627ffff], bh ; jmp qword ptr [rdi]
0x0000000000196f1f : add byte ptr [rsi + rdi - 0xa], dh ; jmp rsp
0x00000000001aafbb : add byte ptr [rsi + rdx + 1], ah ; add byte ptr [rax], dl ; jge 0x1aafbf ; jmp rdi
0x00000000001b2f93 : add byte ptr [rsi + rdx*4], bh ; add dword ptr [rax], eax ; add rdi, rsi ; call rsi
0x00000000001b6fdb : add byte ptr [rsi + rdx*8 + 0x2cb00001], al ; clc ; jmp rdi
0x0000000000196b4f : add byte ptr [rsi + rsi*2], dl ; hlt ; inc dword ptr [rdi + rdx*2 + 0x78640001] ; hlt ; call rsp
0x00000000000798ed : add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x000000000015aedf : add byte ptr [rsi - 0x75], ah ; push rsi ; std ; mov cx, word ptr [rsi - 2] ; mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000035323 : add byte ptr [rsi - 0x77], ah ; and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x00000000000353ec : add byte ptr [rsi - 0x77], ah ; and al, 0xf0 ; mov dword ptr [rdi], edx ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000134c0e : add byte ptr [rsi - 0x77], ah ; insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x000000000019ffd3 : add byte ptr [rsi], bh ; add byte ptr [rax], bh ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001ae56b : add byte ptr [rsp + rcx*2], dl ; add dword ptr [rax], eax ; push rax ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001ad5db : add byte ptr [rsp + rdi + 0x58700001], al ; cmc ; jmp qword ptr [rcx]
0x00000000001ad5c3 : add byte ptr [rsp + rdi + 1], ch ; add byte ptr [rax + 0x58], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001ad5ab : add byte ptr [rsp + rdi + 1], dl ; add byte ptr [rax + 0x58], al ; cmc ; jmp qword ptr [rcx]
0x0000000000198017 : add byte ptr [rsp + rdi - 8], al ; jmp rsp
0x0000000000194dd7 : add byte ptr [rsp + rdi*2 - 0x73330016], al ; add byte ptr [rax], al ; xchg eax, esp ; jl 0x194dd9 ; jmp rsp
0x0000000000194124 : add byte ptr [rsp + rdi*8 - 0x36c8f01], dl ; jmp rax
0x00000000001ad593 : add byte ptr [rsp + rdi], bh ; add dword ptr [rax], eax ; sub byte ptr [rax - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001ad563 : add byte ptr [rsp + rdi], cl ; add dword ptr [rax], eax ; clc ; push rdi ; cmc ; jmp qword ptr [rcx]
0x0000000000195e37 : add byte ptr [rsp + rdx*4 - 0x11], al ; dec dword ptr [rsi + rdi*8 - 0x6b2c0000] ; out dx, eax ; call rsp
0x00000000001b6e03 : add byte ptr [rsp + rdx*8 + 0x27580001], ch ; clc ; jmp rdi
0x0000000000195d1f : add byte ptr [rsp], dh ; out dx, eax ; push qword ptr [rdi + rsi*8 + 0x65240000] ; out dx, eax ; jmp rsp
0x00000000001039fd : add byte ptr ds:[rdi + rax - 0xd], dh ; ret
0x00000000001a9160 : add byte ptr fs:[rax], al ; add byte ptr [rax + rdi*8], cl ; add byte ptr [rax], al ; sbb byte ptr [rdi - 0xe], ah ; call qword ptr [rax]
0x000000000019f3c0 : add byte ptr fs:[rax], al ; add byte ptr [rdi + rax + 0x5180000], ch ; in eax, dx ; call qword ptr [rcx]
0x00000000001ad8f8 : add byte ptr fs:[rax], al ; add byte ptr [rdi + rdi + 0x61f00001], ah ; cmc ; jmp qword ptr [rbx]
0x00000000001a50c0 : add byte ptr fs:[rax], al ; add byte ptr [rdi + rsi*4], ch ; add byte ptr [rax + 0x3d], cl ; out dx, eax ; jmp rsi
0x00000000000d89de : add byte ptr gs:[rdi], cl ; xchg eax, ebp ; ret 0xd201
0x00000000000d80e0 : add byte ptr gs:[rdi], cl ; xchg eax, ebp ; rol byte ptr [rcx], 0xc0 ; ret
0x0000000000139c54 : add byte ptr ss:[rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000c8f7a : add ch, bl ; salc ; nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; ret
0x00000000000c7cfa : add ch, byte ptr [rdi + rbp - 0x373eb800] ; adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000000362e6 : add cl, 0xe9 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x0000000000075952 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000075848 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000000a7698 : add cl, byte ptr [rax - 0x73] ; add r8b, r11b ; nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000164005 : add cl, byte ptr [rax - 0x75] ; add eax, 0x5428948 ; mov rax, rdi ; ret
0x000000000004008c : add cl, byte ptr [rbp - 0x57f2faa] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003ce47 : add cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000015b4a2 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000104b3a : add cl, byte ptr [rbx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000000895c8 : add cl, byte ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; push rdx ; or byte ptr [rcx - 0x7d], cl ; ret 0x4820
0x0000000000118358 : add cl, byte ptr [rcx + rcx*4 - 0x2f] ; test r8b, r8b ; mov byte ptr [r9 + 3], r8b ; jne 0x118308 ; mov rax, rdi ; ret
0x00000000001b35c1 : add cl, byte ptr [rdi + 0xe] ; adc byte ptr [rbx + 0xa930202], al ; ret
0x0000000000134c9a : add cl, byte ptr [rdi] ; enter -0x7e77, -0x48 ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x0000000000134b52 : add cl, byte ptr [rdi] ; enter -0x7e77, -0x4c ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000001378e2 : add cl, byte ptr [rdi] ; enter 0x4789, 0x54 ; mov eax, 1 ; ret
0x00000000001379b2 : add cl, byte ptr [rdi] ; enter 0x4789, 0x58 ; mov eax, 1 ; ret
0x000000000002dcc4 : add cl, byte ptr [rdi] ; mov bh, 0xc0 ; ret
0x00000000000f8d4f : add cl, byte ptr [rdi] ; ret 0x8348
0x00000000000f8ca7 : add cl, byte ptr [rdi] ; ret 0xfc3
0x0000000000112fe5 : add cl, byte ptr [rdi] ; test bh, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000d96b8 : add cl, byte ptr [rdi] ; test cl, al ; add al, 0 ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000016a121 : add cl, byte ptr [rdi] ; test eax, ebx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x000000000006ddd5 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x5389
0x0000000000049363 : add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8949
0x000000000014d37b : add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x00000000000aaa23 : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x000000000011c157 : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8b48
0x0000000000087979 : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8d48
0x0000000000046fa5 : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x9422
0x000000000013d406 : add cl, byte ptr [rdi] ; xchg eax, esp ; rol byte ptr [rbx + 0x597401fa], 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013d1b5 : add cl, byte ptr [rdi] ; xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x0000000000130da9 : add cl, byte ptr [rdi] ; xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000013e127 : add cl, byte ptr [rdi] ; xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000001883fb : add dh, bh ; jmp rdi
0x000000000017e4d7 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000015b653 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000000a9f2b : add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000ac7ef : add dh, byte ptr [rbp + 0x7a] ; test eax, eax ; jne 0xac7db ; mov rax, rdi ; ret
0x000000000007625a : add dh, byte ptr [rbp + rax - 0x7d] ; std ; or dh, byte ptr [rax + rdi*4 + 0x48] ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000007c874 : add dh, byte ptr [rbp + rax - 0x7d] ; std ; or dh, byte ptr [rsp + rdi*2 + 0x40] ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000adb21 : add dh, byte ptr [rcx + rcx + 0x44] ; mov ecx, dword ptr [rdi + rdx*4] ; test r9d, r9d ; jne 0xadaf0 ; mov rax, rdx ; ret
0x000000000013daa6 : add dh, byte ptr [rdi + rsi*2 + 0x31] ; ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000016e38f : add dh, byte ptr [rdx + 8] ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000000bb63b : add dh, byte ptr [rdx + rbp*8 - 0x75] ; push rsi ; or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x29], dh ; ret
0x00000000001883f3 : add dh, dh ; ljmp ptr [rcx - 0x3c000500] ; add dh, bh ; jmp rdi
0x000000000007e533 : add dword ptr [rax + 0xf740a39], eax ; cmp rsi, rcx ; jne 0x7e53e ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000001a220e : add dword ptr [rax + rdi*2], 0xa ; ret
0x0000000000165d5a : add dword ptr [rax - 0x73], ecx ; add qword ptr [rdi], rcx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x0000000000164002 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x75] ; add eax, 0x5428948 ; mov rax, rdi ; ret
0x000000000007d65c : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007994d : add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000001064a3 : add dword ptr [rax - 0x77], ecx ; push rdi ; sub dh, al ; add byte ptr [rdx], cl ; add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000106119 : add dword ptr [rax - 0x77], ecx ; push rdi ; sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a5a0b : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000098c08 : add dword ptr [rax - 0x7d], ecx ; out dx, al ; add dword ptr [rbp - 0xf], esi ; xor edi, edi ; mov rax, rdi ; ret
0x0000000000196b4e : add dword ptr [rax], eax ; adc al, 0x76 ; hlt ; inc dword ptr [rdi + rdx*2 + 0x78640001] ; hlt ; call rsp
0x00000000001b694e : add dword ptr [rax], eax ; adc byte ptr [rax + rdi*8], cl ; jmp qword ptr [rax]
0x00000000001aafbe : add dword ptr [rax], eax ; adc byte ptr [rbp - 0xc], bh ; jmp rdi
0x0000000000196716 : add dword ptr [rax], eax ; add al, 0x4a ; lcall ptr [rcx + rdi + 0x4a940001] ; call rsp
0x000000000019646e : add dword ptr [rax], eax ; add al, 0x5e ; push qword ptr [rdi + 0x5e540001] ; jmp rsp
0x0000000000198706 : add dword ptr [rax], eax ; add al, 0x5e ; stc ; inc dword ptr [rax + rdi*8 + 0x66240001] ; stc ; call rsp
0x0000000000074131 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; test al, 0x28 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x00000000000aac5d : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; xor eax, 0xdb859 ; movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x000000000007ee9c : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; push rax ; or byte ptr [rbp + 0xb], dh ; sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000000391ed : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; push rsp ; and al, 8 ; mov rsi, qword ptr [r15] ; mov rdi, qword ptr [r12] ; call r14
0x0000000000145c1b : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; mov cl, 0xe9 ; add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000009148e : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000074138 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x00000000001b842e : add dword ptr [rax], eax ; add byte ptr [rax - 8], ah ; jmp qword ptr [rdi]
0x000000000017e4da : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000001b35bd : add dword ptr [rax], eax ; add byte ptr [rax], al ; add cl, byte ptr [rdi + 0xe] ; adc byte ptr [rbx + 0xa930202], al ; ret
0x0000000000105018 : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0x10556f ; xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000104aeb : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0x10558f ; xor esi, esi ; mov rdi, r12 ; call rbx
0x00000000000ac572 : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0xac4e3 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac622 : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0xac69a ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000104d6c : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov esi, 1 ; mov rdi, r12 ; call rbx
0x0000000000104fea : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov esi, 2 ; mov rdi, r12 ; call rbx
0x00000000001378fa : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; mov qword ptr [rdi + 0x10], rdx ; mov eax, 1 ; ret
0x000000000004a516 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000134b89 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000104d71 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000104c3d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000104bb5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x000000000012eef1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r15 ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x0000000000104ffb : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x000000000006da74 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x000000000006d76d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000003639e : add dword ptr [rax], eax ; add byte ptr [rax], al ; shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000003641e : add dword ptr [rax], eax ; add byte ptr [rax], al ; shl rax, cl ; test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x00000000000459a4 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x28ba28f8], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8539
0x00000000000bd741 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x76bc2], al ; add byte ptr [rdi], cl ; ret 0xf8c1
0x000000000007510e : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, r12 ; call 0x913bb
0x000000000008a442 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, r8 ; call rax
0x000000000002c17b : add dword ptr [rax], eax ; add byte ptr [rdi + 0x63], cl ; add al, 0x8b ; add r8, r11 ; jmp r8
0x00000000000cfb05 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x000000000003ce81 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x48 ; add al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000003ce41 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x48 ; add cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003ce21 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x48 ; add dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003cea1 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x48 ; add eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003ce61 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x48 ; add ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000400c6 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x70 ; add al, 0x8d ; push rsi ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000040086 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x70 ; add cl, byte ptr [rbp - 0x57f2faa] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040066 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x70 ; add dword ptr [rbp - 0x57f2faa], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000400e6 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x70 ; add eax, 0x80d0568d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000400a6 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x70 ; add ecx, dword ptr [rbp - 0x57f2faa] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000126209 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xf3c3
0x00000000001261ae : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xfc3
0x00000000001261e9 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xff83
0x00000000000a2d4f : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x000000000012f18f : add dword ptr [rax], eax ; add byte ptr [rsi + 4], bh ; mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00000000001b2f96 : add dword ptr [rax], eax ; add rdi, rsi ; call rsi
0x000000000019710e : add dword ptr [rax], eax ; and al, 0x68 ; idiv bh ; movsb byte ptr [rdi], byte ptr [rsi] ; jnp 0x197125 ; add byte ptr [rbp + rbp*2 - 0xa], dh ; call rsp
0x0000000000197e36 : add dword ptr [rax], eax ; and bh, al ; dec esp ; rol dword ptr [rcx], 0 ; movsb byte ptr [rdi], byte ptr [rsi] ; and bh, al ; jmp rsp
0x00000000001af06e : add dword ptr [rax], eax ; and bl, al ; cmc ; jmp qword ptr [rdi]
0x00000000001b7cae : add dword ptr [rax], eax ; and byte ptr [rcx - 8], dl ; call rdi
0x00000000001b92e6 : add dword ptr [rax], eax ; clc ; movsd dword ptr [rdi], dword ptr [rsi] ; clc ; call qword ptr [rbx]
0x00000000001ad566 : add dword ptr [rax], eax ; clc ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001ae946 : add dword ptr [rax], eax ; clc ; scasd eax, dword ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b931e : add dword ptr [rax], eax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; clc ; jmp qword ptr [rcx]
0x00000000001b7c56 : add dword ptr [rax], eax ; cwde ; clc ; call rdi
0x00000000001ad106 : add dword ptr [rax], eax ; cwde ; cmp al, 0xf5 ; call qword ptr [rdi]
0x00000000001aa816 : add dword ptr [rax], eax ; fdivr st(1) ; jmp qword ptr [rdi]
0x00000000001aad06 : add dword ptr [rax], eax ; fimul dword ptr [rdi - 0x19] ; jmp qword ptr [rbx]
0x000000000019847e : add dword ptr [rax], eax ; in al, -0x32 ; clc ; dec esp ; out 1, eax ; add byte ptr [rdi + rcx*8], dh ; clc ; jmp rsp
0x00000000001b6fde : add dword ptr [rax], eax ; mov al, 0x2c ; clc ; jmp rdi
0x00000000000a051c : add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000019856e : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; add edi, ecx ; jmp rsp
0x00000000001976c6 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0xf7 ; jmp rsp
0x0000000000197e3e : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; and bh, al ; jmp rsp
0x00000000001966d6 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ljmp ptr [rdi + rsi + 0x42240001] ; call rsp
0x0000000000197d86 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000019745e : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff6
0x000000000019867e : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; xor al, 0xf9 ; push qword ptr [rsp + rsi*8 + 1] ; add byte ptr [rsi + rsi], ah ; stc ; call rsp
0x00000000001b6e46 : add dword ptr [rax], eax ; or byte ptr [rax], ch ; clc ; jmp rdi
0x00000000000a059b : add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x0000000000198726 : add dword ptr [rax], eax ; push 0xf9 ; push qword ptr [rcx + rdi*8 + 0x6ac40001] ; stc ; jmp rsp
0x00000000001ae46e : add dword ptr [rax], eax ; push rax ; stosb byte ptr [rdi], al ; cmc ; call qword ptr [rax]
0x00000000001ae56e : add dword ptr [rax], eax ; push rax ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001b993e : add dword ptr [rax], eax ; rol cl, 0xf8 ; call qword ptr [rdi]
0x00000000001b731e : add dword ptr [rax], eax ; sal byte ptr [rdi], 0xf8 ; call qword ptr [rbx]
0x00000000001b8446 : add dword ptr [rax], eax ; sbb byte ptr [rax - 8], ah ; jmp qword ptr [rdi]
0x0000000000199706 : add dword ptr [rax], eax ; xor al, 0x9e ; cld ; dec esp ; adc eax, dword ptr [rcx] ; add byte ptr [rdi + rdi*4 - 4], dh ; jmp rsp
0x00000000001aab3e : add dword ptr [rax], eax ; xor byte ptr [rdi], dl ; hlt ; call qword ptr [rdx]
0x00000000001ba09b : add dword ptr [rax], ebp ; stosd dword ptr [rdi], eax ; add cl, al ; add dword ptr [rax], eax ; add al, bl ; add al, 5 ; ret 0xb
0x000000000016b63b : add dword ptr [rbp + 0x32], esi ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000012ff85 : add dword ptr [rbp + 0x38], esi ; mov dword ptr [rsi], 7 ; mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x000000000013d372 : add dword ptr [rbp - 0x14], esi ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000004006c : add dword ptr [rbp - 0x57f2faa], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003ce27 : add dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000098c0c : add dword ptr [rbp - 0xf], esi ; xor edi, edi ; mov rax, rdi ; ret
0x000000000015b512 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000000d6937 : add dword ptr [rbx], edi ; jl 0xd69bf ; mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00000000000a2e56 : add dword ptr [rcx + 0x3418b02], ecx ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000000ac7ec : add dword ptr [rcx + 0x39], eax ; add dh, byte ptr [rbp + 0x7a] ; test eax, eax ; jne 0xac7de ; mov rax, rdi ; ret
0x00000000000a2e36 : add dword ptr [rcx + 0x418b6602], ecx ; add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000000a2e16 : add dword ptr [rcx + 0x4418a02], ecx ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000d81d8 : add dword ptr [rcx + 0x80e1], eax ; add byte ptr [rdi], cl ; ret 0xf35b
0x0000000000126879 : add dword ptr [rcx - 0x39], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 1], 1 ; xlatb ; mov qword ptr [r9], rdi ; ret
0x000000000011c153 : add dword ptr [rcx - 0x73], eax ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8b48
0x00000000000302db : add dword ptr [rcx - 0x7d], ecx ; std ; dec dword ptr [rdi] ; test bl, ah ; add al, byte ptr [rax] ; add byte ptr [rcx], dh ; imul al ; ret
0x00000000001b1add : add dword ptr [rcx], 0xf6940000 ; call qword ptr [rdi]
0x00000000001b1af5 : add dword ptr [rcx], 0xf6940800 ; call qword ptr [rdi]
0x00000000000ac55b : add dword ptr [rcx], eax ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000129ea9 : add dword ptr [rcx], edi ; sar byte ptr [rdi - 0x52], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000091922 : add dword ptr [rdi + 0x15], esi ; jb 0x91930 ; mov byte ptr [rdi], cl ; ret
0x00000000000914a3 : add dword ptr [rdi + 0x26], esi ; jb 0x914b7 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000013ea70 : add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x000000000013ea30 : add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000013eabf : add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000109773 : add dword ptr [rdi + 0x2b], esi ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000150c80 : add dword ptr [rdi + 0x2c], esi ; jb 0x150c91 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000016ec38 : add dword ptr [rdi + 0x3a], esi ; jb 0x16ec49 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000001507d3 : add dword ptr [rdi + 0x3b], esi ; jb 0x1507e7 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000016e633 : add dword ptr [rdi + 0x53], esi ; jb 0x16e647 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000017280a : add dword ptr [rdi + 3], esi ; ret
0x00000000000d6bbd : add dword ptr [rdi + 4], 1 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a066b : add dword ptr [rdi + rcx - 0x42], eax ; add al, 7 ; test r8b, r8b ; jne 0xa065c ; ret
0x0000000000098d66 : add dword ptr [rdi + rcx - 0x4a], eax ; adc dword ptr [rbp + 0x38], eax ; ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x0000000000128f0b : add dword ptr [rdi + rcx - 0x4a], eax ; cmp eax, dword ptr [rcx - 0x80] ; jmp qword ptr [rax]
0x00000000000ac106 : add dword ptr [rdi + rdx*2 + 0x44], esi ; mov eax, dword ptr [rsi] ; test r8d, r8d ; mov dword ptr [rcx + 4], r8d ; jne 0xac0e8 ; ret
0x0000000000097247 : add dword ptr [rdi - 0x1a], edi ; ret
0x000000000009868c : add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001a8d63 : add dword ptr [rdi], 0x7b ; ret
0x00000000001adcc3 : add dword ptr [rdi], 2 ; cwde ; ret
0x00000000001b926b : add dword ptr [rdi], 3 ; pop rbp ; add dword ptr [rdx], ecx ; ret
0x000000000019b4b2 : add dword ptr [rdi], 3 ; ret
0x0000000000127ab0 : add dword ptr [rdi], ecx ; add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x0000000000134c6d : add dword ptr [rdi], ecx ; enter -0x7e77, -0x58 ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000013825c : add dword ptr [rdi], ecx ; enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000137985 : add dword ptr [rdi], ecx ; enter 0x4789, 0x48 ; mov eax, 1 ; ret
0x00000000000d6ab8 : add dword ptr [rdi], ecx ; lahf ; ret 0x8feb
0x000000000002dda5 : add dword ptr [rdi], ecx ; mov bh, 0xc0 ; ret
0x00000000000a0505 : add dword ptr [rdi], ecx ; mov dh, 0x11 ; test dl, dl ; jne 0xa0506 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00000000000a0583 : add dword ptr [rdi], ecx ; mov dh, 0x11 ; test dl, dl ; jne 0xa0577 ; pop rbx ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00000000000d2737 : add dword ptr [rdi], ecx ; mov dh, 0x53 ; add dword ptr [rdx + rdx*8 - 0x76b3188b], eax ; loopne 0xd27af ; pop rbp ; pop r12 ; ret
0x00000000000a0753 : add dword ptr [rdi], ecx ; mov esi, 0x75c9840f ; in eax, dx ; xor eax, eax ; ret
0x00000000000a0613 : add dword ptr [rdi], ecx ; mov esi, 0xc984070c ; jne 0xa0612 ; ret
0x00000000000a06c3 : add dword ptr [rdi], ecx ; mov esi, 0xd139070c ; je 0xa06ce ; cmp ecx, esi ; je 0xa06ce ; ret
0x00000000000a05cf : add dword ptr [rdi], ecx ; mov esi, 0xd2840714 ; jne 0xa05d2 ; ret
0x00000000000c2ab1 : add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x00000000000aaaa7 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xda89
0x00000000000aaab5 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ror dword ptr [rdi], -0x51 ; ret 0x78e9
0x00000000000ddc7a : add dword ptr [rdi], ecx ; test bh, cl ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7af7db8c], cl ; div byte ptr [rdi - 0xa] ; ret
0x00000000000fc57d : add dword ptr [rdi], ecx ; test byte ptr [rbx + rax], ch ; add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x000000000005fa52 : add dword ptr [rdi], ecx ; test byte ptr [rcx], bl ; idiv bh ; inc dword ptr [rbp + 0x6c840fc9] ; and eax, 0x89480000 ; ret
0x00000000000eb49c : add dword ptr [rdi], ecx ; test byte ptr [rdx + rax], dh ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; test dword ptr [rip + 0x148fffa], esp ; ret
0x0000000000114adb : add dword ptr [rdi], ecx ; test byte ptr [rsi + 0x31000000], dl ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000165d5e : add dword ptr [rdi], ecx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x0000000000083305 : add dword ptr [rdi], ecx ; test dword ptr [rsi], ebx ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000016a0fe : add dword ptr [rdi], ecx ; test ebx, edi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x0000000000085f64 : add dword ptr [rdi], ecx ; test esp, ebp ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x00000000001000e8 : add dword ptr [rdi], ecx ; xchg cl, dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000100088 : add dword ptr [rdi], ecx ; xchg cl, dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000126535 : add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x8341
0x0000000000047147 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x32e9
0x0000000000047196 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x540a
0x00000000000470a6 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x98e9
0x0000000000122173 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xc085
0x00000000000aa985 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x000000000013edae : add dword ptr [rdi], ecx ; xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000013ec57 : add dword ptr [rdi], ecx ; xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000016e39c : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000016dccd : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000001b9b15 : add dword ptr [rdx], eax ; add byte ptr [rax - 0x3a], cl ; clc ; call qword ptr [rdi]
0x00000000000a2e98 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x00000000000a2eb8 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov ax, word ptr [rcx + 8] ; mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x00000000000a2ed8 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000a2ef8 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000000a2d55 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x00000000000a5b29 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000a0cf3 : add dword ptr [rsi + 0xf], esp ; xlatb ; shl dword ptr [rcx], -0x30 ; test eax, eax ; je 0xa0ce1 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000001b35bc : add dword ptr fs:[rax], eax ; add byte ptr [rax], al ; add cl, byte ptr [rdi + 0xe] ; adc byte ptr [rbx + 0xa930202], al ; ret
0x00000000000391ec : add dword ptr gs:[rax], eax ; add byte ptr [rax - 0x75], cl ; push rsp ; and al, 8 ; mov rsi, qword ptr [r15] ; mov rdi, qword ptr [r12] ; call r14
0x000000000002cb12 : add eax, 0x15df0e ; cmp edi, dword ptr [rdx + 0x38] ; jae 0x2cb3e ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000131a7f : add eax, 0x24448b48 ; or byte ptr [rax - 0x77], cl ; fimul dword ptr [rcx + rcx*4 - 0x1a] ; mov rdi, rbp ; call rax
0x00000000000a2e14 : add eax, 0x289018b ; mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000012aa62 : add eax, 0x2963d1 ; test byte ptr [rax + 0x40], 8 ; je 0x12aa84 ; cmp dword ptr [rdi + 0x10], 2 ; je 0x12aa89 ; ret
0x00000000000fe466 : add eax, 0x2c2a5d ; mov qword ptr [rax], rdx ; xor eax, eax ; cmp rdi, rdx ; ja 0xfe4b0 ; ret
0x00000000000c517d : add eax, 0x2e ; mov rdx, r14 ; mov rsi, qword ptr [rdi + rax*8] ; mov rdi, rbp ; call 0x913bf
0x000000000016ef23 : add eax, 0x2e6690c3 ; nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000086820 : add eax, 0x33a6bb ; mov qword ptr [rax], rdi ; ret
0x000000000015b193 : add eax, 0x480e8b48 ; mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a7776 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a85b6 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a6136 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x00000000000aa026 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x0000000000164009 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x0000000000147f06 : add eax, 0x633a0f66 ; add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000a7fff : add eax, 0x6e88349 ; lea rdi, qword ptr [rdi + 6] ; jne 0xa898f ; ret
0x00000000000a7ffe : add eax, 0x6e88349 ; lea rdi, qword ptr [rdi + 6] ; jne 0xa8990 ; ret
0x000000000010a45d : add eax, 0x7e7be ; movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000003cea7 : add eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000400ec : add eax, 0x80d0568d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000aa97f : add eax, 0x8307e083 ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x000000000013ede8 : add eax, 0x8348fff3 ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000c395f : add eax, 0xc3418 ; movzx edi, dl ; movsxd rax, dword ptr [r8 + rdi*4] ; add rax, r8 ; jmp rax
0x000000000013a3b4 : add eax, 0xd8894900 ; mov ecx, r12d ; mov rdi, rbp ; call 0x5665d
0x000000000013a3fc : add eax, 0xd8894900 ; mov rcx, r12 ; mov rdi, rbp ; xor eax, eax ; call 0x5665f
0x00000000000a6a3d : add eax, 0xde88349 ; lea rdi, qword ptr [rdi + 0xd] ; jne 0xa717f ; ret
0x000000000015b4fa : add eax, 0xef00ff2 ; movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000081f07 : add eax, 0xf05f883 ; test byte ptr [rdi - 0x9fffffe], ch ; ret
0x0000000000082fe4 : add eax, 0xf05f883 ; test byte ptr [rdi], dl ; or byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000010501f : add eax, 0xf6310000 ; mov rdi, r12 ; call rbx
0x0000000000105044 : add eax, 0xf6310000 ; mov rdi, r13 ; call rbx
0x000000000010518d : add eax, 0xf6310000 ; mov rdi, r14 ; call rbx
0x0000000000105226 : add eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x000000000016bd31 : add eax, 0xf660000 ; outsd dx, dword ptr [rsi] ; push rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016bc76 : add eax, 0xf660000 ; outsd dx, dword ptr [rsi] ; push rdi ; and byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016bc8b : add eax, 0xf660000 ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001395d1 : add eax, 0xffff93ea ; mov rdi, rax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x00000000001396c9 : add eax, 0xffff95a2 ; mov esi, 9 ; mov rdi, rax ; call qword ptr [r10]
0x00000000000a06a1 : add eax, 1 ; cmp byte ptr [rdi + rax], dl ; je 0xa06a9 ; ret
0x00000000000d6935 : add eax, 1 ; cmp eax, dword ptr [rsi + 0x40] ; jl 0xd69c1 ; mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00000000000ac6d9 : add eax, 1 ; mov r8d, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0xac6bd ; ret
0x00000000000a06c1 : add eax, 1 ; movsx ecx, byte ptr [rdi + rax] ; cmp ecx, edx ; je 0xa06d0 ; cmp ecx, esi ; je 0xa06d0 ; ret
0x00000000000a0611 : add eax, 1 ; movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0xa0614 ; ret
0x00000000000a05cd : add eax, 1 ; movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0xa05d4 ; ret
0x00000000000a0669 : add eax, 1 ; movsx r8d, byte ptr [rdi + rax] ; test r8b, r8b ; jne 0xa065e ; ret
0x000000000013e727 : add eax, 4 ; bswap edx ; mov dword ptr [rsi], edx ; mov qword ptr [rdi + 0x18], rax ; mov eax, 1 ; ret
0x00000000000eb599 : add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000104b34 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; je 0x10564f ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000104ed7 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; je 0x10566f ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000104db2 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; je 0x10568f ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000104c59 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; je 0x1056af ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000105404 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; je 0x1056cf ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000001052df : add eax, dword ptr [rax] ; add byte ptr [rax], al ; je 0x1056ef ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000105186 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; je 0x10570f ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000105061 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; je 0x10572f ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000104bb0 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov esi, 1 ; mov rdi, r14 ; call rbx
0x0000000000104c29 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov esi, 2 ; mov rdi, r14 ; call rbx
0x000000000010556d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00000000001055cc : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x000000000010564c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x000000000010574c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x000000000013a96a : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x00000000001398c1 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, rax ; lea r9, qword ptr [rsp + 0x14] ; call qword ptr [r10]
0x00000000001a3c5c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rsp ; add byte ptr [rax], al ; add byte ptr [rbx], cl ; add byte ptr [rax], al ; pop rax ; outsd dx, dword ptr [rsi] ; out dx, al ; jmp qword ptr [rdi]
0x00000000000aaab0 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe3e], al ; ror dword ptr [rdi], -0x51 ; ret 0x78e9
0x000000000011aec4 : add eax, dword ptr [rax] ; add byte ptr [rdi + 8], dh ; mov rax, rdi ; sar rax, 6 ; ret
0x00000000000d0878 : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x41 ; add dword ptr [rax - 0x7d], ecx ; rol dword ptr [rcx], -0x7c ; sal byte ptr [rbp - 0x2b], 0xf6 ; ret 0xf05
0x000000000016be6c : add eax, dword ptr [rax] ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; push rdi ; and byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016be81 : add eax, dword ptr [rax] ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000801b9 : add eax, dword ptr [rbp] ; cmp r14, rax ; jne 0x8019a ; mov rdi, r12 ; neg rdi ; call qword ptr [r15]
0x0000000000187500 : add eax, dword ptr [rcx - 0x7ef2000c] ; hlt ; call qword ptr [rdi]
0x00000000000a2d4e : add eax, dword ptr [rcx] ; add byte ptr [rax], al ; movlpd xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x0000000000034180 : add eax, dword ptr [rdi + 0x20] ; ret
0x000000000019efd6 : add eax, dword ptr [rdi + 0xe] ; and byte ptr [rdx], al ; jle 0x19effc ; movabs al, byte ptr [0x180e0a44200e4c01] ; ret
0x000000000006dd71 : add eax, eax ; cmp eax, r10d ; jg 0x6ddf6 ; add eax, r11d ; mov rdi, rdx ; jmp 0x6dd51
0x000000000009089d : add eax, ebp ; insd dword ptr [rdi], dx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000006dd79 : add eax, ebx ; mov rdi, rdx ; jmp 0x6dd49
0x000000000016ef03 : add eax, ebx ; nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a60d9 : add eax, ebx ; nop dword ptr [rax + rax] ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a083a : add eax, ebx ; nop dword ptr [rax] ; mov eax, dword ptr [rsp + 0x10] ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000f806d : add eax, edx ; cmp rdi, rsi ; ja 0xf8068 ; ret
0x000000000008dbc6 : add eax, edx ; sub rax, rdi ; ret
0x0000000000117047 : add eax, esi ; cmpxchg qword ptr [rip + 0x2af6f7], rdi ; cmp rdx, rax ; jne 0x117040 ; ret
0x000000000006dd78 : add eax, r11d ; mov rdi, rdx ; jmp 0x6dd4a
0x0000000000038041 : add ebp, esi ; mov rdx, rbx ; mov rsi, r13 ; mov rdi, r12 ; call r15
0x000000000012ae86 : add ebx, 8 ; test rdi, rdi ; jne 0x12ae86 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000016eee3 : add ebx, eax ; nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000798f7 : add ebx, eax ; nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x0000000000037659 : add ebx, esi ; mov rdx, r13 ; mov rsi, rbx ; mov rdi, r12 ; call r15
0x000000000015b6c3 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000000f71f2 : add ecx, 0x150 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000145c18 : add ecx, 0x180 ; mov rsi, rax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000f6f7f : add ecx, 0x50 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000a0503 : add ecx, 1 ; movzx edx, byte ptr [rcx] ; test dl, dl ; jne 0xa0508 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00000000000a0581 : add ecx, 1 ; movzx edx, byte ptr [rcx] ; test dl, dl ; jne 0xa0579 ; pop rbx ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x0000000000098c06 : add ecx, 1 ; sub rsi, 1 ; jne 0x98c0e ; xor edi, edi ; mov rax, rdi ; ret
0x00000000001a5cbc : add ecx, dword ptr [rbp + 0x4c0002] ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x00000000000400ac : add ecx, dword ptr [rbp - 0x57f2faa] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003ce67 : add ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000015b432 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000a76e4 : add ecx, dword ptr [rcx + 0x357890f] ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a8514 : add ecx, dword ptr [rcx + 0x357890f] ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a9f84 : add ecx, dword ptr [rcx + 0x357890f] ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x0000000000126732 : add ecx, dword ptr [rcx - 0xc3fce3f] ; stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x00000000001a4cc0 : add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x000000000006c3eb : add ecx, dword ptr [rdi] ; mov cl, 0xa ; test eax, eax ; je 0x6c40d ; mov eax, 0x10 ; ret
0x0000000000089d1d : add ecx, dword ptr [rdi] ; test ah, bh ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x00000000000a6900 : add ecx, dword ptr [rdi] ; test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x000000000016a147 : add ecx, dword ptr [rdi] ; test dword ptr [rdx - 0x7ffffffd], esi ; cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x00000000001ba095 : add ecx, dword ptr [rip - 0x10000] ; add dword ptr [rax], ebp ; stosd dword ptr [rdi], eax ; add cl, al ; add dword ptr [rax], eax ; add al, bl ; add al, 5 ; ret 0xb
0x00000000000494f7 : add ecx, eax ; adc rdx, r8 ; mov qword ptr [rdi + r11*8 + 8], r9 ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00000000000f8031 : add ecx, eax ; add edx, ecx ; test rdi, rdi ; cmovne eax, edx ; cmp rbp, rsi ; ja 0xf7fe1 ; pop rbx ; pop rbp ; ret
0x000000000012672c : add ecx, eax ; mov eax, ecx ; shr eax, 3 ; mov ecx, eax ; xor eax, eax ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x00000000000a0751 : add edi, 1 ; movsx ecx, byte ptr [rdi] ; test cl, cl ; jne 0xa0754 ; xor eax, eax ; ret
0x00000000000a07a8 : add edi, 1 ; movsx r8d, byte ptr [rdi] ; test r8b, r8b ; jne 0xa079e ; xor eax, eax ; ret
0x00000000000ac795 : add edi, 4 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0xac79b ; xor eax, eax ; ret
0x00000000000e8d5f : add edi, ebx ; jmp rdi
0x000000000004ef16 : add edi, edi ; lea eax, dword ptr [rdi + rcx] ; cmp edi, r11d ; mov ecx, 0xffffffff ; cmovg eax, ecx ; jmp 0x4eefb
0x0000000000126885 : add edi, edx ; mov qword ptr [r9], rdi ; ret
0x00000000000a0c68 : add edx, eax ; jl 0xa0cd7 ; add rax, rdi ; ret
0x00000000000a0c78 : add edx, eax ; jl 0xa0cd9 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000000a0c98 : add edx, eax ; jl 0xa0cd9 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00000000000a0cb8 : add edx, eax ; jl 0xa0cd9 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000004888d : add edx, eax ; mov qword ptr [rdi + 8], r10 ; mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000000f8033 : add edx, ecx ; test rdi, rdi ; cmovne eax, edx ; cmp rbp, rsi ; ja 0xf7fdf ; pop rbx ; pop rbp ; ret
0x0000000000118361 : add esi, dword ptr [r13 - 0x6d] ; mov rax, rdi ; ret
0x00000000000a9f89 : add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x000000000013dd5e : add esi, dword ptr [rbp - 0x11] ; mov rsi, r13 ; mov rdi, rbp ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x0000000000118362 : add esi, dword ptr [rbp - 0x6d] ; mov rax, rdi ; ret
0x00000000000a051a : add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x00000000000a0599 : add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x000000000013e6c3 : add esi, eax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x00000000000d69b9 : add esi, eax ; or byte ptr [r9], r8b ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x000000000015b5e3 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000091405 : add esi, ebx ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000145c23 : add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000362e9 : add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x00000000001536c5 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000088e49 : add esp, 0x10 ; mov rsi, r12 ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x0000000000070bb1 : add esp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000090429 : add esp, 0x58 ; mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007fe60 : add esp, 8 ; mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008822f : add esp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000012fe09 : add esp, 8 ; mov rdi, rbp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000073671 : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000012e645 : add esp, 8 ; mov rsi, rbp ; mov rcx, rbx ; add rdi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000001594e9 : add esp, dword ptr [rdi + 0x63490003] ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001ae945 : add qword ptr [r8], r8 ; clc ; scasd eax, dword ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ae46d : add qword ptr [r8], rax ; push rax ; stosb byte ptr [rdi], al ; cmc ; call qword ptr [rax]
0x00000000001ae56d : add qword ptr [rax], r8 ; push rax ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x000000000003ce26 : add qword ptr [rbp - 0x57f2faf], rcx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000001a8d62 : add qword ptr [rdi], 0x7b ; ret
0x00000000001adcc2 : add qword ptr [rdi], 2 ; cwde ; ret
0x0000000000165d5d : add qword ptr [rdi], rcx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x000000000016a0fd : add qword ptr [rdi], rcx ; test ebx, edi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x000000000004888c : add r10, rax ; mov qword ptr [rdi + 8], r10 ; mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000015b6c2 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000038040 : add r13, r14 ; mov rdx, rbx ; mov rsi, r13 ; mov rdi, r12 ; call r15
0x000000000015b652 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b5e2 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000000a0984 : add r8b, byte ptr [r8] ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a08f4 : add r8b, byte ptr [r8] ; mov rax, rdi ; ret
0x00000000000a769b : add r8b, r11b ; nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a0989 : add r8b, r11b ; nop dword ptr [rax] ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a0839 : add r8d, r11d ; nop dword ptr [rax] ; mov eax, dword ptr [rsp + 0x10] ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000118357 : add r9b, byte ptr [rcx + r9*4 - 0x2f] ; test r8b, r8b ; mov byte ptr [r9 + 3], r8b ; jne 0x118309 ; mov rax, rdi ; ret
0x000000000003cea6 : add rax, -0x7f2fae73 ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000c517c : add rax, 0x2e ; mov rdx, r14 ; mov rsi, qword ptr [rdi + rax*8] ; mov rdi, rbp ; call 0x913c0
0x00000000000a06a0 : add rax, 1 ; cmp byte ptr [rdi + rax], dl ; je 0xa06aa ; ret
0x00000000000ac6d8 : add rax, 1 ; mov r8d, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0xac6be ; ret
0x00000000000a06c0 : add rax, 1 ; movsx ecx, byte ptr [rdi + rax] ; cmp ecx, edx ; je 0xa06d1 ; cmp ecx, esi ; je 0xa06d1 ; ret
0x00000000000a0610 : add rax, 1 ; movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0xa0615 ; ret
0x00000000000a05cc : add rax, 1 ; movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0xa05d5 ; ret
0x00000000000a0668 : add rax, 1 ; movsx r8d, byte ptr [rdi + rax] ; test r8b, r8b ; jne 0xa065f ; ret
0x00000000000801b8 : add rax, qword ptr [rbp] ; cmp r14, rax ; jne 0x8019b ; mov rdi, r12 ; neg rdi ; call qword ptr [r15]
0x000000000003417f : add rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a0d64 : add rax, rdi ; add rax, r8 ; ret
0x0000000000090ba6 : add rax, rdi ; add rax, rcx ; ret
0x00000000000c5a6e : add rax, rdi ; jmp rax
0x000000000008f76a : add rax, rdi ; ret
0x000000000014d38a : add rax, rdi ; sub rax, r8 ; ret
0x000000000014d5df : add rax, rdi ; sub rax, rdx ; ret
0x000000000008dbc5 : add rax, rdx ; sub rax, rdi ; ret
0x000000000012ae85 : add rbx, 8 ; test rdi, rdi ; jne 0x12ae87 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000037658 : add rbx, r14 ; mov rdx, r13 ; mov rsi, rbx ; mov rdi, r12 ; call r15
0x00000000000a0502 : add rcx, 1 ; movzx edx, byte ptr [rcx] ; test dl, dl ; jne 0xa0509 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x0000000000098c05 : add rcx, 1 ; sub rsi, 1 ; jne 0x98c0f ; xor edi, edi ; mov rax, rdi ; ret
0x000000000003ce66 : add rcx, qword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000016a146 : add rcx, qword ptr [rdi] ; test dword ptr [rdx - 0x7ffffffd], esi ; cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x000000000006da11 : add rcx, rdi ; jmp rcx
0x000000000014d694 : add rdi, 0x10 ; cmp esi, ecx ; jle 0x14d5e1 ; ret
0x000000000013565c : add rdi, 0x10 ; jmp rcx
0x000000000014d44b : add rdi, 0x10 ; sub edx, eax ; cmp edx, ecx ; jle 0x14d379 ; movsxd rax, ecx ; ret
0x000000000012e64e : add rdi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000001307e9 : add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x00000000001307a1 : add rdi, 0x23b0 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x0000000000138133 : add rdi, 0x58 ; jmp rcx
0x0000000000137853 : add rdi, 0x68 ; jmp rcx
0x0000000000134ab6 : add rdi, 0xc8 ; jmp rcx
0x00000000000a0750 : add rdi, 1 ; movsx ecx, byte ptr [rdi] ; test cl, cl ; jne 0xa0755 ; xor eax, eax ; ret
0x00000000000a07a7 : add rdi, 1 ; movsx r8d, byte ptr [rdi] ; test r8b, r8b ; jne 0xa079f ; xor eax, eax ; ret
0x00000000000ac794 : add rdi, 4 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0xac79c ; xor eax, eax ; ret
0x0000000000170dae : add rdi, qword ptr [r13 + 0x10] ; call r12
0x00000000000e8d5e : add rdi, r11 ; jmp rdi
0x00000000001536c7 : add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000016d760 : add rdi, rdx ; lea r11, qword ptr [rip + 0x25d86] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016d6e6 : add rdi, rdx ; lea r11, qword ptr [rip + 0x25e00] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016d657 : add rdi, rdx ; lea r11, qword ptr [rip + 0x25e8f] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016d44c : add rdi, rdx ; lea r11, qword ptr [rip + 0x2609a] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016d31a : add rdi, rdx ; lea r11, qword ptr [rip + 0x261cc] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016d254 : add rdi, rdx ; lea r11, qword ptr [rip + 0x26292] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016d1d6 : add rdi, rdx ; lea r11, qword ptr [rip + 0x26310] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016d13f : add rdi, rdx ; lea r11, qword ptr [rip + 0x263a7] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016cf43 : add rdi, rdx ; lea r11, qword ptr [rip + 0x265a3] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016ce12 : add rdi, rdx ; lea r11, qword ptr [rip + 0x266d4] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016cd11 : add rdi, rdx ; lea r11, qword ptr [rip + 0x267d5] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016c130 : add rdi, rdx ; lea r11, qword ptr [rip + 0x27276] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016c0b6 : add rdi, rdx ; lea r11, qword ptr [rip + 0x272f0] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016c027 : add rdi, rdx ; lea r11, qword ptr [rip + 0x2737f] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016be1c : add rdi, rdx ; lea r11, qword ptr [rip + 0x2758a] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016bcea : add rdi, rdx ; lea r11, qword ptr [rip + 0x276bc] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016bc24 : add rdi, rdx ; lea r11, qword ptr [rip + 0x27782] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016bba6 : add rdi, rdx ; lea r11, qword ptr [rip + 0x27800] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016bb0f : add rdi, rdx ; lea r11, qword ptr [rip + 0x27897] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016b913 : add rdi, rdx ; lea r11, qword ptr [rip + 0x27a93] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016b7e2 : add rdi, rdx ; lea r11, qword ptr [rip + 0x27bc4] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016b6d3 : add rdi, rdx ; lea r11, qword ptr [rip + 0x27cd3] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000126884 : add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x00000000001b2f98 : add rdi, rsi ; call rsi
0x00000000000a0c67 : add rdx, rax ; jl 0xa0cd8 ; add rax, rdi ; ret
0x00000000000a0c66 : add rdx, rax ; jl 0xa0cd9 ; add rax, rdi ; ret
0x00000000000a0c77 : add rdx, rax ; jl 0xa0cda ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000000a0c97 : add rdx, rax ; jl 0xa0cda ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00000000000a0cb7 : add rdx, rax ; jl 0xa0cda ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000033457 : add rdx, rdi ; jmp rdx
0x000000000013e6c2 : add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x00000000001536c4 : add rsi, rdx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000088e48 : add rsp, 0x10 ; mov rsi, r12 ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x0000000000070bb0 : add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000090428 : add rsp, 0x58 ; mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007fe5f : add rsp, 8 ; mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008822e : add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000012fe08 : add rsp, 8 ; mov rdi, rbp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000073670 : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000034d83 : addps xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x0000000000034d82 : addsd xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x000000000007b7ce : and al, 0 ; add byte ptr [rax - 0x77], cl ; scasd eax, dword ptr [rdi] ; nop ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000000a3611 : and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000001b35f8 : and al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pushfq ; add dword ptr [rax], eax ; xor byte ptr [rcx], 0xf7 ; jmp qword ptr [rsi]
0x00000000001a2b60 : and al, 0 ; add byte ptr [rax], al ; or al, 0x92 ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; std ; jmp rdi
0x0000000000105563 : and al, 0x10 ; add byte ptr [rdi], cl ; test dword ptr [rsi - 0x41000006], esi ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00000000000f8d4d : and al, 0x10 ; add cl, byte ptr [rdi] ; ret 0x8348
0x00000000000a0852 : and al, 0x10 ; mov byte ptr [rdi + 4], cl ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a0842 : and al, 0x10 ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a07fa : and al, 0x10 ; mov dword ptr [rdi], eax ; mov eax, dword ptr [rsp + 0x18] ; mov dword ptr [rdi + 4], eax ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000007da78 : and al, 0x10 ; mov rdi, qword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000007de9e : and al, 0x10 ; mov rdi, qword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000038651 : and al, 0x10 ; mov rdi, r12 ; call r15
0x00000000000768d6 : and al, 0x10 ; mov rdi, r12 ; call rbx
0x000000000012e71a : and al, 0x10 ; mov rdi, rbp ; call r14
0x00000000000ad45a : and al, 0x10 ; mov rsi, qword ptr [rsp + 0x18] ; mov rdx, r13 ; mov rdi, rbp ; call rbx
0x00000000000ad71a : and al, 0x10 ; mov rsi, qword ptr [rsp + 0x18] ; mov rdx, r14 ; mov rdi, rbp ; call rbx
0x00000000001226d6 : and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x00000000000a0872 : and al, 0x10 ; mov word ptr [rdi + 4], r11w ; mov byte ptr [rdi + 6], r8b ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a0862 : and al, 0x10 ; mov word ptr [rdi + 4], r11w ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000008822c : and al, 0x18 ; add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x00000000000a0800 : and al, 0x18 ; mov dword ptr [rdi + 4], eax ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000145d13 : and al, 0x18 ; mov esi, 0x40 ; mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000013a4b3 : and al, 0x18 ; mov r8, r15 ; mov rcx, r14 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000131b8b : and al, 0x18 ; mov rcx, qword ptr [rsp + 8] ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000769b2 : and al, 0x18 ; mov rdi, r12 ; call rbx
0x00000000000ad45f : and al, 0x18 ; mov rdx, r13 ; mov rdi, rbp ; call rbx
0x00000000000ad71f : and al, 0x18 ; mov rdx, r14 ; mov rdi, rbp ; call rbx
0x000000000007da73 : and al, 0x18 ; mov rsi, qword ptr [rsp + 0x10] ; mov rdi, qword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x00000000000bb416 : and al, 0x18 ; xor r8d, r8d ; mov rcx, r13 ; lea r9, qword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x0000000000037606 : and al, 0x1e ; mov rdi, r12 ; call r15
0x0000000000027a87 : and al, 0x20 ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000025349 : and al, 0x20 ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000023a21 : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r14
0x00000000000238bc : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x00000000000c984a : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000877f3 : and al, 0x28 ; mov rdi, r12 ; call rax
0x00000000000ad5ec : and al, 0x28 ; mov rdi, rbp ; call rbx
0x0000000000024d65 : and al, 0x28 ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000002818c : and al, 0x28 ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000000bb421 : and al, 0x30 ; mov rdi, qword ptr [rax] ; call r14
0x000000000013846d : and al, 0x30 ; mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000023a1c : and al, 0x30 ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, qword ptr [rsp + 0x20] ; call r14
0x0000000000023f7a : and al, 0x30 ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000026c1d : and al, 0x30 ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00000000000e4c4e : and al, 0x30 ; movsxd rax, dword ptr [rdx + rax*4] ; mov rbp, rsi ; mov qword ptr [rsp + 0x28], rdi ; add rax, rdx ; jmp rax
0x0000000000136b8f : and al, 0x38 ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x136bad ; mov rdi, rbp ; call rax
0x0000000000136b8e : and al, 0x38 ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x136bae ; mov rdi, rbp ; call rax
0x00000000000241b4 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r15
0x00000000000243e5 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000000bc1a2 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000134df5 : and al, 0x38 ; mov rdi, r12 ; mov rcx, qword ptr [rsp + 0x30] ; call rcx
0x00000000000238b7 : and al, 0x38 ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000027db3 : and al, 0x38 ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000025cda : and al, 0x38 ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000023f7f : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000023c41 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x000000000002534e : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x000000000002667d : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000243e0 : and al, 0x40 ; mov rsi, qword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000000260d6 : and al, 0x48 ; add byte ptr [rdi], cl ; test byte ptr [rdx], ah ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf08
0x0000000000037b89 : and al, 0x48 ; mov ebp, dword ptr [rsp + 0x50] ; nop ; mov rsi, r13 ; mov rdi, r14 ; mov rdx, rbp ; call r15
0x000000000013699e : and al, 0x48 ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x1369bc ; mov rdi, r12 ; call rax
0x000000000013699d : and al, 0x48 ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x1369bd ; mov rdi, r12 ; call rax
0x0000000000027db8 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000025cdf : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000002583e : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000000241af : and al, 0x48 ; mov rsi, qword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call r15
0x0000000000024bd2 : and al, 0x48 ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000023c3c : and al, 0x48 ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000026678 : and al, 0x48 ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000037639 : and al, 0x4a ; lea ebx, dword ptr [rax + rsi] ; nop ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x000000000013500f : and al, 0x50 ; mov rdi, r12 ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x0000000000025839 : and al, 0x50 ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000037b8d : and al, 0x50 ; nop ; mov rsi, r13 ; mov rdi, r14 ; mov rdx, rbp ; call r15
0x0000000000076b7b : and al, 0x50 ; push 0 ; lea r9, qword ptr [rbp - 0x38] ; mov rcx, r13 ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x0000000000197110 : and al, 0x68 ; idiv bh ; movsb byte ptr [rdi], byte ptr [rsi] ; jnp 0x197123 ; add byte ptr [rbp + rbp*2 - 0xa], dh ; call rsp
0x000000000008847b : and al, 0x68 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000ad323 : and al, 0x70 ; mov rdi, rbp ; call rbx
0x00000000000b5983 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov gs, word ptr [rbx - 0x7cfffff8] ; ret
0x000000000013ebe8 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; ror byte ptr [rdi], 0x11 ; and al, 0x28 ; call rdx
0x00000000001a297c : and al, 0x90 ; add byte ptr [rax], al ; ror dl, 1 ; in eax, dx ; call rdi
0x0000000000122518 : and al, 0x98 ; add byte ptr [rax], al ; test rax, rax ; je 0x122532 ; mov rdi, rbx ; call rax
0x00000000000f8ca5 : and al, 0xb0 ; add cl, byte ptr [rdi] ; ret 0xfc3
0x000000000013792f : and al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x000000000011f6b8 : and al, 0xb9 ; add byte ptr [rax + rax], al ; add byte ptr [rcx + rcx*4 - 6], cl ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000007d3a3 : and al, 0xc ; mov rdi, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000000e7873 : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x000000000003531e : and al, 0xe8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x000000000003528f : and al, 0xe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x00000000000352cc : and al, 0xe8 ; fld xword ptr [rsp - 0x18] ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x000000000003532b : and al, 0xe8 ; fstp xword ptr [rdi] ; ret
0x000000000003528b : and al, 0xec ; fld xword ptr [rsp - 0x18] ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x000000000008aead : and al, 0xf ; test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000008a18b : and al, 0xf ; test dh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x0000000000035327 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x00000000000353f0 : and al, 0xf0 ; mov dword ptr [rdi], edx ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000139729 : and al, 8 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x000000000006f02e : and al, 8 ; je 0x6f060 ; lea rsi, qword ptr [rsp + 8] ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000013dec7 : and al, 8 ; lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000012df6a : and al, 8 ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12df88 ; mov rdi, rsp ; call rax
0x000000000012df69 : and al, 8 ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12df89 ; mov rdi, rsp ; call rax
0x000000000012e055 : and al, 8 ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12e073 ; mov rdi, rsp ; call rax
0x000000000012e054 : and al, 8 ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12e074 ; mov rdi, rsp ; call rax
0x0000000000104230 : and al, 8 ; mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000006f035 : and al, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000013decc : and al, 8 ; mov rdi, r12 ; call qword ptr [rax]
0x00000000001226db : and al, 8 ; mov rdi, r13 ; call r12
0x000000000008417b : and al, 8 ; mov rdi, r14 ; mov qword ptr [rsp + 0x10], r14 ; call qword ptr [rax]
0x00000000000757c1 : and al, 8 ; mov rdi, r15 ; call rax
0x000000000013d487 : and al, 8 ; mov rdi, rbx ; call qword ptr [rax]
0x00000000001304e9 : and al, 8 ; mov rdx, qword ptr [rdx + 0x38] ; test rdx, rdx ; je 0x130507 ; mov rdi, rbp ; call rdx
0x0000000000131b90 : and al, 8 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000131a83 : and al, 8 ; mov rdx, rbx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000391f3 : and al, 8 ; mov rsi, qword ptr [r15] ; mov rdi, qword ptr [r12] ; call r14
0x00000000000393fa : and al, 8 ; mov rsi, r15 ; mov rdi, r12 ; call r14
0x000000000012cdce : and al, 8 ; xor edx, edx ; mov rsi, r12 ; mov rdi, rbx ; mov rcx, r13 ; call r15
0x0000000000126203 : and al, byte ptr [rbx + 0x2bafff8] ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xf3c3
0x0000000000197e39 : and bh, al ; dec esp ; rol dword ptr [rcx], 0 ; movsb byte ptr [rdi], byte ptr [rsi] ; and bh, al ; jmp rsp
0x00000000001af070 : and bl, al ; cmc ; jmp qword ptr [rdi]
0x0000000000090e3c : and bl, al ; nop ; bsf eax, eax ; sub rdx, rax ; jbe 0x90e61 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000a0c47 : and bl, al ; nop dword ptr [rax] ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x0000000000193f98 : and bl, byte ptr [rdi - 0x614d0004] ; cld ; inc dword ptr [rdx - 0x62] ; cld ; call rdx
0x00000000000a701b : and bl, dh ; movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000a701a : and bl, r14b ; movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000001381d9 : and byte ptr [r8 - 0x77], r9b ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x00000000000aa2a6 : and byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x000000000002534a : and byte ptr [rax - 0x75], cl ; je 0x2537e ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000027a88 : and byte ptr [rax - 0x75], cl ; je 0x27abd ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000001381eb : and byte ptr [rax - 0x75], cl ; jg 0x138229 ; mov eax, 1 ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000024fad : and byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x30 ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000002770e : and byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x48 ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000028699 : and byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x48 ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x000000000013e83c : and byte ptr [rax - 0x77], cl ; ja 0x13e865 ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000001381da : and byte ptr [rax - 0x77], cl ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x00000000001166fb : and byte ptr [rax], al ; jne 0x1166fd ; mov edx, dword ptr [rdi + 0x28] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x00000000000aa2a7 : and byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000001536bf : and byte ptr [rbp + 0x63], cl ; or al, 0x93 ; add rsi, rdx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000153bc5 : and byte ptr [rbp + rcx*4 + 0x1d], cl ; movsxd rdi, edx ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000bbade : and byte ptr [rbp - 0x7cca8740], al ; clc ; sbb dword ptr [rdi + 0x18], edi ; mov rax, rbx ; pop rbx ; ret
0x000000000008b4e8 : and byte ptr [rbx + 0x50], 0xfe ; mov qword ptr [rbx + 0x40], r8 ; movsxd rdi, esi ; mov dword ptr [rbx + 0x30], eax ; mov qword ptr [rbx], rdi ; call rcx
0x0000000000193314 : and byte ptr [rbx + rdi*8 - 0x469ff01], dl ; jmp rax
0x0000000000033700 : and byte ptr [rcx - 0x17c7dbbc], cl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xfffe
0x000000000004a699 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x00000000001b7cb0 : and byte ptr [rcx - 8], dl ; call rdi
0x0000000000091831 : and byte ptr [rdi + 0x64], dh ; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000091881 : and byte ptr [rdi + 0xb], dh ; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000194308 : and byte ptr [rdi - 0x695f0004], dl ; cld ; jmp qword ptr [rax]
0x00000000001a74f0 : and byte ptr [rdi - 0xf], bl ; call rbx
0x00000000001938fc : and byte ptr [rdi - 4], al ; call qword ptr [rax]
0x00000000001938ec : and byte ptr [rdi - 4], cl ; push qword ptr [rax + 0x70fffc41] ; cld ; inc dword ptr [rax + 0x45] ; cld ; jmp qword ptr [rax]
0x000000000019393c : and byte ptr [rdi], ch ; cld ; push qword ptr [rax + 0x30] ; cld ; inc eax ; xor esp, edi ; call qword ptr [rax]
0x0000000000091671 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000012ffe2 : and byte ptr [rdi], cl ; adc dword ptr [rsi + 8], eax ; ret
0x000000000002dd85 : and byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x00000000000e9658 : and byte ptr [rdi], cl ; test byte ptr [rcx - 0xa000000], dh ; ret
0x000000000011fd2c : and byte ptr [rdi], cl ; test ch, bl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x2e66
0x00000000000a6d19 : and byte ptr [rdi], cl ; test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x000000000016ed40 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000140822 : and byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000000e5b8b : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8548
0x00000000000e5e09 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x854d
0x0000000000129474 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x93c
0x00000000000fff91 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd108
0x00000000000fffe8 : and byte ptr [rdi], cl ; xchg eax, esp ; sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x000000000016e358 : and byte ptr [rdx + 0xa], dh ; vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000013eabc : and byte ptr [rsi + 0x11], dh ; add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000016b77a : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008f833 : and byte ptr [rsi + 0xf], ah ; out dx, eax ; mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000016b775 : and byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000194320 : and byte ptr [rsp + rdi*8 - 0x36c6f01], dl ; inc dword ptr [rax] ; xchg eax, ebx ; cld ; push qword ptr [rax - 0x6e] ; cld ; call rax
0x0000000000104b5a : and cl, byte ptr [rip - 0x9cf0000] ; mov rdi, r15 ; call rbx
0x0000000000078db1 : and dh, 0x7f ; mov ecx, edx ; or ch, 0x80 ; cmp esi, 2 ; cmove edx, ecx ; mov dword ptr [rdi], edx ; ret
0x0000000000170c10 : and dh, 0xf ; je 0x170c41 ; mov eax, dword ptr [rdi - 8] ; cmp eax, dword ptr [rsi - 8] ; jne 0x170d31 ; ret
0x00000000000abbf0 : and dh, 0xf ; je 0xabc21 ; mov eax, dword ptr [rdi + 8] ; cmp eax, dword ptr [rsi + 8] ; jne 0xabd31 ; ret
0x00000000000abc50 : and dh, 0xf ; je 0xabc81 ; mov eax, dword ptr [rdi + 0x18] ; cmp eax, dword ptr [rsi + 0x18] ; jne 0xabd31 ; ret
0x00000000000abcb0 : and dh, 0xf ; je 0xabccd ; mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xabd2d ; ret
0x00000000000abd00 : and dh, 0xf ; je 0xabd1d ; mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xabd2d ; ret
0x00000000000d6967 : and dh, al ; or byte ptr [r9], r8b ; mov byte ptr [rdi], 0x5b ; mov eax, 1 ; ret
0x000000000013e865 : and dh, byte ptr [rcx] ; sar byte ptr [rdx - 1], 0x48 ; mov esi, ebx ; mov rdi, rbp ; call rcx
0x0000000000170be2 : and dl, 0xf ; je 0x170c11 ; mov eax, dword ptr [rdi - 0x10] ; cmp eax, dword ptr [rsi - 0x10] ; jne 0x170d31 ; ret
0x00000000000abbc6 : and dl, 0xf ; je 0xabbef ; mov eax, dword ptr [rdi] ; cmp eax, dword ptr [rsi] ; jne 0xabd2f ; ret
0x00000000000abc26 : and dl, 0xf ; je 0xabc51 ; mov eax, dword ptr [rdi + 0x10] ; cmp eax, dword ptr [rsi + 0x10] ; jne 0xabd31 ; ret
0x00000000000abc86 : and dl, 0xf ; je 0xabcb1 ; mov eax, dword ptr [rdi + 0x20] ; cmp eax, dword ptr [rsi + 0x20] ; jne 0xabd31 ; ret
0x00000000000abcd6 : and dl, 0xf ; je 0xabcfd ; mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0xabd2d ; ret
0x0000000000183d02 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x00000000000362b6 : and dword ptr [rdi + rdx*8], eax ; xor eax, eax ; ret
0x00000000000798e0 : and dword ptr [rdi], 0xffffffcf ; ret
0x00000000000363e8 : and dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000007f27e : and dword ptr [rdi], ecx ; mov dh, 0 ; ret
0x00000000000fe753 : and dword ptr [rdi], esp ; sub al, 0 ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000183d01 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000000ac631 : and eax, 0x1f ; je 0xac69d ; test al, 0xf0 ; jne 0xac66d ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000108d76 : and eax, 0x2d0 ; pop rax ; pop rdi ; call rax
0x0000000000108d6e : and eax, 0x2d4 ; mov dword ptr fs:[0x2d0], eax ; pop rax ; pop rdi ; call rax
0x0000000000122edb : and eax, 0x30 ; lea rdi, qword ptr [rip + 0x2a2815] ; call rax
0x000000000002f5f8 : and eax, 0x30 ; mov rdi, r13 ; call rax
0x000000000006ef9f : and eax, 0x30 ; test rax, rax ; je 0x6efc9 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006f06f : and eax, 0x30 ; test rax, rax ; je 0x6f099 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x00000000000c7c28 : and eax, 0x30 ; test rax, rax ; je 0xc7c56 ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000f80fc : and eax, 0x30 ; test rax, rax ; je 0xf8161 ; xor edx, edx ; xor esi, esi ; mov rdi, rbx ; call rax
0x0000000000034f32 : and eax, 0x80000000 ; movd xmm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x00000000000f224f : and eax, 0x85ffffff ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000000fc504 : and eax, 0xe8ef8948 ; stosd dword ptr [rdi], eax ; xor al, 0xf2 ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000172805 : and eax, 0xff834800 ; add dword ptr [rdi + 3], esi ; ret
0x00000000000fd9b9 : and eax, 0xffffeff0 ; or esi, eax ; xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x00000000000fdeec : and eax, 0xfffffecf ; or eax, 0x30 ; mov dword ptr [rdi + 8], eax ; ret
0x0000000000087929 : and eax, 0xfffffff8 ; test byte ptr [rdi + rax - 8], 1 ; je 0x8794e ; sub rax, 8 ; ret
0x000000000015b9c9 : and eax, dword ptr [rdi + 0x63490003] ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000368a8 : and eax, dword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000008f75e : and eax, ecx ; je 0x8f92f ; bsr rax, rax ; add rax, rdi ; ret
0x0000000000033ef2 : and eax, ecx ; xor rax, rdx ; movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x33ee4 ; ret
0x0000000000034f1a : and eax, edx ; movd xmm1, eax ; movss dword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x0000000000034bcb : and eax, edx ; movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000034b94 : and eax, edx ; movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x00000000000a0cf8 : and eax, edx ; test eax, eax ; je 0xa0cdc ; bsr eax, eax ; add rax, rdi ; ret
0x000000000011cec1 : and ebx, dword ptr [rcx + 0x2a] ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rdi], -0x7b ; ret
0x0000000000077160 : and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x0000000000029b04 : and ecx, dword ptr [rdi] ; mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1a76
0x0000000000139cb3 : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; xchg eax, ebp ; ret 0x28
0x0000000000129f16 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x2c3c
0x0000000000100f42 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x00000000000367be : and ecx, dword ptr [rdx + rax*8] ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x0000000000035287 : and ecx, ecx ; mov dword ptr [rsp - 0x14], ecx ; fld xword ptr [rsp - 0x18] ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x0000000000035286 : and ecx, r9d ; mov dword ptr [rsp - 0x14], ecx ; fld xword ptr [rsp - 0x18] ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x000000000007fa52 : and edi, 0xfffffff8 ; cmp rdx, rdi ; je 0x7f9e6 ; nop ; xor eax, eax ; ret
0x00000000000f6f79 : and edi, 0xfffffff8 ; sub rcx, rdi ; add ecx, 0x50 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000362de : and edi, 0xfffffff8 ; sub rcx, rdi ; sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000108f03 : and edi, esi ; or rax, rdi ; ret
0x00000000001329ab : and edx, 0x7f ; movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x00000000000d69d0 : and edx, 4 ; je 0xd6976 ; mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x00000000000352c8 : and edx, eax ; mov dword ptr [rsp - 0x18], edx ; fld xword ptr [rsp - 0x18] ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x0000000000034c36 : and edx, eax ; or rdi, rdx ; movq xmm1, rdi ; movapd xmm0, xmm1 ; ret
0x00000000000352c7 : and edx, r8d ; mov dword ptr [rsp - 0x18], edx ; fld xword ptr [rsp - 0x18] ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x000000000002d9d1 : and esi, dword ptr [rdi + 0x10] ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000008f9e2 : and esi, eax ; je 0x8f92f ; bsr rax, rsi ; add rax, rdi ; ret
0x000000000008f7ec : and esi, ecx ; je 0x8f930 ; bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x0000000000183a6a : and esp, dword ptr [rcx - 0x65] ; adc byte ptr [rdi], dl ; pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000362b5 : and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000363e7 : and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000ac630 : and rax, 0x1f ; je 0xac69e ; test al, 0xf0 ; jne 0xac66e ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000087928 : and rax, 0xfffffffffffffff8 ; test byte ptr [rdi + rax - 8], 1 ; je 0x8794f ; sub rax, 8 ; ret
0x00000000000368a7 : and rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000008f75d : and rax, rcx ; je 0x8f930 ; bsr rax, rax ; add rax, rdi ; ret
0x0000000000033ef1 : and rax, rcx ; xor rax, rdx ; movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x33ee5 ; ret
0x0000000000034bca : and rax, rdx ; movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000034b93 : and rax, rdx ; movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x00000000000367bd : and rcx, qword ptr [rdx + rax*8] ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x00000000000f6f78 : and rdi, 0xfffffffffffffff8 ; sub rcx, rdi ; add ecx, 0x50 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000362dd : and rdi, 0xfffffffffffffff8 ; sub rcx, rdi ; sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000108f02 : and rdi, rsi ; or rax, rdi ; ret
0x0000000000034c35 : and rdx, rax ; or rdi, rdx ; movq xmm1, rdi ; movapd xmm0, xmm1 ; ret
0x000000000008f9e1 : and rsi, rax ; je 0x8f930 ; bsr rax, rsi ; add rax, rdi ; ret
0x000000000008f7eb : and rsi, rcx ; je 0x8f931 ; bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x0000000000097e0a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x0000000000090de0 : bsf eax, eax ; add rax, rdi ; ret
0x0000000000090df0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000090e00 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000090dd0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x0000000000090d1f : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000098003 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000090e10 : bsf eax, eax ; sub rdx, rax ; jbe 0x90e5b ; add rax, rdi ; ret
0x0000000000090e20 : bsf eax, eax ; sub rdx, rax ; jbe 0x90e5d ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000090e30 : bsf eax, eax ; sub rdx, rax ; jbe 0x90e5d ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000090e40 : bsf eax, eax ; sub rdx, rax ; jbe 0x90e5d ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000ab043 : bsf ecx, edx ; cmp rax, rcx ; ja 0xab06f ; sub rdi, 0x10 ; add rax, rdi ; ret
0x00000000000a10fc : bsf edx, eax ; movzx eax, byte ptr [rdi + rdx] ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000008dbc2 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x000000000008d431 : bsf edx, edx ; movzx ecx, byte ptr [rsi + rdx] ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000098120 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000091a55 : bsf rax, rdi ; cmove rax, rdx ; add eax, 1 ; ret
0x00000000000a132f : bsf rcx, rdi ; movzx eax, byte ptr [rax + rcx] ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000000ab042 : bsf rcx, rdx ; cmp rax, rcx ; ja 0xab070 ; sub rdi, 0x10 ; add rax, rdi ; ret
0x00000000000a10fb : bsf rdx, rax ; movzx eax, byte ptr [rdi + rdx] ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000008dbc1 : bsf rdx, rdx ; add rax, rdx ; sub rax, rdi ; ret
0x000000000008d430 : bsf rdx, rdx ; movzx ecx, byte ptr [rsi + rdx] ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x00000000000a0d61 : bsr eax, eax ; add rax, rdi ; add rax, r8 ; ret
0x000000000008f767 : bsr eax, eax ; add rax, rdi ; ret
0x00000000000a0c30 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x00000000000a0c40 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x00000000000a0c50 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x00000000000a0cb0 : bsr eax, eax ; sub rdx, 0x10 ; add rdx, rax ; jl 0xa0ce1 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000a0c90 : bsr eax, eax ; sub rdx, 0x20 ; add rdx, rax ; jl 0xa0ce1 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00000000000a0c70 : bsr eax, eax ; sub rdx, 0x30 ; add rdx, rax ; jl 0xa0ce1 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000000a0c60 : bsr eax, eax ; sub rdx, 0x40 ; add rdx, rax ; jl 0xa0cdf ; add rax, rdi ; ret
0x000000000008f9eb : bsr eax, esi ; add rax, rdi ; ret
0x000000000008f7f5 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000008f766 : bsr rax, rax ; add rax, rdi ; ret
0x000000000008f9ea : bsr rax, rsi ; add rax, rdi ; ret
0x000000000008f7f4 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000013e78a : bswap eax ; cdqe ; mov qword ptr [rsi], rax ; mov qword ptr [rdi + 0x18], rdx ; mov eax, 1 ; ret
0x0000000000137986 : bswap eax ; mov dword ptr [rdi + 0x48], eax ; mov eax, 1 ; ret
0x00000000001378e3 : bswap eax ; mov dword ptr [rdi + 0x54], eax ; mov eax, 1 ; ret
0x00000000001379b3 : bswap eax ; mov dword ptr [rdi + 0x58], eax ; mov eax, 1 ; ret
0x000000000013e6fa : bswap edx ; mov dword ptr [rax - 4], edx ; mov qword ptr [rdi + 0x18], rax ; mov eax, 1 ; ret
0x000000000013e72a : bswap edx ; mov dword ptr [rsi], edx ; mov qword ptr [rdi + 0x18], rax ; mov eax, 1 ; ret
0x000000000008dd83 : bts edx, ebx ; bsf rdx, rdx ; add rax, rdx ; sub rax, rdi ; ret
0x000000000008dd82 : bts rdx, r11 ; bsf rdx, rdx ; add rax, rdx ; sub rax, rdi ; ret
0x000000000019897b : call qword ptr [rdi + rcx - 0x3c9bfffe]
0x00000000001869cb : call qword ptr [rdi - 0x1f000c50]
0x0000000000187507 : call qword ptr [rdi]
0x0000000000194a7b : call qword ptr [rsp + rdi*2 + 0x1d940000]
0x00000000000238c4 : call rdi
0x0000000000105043 : cdq ; add eax, 0xf6310000 ; mov rdi, r13 ; call rbx
0x00000000001199ba : cdq ; mov rax, rdi ; ret
0x00000000000566d3 : cdq ; scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add rsp, 0xd8 ; ret
0x000000000013e78c : cdqe ; mov qword ptr [rsi], rax ; mov qword ptr [rdi + 0x18], rdx ; mov eax, 1 ; ret
0x0000000000078d8b : clc ; add al, bl ; nop ; mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000078c7b : clc ; add al, bl ; nop ; mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x00000000000f7ee2 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsi ; js 0xf7f42 ; mov dword ptr [rdi + 0x100], edx ; ret
0x0000000000195d3d : clc ; add byte ptr [rax], al ; in al, 0x67 ; out dx, eax ; inc dword ptr [rax + rdi*8 + 0x6a140000] ; out dx, eax ; jmp rsp
0x00000000001a9165 : clc ; add byte ptr [rax], al ; sbb byte ptr [rdi - 0xe], ah ; call qword ptr [rax]
0x000000000013d1b4 : clc ; add cl, byte ptr [rdi] ; xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x0000000000130da8 : clc ; add cl, byte ptr [rdi] ; xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000013e126 : clc ; add cl, byte ptr [rdi] ; xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000198705 : clc ; add dword ptr [rax], eax ; add al, 0x5e ; stc ; inc dword ptr [rax + rdi*8 + 0x66240001] ; stc ; call rsp
0x000000000012ff84 : clc ; add dword ptr [rbp + 0x38], esi ; mov dword ptr [rsi], 7 ; mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x000000000013d371 : clc ; add dword ptr [rbp - 0x14], esi ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000011c152 : clc ; add dword ptr [rcx - 0x73], eax ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8b48
0x000000000009868b : clc ; add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c2ab0 : clc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x00000000000fc57c : clc ; add dword ptr [rdi], ecx ; test byte ptr [rbx + rax], ch ; add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x0000000000114ada : clc ; add dword ptr [rdi], ecx ; test byte ptr [rsi + 0x31000000], dl ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000aa984 : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x000000000013edad : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000013ec56 : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000001b9942 : clc ; call qword ptr [rdi]
0x00000000001b7c5a : clc ; call rdi
0x0000000000170d0a : clc ; cmp eax, dword ptr [rsi - 8] ; jne 0x170d30 ; mov eax, dword ptr [rdi - 4] ; cmp eax, dword ptr [rsi - 4] ; jne 0x170d30 ; xor eax, eax ; ret
0x0000000000170d09 : clc ; cmp eax, dword ptr [rsi - 8] ; jne 0x170d31 ; mov eax, dword ptr [rdi - 4] ; cmp eax, dword ptr [rsi - 4] ; jne 0x170d31 ; xor eax, eax ; ret
0x000000000007fa54 : clc ; cmp rdx, rdi ; je 0x7f9e4 ; nop ; xor eax, eax ; ret
0x000000000004640c : clc ; dec dword ptr [rdi] ; ret 0x8341
0x000000000013acd9 : clc ; dec dword ptr [rdi] ; test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x000000000007782d : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000198482 : clc ; dec esp ; out 1, eax ; add byte ptr [rdi + rcx*8], dh ; clc ; jmp rsp
0x0000000000197e3a : clc ; dec esp ; rol dword ptr [rcx], 0 ; movsb byte ptr [rdi], byte ptr [rsi] ; and bh, al ; jmp rsp
0x000000000019837a : clc ; inc dword ptr [rdi + rbx*8 + 1] ; add ah, dl ; wait ; clc ; ljmp ptr [rdi + rbx*8 - 0x636bffff] ; clc ; call rsp
0x0000000000150c88 : clc ; ja 0x150c5e ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; vmovdqu xmmword ptr [rdi], xmm0 ; vzeroupper ; ret
0x0000000000150c96 : clc ; ja 0x150c6a ; mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x0000000000150ca2 : clc ; ja 0x150c74 ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000150cac : clc ; ja 0x150c80 ; mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; vzeroupper ; ret
0x000000000016ec40 : clc ; ja 0x16ec16 ; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0 ; vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x000000000016ec4e : clc ; ja 0x16ec24 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; vmovdqu xmmword ptr [rdi], xmm0 ; vzeroupper ; ret
0x000000000016ec5c : clc ; ja 0x16ec30 ; mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x000000000016ec68 : clc ; ja 0x16ec3a ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x000000000016ec72 : clc ; ja 0x16ec46 ; mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; vzeroupper ; ret
0x00000000001b8432 : clc ; jmp qword ptr [rdi]
0x00000000001b6e0a : clc ; jmp rdi
0x0000000000170d0d : clc ; jne 0x170d2d ; mov eax, dword ptr [rdi - 4] ; cmp eax, dword ptr [rsi - 4] ; jne 0x170d2d ; xor eax, eax ; ret
0x0000000000170d0c : clc ; jne 0x170d2e ; mov eax, dword ptr [rdi - 4] ; cmp eax, dword ptr [rsi - 4] ; jne 0x170d2e ; xor eax, eax ; ret
0x00000000001a5978 : clc ; jp 0x1a5978 ; jmp qword ptr [rdi]
0x0000000000197e32 : clc ; lcall ptr [rcx + rax*8 + 0x22640001] ; clc ; dec esp ; rol dword ptr [rcx], 0 ; movsb byte ptr [rdi], byte ptr [rsi] ; and bh, al ; jmp rsp
0x0000000000198382 : clc ; ljmp ptr [rdi + rbx*8 - 0x636bffff] ; clc ; call rsp
0x00000000000a0928 : clc ; mov byte ptr [rdi + 6], 0 ; ret
0x0000000000155117 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155a6b : clc ; mov qword ptr [rdi - 0x15], r11 ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155c6b : clc ; mov qword ptr [rdi - 0x16], r11 ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155e6b : clc ; mov qword ptr [rdi - 0x17], r11 ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001550fb : clc ; mov qword ptr [rdi - 0x18], r10 ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155a3f : clc ; mov qword ptr [rdi - 0x1d], r10 ; mov qword ptr [rdi - 0x15], r11 ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155c3f : clc ; mov qword ptr [rdi - 0x1e], r10 ; mov qword ptr [rdi - 0x16], r11 ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155e3f : clc ; mov qword ptr [rdi - 0x1f], r10 ; mov qword ptr [rdi - 0x17], r11 ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001550cf : clc ; mov qword ptr [rdi - 0x20], r9 ; mov qword ptr [rdi - 0x18], r10 ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155a87 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015a9d7 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000155c87 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015a947 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000155e87 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015a8b7 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000155133 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000009192e : clc ; mov qword ptr [rdi], rcx ; ret
0x0000000000150c9d : clc ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x000000000016dc9c : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x00000000000914ba : clc ; mov qword ptr [rdi], rsi ; ret
0x000000000016c80f : clc ; mov rax, qword ptr [rdi - 8] ; cmp rcx, rax ; jne 0x16ccd3 ; xor eax, eax ; ret
0x000000000016c80e : clc ; mov rax, qword ptr [rdi - 8] ; cmp rcx, rax ; jne 0x16ccd4 ; xor eax, eax ; ret
0x000000000016d9df : clc ; mov rax, qword ptr [rdi - 8] ; cmp rcx, rax ; jne 0x16db13 ; xor eax, eax ; ret
0x000000000016d9de : clc ; mov rax, qword ptr [rdi - 8] ; cmp rcx, rax ; jne 0x16db14 ; xor eax, eax ; ret
0x00000000000f541a : clc ; mov rcx, r14 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call 0xf169f
0x000000000013a4b7 : clc ; mov rcx, r14 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000914b2 : clc ; mov rsi, qword ptr [rsi] ; mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x00000000001b92e8 : clc ; movsd dword ptr [rdi], dword ptr [rsi] ; clc ; call qword ptr [rbx]
0x0000000000109050 : clc ; or byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000010907a : clc ; or byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000087daf : clc ; or dword ptr [rdi - 0x5f], esi ; movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x00000000000f8067 : clc ; popcnt rdx, rdx ; add eax, edx ; cmp rdi, rsi ; ja 0xf806e ; ret
0x000000000019847a : clc ; push qword ptr [rdi - 0x311bffff] ; clc ; dec esp ; out 1, eax ; add byte ptr [rdi + rcx*8], dh ; clc ; jmp rsp
0x00000000001ad568 : clc ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000000038fc : clc ; salc ; jb 0x3980 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00000000000bbae4 : clc ; sbb dword ptr [rdi + 0x18], edi ; mov rax, rbx ; pop rbx ; ret
0x00000000001ae948 : clc ; scasd eax, dword ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x0000000000048e8a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000006d8dc : clc ; sub dword ptr [rdi], ecx ; xchg dword ptr [rax + rax + 0x63480000], ecx ; add al, 0x86 ; add rax, rsi ; jmp rax
0x00000000000f71ee : clc ; sub rcx, rdi ; add ecx, 0x150 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000f6f7b : clc ; sub rcx, rdi ; add ecx, 0x50 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000362e0 : clc ; sub rcx, rdi ; sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000008792b : clc ; test byte ptr [rdi + rax - 8], 1 ; je 0x8794c ; sub rax, 8 ; ret
0x0000000000097e05 : clc ; test eax, eax ; je 0x97e2e ; bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x0000000000183cf8 : cld ; adc ch, byte ptr [rip + 0x8acc8c6] ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000019e054 : cld ; add byte ptr [rax], r8b ; shr rdx, 1 ; jmp rdi
0x000000000016d8e3 : cld ; cmp ecx, dword ptr [rdi - 4] ; jne 0x16db22 ; xor eax, eax ; ret
0x000000000016d8e2 : cld ; cmp ecx, dword ptr [rdi - 4] ; jne 0x16db23 ; xor eax, eax ; ret
0x0000000000185e7a : cld ; dec dword ptr [rax - 0x42] ; cld ; ljmp ptr [rax - 0x41] ; cld ; dec dword ptr [rax] ; scasd eax, dword ptr [rdi] ; cld ; lcall ptr [rax] ; ret 0xfffc
0x0000000000185e82 : cld ; dec dword ptr [rax] ; scasd eax, dword ptr [rdi] ; cld ; lcall ptr [rax] ; ret 0xfffc
0x000000000019970a : cld ; dec esp ; adc eax, dword ptr [rcx] ; add byte ptr [rdi + rdi*4 - 4], dh ; jmp rsp
0x0000000000193c9e : cld ; inc dword ptr [rdx + 0x6e] ; cld ; push qword ptr [rdx + 0x22fffc6d] ; insd dword ptr [rdi], dx ; cld ; call qword ptr [rdx + 0x22fffc6c]
0x0000000000187111 : cld ; lcall ptr [rdi - 4] ; jmp qword ptr [rcx]
0x00000000001870b5 : cld ; lcall ptr [rdi] ; out dx, al ; call qword ptr [rax]
0x0000000000185e7e : cld ; ljmp ptr [rax - 0x41] ; cld ; dec dword ptr [rax] ; scasd eax, dword ptr [rdi] ; cld ; lcall ptr [rax] ; ret 0xfffc
0x00000000001558a2 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155aa5 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155ca5 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155ea5 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000091936 : cld ; mov dword ptr [rdi], ecx ; ret
0x0000000000150ca8 : cld ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x000000000016dcae : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000000914c8 : cld ; mov dword ptr [rdi], esi ; ret
0x000000000016c2b3 : cld ; mov eax, dword ptr [rdi - 4] ; cmp ecx, eax ; jne 0x16ccdd ; xor eax, eax ; ret
0x000000000016c2b2 : cld ; mov eax, dword ptr [rdi - 4] ; cmp ecx, eax ; jne 0x16ccde ; xor eax, eax ; ret
0x00000000000914c2 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000013e6fe : cld ; mov qword ptr [rdi + 0x18], rax ; mov eax, 1 ; ret
0x00000000001552da : cld ; mov qword ptr [rdi - 0x11], r11 ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001554ba : cld ; mov qword ptr [rdi - 0x12], r11 ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015569a : cld ; mov qword ptr [rdi - 0x13], r11 ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015587a : cld ; mov qword ptr [rdi - 0x14], r11 ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015549e : cld ; mov qword ptr [rdi - 0x1a], r10 ; mov qword ptr [rdi - 0x12], r11 ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015567e : cld ; mov qword ptr [rdi - 0x1b], r10 ; mov qword ptr [rdi - 0x13], r11 ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015585e : cld ; mov qword ptr [rdi - 0x1c], r10 ; mov qword ptr [rdi - 0x14], r11 ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001554d6 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ab66 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001556b6 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015aae6 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155896 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015aa66 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001552f6 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015abe6 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000002c176 : cld ; or al, 0xf ; xchg dword ptr [rdx], edx ; add dword ptr [rax], eax ; add byte ptr [rdi + 0x63], cl ; add al, 0x8b ; add r8, r11 ; jmp r8
0x0000000000199702 : cld ; push qword ptr [rbx + rdx - 0x61cbffff] ; cld ; dec esp ; adc eax, dword ptr [rcx] ; add byte ptr [rdi + rdi*4 - 4], dh ; jmp rsp
0x0000000000193ca2 : cld ; push qword ptr [rdx + 0x22fffc6d] ; insd dword ptr [rdi], dx ; cld ; call qword ptr [rdx + 0x22fffc6c]
0x00000000001a6454 : cld ; retf 0 ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x0000000000182f35 : cld ; std ; mov ebp, esi ; sub dword ptr [rdi], ecx ; push rbx ; xchg eax, edx ; jae 0x182f22 ; push rsi ; pop rdx ; je 0x182f17 ; ret 0xacfc
0x000000000016dca6 : cli ; add al, 0x72 ; or al, 0x8b ; mov ecx, dword ptr ss:[rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000009191c : cli ; add al, 0x73 ; adc eax, dword ptr [rax + 0x157701fa] ; jb 0x91936 ; mov byte ptr [rdi], cl ; ret
0x000000000016e62d : cli ; add al, 0x73 ; cmp r10b, 1 ; ja 0x16e699 ; jb 0x16e64d ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000016ec32 : cli ; add al, 0x73 ; xor eax, 0x7701fa80 ; cmp dh, byte ptr [rdx + 2] ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000001507cd : cli ; add al, 0x73 ; xor eax, dword ptr [rax + 0x3b7701fa] ; jb 0x1507ed ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000195d7d : cli ; add byte ptr [rax], al ; in al, 0x70 ; out dx, eax ; lcall ptr [rdx + rdi*8 + 0x71940000] ; out dx, eax ; call rsp
0x0000000000075847 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000000d96b7 : cli ; add cl, byte ptr [rdi] ; test cl, al ; add al, 0 ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000000aaa22 : cli ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x000000000013d405 : cli ; add cl, byte ptr [rdi] ; xchg eax, esp ; rol byte ptr [rbx + 0x597401fa], 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000016e38e : cli ; add dh, byte ptr [rdx + 8] ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000000bb63a : cli ; add dh, byte ptr [rdx + rbp*8 - 0x75] ; push rsi ; or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x29], dh ; ret
0x0000000000091921 : cli ; add dword ptr [rdi + 0x15], esi ; jb 0x91931 ; mov byte ptr [rdi], cl ; ret
0x00000000000914a2 : cli ; add dword ptr [rdi + 0x26], esi ; jb 0x914b8 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000150c7f : cli ; add dword ptr [rdi + 0x2c], esi ; jb 0x150c92 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000016ec37 : cli ; add dword ptr [rdi + 0x3a], esi ; jb 0x16ec4a ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000001507d2 : cli ; add dword ptr [rdi + 0x3b], esi ; jb 0x1507e8 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000016e632 : cli ; add dword ptr [rdi + 0x53], esi ; jb 0x16e648 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000016e39b : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000016dccc : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000091830 : cli ; and byte ptr [rdi + 0x64], dh ; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000091880 : cli ; and byte ptr [rdi + 0xb], dh ; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000016e357 : cli ; and byte ptr [rdx + 0xa], dh ; vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000100f41 : cli ; and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x000000000019c96a : cli ; call qword ptr [rdi]
0x0000000000079521 : cli ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; lea esp, dword ptr [rdx + rdi*8 - 1] ; xor eax, eax ; pop rbx ; ret
0x0000000000076fd8 : cli ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000077c28 : cli ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000018a05a : cli ; dec dword ptr [rax - 0xf000554] ; stosd dword ptr [rdi], eax ; cli ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; cli ; call qword ptr [rax]
0x00000000001194b2 : cli ; dec dword ptr [rdi] ; add byte ptr [rax], al ; jbe 0x1194c7 ; jmp 0x456d9
0x0000000000198bba : cli ; inc dword ptr [rdi + rbx + 0x14b40002] ; cli ; call rsp
0x0000000000150bc8 : cli ; ja 0x150beb ; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0 ; vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x0000000000150b78 : cli ; ja 0x150bf4 ; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0 ; vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x000000000016e344 : cli ; jb 0x16e367 ; vmovups zmmword ptr [rdi], zmm2 ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x00000000001507e9 : cli ; jg 0x1507fc ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000016e661 : cli ; jg 0x16e674 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000001a597a : cli ; jmp qword ptr [rdi]
0x0000000000198f92 : cli ; lcall ptr [rdx + rdi - 0x708bfffe] ; cli ; call rsp
0x0000000000198bb2 : cli ; ljmp ptr [rdi + rbx + 2] ; add byte ptr [rbx + rdx], dl ; cli ; inc dword ptr [rdi + rbx + 0x14b40002] ; cli ; call rsp
0x0000000000155ca8 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155ca2 : cli ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000003a8c2 : cli ; mov rax, rdi ; sar rdx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x0000000000075113 : cli ; mov rdi, r12 ; call 0x913b6
0x000000000008a447 : cli ; mov rdi, r8 ; call rax
0x000000000011f6c0 : cli ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000000c3966 : cli ; movsxd rax, dword ptr [r8 + rdi*4] ; add rax, r8 ; jmp rax
0x000000000016e370 : cli ; or byte ptr [rdx + 0xa], dh ; vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000003ce0c : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000d80d8 : cli ; or dh, byte ptr [rbp - 0x42] ; xor eax, eax ; cmp byte ptr [rdi + 0x65], 0 ; setne al ; add eax, eax ; ret
0x000000000008d6d8 : cli ; or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x3145
0x000000000008d67e : cli ; or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xf631
0x00000000001035b9 : cli ; or dword ptr [rdi], ecx ; xchg edi, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000103051 : cli ; or dword ptr [rdi], ecx ; xchg edi, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000018a05e : cli ; push rax ; stosd dword ptr [rdi], eax ; cli ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; cli ; call qword ptr [rax]
0x0000000000091849 : cli ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000016e0ed : cli ; vmovups zmmword ptr [rdi - 0x1c0], zmm14 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000013d246 : cli ; xor eax, eax ; mov dword ptr [rsp], 2 ; mov rdi, rsp ; call rdx
0x00000000001ad10a : cmc ; call qword ptr [rdi]
0x0000000000187ce2 : cmc ; dec dword ptr [rdi + rbp] ; cmc ; push qword ptr [rdi - 0x14000ad1] ; cmc ; call rax
0x0000000000187e5e : cmc ; dec dword ptr [rdi - 0x2b000a32] ; iretd ; cmc ; call rsp
0x0000000000187de2 : cmc ; dec ebx ; sub eax, 0x2dadfff5 ; cmc ; lcall ptr [rdi] ; mov edx, 0xba1ffff5 ; cmc ; jmp rsi
0x00000000001af072 : cmc ; jmp qword ptr [rdi]
0x0000000000187dee : cmc ; lcall ptr [rdi] ; mov edx, 0xb6e6fff5 ; cmc ; lcall ptr [rdx - 0x6b000a47] ; mov bh, 0xf5 ; call rsp
0x0000000000187dea : cmc ; lcall ptr [rdi] ; mov edx, 0xba1ffff5 ; cmc ; jmp rsi
0x000000000015aaea : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015552e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015aae3 : cmc ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155697 : cmc ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0x13], r11 ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001556b3 : cmc ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000e4c56 : cmc ; mov qword ptr [rsp + 0x28], rdi ; add rax, rdx ; jmp rax
0x0000000000038042 : cmc ; mov rdx, rbx ; mov rsi, r13 ; mov rdi, r12 ; call r15
0x00000000000b3bec : cmc ; or eax, 0x590ff300 ; shl byte ptr [rdi + rax*8], 0x22 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000187ce6 : cmc ; push qword ptr [rdi - 0x14000ad1] ; cmc ; call rax
0x0000000000182f39 : cmc ; sub dword ptr [rdi], ecx ; push rbx ; xchg eax, edx ; jae 0x182f1e ; push rsi ; pop rdx ; je 0x182f13 ; ret 0xacfc
0x000000000007f769 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x00000000000038b7 : cmovae ebp, dword ptr [rdi - 0x26] ; int 3
0x000000000007f768 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000004aa80 : cmovae rax, rdi ; ret
0x000000000003aeef : cmovbe edx, eax ; xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000003aeee : cmovbe rdx, r8 ; xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x00000000000ee9ea : cmove eax, dword ptr [rbp - 0xa8] ; mov rdi, rax ; mov rax, qword ptr [rbp - 0xd8] ; call rax
0x0000000000116744 : cmove edx, eax ; xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x0000000000078dbc : cmove edx, ecx ; mov dword ptr [rdi], edx ; ret
0x0000000000116743 : cmove rdx, rax ; xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x000000000008f8f0 : cmovne rcx, rdi ; cmovne rsi, rdx ; bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x000000000009846b : cmovne rdx, rdi ; add rsp, 8 ; mov rbp, rdx ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000079980 : cmovs ecx, dword ptr [rbp - 0x76b7feb0] ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x000000000016dc95 : cmovs ecx, dword ptr [rbx + 0x498b4836] ; clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x00000000000aa069 : cmovs ecx, dword ptr [rcx - 0x12cff8a9] ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000aa049 : cmovs ecx, dword ptr [rcx - 0x12cff9a9] ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000aa029 : cmovs ecx, dword ptr [rcx - 0x12cffaa9] ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a6159 : cmovs ecx, dword ptr [rcx - 0x6f3cf8a9] ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000013e838 : cmovs ecx, dword ptr [rcx - 0x76b7df89] ; ja 0x13e869 ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000014d5d6 : cmp ah, byte ptr [rbx + 0x1f] ; adc dh, byte ptr [rbx - 0xc] ; movsxd rax, ecx ; add rax, rdi ; sub rax, rdx ; ret
0x000000000014d3a2 : cmp ah, byte ptr [rbx - 0x25] ; cmp cl, byte ptr [rax + 0x63] ; leave ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x000000000014d378 : cmp ah, byte ptr [rbx - 0x35] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x000000000014a6fa : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014b25a : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014aa3a : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000014a21a : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000014ad7a : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a55a : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000149d3a : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000014af1a : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000014a07a : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a1b0 : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014aeb0 : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a9d0 : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b1f0 : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a4f0 : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000014a010 : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ad10 : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x00000000001b2f90 : cmp al, 0 ; add byte ptr [rax], al ; cmp al, 0x96 ; add dword ptr [rax], eax ; add rdi, rsi ; call rsi
0x00000000001b6fd8 : cmp al, 0 ; add byte ptr [rax], al ; test dh, dl ; add dword ptr [rax], eax ; mov al, 0x2c ; clc ; jmp rdi
0x00000000001b40e8 : cmp al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; push rax ; jl 0x1b40f5 ; call rcx
0x000000000019a994 : cmp al, 0x10 ; add byte ptr [rax], al ; js 0x19aa17 ; std ; jmp qword ptr [rdi]
0x000000000012ae83 : cmp al, 0x18 ; add rbx, 8 ; test rdi, rdi ; jne 0x12ae89 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000022445 : cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9e9
0x00000000000fd18c : cmp al, 0x2c ; add byte ptr [rdi + rax*8], ah ; or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000d6998 : cmp al, 0x2e ; jne 0xd6975 ; mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x00000000000d6997 : cmp al, 0x2e ; jne 0xd6976 ; mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x000000000013a3fa : cmp al, 0x3a ; add eax, 0xd8894900 ; mov rcx, r12 ; mov rdi, rbp ; xor eax, eax ; call 0x56661
0x00000000000d6994 : cmp al, 0x3d ; je 0xd69f1 ; cmp al, 0x2e ; jne 0xd6979 ; mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x0000000000194d94 : cmp al, 0x8b ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jb 0x194d94 ; call qword ptr [rbx + rcx*4]
0x00000000001b2f94 : cmp al, 0x96 ; add dword ptr [rax], eax ; add rdi, rsi ; call rsi
0x0000000000183cf5 : cmp al, 0xaa ; xchg esp, edi ; adc ch, byte ptr [rip + 0x8acc8c6] ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000000e8d5c : cmp al, 0xbb ; add rdi, r11 ; jmp rdi
0x000000000004867a : cmp al, 0xf0 ; mov qword ptr [rcx + rsi*8], rdi ; add rsi, 1 ; cmp rsi, rdx ; jne 0x48689 ; xor eax, eax ; ret
0x00000000001ad109 : cmp al, 0xf5 ; call qword ptr [rdi]
0x0000000000195d3c : cmp al, 0xf8 ; add byte ptr [rax], al ; in al, 0x67 ; out dx, eax ; inc dword ptr [rax + rdi*8 + 0x6a140000] ; out dx, eax ; jmp rsp
0x00000000001ad565 : cmp al, 1 ; add al, bh ; push rdi ; cmc ; jmp qword ptr [rcx]
0x0000000000105100 : cmp al, 6 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000098bd4 : cmp al, byte ptr [rcx + 0xf] ; mov dh, 1 ; test al, al ; jne 0x98c4c ; mov rax, rdi ; ret
0x0000000000198f95 : cmp al, byte ptr [rdx] ; add byte ptr [rdi + rcx*4 - 6], dh ; call rsp
0x0000000000198f8d : cmp al, byte ptr [rdx] ; add byte ptr [rdi + rcx*4], al ; cli ; lcall ptr [rdx + rdi - 0x708bfffe] ; cli ; call rsp
0x000000000013a3b3 : cmp al, byte ptr [rip - 0x2776b700] ; mov ecx, r12d ; mov rdi, rbp ; call 0x5665e
0x000000000013a3fb : cmp al, byte ptr [rip - 0x2776b700] ; mov rcx, r12 ; mov rdi, rbp ; xor eax, eax ; call 0x56660
0x000000000012eeed : cmp al, byte ptr [rsi] ; add byte ptr [rsi + 1], bh ; mov rdi, r15 ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x0000000000198f8c : cmp al, byte ptr fs:[rdx] ; add byte ptr [rdi + rcx*4], al ; cli ; lcall ptr [rdx + rdi - 0x708bfffe] ; cli ; call rsp
0x0000000000033704 : cmp al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xfffe
0x0000000000072a53 : cmp al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; imul edi, esi, 0xc48148ff ; fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000881c7 : cmp bh, 0xff ; mov rsi, rbp ; mov rdi, rax ; mov rbx, rax ; call 0x844de
0x00000000001381a7 : cmp byte ptr [rax + 1], bh ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000100897 : cmp byte ptr [rax + rax], ch ; mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x0000000000025cdb : cmp byte ptr [rax - 0x75], cl ; je 0x25d0f ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000027db4 : cmp byte ptr [rax - 0x75], cl ; je 0x27de9 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000028d64 : cmp byte ptr [rax - 0x75], cl ; je 0x28d99 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000013d243 : cmp byte ptr [rax - 0x77], cl ; cli ; xor eax, eax ; mov dword ptr [rsp], 2 ; mov rdi, rsp ; call rdx
0x00000000000a5a09 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000002cb19 : cmp byte ptr [rbx + 0x13], dh ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x000000000007e534 : cmp byte ptr [rcx], 0xa ; je 0x7e555 ; cmp rsi, rcx ; jne 0x7e53d ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000007d42c : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbp + 0x20] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000000a5a0a : cmp byte ptr [rcx], al ; sbb rax, -1 ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000034ea7 : cmp byte ptr [rdi + 0x2d], 0 ; add byte ptr [rax + 0x1fe8c17f], al ; ret
0x00000000000d80de : cmp byte ptr [rdi + 0x65], 0 ; setne al ; add eax, eax ; ret
0x00000000000d2500 : cmp byte ptr [rdi + 1], 0 ; jne 0xd251b ; or esi, 2 ; mov eax, esi ; ret
0x00000000000d25d0 : cmp byte ptr [rdi + 1], 0 ; jne 0xd25f9 ; or esi, 2 ; xor eax, eax ; cmp esi, 1 ; sete al ; ret
0x00000000000a06a4 : cmp byte ptr [rdi + rax], dl ; je 0xa06a6 ; ret
0x00000000000f224b : cmp byte ptr [rdi + rcx], al ; test byte ptr [rip - 0x7a000001], ah ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000002058 : cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x0000000000034e63 : cmp byte ptr [rdi - 0x77], 0xd0 ; neg eax ; or eax, edx ; sar eax, 0x1f ; not eax ; and eax, ecx ; ret
0x000000000003a938 : cmp byte ptr [rdi], 0 ; jne 0x3a946 ; pop rbx ; ret
0x000000000013001a : cmp byte ptr [rdi], cl ; adc dword ptr [rsi + 8], eax ; ret
0x000000000007d798 : cmp byte ptr [rdi], cl ; ret 0x389
0x000000000016c16d : cmp byte ptr [rdi], dl ; ret
0x000000000016cc80 : cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000016cc69 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000016cc52 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000016b70e : cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000e8d50 : cmp byte ptr [rdx + 8], 0xc ; ja 0xe8dda ; movzx edi, byte ptr [rdx + 8] ; movsxd rdi, dword ptr [r11 + rdi*4] ; add rdi, r11 ; jmp rdi
0x00000000000fd9b8 : cmp byte ptr [rip - 0x1010], ah ; or esi, eax ; xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x000000000012f0b5 : cmp byte ptr [rsi], al ; add byte ptr [rsi + 2], bh ; mov rdi, r13 ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000019ffd8 : cmp byte ptr [rsi], ch ; in eax, dx ; jmp qword ptr [rdi]
0x0000000000100896 : cmp byte ptr ss:[rax + rax], ch ; mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x000000000011109c : cmp ch, 0xff ; dec dword ptr [rcx - 0x75] ; push rdi ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000001800ed : cmp ch, bl ; dec dword ptr [rdx + rdi + 0x38d8ffeb] ; jmp 0x180105
0x00000000000d6910 : cmp cl, 0x2d ; jne 0xd694b ; mov byte ptr [rdi + 8], 0x16 ; mov eax, 1 ; ret
0x000000000014d3a5 : cmp cl, byte ptr [rax + 0x63] ; leave ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x00000000000476bc : cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x000000000016ec3a : cmp dh, byte ptr [rdx + 2] ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000000881c6 : cmp dil, 0xff ; mov rsi, rbp ; mov rdi, rax ; mov rbx, rax ; call 0x844df
0x000000000016e356 : cmp dl, 0x20 ; jb 0x16e373 ; vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000000d80d7 : cmp dl, 0xa ; jne 0xd80aa ; xor eax, eax ; cmp byte ptr [rdi + 0x65], 0 ; setne al ; add eax, eax ; ret
0x00000000001507d1 : cmp dl, 1 ; ja 0x15081d ; jb 0x1507e9 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000150c7e : cmp dl, 1 ; ja 0x150cbb ; jb 0x150c93 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000016e631 : cmp dl, 1 ; ja 0x16e695 ; jb 0x16e649 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000016ec36 : cmp dl, 1 ; ja 0x16ec81 ; jb 0x16ec4b ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000000914a1 : cmp dl, 1 ; ja 0x914d8 ; jb 0x914b9 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000091920 : cmp dl, 1 ; ja 0x91943 ; jb 0x91932 ; mov byte ptr [rdi], cl ; ret
0x000000000016dccb : cmp dl, 1 ; jb 0x16dcdd ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000016e39a : cmp dl, 1 ; jb 0x16e3a8 ; mov byte ptr [rdi], cl ; ret
0x000000000016e38d : cmp dl, 2 ; jb 0x16e3a6 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000001507cc : cmp dl, 4 ; jae 0x150815 ; cmp dl, 1 ; ja 0x150822 ; jb 0x1507ee ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000150c79 : cmp dl, 4 ; jae 0x150cb6 ; cmp dl, 1 ; ja 0x150cc0 ; jb 0x150c98 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000016e62c : cmp dl, 4 ; jae 0x16e68d ; cmp dl, 1 ; ja 0x16e69a ; jb 0x16e64e ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000016ec31 : cmp dl, 4 ; jae 0x16ec7c ; cmp dl, 1 ; ja 0x16ec86 ; jb 0x16ec50 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000009149c : cmp dl, 4 ; jae 0x914d0 ; cmp dl, 1 ; ja 0x914dd ; jb 0x914be ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000009191b : cmp dl, 4 ; jae 0x91941 ; cmp dl, 1 ; ja 0x91948 ; jb 0x91937 ; mov byte ptr [rdi], cl ; ret
0x000000000016dca5 : cmp dl, 4 ; jb 0x16dcc6 ; mov esi, dword ptr [rsi] ; mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000016e382 : cmp dl, 4 ; jb 0x16e397 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000016e36f : cmp dl, 8 ; jb 0x16e38c ; vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000002b8e : cmp dl, byte ptr [rdi] ; ret
0x00000000000ac7ed : cmp dword ptr [r10], eax ; jne 0xac879 ; test eax, eax ; jne 0xac7dd ; mov rax, rdi ; ret
0x000000000004a930 : cmp dword ptr [r8], edx ; je 0x4a94f ; sub r8, 4 ; cmp rdi, r8 ; jbe 0x4a93f ; ret
0x0000000000034173 : cmp dword ptr [r9 + rdx*4 + 4], r11d ; jne 0x34170 ; mov eax, dword ptr [r9 + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x000000000002d985 : cmp dword ptr [rax], eax ; movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000002de35 : cmp dword ptr [rax], eax ; movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000004a931 : cmp dword ptr [rax], edx ; je 0x4a94e ; sub r8, 4 ; cmp rdi, r8 ; jbe 0x4a93e ; ret
0x000000000004a991 : cmp dword ptr [rax], edx ; je 0x4a952 ; sub r8, 4 ; cmp rdi, r8 ; jbe 0x4a9a1 ; nop ; pop rbx ; ret
0x0000000000071019 : cmp dword ptr [rbx + 0x48], 0 ; je 0x70f95 ; mov rdi, rbx ; call 0x7d30f
0x0000000000071d6c : cmp dword ptr [rbx], ecx ; je 0x71d8f ; or ebp, edx ; mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079cdc : cmp dword ptr [rbx], ecx ; je 0x79cff ; or ebp, edx ; mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002ac7b : cmp dword ptr [rcx + rdi], 0x11c8c148 ; xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000034174 : cmp dword ptr [rcx + rdx*4 + 4], ebx ; jne 0x3416f ; mov eax, dword ptr [r9 + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x000000000007d474 : cmp dword ptr [rcx - 1], -1 ; dec dword ptr [rdi] ; mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000743e4 : cmp dword ptr [rcx], 0xa ; je 0x74405 ; cmp rsi, rcx ; jb 0x743ed ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000071d6b : cmp dword ptr [rcx], 0xb ; je 0x71d90 ; or ebp, edx ; mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079cdb : cmp dword ptr [rcx], 0xb ; je 0x79d00 ; or ebp, edx ; mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000196715 : cmp dword ptr [rcx], eax ; add byte ptr [rdx + rcx*2], al ; lcall ptr [rcx + rdi + 0x4a940001] ; call rsp
0x000000000012aa6d : cmp dword ptr [rdi + 0x10], 2 ; je 0x12aa7e ; ret
0x000000000007f765 : cmp dword ptr [rdi + 0x10], eax ; cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000079101 : cmp dword ptr [rdi + 0x10], eax ; jb 0x7913e ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000794d1 : cmp dword ptr [rdi + 0x10], eax ; jb 0x794cc ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000ec246 : cmp dword ptr [rdi + 0x10], ecx ; cmovb eax, edx ; ret
0x0000000000078ca4 : cmp dword ptr [rdi + 0x18], 0 ; setne al ; ret
0x00000000001166f9 : cmp dword ptr [rdi + 0x20], 0 ; jne 0x1166ff ; mov edx, dword ptr [rdi + 0x28] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x000000000013eaba : cmp dword ptr [rdi + 0x20], esi ; jbe 0x13eadc ; add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000007d7d1 : cmp dword ptr [rdi + 0x38], 0 ; je 0x7d7e6 ; ret
0x00000000000abbab : cmp dword ptr [rdi + 0xc], ecx ; jne 0xabd2b ; xor eax, eax ; ret
0x00000000000ec253 : cmp dword ptr [rdi + 4], eax ; mov edx, 0xffffffff ; setne al ; movzx eax, al ; cmova eax, edx ; ret
0x0000000000104ac4 : cmp dword ptr [rdi + 8], 0 ; je 0x1055b1 ; mov rbp, rdi ; xor edx, edx ; xor esi, esi ; call rbx
0x00000000000bb641 : cmp dword ptr [rdi + 8], edx ; jne 0xbb623 ; ret
0x00000000000cd1f3 : cmp dword ptr [rdi + rbp], 0x64d8f700 ; mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010427b : cmp dword ptr [rdi - 0x74b6000f], esi ; cmp al, 0x24 ; call rbx
0x00000000001166ea : cmp dword ptr [rdi], 0 ; je 0x1166fe ; ret
0x00000000001724a0 : cmp dword ptr [rdi], 4 ; jg 0x1724bf ; mov rdi, qword ptr [rdi + 0x10] ; test rdi, rdi ; jne 0x1724af ; ret
0x00000000001724c2 : cmp dword ptr [rdi], 4 ; jg 0x1724c0 ; mov rdi, qword ptr [rdi + 0x10] ; test rdi, rdi ; jne 0x1724d1 ; pop rbx ; ret
0x00000000001bbf4c : cmp dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 8
0x00000000000bb619 : cmp dword ptr [rdi], ecx ; je 0xbb63a ; setle al ; movzx eax, al ; neg eax ; or eax, 1 ; ret
0x0000000000002b81 : cmp dword ptr [rdx - 0x254e376e], ecx ; fnsave dword ptr [rdx - 0x6b] ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x0000000000125ea3 : cmp dword ptr [rdx], eax ; cmp r8, rdi ; jb 0x125ed0 ; cmp eax, edx ; jne 0x125e90 ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x00000000000ac7ee : cmp dword ptr [rdx], eax ; jne 0xac878 ; test eax, eax ; jne 0xac7dc ; mov rax, rdi ; ret
0x00000000000743e5 : cmp dword ptr [rdx], ecx ; je 0x74404 ; cmp rsi, rcx ; jb 0x743ec ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000007e535 : cmp dword ptr [rdx], ecx ; je 0x7e554 ; cmp rsi, rcx ; jne 0x7e53c ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000071d6a : cmp dword ptr fs:[rcx], 0xb ; je 0x71d91 ; or ebp, edx ; mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079cda : cmp dword ptr fs:[rcx], 0xb ; je 0x79d01 ; or ebp, edx ; mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006da08 : cmp eax, 0x118013 ; movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x000000000003344e : cmp eax, 0x14cc6d ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x0000000000172802 : cmp eax, 0x252949 ; cmp rdi, 1 ; ja 0x17281b ; ret
0x00000000000d6995 : cmp eax, 0x2e3c4874 ; jne 0xd6978 ; mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x0000000000134b3f : cmp eax, 0x554fc ; mov esi, esi ; movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x0000000000003679 : cmp eax, 0x6e510fa3 ; stosb byte ptr [rdi], al ; stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x00000000000c5a63 : cmp eax, 0xc16ec ; mov esi, edx ; movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x000000000012ff83 : cmp eax, 1 ; jne 0x12ffd1 ; mov dword ptr [rsi], 7 ; mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x000000000013d370 : cmp eax, 1 ; jne 0x13d36a ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000013dd5d : cmp eax, dword ptr [rbx] ; jne 0x13dd61 ; mov rsi, r13 ; mov rdi, rbp ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x0000000000196765 : cmp eax, dword ptr [rcx] ; add ah, al ; dec dword ptr [rbx + rdi + 1] ; add ah, dl ; call rsp
0x00000000001ad54d : cmp eax, dword ptr [rcx] ; add al, ah ; push rdi ; cmc ; jmp qword ptr [rcx]
0x0000000000079945 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x79970 ; lea rdx, qword ptr [rax + 1] ; mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000007997c : cmp eax, dword ptr [rdi + 0x10] ; jae 0x799a0 ; lea rdx, qword ptr [rax + 1] ; mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000007b515 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x7b528 ; movzx eax, byte ptr [rax] ; ret
0x00000000000d6963 : cmp eax, dword ptr [rsi + 0x40] ; jl 0xd6999 ; mov byte ptr [rdi + 8], 1 ; mov byte ptr [rdi], 0x5b ; mov eax, 1 ; ret
0x00000000000d6938 : cmp eax, dword ptr [rsi + 0x40] ; jl 0xd69be ; mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x0000000000170d0b : cmp eax, dword ptr [rsi - 8] ; jne 0x170d2f ; mov eax, dword ptr [rdi - 4] ; cmp eax, dword ptr [rsi - 4] ; jne 0x170d2f ; xor eax, eax ; ret
0x0000000000070ba8 : cmp eax, eax ; jbe 0x70c19 ; mov rax, qword ptr [rbp + 0x48] ; add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000000ab047 : cmp eax, ecx ; ja 0xab06b ; sub rdi, 0x10 ; add rax, rdi ; ret
0x000000000007389f : cmp eax, ecx ; jbe 0x7392a ; mov rax, qword ptr [rbp + 0x20] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000001706de : cmp eax, ecx ; jne 0x170714 ; movzx eax, byte ptr [rdi - 1] ; cmp al, byte ptr [rsi - 1] ; jne 0x170714 ; xor eax, eax ; ret
0x00000000000aaf7b : cmp eax, edx ; ja 0xab06e ; add rax, rdi ; add rax, rcx ; ret
0x000000000006dd74 : cmp eax, edx ; jg 0x6ddf3 ; add eax, r11d ; mov rdi, rdx ; jmp 0x6dd4e
0x000000000006dd73 : cmp eax, r10d ; jg 0x6ddf4 ; add eax, r11d ; mov rdi, rdx ; jmp 0x6dd4f
0x00000000000cd2ad : cmp ebp, dword ptr [rdi] ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001801e9 : cmp ebp, ebx ; call qword ptr [rdi]
0x0000000000048e0e : cmp ecx, dword ptr [rbp + 0xf] ; movsd dword ptr [rdi], dword ptr [rsi] ; enter -0x76b4, 7 ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000016d8e4 : cmp ecx, dword ptr [rdi - 4] ; jne 0x16db21 ; xor eax, eax ; ret
0x00000000000bcaa8 : cmp ecx, dword ptr [rdi] ; cli ; add eax, edi ; cmp esi, 0x3b ; cmova esi, edx ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x00000000000bcab0 : cmp ecx, dword ptr [rdi] ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x000000000003aee9 : cmp ecx, edx ; mov qword ptr [rdi], rax ; cmovbe rdx, r8 ; xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x00000000000a060c : cmp ecx, esi ; je 0xa0631 ; add rax, 1 ; movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0xa0619 ; ret
0x00000000000a074c : cmp ecx, esi ; je 0xa0771 ; add rdi, 1 ; movsx ecx, byte ptr [rdi] ; test cl, cl ; jne 0xa0759 ; xor eax, eax ; ret
0x000000000011aec1 : cmp edi, 0x3ff ; ja 0x11aee0 ; mov rax, rdi ; sar rax, 6 ; ret
0x0000000000075108 : cmp edi, 0xf ; ja 0x7529a ; mov rdx, r15 ; mov rdi, r12 ; call 0x913c1
0x000000000002cb17 : cmp edi, dword ptr [rdx + 0x38] ; jae 0x2cb39 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000130e73 : cmp edi, dword ptr [rdx + 0x60] ; ja 0x130e98 ; sub rcx, rsi ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00000000001507b4 : cmp edi, ecx ; jb 0x15098e ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000016e60f : cmp edi, ecx ; jb 0x16e859 ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000091489 : cmp edi, ecx ; jb 0x91601 ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000091402 : cmp edi, edx ; jb 0x9140f ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000913f7 : cmp edi, esi ; jb 0x91417 ; je 0x91419 ; lea rdx, qword ptr [rsi + rcx] ; cmp rdi, rdx ; jb 0x9141a ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000004aa7b : cmp edi, esi ; mov rax, rsi ; cmovae rax, rdi ; ret
0x000000000009187f : cmp edx, 0x20 ; ja 0x9189e ; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000009182f : cmp edx, 0x20 ; ja 0x918a7 ; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000bb639 : cmp edx, 2 ; je 0xbb636 ; mov edx, dword ptr [rsi + 8] ; cmp dword ptr [rdi + 8], edx ; jne 0xbb62b ; ret
0x00000000000ac8d8 : cmp edx, 2 ; lea rcx, qword ptr [rdi + 8] ; je 0xac903 ; cmp esi, dword ptr [rdi + 8] ; cmove rax, rcx ; ret
0x000000000002d9eb : cmp edx, dword ptr [rdi + 4] ; jb 0x2d9fe ; ret
0x00000000000ac790 : cmp edx, eax ; je 0xac810 ; add rdi, 4 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0xac7a0 ; xor eax, eax ; ret
0x00000000000a05c8 : cmp edx, esi ; je 0xa05f1 ; add rax, 1 ; movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0xa05d9 ; ret
0x0000000000078db9 : cmp esi, 2 ; cmove edx, ecx ; mov dword ptr [rdi], edx ; ret
0x00000000000ac8e1 : cmp esi, dword ptr [rdi + 8] ; cmove rax, rcx ; ret
0x00000000001507d5 : cmp esi, dword ptr [rdx + 5] ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000801bd : cmp esi, eax ; jne 0x80196 ; mov rdi, r12 ; neg rdi ; call qword ptr [r15]
0x00000000000743ea : cmp esi, ecx ; jb 0x743e7 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000007e53a : cmp esi, ecx ; jne 0x7e537 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000072cc1 : cmp esp, dword ptr [rdi - 2] ; dec dword ptr [rax - 0x75] ; xchg eax, esp ; and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000116660 : cmp qword ptr [rax + 8], rdi ; je 0x116689 ; add rax, 0x48 ; cmp rax, rdx ; jb 0x116671 ; xor eax, eax ; ret
0x0000000000071018 : cmp qword ptr [rbx + 0x48], 0 ; je 0x70f96 ; mov rdi, rbx ; call 0x7d310
0x000000000007f764 : cmp qword ptr [rdi + 0x10], rax ; cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000079100 : cmp qword ptr [rdi + 0x10], rax ; jb 0x7913f ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000794d0 : cmp qword ptr [rdi + 0x10], rax ; jb 0x794cd ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x0000000000078ca3 : cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x00000000001166f8 : cmp qword ptr [rdi + 0x20], 0 ; jne 0x116700 ; mov edx, dword ptr [rdi + 0x28] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x000000000013eab9 : cmp qword ptr [rdi + 0x20], r14 ; jbe 0x13eadd ; add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000007d7d0 : cmp qword ptr [rdi + 0x38], 0 ; je 0x7d7e7 ; ret
0x00000000001166e9 : cmp qword ptr [rdi], 0 ; je 0x1166ff ; ret
0x000000000016e630 : cmp r10b, 1 ; ja 0x16e696 ; jb 0x16e64a ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000001800ec : cmp r13b, bl ; dec dword ptr [rdx + rdi + 0x38d8ffeb] ; jmp 0x180106
0x00000000000801bc : cmp r14, rax ; jne 0x80197 ; mov rdi, r12 ; neg rdi ; call qword ptr [r15]
0x0000000000125ea5 : cmp r8, rdi ; jb 0x125ece ; cmp eax, edx ; jne 0x125e8e ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x000000000003aee8 : cmp r9, rdx ; mov qword ptr [rdi], rax ; cmovbe rdx, r8 ; xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x0000000000079944 : cmp rax, qword ptr [rdi + 0x10] ; jae 0x79971 ; lea rdx, qword ptr [rax + 1] ; mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000007997b : cmp rax, qword ptr [rdi + 0x10] ; jae 0x799a1 ; lea rdx, qword ptr [rax + 1] ; mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000007b514 : cmp rax, qword ptr [rdi + 0x10] ; jae 0x7b529 ; movzx eax, byte ptr [rax] ; ret
0x00000000000ab046 : cmp rax, rcx ; ja 0xab06c ; sub rdi, 0x10 ; add rax, rdi ; ret
0x000000000007988b : cmp rax, rdi ; je 0x798a9 ; cmp qword ptr [rip + 0x34ca48], 0 ; je 0x798af ; ret
0x00000000000aaf7a : cmp rax, rdx ; ja 0xab06f ; add rax, rdi ; add rax, rcx ; ret
0x000000000011aec0 : cmp rdi, 0x3ff ; ja 0x11aee1 ; mov rax, rdi ; sar rax, 6 ; ret
0x00000000001261c1 : cmp rdi, 0xb ; je 0x126222 ; cmp eax, 0xff ; mov edx, 0x104 ; cmove eax, edx ; ret
0x00000000001261c1 : cmp rdi, 0xb ; je 0x126223 ; cmp eax, 0xff ; mov edx, 0x104 ; cmove eax, edx ; ret
0x0000000000097586 : cmp rdi, 0xd ; je 0x975a2 ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x0000000000172807 : cmp rdi, 1 ; ja 0x172816 ; ret
0x0000000000130e72 : cmp rdi, qword ptr [rdx + 0x60] ; ja 0x130e99 ; sub rcx, rsi ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000004a939 : cmp rdi, r8 ; jbe 0x4a936 ; ret
0x000000000004a999 : cmp rdi, r8 ; jbe 0x4a999 ; nop ; pop rbx ; ret
0x00000000001507b3 : cmp rdi, r9 ; jb 0x15098f ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000016e60e : cmp rdi, r9 ; jb 0x16e85a ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000091488 : cmp rdi, r9 ; jb 0x91602 ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000007ee58 : cmp rdi, rax ; je 0x7ee7f ; mov rdx, rax ; mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x7ee69 ; ret
0x00000000000fe470 : cmp rdi, rdx ; ja 0xfe4a6 ; ret
0x0000000000091401 : cmp rdi, rdx ; jb 0x91410 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000107734 : cmp rdi, rdx ; jne 0x107731 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000f806f : cmp rdi, rsi ; ja 0xf8066 ; ret
0x000000000004aa7a : cmp rdi, rsi ; mov rax, rsi ; cmovae rax, rdi ; ret
0x000000000009187e : cmp rdx, 0x20 ; ja 0x9189f ; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000009182e : cmp rdx, 0x20 ; ja 0x918a8 ; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000bb638 : cmp rdx, 2 ; je 0xbb637 ; mov edx, dword ptr [rsi + 8] ; cmp dword ptr [rdi + 8], edx ; jne 0xbb62c ; ret
0x00000000000ac8d7 : cmp rdx, 2 ; lea rcx, qword ptr [rdi + 8] ; je 0xac904 ; cmp esi, dword ptr [rdi + 8] ; cmove rax, rcx ; ret
0x000000000007fa55 : cmp rdx, rdi ; je 0x7f9e3 ; nop ; xor eax, eax ; ret
0x0000000000116749 : cmp rdx, rdi ; setae al ; ret
0x00000000000743e9 : cmp rsi, rcx ; jb 0x743e8 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000007e539 : cmp rsi, rcx ; jne 0x7e538 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000014f207 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000010e61 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; and dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x42
0x000000000014f507 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000150407 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000f4bae : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001a3f95 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; fdivr dword ptr [rcx - 0x12] ; jmp qword ptr [rcx]
0x0000000000150107 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x000000000016c719 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00000000001268ab : cmpsb byte ptr [rsi], byte ptr [rdi] ; add rcx, 2 ; mov dword ptr [r8], edi ; mov qword ptr [r9], rcx ; ret
0x00000000001b9321 : cmpsb byte ptr [rsi], byte ptr [rdi] ; clc ; jmp qword ptr [rcx]
0x000000000015cb06 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jae 0x15cb18 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c806 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jbe 0x15c818 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015bf06 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jg 0x15bf18 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c206 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jl 0x15c218 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015c506 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jns 0x15c518 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000014d8b6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jo 0x14d8c7 ; add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x000000000015ce06 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jo 0x15ce18 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000035341 : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov ecx, r9d ; and ecx, 0x7fffffff ; or ecx, r8d ; je 0x352fc ; ret
0x000000000014a836 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014fe07 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014fb07 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000033706 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xfffe
0x00000000001870c4 : cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call qword ptr [rbx]
0x000000000019354d : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call rcx
0x000000000019362d : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; dec dword ptr [rax] ; sbb edi, esp ; call rax
0x000000000019351d : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x0000000000193549 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call rcx
0x0000000000193629 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; dec dword ptr [rax] ; sbb edi, esp ; call rax
0x0000000000193519 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x0000000000193545 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call rcx
0x0000000000193625 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; dec dword ptr [rax] ; sbb edi, esp ; call rax
0x0000000000193515 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x0000000000193335 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sti ; inc dword ptr [rax - 0x58] ; sti ; call qword ptr [rax - 0x1f000457]
0x0000000000106905 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sub eax, dword ptr [rax] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x1069b7 ; call rax
0x000000000019344c : cmpsb byte ptr [rsi], byte ptr [rdi] ; xchg eax, ebx ; std ; jmp qword ptr [rsi]
0x0000000000193444 : cmpsb byte ptr [rsi], byte ptr [rdi] ; xchg eax, edx ; std ; jmp qword ptr [rsi]
0x0000000000086822 : cmpsb byte ptr [rsi], byte ptr [rdi] ; xor eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x00000000000f1800 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000195205 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; push rsp ; jg 0x1951fe ; call rsp
0x0000000000132b1e : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; test eax, eax ; jne 0x132b3f ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000132bb9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; test eax, eax ; jne 0x132bdf ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001b40ed : cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; push rax ; jl 0x1b40f0 ; call rcx
0x00000000001592a7 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000a3610 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x000000000013f145 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cmp al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000008fd59 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cmp esi, dword ptr [rbx] ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x0000000000072a55 : cmpsd dword ptr [rsi], dword ptr [rdi] ; imul edi, esi, 0xc48148ff ; fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000122513 : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov bl, 6 ; add al, ch ; and al, 0x98 ; add byte ptr [rax], al ; test rax, rax ; je 0x122537 ; mov rdi, rbx ; call rax
0x00000000000deed5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or dh, ah ; dec dword ptr [rax - 0x77] ; ret
0x0000000000031a4f : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x0000000000003902 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x49ec
0x0000000000156645 : cmpsd dword ptr [rsi], dword ptr [rdi] ; rol dword ptr [rbx], 1 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000184095 : cmpsd dword ptr [rsi], dword ptr [rdi] ; xor byte ptr [rsi + 0x4ce2e5dd], 0x67 ; add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x0000000000086818 : cmpsd dword ptr [rsi], dword ptr [rdi] ; xor eax, dword ptr [rax] ; mov qword ptr [rax], rsi ; mov rax, qword ptr [rip + 0x33a6bb] ; mov qword ptr [rax], rdi ; ret
0x0000000000003901 : cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000117049 : cmpxchg qword ptr [rip + 0x2af6f7], rdi ; cmp rdx, rax ; jne 0x11703e ; ret
0x0000000000076d84 : cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 0xe], dh ; mov edx, dword ptr [rdi + 0xc0] ; mov eax, edx ; ret
0x0000000000122519 : cwde ; add byte ptr [rax], al ; test rax, rax ; je 0x122531 ; mov rdi, rbx ; call rax
0x00000000001b7c58 : cwde ; clc ; call rdi
0x00000000001ad108 : cwde ; cmp al, 0xf5 ; call qword ptr [rdi]
0x000000000013e78d : cwde ; mov qword ptr [rsi], rax ; mov qword ptr [rdi + 0x18], rdx ; mov eax, 1 ; ret
0x00000000000d69b4 : cwde ; movzx eax, byte ptr [r9 + rax] ; mov byte ptr [rdi + 8], 1 ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x0000000000185df4 : cwde ; stosb byte ptr [rdi], al ; int1 ; jmp qword ptr [rax]
0x000000000016e725 : dec byte ptr [rax + 0x7f] ; je 0x16e752 ; std ; vmovdqu64 zmmword ptr [rdi + rdx - 0x100], zmm7 ; vzeroupper ; ret
0x00000000000fd66b : dec byte ptr [rcx + 0xfa6f3d8] ; xchg eax, edi ; ror dword ptr [rdi], -0x6e ; ret 0xcc80
0x000000000008b4eb : dec byte ptr [rcx + rcx*4 + 0x43] ; movsxd rdi, esi ; mov dword ptr [rbx + 0x30], eax ; mov qword ptr [rbx], rdi ; call rcx
0x00000000000914d0 : dec byte ptr [rdi] ; mov bh, 0x36 ; mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000009c53d : dec byte ptr [rdi] ; test ch, cl ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret 0x5a8d
0x000000000004e3de : dec byte ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000057942 : dec dword ptr [rax + 0x39] ; ror dword ptr [rdi], -0x7b ; ret
0x0000000000185e7b : dec dword ptr [rax - 0x42] ; cld ; ljmp ptr [rax - 0x41] ; cld ; dec dword ptr [rax] ; scasd eax, dword ptr [rdi] ; cld ; lcall ptr [rax] ; ret 0xfffc
0x0000000000185def : dec dword ptr [rax - 0x67000e56] ; stosb byte ptr [rdi], al ; int1 ; jmp qword ptr [rax]
0x000000000006d763 : dec dword ptr [rax - 0x73] ; lea rdx, qword ptr [rbx + 0x34] ; mov esi, 1 ; mov rdi, rbx ; call rax
0x000000000010422c : dec dword ptr [rax - 0x75] ; and al, 8 ; mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x00000000001224fb : dec dword ptr [rax - 0x75] ; jnp 0x122553 ; test rdi, rdi ; jne 0x1224fb ; pop rbx ; ret
0x00000000000393f6 : dec dword ptr [rax - 0x75] ; push rsp ; and al, 8 ; mov rsi, r15 ; mov rdi, r12 ; call r14
0x0000000000079522 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; lea esp, dword ptr [rdx + rdi*8 - 1] ; xor eax, eax ; pop rbx ; ret
0x00000000000881c9 : dec dword ptr [rax - 0x77] ; out dx, al ; mov rdi, rax ; mov rbx, rax ; call 0x844dc
0x0000000000170daa : dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x00000000000f4565 : dec dword ptr [rax - 0x7b] ; fisttp dword ptr [rdi] ; test dword ptr [rbp - 0x1600000a], ebp ; ret 0xfff6
0x000000000011ceba : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax - 0x77], 5 ; and ebx, dword ptr [rcx + 0x2a] ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rdi], -0x7b ; ret
0x0000000000076fd9 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000d2201 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00000000000f0573 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 3
0x0000000000077c29 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000a4ffe : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000012d6e4 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ror byte ptr [rax - 0x7d], 0xc4 ; or bl, al ; mov eax, 1 ; ret
0x00000000001116fe : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x000000000006eeec : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x00000000000abd9b : dec dword ptr [rax - 0x7b] ; sal byte ptr [rdi + 0x48], 0x89 ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000708f7 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rdi + rcx + 0x48], 0x89 ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000098688 : dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013edaa : dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000013ec53 : dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000010904d : dec dword ptr [rax - 0x7d] ; clc ; or byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000109077 : dec dword ptr [rax - 0x7d] ; clc ; or byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x00000000000260d2 : dec dword ptr [rax - 0x7d] ; jl 0x2610a ; add byte ptr [rdi], cl ; test byte ptr [rdx], ah ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf08
0x000000000018a05b : dec dword ptr [rax - 0xf000554] ; stosd dword ptr [rdi], eax ; cli ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; cli ; call qword ptr [rax]
0x0000000000185e83 : dec dword ptr [rax] ; scasd eax, dword ptr [rdi] ; cld ; lcall ptr [rax] ; ret 0xfffc
0x000000000003803f : dec dword ptr [rbp + 1] ; cmc ; mov rdx, rbx ; mov rsi, r13 ; mov rdi, r12 ; call r15
0x000000000019676b : dec dword ptr [rbx + rdi + 1] ; add ah, dl ; call rsp
0x00000000001552be : dec dword ptr [rcx + rcx*4 + 0x57] ; out 0x4c, eax ; mov dword ptr [rdi - 0x11], ebx ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000012515c : dec dword ptr [rcx + rcx*4 - 0x2e] ; mov qword ptr [r14 + 8], rax ; mov rdi, rax ; call 0x9139d
0x000000000013e996 : dec dword ptr [rcx + rcx*4 - 0xa] ; mov rdi, rbp ; call r12
0x000000000004b85a : dec dword ptr [rcx + rcx*4 - 2] ; mov rdi, r14 ; call rax
0x0000000000198723 : dec dword ptr [rcx + rdi*8 + 1] ; add byte ptr [rdx + rbp*2 - 7], ah ; push qword ptr [rcx + rdi*8 + 0x6ac40001] ; stc ; jmp rsp
0x000000000011109f : dec dword ptr [rcx - 0x75] ; push rdi ; sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000187ce3 : dec dword ptr [rdi + rbp] ; cmc ; push qword ptr [rdi - 0x14000ad1] ; cmc ; call rax
0x00000000001966d3 : dec dword ptr [rdi + rsi + 0x41a40001] ; ljmp ptr [rdi + rsi + 0x42240001] ; call rsp
0x0000000000187e5f : dec dword ptr [rdi - 0x2b000a32] ; iretd ; cmc ; call rsp
0x00000000001194b3 : dec dword ptr [rdi] ; add byte ptr [rax], al ; jbe 0x1194c6 ; jmp 0x456d8
0x00000000000aaa53 : dec dword ptr [rdi] ; add byte ptr [rax], al ; lea rax, qword ptr [rbx + 1] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000108eb2 : dec dword ptr [rdi] ; add byte ptr [rax], al ; or eax, edi ; ret
0x000000000006c283 : dec dword ptr [rdi] ; and al, 0xc ; add rsp, 0x18 ; ret
0x0000000000075109 : dec dword ptr [rdi] ; ja 0x75299 ; mov rdx, r15 ; mov rdi, r12 ; call 0x913c0
0x0000000000051643 : dec dword ptr [rdi] ; lahf ; sal dh, 0xc2 ; and byte ptr [rcx - 0x77], al ; sal byte ptr [rbp + 4], 0x84 ; sal byte ptr [rbp + 0x73], 0xf6 ; ret 0x7440
0x000000000010c79d : dec dword ptr [rdi] ; mov bh, 4 ; js 0x10c731 ; loopne 0x10c7b8 ; movzx eax, ax ; ret
0x000000000010c89d : dec dword ptr [rdi] ; mov bh, 4 ; js 0x10c82e ; loopne 0x10c8ae ; ret
0x000000000010c91d : dec dword ptr [rdi] ; mov bh, 4 ; js 0x10c8b1 ; loopne 0x10c932 ; movzx eax, ax ; ret
0x000000000010cb9d : dec dword ptr [rdi] ; mov bh, 4 ; js 0x10cb31 ; loopne 0x10cbb4 ; movzx eax, ax ; ret
0x000000000002deb6 : dec dword ptr [rdi] ; mov bh, 4 ; js 0x2de47 ; loopne 0x2dec7 ; ret
0x000000000002dec6 : dec dword ptr [rdi] ; mov bh, 4 ; js 0x2de5a ; loopne 0x2dee1 ; movzx eax, ax ; ret
0x000000000002df06 : dec dword ptr [rdi] ; mov bh, 4 ; js 0x2de9a ; loopne 0x2df1b ; movzx eax, ax ; ret
0x000000000002dfa6 : dec dword ptr [rdi] ; mov bh, 4 ; js 0x2df3a ; loopne 0x2dfbd ; movzx eax, ax ; ret
0x000000000007d478 : dec dword ptr [rdi] ; mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d01af : dec dword ptr [rdi] ; mov dh, 0x42 ; add al, byte ptr [rbx - 0x7cb7fd37] ; ret 0xe901
0x00000000000468e3 : dec dword ptr [rdi] ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000051a36 : dec dword ptr [rdi] ; mov dh, 0x53 ; or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x00000000000a0d60 : dec dword ptr [rdi] ; mov ebp, 0xf80148c0 ; add rax, r8 ; ret
0x0000000000091a44 : dec dword ptr [rdi] ; mov esp, 0xc2440fc7 ; add eax, 1 ; ret
0x00000000000f8037 : dec dword ptr [rdi] ; ret 0x3948
0x00000000000236ab : dec dword ptr [rdi] ; ret 0x41c3
0x000000000004640d : dec dword ptr [rdi] ; ret 0x8341
0x000000000008d75e : dec dword ptr [rdi] ; ret 0xb8c3
0x0000000000123be7 : dec dword ptr [rdi] ; ret 0xbe9
0x000000000002cac3 : dec dword ptr [rdi] ; ror byte ptr [r8 - 0x73], 1 ; add eax, 0x395f52 ; mov byte ptr [rip + 0x395fa9], dl ; ret
0x00000000000accc2 : dec dword ptr [rdi] ; test bh, bh ; add byte ptr [rax], al ; add byte ptr [rbx + 0xa777fff], al ; mov eax, edi ; ret
0x00000000000302df : dec dword ptr [rdi] ; test bl, ah ; add al, byte ptr [rax] ; add byte ptr [rcx], dh ; imul al ; ret
0x0000000000025db4 : dec dword ptr [rdi] ; test bl, dh ; add al, byte ptr [rax] ; add bh, dh ; ret 0
0x0000000000127f87 : dec dword ptr [rdi] ; test byte ptr [rax - 0x76000002], ch ; ret
0x00000000000258bf : dec dword ptr [rdi] ; test byte ptr [rax - 0x8fffffb], ah ; ret 0
0x00000000000258cb : dec dword ptr [rdi] ; test byte ptr [rbx - 0x8fffffb], ch ; ret 0
0x0000000000025f92 : dec dword ptr [rdi] ; test byte ptr [rbx - 0x8ffffff], bh ; ret 0
0x0000000000025f86 : dec dword ptr [rdi] ; test byte ptr [rcx - 0x8ffffff], bl ; ret 0
0x000000000013acda : dec dword ptr [rdi] ; test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x0000000000031263 : dec dword ptr [rdi] ; test byte ptr [rdx], al ; add eax, 0x89450000 ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000025da8 : dec dword ptr [rdi] ; test byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add bh, dh ; ret 0
0x000000000012570d : dec dword ptr [rdi] ; test byte ptr [rsi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x0000000000124e24 : dec dword ptr [rdi] ; test ch, ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000000000121e2c : dec dword ptr [rdi] ; test dl, dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000170590 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000f875f : dec dword ptr [rdi] ; xchg dword ptr [rdx + 0x48000000], ecx ; add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003e2ba : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x941
0x00000000000ec25a : dec dword ptr [rdi] ; xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x00000000000746eb : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x000000000007782e : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000001800ef : dec dword ptr [rdx + rdi + 0x38d8ffeb] ; jmp 0x180103
0x00000000001800ef : dec dword ptr [rdx + rdi + 0x38d8ffeb] ; jmp 0x180107
0x0000000000195e3b : dec dword ptr [rsi + rdi*8 - 0x6b2c0000] ; out dx, eax ; call rsp
0x0000000000187de3 : dec ebx ; sub eax, 0x2dadfff5 ; cmc ; lcall ptr [rdi] ; mov edx, 0xba1ffff5 ; cmc ; jmp rsi
0x000000000019970b : dec esp ; adc eax, dword ptr [rcx] ; add byte ptr [rdi + rdi*4 - 4], dh ; jmp rsp
0x0000000000196f1b : dec esp ; jb 0x196f28 ; add byte ptr [rsi + rdi - 0xa], dh ; jmp rsp
0x0000000000198483 : dec esp ; out 1, eax ; add byte ptr [rdi + rcx*8], dh ; clc ; jmp rsp
0x0000000000197e3b : dec esp ; rol dword ptr [rcx], 0 ; movsb byte ptr [rdi], byte ptr [rsi] ; and bh, al ; jmp rsp
0x00000000001950a3 : dec esp ; sahf ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x1950b3
0x00000000000a4ffd : dec qword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000013e98d : div byte ptr [rax + rsi + 0x31] ; sar byte ptr [rdx - 1], 0x4c ; mov esi, esi ; mov rdi, rbp ; call r12
0x00000000000ddc86 : div byte ptr [rdi - 0xa] ; ret
0x00000000000f8071 : div dword ptr [rdi - 0x14] ; ret
0x00000000000913f8 : div dword ptr [rdx + 0xb] ; je 0x91418 ; lea rdx, qword ptr [rsi + rcx] ; cmp rdi, rdx ; jb 0x91419 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000012672f : enter -0x173f, 3 ; mov ecx, eax ; xor eax, eax ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x00000000001378dc : enter -0x1f01, -0x70 ; mov rax, qword ptr [rdx] ; bswap eax ; mov dword ptr [rdi + 0x54], eax ; mov eax, 1 ; ret
0x0000000000002b84 : enter -0x254f, -0x23 ; jb 0x2b2c ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x000000000004a531 : enter -0x2cb8, -0x1a ; mov qword ptr [rdi], rsi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000bb5fd : enter -0x378c, 0x39 ; ror dword ptr [rdi], -0x63 ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; or eax, 1 ; ret
0x00000000000bb5ff : enter -0x3ec7, 0xf ; popfq ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; or eax, 1 ; ret
0x000000000013e78b : enter -0x67b8, 0x48 ; mov dword ptr [rsi], eax ; mov qword ptr [rdi + 0x18], rdx ; mov eax, 1 ; ret
0x0000000000121266 : enter -0x72b4, 0xd ; insb byte ptr [rdi], dx ; ret
0x0000000000076b82 : enter -0x76b4, -0x17 ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x0000000000048e86 : enter -0x76b4, 0x47 ; clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000048e12 : enter -0x76b4, 7 ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000048f1c : enter -0x76b4, 7 ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000007d78e : enter -0x7cff, -0x1e ; inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x0000000000103ed4 : enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x0000000000134aae : enter 0, 0 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0xc8 ; jmp rcx
0x00000000000ab048 : enter 0x1577, 0x48 ; sub edi, 0x10 ; add rax, rdi ; ret
0x0000000000073464 : enter 0x2976, 0x48 ; mov eax, dword ptr [rbp + 0x18] ; mov esi, r12d ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000033ef3 : enter 0x3148, -0x30 ; movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x33ee3 ; ret
0x000000000002f5f2 : enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; mov rdi, r13 ; call rax
0x00000000000738a0 : enter 0x7676, 0x48 ; mov eax, dword ptr [rbp + 0x20] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000183cfc : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000016c7c6 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000007a000 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x000000000012f971 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12f993 ; mov rdi, rbx ; call rax
0x000000000012fce3 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12fd05 ; mov rdi, rbx ; call rax
0x00000000001560ff : fadd dword ptr [rbx] ; add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000013a3b8 : fadd dword ptr [rcx + rcx*4 - 0x1f] ; mov rdi, rbp ; call 0x56659
0x00000000000ac246 : fadd dword ptr [rcx + rdi - 0x3f] ; cmovg eax, edx ; ret
0x00000000001560fe : fadd dword ptr cs:[rbx] ; add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000008aeb0 : fadd qword ptr [rax] ; add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000016ed50 : fadd qword ptr [rcx] ; add byte ptr [rax], al ; test dl, 0x40 ; jne 0x16ed1d ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000007c798 : fadd qword ptr [rsi + 0x34] ; add byte ptr [rdi + rax*8], ah ; or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000016c311 : fbld dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016c30f : fbstp dword ptr [rdx - 0x10f09921] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000002b86 : fcmovu st(0), st(5) ; jb 0x2b2a ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x00000000001721b0 : fcom qword ptr [rax] ; test rdi, rdi ; je 0x1721dc ; mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x1721d7 ; call rax
0x0000000000182320 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x0000000000045e3a : fdiv dword ptr [rdi] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000045dbf : fdiv dword ptr [rdi] ; add byte ptr [rax - 0x73], cl ; add eax, 0x37d817 ; mov byte ptr [rax + rdx], 0 ; ret
0x0000000000045dc6 : fdiv dword ptr [rdi] ; add dh, al ; add al, 0x10 ; add bl, dh ; ret
0x000000000016c7df : fdiv dword ptr [rdx - 0x10f09928] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000a07b3 : fdiv qword ptr [rcx] ; rol bl, 0x66 ; nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x000000000016c5df : fdiv qword ptr [rdx - 0x10f09924] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001aa818 : fdivr st(1) ; jmp qword ptr [rdi]
0x00000000000a5a0e : fdivr st(7) ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000016eeb2 : fiadd dword ptr [rax] ; add byte ptr [rax], al ; test ah, 0x40 ; jne 0x16efb1 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000117492 : fiadd dword ptr [rbx + 0x3b8eaf8] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x90c3
0x00000000000aaaac : fiadd dword ptr [rcx + 0x3ffe2] ; add byte ptr [rbx - 0x50f0fe3e], al ; ror dword ptr [rdi], -0x51 ; ret 0x78e9
0x000000000006dd70 : fiadd dword ptr [rcx] ; rol byte ptr [rcx + rdi - 0x30], 0x7f ; jo 0x6ddcc ; add eax, ebx ; mov rdi, rdx ; jmp 0x6dd52
0x000000000016c6df : fidiv dword ptr [rdx - 0x10f09926] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016c3df : fidiv word ptr [rdx - 0x10f09922] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001a74ed : fild dword ptr [rax] ; add byte ptr [rax], ah ; pop rdi ; int1 ; call rbx
0x000000000003b745 : fild dword ptr [rdi + rcx - 0x4a] ; ret
0x00000000001724c1 : fild word ptr [rbx - 0x1580fbc1] ; mov rdi, qword ptr [rdi + 0x10] ; test rdi, rdi ; jne 0x1724d2 ; pop rbx ; ret
0x000000000019837d : fild word ptr [rcx] ; add ah, dl ; wait ; clc ; ljmp ptr [rdi + rbx*8 - 0x636bffff] ; clc ; call rsp
0x00000000001b9fc2 : fild word ptr [rcx] ; add byte ptr [rdx + rax - 0xfffffb], ch ; inc dword ptr [rcx] ; or ch, byte ptr [rdi + 5] ; ret
0x000000000008dd85 : fimul dword ptr [rax + 0xf] ; mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x00000000000d0d6c : fimul dword ptr [rcx + 3] ; push rdi ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000155ae3 : fimul dword ptr [rcx + rcx*4 + 0x57] ; loop 0x155b46 ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155b2b : fimul dword ptr [rcx + rcx*4 + 0x57] ; loop 0x155b8e ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155b69 : fimul dword ptr [rcx + rcx*4 + 0x57] ; loop 0x155bcc ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155ba1 : fimul dword ptr [rcx + rcx*4 + 0x57] ; loop 0x155c04 ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155bdf : fimul dword ptr [rcx + rcx*4 + 0x57] ; loop 0x155c42 ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155c17 : fimul dword ptr [rcx + rcx*4 + 0x57] ; loop 0x155c7a ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001584b3 : fimul dword ptr [rcx + rcx*4 + 0x57] ; loop 0x158516 ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001584fb : fimul dword ptr [rcx + rcx*4 + 0x57] ; loop 0x15855e ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158539 : fimul dword ptr [rcx + rcx*4 + 0x57] ; loop 0x15859c ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158571 : fimul dword ptr [rcx + rcx*4 + 0x57] ; loop 0x1585d4 ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001585af : fimul dword ptr [rcx + rcx*4 + 0x57] ; loop 0x158612 ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001585e7 : fimul dword ptr [rcx + rcx*4 + 0x57] ; loop 0x15864a ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000038045 : fimul dword ptr [rcx + rcx*4 - 0x12] ; mov rdi, r12 ; call r15
0x0000000000131a87 : fimul dword ptr [rcx + rcx*4 - 0x1a] ; mov rdi, rbp ; call rax
0x00000000001aad08 : fimul dword ptr [rdi - 0x19] ; jmp qword ptr [rbx]
0x0000000000155341 : fimul word ptr [r9 + r9*4 + 0x57] ; out 0x4c, al ; mov dword ptr [rdi - 0x12], ebx ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155342 : fimul word ptr [rcx + rcx*4 + 0x57] ; out 0x4c, al ; mov dword ptr [rdi - 0x12], ebx ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000002cb14 : fist word ptr [rip + 0x387a3b00] ; jae 0x2cb3c ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000001558e3 : fisttp dword ptr [rcx + rcx*4 + 0x57] ; jrcxz 0x155946 ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015592b : fisttp dword ptr [rcx + rcx*4 + 0x57] ; jrcxz 0x15598e ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155969 : fisttp dword ptr [rcx + rcx*4 + 0x57] ; jrcxz 0x1559cc ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001559a5 : fisttp dword ptr [rcx + rcx*4 + 0x57] ; jrcxz 0x155a08 ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001559df : fisttp dword ptr [rcx + rcx*4 + 0x57] ; jrcxz 0x155a42 ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155a17 : fisttp dword ptr [rcx + rcx*4 + 0x57] ; jrcxz 0x155a7a ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001582b3 : fisttp dword ptr [rcx + rcx*4 + 0x57] ; jrcxz 0x158316 ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001582fb : fisttp dword ptr [rcx + rcx*4 + 0x57] ; jrcxz 0x15835e ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158339 : fisttp dword ptr [rcx + rcx*4 + 0x57] ; jrcxz 0x15839c ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158375 : fisttp dword ptr [rcx + rcx*4 + 0x57] ; jrcxz 0x1583d8 ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001583af : fisttp dword ptr [rcx + rcx*4 + 0x57] ; jrcxz 0x158412 ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001583e7 : fisttp dword ptr [rcx + rcx*4 + 0x57] ; jrcxz 0x15844a ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000001b0a : fisttp dword ptr [rdi] ; jg 0x1b6f ; mov edx, 0x855233da ; mov bl, 0xee ; enter 0x59e7, 0x5b ; ret 0x2a63
0x0000000000053a8a : fisttp dword ptr [rdi] ; lahf ; ret 0xe683
0x000000000005462c : fisttp dword ptr [rdi] ; lahf ; ret 0xf640
0x00000000000e9c51 : fisttp dword ptr [rdi] ; mov gs, esp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; push rbp ; or byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 + 0x63], r9b ; ret
0x00000000000b42df : fisttp dword ptr [rdi] ; test byte ptr [rdi + rcx], dl ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000000f4568 : fisttp dword ptr [rdi] ; test dword ptr [rbp - 0x1600000a], ebp ; ret 0xfff6
0x00000000001259b0 : fisttp dword ptr [rdi] ; test ecx, edx ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000f2254 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000036c8f : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xd521
0x000000000009e871 : fisttp dword ptr [rdi] ; xchg eax, ebx ; ret
0x0000000000155521 : fisttp qword ptr [r9 + r9*4 + 0x57] ; in eax, 0x4c ; mov dword ptr [rdi - 0x13], ebx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155522 : fisttp qword ptr [rcx + rcx*4 + 0x57] ; in eax, 0x4c ; mov dword ptr [rdi - 0x13], ebx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000029cca : fisttp qword ptr [rdi] ; ret 0xc389
0x0000000000155171 : fisttp word ptr [r9 + r9*4 + 0x57] ; out 0x4c, eax ; mov dword ptr [rdi - 0x11], ebx ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015526d : fisttp word ptr [r9 + r9*4 + 0x57] ; out 0x4c, eax ; mov dword ptr [rdi - 0x11], ebx ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001551b9 : fisttp word ptr [r9 + r9*4 + 0x57] ; out 0x4c, eax ; mov dword ptr [rdi - 0x11], ebx ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155172 : fisttp word ptr [rcx + rcx*4 + 0x57] ; out 0x4c, eax ; mov dword ptr [rdi - 0x11], ebx ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015526e : fisttp word ptr [rcx + rcx*4 + 0x57] ; out 0x4c, eax ; mov dword ptr [rdi - 0x11], ebx ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001551ba : fisttp word ptr [rcx + rcx*4 + 0x57] ; out 0x4c, eax ; mov dword ptr [rdi - 0x11], ebx ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000008d750 : fisttp word ptr [rdi] ; mov dh, 0x17 ; sub edx, 0x30 ; cmp edx, 9 ; mov edx, 0xffffffff ; cmovbe eax, edx ; ret
0x00000000000affdd : fisttp word ptr [rdi] ; xchg eax, ebp ; ret 0x941
0x000000000016c6e1 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016c3e1 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000099b4b : fld dword ptr [rax + rdi - 0x31] ; jb 0x99b38 ; mov rdx, rax ; jmp 0x99af1
0x0000000000195925 : fld dword ptr [rax] ; add byte ptr [rdi + rsi*2 - 0x12], ah ; inc dword ptr [rcx + rbx*8 + 0x7ed40000] ; out dx, al ; call rsp
0x00000000001054a3 : fld dword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000aaf7f : fld qword ptr [rax] ; add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x0000000000035291 : fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x000000000003528d : fld xword ptr [rsp - 0x18] ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x0000000000035329 : fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x000000000016c761 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000004874d : fldpi ; adc r10, r11 ; mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x000000000004a35d : fldpi ; sbb r10, r11 ; mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x000000000008aa1b : fmul dword ptr [eax + 0x33] ; push rdi ; fmul dword ptr [rax + 0x39] ; ret 0x5a74
0x000000000008aa1c : fmul dword ptr [rax + 0x33] ; push rdi ; fmul dword ptr [rax + 0x39] ; ret 0x5a74
0x0000000000098684 : fmul dword ptr [rax - 0x73] ; pop rbx ; dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000154fbb : fmul dword ptr [rcx + rcx*4 + 0x4f] ; loopne 0x15501e ; mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000154ff9 : fmul dword ptr [rcx + rcx*4 + 0x4f] ; loopne 0x15505c ; mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155031 : fmul dword ptr [rcx + rcx*4 + 0x4f] ; loopne 0x155094 ; mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015506f : fmul dword ptr [rcx + rcx*4 + 0x4f] ; loopne 0x1550d2 ; mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001550a7 : fmul dword ptr [rcx + rcx*4 + 0x4f] ; loopne 0x15510a ; mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015798b : fmul dword ptr [rcx + rcx*4 + 0x4f] ; loopne 0x1579ee ; mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001579c9 : fmul dword ptr [rcx + rcx*4 + 0x4f] ; loopne 0x157a2c ; mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000157a01 : fmul dword ptr [rcx + rcx*4 + 0x4f] ; loopne 0x157a64 ; mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000157a3f : fmul dword ptr [rcx + rcx*4 + 0x4f] ; loopne 0x157aa2 ; mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000157a77 : fmul dword ptr [rcx + rcx*4 + 0x4f] ; loopne 0x157ada ; mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000013a400 : fmul dword ptr [rcx + rcx*4 - 0x1f] ; mov rdi, rbp ; xor eax, eax ; call 0x5665b
0x00000000000f71b9 : fmul dword ptr [rdi] ; lahf ; rcr byte ptr [rbx - 0x3d], 0x90 ; xor eax, eax ; pop rbx ; ret
0x000000000012edb8 : fmul dword ptr [rdi] ; mov bh, 0xc0 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cfa52 : fmul dword ptr [rdi] ; mov dh, 0xc0 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000010b869 : fmul dword ptr [rdi] ; test dword ptr [rax], esp ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000b9c85 : fmul dword ptr [rdi] ; xchg eax, ebx ; ret
0x00000000000b4c6c : fmul dword ptr [rdi] ; xchg eax, edx ; ret 0x2948
0x000000000012edb7 : fmul dword ptr gs:[rdi] ; mov bh, 0xc0 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000cfa51 : fmul dword ptr gs:[rdi] ; mov dh, 0xc0 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000155711 : fmul qword ptr [r9 + r9*4 + 0x57] ; in al, 0x4c ; mov dword ptr [rdi - 0x14], ebx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155712 : fmul qword ptr [rcx + rcx*4 + 0x57] ; in al, 0x4c ; mov dword ptr [rdi - 0x14], ebx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016c4df : fnsave dword ptr [rdx - 0x10f09923] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000002b87 : fnsave dword ptr [rdx - 0x6b] ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x000000000016c75f : fnstenv dword ptr [rdx - 0x10f09927] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016c4e1 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001307e6 : fstp dword ptr [rbx + 0x5d] ; add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x0000000000035293 : fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x000000000003532d : fstp xword ptr [rdi] ; ret
0x000000000014d3a4 : fstp xword ptr [rdx] ; movsxd rcx, ecx ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x000000000016c7e1 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000143264 : fsub qword ptr [rdi] ; add byte ptr [rdi + rax*8], ah ; add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000016c5e1 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000103ed2 : fsubp st(0) ; enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x00000000001059db : fsubp st(0) ; mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x0000000000079525 : fucompi st(0) ; lea esp, dword ptr [rdx + rdi*8 - 1] ; xor eax, eax ; pop rbx ; ret
0x0000000000077e9e : fucompi st(0) ; mov word ptr [rdi + rdi*8 - 0x76fc7401], cs ; ret 0xe283
0x000000000019867d : hlt ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; xor al, 0xf9 ; push qword ptr [rsp + rsi*8 + 1] ; add byte ptr [rsi + rsi], ah ; stc ; call rsp
0x0000000000187506 : hlt ; call qword ptr [rdi]
0x00000000001ad54c : hlt ; cmp eax, dword ptr [rcx] ; add al, ah ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001874fe : hlt ; inc dword ptr [rbx] ; xor esp, 0xf4810dff ; call qword ptr [rdi]
0x0000000000196b52 : hlt ; inc dword ptr [rdi + rdx*2 + 0x78640001] ; hlt ; call rsp
0x0000000000196b4a : hlt ; inc dword ptr [rdi + rdx*2] ; add dword ptr [rax], eax ; adc al, 0x76 ; hlt ; inc dword ptr [rdi + rdx*2 + 0x78640001] ; hlt ; call rsp
0x0000000000187109 : hlt ; inc dword ptr [rdx + 0x7efff3ec] ; cld ; lcall ptr [rdi - 4] ; jmp qword ptr [rcx]
0x00000000001b694c : hlt ; iretd ; add dword ptr [rax], eax ; adc byte ptr [rax + rdi*8], cl ; jmp qword ptr [rax]
0x00000000001aafc2 : hlt ; jmp rdi
0x00000000000d27f8 : hlt ; jno 0xd27fc ; push qword ptr [rcx] ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x000000000015aa6a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015571e : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015aa63 : hlt ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155877 : hlt ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0x14], r11 ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155893 : hlt ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014d5db : hlt ; movsxd rax, ecx ; add rax, rdi ; sub rax, rdx ; ret
0x0000000000182583 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000197112 : idiv bh ; movsb byte ptr [rdi], byte ptr [rsi] ; jnp 0x197121 ; add byte ptr [rbp + rbp*2 - 0xa], dh ; call rsp
0x000000000019710a : idiv bh ; push rsp ; jnp 0x197121 ; add byte ptr [rax + rbp*2], ah ; idiv bh ; movsb byte ptr [rdi], byte ptr [rsi] ; jnp 0x197129 ; add byte ptr [rbp + rbp*2 - 0xa], dh ; call rsp
0x00000000001883f4 : idiv bh ; test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x000000000008df1d : idiv dword ptr [rbp + 0xf] ; add byte ptr [rdi + 0x63], cl ; or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000001b35ba : idiv edi ; add dword ptr fs:[rax], eax ; add byte ptr [rax], al ; add cl, byte ptr [rdi + 0xe] ; adc byte ptr [rbx + 0xa930202], al ; ret
0x0000000000104c34 : idiv edi ; sar dword ptr [rdx + 2], cl ; mov esi, 1 ; mov rdi, r13 ; call rbx
0x0000000000104d59 : idiv edi ; sar dword ptr [rdx + 2], cl ; mov esi, 2 ; mov rdi, r13 ; call rbx
0x00000000000459a3 : imul eax, dword ptr [rcx], 0 ; add byte ptr [rbx + 0x28ba28f8], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8539
0x00000000000bd746 : imul eax, dword ptr [rdi], 0 ; add byte ptr [rdi], cl ; ret 0xf8c1
0x00000000000375fe : imul eax, ebx ; mov rbx, rax ; lea r12, qword ptr [rsi + rbx] ; mov rdi, r12 ; call r15
0x00000000001934a8 : imul edx, dword ptr [rdi - 0x67f40003], -3 ; call qword ptr [rax + 0x20fffd98]
0x00000000000375fd : imul rax, rbx ; mov rbx, rax ; lea r12, qword ptr [rsi + rbx] ; mov rdi, r12 ; call r15
0x0000000000198480 : in al, -0x32 ; clc ; dec esp ; out 1, eax ; add byte ptr [rdi + rcx*8], dh ; clc ; jmp rsp
0x00000000001a643c : in al, -0x36 ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x000000000015aa4a : in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001b993c : in al, -1 ; add dword ptr [rax], eax ; rol cl, 0xf8 ; call qword ptr [rdi]
0x00000000000c9128 : in al, 0 ; add byte ptr [rax], al ; mov rbp, r13 ; mov rdi, rbx ; call r12
0x00000000001aab3c : in al, 0x11 ; add dword ptr [rax], eax ; xor byte ptr [rdi], dl ; hlt ; call qword ptr [rdx]
0x0000000000100821 : in al, 0x49 ; mov ecx, ecx ; mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x0000000000155716 : in al, 0x4c ; mov dword ptr [rdi - 0x14], ebx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000195d40 : in al, 0x67 ; out dx, eax ; inc dword ptr [rax + rdi*8 + 0x6a140000] ; out dx, eax ; jmp rsp
0x0000000000195d80 : in al, 0x70 ; out dx, eax ; lcall ptr [rdx + rdi*8 + 0x71940000] ; out dx, eax ; call rsp
0x00000000000fc502 : in al, 0x75 ; and eax, 0xe8ef8948 ; stosd dword ptr [rdi], eax ; xor al, 0xf2 ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000ac606 : in al, 0x75 ; test al, 0xf0 ; jne 0xac66b ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000104dd8 : in al, 0xa ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000c9125 : in al, 0xf ; test ah, ah ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x13], cl ; mov rdi, rbx ; call r12
0x00000000001ae944 : in al, dx ; add qword ptr [r8], r8 ; clc ; scasd eax, dword ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x000000000013d242 : in al, dx ; cmp byte ptr [rax - 0x77], cl ; cli ; xor eax, eax ; mov dword ptr [rsp], 2 ; mov rdi, rsp ; call rdx
0x000000000003528c : in al, dx ; fld xword ptr [rsp - 0x18] ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x00000000001870a9 : in al, dx ; inc dword ptr [rdx + 0x70fff3ec] ; out dx, eax ; jmp rdi
0x00000000001870a5 : in al, dx ; inc ebp ; in al, dx ; inc dword ptr [rdx + 0x70fff3ec] ; out dx, eax ; jmp rdi
0x0000000000050baf : in al, dx ; js 0x50ba8 ; stosb byte ptr [rdi], al ; mov edx, 0x2ebf000b ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000015ae40 : in al, dx ; lddqu xmm1, xmmword ptr [rsi - 0x10] ; movdqu xmmword ptr [rdi - 0x14], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015571a : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000013d374 : in al, dx ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000015ae4a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000130ede : in al, dx ; or byte ptr [rax - 0x75], cl ; pop rdi ; sbb byte ptr [rbx + 0x7eb5e83b], cl ; std ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00000000001870ad : in al, dx ; push qword ptr [rax - 0x11] ; jmp rdi
0x00000000001a4944 : in al, dx ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; shr rsi, cl ; jmp qword ptr [rsi]
0x00000000000025b3 : in al, dx ; scasd eax, dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x0000000000121262 : in al, dx ; sub byte ptr [rcx - 0x77], cl ; enter -0x72b4, 0xd ; insb byte ptr [rdi], dx ; ret
0x000000000015aaca : in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001a7ecd : in eax, 0 ; add byte ptr [rax + 0x11], ah ; jmp qword ptr [rdi]
0x0000000000090d17 : in eax, 0 ; add byte ptr [rax], al ; pmovmskb eax, xmm1 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000184093 : in eax, 0x2d ; cmpsd dword ptr [rsi], dword ptr [rdi] ; xor byte ptr [rsi + 0x4ce2e5dd], 0x67 ; add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x00000000000bb637 : in eax, 0x48 ; cmp edx, 2 ; je 0xbb638 ; mov edx, dword ptr [rsi + 8] ; cmp dword ptr [rdi + 8], edx ; jne 0xbb62d ; ret
0x0000000000155526 : in eax, 0x4c ; mov dword ptr [rdi - 0x13], ebx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012e711 : in eax, dx ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x75], 0x74 ; and al, 0x10 ; mov rdi, rbp ; call r14
0x00000000000302da : in eax, dx ; add dword ptr [rcx - 0x7d], ecx ; std ; dec dword ptr [rdi] ; test bl, ah ; add al, byte ptr [rax] ; add byte ptr [rcx], dh ; imul al ; ret
0x00000000001a2982 : in eax, dx ; call rdi
0x0000000000034172 : in eax, dx ; cmp dword ptr [r9 + rdx*4 + 4], r11d ; jne 0x34171 ; mov eax, dword ptr [r9 + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x000000000004aa79 : in eax, dx ; cmp rdi, rsi ; mov rax, rsi ; cmovae rax, rdi ; ret
0x0000000000195542 : in eax, dx ; inc dword ptr [rdi + rdi*4 - 0x9c0000] ; in eax, dx ; push qword ptr [rdi + rdi*4 - 0x1c0000] ; in eax, dx ; jmp rsp
0x000000000013d140 : in eax, dx ; je 0x13d181 ; xor eax, eax ; mov edx, 0xffffffff ; mov rsi, rbx ; mov rdi, r15 ; call r14
0x000000000019f70a : in eax, dx ; jmp qword ptr [rdi]
0x000000000015aec0 : in eax, dx ; lddqu xmm1, xmmword ptr [rsi - 0x10] ; movdqu xmmword ptr [rdi - 0x13], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000002bd0 : in eax, dx ; mov byte ptr [rbp + 7], ah ; or ah, byte ptr [rbp + 0xc] ; scasd eax, dword ptr [rdi] ; xbegin 0xfffffffff8c6efe0 ; ret
0x00000000000aa089 : in eax, dx ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000aa09f : in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000aa0c1 : in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000aa0df : in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000aa0ff : in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000aa125 : in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000aa141 : in eax, dx ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000aa161 : in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000aa181 : in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000aa1a7 : in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000aa1c9 : in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000aa1e7 : in eax, dx ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000aa207 : in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000aa223 : in eax, dx ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000aa243 : in eax, dx ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000aa263 : in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000aa283 : in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000aa2a9 : in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000aa2f9 : in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a9fcf : in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a9fed : in eax, dx ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000aa00d : in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000aa02f : in eax, dx ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000aa04f : in eax, dx ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000aa06f : in eax, dx ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a9f05 : in eax, dx ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a9f17 : in eax, dx ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a9f2d : in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a9f45 : in eax, dx ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a9f5b : in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a9f6d : in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a9f8b : in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a9f97 : in eax, dx ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000a9fad : in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a9ef1 : in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000015552a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000c912e : in eax, dx ; mov rdi, rbx ; call r12
0x000000000015aeca : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000019531a : in eax, dx ; push qword ptr [rdi + rbp*4 - 0x4afc0000] ; in eax, dx ; jmp rsp
0x0000000000195312 : in eax, dx ; push qword ptr [rdi + rbp*4] ; add byte ptr [rsp + rsi*4 - 0x504b0013], al ; add byte ptr [rax], al ; add al, 0xb5 ; in eax, dx ; jmp rsp
0x000000000019554a : in eax, dx ; push qword ptr [rdi + rdi*4 - 0x1c0000] ; in eax, dx ; jmp rsp
0x000000000016dcc9 : inc bl ; cmp dl, 1 ; jb 0x16dcdf ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000016e398 : inc bl ; cmp dl, 1 ; jb 0x16e3aa ; mov byte ptr [rdi], cl ; ret
0x000000000016e397 : inc bl ; cmp dl, 1 ; jb 0x16e3ab ; mov byte ptr [rdi], cl ; ret
0x000000000003a917 : inc bl ; nop dword ptr [rax] ; mov rax, rdi ; cqo ; idiv rsi ; ret
0x0000000000195e35 : inc byte ptr [rax] ; add byte ptr [rsp + rdx*4 - 0x11], al ; dec dword ptr [rsi + rdi*8 - 0x6b2c0000] ; out dx, eax ; call rsp
0x000000000007d792 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x000000000004718c : inc byte ptr [rbx - 0x6bf00220] ; rol byte ptr [rcx - 0x7d], 0xfe ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x540a
0x0000000000078dba : inc byte ptr [rdx] ; cmove edx, ecx ; mov dword ptr [rdi], edx ; ret
0x00000000000adb20 : inc byte ptr [rdx] ; je 0xadb3e ; mov r9d, dword ptr [rdi + rdx*4] ; test r9d, r9d ; jne 0xadaf1 ; mov rax, rdx ; ret
0x000000000019870b : inc dword ptr [rax + rdi*8 + 0x66240001] ; stc ; call rsp
0x0000000000195d43 : inc dword ptr [rax + rdi*8 + 0x6a140000] ; out dx, eax ; jmp rsp
0x0000000000198703 : inc dword ptr [rax + rdi*8 + 1] ; add byte ptr [rsi + rbx*2], al ; stc ; inc dword ptr [rax + rdi*8 + 0x66240001] ; stc ; call rsp
0x0000000000193347 : inc dword ptr [rax - 0x2f000453] ; scasb al, byte ptr [rdi] ; sti ; jmp qword ptr [rax]
0x0000000000062221 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000000d024c : inc dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x308] ; call r12
0x00000000001932a3 : inc dword ptr [rax] ; movsxd rdi, ebx ; push rax ; movsxd rdi, ebx ; jmp qword ptr [rax]
0x000000000004aa74 : inc dword ptr [rbp + 0x31] ; shr bl, cl ; in eax, dx ; cmp rdi, rsi ; mov rax, rsi ; cmovae rax, rdi ; ret
0x00000000000bca8f : inc dword ptr [rbx + 0x18b818fa] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3bba
0x000000000011aec3 : inc dword ptr [rbx] ; add byte ptr [rax], al ; ja 0x11aede ; mov rax, rdi ; sar rax, 6 ; ret
0x00000000001874ff : inc dword ptr [rbx] ; xor esp, 0xf4810dff ; call qword ptr [rdi]
0x0000000000047188 : inc dword ptr [rcx - 0x73] ; inc byte ptr [rbx - 0x6bf00220] ; rol byte ptr [rcx - 0x7d], 0xfe ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x540a
0x00000000000c2aa7 : inc dword ptr [rcx - 0x75] ; adc al, 0x31 ; rol byte ptr [rcx - 0x7d], cl ; clc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x0000000000099b48 : inc dword ptr [rcx - 0x77] ; fld dword ptr [rax + rdi - 0x31] ; jb 0x99b3b ; mov rdx, rax ; jmp 0x99af4
0x00000000000470a2 : inc dword ptr [rcx - 0x7d] ; stc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x98e9
0x00000000001b9fcb : inc dword ptr [rcx] ; or ch, byte ptr [rdi + 5] ; ret
0x000000000019646b : inc dword ptr [rdi + 0x5e040001] ; push qword ptr [rdi + 0x5e540001] ; jmp rsp
0x0000000000198bbb : inc dword ptr [rdi + rbx + 0x14b40002] ; cli ; call rsp
0x000000000019837b : inc dword ptr [rdi + rbx*8 + 1] ; add ah, dl ; wait ; clc ; ljmp ptr [rdi + rbx*8 - 0x636bffff] ; clc ; call rsp
0x00000000000d6074 : inc dword ptr [rdi + rcx - 0x4a] ; add al, 7 ; mov r9, rdi ; xor eax, eax ; mov rdx, r8 ; jmp 0xd60a7
0x000000000003b7d2 : inc dword ptr [rdi + rcx - 0x4a] ; ret
0x0000000000195543 : inc dword ptr [rdi + rdi*4 - 0x9c0000] ; in eax, dx ; push qword ptr [rdi + rdi*4 - 0x1c0000] ; in eax, dx ; jmp rsp
0x0000000000196b53 : inc dword ptr [rdi + rdx*2 + 0x78640001] ; hlt ; call rsp
0x0000000000196b4b : inc dword ptr [rdi + rdx*2] ; add dword ptr [rax], eax ; adc al, 0x76 ; hlt ; inc dword ptr [rdi + rdx*2 + 0x78640001] ; hlt ; call rsp
0x0000000000193c9f : inc dword ptr [rdx + 0x6e] ; cld ; push qword ptr [rdx + 0x22fffc6d] ; insd dword ptr [rdi], dx ; cld ; call qword ptr [rdx + 0x22fffc6c]
0x00000000001870ab : inc dword ptr [rdx + 0x70fff3ec] ; out dx, eax ; jmp rdi
0x000000000018710b : inc dword ptr [rdx + 0x7efff3ec] ; cld ; lcall ptr [rdi - 4] ; jmp qword ptr [rcx]
0x00000000001800eb : inc dword ptr [rdx + rdi - 0x15] ; dec dword ptr [rdx + rdi + 0x38d8ffeb] ; jmp 0x180107
0x0000000000195d7b : inc dword ptr [rdx + rdi*8 + 0x70e40000] ; out dx, eax ; lcall ptr [rdx + rdi*8 + 0x71940000] ; out dx, eax ; call rsp
0x00000000001870a3 : inc dword ptr [rdx - 0x3a000c14] ; in al, dx ; inc dword ptr [rdx + 0x70fff3ec] ; out dx, eax ; jmp rdi
0x00000000001860fb : inc eax ; pslld mm7, mm7 ; ror byte ptr [rdi], 1 ; jmp rax
0x00000000001870a7 : inc ebp ; in al, dx ; inc dword ptr [rdx + 0x70fff3ec] ; out dx, eax ; jmp rdi
0x00000000001883f9 : inc ebx ; add dh, bh ; jmp rdi
0x000000000016e354 : inc ebx ; cmp dl, 0x20 ; jb 0x16e375 ; vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000000a7062 : inc ebx ; nop ; nop word ptr cs:[rax + rax] ; mov dword ptr [rdi], edx ; ret
0x00000000000a70a3 : inc ebx ; nop ; nop word ptr cs:[rax + rax] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a7124 : inc ebx ; nop word ptr cs:[rax + rax] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000005a41d : inc edi ; test dword ptr [rdi + rbp*8 - 1], ecx ; call qword ptr [rax]
0x000000000019350f : inc esi ; movabs dword ptr [0xa631fffda631fffd], eax ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x000000000016dcc8 : inc r11b ; cmp dl, 1 ; jb 0x16dce0 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a7123 : inc r11d ; nop word ptr cs:[rax + rax] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000003c57c : insb byte ptr [rdi], dx ; adc eax, 0x590ff300 ; shl byte ptr [rdi + rax*8], 0x22 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000003c505 : insb byte ptr [rdi], dx ; adc eax, 0xc4834800 ; sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000149624 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000130520 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x00000000001b0625 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; sub byte ptr [rcx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000000fc580 : insb byte ptr [rdi], dx ; add eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x00000000000ac793 : insb byte ptr [rdi], dx ; add rdi, 4 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0xac79d ; xor eax, eax ; ret
0x00000000000f1392 : insb byte ptr [rdi], dx ; and al, 0x18 ; add dword ptr [rax - 0x75], ecx ; and al, 0x18 ; mov rdx, rax ; jmp 0xf13de
0x000000000012a180 : insb byte ptr [rdi], dx ; and al, 0x40 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000037b8c : insb byte ptr [rdi], dx ; and al, 0x50 ; nop ; mov rsi, r13 ; mov rdi, r14 ; mov rdx, rbp ; call r15
0x000000000003528e : insb byte ptr [rdi], dx ; and al, 0xe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x000000000003532a : insb byte ptr [rdi], dx ; and al, 0xe8 ; fstp xword ptr [rdi] ; ret
0x00000000000bbcdf : insb byte ptr [rdi], dx ; and al, 0xe8 ; fsubp st(1) ; fstp qword ptr [rsp - 0x10] ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000035308 : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x00000000000354aa : insb byte ptr [rdi], dx ; and al, 0xfe ; ret
0x00000000001963fc : insb byte ptr [rdi], dx ; and al, 1 ; add byte ptr [rbx + rsi*8 + 0x24bcfff1], ah ; add dword ptr [rax], eax ; mov ah, 0xf3 ; int1 ; call rsp
0x0000000000035369 : insb byte ptr [rdi], dx ; and al, 8 ; fscale ; fstp st(1) ; ret
0x0000000000035481 : insb byte ptr [rdi], dx ; and al, 8 ; fxam ; fnstsw ax ; fstp st(0) ; and eax, 0x200 ; ret
0x000000000003522a : insb byte ptr [rdi], dx ; and al, 8 ; ret
0x000000000012cdcd : insb byte ptr [rdi], dx ; and al, 8 ; xor edx, edx ; mov rsi, r12 ; mov rdi, rbx ; mov rcx, r13 ; call r15
0x000000000005fa5d : insb byte ptr [rdi], dx ; and eax, 0x89480000 ; ret
0x00000000001963e4 : insb byte ptr [rdi], dx ; and eax, dword ptr [rcx] ; add byte ptr [rbx + rcx*8 + 0x2384fff1], dl ; add dword ptr [rax], eax ; in al, -0x33 ; int1 ; call rsp
0x0000000000193c71 : insb byte ptr [rdi], dx ; cld ; call rdx
0x0000000000193cad : insb byte ptr [rdi], dx ; cld ; jmp qword ptr [rdx]
0x0000000000193c6d : insb byte ptr [rdi], dx ; cld ; ljmp ptr [rsp + rbp*2] ; cld ; call rdx
0x0000000000193e2d : insb byte ptr [rdi], dx ; cld ; push rax ; cld ; call qword ptr [rax]
0x0000000000193ded : insb byte ptr [rdi], dx ; cld ; push rax ; imul edi, esp, -1 ; nop ; jae 0x193dfd ; call qword ptr [rax]
0x00000000001986a4 : insb byte ptr [rdi], dx ; cmc ; add dword ptr [rax], eax ; add al, 0x39 ; stc ; inc dword ptr [rbp + rsi*8 + 0x45740001] ; stc ; call rsp
0x00000000001ad5c4 : insb byte ptr [rdi], dx ; cmp al, 1 ; add byte ptr [rax + 0x58], bl ; cmc ; jmp qword ptr [rcx]
0x000000000019565c : insb byte ptr [rdi], dx ; enter 0, -0x3c ; sub al, 0xee ; ljmp ptr [rax + rcx*8 + 0x2db40000] ; out dx, al ; call rsp
0x0000000000197fdc : insb byte ptr [rdi], dx ; enter 1, 0x24 ; xor edi, eax ; lcall ptr [rax + rcx*8 + 0x33b40001] ; clc ; jmp rsp
0x000000000019841c : insb byte ptr [rdi], dx ; in al, 1 ; add byte ptr [rbp + rsi*4 - 0x1b6b0008], al ; add dword ptr [rax], eax ; mov ah, 0xb6 ; clc ; jmp rsp
0x000000000018409e : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000001a8ac4 : insb byte ptr [rdi], dx ; int1 ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0xe], al ; call qword ptr [rdx]
0x00000000001a12c4 : insb byte ptr [rdi], dx ; jns 0x1a12ce ; add al, cl ; jns 0x1a12bf ; jmp qword ptr [rdi]
0x00000000001a50c4 : insb byte ptr [rdi], dx ; mov bh, 0 ; add byte ptr [rax + 0x3d], cl ; out dx, eax ; jmp rsi
0x0000000000134c12 : insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x0000000000003680 : insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x00000000001a57c4 : insb byte ptr [rdi], dx ; mov esi, 0xab880000 ; sti ; call qword ptr [rax]
0x000000000007011c : insb byte ptr [rdi], dx ; or al, byte ptr [rax] ; add rsp, 0x80 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008de20 : insb byte ptr [rdi], dx ; push rcx ; add dword ptr [rax], eax ; ret
0x000000000012126a : insb byte ptr [rdi], dx ; ret
0x00000000001538c0 : insb byte ptr [rdi], dx ; std ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001932bd : insb byte ptr [rdi], dx ; sti ; call qword ptr [rax]
0x00000000001a43c4 : insb byte ptr [rdi], dx ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; mov bl, 0xee ; jmp rdx
0x00000000000fa177 : insb byte ptr [rdi], dx ; sub al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000012a1bc : insb byte ptr [rdi], dx ; sub dword ptr [rax], eax ; and dword ptr [rax + 0x40], 0xfffffff9 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000198d34 : insb byte ptr [rdi], dx ; sub dword ptr [rdx], eax ; add byte ptr [rsi + rcx*2 + 0x29bcfffa], ah ; add al, byte ptr [rax] ; push rsp ; cli ; jmp rsp
0x000000000010a274 : insb byte ptr [rdi], dx ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000013dd93 : insb byte ptr [rdi], dx ; xor eax, eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000014c290 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000003c441 : insd dword ptr [rdi], dx ; adc eax, 0xc4834800 ; sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000009089f : insd dword ptr [rdi], dx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000000bce91 : insd dword ptr [rdi], dx ; add byte ptr [rax + 1], cl ; ret
0x0000000000106d5b : insd dword ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; ret 0xabe
0x00000000000f712f : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rax + rax*8 + 0x9b81175], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000991cf : insd dword ptr [rdi], dx ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000e202b : insd dword ptr [rdi], dx ; add byte ptr [rcx], al ; ret 0x3944
0x00000000000bfd5f : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000014d190 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000bd740 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x76bc2], al ; add byte ptr [rdi], cl ; ret 0xf8c1
0x00000000001b06fd : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rdx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001b06e5 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; call 0x271afd54
0x00000000001b0685 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; mov byte ptr [rcx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001b0715 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; sbb byte ptr [rdx - 0xa], ah ; jmp qword ptr [rsi]
0x00000000001b06cd : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; shl byte ptr [rcx - 0xa], 1 ; jmp qword ptr [rsi]
0x00000000001b072d : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; xor byte ptr [rdx - 0xa], ah ; jmp qword ptr [rsi]
0x0000000000081a2f : insd dword ptr [rdi], dx ; add eax, dword ptr [rax] ; add dh, dh ; ret
0x00000000000542af : insd dword ptr [rdi], dx ; call qword ptr [rdx]
0x0000000000193ca9 : insd dword ptr [rdi], dx ; cld ; call qword ptr [rdx + 0x22fffc6c]
0x0000000000193ca5 : insd dword ptr [rdi], dx ; cld ; jmp qword ptr [rdx]
0x0000000000193e25 : insd dword ptr [rdi], dx ; cld ; jmp rax
0x0000000000193c69 : insd dword ptr [rdi], dx ; cld ; lcall ptr [rsp + rbp*2 + 0x6c2cfffc] ; cld ; call rdx
0x0000000000193c65 : insd dword ptr [rdi], dx ; cld ; ljmp ptr [rbp*2 + 0x6c9cfffc] ; cld ; ljmp ptr [rsp + rbp*2] ; cld ; call rdx
0x0000000000198e59 : insd dword ptr [rdi], dx ; cli ; call rsp
0x000000000011f94d : insd dword ptr [rdi], dx ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000003b4fd : insd dword ptr [rdi], dx ; out 0xec, al ; fiadd word ptr [rip + 0x48000000] ; mov dword ptr [rsi + 0x10], eax ; xor eax, eax ; ret
0x000000000018409f : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000000c9b3f : insd dword ptr [rdi], dx ; pop rsi ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000001bf4 : insd dword ptr [rdi], dx ; ret 0x1bb7
0x000000000018244d : insd dword ptr [rdi], dx ; ret 0xb9b9
0x0000000000105fb7 : insd dword ptr [rdi], dx ; shr al, 0x82 ; jb 0x105fc0 ; dec dword ptr [rax + 0x39] ; ret
0x00000000000fa084 : insd dword ptr [rdi], dx ; sub al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000018335f : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000185dee : int1 ; dec dword ptr [rax - 0x67000e56] ; stosb byte ptr [rdi], al ; int1 ; jmp qword ptr [rax]
0x00000000000fa083 : int1 ; insd dword ptr [rdi], dx ; sub al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000a060d : int1 ; je 0xa0630 ; add rax, 1 ; movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0xa0618 ; ret
0x00000000000a074d : int1 ; je 0xa0770 ; add rdi, 1 ; movsx ecx, byte ptr [rdi] ; test cl, cl ; jne 0xa0758 ; xor eax, eax ; ret
0x000000000016e349 : int1 ; jl 0x16e3a0 ; adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x00000000000768ce : int1 ; lea rsi, qword ptr [rbp + 0x50] ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000076a8a : int1 ; lea rsi, qword ptr [rbp + 0x90] ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000015a8bb : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000155cef : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000130e7a : int1 ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000015a8b3 : int1 ; mov rcx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012ca3b : int1 ; mov rdi, r13 ; call r12
0x0000000000155e67 : int1 ; mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0x17], r11 ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155e83 : int1 ; mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000f541d : int1 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call 0xf169c
0x000000000013a4ba : int1 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000c519b : int1 ; mov rsi, rbx ; mov rdi, rbp ; mov rdx, r14 ; mov qword ptr [rsp + 0x10], r11 ; call 0x913c1
0x000000000012ae43 : int1 ; pop rdi ; sub dword ptr [rax], eax ; mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x12ae5b ; ret
0x00000000000ce483 : int1 ; sub dword ptr [rdi], ebp ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000135656 : int1 ; xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x0000000000135676 : int1 ; xor eax, eax ; mov rsi, rdx ; mov dword ptr [rdi + 0x10], 2 ; add rdi, 0x10 ; jmp rcx
0x0000000000138126 : int1 ; xor eax, eax ; mov rsi, rdx ; mov dword ptr [rdi + 0x58], 2 ; add rdi, 0x58 ; jmp rcx
0x0000000000137846 : int1 ; xor eax, eax ; mov rsi, rdx ; mov dword ptr [rdi + 0x68], 2 ; add rdi, 0x68 ; jmp rcx
0x0000000000098c0e : int1 ; xor edi, edi ; mov rax, rdi ; ret
0x00000000001b694d : iretd ; add dword ptr [rax], eax ; adc byte ptr [rax + rdi*8], cl ; jmp qword ptr [rax]
0x000000000010a459 : ja 0x10a478 ; lea rax, qword ptr [rip + 0x7e7be] ; movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000011aea1 : ja 0x11aed2 ; mov r15, qword ptr [rdi + 0x28] ; mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000011aec7 : ja 0x11aeda ; mov rax, rdi ; sar rax, 6 ; ret
0x000000000012de81 : ja 0x12ded4 ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000130e76 : ja 0x130e95 ; sub rcx, rsi ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000013e6a2 : ja 0x13e6c6 ; mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000013e83f : ja 0x13e862 ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000013e83b : ja 0x13e86a ; mov qword ptr [rdi + 0x18], rsi ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000013eabb : ja 0x13eae8 ; jbe 0x13eadb ; add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000013eac0 : ja 0x13eaf0 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000001507d4 : ja 0x15081a ; jb 0x1507e6 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000150a18 : ja 0x150a69 ; vmovdqu ymmword ptr [rdi + 0x60], ymm7 ; vmovdqu ymmword ptr [r11], ymm8 ; vzeroupper ; ret
0x0000000000150b34 : ja 0x150b85 ; vmovdqu ymmword ptr [rdi + 0x60], ymm7 ; vmovdqu ymmword ptr [r11], ymm8 ; vzeroupper ; ret
0x0000000000150bca : ja 0x150be9 ; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0 ; vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x0000000000150bc9 : ja 0x150bea ; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0 ; vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x0000000000150b7a : ja 0x150bf2 ; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0 ; vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x0000000000150b79 : ja 0x150bf3 ; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0 ; vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x0000000000150c89 : ja 0x150c5d ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; vmovdqu xmmword ptr [rdi], xmm0 ; vzeroupper ; ret
0x0000000000150c97 : ja 0x150c69 ; mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x0000000000150ca3 : ja 0x150c73 ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000150cad : ja 0x150c7f ; mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; vzeroupper ; ret
0x0000000000150c81 : ja 0x150cb8 ; jb 0x150c90 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000001536be : ja 0x1536f0 ; movsxd r9, dword ptr [r11 + rdx*4] ; add rsi, rdx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000001560a1 : ja 0x1560d0 ; movsxd r9, dword ptr [r11 + rdx*4] ; add rsi, rdx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000016e0f3 : ja 0x16e0f7 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000016e634 : ja 0x16e692 ; jb 0x16e646 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000016ec41 : ja 0x16ec15 ; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0 ; vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x000000000016ec4f : ja 0x16ec23 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; vmovdqu xmmword ptr [rdi], xmm0 ; vzeroupper ; ret
0x000000000016ec5d : ja 0x16ec2f ; mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x000000000016ec69 : ja 0x16ec39 ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x000000000016ec73 : ja 0x16ec45 ; mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; vzeroupper ; ret
0x000000000016ec39 : ja 0x16ec7e ; jb 0x16ec48 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000002d9d2 : ja 0x2d9ee ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000002da1d : ja 0x2da38 ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x00000000000355e1 : ja 0x35612 ; mov r15, qword ptr [rdi + 0x28] ; mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x00000000000038fa : ja 0x395c ; clc ; salc ; jb 0x3982 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000048eee : ja 0x48f40 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000006da04 : ja 0x6da48 ; lea rdi, qword ptr [rip + 0x118013] ; movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x000000000007510b : ja 0x75297 ; mov rdx, r15 ; mov rdi, r12 ; call 0x913be
0x00000000000914a4 : ja 0x914d5 ; jb 0x914b6 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000091670 : ja 0x9169c ; movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000009173e : ja 0x9176a ; movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000091882 : ja 0x9189b ; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000091832 : ja 0x918a4 ; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000091923 : ja 0x91940 ; jb 0x9192f ; mov byte ptr [rdi], cl ; ret
0x00000000000a60b3 : ja 0xa60bd ; mov dword ptr [rdi], ecx ; ret
0x00000000000a60f4 : ja 0xa6103 ; mov qword ptr [rdi], rcx ; ret
0x00000000000a68f7 : ja 0xa690b ; sub r8, 3 ; lea rdi, qword ptr [rdi + 3] ; jne 0xa7180 ; ret
0x00000000000a6ab9 : ja 0xa6adb ; sub r8, 0x11 ; lea rdi, qword ptr [rdi + 0x11] ; jne 0xa7180 ; ret
0x00000000000a6b3f : ja 0xa6b65 ; sub r8, 0x15 ; lea rdi, qword ptr [rdi + 0x15] ; jne 0xa7180 ; ret
0x00000000000a6bc1 : ja 0xa6beb ; sub r8, 0x19 ; lea rdi, qword ptr [rdi + 0x19] ; jne 0xa7180 ; ret
0x00000000000a7257 : ja 0xa728a ; sub r8, 0x10 ; jb 0xa682a ; movdqu xmmword ptr [rdi + 0x30], xmm7 ; ret
0x00000000000a7697 : ja 0xa76a1 ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a76b3 : ja 0xa76c1 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a7704 : ja 0xa7717 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a77e9 : ja 0xa7801 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a785f : ja 0xa787b ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a78e1 : ja 0xa7901 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a9193 : ja 0xa919d ; mov dword ptr [rdi], ecx ; ret
0x00000000000a91d4 : ja 0xa91e3 ; mov qword ptr [rdi], rcx ; ret
0x00000000000a9c63 : ja 0xa9c6d ; mov dword ptr [rdi], ecx ; ret
0x00000000000a9ca4 : ja 0xa9cb3 ; mov qword ptr [rdi], rcx ; ret
0x00000000000ab049 : ja 0xab069 ; sub rdi, 0x10 ; add rax, rdi ; ret
0x00000000000aaf7d : ja 0xab06c ; add rax, rdi ; add rax, rcx ; ret
0x00000000000c9122 : ja 0xc9182 ; test esp, esp ; je 0xc9221 ; mov rbp, r13 ; mov rdi, rbx ; call r12
0x00000000000e8d54 : ja 0xe8dd6 ; movzx edi, byte ptr [rdx + 8] ; movsxd rdi, dword ptr [r11 + rdi*4] ; add rdi, r11 ; jmp rdi
0x00000000000fd9b7 : ja 0xfd9ff ; and eax, 0xffffeff0 ; or esi, eax ; xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x00000000000fda23 : ja 0xfda65 ; jne 0xfda12 ; or dword ptr [rdi], 0x80000000 ; xor eax, eax ; ret
0x0000000000106114 : jae 0x106141 ; lea rdx, qword ptr [rax + 1] ; mov qword ptr [rdi + 0x28], rdx ; mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012fe02 : jae 0x12fe35 ; mov rdx, qword ptr [rbx + 0x28] ; add rsp, 8 ; mov rdi, rbp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x000000000014d5da : jae 0x14d5db ; movsxd rax, ecx ; add rax, rdi ; sub rax, rdx ; ret
0x00000000001507cf : jae 0x150812 ; cmp dl, 1 ; ja 0x15081f ; jb 0x1507eb ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000150c7c : jae 0x150cb3 ; cmp dl, 1 ; ja 0x150cbd ; jb 0x150c95 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000016e62f : jae 0x16e68a ; cmp dl, 1 ; ja 0x16e697 ; jb 0x16e64b ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000016ec34 : jae 0x16ec79 ; cmp dl, 1 ; ja 0x16ec83 ; jb 0x16ec4d ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000000025b0 : jae 0x262c ; jo 0x25ac ; scasd eax, dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x000000000002cb1a : jae 0x2cb36 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000079948 : jae 0x7996d ; lea rdx, qword ptr [rax + 1] ; mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000007997f : jae 0x7999d ; lea rdx, qword ptr [rax + 1] ; mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000009149f : jae 0x914cd ; cmp dl, 1 ; ja 0x914da ; jb 0x914bb ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000091919 : jae 0x9193a ; cmp dl, 4 ; jae 0x91943 ; cmp dl, 1 ; ja 0x9194a ; jb 0x91939 ; mov byte ptr [rdi], cl ; ret
0x000000000009191e : jae 0x9193e ; cmp dl, 1 ; ja 0x91945 ; jb 0x91934 ; mov byte ptr [rdi], cl ; ret
0x00000000000d26e9 : jae 0xd26eb ; push qword ptr [rcx] ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x00000000000e8d55 : jae 0xe8d72 ; mov dh, 0x7a ; or byte ptr [rcx + 0x63], cl ; cmp al, 0xbb ; add rdi, r11 ; jmp rdi
0x000000000010542a : jb 0x105438 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000125dba : jb 0x125de1 ; movzx eax, byte ptr [rdi + 1] ; lea rax, qword ptr [rdi + rax + 2] ; cmp rdx, rax ; sbb eax, eax ; ret
0x00000000001507d6 : jb 0x1507e4 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000001507b6 : jb 0x15098c ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000150c83 : jb 0x150c8e ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000153c4c : jb 0x153c66 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000153cfa : jb 0x153d0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153d9c : jb 0x153db6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000153e4a : jb 0x153e5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153eec : jb 0x153f06 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000153f9a : jb 0x153faa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015403c : jb 0x154056 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001540ea : jb 0x1540fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015418c : jb 0x1541a6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015423a : jb 0x15424a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001542dc : jb 0x1542f6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015438a : jb 0x15439a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015442c : jb 0x154446 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001544da : jb 0x1544ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015457a : jb 0x15459b ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015462a : jb 0x15463a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001546cc : jb 0x1546e6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015477a : jb 0x15478a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015481c : jb 0x154836 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001548ca : jb 0x1548da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015496c : jb 0x154986 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154a1a : jb 0x154a2a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154abc : jb 0x154ad6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154b6a : jb 0x154b7a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154c0c : jb 0x154c26 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154cba : jb 0x154cca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154d5c : jb 0x154d76 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154e0a : jb 0x154e1a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154eac : jb 0x154ec6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154f5a : jb 0x154f6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015661c : jb 0x156636 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001566ca : jb 0x1566da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015676c : jb 0x156786 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015681a : jb 0x15682a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001568bc : jb 0x1568d6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015696a : jb 0x15697a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156a0c : jb 0x156a26 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000156aba : jb 0x156aca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156b5c : jb 0x156b76 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000156c0a : jb 0x156c1a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156cac : jb 0x156cc6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000156d5a : jb 0x156d6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156dfc : jb 0x156e16 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000156eaa : jb 0x156eba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156f4a : jb 0x156f6b ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000156ffa : jb 0x15700a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015709c : jb 0x1570b6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015714a : jb 0x15715a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001571ec : jb 0x157206 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015729a : jb 0x1572aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015733c : jb 0x157356 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001573ea : jb 0x1573fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015748c : jb 0x1574a6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015753a : jb 0x15754a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001575dc : jb 0x1575f6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015768a : jb 0x15769a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015772c : jb 0x157746 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001577da : jb 0x1577ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015787c : jb 0x157896 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000015792a : jb 0x15793a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016dc94 : jb 0x16dcb5 ; mov rsi, qword ptr [rsi] ; mov rcx, qword ptr [rcx - 8] ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000016dca8 : jb 0x16dcc3 ; mov esi, dword ptr [rsi] ; mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000016dcce : jb 0x16dcda ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000016dcb9 : jb 0x16dcdc ; mov si, word ptr [rsi] ; mov cx, word ptr [rcx - 2] ; mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x000000000016e346 : jb 0x16e365 ; vmovups zmmword ptr [rdi], zmm2 ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000016e345 : jb 0x16e366 ; vmovups zmmword ptr [rdi], zmm2 ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000016e359 : jb 0x16e370 ; vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000016e372 : jb 0x16e389 ; vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000016e385 : jb 0x16e394 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000016e390 : jb 0x16e3a3 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000016e39d : jb 0x16e3a5 ; mov byte ptr [rdi], cl ; ret
0x000000000016e636 : jb 0x16e644 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000016e611 : jb 0x16e857 ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000016ec3b : jb 0x16ec46 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000196f1d : jb 0x196f26 ; add byte ptr [rsi + rdi - 0xa], dh ; jmp rsp
0x0000000000001b08 : jb 0x1b2d ; fisttp dword ptr [rdi] ; jg 0x1b71 ; mov edx, 0x855233da ; mov bl, 0xee ; enter 0x59e7, 0x5b ; ret 0x2a63
0x0000000000002b88 : jb 0x2b28 ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x0000000000038646 : jb 0x38667 ; mov byte ptr [rax + 0xe], cl ; mov rdx, r13 ; mov rsi, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call r15
0x00000000000038fe : jb 0x397e ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00000000000743ec : jb 0x743e5 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000079104 : jb 0x7913b ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000794d4 : jb 0x794c9 ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x0000000000091404 : jb 0x9140d ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000913f9 : jb 0x91415 ; je 0x91417 ; lea rdx, qword ptr [rsi + rcx] ; cmp rdi, rdx ; jb 0x91418 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000914a6 : jb 0x914b4 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000914a5 : jb 0x914b5 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000009148b : jb 0x915ff ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000091925 : jb 0x9192d ; mov byte ptr [rdi], cl ; ret
0x00000000000a725d : jb 0xa6824 ; movdqu xmmword ptr [rdi + 0x30], xmm7 ; ret
0x00000000000a8a6d : jb 0xa7ec8 ; movdqu xmmword ptr [rdi + 0x30], xmm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000aa2ed : jb 0xa9b99 ; movdqu xmmword ptr [rdi + 0x30], xmm7 ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000ad33d : jb 0xad2c9 ; ror byte ptr [rdi], 0x95 ; ret 0xe883
0x000000000013eabd : jbe 0x13ead9 ; add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000149787 : jbe 0x1497a0 ; movzx ecx, byte ptr [rsi + rdx] ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000153657 : jbe 0x153670 ; movzx ecx, byte ptr [rsi + rdx] ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000196b51 : jbe 0x196b51 ; inc dword ptr [rdi + rdx*2 + 0x78640001] ; hlt ; call rsp
0x000000000019a999 : jbe 0x19a99a ; jmp qword ptr [rdi]
0x000000000004aac1 : jbe 0x4ab02 ; je 0x4ab49 ; jns 0x4aa9d ; or byte ptr [r8], r8b ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x000000000004aac0 : jbe 0x4ab03 ; je 0x4ab4a ; jns 0x4aa9e ; or byte ptr [r8], r8b ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x0000000000070baa : jbe 0x70c17 ; mov rax, qword ptr [rbp + 0x48] ; add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000073465 : jbe 0x734a0 ; mov rax, qword ptr [rbp + 0x18] ; mov esi, r12d ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000738a2 : jbe 0x738fa ; mov eax, dword ptr [rbp + 0x20] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000000738a1 : jbe 0x73928 ; mov rax, qword ptr [rbp + 0x20] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000008f6a7 : jbe 0x8f6c0 ; movzx ecx, byte ptr [rsi + rdx] ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000090e16 : jbe 0x90e55 ; add rax, rdi ; ret
0x0000000000090e26 : jbe 0x90e57 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000090e36 : jbe 0x90e57 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000090e46 : jbe 0x90e57 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000090ba0 : jbe 0x90e5c ; add rax, rdi ; add rax, rcx ; ret
0x000000000010076e : je 0x100781 ; mov qword ptr [rax + 8], rdi ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000010501c : je 0x10556b ; xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000104aef : je 0x10558b ; xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000104ac8 : je 0x1055ad ; mov rbp, rdi ; xor edx, edx ; xor esi, esi ; call rbx
0x0000000000104d92 : je 0x1055cb ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000105041 : je 0x1055eb ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000104b14 : je 0x10560b ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000001052bf : je 0x10562b ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000104b38 : je 0x10564b ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000104edb : je 0x10566b ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000104db6 : je 0x10568b ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000104c5d : je 0x1056ab ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000105408 : je 0x1056cb ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000001052e3 : je 0x1056eb ; xor esi, esi ; mov rdi, r14 ; call rbx
0x000000000010518a : je 0x10570b ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000105065 : je 0x10572b ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000001050fe : je 0x10574b ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000105085 : je 0x10576b ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000001054a1 : je 0x10578b ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000105428 : je 0x1057ab ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000010537c : je 0x1057cb ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000105303 : je 0x1057eb ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000105223 : je 0x10580b ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000001051aa : je 0x10582b ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104f74 : je 0x10584b ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104efb : je 0x10586b ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104b58 : je 0x10588b ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104e4f : je 0x1058ab ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104dd6 : je 0x1058cb ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104bd1 : je 0x1058eb ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104cf6 : je 0x10590b ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104c7d : je 0x10592b ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000107732 : je 0x10774b ; cmp rdi, rdx ; jne 0x107733 ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000114eb1 : je 0x114ed9 ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x0000000000117046 : je 0x11705a ; lock cmpxchg qword ptr [rip + 0x2af6f7], rdi ; cmp rdx, rax ; jne 0x117041 ; ret
0x00000000001177d0 : je 0x117812 ; lea rsi, qword ptr [rbp - 0x20] ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x0000000000122227 : je 0x122233 ; mov rdi, rbx ; call rax
0x000000000012251f : je 0x12252b ; mov rdi, rbx ; call rax
0x000000000012262f : je 0x122643 ; lea rdi, qword ptr [rip + 0x2a3068] ; call rax
0x000000000012aa6b : je 0x12aa7b ; cmp dword ptr [rdi + 0x10], 2 ; je 0x12aa80 ; ret
0x000000000012df73 : je 0x12df7f ; mov rdi, rsp ; call rax
0x000000000012e05e : je 0x12e06a ; mov rdi, rsp ; call rax
0x000000000012e70f : je 0x12e813 ; xor eax, eax ; mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x000000000012e919 : je 0x12e925 ; mov rdi, rbp ; call rax
0x000000000012f97c : je 0x12f988 ; mov rdi, rbx ; call rax
0x000000000012fbf7 : je 0x12fa99 ; mov rdi, rbx ; call rax
0x000000000012fcee : je 0x12fcfa ; mov rdi, rbx ; call rax
0x00000000001304f2 : je 0x1304fe ; mov rdi, rbp ; call rdx
0x00000000001309f7 : je 0x130af4 ; mov rdi, rbp ; call qword ptr [rbx]
0x0000000000134af2 : je 0x134b06 ; lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x000000000013500e : je 0x13503f ; push rax ; mov rdi, r12 ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x00000000001354ea : je 0x1354f6 ; mov rdi, r12 ; call rax
0x00000000001356bb : je 0x1356c9 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000136a70 : je 0x136991 ; mov rdi, rbx ; call rax
0x00000000001369a7 : je 0x1369b3 ; mov rdi, r12 ; call rax
0x0000000000136b98 : je 0x136ba4 ; mov rdi, rbp ; call rax
0x0000000000136db8 : je 0x136dc4 ; mov rdi, rbp ; call rax
0x000000000013788f : je 0x13789d ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000137cd6 : je 0x137d07 ; push rax ; mov rdi, r12 ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x0000000000137f7b : je 0x137f87 ; mov rdi, r12 ; call rax
0x00000000001382ef : je 0x1382fd ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000013b87b : je 0x13b889 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013bf94 : je 0x13bfa2 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013d141 : je 0x13d180 ; xor eax, eax ; mov edx, 0xffffffff ; mov rsi, rbx ; mov rdi, r15 ; call r14
0x000000000013ddab : je 0x13dda4 ; mov rsi, r13 ; mov rdi, rbp ; mov edx, 0xffffffff ; xor eax, eax ; call r8
0x000000000013e864 : je 0x13e897 ; xor eax, eax ; mov edx, 0xffffffff ; mov rsi, rbx ; mov rdi, rbp ; call rcx
0x000000000013e98e : je 0x13e9d0 ; xor eax, eax ; mov edx, 0xffffffff ; mov rsi, r14 ; mov rdi, rbp ; call r12
0x000000000014d385 : je 0x14d36b ; movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x000000000014d4c1 : je 0x14d4a8 ; movsxd rax, ecx ; add rax, rdi ; ret
0x0000000000166265 : je 0x165e1f ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000016b638 : je 0x16b65f ; test al, 1 ; jne 0x16b67f ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000016e728 : je 0x16e74f ; std ; vmovdqu64 zmmword ptr [rdi + rdx - 0x100], zmm7 ; vzeroupper ; ret
0x0000000000170be5 : je 0x170c0e ; mov eax, dword ptr [rdi - 0x10] ; cmp eax, dword ptr [rsi - 0x10] ; jne 0x170d2e ; ret
0x0000000000170c13 : je 0x170c3e ; mov eax, dword ptr [rdi - 8] ; cmp eax, dword ptr [rsi - 8] ; jne 0x170d2e ; ret
0x00000000001721b5 : je 0x1721d7 ; mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x1721d2 ; call rax
0x0000000000182313 : je 0x182340 ; or eax, 0x381e4bdc ; shl dword ptr [rdi - 0x3ad6d59f], cl ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x0000000000196714 : je 0x19675e ; add dword ptr [rax], eax ; add al, 0x4a ; lcall ptr [rcx + rdi + 0x4a940001] ; call rsp
0x000000000019e3f9 : je 0x19e3e8 ; call rdi
0x000000000019e3f8 : je 0x19e3e9 ; call rdi
0x00000000001a64cc : je 0x1a64a0 ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a7dcc : je 0x1a7db9 ; add byte ptr [rax], al ; mov al, 0x10 ; jmp qword ptr [rdi]
0x00000000000204ad : je 0x204b9 ; mov rdi, rbp ; call rax
0x0000000000023c40 : je 0x23c6f ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000023f7e : je 0x23fad ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000024bd6 : je 0x24c05 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000024d69 : je 0x24d98 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000024fb5 : je 0x24fe4 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000002534d : je 0x2537b ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x000000000002583d : je 0x25870 ; mov rdi, qword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000025cde : je 0x25d0c ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000002667c : je 0x266af ; mov rdi, qword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000026c21 : je 0x26c50 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000027716 : je 0x27745 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000027a8b : je 0x27aba ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000027db7 : je 0x27de6 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000028190 : je 0x281be ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000000286a1 : je 0x286d0 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000028d67 : je 0x28d96 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000029130 : je 0x2915e ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000002d9cf : je 0x2d9e8 ; and esi, dword ptr [rdi + 0x10] ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000002da1a : je 0x2d9fc ; and esi, dword ptr [rdi + 0x10] ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x00000000000a0756 : je 0x31f77d32 ; rol bl, 0x66 ; nop ; mov rax, rdi ; ret
0x000000000003639b : je 0x363bf ; mov eax, 1 ; shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000363db : je 0x36401 ; mov rax, -2 ; rol rax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000003a934 : je 0x3a97a ; xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x3a94a ; pop rbx ; ret
0x000000000003aa0e : je 0x3aa7b ; mov dword ptr [rdi], 0 ; xor eax, eax ; pop rbx ; ret
0x000000000004a933 : je 0x4a94c ; sub r8, 4 ; cmp rdi, r8 ; jbe 0x4a93c ; ret
0x000000000004a993 : je 0x4a950 ; sub r8, 4 ; cmp rdi, r8 ; jbe 0x4a99f ; nop ; pop rbx ; ret
0x000000000004aac3 : je 0x4ab47 ; jns 0x4aa9b ; or byte ptr [r8], r8b ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x000000000004aac4 : je 0x4ab4c ; mov byte ptr [rdi + 8], 0 ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x000000000006efa7 : je 0x6efc1 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006f030 : je 0x6f05e ; lea rsi, qword ptr [rsp + 8] ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000006f02d : je 0x6f064 ; or byte ptr [rsi + rbx + 0x48], dh ; lea esi, dword ptr [rsp + 8] ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000006f077 : je 0x6f091 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000007101d : je 0x70f91 ; mov rdi, rbx ; call 0x7d30b
0x0000000000071d6e : je 0x71d8d ; or ebp, edx ; mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000721ad : je 0x721a3 ; mov esi, r12d ; mov rdi, r15 ; call 0x7e41a
0x00000000000743e7 : je 0x74402 ; cmp rsi, rcx ; jb 0x743ea ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000077376 : je 0x77392 ; mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x77392 ; ret
0x0000000000079cde : je 0x79cfd ; or ebp, edx ; mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007d7c8 : je 0x7d7fd ; or bl, ch ; mov edx, 0x48001f0f ; cmp dword ptr [rdi + 0x38], 0 ; je 0x7d7ef ; ret
0x000000000007e537 : je 0x7e552 ; cmp rsi, rcx ; jne 0x7e53a ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000007f274 : je 0x7f296 ; mov rax, qword ptr [rdi + 8] ; cmp rax, rdx ; jae 0x7f2ae ; movzx eax, byte ptr [rax] ; ret
0x000000000007fa29 : je 0x7fa67 ; mov qword ptr [rsi], rdi ; ret
0x0000000000089f1f : je 0x8a01c ; mov rdx, r12 ; mov rdi, r15 ; call rax
0x000000000008a18c : je 0x8a26c ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000008a43f : je 0x8a61c ; mov rdx, r15 ; mov rdi, r8 ; call rax
0x000000000008ac70 : je 0x8ad8f ; mov rdx, rbp ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000008aeae : je 0x8af9c ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000008b03a : je 0x8b0d4 ; mov rsi, rbp ; mov rdi, r12 ; call rax
0x000000000008b18f : je 0x8b237 ; mov rdi, r13 ; mov rdx, rbp ; mov rsi, r12 ; call rax
0x000000000008f760 : je 0x8f92d ; bsr rax, rax ; add rax, rdi ; ret
0x000000000008f9e4 : je 0x8f92d ; bsr rax, rsi ; add rax, rdi ; ret
0x000000000008f7ee : je 0x8f92e ; bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x00000000000913fb : je 0x91415 ; lea rdx, qword ptr [rsi + rcx] ; cmp rdi, rdx ; jb 0x91416 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000091533 : je 0x91554 ; ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x0000000000097580 : je 0x975a8 ; xor byte ptr [rdx + 0xd], 0x2a ; cmp rdi, 0xd ; je 0x975a8 ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x0000000000097e08 : je 0x97e2b ; bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x0000000000098001 : je 0x98019 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000098bcf : je 0x98be6 ; test al, al ; jne 0x98c20 ; movzx eax, byte ptr [r9] ; test al, al ; jne 0x98c51 ; mov rax, rdi ; ret
0x0000000000098c03 : je 0x98c29 ; add rcx, 1 ; sub rsi, 1 ; jne 0x98c11 ; xor edi, edi ; mov rax, rdi ; ret
0x00000000000a05ca : je 0xa05ef ; add rax, 1 ; movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0xa05d7 ; ret
0x00000000000a05c9 : je 0xa05f0 ; add rax, 1 ; movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0xa05d8 ; ret
0x00000000000a060e : je 0xa062f ; add rax, 1 ; movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0xa0617 ; ret
0x00000000000a0666 : je 0xa0691 ; add rax, 1 ; movsx r8d, byte ptr [rdi + rax] ; test r8b, r8b ; jne 0xa0661 ; ret
0x00000000000a074e : je 0xa076f ; add rdi, 1 ; movsx ecx, byte ptr [rdi] ; test cl, cl ; jne 0xa0757 ; xor eax, eax ; ret
0x00000000000a07a5 : je 0xa07d1 ; add rdi, 1 ; movsx r8d, byte ptr [rdi] ; test r8b, r8b ; jne 0xa07a1 ; xor eax, eax ; ret
0x00000000000a0c1b : je 0xa0c59 ; rol bl, 0x90 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000a0cfc : je 0xa0cd8 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000a0d5b : je 0xa0cdf ; bsr eax, eax ; add rax, rdi ; add rax, r8 ; ret
0x00000000000a10f9 : je 0xa1120 ; bsf rdx, rax ; movzx eax, byte ptr [rdi + rdx] ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x00000000000abbc9 : je 0xabbec ; mov eax, dword ptr [rdi] ; cmp eax, dword ptr [rsi] ; jne 0xabd2c ; ret
0x00000000000abbc4 : je 0xabc01 ; and dl, 0xf ; je 0xabbf1 ; mov eax, dword ptr [rdi] ; cmp eax, dword ptr [rsi] ; jne 0xabd31 ; ret
0x00000000000abbf3 : je 0xabc1e ; mov eax, dword ptr [rdi + 8] ; cmp eax, dword ptr [rsi + 8] ; jne 0xabd2e ; ret
0x00000000000abc29 : je 0xabc4e ; mov eax, dword ptr [rdi + 0x10] ; cmp eax, dword ptr [rsi + 0x10] ; jne 0xabd2e ; ret
0x00000000000abc53 : je 0xabc7e ; mov eax, dword ptr [rdi + 0x18] ; cmp eax, dword ptr [rsi + 0x18] ; jne 0xabd2e ; ret
0x00000000000abc89 : je 0xabcae ; mov eax, dword ptr [rdi + 0x20] ; cmp eax, dword ptr [rsi + 0x20] ; jne 0xabd2e ; ret
0x00000000000abcb3 : je 0xabcca ; mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xabd2a ; ret
0x00000000000abcd9 : je 0xabcfa ; mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0xabd2a ; ret
0x00000000000abcd4 : je 0xabd0f ; and dl, 0xf ; je 0xabcff ; mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0xabd2f ; ret
0x00000000000abd03 : je 0xabd1a ; mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xabd2a ; ret
0x00000000000ac309 : je 0xac2e9 ; test eax, eax ; je 0xac349 ; mov eax, dword ptr [rsi + 8] ; mov dword ptr [rdi + 0xc], eax ; mov rax, rbx ; pop rbx ; ret
0x00000000000ac30d : je 0xac345 ; mov eax, dword ptr [rsi + 8] ; mov dword ptr [rdi + 0xc], eax ; mov rax, rbx ; pop rbx ; ret
0x00000000000ac576 : je 0xac4df ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac626 : je 0xac696 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac634 : je 0xac69a ; test al, 0xf0 ; jne 0xac66a ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac646 : je 0xac69e ; test ah, ah ; jne 0xac67e ; test al, 0xf0 ; jne 0xac66e ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac792 : je 0xac80e ; add rdi, 4 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0xac79e ; xor eax, eax ; ret
0x00000000000ac8df : je 0xac8fc ; cmp esi, dword ptr [rdi + 8] ; cmove rax, rcx ; ret
0x00000000000ace13 : je 0xace2c ; mov eax, dword ptr [rdi] ; test eax, eax ; sete al ; movzx eax, al ; ret
0x00000000000ad45e : je 0xad48d ; sbb byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x00000000000ad71e : je 0xad74d ; sbb byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbp ; call rbx
0x00000000000ad9fe : je 0xada2d ; sbb byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbp ; call rbx
0x00000000000adb22 : je 0xadb3c ; mov r9d, dword ptr [rdi + rdx*4] ; test r9d, r9d ; jne 0xadaef ; mov rax, rdx ; ret
0x00000000000bb63c : je 0xbb633 ; mov edx, dword ptr [rsi + 8] ; cmp dword ptr [rdi + 8], edx ; jne 0xbb628 ; ret
0x00000000000c7c30 : je 0xc7c4e ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000c9126 : je 0xc921d ; mov rbp, r13 ; mov rdi, rbx ; call r12
0x00000000000cd567 : je 0xcd511 ; mov rdi, qword ptr [rbx] ; mov rax, qword ptr [rdi + 0x10] ; test rax, rax ; je 0xcd588 ; call rax
0x00000000000d024a : je 0xd035d ; mov rdi, qword ptr [rbp - 0x308] ; call r12
0x00000000000d69d3 : je 0xd6973 ; mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x00000000000d690e : je 0xd6988 ; cmp cl, 0x2d ; jne 0xd694d ; mov byte ptr [rdi + 8], 0x16 ; mov eax, 1 ; ret
0x00000000000d6996 : je 0xd69ef ; cmp al, 0x2e ; jne 0xd6977 ; mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x00000000000f8104 : je 0xf8159 ; xor edx, edx ; xor esi, esi ; mov rdi, rbx ; call rax
0x0000000000104ac5 : jg 0x104adf ; add byte ptr [rdi], cl ; test dl, dl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; std ; xor edx, edx ; xor esi, esi ; call rbx
0x0000000000104edd : jg 0x104eef ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000105742 : jg 0x105765 ; add byte ptr [rdi], cl ; test dword ptr [rcx - 0x41000007], edi ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000105782 : jg 0x1057a5 ; add byte ptr [rdi], cl ; test dword ptr [rdi*8 + 0x3beffff], ebx ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x00000000001057a2 : jg 0x1057c5 ; add byte ptr [rdi], cl ; test dword ptr [rbx - 0x41000004], eax ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000001057c2 : jg 0x1057e5 ; add byte ptr [rdi], cl ; test dword ptr [rdi - 0x41000005], esi ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000105822 : jg 0x105845 ; add byte ptr [rdi], cl ; test dword ptr [rbp - 0x41000007], eax ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000105862 : jg 0x105885 ; add byte ptr [rdi], cl ; test dword ptr [rsi - 0x4100000a], edx ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000001058a2 : jg 0x1058c5 ; add byte ptr [rdi], cl ; test dword ptr [rdx - 0x4100000b], ebp ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000001166fa : jg 0x11672b ; add byte ptr [rbp - 0x10], dh ; mov edx, dword ptr [rdi + 0x28] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x0000000000135652 : jg 0x1356a2 ; mov rcx, rsi ; xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x00000000001358d2 : jg 0x13591c ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1358e8 ; ret
0x0000000000137916 : jg 0x137936 ; mov eax, 1 ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x000000000013792e : jg 0x137962 ; mov eax, 1 ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x00000000001381be : jg 0x1381de ; mov eax, 1 ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x00000000001381a6 : jg 0x1381ee ; mov eax, 1 ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x00000000001381ee : jg 0x138226 ; mov eax, 1 ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x000000000013b812 : jg 0x13b862 ; mov rcx, rsi ; xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x000000000013ba72 : jg 0x13babc ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x13ba88 ; ret
0x000000000013bf32 : jg 0x13bf8a ; mov rcx, rsi ; xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x0000000000150733 : jg 0x150747 ; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x000000000015078f : jg 0x1507a3 ; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x00000000001507ea : jg 0x1507fb ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000153cf4 : jg 0x153cc2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x153d10 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153e44 : jg 0x153e12 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x153e60 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153f94 : jg 0x153f62 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x153fb0 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001540e4 : jg 0x1540b2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154100 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154234 : jg 0x154202 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154250 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154384 : jg 0x154352 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1543a0 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001544d4 : jg 0x1544a2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1544f0 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154624 : jg 0x1545f2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154640 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154774 : jg 0x154742 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154790 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001548c4 : jg 0x154892 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1548e0 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154a14 : jg 0x1549e2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154a30 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154b64 : jg 0x154b32 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154b80 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154cb4 : jg 0x154c82 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154cd0 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154e04 : jg 0x154dd2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154e20 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154f54 : jg 0x154f22 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154f70 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001566c4 : jg 0x156692 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1566e0 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156814 : jg 0x1567e2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156830 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156964 : jg 0x156932 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156980 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ab4 : jg 0x156a82 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156ad0 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156c04 : jg 0x156bd2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156c20 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156d54 : jg 0x156d22 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156d70 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ea4 : jg 0x156e72 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156ec0 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ff4 : jg 0x156fc2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x157010 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157144 : jg 0x157112 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x157160 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157294 : jg 0x157262 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1572b0 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001573e4 : jg 0x1573b2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x157400 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157534 : jg 0x157502 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x157550 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157684 : jg 0x157652 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1576a0 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001577d4 : jg 0x1577a2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1577f0 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157924 : jg 0x1578f2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x157940 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015a898 : jg 0x15a8e9 ; loope 0x15a897 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a928 : jg 0x15a979 ; loop 0x15a927 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a9b8 : jg 0x15aa09 ; jrcxz 0x15a9b7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015aa48 : jg 0x15aa99 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015aac8 : jg 0x15ab19 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ab48 : jg 0x15ab99 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015abc8 : jg 0x15ac19 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ae48 : jg 0x15ae99 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015aec8 : jg 0x15af19 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015af58 : jg 0x15afa9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015afd8 : jg 0x15b029 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015b0a1 : jg 0x15b0f1 ; psllq mm1, qword ptr [rdi] ; jg 0x15b0be ; ret
0x000000000015b1f1 : jg 0x15b241 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b261 : jg 0x15b2b1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b2d1 : jg 0x15b321 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b341 : jg 0x15b391 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b3b1 : jg 0x15b401 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b571 : jg 0x15b5c1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b5e1 : jg 0x15b631 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b651 : jg 0x15b6a1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b6c1 : jg 0x15b711 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000015d3b8 : jg 0x15d409 ; loope 0x15d3b7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d448 : jg 0x15d499 ; loop 0x15d447 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d4d8 : jg 0x15d529 ; jrcxz 0x15d4d7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d568 : jg 0x15d5b9 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d5e8 : jg 0x15d639 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d668 : jg 0x15d6b9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d6e8 : jg 0x15d739 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d968 : jg 0x15d9b9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015d9e8 : jg 0x15da39 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015da78 : jg 0x15dac9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015daf8 : jg 0x15db49 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015dbc1 : jg 0x15dc11 ; psllq mm1, qword ptr [rdi] ; jg 0x15dbde ; ret
0x000000000015dd11 : jg 0x15dd61 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000015dd81 : jg 0x15ddd1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000015ddf1 : jg 0x15de41 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000015de61 : jg 0x15deb1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000015ded1 : jg 0x15df21 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e091 : jg 0x15e0e1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e101 : jg 0x15e151 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e171 : jg 0x15e1c1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e1e1 : jg 0x15e231 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000016e361 : jg 0x16e3c6 ; loopne 0x16e335 ; vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000016e57c : jg 0x16e592 ; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm1 ; vzeroupper ; ret
0x000000000016e57b : jg 0x16e593 ; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm1 ; vzeroupper ; ret
0x000000000016e5e8 : jg 0x16e5fe ; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm1 ; vzeroupper ; ret
0x000000000016e5e7 : jg 0x16e5ff ; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm1 ; vzeroupper ; ret
0x000000000016e64a : jg 0x16e65e ; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x000000000016e662 : jg 0x16e673 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000001724a3 : jg 0x1724bc ; mov rdi, qword ptr [rdi + 0x10] ; test rdi, rdi ; jne 0x1724ac ; ret
0x00000000001724c5 : jg 0x1724bd ; mov rdi, qword ptr [rdi + 0x10] ; test rdi, rdi ; jne 0x1724ce ; pop rbx ; ret
0x00000000001724a7 : jg 0x1724c1 ; test rdi, rdi ; jne 0x1724a8 ; ret
0x00000000001724c9 : jg 0x1724e3 ; test rdi, rdi ; jne 0x1724ca ; pop rbx ; ret
0x00000000000350b7 : jg 0x3504a ; lea edx, dword ptr [rcx + rdx - 0x7e] ; or eax, 0x3f000000 ; movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x0000000000035220 : jg 0x3522f ; add byte ptr [rcx], cl ; ror byte ptr [rcx - 0x24efdbbc], 1 ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x000000000005cdf8 : jg 0x5ce19 ; add byte ptr [rdi], cl ; mov dh, 0xdb ; movsxd rax, dword ptr [rcx + rbx*4] ; add rax, rcx ; jmp rax
0x000000000006dd76 : jg 0x6ddf1 ; add eax, r11d ; mov rdi, rdx ; jmp 0x6dd4c
0x00000000000918a4 : jg 0x918fc ; adc bl, dh ; movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x00000000000a6176 : jg 0xa6184 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a618a : jg 0xa6199 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a61a9 : jg 0xa61b7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a61b9 : jg 0xa61c7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a61c9 : jg 0xa61da ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a61ea : jg 0xa61f9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a620a : jg 0xa6219 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a622a : jg 0xa6239 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a624a : jg 0xa625c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a626e : jg 0xa6281 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000a628d : jg 0xa629f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a62ad : jg 0xa62bf ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a62cb : jg 0xa62db ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a62eb : jg 0xa62fb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a630b : jg 0xa631b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a632b : jg 0xa633b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a6a96 : jg 0xa6aaf ; sub r8, 0x10 ; lea rdi, qword ptr [rdi + 0x10] ; jne 0xa7180 ; ret
0x00000000000a6c7f : jg 0xa6ce9 ; or eax, 0x1de88349 ; lea rdi, qword ptr [rdi + 0x1d] ; jne 0xa7181 ; ret
0x00000000000a6e49 : jg 0xa6e57 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a6e5a : jg 0xa6e69 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a6e79 : jg 0xa6e87 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a6e89 : jg 0xa6e97 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a6e9c : jg 0xa6ead ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000a6eba : jg 0xa6ec9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a6eda : jg 0xa6ee9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a6efa : jg 0xa6f09 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a6f1d : jg 0xa6f2f ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a6f3e : jg 0xa6f51 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000a6f5d : jg 0xa6f6f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a6f7d : jg 0xa6f8f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a6f9b : jg 0xa6fab ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a6fbb : jg 0xa6fcb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a6fdb : jg 0xa6feb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a6ffb : jg 0xa700b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a701e : jg 0xa7031 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000a77d6 : jg 0xa77e5 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a77e6 : jg 0xa77f8 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a77fa : jg 0xa780d ; mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a7819 : jg 0xa782b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a7839 : jg 0xa784b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a7859 : jg 0xa786e ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a787a : jg 0xa788d ; mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a789a : jg 0xa78ad ; mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a78ba : jg 0xa78cd ; mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a78da : jg 0xa78f0 ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a78fe : jg 0xa7915 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a791d : jg 0xa7933 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a793d : jg 0xa7953 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a795b : jg 0xa796f ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a797b : jg 0xa798f ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a799b : jg 0xa79af ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a79bb : jg 0xa79cf ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a8616 : jg 0xa8625 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a8629 : jg 0xa863b ; mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a864a : jg 0xa865d ; mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a8669 : jg 0xa867b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a8689 : jg 0xa869b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a86ac : jg 0xa86c1 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a86ca : jg 0xa86dd ; mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a86ea : jg 0xa86fd ; mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a870a : jg 0xa871d ; mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a872d : jg 0xa8743 ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a874e : jg 0xa8765 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a876d : jg 0xa8783 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a878d : jg 0xa87a3 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a87ab : jg 0xa87bf ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a87cb : jg 0xa87df ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a87eb : jg 0xa87ff ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a880b : jg 0xa881f ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a882e : jg 0xa8841 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000a8a76 : jg 0xa8aae ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a9256 : jg 0xa9264 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a926a : jg 0xa9279 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a9289 : jg 0xa9297 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a9299 : jg 0xa92a7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a92a9 : jg 0xa92ba ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a92ca : jg 0xa92d9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a92ea : jg 0xa92f9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a930a : jg 0xa9319 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a932a : jg 0xa933c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a934e : jg 0xa9361 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000a936d : jg 0xa937f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a938d : jg 0xa939f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a93ab : jg 0xa93bb ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a93cb : jg 0xa93db ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a93eb : jg 0xa93fb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a940b : jg 0xa941b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a9d26 : jg 0xa9d34 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a9d3a : jg 0xa9d49 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a9d59 : jg 0xa9d67 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a9d69 : jg 0xa9d77 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a9d79 : jg 0xa9d8a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a9d9a : jg 0xa9da9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a9dba : jg 0xa9dc9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a9dda : jg 0xa9de9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a9dfa : jg 0xa9e0c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a9e1e : jg 0xa9e31 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000a9e3d : jg 0xa9e4f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a9e5d : jg 0xa9e6f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a9e7b : jg 0xa9e8b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a9e9b : jg 0xa9eab ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a9ebb : jg 0xa9ecb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a9edb : jg 0xa9eeb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000aa086 : jg 0xaa096 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000aa099 : jg 0xaa0ac ; mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000aa0ba : jg 0xaa0ce ; mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000aa0d9 : jg 0xaa0ec ; mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000aa0f9 : jg 0xaa10c ; mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000aa11c : jg 0xaa132 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000aa13a : jg 0xaa14e ; mov qword ptr [rdi + 0xe], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000aa15a : jg 0xaa16e ; mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000aa17a : jg 0xaa18e ; mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000aa19d : jg 0xaa1b4 ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000aa1be : jg 0xaa1d6 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000aa1dd : jg 0xaa1f4 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000aa1fd : jg 0xaa214 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000aa21b : jg 0xaa230 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000aa23b : jg 0xaa250 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000aa25b : jg 0xaa270 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000aa27b : jg 0xaa290 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000aa29e : jg 0xaa2b6 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000aa25f : jg 0xaa2c0 ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000aa27f : jg 0xaa2e0 ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000aa2a2 : jg 0xaa306 ; adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000aa2f6 : jg 0xaa32f ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000aa2f5 : jg 0xaa37e ; xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000d80df : jg 0xd814e ; add byte ptr [rdi], cl ; xchg eax, ebp ; rol byte ptr [rcx], 0xc0 ; ret
0x0000000000105622 : jge 0x105645 ; add byte ptr [rdi], cl ; test dword ptr [rdx - 0x41000004], ebx ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00000000001aafc1 : jge 0x1aafb9 ; jmp rdi
0x00000000000476ba : jge 0x476c1 ; cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x0000000000077c27 : jge 0x77c31 ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000008df1e : jge 0x8df3b ; add byte ptr [rdi + 0x63], cl ; or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000016e0f0 : jl 0x16e146 ; adc dword ptr [rdi - 7], esi ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000016e0f7 : jl 0x16e146 ; adc dword ptr [rdi - 8], edi ; ret
0x000000000016e34a : jl 0x16e39f ; adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x00000000001721af : jl 0x17219e ; adc byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdx + 0x48] ; mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x1721d8 ; call rax
0x0000000000195d1c : jl 0x195d24 ; add byte ptr [rax], al ; xor al, 0x64 ; out dx, eax ; push qword ptr [rdi + rsi*8 + 0x65240000] ; out dx, eax ; jmp rsp
0x000000000019ffd4 : jl 0x1a0043 ; add byte ptr [rax], al ; cmp byte ptr [rsi], ch ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001a5991 : jl 0x1a598f ; call qword ptr [rdi]
0x00000000000260d5 : jl 0x26107 ; add byte ptr [rdi], cl ; test byte ptr [rdx], ah ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf08
0x00000000000a0c6a : jl 0xa0cd5 ; add rax, rdi ; ret
0x00000000000a0c7a : jl 0xa0cd7 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000000a0c9a : jl 0xa0cd7 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00000000000a0cba : jl 0xa0cd7 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000d6966 : jl 0xd6996 ; mov byte ptr [rdi + 8], 1 ; mov byte ptr [rdi], 0x5b ; mov eax, 1 ; ret
0x00000000000d6965 : jl 0xd6997 ; mov byte ptr [rdi + 8], 1 ; mov byte ptr [rdi], 0x5b ; mov eax, 1 ; ret
0x00000000000d6964 : jl 0xd6998 ; mov byte ptr [rdi + 8], 1 ; mov byte ptr [rdi], 0x5b ; mov eax, 1 ; ret
0x00000000000d693b : jl 0xd69bb ; mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00000000000d693a : jl 0xd69bc ; mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00000000000d6939 : jl 0xd69bd ; mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00000000001056a2 : jle 0x1056c5 ; add byte ptr [rdi], cl ; test dword ptr [rax - 0x4100000b], edi ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000105702 : jle 0x105725 ; add byte ptr [rdi], cl ; test dword ptr [rbp - 0x41000006], eax ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x000000000012f18e : jle 0x12f1a2 ; add byte ptr [rax], al ; mov esi, 4 ; mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000014b48a : jle 0x14b4a0 ; add byte ptr [rdi + 0x63], cl ; or al, 0x8a ; pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000016e380 : jle 0x16e34f ; cmp dl, 4 ; jb 0x16e399 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000187110 : jle 0x187115 ; lcall ptr [rdi - 4] ; jmp qword ptr [rcx]
0x00000000001873e1 : jle 0x1873d9 ; call qword ptr [rdi]
0x000000000009145e : jle 0x91480 ; adc byte ptr [rsi], al ; movups xmm1, xmmword ptr [rsi + rdx - 0x10] ; movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000001968c3 : jmp qword ptr [rdi + rax*2 - 0x711bffff]
0x0000000000053763 : jmp qword ptr [rdi + rax*8]
0x0000000000196163 : jmp qword ptr [rdi + rcx - 0x3cabffff]
0x0000000000194b3b : jmp qword ptr [rdi + rdi*2 + 0x2be40000]
0x000000000006d0dd : jmp qword ptr [rdi]
0x00000000000e8d61 : jmp rdi
0x0000000000100820 : jne 0x100813 ; mov r9, rcx ; mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x0000000000105586 : jne 0x104b03 ; mov esi, 3 ; mov rdi, r12 ; call rbx
0x0000000000105605 : jne 0x104b28 ; mov esi, 3 ; mov rdi, r13 ; call rbx
0x0000000000105645 : jne 0x104b4c ; mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000105885 : jne 0x104b6c ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x00000000001058e5 : jne 0x104be5 ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x00000000001056a5 : jne 0x104c71 ; mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000105925 : jne 0x104c91 ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000105905 : jne 0x104d0a ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x00000000001055c5 : jne 0x104da6 ; mov esi, 3 ; mov rdi, r13 ; call rbx
0x0000000000105685 : jne 0x104dca ; mov esi, 3 ; mov rdi, r14 ; call rbx
0x00000000001058c5 : jne 0x104dea ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x00000000001058a5 : jne 0x104e63 ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000105665 : jne 0x104eef ; mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000105865 : jne 0x104f0f ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000105845 : jne 0x104f88 ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000105566 : jne 0x105030 ; mov esi, 3 ; mov rdi, r12 ; call rbx
0x00000000001055e5 : jne 0x105055 ; mov esi, 3 ; mov rdi, r13 ; call rbx
0x0000000000105725 : jne 0x105079 ; mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000105765 : jne 0x105099 ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000105745 : jne 0x105112 ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000105705 : jne 0x10519e ; mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000105825 : jne 0x1051be ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000105805 : jne 0x105237 ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000105625 : jne 0x1052d3 ; mov esi, 3 ; mov rdi, r13 ; call rbx
0x00000000001056e5 : jne 0x1052f7 ; mov esi, 3 ; mov rdi, r14 ; call rbx
0x00000000001057e5 : jne 0x105317 ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x00000000001057c5 : jne 0x105390 ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x00000000001056c5 : jne 0x10541c ; mov esi, 3 ; mov rdi, r14 ; call rbx
0x00000000001057a5 : jne 0x10543c ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000105785 : jne 0x1054b5 ; mov esi, 3 ; mov rdi, r15 ; call rbx
0x00000000001166e7 : jne 0x1166f8 ; cmp qword ptr [rdi], 0 ; je 0x116701 ; ret
0x00000000001166fd : jne 0x1166fb ; mov edx, dword ptr [rdi + 0x28] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x00000000001177d4 : jne 0x1177bf ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x0000000000118363 : jne 0x1182fd ; mov rax, rdi ; ret
0x00000000001199b9 : jne 0x119959 ; mov rax, rdi ; ret
0x0000000000126509 : jne 0x12652c ; shr esi, 3 ; sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x0000000000126a64 : jne 0x126a87 ; movzx eax, byte ptr [rdi + 1] ; shl eax, 3 ; cdqe ; shr rax, 4 ; ret
0x000000000012ff86 : jne 0x12ffce ; mov dword ptr [rsi], 7 ; mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x000000000013d373 : jne 0x13d367 ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000013dd5f : jne 0x13dd5f ; mov rsi, r13 ; mov rdi, rbp ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x000000000013dec2 : jne 0x13de5f ; mov rax, qword ptr [r12 + 8] ; lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013e006 : jne 0x13dfd6 ; mov rax, qword ptr [r12 + 8] ; lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013eab8 : jne 0x13eb16 ; cmp dword ptr [rdi + 0x20], esi ; jbe 0x13eade ; add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000016b63c : jne 0x16b67b ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000016c897 : jne 0x16ccd3 ; movzx eax, byte ptr [rdi - 1] ; movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x000000000016c33d : jne 0x16ccd3 ; movzx eax, byte ptr [rdi - 1] ; movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000016cc90 : jne 0x16ccd4 ; mov rax, qword ptr [rdi - 8] ; mov rcx, qword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x16ccd4 ; xor eax, eax ; ret
0x000000000016c388 : jne 0x16ccdf ; movzx eax, byte ptr [rdi - 1] ; movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000016c58a : jne 0x16ccea ; movzx eax, byte ptr [rdi - 1] ; movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x000000000016dad0 : jne 0x16db14 ; mov rax, qword ptr [rdi - 8] ; mov rcx, qword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x16db14 ; xor eax, eax ; ret
0x000000000016ed85 : jne 0x16ed16 ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000016ed57 : jne 0x16ed16 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000016ed56 : jne 0x16ed17 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000016ee20 : jne 0x16ed1a ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000016edda : jne 0x16ed1a ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000016edd9 : jne 0x16ed1b ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000016ed7c : jne 0x16eeff ; test dl, 4 ; jne 0x16ed1f ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000016ee66 : jne 0x16ef3a ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000016ee65 : jne 0x16ef3b ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000016ed4e : jne 0x16ef3f ; test dl, 0x40 ; jne 0x16ed1f ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000016ed4d : jne 0x16ef40 ; test dl, 0x40 ; jne 0x16ed20 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000016eeb9 : jne 0x16efaa ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000016eeb8 : jne 0x16efab ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000170264 : jne 0x170231 ; test dh, 0x40 ; jne 0x170241 ; movzx eax, byte ptr [rdi - 9] ; movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x00000000001701b0 : jne 0x170231 ; test dl, 0x40 ; jne 0x170241 ; movzx eax, byte ptr [rdi - 9] ; movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x00000000001701b5 : jne 0x17023c ; movzx eax, byte ptr [rdi - 9] ; movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x00000000001701b4 : jne 0x17023d ; movzx eax, byte ptr [rdi - 9] ; movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x00000000001706e0 : jne 0x170712 ; movzx eax, byte ptr [rdi - 1] ; cmp al, byte ptr [rsi - 1] ; jne 0x170712 ; xor eax, eax ; ret
0x00000000001706dc : jne 0x170716 ; cmp eax, ecx ; jne 0x170716 ; movzx eax, byte ptr [rdi - 1] ; cmp al, byte ptr [rsi - 1] ; jne 0x170716 ; xor eax, eax ; ret
0x0000000000170d0e : jne 0x170d2c ; mov eax, dword ptr [rdi - 4] ; cmp eax, dword ptr [rsi - 4] ; jne 0x170d2c ; xor eax, eax ; ret
0x0000000000034178 : jne 0x3416b ; mov eax, dword ptr [r9 + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x0000000000034f01 : jne 0x34f29 ; mov eax, edx ; movss dword ptr [rdi], xmm0 ; and eax, 0x80000000 ; movd xmm0, eax ; ret
0x00000000000365a6 : jne 0x365c5 ; mov edx, dword ptr [rdi] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x000000000003aa09 : jne 0x3aa30 ; test rdi, rdi ; je 0x3aa80 ; mov dword ptr [rdi], 0 ; xor eax, eax ; pop rbx ; ret
0x00000000000744f9 : jne 0x7451f ; sub rdx, qword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x00000000000757b5 : jne 0x757cf ; mov rdx, qword ptr [r15 + 0x40] ; sub rdx, rsi ; mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x00000000000768d1 : jne 0x7692d ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000076d88 : jne 0x76da2 ; mov edx, dword ptr [rdi + 0xc0] ; mov eax, edx ; ret
0x0000000000078c9f : jne 0x78cc1 ; xor eax, eax ; cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x000000000007a349 : jne 0x7a362 ; mov rdx, qword ptr [rbx + 0x40] ; sub rdx, rsi ; mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x000000000007e53c : jne 0x7e535 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000007eea3 : jne 0x7eeba ; sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000007fa1e : jne 0x7fa10 ; not r8d ; test rsi, rsi ; mov byte ptr [rdi], r8b ; je 0x7fa72 ; mov qword ptr [rsi], rdi ; ret
0x000000000007fe5d : jne 0x7fe57 ; add rsp, 8 ; mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000801bf : jne 0x80194 ; mov rdi, r12 ; neg rdi ; call qword ptr [r15]
0x0000000000097f53 : jne 0x97fae ; pmovmskb eax, xmm1 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000098c0d : jne 0x98c07 ; xor edi, edi ; mov rax, rdi ; ret
0x0000000000098bd3 : jne 0x98c1c ; movzx eax, byte ptr [r9] ; test al, al ; jne 0x98c4d ; mov rax, rdi ; ret
0x0000000000098bdb : jne 0x98c45 ; mov rax, rdi ; ret
0x00000000000a050b : jne 0xa0500 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00000000000a0589 : jne 0xa0571 ; pop rbx ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00000000000a069c : jne 0xa06b9 ; nop ; add rax, 1 ; cmp byte ptr [rdi + rax], dl ; je 0xa06ae ; ret
0x00000000000a0b6c : jne 0xa0c40 ; pmovmskb eax, xmm1 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000a2d4c : jne 0xa2e66 ; movlpd xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000a571c : jne 0xa5836 ; movlpd xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000ac60b : jne 0xac666 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac4f7 : jne 0xac66a ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac607 : jne 0xac67a ; test al, 0xf0 ; jne 0xac66a ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac603 : jne 0xac68e ; test ah, ah ; jne 0xac67e ; test al, 0xf0 ; jne 0xac66e ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac7f4 : jne 0xac7d6 ; mov rax, rdi ; ret
0x00000000000ac7f0 : jne 0xac876 ; test eax, eax ; jne 0xac7da ; mov rax, rdi ; ret
0x00000000000bb636 : jne 0xbb62e ; cmp rdx, 2 ; je 0xbb639 ; mov edx, dword ptr [rsi + 8] ; cmp dword ptr [rdi + 8], edx ; jne 0xbb62e ; ret
0x00000000000d6913 : jne 0xd6948 ; mov byte ptr [rdi + 8], 0x16 ; mov eax, 1 ; ret
0x00000000000d699a : jne 0xd6973 ; mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x00000000000d6999 : jne 0xd6974 ; mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x00000000000d80da : jne 0xd80a7 ; xor eax, eax ; cmp byte ptr [rdi + 0x65], 0 ; setne al ; add eax, eax ; ret
0x00000000000fda25 : jne 0xfda10 ; or dword ptr [rdi], 0x80000000 ; xor eax, eax ; ret
0x000000000016e0ef : jno 0x16e17a ; adc qword ptr [rdi - 7], rsi ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000016e0f6 : jno 0x16e17a ; adc qword ptr [rdi - 8], rdi ; ret
0x000000000019b6e9 : jno 0x19b6d6 ; call qword ptr [rdi]
0x00000000001a6331 : jno 0x1a6325 ; call rdi
0x0000000000003677 : jno 0x36ec ; cmp eax, 0x6e510fa3 ; stosb byte ptr [rdi], al ; stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x0000000000048de4 : jno 0x48e36 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000d27f9 : jno 0xd27fb ; push qword ptr [rcx] ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x00000000001224fe : jnp 0x122550 ; test rdi, rdi ; jne 0x1224f8 ; pop rbx ; ret
0x000000000013a3b2 : jnp 0x13a3fd ; add eax, 0xd8894900 ; mov ecx, r12d ; mov rdi, rbp ; call 0x5665f
0x000000000015e30e : jnp 0x15e31e ; add byte ptr [rdi + 0x63], cl ; or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000019710d : jnp 0x19711e ; add byte ptr [rax + rbp*2], ah ; idiv bh ; movsb byte ptr [rdi], byte ptr [rsi] ; jnp 0x197126 ; add byte ptr [rbp + rbp*2 - 0xa], dh ; call rsp
0x00000000000ac4f1 : jnp 0xac504 ; add byte ptr [rax], al ; test al, 0xf0 ; jne 0xac670 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac604 : jnp 0xac597 ; in al, 0x75 ; test al, 0xf0 ; jne 0xac66d ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000d8331 : jnp 0xd83a3 ; add byte ptr [rdi], cl ; test dword ptr [rsi + 4], esi ; add byte ptr [rax], al ; mov dword ptr [rbx + 0x2c], eax ; jmp 0xd830f
0x00000000000d89dd : jnp 0xd8a49 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd201
0x0000000000134b86 : jns 0x134ba6 ; mov eax, 1 ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x000000000014d987 : jns 0x14d9f8 ; rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014e167 : jns 0x14e1d8 ; rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ea97 : jns 0x14eb08 ; rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001a12c9 : jns 0x1a12ba ; jmp qword ptr [rdi]
0x00000000001a12c5 : jns 0x1a12cd ; add al, cl ; jns 0x1a12be ; jmp qword ptr [rdi]
0x00000000000038ff : jns 0x3952 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000004aac5 : jns 0x4aa99 ; or byte ptr [r8], r8b ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x000000000016e388 : jns 0xffffffff80dadfed ; cli ; add dh, byte ptr [rdx + 8] ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000000a9f86 : jns 0xffffffffed3aa2ec ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a9fe8 : jns 0xffffffffed3aa74e ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000aa008 : jns 0xffffffffed3aa86e ; mov byte ptr [rdi + 0xc], ch ; ret
0x000000000010518c : jo 0x10519c ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000001051ac : jo 0x1051bd ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000011b709 : jo 0x11b73d ; add byte ptr [rcx - 0x77], cl ; ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x0000000000137887 : jo 0x1378df ; mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x1378a5 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000137886 : jo 0x1378e0 ; mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x1378a6 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x000000000009191a : jo 0x137c1e29 ; cmp dl, 1 ; ja 0x91949 ; jb 0x91938 ; mov byte ptr [rdi], cl ; ret
0x0000000000137f73 : jo 0x137fca ; mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x137f8f ; mov rdi, r12 ; call rax
0x0000000000137f72 : jo 0x137fcb ; mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x137f90 ; mov rdi, r12 ; call rax
0x00000000001870b0 : jo 0x1870a4 ; jmp rdi
0x0000000000195d81 : jo 0x195d7c ; lcall ptr [rdx + rdi*8 + 0x71940000] ; out dx, eax ; call rsp
0x00000000000204a2 : jo 0x204b8 ; add byte ptr [rax], al ; mov rax, qword ptr [r13 + 0x18] ; test rax, rax ; je 0x204c4 ; mov rdi, rbp ; call rax
0x00000000000025b2 : jo 0x25aa ; scasd eax, dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x000000000002e023 : jo 0x2e074 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e022 : jo 0x2e075 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000006dd77 : jo 0x6ddc5 ; add eax, ebx ; mov rdi, rdx ; jmp 0x6dd4b
0x000000000007aff3 : jo 0x7b034 ; ror byte ptr [rdi], 5 ; cmp rax, -0x1000 ; ja 0x7b010 ; ret
0x00000000000f7286 : jo 0xf72de ; mov eax, dword ptr [rdi + 0x80] ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000f7314 : jo 0xf736e ; mov dword ptr [rdi + 0x78], edx ; mov rdx, qword ptr [rsi + 0x78] ; mov qword ptr [rdi + 0x80], rdx ; ret
0x00000000000f7e03 : jo 0xf7e5b ; mov eax, dword ptr [rdi + 0x100] ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x0000000000129472 : jp 0x1294b5 ; and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x93c
0x0000000000130e74 : jp 0x130ee5 ; ja 0x130e97 ; sub rcx, rsi ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00000000001a5979 : jp 0x1a5977 ; jmp qword ptr [rdi]
0x000000000002cb18 : jp 0x2cb5b ; jae 0x2cb38 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000000e8d58 : jp 0xe8d6b ; movsxd rdi, dword ptr [r11 + rdi*4] ; add rdi, r11 ; jmp rdi
0x00000000000e8d51 : jp 0xe8d6b ; or al, 0x77 ; jae 0xe8d76 ; mov dh, 0x7a ; or byte ptr [rcx + 0x63], cl ; cmp al, 0xbb ; add rdi, r11 ; jmp rdi
0x000000000011fd2a : jrcxz 0x11fd37 ; and byte ptr [rdi], cl ; test ch, bl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x2e66
0x000000000014d986 : jrcxz 0x14da0e ; movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d9d7 : jrcxz 0x14da5f ; movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014dad6 : jrcxz 0x14db5e ; movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014dc75 : jrcxz 0x14dcfd ; movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014dec6 : jrcxz 0x14df4e ; movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000014e067 : jrcxz 0x14e0ef ; movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014e166 : jrcxz 0x14e1ee ; movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014e1b7 : jrcxz 0x14e23f ; movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014e2b6 : jrcxz 0x14e33e ; movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014e6a6 : jrcxz 0x14e72e ; movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000014e997 : jrcxz 0x14ea1f ; movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014ea96 : jrcxz 0x14eb1e ; movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001558e7 : jrcxz 0x155942 ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015592f : jrcxz 0x15598a ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015596d : jrcxz 0x1559c8 ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001559a9 : jrcxz 0x155a04 ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001559e3 : jrcxz 0x155a3e ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155a1b : jrcxz 0x155a76 ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155a43 : jrcxz 0x155a9e ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001582b7 : jrcxz 0x158312 ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001582ff : jrcxz 0x15835a ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015833d : jrcxz 0x158398 ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158379 : jrcxz 0x1583d4 ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001583b3 : jrcxz 0x15840e ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001583eb : jrcxz 0x158446 ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158413 : jrcxz 0x15846e ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015a9ba : jrcxz 0x15a9b5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a9b9 : jrcxz 0x15a9b6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d4da : jrcxz 0x15d4d5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d4d9 : jrcxz 0x15d4d6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001b7cad : jrcxz 0x1b7cb6 ; add byte ptr [rax], ah ; push rcx ; clc ; call rdi
0x0000000000100772 : js 0x100785 ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000136a68 : js 0x136ac3 ; mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x136999 ; mov rdi, rbx ; call rax
0x000000000013acd8 : js 0x13acdc ; dec dword ptr [rdi] ; test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x0000000000185dec : js 0x185da3 ; int1 ; dec dword ptr [rax - 0x67000e56] ; stosb byte ptr [rdi], al ; int1 ; jmp qword ptr [rax]
0x000000000019a998 : js 0x19aa13 ; std ; jmp qword ptr [rdi]
0x000000000002e033 : js 0x2e084 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e032 : js 0x2e085 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000050bb0 : js 0x50ba7 ; stosb byte ptr [rdi], al ; mov edx, 0x2ebf000b ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000a6095 : js 0x66cd6321 ; nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000a9175 : js 0x66cd9401 ; nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000a9c45 : js 0x66cd9ed1 ; nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000007510d : js 0x7511c ; add byte ptr [rax], al ; mov rdx, r15 ; mov rdi, r12 ; call 0x913bc
0x0000000000076d82 : js 0x76e30 ; jne 0x76da8 ; mov edx, dword ptr [rdi + 0xc0] ; mov eax, edx ; ret
0x00000000000790fe : js 0x79141 ; cmp qword ptr [rdi + 0x10], rax ; jb 0x79141 ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000794ce : js 0x794cf ; cmp qword ptr [rdi + 0x10], rax ; jb 0x794cf ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000795d4 : js 0x7961a ; add byte ptr [rdi + rax*8], ah ; sbb al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007bd40 : js 0x7bd53 ; mov esi, 0x2c ; mov rdi, r15 ; call 0x97fcc
0x0000000000087e45 : js 0x87e81 ; add byte ptr [rdi], cl ; test dword ptr [rsi - 0x16000002], esi ; ret 0xfffe
0x00000000000f731c : js 0xf736e ; mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000f7318 : js 0xf736e ; mov edx, dword ptr [rsi + 0x78] ; mov qword ptr [rdi + 0x80], rdx ; ret
0x00000000000f7ee9 : js 0xf7f3b ; mov dword ptr [rdi + 0x100], edx ; ret
0x00000000000fd984 : js 0xfd99a ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x00000000000a9f28 : js 0xffffffffed3aa18e ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a9f56 : js 0xffffffffed3aa3bc ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a9fa8 : js 0xffffffffed3aa80e ; mov byte ptr [rdi + 9], ch ; ret
0x000000000012221b : lahf ; mov dh, 6 ; add al, ch ; sbb al, 0x9b ; add byte ptr [rax], al ; test rax, rax ; je 0x12223f ; mov rdi, rbx ; call rax
0x0000000000197e33 : lcall ptr [rcx + rax*8 + 0x22640001] ; clc ; dec esp ; rol dword ptr [rcx], 0 ; movsb byte ptr [rdi], byte ptr [rsi] ; and bh, al ; jmp rsp
0x000000000019671b : lcall ptr [rcx + rdi + 0x4a940001] ; call rsp
0x000000000019448b : lcall ptr [rdi + rdx*2] ; add byte ptr [rax], al ; push rsp ; ret
0x0000000000187113 : lcall ptr [rdi - 4] ; jmp qword ptr [rcx]
0x0000000000041b9f : lcall ptr [rdi] ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000100748 : lcall ptr [rdi] ; and edi, 0xfffffff0 ; add edi, 0x26 ; mov dword ptr fs:[rax], edi ; mov eax, 0xffffffff ; ret
0x0000000000187def : lcall ptr [rdi] ; mov edx, 0xb6e6fff5 ; cmc ; lcall ptr [rdx - 0x6b000a47] ; mov bh, 0xf5 ; call rsp
0x0000000000187deb : lcall ptr [rdi] ; mov edx, 0xba1ffff5 ; cmc ; jmp rsi
0x00000000001870b7 : lcall ptr [rdi] ; out dx, al ; call qword ptr [rax]
0x0000000000198f93 : lcall ptr [rdx + rdi - 0x708bfffe] ; cli ; call rsp
0x0000000000195d83 : lcall ptr [rdx + rdi*8 + 0x71940000] ; out dx, eax ; call rsp
0x00000000000d27f3 : lcall ptr [rdx - 0xb17fff5] ; jno 0xd2801 ; push qword ptr [rcx] ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x000000000019867b : lcall ptr [rsp + rsi*8] ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; xor al, 0xf9 ; push qword ptr [rsp + rsi*8 + 1] ; add byte ptr [rsi + rsi], ah ; stc ; call rsp
0x000000000015a826 : lddqu xmm0, xmmword ptr [rsi - 0x10] ; movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000015b046 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000015afd1 : lddqu xmm1, xmmword ptr [rsi - 0x10] ; movdqu xmmword ptr [rdi - 0x11], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015af51 : lddqu xmm1, xmmword ptr [rsi - 0x10] ; movdqu xmmword ptr [rdi - 0x12], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015aec1 : lddqu xmm1, xmmword ptr [rsi - 0x10] ; movdqu xmmword ptr [rdi - 0x13], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ae41 : lddqu xmm1, xmmword ptr [rsi - 0x10] ; movdqu xmmword ptr [rdi - 0x14], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015adc1 : lddqu xmm1, xmmword ptr [rsi - 0x10] ; movdqu xmmword ptr [rdi - 0x15], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ad41 : lddqu xmm1, xmmword ptr [rsi - 0x10] ; movdqu xmmword ptr [rdi - 0x16], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015acc1 : lddqu xmm1, xmmword ptr [rsi - 0x10] ; movdqu xmmword ptr [rdi - 0x17], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ac41 : lddqu xmm1, xmmword ptr [rsi - 0x10] ; movdqu xmmword ptr [rdi - 0x18], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015abc1 : lddqu xmm1, xmmword ptr [rsi - 0x10] ; movdqu xmmword ptr [rdi - 0x19], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ab41 : lddqu xmm1, xmmword ptr [rsi - 0x10] ; movdqu xmmword ptr [rdi - 0x1a], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015aac1 : lddqu xmm1, xmmword ptr [rsi - 0x10] ; movdqu xmmword ptr [rdi - 0x1b], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015aa41 : lddqu xmm1, xmmword ptr [rsi - 0x10] ; movdqu xmmword ptr [rdi - 0x1c], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a9b1 : lddqu xmm1, xmmword ptr [rsi - 0x10] ; movdqu xmmword ptr [rdi - 0x1d], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a921 : lddqu xmm1, xmmword ptr [rsi - 0x10] ; movdqu xmmword ptr [rdi - 0x1e], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a891 : lddqu xmm1, xmmword ptr [rsi - 0x10] ; movdqu xmmword ptr [rdi - 0x1f], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015b2cb : lddqu xmm1, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b25b : lddqu xmm1, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b1eb : lddqu xmm1, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b17b : lddqu xmm1, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b10b : lddqu xmm1, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b09b : lddqu xmm1, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b6bb : lddqu xmm1, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b64b : lddqu xmm1, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b5db : lddqu xmm1, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b56b : lddqu xmm1, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b4fb : lddqu xmm1, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b48b : lddqu xmm1, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b41b : lddqu xmm1, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b3ab : lddqu xmm1, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b33b : lddqu xmm1, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016c963 : lds r14, ptr [rdx - 0x10f0993b] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000090df4 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x0000000000090e04 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x00000000000a0c54 : lea eax, dword ptr [rax + rdi + 0x30] ; ret
0x0000000000090dd4 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x00000000000a77ec : lea eax, dword ptr [rdi + 0x10] ; ret
0x00000000000a819c : lea eax, dword ptr [rdi + 0x10] ; sub r8, 0x11 ; lea rdi, qword ptr [rdi + 0x11] ; jne 0xa8991 ; ret
0x00000000000a7801 : lea eax, dword ptr [rdi + 0x11] ; ret
0x00000000000a81c1 : lea eax, dword ptr [rdi + 0x11] ; sub r8, 0x12 ; lea rdi, qword ptr [rdi + 0x12] ; jne 0xa8991 ; ret
0x00000000000a781f : lea eax, dword ptr [rdi + 0x12] ; ret
0x00000000000a81ef : lea eax, dword ptr [rdi + 0x12] ; sub r8, 0x13 ; lea rdi, qword ptr [rdi + 0x13] ; jne 0xa8991 ; ret
0x00000000000a783f : lea eax, dword ptr [rdi + 0x13] ; ret
0x00000000000a821f : lea eax, dword ptr [rdi + 0x13] ; sub r8, 0x14 ; lea rdi, qword ptr [rdi + 0x14] ; jne 0xa8991 ; ret
0x00000000000a7862 : lea eax, dword ptr [rdi + 0x14] ; ret
0x00000000000a8252 : lea eax, dword ptr [rdi + 0x14] ; sub r8, 0x15 ; lea rdi, qword ptr [rdi + 0x15] ; jne 0xa8991 ; ret
0x00000000000a7881 : lea eax, dword ptr [rdi + 0x15] ; ret
0x00000000000a8281 : lea eax, dword ptr [rdi + 0x15] ; sub r8, 0x16 ; lea rdi, qword ptr [rdi + 0x16] ; jne 0xa8991 ; ret
0x00000000000a78a1 : lea eax, dword ptr [rdi + 0x16] ; ret
0x00000000000a82b1 : lea eax, dword ptr [rdi + 0x16] ; sub r8, 0x17 ; lea rdi, qword ptr [rdi + 0x17] ; jne 0xa8991 ; ret
0x00000000000a78c1 : lea eax, dword ptr [rdi + 0x17] ; ret
0x00000000000a82e1 : lea eax, dword ptr [rdi + 0x17] ; sub r8, 0x18 ; lea rdi, qword ptr [rdi + 0x18] ; jne 0xa8991 ; ret
0x00000000000a78e4 : lea eax, dword ptr [rdi + 0x18] ; ret
0x00000000000a8314 : lea eax, dword ptr [rdi + 0x18] ; sub r8, 0x19 ; lea rdi, qword ptr [rdi + 0x19] ; jne 0xa8991 ; ret
0x00000000000a7909 : lea eax, dword ptr [rdi + 0x19] ; ret
0x00000000000a8349 : lea eax, dword ptr [rdi + 0x19] ; sub r8, 0x1a ; lea rdi, qword ptr [rdi + 0x1a] ; jne 0xa8991 ; ret
0x00000000000a7927 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x00000000000a8377 : lea eax, dword ptr [rdi + 0x1a] ; sub r8, 0x1b ; lea rdi, qword ptr [rdi + 0x1b] ; jne 0xa8991 ; ret
0x00000000000a7947 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x00000000000a83a7 : lea eax, dword ptr [rdi + 0x1b] ; sub r8, 0x1c ; lea rdi, qword ptr [rdi + 0x1c] ; jne 0xa8991 ; ret
0x00000000000a7963 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x00000000000a83d3 : lea eax, dword ptr [rdi + 0x1c] ; sub r8, 0x1d ; lea rdi, qword ptr [rdi + 0x1d] ; jne 0xa8991 ; ret
0x00000000000a7983 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x00000000000a8403 : lea eax, dword ptr [rdi + 0x1d] ; sub r8, 0x1e ; lea rdi, qword ptr [rdi + 0x1e] ; jne 0xa8991 ; ret
0x00000000000a79a3 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x00000000000a8433 : lea eax, dword ptr [rdi + 0x1e] ; sub r8, 0x1f ; lea rdi, qword ptr [rdi + 0x1f] ; jne 0xa8991 ; ret
0x00000000000a79c3 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x00000000000a8463 : lea eax, dword ptr [rdi + 0x1f] ; sub r8, 0x20 ; lea rdi, qword ptr [rdi + 0x20] ; jne 0xa8991 ; ret
0x00000000000a8813 : lea eax, dword ptr [rdi + 0x20] ; ret
0x00000000000a8a79 : lea eax, dword ptr [rdi + 0x40] ; ret
0x00000000000a773d : lea eax, dword ptr [rdi + 0xa] ; ret
0x00000000000a80ad : lea eax, dword ptr [rdi + 0xa] ; sub r8, 0xb ; lea rdi, qword ptr [rdi + 0xb] ; jne 0xa8991 ; ret
0x00000000000a775d : lea eax, dword ptr [rdi + 0xb] ; ret
0x00000000000a80cd : lea eax, dword ptr [rdi + 0xb] ; sub r8, 0xc ; lea rdi, qword ptr [rdi + 0xc] ; jne 0xa8991 ; ret
0x00000000000a777f : lea eax, dword ptr [rdi + 0xc] ; ret
0x00000000000a80ef : lea eax, dword ptr [rdi + 0xc] ; sub r8, 0xd ; lea rdi, qword ptr [rdi + 0xd] ; jne 0xa8991 ; ret
0x00000000000a779f : lea eax, dword ptr [rdi + 0xd] ; ret
0x00000000000a811f : lea eax, dword ptr [rdi + 0xd] ; sub r8, 0xe ; lea rdi, qword ptr [rdi + 0xe] ; jne 0xa8991 ; ret
0x00000000000a77bf : lea eax, dword ptr [rdi + 0xe] ; ret
0x00000000000a814f : lea eax, dword ptr [rdi + 0xe] ; sub r8, 0xf ; lea rdi, qword ptr [rdi + 0xf] ; jne 0xa8991 ; ret
0x00000000000a77d9 : lea eax, dword ptr [rdi + 0xf] ; ret
0x00000000000a8179 : lea eax, dword ptr [rdi + 0xf] ; sub r8, 0x10 ; lea rdi, qword ptr [rdi + 0x10] ; jne 0xa8991 ; ret
0x0000000000128e03 : lea eax, dword ptr [rdi + 1] ; movzx ecx, byte ptr [r8 - 1] ; test cl, cl ; jne 0x128dfe ; ret
0x00000000000a0814 : lea eax, dword ptr [rdi + 1] ; ret
0x00000000000a7f77 : lea eax, dword ptr [rdi + 1] ; sub r8, 2 ; lea rdi, qword ptr [rdi + 2] ; jne 0xa8991 ; ret
0x00000000000a0825 : lea eax, dword ptr [rdi + 2] ; ret
0x00000000000a7f9a : lea eax, dword ptr [rdi + 2] ; sub r8, 3 ; lea rdi, qword ptr [rdi + 3] ; jne 0xa8991 ; ret
0x00000000000a0838 : lea eax, dword ptr [rdi + 3] ; ret
0x00000000000a7fb5 : lea eax, dword ptr [rdi + 3] ; sub r8, 4 ; lea rdi, qword ptr [rdi + 4] ; jne 0xa8991 ; ret
0x00000000000a0847 : lea eax, dword ptr [rdi + 4] ; ret
0x00000000000a7fd8 : lea eax, dword ptr [rdi + 4] ; sub r8, 5 ; lea rdi, qword ptr [rdi + 5] ; jne 0xa8991 ; ret
0x00000000000a085a : lea eax, dword ptr [rdi + 5] ; ret
0x00000000000a7ffd : lea eax, dword ptr [rdi + 5] ; sub r8, 6 ; lea rdi, qword ptr [rdi + 6] ; jne 0xa8991 ; ret
0x00000000000a09c7 : lea eax, dword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a086c : lea eax, dword ptr [rdi + 6] ; ret
0x00000000000a801b : lea eax, dword ptr [rdi + 6] ; sub r8, 7 ; lea rdi, qword ptr [rdi + 7] ; jne 0xa8991 ; ret
0x00000000000a0880 : lea eax, dword ptr [rdi + 7] ; ret
0x00000000000a8037 : lea eax, dword ptr [rdi + 7] ; sub r8, 8 ; lea rdi, qword ptr [rdi + 8] ; jne 0xa8991 ; ret
0x00000000000a0806 : lea eax, dword ptr [rdi + 8] ; ret
0x00000000000a805a : lea eax, dword ptr [rdi + 8] ; sub r8, 9 ; lea rdi, qword ptr [rdi + 9] ; jne 0xa8991 ; ret
0x0000000000125900 : lea eax, dword ptr [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00000000000a771f : lea eax, dword ptr [rdi + 9] ; ret
0x00000000000a807f : lea eax, dword ptr [rdi + 9] ; sub r8, 0xa ; lea rdi, qword ptr [rdi + 0xa] ; jne 0xa8991 ; ret
0x0000000000090e29 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x0000000000090e39 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x0000000000090d23 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x0000000000125dc1 : lea eax, dword ptr [rdi + rax + 2] ; cmp rdx, rax ; sbb eax, eax ; ret
0x000000000008be0c : lea eax, dword ptr [rdi + rax] ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x0000000000098007 : lea eax, dword ptr [rdi + rax] ; ret
0x000000000004ef18 : lea eax, dword ptr [rdi + rcx] ; cmp edi, r11d ; mov ecx, 0xffffffff ; cmovg eax, ecx ; jmp 0x4eef9
0x000000000014d3aa : lea eax, dword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x000000000002d9d5 : lea eax, dword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000008f7f9 : lea eax, dword ptr [rdi + rsi] ; ret
0x00000000000ac4fe : lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000000ac661 : lea eax, dword ptr [rdi - 0xc] ; ret
0x0000000000050e68 : lea eax, dword ptr [rdi - 1] ; xor edx, edx ; div ecx ; add r8d, eax ; mov eax, r8d ; ret
0x00000000000ac681 : lea eax, dword ptr [rdi - 4] ; ret
0x00000000000ac671 : lea eax, dword ptr [rdi - 8] ; ret
0x0000000000114610 : lea eax, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000a7673 : lea eax, dword ptr [rdi] ; ret
0x00000000000a7f53 : lea eax, dword ptr [rdi] ; sub r8, 1 ; lea rdi, qword ptr [rdi + 1] ; jne 0xa8990 ; ret
0x00000000000a5c41 : lea eax, dword ptr [rdx + 0xe] ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000a5a06 : lea eax, dword ptr [rdx + 7] ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000743ee : lea eax, dword ptr [rdx + rdi] ; ret
0x000000000002cb11 : lea eax, dword ptr [rip + 0x15df0e] ; cmp edi, dword ptr [rdx + 0x38] ; jae 0x2cb3f ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x000000000010a45c : lea eax, dword ptr [rip + 0x7e7be] ; movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000c395e : lea eax, dword ptr [rip + 0xc3418] ; movzx edi, dl ; movsxd rax, dword ptr [r8 + rdi*4] ; add rax, r8 ; jmp rax
0x00000000001396c8 : lea eax, dword ptr [rip - 0x6a5e] ; mov esi, 9 ; mov rdi, rax ; call qword ptr [r10]
0x00000000001395d0 : lea eax, dword ptr [rip - 0x6c16] ; mov rdi, rax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x00000000001a4cbd : lea eax, dword ptr [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x000000000012cdcc : lea ebp, dword ptr [rsp + 8] ; xor edx, edx ; mov rsi, r12 ; mov rdi, rbx ; mov rcx, r13 ; call r15
0x000000000003763b : lea ebx, dword ptr [rax + rsi] ; nop ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x00000000000acae0 : lea ebx, dword ptr [rdi + 0xc] ; test eax, eax ; mov dword ptr [rdi + 8], eax ; je 0xacaa5 ; mov rax, rbx ; pop rbx ; ret
0x0000000000076b80 : lea ecx, dword ptr [rbp - 0x38] ; mov rcx, r13 ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x000000000006d765 : lea ecx, dword ptr [rbx + 0x40] ; lea rdx, qword ptr [rbx + 0x34] ; mov esi, 1 ; mov rdi, rbx ; call rax
0x000000000006da70 : lea ecx, dword ptr [rbx + 0x40] ; mov esi, 1 ; mov rdi, rbx ; call r8
0x00000000000ac8dc : lea ecx, dword ptr [rdi + 8] ; je 0xac8ff ; cmp esi, dword ptr [rdi + 8] ; cmove rax, rcx ; ret
0x00000000001276d1 : lea ecx, dword ptr [rdi + rdi*8 - 1] ; push qword ptr [rax + rsi - 0x7d] ; mov ebp, 0xffffff4c ; inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x3945
0x000000000004b511 : lea ecx, dword ptr [rdi + rdx] ; add rdx, r13 ; call qword ptr [r10 + rax*8]
0x0000000000147b37 : lea ecx, dword ptr [rdx + rcx - 0x10] ; movzx eax, byte ptr [rdi + rcx] ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x00000000001507b0 : lea ecx, dword ptr [rsi + rdx] ; cmp rdi, r9 ; jb 0x150992 ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000016e60b : lea ecx, dword ptr [rsi + rdx] ; cmp rdi, r9 ; jb 0x16e85d ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000091485 : lea ecx, dword ptr [rsi + rdx] ; cmp rdi, r9 ; jb 0x91605 ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000768d4 : lea ecx, dword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00000000000769b0 : lea ecx, dword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00000000000ad5ea : lea ecx, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rbx
0x00000000000bb41f : lea ecx, dword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x00000000000ad321 : lea ecx, dword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x000000000007bd3f : lea edi, dword ptr [rax + 5] ; mov esi, 0x2c ; mov rdi, r15 ; call 0x97fcd
0x00000000000a6a9d : lea edi, dword ptr [rdi + 0x10] ; jne 0xa7179 ; ret
0x00000000000a8181 : lea edi, dword ptr [rdi + 0x10] ; jne 0xa8989 ; ret
0x00000000000a6ac0 : lea edi, dword ptr [rdi + 0x11] ; jne 0xa7179 ; ret
0x00000000000a81a4 : lea edi, dword ptr [rdi + 0x11] ; jne 0xa8989 ; ret
0x00000000000a6ae5 : lea edi, dword ptr [rdi + 0x12] ; jne 0xa7179 ; ret
0x00000000000a81c9 : lea edi, dword ptr [rdi + 0x12] ; jne 0xa8989 ; ret
0x00000000000a6b03 : lea edi, dword ptr [rdi + 0x13] ; jne 0xa7179 ; ret
0x00000000000a81f7 : lea edi, dword ptr [rdi + 0x13] ; jne 0xa8989 ; ret
0x00000000000a6b23 : lea edi, dword ptr [rdi + 0x14] ; jne 0xa7179 ; ret
0x00000000000a8227 : lea edi, dword ptr [rdi + 0x14] ; jne 0xa8989 ; ret
0x00000000000a6b46 : lea edi, dword ptr [rdi + 0x15] ; jne 0xa7179 ; ret
0x00000000000a825a : lea edi, dword ptr [rdi + 0x15] ; jne 0xa8989 ; ret
0x00000000000a6b65 : lea edi, dword ptr [rdi + 0x16] ; jne 0xa7179 ; ret
0x00000000000a8289 : lea edi, dword ptr [rdi + 0x16] ; jne 0xa8989 ; ret
0x00000000000a6b85 : lea edi, dword ptr [rdi + 0x17] ; jne 0xa7179 ; ret
0x00000000000a82b9 : lea edi, dword ptr [rdi + 0x17] ; jne 0xa8989 ; ret
0x00000000000a6ba5 : lea edi, dword ptr [rdi + 0x18] ; jne 0xa7179 ; ret
0x00000000000a82e9 : lea edi, dword ptr [rdi + 0x18] ; jne 0xa8989 ; ret
0x00000000000a6bc8 : lea edi, dword ptr [rdi + 0x19] ; jne 0xa7179 ; ret
0x00000000000a831c : lea edi, dword ptr [rdi + 0x19] ; jne 0xa8989 ; ret
0x00000000000a6bfd : lea edi, dword ptr [rdi + 0x1a] ; jne 0xa7179 ; ret
0x00000000000a8351 : lea edi, dword ptr [rdi + 0x1a] ; jne 0xa8989 ; ret
0x00000000000a6c2b : lea edi, dword ptr [rdi + 0x1b] ; jne 0xa7179 ; ret
0x00000000000a837f : lea edi, dword ptr [rdi + 0x1b] ; jne 0xa8989 ; ret
0x00000000000a6c5b : lea edi, dword ptr [rdi + 0x1c] ; jne 0xa7179 ; ret
0x00000000000a83af : lea edi, dword ptr [rdi + 0x1c] ; jne 0xa8989 ; ret
0x00000000000a6c87 : lea edi, dword ptr [rdi + 0x1d] ; jne 0xa7179 ; ret
0x00000000000a83db : lea edi, dword ptr [rdi + 0x1d] ; jne 0xa8989 ; ret
0x00000000000a6cb7 : lea edi, dword ptr [rdi + 0x1e] ; jne 0xa7179 ; ret
0x00000000000a840b : lea edi, dword ptr [rdi + 0x1e] ; jne 0xa8989 ; ret
0x00000000000a6ce7 : lea edi, dword ptr [rdi + 0x1f] ; jne 0xa7179 ; ret
0x00000000000a843b : lea edi, dword ptr [rdi + 0x1f] ; jne 0xa8989 ; ret
0x00000000000a6d17 : lea edi, dword ptr [rdi + 0x20] ; jne 0xa7179 ; ret
0x00000000000a846b : lea edi, dword ptr [rdi + 0x20] ; jne 0xa8989 ; ret
0x00000000000fe787 : lea edi, dword ptr [rdi + 0x2c] ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x00000000000a69e3 : lea edi, dword ptr [rdi + 0xa] ; jne 0xa7179 ; ret
0x00000000000a8087 : lea edi, dword ptr [rdi + 0xa] ; jne 0xa8989 ; ret
0x00000000000a6a01 : lea edi, dword ptr [rdi + 0xb] ; jne 0xa7179 ; ret
0x00000000000a80b5 : lea edi, dword ptr [rdi + 0xb] ; jne 0xa8989 ; ret
0x00000000000a6a21 : lea edi, dword ptr [rdi + 0xc] ; jne 0xa7179 ; ret
0x00000000000a80d5 : lea edi, dword ptr [rdi + 0xc] ; jne 0xa8989 ; ret
0x00000000000a6a43 : lea edi, dword ptr [rdi + 0xd] ; jne 0xa7179 ; ret
0x00000000000a80f7 : lea edi, dword ptr [rdi + 0xd] ; jne 0xa8989 ; ret
0x00000000000a6a63 : lea edi, dword ptr [rdi + 0xe] ; jne 0xa7179 ; ret
0x00000000000a8127 : lea edi, dword ptr [rdi + 0xe] ; jne 0xa8989 ; ret
0x00000000000a6a83 : lea edi, dword ptr [rdi + 0xf] ; jne 0xa7179 ; ret
0x00000000000a8157 : lea edi, dword ptr [rdi + 0xf] ; jne 0xa8989 ; ret
0x00000000000a68b7 : lea edi, dword ptr [rdi + 1] ; jne 0xa7179 ; ret
0x00000000000a7f5a : lea edi, dword ptr [rdi + 1] ; jne 0xa8989 ; ret
0x00000000000a68db : lea edi, dword ptr [rdi + 2] ; jne 0xa7179 ; ret
0x00000000000a7f7f : lea edi, dword ptr [rdi + 2] ; jne 0xa8989 ; ret
0x00000000000a68fe : lea edi, dword ptr [rdi + 3] ; jne 0xa7179 ; ret
0x00000000000a7fa2 : lea edi, dword ptr [rdi + 3] ; jne 0xa8989 ; ret
0x00000000000a6919 : lea edi, dword ptr [rdi + 4] ; jne 0xa7179 ; ret
0x00000000000a7fbd : lea edi, dword ptr [rdi + 4] ; jne 0xa8989 ; ret
0x00000000000a693c : lea edi, dword ptr [rdi + 5] ; jne 0xa7179 ; ret
0x00000000000a7fe0 : lea edi, dword ptr [rdi + 5] ; jne 0xa8989 ; ret
0x00000000000a6961 : lea edi, dword ptr [rdi + 6] ; jne 0xa7179 ; ret
0x00000000000a8005 : lea edi, dword ptr [rdi + 6] ; jne 0xa8989 ; ret
0x00000000000a697f : lea edi, dword ptr [rdi + 7] ; jne 0xa7179 ; ret
0x00000000000a8023 : lea edi, dword ptr [rdi + 7] ; jne 0xa8989 ; ret
0x00000000000a699b : lea edi, dword ptr [rdi + 8] ; jne 0xa7179 ; ret
0x00000000000a803f : lea edi, dword ptr [rdi + 8] ; jne 0xa8989 ; ret
0x00000000000a69be : lea edi, dword ptr [rdi + 9] ; jne 0xa7179 ; ret
0x00000000000a8062 : lea edi, dword ptr [rdi + 9] ; jne 0xa8989 ; ret
0x000000000009140a : lea edi, dword ptr [rdi + rcx - 1] ; lea rsi, qword ptr [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000153cf3 : lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x153d11 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153e43 : lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x153e61 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153f93 : lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x153fb1 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001540e3 : lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154101 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154233 : lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154251 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154383 : lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1543a1 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001544d3 : lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1544f1 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154623 : lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154641 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154773 : lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154791 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001548c3 : lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1548e1 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154a13 : lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154a31 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154b63 : lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154b81 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154cb3 : lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154cd1 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154e03 : lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154e21 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154f53 : lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154f71 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001566c3 : lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1566e1 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156813 : lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156831 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156963 : lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156981 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ab3 : lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156ad1 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156c03 : lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156c21 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156d53 : lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156d71 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ea3 : lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156ec1 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ff3 : lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x157011 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157143 : lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x157161 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157293 : lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1572b1 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001573e3 : lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x157401 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157533 : lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x157551 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157683 : lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1576a1 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001577d3 : lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1577f1 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157923 : lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x157941 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000006da07 : lea edi, dword ptr [rip + 0x118013] ; movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x000000000003344d : lea edi, dword ptr [rip + 0x14cc6d] ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x0000000000134b3e : lea edi, dword ptr [rip + 0x554fc] ; mov esi, esi ; movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x00000000000c5a62 : lea edi, dword ptr [rip + 0xc16ec] ; mov esi, edx ; movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x000000000007ee6b : lea edx, dword ptr [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000106117 : lea edx, dword ptr [rax + 1] ; mov qword ptr [rdi + 0x28], rdx ; mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007994b : lea edx, dword ptr [rax + 1] ; mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000010b461 : lea edx, dword ptr [rax + rdi*4] ; mov eax, dword ptr [rdx] ; cmp eax, 0xff ; je 0x10b47f ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x000000000006da6c : lea edx, dword ptr [rbx + 0x34] ; lea rcx, qword ptr [rbx + 0x40] ; mov esi, 1 ; mov rdi, rbx ; call r8
0x000000000006d769 : lea edx, dword ptr [rbx + 0x34] ; mov esi, 1 ; mov rdi, rbx ; call rax
0x00000000000a0518 : lea edx, dword ptr [rcx + 1] ; mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x00000000000a0597 : lea edx, dword ptr [rcx + 1] ; mov byte ptr [rcx], 0 ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00000000000350b9 : lea edx, dword ptr [rcx + rdx - 0x7e] ; or eax, 0x3f000000 ; movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x00000000000c800e : lea edx, dword ptr [rdi + rdi*8] ; lea rax, qword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000dff22 : lea edx, dword ptr [rdx + rdx*4] ; lea rdi, qword ptr [rax + rsi*4] ; shl rdx, 2 ; xor esi, esi ; call 0x91821
0x0000000000139c51 : lea edx, dword ptr [rip + 0x3609] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000913fe : lea edx, dword ptr [rsi + rcx] ; cmp rdi, rdx ; jb 0x91413 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000768d0 : lea esi, dword ptr [rbp + 0x50] ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000076a8c : lea esi, dword ptr [rbp + 0x90] ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00000000000769a9 : lea esi, dword ptr [rbp + 0x90] ; lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00000000001177d3 : lea esi, dword ptr [rbp - 0x20] ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x00000000000cfa3e : lea esi, dword ptr [rbp - 0xc0] ; mov rdi, rbx ; call qword ptr [r15]
0x000000000012de80 : lea esi, dword ptr [rdi + 0x48] ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000048094 : lea esi, dword ptr [rdi] ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000002efa : lea esi, dword ptr [rdi] ; ret 0x793b
0x000000000013a3b0 : lea esi, dword ptr [rip + 0x53a7b] ; mov r8, rbx ; mov ecx, r12d ; mov rdi, rbp ; call 0x56661
0x00000000001142a0 : lea esi, dword ptr [rip + 0x7910c] ; mov rdx, rax ; mov rdi, r14 ; xor eax, eax ; call 0x1105b0
0x00000000000ca1bb : lea esi, dword ptr [rip + 0xc1f5f] ; mov rdi, r12 ; cmove rcx, rax ; xor eax, eax ; call 0x56491
0x00000000000aac61 : lea esi, dword ptr [rip + 0xdb859] ; movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x000000000009140f : lea esi, dword ptr [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000006f033 : lea esi, dword ptr [rsp + 8] ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000013deca : lea esi, dword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013d485 : lea esi, dword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000079527 : lea esp, dword ptr [rdx + rdi*8 - 1] ; xor eax, eax ; pop rbx ; ret
0x0000000000037605 : lea esp, dword ptr [rsi + rbx] ; mov rdi, r12 ; call r15
0x0000000000037604 : lea r12, qword ptr [rsi + rbx] ; mov rdi, r12 ; call r15
0x000000000012cdcb : lea r13, qword ptr [rsp + 8] ; xor edx, edx ; mov rsi, r12 ; mov rdi, rbx ; mov rcx, r13 ; call r15
0x000000000007bd3e : lea r15, qword ptr [rax + 5] ; mov esi, 0x2c ; mov rdi, r15 ; call 0x97fce
0x0000000000128e02 : lea r8, qword ptr [rdi + 1] ; movzx ecx, byte ptr [r8 - 1] ; test cl, cl ; jne 0x128dff ; ret
0x00000000000c395d : lea r8, qword ptr [rip + 0xc3418] ; movzx edi, dl ; movsxd rax, dword ptr [r8 + rdi*4] ; add rax, r8 ; jmp rax
0x00000000001396c7 : lea r8, qword ptr [rip - 0x6a5e] ; mov esi, 9 ; mov rdi, rax ; call qword ptr [r10]
0x00000000001395cf : lea r8, qword ptr [rip - 0x6c16] ; mov rdi, rax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x0000000000076b7f : lea r9, qword ptr [rbp - 0x38] ; mov rcx, r13 ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x00000000000768d3 : lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00000000000769af : lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00000000000ad5e9 : lea r9, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rbx
0x00000000000bb41e : lea r9, qword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x00000000000ad320 : lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x0000000000090df3 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000090e03 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x00000000000a0c53 : lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x0000000000090dd3 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000000a77eb : lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a7800 : lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a781e : lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a783e : lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a7861 : lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a7880 : lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a78a0 : lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a78c0 : lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a78e3 : lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a7908 : lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a7926 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a7946 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a7962 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a7982 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a79a2 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a79c2 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a8812 : lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a8a78 : lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a773c : lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a775c : lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a777e : lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a779e : lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a77be : lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a77d8 : lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a0813 : lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a0824 : lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a0837 : lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a0846 : lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a0859 : lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a09c6 : lea rax, qword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a086b : lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a087f : lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a0805 : lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a771e : lea rax, qword ptr [rdi + 9] ; ret
0x0000000000090e28 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000090e38 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000090d22 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000125dc0 : lea rax, qword ptr [rdi + rax + 2] ; cmp rdx, rax ; sbb eax, eax ; ret
0x000000000008be0b : lea rax, qword ptr [rdi + rax] ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x0000000000098006 : lea rax, qword ptr [rdi + rax] ; ret
0x000000000014d3a9 : lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x000000000002d9d4 : lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000008f7f8 : lea rax, qword ptr [rdi + rsi] ; ret
0x00000000000ac4fd : lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac660 : lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000ac680 : lea rax, qword ptr [rdi - 4] ; ret
0x00000000000ac670 : lea rax, qword ptr [rdi - 8] ; ret
0x00000000000a7672 : lea rax, qword ptr [rdi] ; ret
0x00000000000a7f52 : lea rax, qword ptr [rdi] ; sub r8, 1 ; lea rdi, qword ptr [rdi + 1] ; jne 0xa8991 ; ret
0x000000000002cb10 : lea rax, qword ptr [rip + 0x15df0e] ; cmp edi, dword ptr [rdx + 0x38] ; jae 0x2cb40 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x000000000010a45b : lea rax, qword ptr [rip + 0x7e7be] ; movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000ac639 : lea rax, qword ptr es:[rdi - 0x10] ; ret
0x000000000003763a : lea rbx, qword ptr [rax + r14] ; nop ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x00000000000acadf : lea rbx, qword ptr [rdi + 0xc] ; test eax, eax ; mov dword ptr [rdi + 8], eax ; je 0xacaa6 ; mov rax, rbx ; pop rbx ; ret
0x000000000006d764 : lea rcx, qword ptr [rbx + 0x40] ; lea rdx, qword ptr [rbx + 0x34] ; mov esi, 1 ; mov rdi, rbx ; call rax
0x000000000006da6f : lea rcx, qword ptr [rbx + 0x40] ; mov esi, 1 ; mov rdi, rbx ; call r8
0x00000000000ac8db : lea rcx, qword ptr [rdi + 8] ; je 0xac900 ; cmp esi, dword ptr [rdi + 8] ; cmove rax, rcx ; ret
0x0000000000147b36 : lea rcx, qword ptr [rdx + rcx - 0x10] ; movzx eax, byte ptr [rdi + rcx] ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000011f606 : lea rdi, qword ptr [r9 + 1] ; cmp r8, 6 ; jne 0x11f58c ; pop rbx ; ret
0x00000000000dff25 : lea rdi, qword ptr [rax + rsi*4] ; shl rdx, 2 ; xor esi, esi ; call 0x9181e
0x00000000001356bd : lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000001382f1 : lea rdi, qword ptr [rbx + 0x58] ; call rax
0x0000000000137891 : lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000134af4 : lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x00000000000a6a9c : lea rdi, qword ptr [rdi + 0x10] ; jne 0xa717a ; ret
0x00000000000a8180 : lea rdi, qword ptr [rdi + 0x10] ; jne 0xa898a ; ret
0x00000000000a6abf : lea rdi, qword ptr [rdi + 0x11] ; jne 0xa717a ; ret
0x00000000000a81a3 : lea rdi, qword ptr [rdi + 0x11] ; jne 0xa898a ; ret
0x00000000000a6ae4 : lea rdi, qword ptr [rdi + 0x12] ; jne 0xa717a ; ret
0x00000000000a81c8 : lea rdi, qword ptr [rdi + 0x12] ; jne 0xa898a ; ret
0x00000000000a6b02 : lea rdi, qword ptr [rdi + 0x13] ; jne 0xa717a ; ret
0x00000000000a81f6 : lea rdi, qword ptr [rdi + 0x13] ; jne 0xa898a ; ret
0x00000000000a6b22 : lea rdi, qword ptr [rdi + 0x14] ; jne 0xa717a ; ret
0x00000000000a8226 : lea rdi, qword ptr [rdi + 0x14] ; jne 0xa898a ; ret
0x00000000000a6b45 : lea rdi, qword ptr [rdi + 0x15] ; jne 0xa717a ; ret
0x00000000000a8259 : lea rdi, qword ptr [rdi + 0x15] ; jne 0xa898a ; ret
0x00000000000a6b64 : lea rdi, qword ptr [rdi + 0x16] ; jne 0xa717a ; ret
0x00000000000a8288 : lea rdi, qword ptr [rdi + 0x16] ; jne 0xa898a ; ret
0x00000000000a6b84 : lea rdi, qword ptr [rdi + 0x17] ; jne 0xa717a ; ret
0x00000000000a82b8 : lea rdi, qword ptr [rdi + 0x17] ; jne 0xa898a ; ret
0x00000000000a6ba4 : lea rdi, qword ptr [rdi + 0x18] ; jne 0xa717a ; ret
0x00000000000a82e8 : lea rdi, qword ptr [rdi + 0x18] ; jne 0xa898a ; ret
0x00000000000a6bc7 : lea rdi, qword ptr [rdi + 0x19] ; jne 0xa717a ; ret
0x00000000000a831b : lea rdi, qword ptr [rdi + 0x19] ; jne 0xa898a ; ret
0x00000000000a6bfc : lea rdi, qword ptr [rdi + 0x1a] ; jne 0xa717a ; ret
0x00000000000a8350 : lea rdi, qword ptr [rdi + 0x1a] ; jne 0xa898a ; ret
0x00000000000a6c2a : lea rdi, qword ptr [rdi + 0x1b] ; jne 0xa717a ; ret
0x00000000000a837e : lea rdi, qword ptr [rdi + 0x1b] ; jne 0xa898a ; ret
0x00000000000a6c5a : lea rdi, qword ptr [rdi + 0x1c] ; jne 0xa717a ; ret
0x00000000000a83ae : lea rdi, qword ptr [rdi + 0x1c] ; jne 0xa898a ; ret
0x00000000000a6c86 : lea rdi, qword ptr [rdi + 0x1d] ; jne 0xa717a ; ret
0x00000000000a83da : lea rdi, qword ptr [rdi + 0x1d] ; jne 0xa898a ; ret
0x00000000000a6cb6 : lea rdi, qword ptr [rdi + 0x1e] ; jne 0xa717a ; ret
0x00000000000a840a : lea rdi, qword ptr [rdi + 0x1e] ; jne 0xa898a ; ret
0x00000000000a6ce6 : lea rdi, qword ptr [rdi + 0x1f] ; jne 0xa717a ; ret
0x00000000000a843a : lea rdi, qword ptr [rdi + 0x1f] ; jne 0xa898a ; ret
0x00000000000a6d16 : lea rdi, qword ptr [rdi + 0x20] ; jne 0xa717a ; ret
0x00000000000a846a : lea rdi, qword ptr [rdi + 0x20] ; jne 0xa898a ; ret
0x00000000000a69e2 : lea rdi, qword ptr [rdi + 0xa] ; jne 0xa717a ; ret
0x00000000000a8086 : lea rdi, qword ptr [rdi + 0xa] ; jne 0xa898a ; ret
0x00000000000a6a00 : lea rdi, qword ptr [rdi + 0xb] ; jne 0xa717a ; ret
0x00000000000a80b4 : lea rdi, qword ptr [rdi + 0xb] ; jne 0xa898a ; ret
0x00000000000a6a20 : lea rdi, qword ptr [rdi + 0xc] ; jne 0xa717a ; ret
0x00000000000a80d4 : lea rdi, qword ptr [rdi + 0xc] ; jne 0xa898a ; ret
0x00000000000a6a42 : lea rdi, qword ptr [rdi + 0xd] ; jne 0xa717a ; ret
0x00000000000a80f6 : lea rdi, qword ptr [rdi + 0xd] ; jne 0xa898a ; ret
0x00000000000a6a62 : lea rdi, qword ptr [rdi + 0xe] ; jne 0xa717a ; ret
0x00000000000a8126 : lea rdi, qword ptr [rdi + 0xe] ; jne 0xa898a ; ret
0x00000000000a6a82 : lea rdi, qword ptr [rdi + 0xf] ; jne 0xa717a ; ret
0x00000000000a8156 : lea rdi, qword ptr [rdi + 0xf] ; jne 0xa898a ; ret
0x00000000000a68b6 : lea rdi, qword ptr [rdi + 1] ; jne 0xa717a ; ret
0x00000000000a7f59 : lea rdi, qword ptr [rdi + 1] ; jne 0xa898a ; ret
0x00000000000a68da : lea rdi, qword ptr [rdi + 2] ; jne 0xa717a ; ret
0x00000000000a7f7e : lea rdi, qword ptr [rdi + 2] ; jne 0xa898a ; ret
0x00000000000a68fd : lea rdi, qword ptr [rdi + 3] ; jne 0xa717a ; ret
0x00000000000a7fa1 : lea rdi, qword ptr [rdi + 3] ; jne 0xa898a ; ret
0x00000000000a6918 : lea rdi, qword ptr [rdi + 4] ; jne 0xa717a ; ret
0x00000000000a7fbc : lea rdi, qword ptr [rdi + 4] ; jne 0xa898a ; ret
0x00000000000a693b : lea rdi, qword ptr [rdi + 5] ; jne 0xa717a ; ret
0x00000000000a7fdf : lea rdi, qword ptr [rdi + 5] ; jne 0xa898a ; ret
0x00000000000a6960 : lea rdi, qword ptr [rdi + 6] ; jne 0xa717a ; ret
0x00000000000a8004 : lea rdi, qword ptr [rdi + 6] ; jne 0xa898a ; ret
0x00000000000a697e : lea rdi, qword ptr [rdi + 7] ; jne 0xa717a ; ret
0x00000000000a8022 : lea rdi, qword ptr [rdi + 7] ; jne 0xa898a ; ret
0x00000000000a699a : lea rdi, qword ptr [rdi + 8] ; jne 0xa717a ; ret
0x00000000000a803e : lea rdi, qword ptr [rdi + 8] ; jne 0xa898a ; ret
0x00000000000a69bd : lea rdi, qword ptr [rdi + 9] ; jne 0xa717a ; ret
0x00000000000a8061 : lea rdi, qword ptr [rdi + 9] ; jne 0xa898a ; ret
0x0000000000091409 : lea rdi, qword ptr [rdi + rcx - 1] ; lea rsi, qword ptr [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000153cf2 : lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x153d12 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153e42 : lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x153e62 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153f92 : lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x153fb2 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001540e2 : lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154102 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154232 : lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154252 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154382 : lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1543a2 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001544d2 : lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1544f2 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154622 : lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154642 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154772 : lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154792 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001548c2 : lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1548e2 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154a12 : lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154a32 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154b62 : lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154b82 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154cb2 : lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154cd2 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154e02 : lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154e22 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154f52 : lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154f72 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001566c2 : lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1566e2 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156812 : lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156832 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156962 : lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156982 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ab2 : lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156ad2 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156c02 : lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156c22 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156d52 : lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156d72 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ea2 : lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156ec2 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ff2 : lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x157012 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157142 : lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x157162 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157292 : lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1572b2 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001573e2 : lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x157402 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157532 : lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x157552 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157682 : lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1576a2 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001577d2 : lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1577f2 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157922 : lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x157942 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000083944 : lea rdi, qword ptr [rip + 0x10b835] ; mov edx, 0x236 ; call 0x7fb7e
0x00000000000838fa : lea rdi, qword ptr [rip + 0x10b91f] ; mov edx, 0x246 ; call 0x7fb7e
0x000000000006da06 : lea rdi, qword ptr [rip + 0x118013] ; movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x00000000000418a4 : lea rdi, qword ptr [rip + 0x14932c] ; mov edx, 0x559 ; call 0x2dbbe
0x000000000003344c : lea rdi, qword ptr [rip + 0x14cc6d] ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x0000000000122ee0 : lea rdi, qword ptr [rip + 0x2a2815] ; call rax
0x0000000000122631 : lea rdi, qword ptr [rip + 0x2a3068] ; call rax
0x0000000000134b3d : lea rdi, qword ptr [rip + 0x554fc] ; mov esi, esi ; movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x00000000000c5a61 : lea rdi, qword ptr [rip + 0xc16ec] ; mov esi, edx ; movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x00000000001177d6 : lea rdi, qword ptr [rip - 0x16d] ; call rax
0x000000000007ee6a : lea rdx, qword ptr [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000106116 : lea rdx, qword ptr [rax + 1] ; mov qword ptr [rdi + 0x28], rdx ; mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007994a : lea rdx, qword ptr [rax + 1] ; mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000010b460 : lea rdx, qword ptr [rax + rdi*4] ; mov eax, dword ptr [rdx] ; cmp eax, 0xff ; je 0x10b480 ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x000000000006da6b : lea rdx, qword ptr [rbx + 0x34] ; lea rcx, qword ptr [rbx + 0x40] ; mov esi, 1 ; mov rdi, rbx ; call r8
0x000000000006d768 : lea rdx, qword ptr [rbx + 0x34] ; mov esi, 1 ; mov rdi, rbx ; call rax
0x00000000000a0517 : lea rdx, qword ptr [rcx + 1] ; mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x00000000000a0596 : lea rdx, qword ptr [rcx + 1] ; mov byte ptr [rcx], 0 ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00000000000c800d : lea rdx, qword ptr [rdi + rdi*8] ; lea rax, qword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000139c50 : lea rdx, qword ptr [rip + 0x3609] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000913fd : lea rdx, qword ptr [rsi + rcx] ; cmp rdi, rdx ; jb 0x91414 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000768cf : lea rsi, qword ptr [rbp + 0x50] ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000076a8b : lea rsi, qword ptr [rbp + 0x90] ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00000000000769a8 : lea rsi, qword ptr [rbp + 0x90] ; lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00000000001177d2 : lea rsi, qword ptr [rbp - 0x20] ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x00000000000cfa3d : lea rsi, qword ptr [rbp - 0xc0] ; mov rdi, rbx ; call qword ptr [r15]
0x000000000012de7f : lea rsi, qword ptr [rdi + 0x48] ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000011429f : lea rsi, qword ptr [rip + 0x7910c] ; mov rdx, rax ; mov rdi, r14 ; xor eax, eax ; call 0x1105b1
0x00000000000aac60 : lea rsi, qword ptr [rip + 0xdb859] ; movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x000000000009140e : lea rsi, qword ptr [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000006f032 : lea rsi, qword ptr [rsp + 8] ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000013dec9 : lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013d484 : lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000034d81 : leave ; addsd xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x00000000001166e6 : leave ; jne 0x1166f9 ; cmp qword ptr [rdi], 0 ; je 0x116702 ; ret
0x00000000000365a5 : leave ; jne 0x365c6 ; mov edx, dword ptr [rdi] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x000000000014d3a8 : leave ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x00000000000a5a11 : leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000035288 : leave ; mov dword ptr [rsp - 0x14], ecx ; fld xword ptr [rsp - 0x18] ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x0000000000100824 : leave ; mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x00000000000038f8 : leave ; pop rdi ; ja 0x395e ; clc ; salc ; jb 0x3984 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000003626d : leave ; shr rcx, 6 ; test qword ptr [rdi + rcx*8], rax ; setne al ; movzx eax, al ; ret
0x00000000001199b1 : leave ; test r8d, r8d ; mov dword ptr [rax + 0xc], r8d ; jne 0x119961 ; mov rax, rdi ; ret
0x00000000000cddab : leave ; xor byte ptr [rdi], ch ; add byte ptr [rdi + rax*8], ah ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000016c9f3 : les r14, ptr [rdx - 0x10f0993c] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000185e7f : ljmp ptr [rax - 0x41] ; cld ; dec dword ptr [rax] ; scasd eax, dword ptr [rdi] ; cld ; lcall ptr [rax] ; ret 0xfffc
0x00000000001986a3 : ljmp ptr [rbp + rsi*8 + 1] ; add byte ptr [rcx + rdi], al ; stc ; inc dword ptr [rbp + rsi*8 + 0x45740001] ; stc ; call rsp
0x00000000001883f5 : ljmp ptr [rcx - 0x3c000500] ; add dh, bh ; jmp rdi
0x0000000000198bb3 : ljmp ptr [rdi + rbx + 2] ; add byte ptr [rbx + rdx], dl ; cli ; inc dword ptr [rdi + rbx + 0x14b40002] ; cli ; call rsp
0x0000000000198383 : ljmp ptr [rdi + rbx*8 - 0x636bffff] ; clc ; call rsp
0x00000000001966db : ljmp ptr [rdi + rsi + 0x42240001] ; call rsp
0x000000000007a03c : lock add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sub byte ptr [r8 - 0x75], r9b ; push rdi ; and byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x000000000016ba9e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ba96 : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000117048 : lock cmpxchg qword ptr [rip + 0x2af6f7], rdi ; cmp rdx, rax ; jne 0x11703f ; ret
0x000000000011ceb9 : lock dec dword ptr [rax - 0x7b] ; ror byte ptr [rax - 0x77], 5 ; and ebx, dword ptr [rcx + 0x2a] ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rdi], -0x7b ; ret
0x00000000001ba5d8 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rdi + 4], bl ; add byte ptr [rax], al ; mov dh, 2 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000018a05d : lodsb al, byte ptr [rsi] ; cli ; push rax ; stosd dword ptr [rdi], eax ; cli ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; cli ; call qword ptr [rax]
0x0000000000183cfd : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000008bbc0 : lodsb al, byte ptr [rsi] ; push rdi ; add dword ptr [rax], eax ; ret
0x0000000000193345 : lodsb al, byte ptr [rsi] ; sti ; inc dword ptr [rax - 0x2f000453] ; scasb al, byte ptr [rdi] ; sti ; jmp qword ptr [rax]
0x000000000004a994 : lodsb al, byte ptr [rsi] ; sub r8, 4 ; cmp rdi, r8 ; jbe 0x4a99e ; nop ; pop rbx ; ret
0x00000000001869c9 : lodsd eax, dword ptr [rsi] ; call qword ptr [rdi - 0x1f000c50]
0x0000000000048f1b : lodsd eax, dword ptr [rsi] ; enter -0x76b4, 7 ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000103d73 : loop 0x103d43 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rbx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; jmp rax
0x00000000001329ac : loop 0x132a36 ; movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x0000000000155ae7 : loop 0x155b42 ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155b2f : loop 0x155b8a ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155b6d : loop 0x155bc8 ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155ba5 : loop 0x155c00 ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155be3 : loop 0x155c3e ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155c1b : loop 0x155c76 ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155c43 : loop 0x155c9e ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001584b7 : loop 0x158512 ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001584ff : loop 0x15855a ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015853d : loop 0x158598 ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158575 : loop 0x1585d0 ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001585b3 : loop 0x15860e ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001585eb : loop 0x158646 ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158613 : loop 0x15866e ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015a92a : loop 0x15a925 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a929 : loop 0x15a926 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d44a : loop 0x15d445 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d449 : loop 0x15d446 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000170be3 : loop 0x170c04 ; je 0x170c10 ; mov eax, dword ptr [rdi - 0x10] ; cmp eax, dword ptr [rsi - 0x10] ; jne 0x170d30 ; ret
0x00000000001869c8 : loop 0x18697e ; call qword ptr [rdi - 0x1f000c50]
0x00000000001983d5 : loop 0x1983de ; add byte ptr [rdi + rbp*4], al ; clc ; jmp rsp
0x000000000003628d : loop 0x362e2 ; shr eax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x000000000004b35c : loop 0x4b353 ; scasb al, byte ptr [rdi] ; sbb eax, 0x8b4d0002 ; jl 0x4b397 ; and byte ptr [rax + 1], cl ; ret
0x0000000000078c9a : loop 0x78cb1 ; or byte ptr [rax], al ; add byte ptr [rbp + 0x14], dh ; xor eax, eax ; cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x000000000009811b : loop 0x9815a ; or rax, rdx ; bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x00000000000aaaae : loop 0xaaabc ; add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe3e], al ; ror dword ptr [rdi], -0x51 ; ret 0x78e9
0x00000000000abbc7 : loop 0xabbe6 ; je 0xabbee ; mov eax, dword ptr [rdi] ; cmp eax, dword ptr [rsi] ; jne 0xabd2e ; ret
0x00000000000abc27 : loop 0xabc48 ; je 0xabc50 ; mov eax, dword ptr [rdi + 0x10] ; cmp eax, dword ptr [rsi + 0x10] ; jne 0xabd30 ; ret
0x00000000000abc87 : loop 0xabca8 ; je 0xabcb0 ; mov eax, dword ptr [rdi + 0x20] ; cmp eax, dword ptr [rsi + 0x20] ; jne 0xabd30 ; ret
0x00000000000abcd7 : loop 0xabcf4 ; je 0xabcfc ; mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0xabd2c ; ret
0x00000000000ad31f : loop 0xad376 ; lea ecx, dword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000ad5e8 : loop 0xad63f ; lea ecx, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rbx
0x00000000000ad8c8 : loop 0xad91f ; lea ecx, dword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000d69d1 : loop 0xd69e4 ; je 0xd6975 ; mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x0000000000155ce7 : loope 0x155d42 ; mov dword ptr [rdi - 0x17], ebx ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155d2f : loope 0x155d8a ; mov dword ptr [rdi - 0x17], ebx ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155d6d : loope 0x155dc8 ; mov dword ptr [rdi - 0x17], ebx ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155da5 : loope 0x155e00 ; mov dword ptr [rdi - 0x17], ebx ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155de3 : loope 0x155e3e ; mov dword ptr [rdi - 0x17], ebx ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155e1b : loope 0x155e76 ; mov dword ptr [rdi - 0x17], ebx ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155e43 : loope 0x155e9e ; mov dword ptr [rdi - 0x17], ebx ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001586b7 : loope 0x158712 ; mov dword ptr [rdi - 0x17], ebx ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001586ff : loope 0x15875a ; mov dword ptr [rdi - 0x17], ebx ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015873d : loope 0x158798 ; mov dword ptr [rdi - 0x17], ebx ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158775 : loope 0x1587d0 ; mov dword ptr [rdi - 0x17], ebx ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001587b3 : loope 0x15880e ; mov dword ptr [rdi - 0x17], ebx ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001587eb : loope 0x158846 ; mov dword ptr [rdi - 0x17], ebx ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158813 : loope 0x15886e ; mov dword ptr [rdi - 0x17], ebx ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015a89a : loope 0x15a895 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a899 : loope 0x15a896 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d3ba : loope 0x15d3b5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d3b9 : loope 0x15d3b6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016eebb : loope 0x16eec5 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000034fcc : loope 0x34ff4 ; add byte ptr [rdi], cl ; push rsi ; add eax, 0x15d6fa ; mulss xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x0000000000034ff1 : loope 0x35019 ; add byte ptr [rdi], cl ; push rsi ; add eax, 0x15d6b5 ; mulss xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x00000000000360b1 : loope 0x360ba ; add byte ptr [rax], al ; adc byte ptr [rdi], cl ; ret 0x8b48
0x0000000000048de7 : loope 0x48e39 ; mov dword ptr [rdi], ecx ; ret
0x0000000000048e18 : loope 0x48e6b ; mov dword ptr [rdi - 8], ecx ; ret
0x0000000000048e8d : loope 0x48ee0 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x0000000000077161 : loope 0x77136 ; mov dword ptr [rdi], ecx ; ret
0x000000000008dbbc : loope 0x8dbed ; or rdx, rcx ; bsf rdx, rdx ; add rax, rdx ; sub rax, rdi ; ret
0x000000000008ddd8 : loope 0x8de09 ; or rdx, rcx ; bsf rdx, rdx ; add rax, rdx ; sub rax, rdi ; ret
0x00000000000a08a9 : loope 0xa0921 ; nop dword ptr [rax + rax] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00000000000a6065 : loope 0xa60da ; nop dword ptr cs:[rax + rax] ; mov byte ptr [rdi], dh ; ret
0x00000000000a7309 : loope 0xa737b ; nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000000a7665 : loope 0xa76dd ; nop dword ptr cs:[rax + rax] ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000a8b19 : loope 0xa8b8b ; nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000000a9145 : loope 0xa91ba ; nop dword ptr cs:[rax + rax] ; mov byte ptr [rdi], dh ; ret
0x00000000000a9c15 : loope 0xa9c8a ; nop dword ptr cs:[rax + rax] ; mov byte ptr [rdi], dh ; ret
0x00000000000d81da : loope 0xd8163 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xf35b
0x00000000001378de : loopne 0x13787f ; mov rax, qword ptr [rdx] ; bswap eax ; mov dword ptr [rdi + 0x54], eax ; mov eax, 1 ; ret
0x0000000000153c51 : loopne 0x153c68 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153c50 : loopne 0x153c69 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153cf1 : loopne 0x153d4a ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x153d13 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153da1 : loopne 0x153db8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153da0 : loopne 0x153db9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153e41 : loopne 0x153e9a ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x153e63 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153ef1 : loopne 0x153f08 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153ef0 : loopne 0x153f09 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153f91 : loopne 0x153fea ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x153fb3 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154041 : loopne 0x154058 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154040 : loopne 0x154059 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001540e1 : loopne 0x15413a ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154103 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154191 : loopne 0x1541a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154190 : loopne 0x1541a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154231 : loopne 0x15428a ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154253 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001542e1 : loopne 0x1542f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001542e0 : loopne 0x1542f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154381 : loopne 0x1543da ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1543a3 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154431 : loopne 0x154448 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154430 : loopne 0x154449 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001544d1 : loopne 0x15452a ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1544f3 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015457f : loopne 0x154596 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000015457e : loopne 0x154597 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154621 : loopne 0x15467a ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154643 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001546d1 : loopne 0x1546e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001546d0 : loopne 0x1546e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154771 : loopne 0x1547ca ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154793 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154821 : loopne 0x154838 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154820 : loopne 0x154839 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001548c1 : loopne 0x15491a ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1548e3 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154971 : loopne 0x154988 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154970 : loopne 0x154989 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154a11 : loopne 0x154a6a ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154a33 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154ac1 : loopne 0x154ad8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154ac0 : loopne 0x154ad9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154b61 : loopne 0x154bba ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154b83 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154c11 : loopne 0x154c28 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154c10 : loopne 0x154c29 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154cb1 : loopne 0x154d0a ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154cd3 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154d61 : loopne 0x154d78 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154d60 : loopne 0x154d79 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154e01 : loopne 0x154e5a ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154e23 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154eb1 : loopne 0x154ec8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154eb0 : loopne 0x154ec9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154f51 : loopne 0x154faa ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154f73 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154fbf : loopne 0x15501a ; mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000154fbe : loopne 0x15501b ; mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000154ffd : loopne 0x155058 ; mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000154ffc : loopne 0x155059 ; mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155035 : loopne 0x155090 ; mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000155034 : loopne 0x155091 ; mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000155073 : loopne 0x1550ce ; mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155072 : loopne 0x1550cf ; mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001550ab : loopne 0x155106 ; mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001550aa : loopne 0x155107 ; mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001550d3 : loopne 0x15512e ; mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001550d2 : loopne 0x15512f ; mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000156621 : loopne 0x156638 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156620 : loopne 0x156639 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001566c1 : loopne 0x15671a ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1566e3 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156771 : loopne 0x156788 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156770 : loopne 0x156789 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156811 : loopne 0x15686a ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156833 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001568c1 : loopne 0x1568d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001568c0 : loopne 0x1568d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156961 : loopne 0x1569ba ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156983 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156a11 : loopne 0x156a28 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156a10 : loopne 0x156a29 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156ab1 : loopne 0x156b0a ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156ad3 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156b61 : loopne 0x156b78 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156b60 : loopne 0x156b79 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156c01 : loopne 0x156c5a ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156c23 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156cb1 : loopne 0x156cc8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156cb0 : loopne 0x156cc9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156d51 : loopne 0x156daa ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156d73 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156e01 : loopne 0x156e18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156e00 : loopne 0x156e19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156ea1 : loopne 0x156efa ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156ec3 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156f4f : loopne 0x156f66 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156f4e : loopne 0x156f67 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156ff1 : loopne 0x15704a ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x157013 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001570a1 : loopne 0x1570b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001570a0 : loopne 0x1570b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157141 : loopne 0x15719a ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x157163 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001571f1 : loopne 0x157208 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001571f0 : loopne 0x157209 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157291 : loopne 0x1572ea ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1572b3 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157341 : loopne 0x157358 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157340 : loopne 0x157359 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001573e1 : loopne 0x15743a ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x157403 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157491 : loopne 0x1574a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157490 : loopne 0x1574a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157531 : loopne 0x15758a ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x157553 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001575e1 : loopne 0x1575f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001575e0 : loopne 0x1575f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157681 : loopne 0x1576da ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1576a3 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157731 : loopne 0x157748 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157730 : loopne 0x157749 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001577d1 : loopne 0x15782a ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1577f3 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157881 : loopne 0x157898 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157880 : loopne 0x157899 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157921 : loopne 0x15797a ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x157943 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015798f : loopne 0x1579ea ; mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015798e : loopne 0x1579eb ; mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001579cd : loopne 0x157a28 ; mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001579cc : loopne 0x157a29 ; mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000157a05 : loopne 0x157a60 ; mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000157a04 : loopne 0x157a61 ; mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000157a43 : loopne 0x157a9e ; mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000157a42 : loopne 0x157a9f ; mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000157a7b : loopne 0x157ad6 ; mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000157a7a : loopne 0x157ad7 ; mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000157aa3 : loopne 0x157afe ; mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000157aa2 : loopne 0x157aff ; mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015a820 : loopne 0x15a825 ; movq qword ptr [rdi - 0x20], mm0 ; lddqu xmm0, xmmword ptr [rsi - 0x10] ; movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000015a81f : loopne 0x15a826 ; movq qword ptr [rdi - 0x20], mm0 ; lddqu xmm0, xmmword ptr [rsi - 0x10] ; movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000015d340 : loopne 0x15d345 ; movq qword ptr [rdi - 0x20], mm0 ; lddqu xmm0, xmmword ptr [rsi - 0x10] ; movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000015d33f : loopne 0x15d346 ; movq qword ptr [rdi - 0x20], mm0 ; lddqu xmm0, xmmword ptr [rsi - 0x10] ; movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000016e363 : loopne 0x16e333 ; vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000018a058 : loopne 0x18a014 ; cli ; dec dword ptr [rax - 0xf000554] ; stosd dword ptr [rdi], eax ; cli ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; cli ; call qword ptr [rax]
0x0000000000193340 : loopne 0x1932fb ; sti ; push qword ptr [rax] ; lodsb al, byte ptr [rsi] ; sti ; inc dword ptr [rax - 0x2f000453] ; scasb al, byte ptr [rdi] ; sti ; jmp qword ptr [rax]
0x00000000000362ad : loopne 0x36305 ; shr edx, 6 ; not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000363a4 : loopne 0x363f4 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000036424 : loopne 0x36478 ; test dword ptr [rdi], eax ; setne al ; movzx eax, al ; ret
0x000000000003b229 : loopne 0x3b246 ; mov ecx, edx ; mov dword ptr [rdi], edx ; shr ecx, 0x10 ; and ecx, 0x3ff ; xor eax, ecx ; ret
0x00000000000715ca : loopne 0x715da ; add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov rdi, rsp ; call 0x4d89e
0x000000000007fa1f : loopne 0x7fa71 ; not eax ; test rsi, rsi ; mov byte ptr [rdi], r8b ; je 0x7fa71 ; mov qword ptr [rsi], rdi ; ret
0x000000000008792a : loopne 0x87931 ; test byte ptr [rdi + rax - 8], 1 ; je 0x8794d ; sub rax, 8 ; ret
0x000000000008aa17 : loopne 0x8a9dd ; or dword ptr [rbx + 0x67], edx ; fmul dword ptr [rax + 0x33] ; push rdi ; fmul dword ptr [rax + 0x39] ; ret 0x5a74
0x0000000000091530 : loopne 0x9154c ; adc dword ptr [rdi + rdx - 0x30], esi ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x00000000000ac632 : loopne 0xac65f ; je 0xac69c ; test al, 0xf0 ; jne 0xac66c ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000bbcdd : loopne 0xbbccf ; insb byte ptr [rdi], dx ; and al, 0xe8 ; fsubp st(1) ; fstp qword ptr [rsp - 0x10] ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000199704 : mov ah, 0x13 ; add dword ptr [rax], eax ; xor al, 0x9e ; cld ; dec esp ; adc eax, dword ptr [rcx] ; add byte ptr [rdi + rdi*4 - 4], dh ; jmp rsp
0x000000000012fbd9 : mov ah, 0x24 ; add byte ptr [rdx], ch ; add byte ptr [rax], al ; mov rdi, rbx ; mov rcx, qword ptr [rsp] ; call rcx
0x00000000000bc68c : mov ah, 0x24 ; test al, 0 ; add byte ptr [rax], al ; mov rsi, qword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000019847c : mov ah, 0xe7 ; add dword ptr [rax], eax ; in al, -0x32 ; clc ; dec esp ; out 1, eax ; add byte ptr [rdi + rcx*8], dh ; clc ; jmp rsp
0x0000000000195319 : mov ah, 0xed ; push qword ptr [rdi + rbp*4 - 0x4afc0000] ; in eax, dx ; jmp rsp
0x000000000019856c : mov ah, 0xee ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; add edi, ecx ; jmp rsp
0x00000000001a7dd0 : mov al, 0x10 ; jmp qword ptr [rdi]
0x00000000001b6fe0 : mov al, 0x2c ; clc ; jmp rdi
0x0000000000021dcc : mov al, 0x43 ; adc al, byte ptr [rax] ; mov rdi, r12 ; mov rcx, qword ptr [rbp - 0x60] ; call rcx
0x00000000001860f8 : mov al, 0xf ; inc eax ; pslld mm7, mm7 ; ror byte ptr [rdi], 1 ; jmp rax
0x00000000000a2deb : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000000a2e19 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000a2e9d : mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x00000000000a2dc5 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000000a2e39 : mov ax, word ptr [rcx + 4] ; mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00000000000a2ebd : mov ax, word ptr [rcx + 8] ; mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x00000000000a2de5 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000000a2dd5 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000015b661 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000187ce0 : mov bh, 0x2f ; cmc ; dec dword ptr [rdi + rbp] ; cmc ; push qword ptr [rdi - 0x14000ad1] ; cmc ; call rax
0x0000000000085764 : mov bh, 0x33 ; add byte ptr [rdi + rax*8], ah ; or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000914d2 : mov bh, 0x36 ; mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000016ed58 : mov bh, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x000000000010a463 : mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000147aaa : mov bh, 4 ; add byte ptr [rdi + 0x63], cl ; or al, 0x8a ; pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000183a73 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000715c9 : mov bl, 0xe0 ; add byte ptr [rax], al ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rsp ; call 0x4d89f
0x0000000000122514 : mov bl, 6 ; add al, ch ; and al, 0x98 ; add byte ptr [rax], al ; test rax, rax ; je 0x122536 ; mov rdi, rbx ; call rax
0x000000000011835f : mov byte ptr [r9 + 3], r8b ; jne 0x118301 ; mov rax, rdi ; ret
0x0000000000170267 : mov byte ptr [rax + 0x75], 0xc5 ; movzx eax, byte ptr [rdi - 9] ; movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x0000000000038648 : mov byte ptr [rax + 0xe], cl ; mov rdx, r13 ; mov rsi, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call r15
0x0000000000136dad : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x136dcf ; mov rdi, rbp ; call rax
0x000000000008b03c : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, r12 ; call rax
0x00000000000a5a12 : mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000002bd1 : mov byte ptr [rbp + 7], ah ; or ah, byte ptr [rbp + 0xc] ; scasd eax, dword ptr [rdi] ; xbegin 0xfffffffff8c6efdf ; ret
0x0000000000118360 : mov byte ptr [rcx + 3], al ; jne 0x118300 ; mov rax, rdi ; ret
0x000000000019b6e8 : mov byte ptr [rcx - 0x17], dh ; call qword ptr [rdi]
0x00000000000a051b : mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x00000000000a059a : mov byte ptr [rcx], 0 ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00000000000aa08a : mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a862b : mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a6e4b : mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000aa09b : mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a77e8 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a6178 : mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a6ab8 : mov byte ptr [rdi + 0x10], dh ; sub r8, 0x11 ; lea rdi, qword ptr [rdi + 0x11] ; jne 0xa7181 ; ret
0x00000000000aa0a0 : mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000aa0c2 : mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000aa0e0 : mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000aa100 : mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a785e : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a61ce : mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a6b3e : mov byte ptr [rdi + 0x14], dh ; sub r8, 0x15 ; lea rdi, qword ptr [rdi + 0x15] ; jne 0xa7181 ; ret
0x00000000000a86b1 : mov byte ptr [rdi + 0x14], dl ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a6ea1 : mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000aa121 : mov byte ptr [rdi + 0x14], dl ; xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000aa126 : mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000fdee8 : mov byte ptr [rdi + 0x16], 0 ; and eax, 0xfffffecf ; or eax, 0x30 ; mov dword ptr [rdi + 8], eax ; ret
0x00000000000aa142 : mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000aa162 : mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000aa182 : mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a8733 : mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a6f23 : mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000aa1a3 : mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a78e0 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a6250 : mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a6bc0 : mov byte ptr [rdi + 0x18], dh ; sub r8, 0x19 ; lea rdi, qword ptr [rdi + 0x19] ; jne 0xa7181 ; ret
0x00000000000aa1a8 : mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000aa1ca : mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000aa1e8 : mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000aa208 : mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000aa224 : mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000aa244 : mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000aa264 : mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000aa284 : mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a7025 : mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000aa2a5 : mov byte ptr [rdi + 0x20], cl ; xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000aa2aa : mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000ea1da : mov byte ptr [rdi + 0x38], al ; mov dword ptr [rsi], edx ; mov qword ptr [rsi + 8], rcx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x00000000000aa2fa : mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a9fd0 : mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a9fee : mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000aa00e : mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000aa030 : mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000aa050 : mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000aa070 : mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a9f06 : mov byte ptr [rdi + 1], ch ; ret
0x0000000000126512 : mov byte ptr [rdi + 1], dh ; ret
0x0000000000126511 : mov byte ptr [rdi + 1], sil ; ret
0x00000000000a0983 : mov byte ptr [rdi + 2], 0 ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a08f3 : mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x00000000000a9f18 : mov byte ptr [rdi + 2], ch ; ret
0x00000000000a7696 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a6096 : mov byte ptr [rdi + 2], dh ; ret
0x00000000000a68f6 : mov byte ptr [rdi + 2], dh ; sub r8, 3 ; lea rdi, qword ptr [rdi + 3] ; jne 0xa7181 ; ret
0x00000000000a0834 : mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a6d69 : mov byte ptr [rdi + 2], dl ; ret
0x00000000000a9f29 : mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a9f2e : mov byte ptr [rdi + 3], ch ; ret
0x00000000000a09a2 : mov byte ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a0912 : mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000a9f46 : mov byte ptr [rdi + 4], ch ; ret
0x00000000000a0854 : mov byte ptr [rdi + 4], cl ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a76b2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a60b2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000a84e7 : mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a6d87 : mov byte ptr [rdi + 4], dl ; ret
0x00000000000a9f57 : mov byte ptr [rdi + 4], dl ; xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a9f5c : mov byte ptr [rdi + 5], ch ; ret
0x00000000000a0929 : mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a087a : mov byte ptr [rdi + 6], al ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a9f6e : mov byte ptr [rdi + 6], ch ; ret
0x00000000001329a4 : mov byte ptr [rdi + 6], dl ; movzx edx, byte ptr [rdi + 7] ; and edx, 0x7f ; movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x00000000000a0879 : mov byte ptr [rdi + 6], r8b ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000001329b2 : mov byte ptr [rdi + 7], al ; ret
0x00000000000a9f8c : mov byte ptr [rdi + 7], ch ; ret
0x000000000004aac6 : mov byte ptr [rdi + 8], 0 ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00000000000d6950 : mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x00000000000d6915 : mov byte ptr [rdi + 8], 0x16 ; mov eax, 1 ; ret
0x00000000000d6978 : mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x00000000000d699c : mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x00000000000d69e0 : mov byte ptr [rdi + 8], 0x1c ; mov eax, 2 ; ret
0x00000000000d69d5 : mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x00000000000d6968 : mov byte ptr [rdi + 8], 1 ; mov byte ptr [rdi], 0x5b ; mov eax, 1 ; ret
0x00000000000d69ba : mov byte ptr [rdi + 8], 1 ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000d693d : mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00000000000d6920 : mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000a9f98 : mov byte ptr [rdi + 8], ch ; ret
0x00000000000a7703 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a60f3 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000000a8539 : mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a6dc9 : mov byte ptr [rdi + 8], dl ; ret
0x00000000000a9fa9 : mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a9fae : mov byte ptr [rdi + 9], ch ; ret
0x0000000000126706 : mov byte ptr [rdi + rdx], 0 ; ret
0x0000000000032aa4 : mov byte ptr [rdi - 0x76b7fffb], ch ; ret 0xf748
0x000000000015527b : mov byte ptr [rdi - 1], dl ; ret
0x0000000000079d10 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000d696c : mov byte ptr [rdi], 0x5b ; mov eax, 1 ; ret
0x0000000000126507 : mov byte ptr [rdi], 0x75 ; adc eax, 0x8303eec1 ; out dx, al ; add dword ptr [rax - 0x78], eax ; ja 0x126524 ; ret
0x000000000007fa27 : mov byte ptr [rdi], al ; je 0x7fa69 ; mov qword ptr [rsi], rdi ; ret
0x00000000000d69be : mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000a9ef2 : mov byte ptr [rdi], ch ; ret
0x00000000000914ab : mov byte ptr [rdi], cl ; ret
0x0000000000150c85 : mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000000a0811 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a7670 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000a6070 : mov byte ptr [rdi], dh ; ret
0x00000000000a68b0 : mov byte ptr [rdi], dh ; sub r8, 1 ; lea rdi, qword ptr [rdi + 1] ; jne 0xa7180 ; ret
0x00000000000a8492 : mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a6d42 : mov byte ptr [rdi], dl ; ret
0x00000000000a9f02 : mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x000000000007fa26 : mov byte ptr [rdi], r8b ; je 0x7fa6a ; mov qword ptr [rsi], rdi ; ret
0x00000000000a0810 : mov byte ptr [rdi], sil ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a5b9a : mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00000000000a2dc2 : mov byte ptr [rdx + 1], ah ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000000a2dd2 : mov byte ptr [rdx + 2], ah ; mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000000a2dee : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000000a2e02 : mov byte ptr [rdx + 4], ah ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000000a2e1c : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000a2e12 : mov byte ptr [rdx + 5], ah ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000a2e52 : mov byte ptr [rdx + 7], ah ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000000a5b30 : mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000a2e72 : mov byte ptr [rdx + 8], ah ; movlpd xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000a2ea0 : mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x000000000018a050 : mov byte ptr [rdx + rdi*8 - 0x5537701], ch ; jmp rax
0x000000000018a05c : mov byte ptr [rdx + rdi*8 - 0x5540f01], ch ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; cli ; call qword ptr [rax]
0x00000000000a2dc7 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000100894 : mov byte ptr [rip + 0x2c3836], dh ; mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x0000000000100893 : mov byte ptr [rip + 0x2c3836], sil ; mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x00000000000858d4 : mov ch, 0x33 ; add byte ptr [rcx], dh ; mul byte ptr [rdi + rax*8] ; or al, 0 ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x0000000000076a8d : mov ch, 0x90 ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x00000000000769aa : mov ch, 0x90 ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x0000000000086817 : mov ch, 0xa7 ; xor eax, dword ptr [rax] ; mov qword ptr [rax], rsi ; mov rax, qword ptr [rip + 0x33a6bb] ; mov qword ptr [rax], rdi ; ret
0x0000000000105067 : mov ch, 6 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000002b85 : mov cl, 0xda ; fnsave dword ptr [rdx - 0x6b] ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x0000000000145c20 : mov cl, 0xe9 ; add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000008c0a4 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000000a8624 : mov cl, byte ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a6e44 : mov cl, byte ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000aa094 : mov cl, byte ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a6f18 : mov cl, byte ptr [rsi + 0x18] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a7019 : mov cl, byte ptr [rsi + 0x20] ; movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x000000000016dcd0 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000bf06e : mov cs, word ptr [rdx + 0x30] ; add byte ptr [rdi], cl ; cmp dword ptr [rsi + 0x48000000], -0x77 ; fmul dword ptr [rax - 0x7d] ; ret
0x000000000016dcbe : mov cx, word ptr [rcx - 2] ; mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x00000000000a77f4 : mov cx, word ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a8644 : mov cx, word ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a6184 : mov cx, word ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000aa0b4 : mov cx, word ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a6268 : mov cx, word ptr [rsi + 0x18] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000001556c4 : mov cx, word ptr [rsi - 2] ; mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x00000000000a84b0 : mov cx, word ptr [rsi] ; mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a6d60 : mov cx, word ptr [rsi] ; mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000a9f20 : mov cx, word ptr [rsi] ; mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x000000000015b5f4 : mov cx, word ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000000a7690 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a6090 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000016dcbd : mov cx, word ptr ss:[rcx - 2] ; mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x00000000000a0507 : mov dh, 0x11 ; test dl, dl ; jne 0xa0504 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00000000000a0585 : mov dh, 0x11 ; test dl, dl ; jne 0xa0575 ; pop rbx ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x0000000000034ec5 : mov dh, 0x14 ; add byte ptr [rdi], cl ; push rsp ; ret
0x000000000015b6d1 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000003ce45 : mov dh, 0x48 ; add cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003ce25 : mov dh, 0x48 ; add dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003cea5 : mov dh, 0x48 ; add eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003ce65 : mov dh, 0x48 ; add ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003cf05 : mov dh, 0x48 ; or byte ptr [rbp - 0x57f2faf], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003cf45 : mov dh, 0x48 ; or cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003cf25 : mov dh, 0x48 ; or dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003cf99 : mov dh, 0x48 ; or eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003cf61 : mov dh, 0x48 ; or ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004008a : mov dh, 0x70 ; add cl, byte ptr [rbp - 0x57f2faa] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004006a : mov dh, 0x70 ; add dword ptr [rbp - 0x57f2faa], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000400ea : mov dh, 0x70 ; add eax, 0x80d0568d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000400aa : mov dh, 0x70 ; add ecx, dword ptr [rbp - 0x57f2faa] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004014a : mov dh, 0x70 ; or byte ptr [rbp - 0x57f2faa], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004018a : mov dh, 0x70 ; or cl, byte ptr [rbp - 0x57f2faa] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004016a : mov dh, 0x70 ; or dword ptr [rbp - 0x57f2faa], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000401de : mov dh, 0x70 ; or eax, 0x80d0568d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000401a6 : mov dh, 0x70 ; or ecx, dword ptr [rbp - 0x57f2faa] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000cfd88 : mov dh, 0x78 ; adc cl, byte ptr [rbp + rcx*4 + 0x48] ; adc ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x00000000000e8d57 : mov dh, 0x7a ; or byte ptr [rcx + 0x63], cl ; cmp al, 0xbb ; add rdi, r11 ; jmp rdi
0x00000000000ec242 : mov dh, 0xc0 ; neg eax ; cmp dword ptr [rdi + 0x10], ecx ; cmovb eax, edx ; ret
0x0000000000091845 : mov dh, 0xc6 ; mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000000914a9 : mov dh, 0xe ; mov byte ptr [rdi], cl ; ret
0x000000000008d451 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00000000000c3965 : mov dh, 0xfa ; movsxd rax, dword ptr [r8 + rdi*4] ; add rax, r8 ; jmp rax
0x0000000000098bd7 : mov dh, 1 ; test al, al ; jne 0x98c49 ; mov rax, rdi ; ret
0x00000000000d69b7 : mov dh, 4 ; add esi, eax ; or byte ptr [r9], r8b ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x000000000012221c : mov dh, 6 ; add al, ch ; sbb al, 0x9b ; add byte ptr [rax], al ; test rax, rax ; je 0x12223e ; mov rdi, rbx ; call rax
0x00000000000483c4 : mov dh, byte ptr [rdi] ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000010540a : mov dl, 2 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000000e964f : mov dl, 3 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax - 0x77], 0x45 ; and byte ptr [rdi], cl ; test byte ptr [rcx - 0xa000000], dh ; ret
0x0000000000002b82 : mov dl, byte ptr [rdx - 0x22254e38] ; jb 0x2b2e ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x00000000000a86a7 : mov dl, byte ptr [rsi + 0x14] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a6e97 : mov dl, byte ptr [rsi + 0x14] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000a84b3 : mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a6d63 : mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000a9f23 : mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a84e2 : mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a6d82 : mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a9f52 : mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a8533 : mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a6dc3 : mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a9fa3 : mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x0000000000155300 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000000a8490 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a6d40 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000a9f00 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x0000000000108d74 : mov dword ptr [0x2d0], eax ; pop rax ; pop rdi ; call rax
0x0000000000108d6c : mov dword ptr [0x2d4], eax ; mov dword ptr fs:[0x2d0], eax ; pop rax ; pop rdi ; call rax
0x000000000012687a : mov dword ptr [r8], 0 ; movsxd rdx, eax ; add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x0000000000073814 : mov dword ptr [rax + 0x40], edx ; mov rdx, rdi ; jbe 0x7374f ; mov eax, dword ptr [rsi] ; jmp 0x737f5
0x0000000000002bce : mov dword ptr [rax + 0x76588ed], ebp ; or ah, byte ptr [rbp + 0xc] ; scasd eax, dword ptr [rdi] ; xbegin 0xfffffffff8c6efe2 ; ret
0x00000000001199b6 : mov dword ptr [rax + 0xc], eax ; jne 0x11995c ; mov rax, rdi ; ret
0x00000000001199b5 : mov dword ptr [rax + 0xc], r8d ; jne 0x11995d ; mov rax, rdi ; ret
0x0000000000100771 : mov dword ptr [rax + 8], edi ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000000f85eb : mov dword ptr [rax - 0x389bffd4], ecx ; add byte ptr [rdi], bl ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000001129ff : mov dword ptr [rax - 0x7b], ecx ; test byte ptr [rdi], 0x95 ; ret 0xc031
0x000000000013e6fc : mov dword ptr [rax - 4], edx ; mov qword ptr [rdi + 0x18], rax ; mov eax, 1 ; ret
0x000000000012687b : mov dword ptr [rax], 0 ; movsxd rdx, eax ; add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x00000000001a608d : mov dword ptr [rax], 0xf0695000 ; jmp qword ptr [rdi]
0x00000000000fe46c : mov dword ptr [rax], edx ; xor eax, eax ; cmp rdi, rdx ; ja 0xfe4aa ; ret
0x00000000000d6bbb : mov dword ptr [rax], esi ; add dword ptr [rdi + 4], 1 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008681c : mov dword ptr [rax], esi ; mov rax, qword ptr [rip + 0x33a6bb] ; mov qword ptr [rax], rdi ; ret
0x000000000004b855 : mov dword ptr [rbp - 0x4d8], eax ; mov rsi, r15 ; mov rdi, r14 ; call rax
0x000000000004b854 : mov dword ptr [rbp - 0x4d8], r8d ; mov rsi, r15 ; mov rdi, r14 ; call rax
0x0000000000057225 : mov dword ptr [rbp - 0x510], ebx ; mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x0000000000057224 : mov dword ptr [rbp - 0x510], r11d ; mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x0000000000089f1c : mov dword ptr [rbp], eax ; je 0x8a01f ; mov rdx, r12 ; mov rdi, r15 ; call rax
0x000000000008a43c : mov dword ptr [rbp], eax ; je 0x8a61f ; mov rdx, r15 ; mov rdi, r8 ; call rax
0x000000000008b037 : mov dword ptr [rbp], eax ; je 0x8b0d7 ; mov rsi, rbp ; mov rdi, r12 ; call rax
0x000000000008b955 : mov dword ptr [rbx + 0x10], esp ; mov qword ptr [rbx + 0x20], rax ; mov qword ptr [rbx + 8], rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008b959 : mov dword ptr [rbx + 0x20], eax ; mov qword ptr [rbx + 8], rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008b5a3 : mov dword ptr [rbx + 0x30], eax ; mov qword ptr [rbx + 0x48], r9 ; mov qword ptr [rbx], rsi ; mov rdi, r9 ; call rcx
0x000000000008b4f3 : mov dword ptr [rbx + 0x30], eax ; mov qword ptr [rbx], rdi ; call rcx
0x000000000008b4ed : mov dword ptr [rbx + 0x40], eax ; movsxd rdi, esi ; mov dword ptr [rbx + 0x30], eax ; mov qword ptr [rbx], rdi ; call rcx
0x000000000008b5a7 : mov dword ptr [rbx + 0x48], ecx ; mov qword ptr [rbx], rsi ; mov rdi, r9 ; call rcx
0x0000000000079ffe : mov dword ptr [rbx + 0xd8], ecx ; mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x00000000000e039e : mov dword ptr [rbx + rdi + 0x24], 0x89237fbe ; ret 0xd139
0x000000000012ca34 : mov dword ptr [rbx], eax ; mov r8, rbp ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000012caa4 : mov dword ptr [rbx], eax ; xor r8d, r8d ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000008b5ab : mov dword ptr [rbx], esi ; mov rdi, r9 ; call rcx
0x000000000008ac6e : mov dword ptr [rcx], eax ; je 0x8ad91 ; mov rdx, rbp ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000000f7eeb : mov dword ptr [rdi + 0x100], edx ; ret
0x00000000000f7f22 : mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x000000000013567c : mov dword ptr [rdi + 0x10], 2 ; add rdi, 0x10 ; jmp rcx
0x000000000007d24b : mov dword ptr [rdi + 0x10], eax ; mov qword ptr [rdi + 0x18], rcx ; mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a77fd : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a864d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a783b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a868b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a78bd : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a870d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a785b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a61cb : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a86ae : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a6e9e : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000aa11e : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a78dd : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a624d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000ccf90 : mov dword ptr [rdi + 0x10], ecx ; mov rcx, qword ptr [rdi + 0x18] ; mov qword ptr [rdi + 0x18], rcx ; ret
0x0000000000048f9f : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a6add : mov dword ptr [rdi + 0x10], ecx ; sub r8, 0x12 ; lea rdi, qword ptr [rdi + 0x12] ; jne 0xa7181 ; ret
0x00000000000a6b1b : mov dword ptr [rdi + 0x10], ecx ; sub r8, 0x14 ; lea rdi, qword ptr [rdi + 0x14] ; jne 0xa7181 ; ret
0x00000000000a6b9d : mov dword ptr [rdi + 0x10], ecx ; sub r8, 0x18 ; lea rdi, qword ptr [rdi + 0x18] ; jne 0xa7181 ; ret
0x00000000000aa0bd : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000aa0fb : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000aa17d : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a8730 : mov dword ptr [rdi + 0x10], edx ; mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a6f20 : mov dword ptr [rdi + 0x10], edx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000aa1a0 : mov dword ptr [rdi + 0x10], edx ; mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a7920 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a8770 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a6290 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000aa1e0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a7940 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a8790 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a62b0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000aa200 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x0000000000137903 : mov dword ptr [rdi + 0x10], edx ; mov eax, 1 ; ret
0x00000000000a7901 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a8751 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a6271 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000aa1c1 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000f7f10 : mov dword ptr [rdi + 0x10c], esi ; xor eax, eax ; ret
0x00000000000a7923 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a8773 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a6293 : mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a6c23 : mov dword ptr [rdi + 0x17], ecx ; sub r8, 0x1b ; lea rdi, qword ptr [rdi + 0x1b] ; jne 0xa7181 ; ret
0x00000000000aa1e3 : mov dword ptr [rdi + 0x17], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000013e700 : mov dword ptr [rdi + 0x18], eax ; mov eax, 1 ; ret
0x000000000007d223 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000079107 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000c0827 : mov dword ptr [rdi + 0x18], eax ; or byte ptr [rsp + 0x78], 2 ; jmp 0xc05b6
0x00000000000a7905 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a8755 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a7943 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a8793 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000007d24f : mov dword ptr [rdi + 0x18], ecx ; mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a6275 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a6bf5 : mov dword ptr [rdi + 0x18], ecx ; sub r8, 0x1a ; lea rdi, qword ptr [rdi + 0x1a] ; jne 0xa7181 ; ret
0x00000000000a6c53 : mov dword ptr [rdi + 0x18], ecx ; sub r8, 0x1c ; lea rdi, qword ptr [rdi + 0x1c] ; jne 0xa7181 ; ret
0x00000000000aa1c5 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000aa203 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000013e792 : mov dword ptr [rdi + 0x18], edx ; mov eax, 1 ; ret
0x000000000013e6a1 : mov dword ptr [rdi + 0x18], esi ; mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000013e83e : mov dword ptr [rdi + 0x18], esi ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000013e6c6 : mov dword ptr [rdi + 0x18], esi ; ret
0x000000000013ee15 : mov dword ptr [rdi + 0x20], 0 ; mov qword ptr [rdi + 8], rax ; ret
0x00000000001381d8 : mov dword ptr [rdi + 0x20], eax ; mov qword ptr [rdi + 0x28], rdx ; mov eax, 1 ; ret
0x000000000011002e : mov dword ptr [rdi + 0x20], ecx ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000013e83a : mov dword ptr [rdi + 0x20], esi ; mov qword ptr [rdi + 0x18], rsi ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000013e6bb : mov dword ptr [rdi + 0x28], eax ; mov rax, qword ptr [rdi + 0x18] ; add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x00000000001064a5 : mov dword ptr [rdi + 0x28], edx ; mov byte ptr [rax], 0xa ; add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000010611b : mov dword ptr [rdi + 0x28], edx ; mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001381dc : mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000013e841 : mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000138190 : mov dword ptr [rdi + 0x30], eax ; mov qword ptr [rdi + 0x38], rdx ; mov eax, 1 ; ret
0x00000000000d7103 : mov dword ptr [rdi + 0x30], esi ; add rsp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fda22 : mov dword ptr [rdi + 0x34], esi ; jne 0xfda13 ; or dword ptr [rdi], 0x80000000 ; xor eax, eax ; ret
0x0000000000138194 : mov dword ptr [rdi + 0x38], edx ; mov eax, 1 ; ret
0x00000000000fd9b6 : mov dword ptr [rdi + 0x38], esi ; and eax, 0xffffeff0 ; or esi, eax ; xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x0000000000137988 : mov dword ptr [rdi + 0x48], eax ; mov eax, 1 ; ret
0x000000000007d21f : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000007d253 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000001378e5 : mov dword ptr [rdi + 0x54], eax ; mov eax, 1 ; ret
0x000000000013812c : mov dword ptr [rdi + 0x58], 2 ; add rdi, 0x58 ; jmp rcx
0x0000000000081310 : mov dword ptr [rdi + 0x58], eax ; add rsp, 0x78 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001379b5 : mov dword ptr [rdi + 0x58], eax ; mov eax, 1 ; ret
0x000000000013784c : mov dword ptr [rdi + 0x68], 2 ; add rdi, 0x68 ; jmp rcx
0x00000000000f7316 : mov dword ptr [rdi + 0x78], edx ; mov rdx, qword ptr [rsi + 0x78] ; mov qword ptr [rdi + 0x80], rdx ; ret
0x00000000000f731e : mov dword ptr [rdi + 0x80], edx ; ret
0x0000000000134aac : mov dword ptr [rdi + 0xc8], 2 ; add rdi, 0xc8 ; jmp rcx
0x00000000000ac312 : mov dword ptr [rdi + 0xc], eax ; mov rax, rbx ; pop rbx ; ret
0x000000000012592f : mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00000000000a787d : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a86cd : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a61ed : mov dword ptr [rdi + 0xe], ecx ; ret
0x00000000000a6b5d : mov dword ptr [rdi + 0xe], ecx ; sub r8, 0x16 ; lea rdi, qword ptr [rdi + 0x16] ; jne 0xa7181 ; ret
0x00000000000aa13d : mov dword ptr [rdi + 0xe], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000f7ee0 : mov dword ptr [rdi + 0xf8], edx ; mov rdx, qword ptr [rsi + 0x78] ; mov qword ptr [rdi + 0x100], rdx ; ret
0x00000000000a781b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a866b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a789d : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a86ed : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a61ab : mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a6afb : mov dword ptr [rdi + 0xf], ecx ; sub r8, 0x13 ; lea rdi, qword ptr [rdi + 0x13] ; jne 0xa7181 ; ret
0x00000000000a6b7d : mov dword ptr [rdi + 0xf], ecx ; sub r8, 0x17 ; lea rdi, qword ptr [rdi + 0x17] ; jne 0xa7181 ; ret
0x00000000000aa0db : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000aa15d : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x000000000015b515 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b358 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b5f8 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x000000000015b4a5 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b2e8 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000003b5e3 : mov dword ptr [rdi + 2], edx ; ret
0x00000000000a76e7 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a8517 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000015b435 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b278 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a60d7 : mov dword ptr [rdi + 3], edx ; ret
0x00000000000a6977 : mov dword ptr [rdi + 3], edx ; sub r8, 7 ; lea rdi, qword ptr [rdi + 7] ; jne 0xa7181 ; ret
0x00000000000a9f87 : mov dword ptr [rdi + 3], edx ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x0000000000137960 : mov dword ptr [rdi + 4], 0 ; mov eax, 1 ; ret
0x0000000000137950 : mov dword ptr [rdi + 4], 1 ; mov eax, 1 ; ret
0x00000000000a0963 : mov dword ptr [rdi + 4], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a0802 : mov dword ptr [rdi + 4], eax ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a08c3 : mov dword ptr [rdi + 4], eax ; mov rax, rdi ; ret
0x000000000003b5dd : mov dword ptr [rdi + 4], eax ; xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x00000000000a0876 : mov dword ptr [rdi + 4], ebx ; mov byte ptr [rdi + 6], r8b ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a0866 : mov dword ptr [rdi + 4], ebx ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a09b3 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a09c3 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a84f9 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000015b208 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a0923 : mov dword ptr [rdi + 4], edx ; mov rax, rdi ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a08b3 : mov dword ptr [rdi + 4], edx ; mov rax, rdi ; ret
0x00000000000a60c9 : mov dword ptr [rdi + 4], edx ; ret
0x00000000000a6959 : mov dword ptr [rdi + 4], edx ; sub r8, 6 ; lea rdi, qword ptr [rdi + 6] ; jne 0xa7181 ; ret
0x00000000000a9f69 : mov dword ptr [rdi + 4], edx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000f7370 : mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000a0875 : mov dword ptr [rdi + 4], r11d ; mov byte ptr [rdi + 6], r8b ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a0865 : mov dword ptr [rdi + 4], r11d ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a0962 : mov dword ptr [rdi + 4], r8d ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a08c2 : mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x00000000000a777b : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a85bb : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000015b198 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a613b : mov dword ptr [rdi + 5], edx ; ret
0x00000000000a6a3b : mov dword ptr [rdi + 5], edx ; sub r8, 0xd ; lea rdi, qword ptr [rdi + 0xd] ; jne 0xa7181 ; ret
0x00000000000aa02b : mov dword ptr [rdi + 5], edx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a779b : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a85db : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000015b128 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a614b : mov dword ptr [rdi + 6], edx ; ret
0x00000000000a6a5b : mov dword ptr [rdi + 6], edx ; sub r8, 0xe ; lea rdi, qword ptr [rdi + 0xe] ; jne 0xa7181 ; ret
0x00000000000aa04b : mov dword ptr [rdi + 6], edx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a7739 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a8579 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a77bb : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a85fb : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000015b0b8 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a6119 : mov dword ptr [rdi + 7], edx ; ret
0x00000000000a69f9 : mov dword ptr [rdi + 7], edx ; sub r8, 0xb ; lea rdi, qword ptr [rdi + 0xb] ; jne 0xa7181 ; ret
0x00000000000a6a7b : mov dword ptr [rdi + 7], edx ; sub r8, 0xf ; lea rdi, qword ptr [rdi + 0xf] ; jne 0xa7181 ; ret
0x00000000000a9fe9 : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000aa06b : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x0000000000100788 : mov dword ptr [rdi + 8], 0 ; ret
0x0000000000125926 : mov dword ptr [rdi + 8], 0x29 ; xor eax, eax ; mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x000000000006ff5e : mov dword ptr [rdi + 8], eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000acae5 : mov dword ptr [rdi + 8], eax ; je 0xacaa0 ; mov rax, rbx ; pop rbx ; ret
0x00000000001378ff : mov dword ptr [rdi + 8], eax ; mov qword ptr [rdi + 0x10], rdx ; mov eax, 1 ; ret
0x00000000000368a1 : mov dword ptr [rdi + 8], eax ; mov rax, qword ptr [rsi] ; and rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000036b91 : mov dword ptr [rdi + 8], eax ; mov rax, qword ptr [rsi] ; or rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000007d227 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000048f98 : mov dword ptr [rdi + 8], eax ; shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x00000000000c07e0 : mov dword ptr [rdi + 8], ecx ; jmp 0xc05b1
0x0000000000048f24 : mov dword ptr [rdi + 8], ecx ; ret
0x0000000000050b6d : mov dword ptr [rdi + 8], edx ; jle 0x50a67 ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000a855b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a7759 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a8599 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a771b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000048890 : mov dword ptr [rdi + 8], edx ; mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000048754 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000003af04 : mov dword ptr [rdi + 8], edx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000007e4a8 : mov dword ptr [rdi + 8], edx ; movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007994f : mov dword ptr [rdi + 8], edx ; movzx eax, byte ptr [rax] ; ret
0x000000000003aef5 : mov dword ptr [rdi + 8], edx ; ret
0x00000000000a69db : mov dword ptr [rdi + 8], edx ; sub r8, 0xa ; lea rdi, qword ptr [rdi + 0xa] ; jne 0xa7181 ; ret
0x00000000000a6a19 : mov dword ptr [rdi + 8], edx ; sub r8, 0xc ; lea rdi, qword ptr [rdi + 0xc] ; jne 0xa7181 ; ret
0x00000000000a9fcb : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000aa009 : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000fd9c2 : mov dword ptr [rdi + 8], esi ; ret
0x00000000000367c2 : mov dword ptr [rdi + rax*8], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000048928 : mov dword ptr [rdi + rax], eax ; sub r8, 8 ; cmp r8, 0xf8 ; jne 0x48930 ; mov rax, rdx ; ret
0x00000000000494fd : mov dword ptr [rdi + rbx*8 + 8], ecx ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00000000000d8b78 : mov dword ptr [rdi + rcx], 0xe084 ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x0000000000126998 : mov dword ptr [rdi + rdx + 0x10], edx ; ret
0x0000000000126993 : mov dword ptr [rdi + rdx + 8], ecx ; mov qword ptr [rdi + rdx + 0x10], r10 ; ret
0x000000000009193b : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], cx ; ret
0x0000000000150cb0 : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], cx ; vzeroupper ; ret
0x00000000000914d5 : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], si ; ret
0x0000000000091933 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000150ca5 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x00000000000914c5 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000009192b : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rcx ; ret
0x0000000000150c9a : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x00000000000914b7 : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rsi ; ret
0x0000000000154fc5 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000155003 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000048e8f : mov dword ptr [rdi - 0x10], ecx ; ret
0x0000000000155178 : mov dword ptr [rdi - 0x11], ebx ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155274 : mov dword ptr [rdi - 0x11], ebx ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001551c0 : mov dword ptr [rdi - 0x11], ebx ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155348 : mov dword ptr [rdi - 0x12], ebx ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155528 : mov dword ptr [rdi - 0x13], ebx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155718 : mov dword ptr [rdi - 0x14], ebx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001558e9 : mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155ae9 : mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155ce9 : mov dword ptr [rdi - 0x17], ebx ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000154fc1 : mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000154fff : mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155174 : mov dword ptr [rdi - 0x19], edx ; mov qword ptr [rdi - 0x11], r11 ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155270 : mov dword ptr [rdi - 0x19], edx ; mov qword ptr [rdi - 0x11], r11 ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001551bc : mov dword ptr [rdi - 0x19], edx ; mov qword ptr [rdi - 0x11], r11 ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155344 : mov dword ptr [rdi - 0x1a], edx ; mov qword ptr [rdi - 0x12], r11 ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155524 : mov dword ptr [rdi - 0x1b], edx ; mov qword ptr [rdi - 0x13], r11 ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155714 : mov dword ptr [rdi - 0x1c], edx ; mov qword ptr [rdi - 0x14], r11 ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001558e5 : mov dword ptr [rdi - 0x1d], edx ; mov qword ptr [rdi - 0x15], r11 ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155ae5 : mov dword ptr [rdi - 0x1e], edx ; mov qword ptr [rdi - 0x16], r11 ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155ce5 : mov dword ptr [rdi - 0x1f], edx ; mov qword ptr [rdi - 0x17], r11 ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000154fbd : mov dword ptr [rdi - 0x20], ecx ; mov qword ptr [rdi - 0x18], r10 ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000154ffb : mov dword ptr [rdi - 0x20], ecx ; mov qword ptr [rdi - 0x18], r10 ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015534c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ab68 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015552c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015aae8 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015571c : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015aa68 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001558ed : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015a9d9 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000155aed : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015a949 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000155ced : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015a8b9 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000a7060 : mov dword ptr [rdi - 1], edx ; ret
0x00000000001556cd : mov dword ptr [rdi - 2], ecx ; ret
0x00000000001554e5 : mov dword ptr [rdi - 2], edx ; ret
0x00000000001556c9 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000155aa9 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000015517f : mov dword ptr [rdi - 4], edx ; ret
0x0000000000155aa6 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155ca6 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155ea6 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000048e88 : mov dword ptr [rdi - 8], eax ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000048e1a : mov dword ptr [rdi - 8], ecx ; ret
0x0000000000155007 : mov dword ptr [rdi - 8], edx ; ret
0x000000000015517c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155278 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001551c4 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015abe8 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000100781 : mov dword ptr [rdi], 0 ; mov qword ptr [rdi + 8], 0 ; ret
0x0000000000071da0 : mov dword ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000003aa10 : mov dword ptr [rdi], 0 ; xor eax, eax ; pop rbx ; ret
0x00000000000cc874 : mov dword ptr [rdi], eax ; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cc4d4 : mov dword ptr [rdi], eax ; add rsp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011c79e : mov dword ptr [rdi], eax ; add rsp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000003aeec : mov dword ptr [rdi], eax ; cmovbe rdx, r8 ; xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x00000000000a0844 : mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a0857 : mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a0869 : mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a087d : mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000004a5db : mov dword ptr [rdi], eax ; mov dword ptr [rdx], 0xffffc002 ; mov eax, 1 ; ret
0x000000000004a5b6 : mov dword ptr [rdi], eax ; mov eax, 0xffffc002 ; sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000a07fc : mov dword ptr [rdi], eax ; mov eax, dword ptr [rsp + 0x18] ; mov dword ptr [rdi + 4], eax ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000100775 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000004aacb : mov dword ptr [rdi], eax ; mov rax, rdi ; ret
0x0000000000048e14 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000048f1e : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000036363 : mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000000559c6 : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000048e81 : mov dword ptr [rdi], ebx ; shld r8, r9, cl ; mov qword ptr [rdi - 8], r8 ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000048f91 : mov dword ptr [rdi], ebx ; shrd r8, r9, cl ; mov qword ptr [rdi + 8], r8 ; shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000029dc2 : mov dword ptr [rdi], ecx ; add rsp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c91f7 : mov dword ptr [rdi], ecx ; add rsp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000a0822 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a0990 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a76b5 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a7707 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a7694 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a6094 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000a0832 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a6d67 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000a9f27 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a09a0 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a0910 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000a84e5 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a6d85 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a9f55 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a8537 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a6dc7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a9fa7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a76e5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a8515 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a60d5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000000a9f85 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a0960 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a08c0 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x00000000000a7737 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a8577 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a6117 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a9fe7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a7757 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a8597 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a6127 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000aa007 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x000000000016e387 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000007c9ca : mov dword ptr [rdi], ecx ; mov dword ptr fs:[rax], 9 ; mov eax, 0xffffffff ; ret
0x00000000000568a1 : mov dword ptr [rdi], ecx ; mov eax, 0xffffffff ; ret
0x000000000013e837 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 0x20], rsi ; mov qword ptr [rdi + 0x18], rsi ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a7778 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a85b8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a6138 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000aa028 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a7798 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a85d8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a6148 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000aa048 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a77b8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a85f8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a6158 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000000aa068 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a0900 : mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00000000000a09b0 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a09c0 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a84f6 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a0920 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a08b0 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00000000000a60c6 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a9f66 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a8558 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a7718 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a6108 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a9fc8 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000016e393 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000034d86 : mov dword ptr [rdi], ecx ; ret
0x00000000000a6935 : mov dword ptr [rdi], ecx ; sub r8, 5 ; lea rdi, qword ptr [rdi + 5] ; jne 0xa7180 ; ret
0x00000000000a69b7 : mov dword ptr [rdi], ecx ; sub r8, 9 ; lea rdi, qword ptr [rdi + 9] ; jne 0xa7180 ; ret
0x0000000000150c9f : mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x00000000000353f2 : mov dword ptr [rdi], edx ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000a7684 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a84a4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a76a2 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a84d2 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a76f4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a8524 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a7080 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a70c1 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a70e1 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a70f1 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000076161 : mov dword ptr [rdi], edx ; mov dword ptr fs:[rax], 9 ; mov eax, 0xffffffff ; ret
0x00000000000a7101 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a7111 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a7090 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a70d1 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000350c6 : mov dword ptr [rdi], edx ; ret
0x000000000003b22d : mov dword ptr [rdi], edx ; shr ecx, 0x10 ; and ecx, 0x3ff ; xor eax, ecx ; ret
0x00000000000a68d4 : mov dword ptr [rdi], edx ; sub r8, 2 ; lea rdi, qword ptr [rdi + 2] ; jne 0xa7180 ; ret
0x00000000000a6912 : mov dword ptr [rdi], edx ; sub r8, 4 ; lea rdi, qword ptr [rdi + 4] ; jne 0xa7180 ; ret
0x00000000000a6994 : mov dword ptr [rdi], edx ; sub r8, 8 ; lea rdi, qword ptr [rdi + 8] ; jne 0xa7180 ; ret
0x00000000000a9f14 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a9f42 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a9f94 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000a0971 : mov dword ptr [rdi], esi ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a0981 : mov dword ptr [rdi], esi ; mov byte ptr [rdi + 2], 0 ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a08f1 : mov dword ptr [rdi], esi ; mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x000000000016dcaf : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000004a536 : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000016dc9e : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x00000000000a08e1 : mov dword ptr [rdi], esi ; mov rax, rdi ; ret
0x000000000016dcc3 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x00000000000558f4 : mov dword ptr [rdi], esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000004a51b : mov dword ptr [rdi], esi ; ret
0x00000000000f7351 : mov dword ptr [rdi], esi ; xor eax, eax ; ret
0x00000000000a0821 : mov dword ptr [rdi], r9d ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a0831 : mov dword ptr [rdi], r9d ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a2e5c : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000000a2e3e : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x0000000000163fc9 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000163fd9 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000000a2ee0 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000a2ec2 : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000000a2de9 : mov dword ptr [rdx], eax ; mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000000a2e17 : mov dword ptr [rdx], eax ; mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000a2e37 : mov dword ptr [rdx], eax ; mov ax, word ptr [rcx + 4] ; mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00000000000a2e57 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000163fc4 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000163fd4 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000163fe4 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000163ff4 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000164004 : mov dword ptr [rdx], eax ; mov rax, qword ptr [rcx + 5] ; mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x0000000000164024 : mov dword ptr [rdx], eax ; mov rax, qword ptr [rcx + 6] ; mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x0000000000164044 : mov dword ptr [rdx], eax ; mov rax, qword ptr [rcx + 7] ; mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x0000000000163f34 : mov dword ptr [rdx], eax ; mov rax, qword ptr [rcx + 8] ; mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x00000000000a2dd9 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000134b8e : mov dword ptr [rdx], esi ; mov qword ptr [rdx + 8], rdi ; ret
0x00000000000f7e01 : mov dword ptr [rsi + 0x70], edx ; mov rax, qword ptr [rdi + 0x100] ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000f7284 : mov dword ptr [rsi + 0x70], edx ; mov rax, qword ptr [rdi + 0x80] ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x0000000000125161 : mov dword ptr [rsi + 8], eax ; mov rdi, rax ; call 0x91398
0x000000000012ffd8 : mov dword ptr [rsi], 6 ; movdqu xmm0, xmmword ptr [rdi + 0x20] ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x000000000012ff88 : mov dword ptr [rsi], 7 ; mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x0000000000130010 : mov dword ptr [rsi], 9 ; movdqu xmm0, xmmword ptr [rdi + 0x38] ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x000000000013e78f : mov dword ptr [rsi], eax ; mov qword ptr [rdi + 0x18], rdx ; mov eax, 1 ; ret
0x000000000008b18d : mov dword ptr [rsi], edx ; je 0x8b239 ; mov rdi, r13 ; mov rdx, rbp ; mov rsi, r12 ; call rax
0x000000000013e72c : mov dword ptr [rsi], edx ; mov qword ptr [rdi + 0x18], rax ; mov eax, 1 ; ret
0x0000000000084179 : mov dword ptr [rsp + 8], ecx ; mov rdi, r14 ; mov qword ptr [rsp + 0x10], r14 ; call qword ptr [rax]
0x00000000000757bf : mov dword ptr [rsp + 8], ecx ; mov rdi, r15 ; call rax
0x0000000000035325 : mov dword ptr [rsp - 0x10], eax ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x00000000000353ee : mov dword ptr [rsp - 0x10], eax ; mov dword ptr [rdi], edx ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000035289 : mov dword ptr [rsp - 0x14], ecx ; fld xword ptr [rsp - 0x18] ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x00000000000352ca : mov dword ptr [rsp - 0x18], edx ; fld xword ptr [rsp - 0x18] ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x000000000013d249 : mov dword ptr [rsp], 2 ; mov rdi, rsp ; call rdx
0x000000000008a189 : mov dword ptr [rsp], eax ; je 0x8a26f ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000008aeab : mov dword ptr [rsp], eax ; je 0x8af9f ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000007a353 : mov dword ptr [rsp], ecx ; mov rdi, rbx ; call rax
0x0000000000108d73 : mov dword ptr fs:[0x2d0], eax ; pop rax ; pop rdi ; call rax
0x00000000000914c4 : mov dword ptr ss:[rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000015b5f0 : mov dx, word ptr [rsi + 1] ; mov cx, word ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000000a76c2 : mov dx, word ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a84f2 : mov dx, word ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a60c2 : mov dx, word ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a9f62 : mov dx, word ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a8553 : mov dx, word ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a7713 : mov dx, word ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a6103 : mov dx, word ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a9fc3 : mov dx, word ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000001554e0 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000001556c0 : mov dx, word ptr [rsi - 3] ; mov cx, word ptr [rsi - 2] ; mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x00000000000a7680 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a84a0 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a6080 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000a9f10 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x000000000002e029 : mov eax, 0x441f0fc3 ; add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000016c7a4 : mov eax, 0x576f0ff3 ; mov eax, 0xf66b8b2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001056a7 : mov eax, 0xbefffff5 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x000000000016c7a9 : mov eax, 0xf66b8b2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000363de : mov eax, 0xfffffffe ; rol rax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000056848 : mov eax, 0xffffffff ; mov qword ptr [rdi], r10 ; ret
0x000000000011c973 : mov eax, 0xffffffff ; mov rdi, rax ; jmp 0x11c84e
0x000000000002d9e4 : mov eax, 0xffffffff ; shr edx, cl ; cmp edx, dword ptr [rdi + 4] ; jb 0x2da05 ; ret
0x000000000002d9e3 : mov eax, 0xffffffff ; shr edx, cl ; cmp edx, dword ptr [rdi + 4] ; jb 0x2da06 ; ret
0x000000000004a515 : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x0000000000134b88 : mov eax, 1 ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x000000000003639d : mov eax, 1 ; shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000003641d : mov eax, 1 ; shl rax, cl ; test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x000000000003417a : mov eax, dword ptr [r9 + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x00000000000ac7ea : mov eax, dword ptr [r9] ; cmp dword ptr [r10], eax ; jne 0xac87c ; test eax, eax ; jne 0xac7e0 ; mov rax, rdi ; ret
0x000000000013d1e5 : mov eax, dword ptr [rax + 0x10] ; add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000013da3d : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000012df6d : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x12df85 ; mov rdi, rsp ; call rax
0x000000000012e058 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x12e070 ; mov rdi, rsp ; call rax
0x000000000012e913 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x12e92b ; mov rdi, rbp ; call rax
0x000000000012f976 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x12f98e ; mov rdi, rbx ; call rax
0x000000000012fbf1 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x12fa9f ; mov rdi, rbx ; call rax
0x000000000012fce8 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x12fd00 ; mov rdi, rbx ; call rax
0x0000000000134aec : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x134b0c ; lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x00000000001354e4 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x1354fc ; mov rdi, r12 ; call rax
0x00000000001356b5 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x1356cf ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000136a6a : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x136997 ; mov rdi, rbx ; call rax
0x00000000001369a1 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x1369b9 ; mov rdi, r12 ; call rax
0x0000000000136b92 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x136baa ; mov rdi, rbp ; call rax
0x0000000000136db2 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x136dca ; mov rdi, rbp ; call rax
0x0000000000137889 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x1378a3 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000137f75 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x137f8d ; mov rdi, r12 ; call rax
0x00000000001382e9 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x138303 ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000013b875 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x13b88f ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013bf8e : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x13bfa8 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000002e052 : mov eax, dword ptr [rax + 0x40] ; movzx eax, word ptr [rax + rdi*2 + 0x100] ; and eax, esi ; ret
0x000000000002de82 : mov eax, dword ptr [rax + 0x48] ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002de62 : mov eax, dword ptr [rax + 0x58] ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002de65 : mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002e027 : mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002d98f : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000194d95 : mov eax, dword ptr [rax] ; add byte ptr [rdx + rsi*2 - 0x74ab0016], ah ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ja 0x194d9b ; call rsp
0x00000000000c800b : mov eax, dword ptr [rax] ; lea rdx, qword ptr [rdi + rdi*8] ; lea rax, qword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000002e04f : mov eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x40] ; movzx eax, word ptr [rax + rdi*2 + 0x100] ; and eax, esi ; ret
0x000000000002de7f : mov eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x48] ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002de5f : mov eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x58] ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002d98c : mov eax, dword ptr [rax] ; mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000002de7c : mov eax, dword ptr [rax] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x48] ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002de5c : mov eax, dword ptr [rax] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x58] ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002dd9c : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002ddbc : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002dcfc : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002dd7c : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002dc9c : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002dd3c : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002dcdc : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002dd1c : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000002de3c : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000002dcbc : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 2 ; movzx eax, ax ; ret
0x000000000002dd5c : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 4 ; movzx eax, ax ; ret
0x000000000002dc7c : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 8 ; movzx eax, ax ; ret
0x0000000000114eac : mov eax, dword ptr [rax] ; test rax, rax ; je 0x114ede ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x0000000000073468 : mov eax, dword ptr [rbp + 0x18] ; mov esi, r12d ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000001356b1 : mov eax, dword ptr [rbp + 0x18] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x1356d3 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013b871 : mov eax, dword ptr [rbp + 0x18] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x13b893 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013bf8a : mov eax, dword ptr [rbp + 0x18] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x13bfac ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000000204a7 : mov eax, dword ptr [rbp + 0x18] ; test rax, rax ; je 0x204bf ; mov rdi, rbp ; call rax
0x00000000000738a4 : mov eax, dword ptr [rbp + 0x20] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000007366d : mov eax, dword ptr [rbp + 0x28] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000070bad : mov eax, dword ptr [rbp + 0x48] ; add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000007d39e : mov eax, dword ptr [rbx + 0x18] ; mov esi, dword ptr [rsp + 0xc] ; mov rdi, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000012e90f : mov eax, dword ptr [rbx + 0x20] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12e92f ; mov rdi, rbp ; call rax
0x00000000001382e5 : mov eax, dword ptr [rbx + 0x60] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x138307 ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x0000000000137885 : mov eax, dword ptr [rbx + 0x70] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x1378a7 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x000000000013d481 : mov eax, dword ptr [rbx + 8] ; lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000130e21 : mov eax, dword ptr [rbx + 8] ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000a2e59 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000000a2e3a : mov eax, dword ptr [rcx + 4] ; mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x0000000000163fc6 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000164007 : mov eax, dword ptr [rcx + 5] ; mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x0000000000163fd6 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000164027 : mov eax, dword ptr [rcx + 6] ; mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x00000000000a2edd : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000164047 : mov eax, dword ptr [rcx + 7] ; mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x00000000000a2efd : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000163f37 : mov eax, dword ptr [rcx + 8] ; mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x00000000000a2ebe : mov eax, dword ptr [rcx + 8] ; mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x000000000003417b : mov eax, dword ptr [rcx + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x00000000000ac7eb : mov eax, dword ptr [rcx] ; cmp dword ptr [r10], eax ; jne 0xac87b ; test eax, eax ; jne 0xac7df ; mov rax, rdi ; ret
0x00000000000a2e15 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000a2e35 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov ax, word ptr [rcx + 4] ; mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00000000000a2e55 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000000a2e05 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000163fc1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000163fd1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000163fe1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000163ff1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000164001 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, qword ptr [rcx + 5] ; mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x0000000000164021 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, qword ptr [rcx + 6] ; mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x0000000000164041 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, qword ptr [rcx + 7] ; mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x0000000000163f31 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, qword ptr [rcx + 8] ; mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000163ee1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000000a2de6 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000000a2dd6 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000000f7e05 : mov eax, dword ptr [rdi + 0x100] ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000f7e30 : mov eax, dword ptr [rdi + 0x108] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000abc2b : mov eax, dword ptr [rdi + 0x10] ; cmp eax, dword ptr [rsi + 0x10] ; jne 0xabd2c ; ret
0x00000000000c2ba9 : mov eax, dword ptr [rdi + 0x10] ; jmp 0xc2aa3
0x00000000000744ff : mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x000000000007ee80 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000007eea8 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000116e30 : mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0x116e48 ; ret
0x00000000000cd56d : mov eax, dword ptr [rdi + 0x10] ; test rax, rax ; je 0xcd582 ; call rax
0x00000000000f7e20 : mov eax, dword ptr [rdi + 0x10c] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000abc40 : mov eax, dword ptr [rdi + 0x14] ; cmp eax, dword ptr [rsi + 0x14] ; jne 0xabd2c ; ret
0x000000000013e6bf : mov eax, dword ptr [rdi + 0x18] ; add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x00000000000abc55 : mov eax, dword ptr [rdi + 0x18] ; cmp eax, dword ptr [rsi + 0x18] ; jne 0xabd2c ; ret
0x000000000013eac3 : mov eax, dword ptr [rdi + 0x18] ; ret
0x000000000013e661 : mov eax, dword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000abc70 : mov eax, dword ptr [rdi + 0x1c] ; cmp eax, dword ptr [rsi + 0x1c] ; jne 0xabd2c ; ret
0x00000000000abc8b : mov eax, dword ptr [rdi + 0x20] ; cmp eax, dword ptr [rsi + 0x20] ; jne 0xabd2c ; ret
0x000000000012ff8e : mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x000000000002c352 : mov eax, dword ptr [rdi + 0x20] ; mov rbx, rdi ; test rax, rax ; je 0x2c36a ; call rax
0x00000000000c8e71 : mov eax, dword ptr [rdi + 0x20] ; ret
0x00000000001721b8 : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x1721cf ; call rax
0x00000000000abca0 : mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0xabd28 ; ret
0x00000000000abcb5 : mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xabd28 ; ret
0x000000000007f761 : mov eax, dword ptr [rdi + 0x28] ; cmp qword ptr [rdi + 0x10], rax ; cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000048082 : mov eax, dword ptr [rdi + 0x28] ; mov r9, qword ptr [rdi + 0x30] ; mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000013ea40 : mov eax, dword ptr [rdi + 0x28] ; ret
0x0000000000078d91 : mov eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000abcc0 : mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xabd28 ; ret
0x00000000000abcdb : mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0xabd28 ; ret
0x000000000012ffa8 : mov eax, dword ptr [rdi + 0x30] ; test eax, eax ; jne 0x12fffd ; mov dword ptr [rsi], 0 ; ret
0x00000000000abcf0 : mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xabd28 ; ret
0x00000000000abd05 : mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xabd28 ; ret
0x00000000000abd10 : mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xabd28 ; ret
0x00000000001104f1 : mov eax, dword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; cmp rax, rsi ; jb 0x110519 ; mov eax, 1 ; ret
0x0000000000078c81 : mov eax, dword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000137970 : mov eax, dword ptr [rdi + 0x48] ; bswap eax ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x0000000000076861 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007d21b : mov eax, dword ptr [rdi + 0x48] ; mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000d8108 : mov eax, dword ptr [rdi + 0x4c] ; ret
0x00000000001379c0 : mov eax, dword ptr [rdi + 0x54] ; bswap eax ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x0000000000137998 : mov eax, dword ptr [rdi + 0x58] ; bswap eax ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x000000000007f161 : mov eax, dword ptr [rdi + 0x68] ; ret
0x0000000000077378 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x77390 ; ret
0x00000000000f7288 : mov eax, dword ptr [rdi + 0x80] ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000740d1 : mov eax, dword ptr [rdi + 0xa0] ; cmp qword ptr [rax + 0x30], 0 ; je 0x740ed ; ret
0x00000000000abc10 : mov eax, dword ptr [rdi + 0xc] ; cmp eax, dword ptr [rsi + 0xc] ; jne 0xabd2c ; ret
0x00000000000abbe0 : mov eax, dword ptr [rdi + 4] ; cmp eax, dword ptr [rsi + 4] ; jne 0xabd2c ; ret
0x00000000000f7360 : mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000fd970 : mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x00000000000abbf5 : mov eax, dword ptr [rdi + 8] ; cmp eax, dword ptr [rsi + 8] ; jne 0xabd2c ; ret
0x000000000007b511 : mov eax, dword ptr [rdi + 8] ; cmp rax, qword ptr [rdi + 0x10] ; jae 0x7b52c ; movzx eax, byte ptr [rax] ; ret
0x000000000007f277 : mov eax, dword ptr [rdi + 8] ; cmp rax, rdx ; jae 0x7f2ab ; movzx eax, byte ptr [rax] ; ret
0x000000000013d376 : mov eax, dword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000013db01 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000130d51 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013dd81 : mov eax, dword ptr [rdi + 8] ; mov qword ptr [rsp + 8], r8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013b2a9 : mov eax, dword ptr [rdi + 8] ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000013d469 : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000012eba7 : mov eax, dword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x00000000000ac6dd : mov eax, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0xac6b9 ; ret
0x0000000000170be7 : mov eax, dword ptr [rdi - 0x10] ; cmp eax, dword ptr [rsi - 0x10] ; jne 0x170d2c ; ret
0x0000000000170c00 : mov eax, dword ptr [rdi - 0xc] ; cmp eax, dword ptr [rsi - 0xc] ; jne 0x170d2c ; ret
0x0000000000170d10 : mov eax, dword ptr [rdi - 4] ; cmp eax, dword ptr [rsi - 4] ; jne 0x170d2a ; xor eax, eax ; ret
0x0000000000170c30 : mov eax, dword ptr [rdi - 4] ; cmp eax, dword ptr [rsi - 4] ; jne 0x170d2c ; ret
0x000000000016c2b4 : mov eax, dword ptr [rdi - 4] ; cmp ecx, eax ; jne 0x16ccdc ; xor eax, eax ; ret
0x00000000001704dc : mov eax, dword ptr [rdi - 4] ; mov ecx, dword ptr [rsi - 4] ; cmp eax, ecx ; jne 0x170700 ; xor eax, eax ; ret
0x000000000016c513 : mov eax, dword ptr [rdi - 4] ; mov ecx, dword ptr [rsi - 4] ; cmp ecx, eax ; jne 0x16ccdf ; xor eax, eax ; ret
0x0000000000170c15 : mov eax, dword ptr [rdi - 8] ; cmp eax, dword ptr [rsi - 8] ; jne 0x170d2c ; ret
0x000000000016c811 : mov eax, dword ptr [rdi - 8] ; cmp rcx, rax ; jne 0x16ccd1 ; xor eax, eax ; ret
0x000000000016d9e1 : mov eax, dword ptr [rdi - 8] ; cmp rcx, rax ; jne 0x16db11 ; xor eax, eax ; ret
0x000000000016cc93 : mov eax, dword ptr [rdi - 8] ; mov rcx, qword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x16ccd1 ; xor eax, eax ; ret
0x000000000016dad3 : mov eax, dword ptr [rdi - 8] ; mov rcx, qword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x16db11 ; xor eax, eax ; ret
0x0000000000078cf0 : mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x0000000000078cc0 : mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x00000000000abbcb : mov eax, dword ptr [rdi] ; cmp eax, dword ptr [rsi] ; jne 0xabd2a ; ret
0x0000000000137940 : mov eax, dword ptr [rdi] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000012fee8 : mov eax, dword ptr [rdi] ; mov dword ptr [rsi + 8], 0 ; test eax, eax ; je 0x12ff0f ; xor eax, eax ; ret
0x000000000007ee6f : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000116e45 : mov eax, dword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x00000000000c8f80 : mov eax, dword ptr [rdi] ; ret
0x00000000000798f0 : mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x0000000000079900 : mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x00000000001358d4 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1358e6 ; ret
0x00000000001358d3 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1358e7 ; ret
0x000000000013ba74 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x13ba86 ; ret
0x000000000013ba73 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x13ba87 ; ret
0x00000000000ac798 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0xac798 ; xor eax, eax ; ret
0x00000000000fd980 : mov eax, dword ptr [rdi] ; test eax, eax ; js 0xfd99e ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x00000000000ace15 : mov eax, dword ptr [rdi] ; test eax, eax ; sete al ; movzx eax, al ; ret
0x000000000002cb1d : mov eax, dword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000001378e1 : mov eax, dword ptr [rdx] ; bswap eax ; mov dword ptr [rdi + 0x54], eax ; mov eax, 1 ; ret
0x00000000001379b1 : mov eax, dword ptr [rdx] ; bswap eax ; mov dword ptr [rdi + 0x58], eax ; mov eax, 1 ; ret
0x00000000000e8f58 : mov eax, dword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x0000000000137981 : mov eax, dword ptr [rdx] ; sub eax, 1 ; bswap eax ; mov dword ptr [rdi + 0x48], eax ; mov eax, 1 ; ret
0x00000000000fe465 : mov eax, dword ptr [rip + 0x2c2a5d] ; mov qword ptr [rax], rdx ; xor eax, eax ; cmp rdi, rdx ; ja 0xfe4b1 ; ret
0x000000000008681f : mov eax, dword ptr [rip + 0x33a6bb] ; mov qword ptr [rax], rdi ; ret
0x000000000010cc99 : mov eax, dword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000010cd19 : mov eax, dword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000010ca19 : mov eax, dword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000010cc19 : mov eax, dword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000010c819 : mov eax, dword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000010cb19 : mov eax, dword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000010ca99 : mov eax, dword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000010c899 : mov eax, dword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000010c919 : mov eax, dword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 2 ; movzx eax, ax ; ret
0x000000000010cb99 : mov eax, dword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 4 ; movzx eax, ax ; ret
0x000000000010c799 : mov eax, dword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 8 ; movzx eax, ax ; ret
0x000000000002dfe1 : mov eax, dword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002e001 : mov eax, dword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002df41 : mov eax, dword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002dfc1 : mov eax, dword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002dee1 : mov eax, dword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002df81 : mov eax, dword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002df21 : mov eax, dword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002df61 : mov eax, dword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000002deb1 : mov eax, dword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000002df01 : mov eax, dword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 2 ; movzx eax, ax ; ret
0x000000000002dfa1 : mov eax, dword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 4 ; movzx eax, ax ; ret
0x000000000002dec1 : mov eax, dword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 8 ; movzx eax, ax ; ret
0x0000000000137f71 : mov eax, dword ptr [rsi + 0x70] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x137f91 ; mov rdi, r12 ; call rax
0x000000000002e021 : mov eax, dword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e031 : mov eax, dword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000ac30f : mov eax, dword ptr [rsi + 8] ; mov dword ptr [rdi + 0xc], eax ; mov rax, rbx ; pop rbx ; ret
0x00000000000368a5 : mov eax, dword ptr [rsi] ; and rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000f7f20 : mov eax, dword ptr [rsi] ; mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x0000000000036b95 : mov eax, dword ptr [rsi] ; or rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000a0850 : mov eax, dword ptr [rsp + 0x10] ; mov byte ptr [rdi + 4], cl ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a0840 : mov eax, dword ptr [rsp + 0x10] ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a07f8 : mov eax, dword ptr [rsp + 0x10] ; mov dword ptr [rdi], eax ; mov eax, dword ptr [rsp + 0x18] ; mov dword ptr [rdi + 4], eax ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a0860 : mov eax, dword ptr [rsp + 0x10] ; mov word ptr [rdi + 4], r11w ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a07fe : mov eax, dword ptr [rsp + 0x18] ; mov dword ptr [rdi + 4], eax ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000136b8d : mov eax, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x136baf ; mov rdi, rbp ; call rax
0x000000000013699c : mov eax, dword ptr [rsp + 0x48] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x1369be ; mov rdi, r12 ; call rax
0x000000000013dec5 : mov eax, dword ptr [rsp + 8] ; lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000012df68 : mov eax, dword ptr [rsp + 8] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12df8a ; mov rdi, rsp ; call rax
0x000000000012e053 : mov eax, dword ptr [rsp + 8] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12e075 ; mov rdi, rsp ; call rax
0x000000000010422e : mov eax, dword ptr [rsp + 8] ; mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x0000000000131a81 : mov eax, dword ptr [rsp + 8] ; mov rdx, rbx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000011f6b6 : mov eax, dword ptr [rsp] ; mov ecx, 0x400 ; mov rdx, r15 ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000126704 : mov eax, eax ; mov byte ptr [rdi + rdx], 0 ; ret
0x000000000003af01 : mov eax, eax ; mov qword ptr [rdi + 8], rdx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000012ca37 : mov eax, ebp ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000013a3b7 : mov eax, ebx ; mov ecx, r12d ; mov rdi, rbp ; call 0x5665a
0x000000000013a3ff : mov eax, ebx ; mov rcx, r12 ; mov rdi, rbp ; xor eax, eax ; call 0x5665c
0x000000000012672e : mov eax, ecx ; shr eax, 3 ; mov ecx, eax ; xor eax, eax ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x00000000000a0927 : mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000f5419 : mov eax, edi ; mov rcx, r14 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call 0xf16a0
0x000000000013a4b6 : mov eax, edi ; mov rcx, r14 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000034f30 : mov eax, edx ; and eax, 0x80000000 ; movd xmm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x0000000000034f03 : mov eax, edx ; movss dword ptr [rdi], xmm0 ; and eax, 0x80000000 ; movd xmm0, eax ; ret
0x0000000000116d3c : mov eax, edx ; xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x116d3f ; pop rdx ; pop r10 ; ret
0x000000000004aa7e : mov eax, esi ; cmovae rax, rdi ; ret
0x0000000000126703 : mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x000000000016c4a4 : mov ebp, 0x4e6f0ff3 ; mov ebp, 0xf66bdb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000185e79 : mov ebp, 0xbe48fffc ; cld ; ljmp ptr [rax - 0x41] ; cld ; dec dword ptr [rax] ; scasd eax, dword ptr [rdi] ; cld ; lcall ptr [rax] ; ret 0xfffc
0x00000000000a0c61 : mov ebp, 0xea8348c0 ; add rdx, rax ; jl 0xa0cde ; add rax, rdi ; ret
0x000000000016c4a9 : mov ebp, 0xf66bdb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000005af87 : mov ebp, 0xffffef4c ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd189
0x000000000010b861 : mov ebp, dword ptr [rbx] ; add byte ptr [rbx + 0x29f08930], cl ; fmul dword ptr [rdi] ; test dword ptr [rax], esp ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x000000000007af79 : mov ebp, dword ptr [rdi + 0x90] ; pop rbx ; sub rbp, rax ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000037b8b : mov ebp, dword ptr [rsp + 0x50] ; nop ; mov rsi, r13 ; mov rdi, r14 ; mov rdx, rbp ; call r15
0x000000000013dec0 : mov ebp, eax ; jne 0x13de61 ; mov rax, qword ptr [r12 + 8] ; lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013e004 : mov ebp, eax ; jne 0x13dfd8 ; mov rax, qword ptr [r12 + 8] ; lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x00000000000c912d : mov ebp, ebp ; mov rdi, rbx ; call r12
0x000000000006efdc : mov ebp, edx ; mov rbx, rdi ; sub rsp, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x00000000000e4c55 : mov ebp, esi ; mov qword ptr [rsp + 0x28], rdi ; add rax, rdx ; jmp rax
0x0000000000182f38 : mov ebp, esi ; sub dword ptr [rdi], ecx ; push rbx ; xchg eax, edx ; jae 0x182f1f ; push rsi ; pop rdx ; je 0x182f14 ; ret 0xacfc
0x000000000016c624 : mov ebx, 0x576f0ff3 ; mov ebx, 0xf66bbb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000d6ab3 : mov ebx, 0xa4 ; add dword ptr [rdi], ecx ; lahf ; ret 0x8feb
0x000000000016c629 : mov ebx, 0xf66bbb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001a64e4 : mov ebx, cs ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x0000000000155111 : mov ebx, dword ptr [rsi - 0x10] ; mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000037602 : mov ebx, eax ; lea r12, qword ptr [rsi + rbx] ; mov rdi, r12 ; call r15
0x00000000000721ab : mov ebx, ebp ; je 0x721a5 ; mov esi, r12d ; mov rdi, r15 ; call 0x7e41c
0x000000000006efdf : mov ebx, edi ; sub rsp, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x0000000000114ea9 : mov ebx, edx ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x114ee1 ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x000000000011f6b9 : mov ecx, 0x400 ; mov rdx, r15 ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000016c724 : mov ecx, 0x576f0ff3 ; mov ecx, 0xf66b9b2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000105747 : mov ecx, 0xbefffff9 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x000000000016c729 : mov ecx, 0xf66b9b2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000012de79 : mov ecx, dword ptr [rax + 8] ; mov edx, dword ptr [rdi + 0x5c] ; lea rsi, qword ptr [rdi + 0x48] ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000002af81 : mov ecx, dword ptr [rax + rdi*8] ; test rcx, rcx ; je 0x2af93 ; call rcx
0x000000000016dcbf : mov ecx, dword ptr [rcx - 2] ; mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x000000000016dcac : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000016dc9a : mov ecx, dword ptr [rcx - 8] ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x00000000000ccf8c : mov ecx, dword ptr [rdi + 0x10] ; mov qword ptr [rdi + 0x10], rcx ; mov rcx, qword ptr [rdi + 0x18] ; mov qword ptr [rdi + 0x18], rcx ; ret
0x00000000000ccf94 : mov ecx, dword ptr [rdi + 0x18] ; mov qword ptr [rdi + 0x18], rcx ; ret
0x000000000013e7a0 : mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x13e7b9 ; xor eax, eax ; ret
0x000000000013e7e0 : mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x13e7f9 ; xor eax, eax ; ret
0x0000000000048086 : mov ecx, dword ptr [rdi + 0x30] ; mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x00000000000365a1 : mov ecx, dword ptr [rdi + 8] ; test ecx, ecx ; jne 0x365ca ; mov edx, dword ptr [rdi] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x00000000001166e0 : mov ecx, dword ptr [rdi + 8] ; xor eax, eax ; test ecx, ecx ; jne 0x1166ff ; cmp qword ptr [rdi], 0 ; je 0x116708 ; ret
0x00000000000adb25 : mov ecx, dword ptr [rdi + rdx*4] ; test r9d, r9d ; jne 0xadaec ; mov rax, rdx ; ret
0x000000000015372e : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x000000000002d9e0 : mov ecx, dword ptr [rdi] ; mov edx, esi ; mov eax, 0xffffffff ; shr edx, cl ; cmp edx, dword ptr [rdi + 4] ; jb 0x2da09 ; ret
0x000000000007f2b0 : mov ecx, dword ptr [rdi] ; test cl, 8 ; je 0x7f2d9 ; xor eax, eax ; cmp esi, 0xff ; setne al ; neg eax ; ret
0x0000000000104af1 : mov ecx, dword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x00000000000a6e94 : mov ecx, dword ptr [rsi + 0x10] ; mov dl, byte ptr [rsi + 0x14] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000a7834 : mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a8684 : mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a7854 : mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a61c4 : mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a61b4 : mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000aa0f4 : mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a78b5 : mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a8705 : mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a6245 : mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a6225 : mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000aa175 : mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a77f5 : mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a8645 : mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a6185 : mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000aa0b5 : mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000ec23b : mov ecx, dword ptr [rsi + 0x10] ; setne al ; movzx eax, al ; neg eax ; cmp dword ptr [rdi + 0x10], ecx ; cmovb eax, edx ; ret
0x00000000000a6288 : mov ecx, dword ptr [rsi + 0x17] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a62a8 : mov ecx, dword ptr [rsi + 0x18] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a6269 : mov ecx, dword ptr [rsi + 0x18] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000abba8 : mov ecx, dword ptr [rsi + 0xc] ; cmp dword ptr [rdi + 0xc], ecx ; jne 0xabd2e ; xor eax, eax ; ret
0x00000000000a7875 : mov ecx, dword ptr [rsi + 0xe] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a86c5 : mov ecx, dword ptr [rsi + 0xe] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a61e5 : mov ecx, dword ptr [rsi + 0xe] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000aa135 : mov ecx, dword ptr [rsi + 0xe] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a7814 : mov ecx, dword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a8664 : mov ecx, dword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a61a4 : mov ecx, dword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000aa0d4 : mov ecx, dword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a7895 : mov ecx, dword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a86e5 : mov ecx, dword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a6205 : mov ecx, dword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000aa155 : mov ecx, dword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000367ba : mov ecx, dword ptr [rsi + rax*8] ; and rcx, qword ptr [rdx + rax*8] ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x0000000000036aaa : mov ecx, dword ptr [rsi + rax*8] ; or rcx, qword ptr [rdx + rax*8] ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x00000000000914bf : mov ecx, dword ptr [rsi + rdx - 4] ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x00000000000914af : mov ecx, dword ptr [rsi + rdx - 8] ; mov rsi, qword ptr [rsi] ; mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x00000000001554b5 : mov ecx, dword ptr [rsi - 0xa] ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0x12], r11 ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001554d1 : mov ecx, dword ptr [rsi - 0xa] ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155695 : mov ecx, dword ptr [rsi - 0xb] ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0x13], r11 ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001556b1 : mov ecx, dword ptr [rsi - 0xb] ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155875 : mov ecx, dword ptr [rsi - 0xc] ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0x14], r11 ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155891 : mov ecx, dword ptr [rsi - 0xc] ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155a81 : mov ecx, dword ptr [rsi - 0xd] ; mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155c81 : mov ecx, dword ptr [rsi - 0xe] ; mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155e81 : mov ecx, dword ptr [rsi - 0xf] ; mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001556c5 : mov ecx, dword ptr [rsi - 2] ; mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x000000000016d8e1 : mov ecx, dword ptr [rsi - 4] ; cmp ecx, dword ptr [rdi - 4] ; jne 0x16db24 ; xor eax, eax ; ret
0x0000000000155aa3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155ca3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155ea3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016c2b1 : mov ecx, dword ptr [rsi - 4] ; mov eax, dword ptr [rdi - 4] ; cmp ecx, eax ; jne 0x16ccdf ; xor eax, eax ; ret
0x000000000015ab64 : mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015aae4 : mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015aa64 : mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015abe4 : mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015a9d5 : mov ecx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015a945 : mov ecx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015a8b5 : mov ecx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001552d5 : mov ecx, dword ptr [rsi - 9] ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0x11], r11 ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001552f1 : mov ecx, dword ptr [rsi - 9] ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a76b0 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a60b0 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000a7701 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a60f1 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000000a84b1 : mov ecx, dword ptr [rsi] ; mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a6d61 : mov ecx, dword ptr [rsi] ; mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000a9f21 : mov ecx, dword ptr [rsi] ; mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a84e0 : mov ecx, dword ptr [rsi] ; mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a6d80 : mov ecx, dword ptr [rsi] ; mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a9f50 : mov ecx, dword ptr [rsi] ; mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a8531 : mov ecx, dword ptr [rsi] ; mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a6dc1 : mov ecx, dword ptr [rsi] ; mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a9fa1 : mov ecx, dword ptr [rsi] ; mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x000000000015b513 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b4a3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b433 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000000a76c0 : mov ecx, dword ptr [rsi] ; mov dx, word ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a84f0 : mov ecx, dword ptr [rsi] ; mov dx, word ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a60c0 : mov ecx, dword ptr [rsi] ; mov dx, word ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a9f60 : mov ecx, dword ptr [rsi] ; mov dx, word ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a8551 : mov ecx, dword ptr [rsi] ; mov dx, word ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a7711 : mov ecx, dword ptr [rsi] ; mov dx, word ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a6101 : mov ecx, dword ptr [rsi] ; mov dx, word ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a76e0 : mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a8510 : mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a60d0 : mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000000a9f80 : mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a7731 : mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a8571 : mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a6111 : mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a9fe1 : mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a7751 : mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a8591 : mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a6121 : mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000aa001 : mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x000000000015b355 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b2e5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b275 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b205 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b195 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b125 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b0b5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000012698c : mov ecx, dword ptr [rsi] ; mov r10, qword ptr [rsi + 8] ; mov qword ptr [rdi + rdx + 8], r9 ; mov qword ptr [rdi + rdx + 0x10], r10 ; ret
0x00000000000a7771 : mov ecx, dword ptr [rsi] ; mov rdx, qword ptr [rsi + 5] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a85b1 : mov ecx, dword ptr [rsi] ; mov rdx, qword ptr [rsi + 5] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a6131 : mov ecx, dword ptr [rsi] ; mov rdx, qword ptr [rsi + 5] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a7791 : mov ecx, dword ptr [rsi] ; mov rdx, qword ptr [rsi + 6] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a85d1 : mov ecx, dword ptr [rsi] ; mov rdx, qword ptr [rsi + 6] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a6141 : mov ecx, dword ptr [rsi] ; mov rdx, qword ptr [rsi + 6] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a77b1 : mov ecx, dword ptr [rsi] ; mov rdx, qword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a85f1 : mov ecx, dword ptr [rsi] ; mov rdx, qword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a6151 : mov ecx, dword ptr [rsi] ; mov rdx, qword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000015b5f5 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000000a7691 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a6091 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000ad458 : mov ecx, dword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 0x18] ; mov rdx, r13 ; mov rdi, rbp ; call rbx
0x00000000000ad718 : mov ecx, dword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 0x18] ; mov rdx, r14 ; mov rdi, rbp ; call rbx
0x0000000000027a85 : mov ecx, dword ptr [rsp + 0x20] ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000025347 : mov ecx, dword ptr [rsp + 0x20] ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000024d63 : mov ecx, dword ptr [rsp + 0x28] ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000002818a : mov ecx, dword ptr [rsp + 0x28] ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000023a1a : mov ecx, dword ptr [rsp + 0x30] ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, qword ptr [rsp + 0x20] ; call r14
0x0000000000023f78 : mov ecx, dword ptr [rsp + 0x30] ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000026c1b : mov ecx, dword ptr [rsp + 0x30] ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000025cd8 : mov ecx, dword ptr [rsp + 0x38] ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000000243de : mov ecx, dword ptr [rsp + 0x40] ; mov rsi, qword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000131b8e : mov ecx, dword ptr [rsp + 8] ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000016dcab : mov ecx, dword ptr ss:[rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000000a0515 : mov ecx, eax ; lea rdx, qword ptr [rcx + 1] ; mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x00000000000a0594 : mov ecx, eax ; lea rdx, qword ptr [rcx + 1] ; mov byte ptr [rcx], 0 ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x0000000000126733 : mov ecx, eax ; xor eax, eax ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x00000000000bb41c : mov ecx, ebp ; lea r9, qword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x0000000000076b84 : mov ecx, ebp ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x00000000000ad5e4 : mov ecx, ebp ; mov rdx, r12 ; lea r9, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rbx
0x00000000000ad8c4 : mov ecx, ebp ; mov rdx, r12 ; lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x0000000000070ebc : mov ecx, ebp ; mov rsi, r12 ; mov rdi, rbx ; xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000012e64c : mov ecx, ebx ; add rdi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000013079f : mov ecx, ebx ; add rdi, 0x23b0 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000001307e5 : mov ecx, ebx ; pop rbx ; pop rbp ; add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x0000000000100823 : mov ecx, ecx ; mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x00000000001199b0 : mov ecx, ecx ; test r8d, r8d ; mov dword ptr [rax + 0xc], r8d ; jne 0x119962 ; mov rax, rdi ; ret
0x00000000001226d1 : mov ecx, edi ; mov rdx, qword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x00000000000ad31b : mov ecx, edi ; mov rdx, r12 ; lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x000000000003b22b : mov ecx, edx ; mov dword ptr [rdi], edx ; shr ecx, 0x10 ; and ecx, 0x3ff ; xor eax, ecx ; ret
0x0000000000091841 : mov ecx, edx ; movzx eax, sil ; mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000078db4 : mov ecx, edx ; or ch, 0x80 ; cmp esi, 2 ; cmove edx, ecx ; mov dword ptr [rdi], edx ; ret
0x0000000000091492 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000011835a : mov ecx, edx ; test r8b, r8b ; mov byte ptr [r9 + 3], r8b ; jne 0x118306 ; mov rax, rdi ; ret
0x00000000000768cd : mov ecx, esi ; lea rsi, qword ptr [rbp + 0x50] ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000076a89 : mov ecx, esi ; lea rsi, qword ptr [rbp + 0x90] ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000012ca3a : mov ecx, esi ; mov rdi, r13 ; call r12
0x00000000000f541c : mov ecx, esi ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call 0xf169d
0x000000000013a4b9 : mov ecx, esi ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000135655 : mov ecx, esi ; xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x000000000013a3ba : mov ecx, esp ; mov rdi, rbp ; call 0x56657
0x000000000013a402 : mov ecx, esp ; mov rdi, rbp ; xor eax, eax ; call 0x56659
0x000000000013a3b9 : mov ecx, r12d ; mov rdi, rbp ; call 0x56658
0x0000000000070ebb : mov ecx, r13d ; mov rsi, r12 ; mov rdi, rbx ; xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000001059dd : mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x000000000016c2d4 : mov edi, 0x566f0ff3 ; mov edi, 0xf66bfb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016c2d9 : mov edi, 0xf66bfb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000195545 : mov edi, 0xff640000 ; in eax, dx ; push qword ptr [rdi + rdi*4 - 0x1c0000] ; in eax, dx ; jmp rsp
0x00000000001224fd : mov edi, dword ptr [rbx + 0x48] ; test rdi, rdi ; jne 0x1224f9 ; pop rbx ; ret
0x00000000000cd56a : mov edi, dword ptr [rbx] ; mov rax, qword ptr [rdi + 0x10] ; test rax, rax ; je 0xcd585 ; call rax
0x000000000012eba4 : mov edi, dword ptr [rbx] ; mov rax, qword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x0000000000134b85 : mov edi, dword ptr [rcx + 0x10] ; mov eax, 1 ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000137915 : mov edi, dword ptr [rdi + 0x10] ; mov eax, 1 ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x00000000001724a6 : mov edi, dword ptr [rdi + 0x10] ; test rdi, rdi ; jne 0x1724a9 ; ret
0x00000000001724c8 : mov edi, dword ptr [rdi + 0x10] ; test rdi, rdi ; jne 0x1724cb ; pop rbx ; ret
0x000000000013792d : mov edi, dword ptr [rdi + 0x24] ; mov eax, 1 ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x00000000001381ed : mov edi, dword ptr [rdi + 0x28] ; mov eax, 1 ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x00000000000355e4 : mov edi, dword ptr [rdi + 0x28] ; mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x00000000001381a5 : mov edi, dword ptr [rdi + 0x38] ; mov eax, 1 ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x00000000001358d1 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1358e9 ; ret
0x000000000013ba71 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x13ba89 ; ret
0x0000000000135651 : mov edi, dword ptr [rdi + 0x40] ; mov rcx, rsi ; xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x000000000013bf31 : mov edi, dword ptr [rdi + 0x48] ; mov rcx, rsi ; xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x000000000004808a : mov edi, dword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000006efe6 : mov edi, dword ptr [rdi + 0xe0] ; call rax
0x000000000006efaa : mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x0000000000103e38 : mov edi, dword ptr [rdi] ; call rbx
0x0000000000172801 : mov edi, dword ptr [rip + 0x252949] ; cmp rdi, 1 ; ja 0x17281c ; ret
0x0000000000128e00 : mov edi, eax ; lea r8, qword ptr [rdi + 1] ; movzx ecx, byte ptr [r8 - 1] ; test cl, cl ; jne 0x128e01 ; ret
0x000000000004aba5 : mov edi, eax ; movzx eax, byte ptr [r8 + rdx] ; test rdi, rdi ; mov byte ptr [rsi], al ; jne 0x4aba9 ; mov rax, rsi ; ret
0x0000000000170dac : mov edi, ebp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x00000000001724c0 : mov edi, ebx ; cmp dword ptr [rdi], 4 ; jg 0x1724c2 ; mov rdi, qword ptr [rdi + 0x10] ; test rdi, rdi ; jne 0x1724d3 ; pop rbx ; ret
0x000000000010c3f7 : mov edi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000010c48f : mov edi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000010c0ef : mov edi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000010c35f : mov edi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000010be9f : mov edi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000010c22f : mov edi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000010c18f : mov edi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000010bf3f : mov edi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000010bfcf : mov edi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 2 ; movzx eax, ax ; ret
0x000000000010c2cf : mov edi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 4 ; movzx eax, ax ; ret
0x000000000010be0f : mov edi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 8 ; movzx eax, ax ; ret
0x000000000010cc9c : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000010cd1c : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000010ca1c : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000010cc1c : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000010c81c : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000010cb1c : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000010ca9c : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000010c89c : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000010c91c : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 2 ; movzx eax, ax ; ret
0x000000000010cb9c : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 4 ; movzx eax, ax ; ret
0x000000000010c79c : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 8 ; movzx eax, ax ; ret
0x0000000000071d8b : mov edi, esp ; mov rax, rdi ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000801c2 : mov edi, esp ; neg rdi ; call qword ptr [r15]
0x000000000008be06 : mov edx, 0 ; lea rax, qword ptr [rdi + rax] ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000008f762 : mov edx, 0x48000001 ; bsr eax, eax ; add rax, rdi ; ret
0x000000000007d7cc : mov edx, 0x48001f0f ; cmp dword ptr [rdi + 0x38], 0 ; je 0x7d7eb ; ret
0x000000000016c6a4 : mov edx, 0x576f0ff3 ; mov edx, 0xf66bab2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000185dfc : mov edx, 0xd4fff1aa ; stosb byte ptr [rdi], al ; int1 ; jmp rsp
0x000000000016c6a9 : mov edx, 0xf66bab2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000091a50 : mov edx, 0xffffffff ; bsf rax, rdi ; cmove rax, rdx ; add eax, 1 ; ret
0x000000000013e992 : mov edx, 0xffffffff ; mov rsi, r14 ; mov rdi, rbp ; call r12
0x000000000013d145 : mov edx, 0xffffffff ; mov rsi, rbx ; mov rdi, r15 ; call r14
0x000000000013e868 : mov edx, 0xffffffff ; mov rsi, rbx ; mov rdi, rbp ; call rcx
0x0000000000105017 : mov edx, 1 ; je 0x105570 ; xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000104aea : mov edx, 1 ; je 0x105590 ; xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000104d6b : mov edx, 1 ; mov esi, 1 ; mov rdi, r12 ; call rbx
0x0000000000104fe9 : mov edx, 1 ; mov esi, 2 ; mov rdi, r12 ; call rbx
0x0000000000104d8d : mov edx, 2 ; je 0x1055d0 ; xor esi, esi ; mov rdi, r13 ; call rbx
0x000000000010503c : mov edx, 2 ; je 0x1055f0 ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000104b0f : mov edx, 2 ; je 0x105610 ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000001052ba : mov edx, 2 ; je 0x105630 ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000104c37 : mov edx, 2 ; mov esi, 1 ; mov rdi, r13 ; call rbx
0x0000000000104d5c : mov edx, 2 ; mov esi, 2 ; mov rdi, r13 ; call rbx
0x0000000000104b33 : mov edx, 3 ; je 0x105650 ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000104ed6 : mov edx, 3 ; je 0x105670 ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000104db1 : mov edx, 3 ; je 0x105690 ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000104c58 : mov edx, 3 ; je 0x1056b0 ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000105403 : mov edx, 3 ; je 0x1056d0 ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000001052de : mov edx, 3 ; je 0x1056f0 ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000105185 : mov edx, 3 ; je 0x105710 ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000105060 : mov edx, 3 ; je 0x105730 ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000104baf : mov edx, 3 ; mov esi, 1 ; mov rdi, r14 ; call rbx
0x0000000000104c28 : mov edx, 3 ; mov esi, 2 ; mov rdi, r14 ; call rbx
0x00000000001050f9 : mov edx, 4 ; je 0x105750 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000105080 : mov edx, 4 ; je 0x105770 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000010549c : mov edx, 4 ; je 0x105790 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000105423 : mov edx, 4 ; je 0x1057b0 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000105377 : mov edx, 4 ; je 0x1057d0 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000001052fe : mov edx, 4 ; je 0x1057f0 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000010521e : mov edx, 4 ; je 0x105810 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000001051a5 : mov edx, 4 ; je 0x105830 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104f6f : mov edx, 4 ; je 0x105850 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104ef6 : mov edx, 4 ; je 0x105870 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104b53 : mov edx, 4 ; je 0x105890 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104e4a : mov edx, 4 ; je 0x1058b0 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104dd1 : mov edx, 4 ; je 0x1058d0 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104bcc : mov edx, 4 ; je 0x1058f0 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104cf1 : mov edx, 4 ; je 0x105910 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104c78 : mov edx, 4 ; je 0x105930 ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104ba0 : mov edx, 4 ; mov esi, 2 ; mov rdi, r15 ; call rbx
0x000000000007eea0 : mov edx, dword ptr [rax + 8] ; jne 0x7eebd ; sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000000744f7 : mov edx, dword ptr [rax] ; jne 0x74521 ; sub rdx, qword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x000000000010772d : mov edx, dword ptr [rax] ; test rdx, rdx ; je 0x107750 ; cmp rdi, rdx ; jne 0x107738 ; mov rax, qword ptr [rax + 8] ; ret
0x000000000012fe05 : mov edx, dword ptr [rbx + 0x28] ; add rsp, 8 ; mov rdi, rbp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x000000000007a34c : mov edx, dword ptr [rbx + 0x40] ; sub rdx, rsi ; mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x0000000000074671 : mov edx, dword ptr [rbx + 0xa0] ; mov rdi, qword ptr [rdx + 0x40] ; jmp 0x7464b
0x0000000000071d88 : mov edx, dword ptr [rbx] ; mov rdi, r12 ; mov rax, rdi ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002da15 : mov edx, dword ptr [rcx + rdx] ; test edx, edx ; je 0x2da01 ; and esi, dword ptr [rdi + 0x10] ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x00000000001166ff : mov edx, dword ptr [rdi + 0x28] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x00000000000757b8 : mov edx, dword ptr [rdi + 0x40] ; sub rdx, rsi ; mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x000000000012de7c : mov edx, dword ptr [rdi + 0x5c] ; lea rsi, qword ptr [rdi + 0x48] ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000006c401 : mov edx, dword ptr [rdi + 0x88] ; mov qword ptr [rdx + 8], rsi ; mov dword ptr [rdx + 4], 1 ; ret
0x0000000000138294 : mov edx, dword ptr [rdi + 0x90] ; bswap eax ; mov dword ptr [rdx + 0x10], eax ; mov eax, 1 ; ret
0x0000000000138174 : mov edx, dword ptr [rdi + 0x90] ; bswap eax ; mov dword ptr [rdx + 0xc], eax ; mov eax, 1 ; ret
0x0000000000076d8a : mov edx, dword ptr [rdi + 0xc0] ; mov eax, edx ; ret
0x0000000000048889 : mov edx, dword ptr [rdi + 8] ; add r10, rax ; mov qword ptr [rdi + 8], r10 ; mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000116e41 : mov edx, dword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x000000000004a499 : mov edx, dword ptr [rdi + 8] ; sub r10, rax ; mov qword ptr [rdi + 8], r10 ; mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000012ca31 : mov edx, dword ptr [rdi] ; mov qword ptr [rbx], rax ; mov r8, rbp ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000012caa1 : mov edx, dword ptr [rdi] ; mov qword ptr [rbx], rax ; xor r8d, r8d ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x00000000000746e0 : mov edx, dword ptr [rdi] ; test dl, 8 ; je 0x74709 ; xor eax, eax ; cmp esi, 0xff ; setne al ; neg eax ; ret
0x00000000000365a8 : mov edx, dword ptr [rdi] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x00000000001304ec : mov edx, dword ptr [rdx + 0x38] ; test rdx, rdx ; je 0x130504 ; mov rdi, rbp ; call rdx
0x00000000001381d4 : mov edx, dword ptr [rdx + 8] ; mov qword ptr [rdi + 0x20], rax ; mov qword ptr [rdi + 0x28], rdx ; mov eax, 1 ; ret
0x000000000013818c : mov edx, dword ptr [rdx + 8] ; mov qword ptr [rdi + 0x30], rax ; mov qword ptr [rdi + 0x38], rdx ; mov eax, 1 ; ret
0x00000000000e8f51 : mov edx, dword ptr [rip + 0x2d8051] ; mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x00000000000a6f15 : mov edx, dword ptr [rsi + 0x10] ; mov cl, byte ptr [rsi + 0x18] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a6285 : mov edx, dword ptr [rsi + 0x10] ; mov ecx, dword ptr [rsi + 0x17] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a62a5 : mov edx, dword ptr [rsi + 0x10] ; mov ecx, dword ptr [rsi + 0x18] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000f7ee7 : mov edx, dword ptr [rsi + 0x78] ; mov qword ptr [rdi + 0x100], rdx ; ret
0x00000000000f731a : mov edx, dword ptr [rsi + 0x78] ; mov qword ptr [rdi + 0x80], rdx ; ret
0x000000000015b5f1 : mov edx, dword ptr [rsi + 1] ; mov cx, word ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000015b510 : mov edx, dword ptr [rsi + 1] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b351 : mov edx, dword ptr [rsi + 1] ; mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b4a0 : mov edx, dword ptr [rsi + 2] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b2e1 : mov edx, dword ptr [rsi + 2] ; mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a76e2 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a8512 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a60d2 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000000a9f82 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x000000000015b430 : mov edx, dword ptr [rsi + 3] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b271 : mov edx, dword ptr [rsi + 3] ; mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a76c3 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a84f3 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a60c3 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a9f63 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x000000000015b201 : mov edx, dword ptr [rsi + 4] ; mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a7774 : mov edx, dword ptr [rsi + 5] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a85b4 : mov edx, dword ptr [rsi + 5] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a6134 : mov edx, dword ptr [rsi + 5] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000aa024 : mov edx, dword ptr [rsi + 5] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x000000000015b191 : mov edx, dword ptr [rsi + 5] ; mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a7794 : mov edx, dword ptr [rsi + 6] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a85d4 : mov edx, dword ptr [rsi + 6] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a6144 : mov edx, dword ptr [rsi + 6] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000aa044 : mov edx, dword ptr [rsi + 6] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x000000000015b121 : mov edx, dword ptr [rsi + 6] ; mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a7733 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a8573 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a6113 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a9fe3 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a77b4 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a85f4 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a6154 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000000aa064 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x000000000015b0b1 : mov edx, dword ptr [rsi + 7] ; mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000bb63e : mov edx, dword ptr [rsi + 8] ; cmp dword ptr [rdi + 8], edx ; jne 0xbb626 ; ret
0x000000000012698f : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi + rdx + 8], r9 ; mov qword ptr [rdi + rdx + 0x10], r10 ; ret
0x00000000000a7753 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a8593 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a6123 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000aa003 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a8554 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a7714 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a6104 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a9fc4 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000015ab61 : mov edx, dword ptr [rsi - 0xa] ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015aae1 : mov edx, dword ptr [rsi - 0xb] ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015aa61 : mov edx, dword ptr [rsi - 0xc] ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015a9d1 : mov edx, dword ptr [rsi - 0xd] ; mov rcx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015a941 : mov edx, dword ptr [rsi - 0xe] ; mov rcx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015a8b1 : mov edx, dword ptr [rsi - 0xf] ; mov rcx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001554e1 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000001556c1 : mov edx, dword ptr [rsi - 3] ; mov cx, word ptr [rsi - 2] ; mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x00000000001558a0 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001552d8 : mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0x11], r11 ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001554b8 : mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0x12], r11 ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155698 : mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0x13], r11 ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155878 : mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0x14], r11 ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001554d4 : mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001556b4 : mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155894 : mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001552f4 : mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155aa0 : mov edx, dword ptr [rsi - 5] ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155ca0 : mov edx, dword ptr [rsi - 6] ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155ea0 : mov edx, dword ptr [rsi - 7] ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155115 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155a69 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 0x15], r11 ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155c69 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 0x16], r11 ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155e69 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 0x17], r11 ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001550f9 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 0x18], r10 ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155a85 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155c85 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155e85 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155131 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000f8065 : mov edx, dword ptr [rsi - 8] ; popcnt rdx, rdx ; add eax, edx ; cmp rdi, rsi ; ja 0xf8070 ; ret
0x000000000015abe1 : mov edx, dword ptr [rsi - 9] ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000a76a0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a84d0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a60a0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000a9f40 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a76f1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a8521 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a60e1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a9f91 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000a7681 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a84a1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a6081 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000a9f11 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000001226d4 : mov edx, dword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x0000000000145d11 : mov edx, dword ptr [rsp + 0x18] ; mov esi, 0x40 ; mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000000c9848 : mov edx, dword ptr [rsp + 0x28] ; mov rdi, qword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000024faf : mov edx, dword ptr [rsp + 0x30] ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000000238b5 : mov edx, dword ptr [rsp + 0x38] ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000027db1 : mov edx, dword ptr [rsp + 0x38] ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000000241ad : mov edx, dword ptr [rsp + 0x48] ; mov rsi, qword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call r15
0x0000000000024bd0 : mov edx, dword ptr [rsp + 0x48] ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000023c3a : mov edx, dword ptr [rsp + 0x48] ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000088479 : mov edx, dword ptr [rsp + 0x68] ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000001304e7 : mov edx, dword ptr [rsp + 8] ; mov rdx, qword ptr [rdx + 0x38] ; test rdx, rdx ; je 0x130509 ; mov rdi, rbp ; call rdx
0x00000000000391f1 : mov edx, dword ptr [rsp + 8] ; mov rsi, qword ptr [r15] ; mov rdi, qword ptr [r12] ; call r14
0x00000000000393f8 : mov edx, dword ptr [rsp + 8] ; mov rsi, r15 ; mov rdi, r12 ; call r14
0x000000000010081e : mov edx, eax ; jne 0x100815 ; mov r9, rcx ; mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x00000000001142a7 : mov edx, eax ; mov rdi, r14 ; xor eax, eax ; call 0x1105a9
0x000000000013da3a : mov edx, ebp ; mov rax, qword ptr [rax + 0x18] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000000ad462 : mov edx, ebp ; mov rdi, rbp ; call rbx
0x000000000003864c : mov edx, ebp ; mov rsi, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call r15
0x0000000000037617 : mov edx, ebp ; mov rsi, r12 ; mov rdi, qword ptr [rsp + 0x18] ; call r15
0x00000000000f541f : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call 0xf169a
0x0000000000037641 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000131b93 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000715ce : mov edx, ebp ; mov rsi, r12 ; mov rdi, rsp ; call 0x4d89a
0x000000000008ac77 : mov edx, ebp ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000003765c : mov edx, ebp ; mov rsi, rbx ; mov rdi, r12 ; call r15
0x000000000013d1e2 : mov edx, ebx ; mov rax, qword ptr [rax + 0x10] ; add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000131a86 : mov edx, ebx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000038044 : mov edx, ebx ; mov rsi, r13 ; mov rdi, r12 ; call r15
0x0000000000076fd7 : mov edx, edi ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000003a8c1 : mov edx, edi ; mov rax, rdi ; sar rdx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x0000000000075112 : mov edx, edi ; mov rdi, r12 ; call 0x913b7
0x000000000008a446 : mov edx, edi ; mov rdi, r8 ; call rax
0x000000000011f6bf : mov edx, edi ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000091848 : mov edx, edi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000013d245 : mov edx, edi ; xor eax, eax ; mov dword ptr [rsp], 2 ; mov rdi, rsp ; call rdx
0x000000000012515e : mov edx, edx ; mov qword ptr [r14 + 8], rax ; mov rdi, rax ; call 0x9139b
0x000000000002d9e2 : mov edx, esi ; mov eax, 0xffffffff ; shr edx, cl ; cmp edx, dword ptr [rdi + 4] ; jb 0x2da07 ; ret
0x00000000000ad722 : mov edx, esi ; mov rdi, rbp ; call rbx
0x00000000000c5181 : mov edx, esi ; mov rsi, qword ptr [rdi + rax*8] ; mov rdi, rbp ; call 0x913bb
0x00000000000ad5e7 : mov edx, esp ; lea r9, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rbx
0x00000000000ad31e : mov edx, esp ; lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x0000000000103d72 : mov edx, esp ; mov esi, 2 ; mov rdi, rbx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; jmp rax
0x0000000000089f26 : mov edx, esp ; mov rdi, r15 ; call rax
0x00000000001b9264 : mov es, word ptr [rcx*4 + 0x45068c05] ; add dword ptr [rdi], 3 ; pop rbp ; add dword ptr [rdx], ecx ; ret
0x00000000001adcbc : mov es, word ptr [rcx*4 + 0x48068c05] ; add dword ptr [rdi], 2 ; cwde ; ret
0x00000000001a8d5c : mov es, word ptr [rcx*4 + 0x4c068c05] ; add dword ptr [rdi], 0x7b ; ret
0x0000000000114505 : mov es, word ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000007bd42 : mov esi, 0x2c ; mov rdi, r15 ; call 0x97fca
0x0000000000145d15 : mov esi, 0x40 ; mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000000ac59e : mov esi, 0x48000000 ; lea eax, dword ptr [rdi - 0x10] ; ret
0x000000000016c3a4 : mov esi, 0x566f0ff3 ; mov esi, 0xf66beb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018335a : mov esi, 0x5fd2fe07 ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000000a0b6e : mov esi, 0x66000000 ; pmovmskb eax, mm1 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000d80db : mov esi, 0x7f80c031 ; add byte ptr gs:[rdi], cl ; xchg eax, ebp ; rol byte ptr [rcx], 0xc0 ; ret
0x0000000000112a3d : mov esi, 0x8b4864d1 ; xor byte ptr [rdi], cl ; mov esi, 0xbe0f48cb ; ret
0x0000000000139df5 : mov esi, 0xa ; mov rdi, rax ; lea r9, qword ptr [rsp + 0x14] ; call qword ptr [r10]
0x0000000000185e7d : mov esi, 0xbf68fffc ; cld ; dec dword ptr [rax] ; scasd eax, dword ptr [rdi] ; cld ; lcall ptr [rax] ; ret 0xfffc
0x000000000010a45e : mov esi, 0xf0007e7 ; mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000016c3a9 : mov esi, 0xf66beb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000104d70 : mov esi, 1 ; mov rdi, r12 ; call rbx
0x0000000000104c3c : mov esi, 1 ; mov rdi, r13 ; call rbx
0x0000000000104bb4 : mov esi, 1 ; mov rdi, r14 ; call rbx
0x000000000012eef0 : mov esi, 1 ; mov rdi, r15 ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x0000000000104ffa : mov esi, 1 ; mov rdi, rbp ; call rbx
0x000000000006da73 : mov esi, 1 ; mov rdi, rbx ; call r8
0x000000000006d76c : mov esi, 1 ; mov rdi, rbx ; call rax
0x0000000000104fee : mov esi, 2 ; mov rdi, r12 ; call rbx
0x0000000000104d61 : mov esi, 2 ; mov rdi, r13 ; call rbx
0x000000000012f0b8 : mov esi, 2 ; mov rdi, r13 ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x0000000000104c2d : mov esi, 2 ; mov rdi, r14 ; call rbx
0x0000000000104ba5 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x00000000001397c0 : mov esi, 2 ; mov rdi, rax ; lea r9, qword ptr [rsp + 0x14] ; call qword ptr [r10]
0x0000000000103d74 : mov esi, 2 ; mov rdi, rbx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; jmp rax
0x000000000010556c : mov esi, 3 ; mov rdi, r12 ; call rbx
0x00000000001055cb : mov esi, 3 ; mov rdi, r13 ; call rbx
0x000000000010564b : mov esi, 3 ; mov rdi, r14 ; call rbx
0x000000000010574b : mov esi, 3 ; mov rdi, r15 ; call rbx
0x000000000013a969 : mov esi, 3 ; mov rdi, r15 ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x00000000001398c0 : mov esi, 3 ; mov rdi, rax ; lea r9, qword ptr [rsp + 0x14] ; call qword ptr [r10]
0x0000000000139c4b : mov esi, 4 ; lea rdx, qword ptr [rip + 0x3609] ; mov rdi, rbx ; call qword ptr [rax]
0x000000000012f192 : mov esi, 4 ; mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000139a1b : mov esi, 6 ; mov rdi, rax ; lea r9, qword ptr [rsp + 0x14] ; call qword ptr [r10]
0x0000000000139b5b : mov esi, 7 ; mov rdi, rax ; lea r9, qword ptr [rsp + 0x14] ; call qword ptr [r10]
0x0000000000139d01 : mov esi, 8 ; mov rdi, rax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x00000000001396ce : mov esi, 9 ; mov rdi, rax ; call qword ptr [r10]
0x00000000001046a9 : mov esi, dword ptr [rax] ; mov rdi, qword ptr [rbp - 0x40] ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000012eb9d : mov esi, dword ptr [rbp - 0x90] ; mov rdi, qword ptr [rbx] ; mov rax, qword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x000000000010431c : mov esi, dword ptr [rbx] ; mov rdi, qword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000355e0 : mov esi, dword ptr [rdi + 0x20] ; mov r15, qword ptr [rdi + 0x28] ; mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x00000000000c5184 : mov esi, dword ptr [rdi + rax*8] ; mov rdi, rbp ; call 0x913b8
0x00000000000391f6 : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [r12] ; call r14
0x000000000016dcbc : mov esi, dword ptr [rsi] ; mov cx, word ptr [rcx - 2] ; mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x00000000000914c3 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000016dcaa : mov esi, dword ptr [rsi] ; mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000000914b4 : mov esi, dword ptr [rsi] ; mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000016dc97 : mov esi, dword ptr [rsi] ; mov rcx, qword ptr [rcx - 8] ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000007da76 : mov esi, dword ptr [rsp + 0x10] ; mov rdi, qword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000003864f : mov esi, dword ptr [rsp + 0x10] ; mov rdi, r12 ; call r15
0x000000000012e718 : mov esi, dword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x000000000008822a : mov esi, dword ptr [rsp + 0x18] ; add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x00000000000ad45d : mov esi, dword ptr [rsp + 0x18] ; mov rdx, r13 ; mov rdi, rbp ; call rbx
0x00000000000ad71d : mov esi, dword ptr [rsp + 0x18] ; mov rdx, r14 ; mov rdi, rbp ; call rbx
0x0000000000023a1f : mov esi, dword ptr [rsp + 0x28] ; mov rdi, qword ptr [rsp + 0x20] ; call r14
0x00000000000238ba : mov esi, dword ptr [rsp + 0x28] ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x00000000000877f1 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, r12 ; call rax
0x000000000012fbd8 : mov esi, dword ptr [rsp + 0x2a00] ; mov rdi, rbx ; mov rcx, qword ptr [rsp] ; call rcx
0x000000000013846b : mov esi, dword ptr [rsp + 0x30] ; mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x00000000000241b2 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call r15
0x00000000000243e3 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000000bc1a0 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000134df3 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, r12 ; mov rcx, qword ptr [rsp + 0x30] ; call rcx
0x0000000000023f7d : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000023c3f : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x000000000002534c : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x000000000002667b : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000027db6 : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000025cdd : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000002583c : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000013500d : mov esi, dword ptr [rsp + 0x50] ; mov rdi, r12 ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x000000000007d3a1 : mov esi, dword ptr [rsp + 0xc] ; mov rdi, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000001226d9 : mov esi, dword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x0000000000145c1f : mov esi, eax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000012e649 : mov esi, ebp ; mov rcx, rbx ; add rdi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000013079c : mov esi, ebp ; mov rcx, rbx ; add rdi, 0x23b0 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000001307e2 : mov esi, ebp ; mov rcx, rbx ; pop rbx ; pop rbp ; add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x00000000000acc56 : mov esi, ebp ; mov rdi, qword ptr [r12] ; lea r9, qword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000003926f : mov esi, ebp ; mov rdi, qword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x0000000000038047 : mov esi, ebp ; mov rdi, r12 ; call r15
0x000000000008b041 : mov esi, ebp ; mov rdi, r12 ; call rax
0x0000000000037b91 : mov esi, ebp ; mov rdi, r14 ; mov rdx, rbp ; call r15
0x00000000000881cb : mov esi, ebp ; mov rdi, rax ; mov rbx, rax ; call 0x844da
0x000000000013ddae : mov esi, ebp ; mov rdi, rbp ; mov edx, 0xffffffff ; xor eax, eax ; call r8
0x000000000013dd62 : mov esi, ebp ; mov rdi, rbp ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x000000000008a193 : mov esi, ebp ; mov rdi, rbx ; call rax
0x000000000003765f : mov esi, ebx ; mov rdi, r12 ; call r15
0x000000000013b2ad : mov esi, ebx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000013d14b : mov esi, ebx ; mov rdi, r15 ; call r14
0x0000000000089ae7 : mov esi, ebx ; mov rdi, rax ; call rcx
0x000000000013e86e : mov esi, ebx ; mov rdi, rbp ; call rcx
0x00000000000c519d : mov esi, ebx ; mov rdi, rbp ; mov rdx, r14 ; mov qword ptr [rsp + 0x10], r11 ; call 0x913bf
0x0000000000057222 : mov esi, edi ; mov dword ptr [rbp - 0x510], r11d ; mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x0000000000146168 : mov esi, edi ; mov rdi, qword ptr [rsp] ; mov rax, qword ptr [rax + 0x128] ; jmp rax
0x00000000000393fd : mov esi, edi ; mov rdi, r12 ; call r14
0x000000000004b85c : mov esi, edi ; mov rdi, r14 ; call rax
0x000000000012ccc1 : mov esi, edi ; mov rdi, rbx ; mov qword ptr [rsp], rax ; mov rcx, rax ; call r12
0x000000000013565a : mov esi, edx ; add rdi, 0x10 ; jmp rcx
0x000000000013567a : mov esi, edx ; mov dword ptr [rdi + 0x10], 2 ; add rdi, 0x10 ; jmp rcx
0x000000000013812a : mov esi, edx ; mov dword ptr [rdi + 0x58], 2 ; add rdi, 0x58 ; jmp rcx
0x000000000013784a : mov esi, edx ; mov dword ptr [rdi + 0x68], 2 ; add rdi, 0x68 ; jmp rcx
0x00000000000c5a68 : mov esi, edx ; movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x000000000013e6b9 : mov esi, esi ; mov dword ptr [rdi + 0x28], eax ; mov rax, qword ptr [rdi + 0x18] ; add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000008ac7a : mov esi, esi ; mov rdi, r13 ; call rax
0x000000000013e998 : mov esi, esi ; mov rdi, rbp ; call r12
0x0000000000134b44 : mov esi, esi ; movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x000000000003761a : mov esi, esp ; mov rdi, qword ptr [rsp + 0x18] ; call r15
0x00000000000721b0 : mov esi, esp ; mov rdi, r15 ; call 0x7e417
0x0000000000088e4d : mov esi, esp ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000000f5422 : mov esi, esp ; mov rdi, rbp ; call 0xf1697
0x0000000000037644 : mov esi, esp ; mov rdi, rbp ; call r15
0x000000000008847e : mov esi, esp ; mov rdi, rbp ; call rax
0x0000000000130e25 : mov esi, esp ; mov rdi, rbx ; call qword ptr [rax]
0x000000000012cdd3 : mov esi, esp ; mov rdi, rbx ; mov rcx, r13 ; call r15
0x000000000007346c : mov esi, esp ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000070ebf : mov esi, esp ; mov rdi, rbx ; xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000000715d1 : mov esi, esp ; mov rdi, rsp ; call 0x4d897
0x000000000013b2a2 : mov esi, esp ; nop dword ptr [rax] ; mov rax, qword ptr [r15 + 8] ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x00000000000721af : mov esi, r12d ; mov rdi, r15 ; call 0x7e418
0x000000000007346b : mov esi, r12d ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000a5f95 : mov esp, 0x1d8d4cd2 ; stosb byte ptr [rdi], al ; dec dword ptr [rip + 0xc634900] ; xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000193c64 : mov esp, 0x2cfffc6d ; insd dword ptr [rdi], dx ; cld ; lcall ptr [rsp + rbp*2 + 0x6c2cfffc] ; cld ; call rdx
0x00000000001983d4 : mov esp, 0x40001e2 ; scasd eax, dword ptr [rdi] ; clc ; jmp rsp
0x00000000001224f8 : mov esp, 0x48ffefd4 ; mov edi, dword ptr [rbx + 0x48] ; test rdi, rdi ; jne 0x1224fe ; pop rbx ; ret
0x000000000016c5a4 : mov esp, 0x4e6f0ff3 ; mov esp, 0xf66bcb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ee60 : mov esp, 0xa8000000 ; jne 0x16ef40 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000090e11 : mov esp, 0xc22948c0 ; jbe 0x90e5a ; add rax, rdi ; ret
0x0000000000090e21 : mov esp, 0xc22948c0 ; jbe 0x90e5c ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000090e31 : mov esp, 0xc22948c0 ; jbe 0x90e5c ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000090e41 : mov esp, 0xc22948c0 ; jbe 0x90e5c ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000090b9b : mov esp, 0xc22948c0 ; jbe 0x90e61 ; add rax, rdi ; add rax, rcx ; ret
0x0000000000198e54 : mov esp, 0xc4000231 ; insd dword ptr [rdi], dx ; cli ; call rsp
0x00000000000e7872 : mov esp, 0xc824 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x00000000000ab044 : mov esp, 0xc83948ca ; ja 0xab06e ; sub rdi, 0x10 ; add rax, rdi ; ret
0x000000000008dbc3 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x00000000000aaf78 : mov esp, 0xd03948d2 ; ja 0xab071 ; add rax, rdi ; add rax, rcx ; ret
0x0000000000149782 : mov esp, 0xd32949d2 ; jbe 0x1497a5 ; movzx ecx, byte ptr [rsi + rdx] ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000153652 : mov esp, 0xd32949d2 ; jbe 0x153675 ; movzx ecx, byte ptr [rsi + rdx] ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000008f6a2 : mov esp, 0xd32949d2 ; jbe 0x8f6c5 ; movzx ecx, byte ptr [rsi + rdx] ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x00000000001aa814 : mov esp, 0xd800010e ; stc ; jmp qword ptr [rdi]
0x00000000001ae614 : mov esp, 0xd800014c ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x000000000016c5a9 : mov esp, 0xf66bcb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000d0939 : mov esp, dword ptr [rdi + 0x10] ; xor eax, eax ; jmp 0xd04ee
0x000000000008a188 : mov qword ptr [r12], rax ; je 0x8a270 ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000008aeaa : mov qword ptr [r12], rax ; je 0x8afa0 ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x0000000000089f1b : mov qword ptr [r13], rax ; je 0x8a020 ; mov rdx, r12 ; mov rdi, r15 ; call rax
0x000000000008b036 : mov qword ptr [r13], rax ; je 0x8b0d8 ; mov rsi, rbp ; mov rdi, r12 ; call rax
0x0000000000125160 : mov qword ptr [r14 + 8], rax ; mov rdi, rax ; call 0x91399
0x0000000000126887 : mov qword ptr [r9], rdi ; ret
0x0000000000073813 : mov qword ptr [rax + 0x40], rdx ; mov rdx, rdi ; jbe 0x73750 ; mov eax, dword ptr [rsi] ; jmp 0x737f6
0x000000000003a4e2 : mov qword ptr [rax + 8], rdi ; mov qword ptr [rax], 4 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000100770 : mov qword ptr [rax + 8], rdi ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000086825 : mov qword ptr [rax], rdi ; ret
0x00000000000fe46b : mov qword ptr [rax], rdx ; xor eax, eax ; cmp rdi, rdx ; ja 0xfe4ab ; ret
0x000000000008681b : mov qword ptr [rax], rsi ; mov rax, qword ptr [rip + 0x33a6bb] ; mov qword ptr [rax], rdi ; ret
0x000000000008a43b : mov qword ptr [rbp], rax ; je 0x8a620 ; mov rdx, r15 ; mov rdi, r8 ; call rax
0x000000000008b954 : mov qword ptr [rbx + 0x10], r12 ; mov qword ptr [rbx + 0x20], rax ; mov qword ptr [rbx + 8], rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008b958 : mov qword ptr [rbx + 0x20], rax ; mov qword ptr [rbx + 8], rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008b4ec : mov qword ptr [rbx + 0x40], r8 ; movsxd rdi, esi ; mov dword ptr [rbx + 0x30], eax ; mov qword ptr [rbx], rdi ; call rcx
0x000000000008b5a6 : mov qword ptr [rbx + 0x48], r9 ; mov qword ptr [rbx], rsi ; mov rdi, r9 ; call rcx
0x0000000000079ffd : mov qword ptr [rbx + 0xd8], rcx ; mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x00000000000c8565 : mov qword ptr [rbx + 8], rdi ; mov qword ptr [rbx + 0x18], rdx ; add rsp, 0xd0 ; pop rbx ; ret
0x000000000008b95c : mov qword ptr [rbx + 8], rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012ca33 : mov qword ptr [rbx], rax ; mov r8, rbp ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000012caa3 : mov qword ptr [rbx], rax ; xor r8d, r8d ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000008b4f6 : mov qword ptr [rbx], rdi ; call rcx
0x000000000008b5aa : mov qword ptr [rbx], rsi ; mov rdi, r9 ; call rcx
0x000000000004867c : mov qword ptr [rcx + rsi*8], rdi ; add rsi, 1 ; cmp rsi, rdx ; jne 0x48687 ; xor eax, eax ; ret
0x00000000000f7eea : mov qword ptr [rdi + 0x100], rdx ; ret
0x0000000000048f9e : mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000007d24a : mov qword ptr [rdi + 0x10], rax ; mov qword ptr [rdi + 0x18], rcx ; mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a78bc : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a870c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a78dc : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a624c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000ccf8f : mov qword ptr [rdi + 0x10], rcx ; mov rcx, qword ptr [rdi + 0x18] ; mov qword ptr [rdi + 0x18], rcx ; ret
0x00000000000a622c : mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000aa17c : mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a872f : mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a6f1f : mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000aa19f : mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a791f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a876f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a628f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000aa1df : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a793f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a878f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a62af : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000aa1ff : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x0000000000137902 : mov qword ptr [rdi + 0x10], rdx ; mov eax, 1 ; ret
0x00000000000a7900 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a8750 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a6270 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000aa1c0 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x000000000013e6ff : mov qword ptr [rdi + 0x18], rax ; mov eax, 1 ; ret
0x000000000007d222 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000079106 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000007d24e : mov qword ptr [rdi + 0x18], rcx ; mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000ccf97 : mov qword ptr [rdi + 0x18], rcx ; ret
0x000000000013e791 : mov qword ptr [rdi + 0x18], rdx ; mov eax, 1 ; ret
0x000000000013e6a0 : mov qword ptr [rdi + 0x18], rsi ; mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000013e83d : mov qword ptr [rdi + 0x18], rsi ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000013e6c5 : mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000013ee14 : mov qword ptr [rdi + 0x20], 0 ; mov qword ptr [rdi + 8], rax ; ret
0x00000000001381d7 : mov qword ptr [rdi + 0x20], rax ; mov qword ptr [rdi + 0x28], rdx ; mov eax, 1 ; ret
0x000000000013e839 : mov qword ptr [rdi + 0x20], rsi ; mov qword ptr [rdi + 0x18], rsi ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000001064a4 : mov qword ptr [rdi + 0x28], rdx ; mov byte ptr [rax], 0xa ; add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000010611a : mov qword ptr [rdi + 0x28], rdx ; mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001381db : mov qword ptr [rdi + 0x28], rdx ; mov eax, 1 ; ret
0x000000000013818f : mov qword ptr [rdi + 0x30], rax ; mov qword ptr [rdi + 0x38], rdx ; mov eax, 1 ; ret
0x0000000000138193 : mov qword ptr [rdi + 0x38], rdx ; mov eax, 1 ; ret
0x000000000007d21e : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000007d252 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000f7315 : mov qword ptr [rdi + 0x78], rdx ; mov rdx, qword ptr [rsi + 0x78] ; mov qword ptr [rdi + 0x80], rdx ; ret
0x00000000000f731d : mov qword ptr [rdi + 0x80], rdx ; ret
0x00000000000a787c : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a86cc : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a61ec : mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000aa13c : mov qword ptr [rdi + 0xe], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a789c : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a86ec : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a620c : mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000aa15c : mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x000000000015b357 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b2e7 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b277 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b207 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a777a : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a85ba : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000015b197 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a613a : mov qword ptr [rdi + 5], rdx ; ret
0x00000000000aa02a : mov qword ptr [rdi + 5], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a779a : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a85da : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000015b127 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a614a : mov qword ptr [rdi + 6], rdx ; ret
0x00000000000aa04a : mov qword ptr [rdi + 6], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a77ba : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a85fa : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000015b0b7 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a615a : mov qword ptr [rdi + 7], rdx ; ret
0x00000000000aa06a : mov qword ptr [rdi + 7], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x0000000000100787 : mov qword ptr [rdi + 8], 0 ; ret
0x000000000004888f : mov qword ptr [rdi + 8], r10 ; mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000048753 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000048f97 : mov qword ptr [rdi + 8], r8 ; shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000048f23 : mov qword ptr [rdi + 8], r9 ; ret
0x00000000001378fe : mov qword ptr [rdi + 8], rax ; mov qword ptr [rdi + 0x10], rdx ; mov eax, 1 ; ret
0x00000000000368a0 : mov qword ptr [rdi + 8], rax ; mov rax, qword ptr [rsi] ; and rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000036b90 : mov qword ptr [rdi + 8], rax ; mov rax, qword ptr [rsi] ; or rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000007d226 : mov qword ptr [rdi + 8], rax ; ret
0x000000000003af03 : mov qword ptr [rdi + 8], rdx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000007e4a7 : mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007994e : mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000003aef4 : mov qword ptr [rdi + 8], rdx ; ret
0x0000000000100777 : mov qword ptr [rdi + 8], rsi ; ret
0x00000000000494fc : mov qword ptr [rdi + r11*8 + 8], r9 ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000048927 : mov qword ptr [rdi + r8], rax ; sub r8, 8 ; cmp r8, 0xf8 ; jne 0x48931 ; mov rax, rdx ; ret
0x00000000000367c1 : mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x0000000000126997 : mov qword ptr [rdi + rdx + 0x10], r10 ; ret
0x0000000000126992 : mov qword ptr [rdi + rdx + 8], r9 ; mov qword ptr [rdi + rdx + 0x10], r10 ; ret
0x000000000009192a : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; ret
0x0000000000150c99 : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x00000000000914b6 : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x0000000000154fc4 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000155002 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000048e8e : mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000155177 : mov qword ptr [rdi - 0x11], r11 ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155273 : mov qword ptr [rdi - 0x11], r11 ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001551bf : mov qword ptr [rdi - 0x11], r11 ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155347 : mov qword ptr [rdi - 0x12], r11 ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155527 : mov qword ptr [rdi - 0x13], r11 ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155717 : mov qword ptr [rdi - 0x14], r11 ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001558e8 : mov qword ptr [rdi - 0x15], r11 ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155ae8 : mov qword ptr [rdi - 0x16], r11 ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155ce8 : mov qword ptr [rdi - 0x17], r11 ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000154fc0 : mov qword ptr [rdi - 0x18], r10 ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000154ffe : mov qword ptr [rdi - 0x18], r10 ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155173 : mov qword ptr [rdi - 0x19], r10 ; mov qword ptr [rdi - 0x11], r11 ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015526f : mov qword ptr [rdi - 0x19], r10 ; mov qword ptr [rdi - 0x11], r11 ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001551bb : mov qword ptr [rdi - 0x19], r10 ; mov qword ptr [rdi - 0x11], r11 ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155343 : mov qword ptr [rdi - 0x1a], r10 ; mov qword ptr [rdi - 0x12], r11 ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155523 : mov qword ptr [rdi - 0x1b], r10 ; mov qword ptr [rdi - 0x13], r11 ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155713 : mov qword ptr [rdi - 0x1c], r10 ; mov qword ptr [rdi - 0x14], r11 ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001558e4 : mov qword ptr [rdi - 0x1d], r10 ; mov qword ptr [rdi - 0x15], r11 ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155ae4 : mov qword ptr [rdi - 0x1e], r10 ; mov qword ptr [rdi - 0x16], r11 ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155ce4 : mov qword ptr [rdi - 0x1f], r10 ; mov qword ptr [rdi - 0x17], r11 ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000154fbc : mov qword ptr [rdi - 0x20], r9 ; mov qword ptr [rdi - 0x18], r10 ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000154ffa : mov qword ptr [rdi - 0x20], r9 ; mov qword ptr [rdi - 0x18], r10 ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015534b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ab67 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015552b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015aae7 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015571b : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015aa67 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001558ec : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015a9d8 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000155aec : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015a948 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000155cec : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015a8b8 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000a70a0 : mov qword ptr [rdi - 1], rdx ; ret
0x0000000000048e87 : mov qword ptr [rdi - 8], r8 ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000048e19 : mov qword ptr [rdi - 8], r9 ; ret
0x0000000000154fc8 : mov qword ptr [rdi - 8], rcx ; ret
0x0000000000155006 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000015517b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155277 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001551c3 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015abe7 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000100780 : mov qword ptr [rdi], 0 ; mov qword ptr [rdi + 8], 0 ; ret
0x000000000005684d : mov qword ptr [rdi], r10 ; ret
0x00000000000559c5 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000558f3 : mov qword ptr [rdi], r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000048e13 : mov qword ptr [rdi], r8 ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000048f1d : mov qword ptr [rdi], r8 ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000048de8 : mov qword ptr [rdi], r9 ; ret
0x000000000003aeeb : mov qword ptr [rdi], rax ; cmovbe rdx, r8 ; xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000004a5da : mov qword ptr [rdi], rax ; mov dword ptr [rdx], 0xffffc002 ; mov eax, 1 ; ret
0x000000000004a5b5 : mov qword ptr [rdi], rax ; mov eax, 0xffffc002 ; sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000100774 : mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000004aaca : mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x0000000000036362 : mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000a7706 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a8536 : mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a6dc6 : mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a9fa6 : mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a7736 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a8576 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a6116 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a9fe6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a7756 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a8596 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a6126 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000aa006 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000568a0 : mov qword ptr [rdi], rcx ; mov eax, 0xffffffff ; ret
0x00000000000a7777 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a85b7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a6137 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000aa027 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a7797 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a85d7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a6147 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000aa047 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a77b7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a85f7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a6157 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000000aa067 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a8557 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a7717 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a6107 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a9fc7 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000009192f : mov qword ptr [rdi], rcx ; ret
0x00000000000a69b6 : mov qword ptr [rdi], rcx ; sub r8, 9 ; lea rdi, qword ptr [rdi + 9] ; jne 0xa7181 ; ret
0x0000000000150c9e : mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x00000000000a76f3 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a8523 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a70c0 : mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a70e0 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a70f0 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a7100 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a7110 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a70d0 : mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a050f : mov qword ptr [rdi], rdx ; ret
0x00000000000a6993 : mov qword ptr [rdi], rdx ; sub r8, 8 ; lea rdi, qword ptr [rdi + 8] ; jne 0xa7181 ; ret
0x00000000000a9f93 : mov qword ptr [rdi], rdx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x000000000004a535 : mov qword ptr [rdi], rsi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000016dc9d : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000004a51a : mov qword ptr [rdi], rsi ; ret
0x000000000007a004 : mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x0000000000130e7b : mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000016400a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000016402a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000016404a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x0000000000163f3a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000060ed1 : mov qword ptr [rdx + 8], rdi ; mov rsi, qword ptr [rbp - 0x660] ; xor edx, edx ; jmp 0x5d0fd
0x0000000000134b90 : mov qword ptr [rdx + 8], rdi ; ret
0x0000000000163fc3 : mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000163fd3 : mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000163fe3 : mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000163ff3 : mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000164003 : mov qword ptr [rdx], rax ; mov rax, qword ptr [rcx + 5] ; mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x0000000000164023 : mov qword ptr [rdx], rax ; mov rax, qword ptr [rcx + 6] ; mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x0000000000164043 : mov qword ptr [rdx], rax ; mov rax, qword ptr [rcx + 7] ; mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x0000000000163f33 : mov qword ptr [rdx], rax ; mov rax, qword ptr [rcx + 8] ; mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000163ee3 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000000e8f5a : mov qword ptr [rdx], rdi ; ret
0x0000000000134b8d : mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x00000000000f7e00 : mov qword ptr [rsi + 0x70], rdx ; mov rax, qword ptr [rdi + 0x100] ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000f7283 : mov qword ptr [rsi + 0x70], rdx ; mov rax, qword ptr [rdi + 0x80] ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x000000000013e78e : mov qword ptr [rsi], rax ; mov qword ptr [rdi + 0x18], rdx ; mov eax, 1 ; ret
0x000000000007fa2b : mov qword ptr [rsi], rdi ; ret
0x000000000011b1c0 : mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00000000000e4c57 : mov qword ptr [rsp + 0x28], rdi ; add rax, rdx ; jmp rax
0x0000000000084178 : mov qword ptr [rsp + 8], rcx ; mov rdi, r14 ; mov qword ptr [rsp + 0x10], r14 ; call qword ptr [rax]
0x00000000000757be : mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x000000000007a352 : mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x00000000000914b5 : mov qword ptr ss:[rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000012698e : mov r10, qword ptr [rsi + 8] ; mov qword ptr [rdi + rdx + 8], r9 ; mov qword ptr [rdi + rdx + 0x10], r10 ; ret
0x0000000000155110 : mov r11, qword ptr [rsi - 0x10] ; mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000355df : mov r14, qword ptr [rdi + 0x20] ; mov r15, qword ptr [rdi + 0x28] ; mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000012e894 : mov r14, rdi ; push r12 ; push rbp ; mov r13, rsi ; push rbx ; sub rsp, 0x60 ; call 0x13ab10
0x000000000013b2a1 : mov r14, rsp ; nop dword ptr [rax] ; mov rax, qword ptr [r15 + 8] ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x00000000000355e3 : mov r15, qword ptr [rdi + 0x28] ; mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x0000000000048081 : mov r8, qword ptr [rdi + 0x28] ; mov r9, qword ptr [rdi + 0x30] ; mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x00000000000f5418 : mov r8, r15 ; mov rcx, r14 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call 0xf16a1
0x000000000013a4b5 : mov r8, r15 ; mov rcx, r14 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000012ca36 : mov r8, rbp ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000013a3b6 : mov r8, rbx ; mov ecx, r12d ; mov rdi, rbp ; call 0x5665b
0x000000000013a3fe : mov r8, rbx ; mov rcx, r12 ; mov rdi, rbp ; xor eax, eax ; call 0x5665d
0x000000000011c972 : mov r8d, 0xffffffff ; mov rdi, rax ; jmp 0x11c84f
0x00000000000ac6dc : mov r8d, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0xac6ba ; ret
0x0000000000048085 : mov r9, qword ptr [rdi + 0x30] ; mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000012698b : mov r9, qword ptr [rsi] ; mov r10, qword ptr [rsi + 8] ; mov qword ptr [rdi + rdx + 8], r9 ; mov qword ptr [rdi + rdx + 0x10], r10 ; ret
0x00000000000ad457 : mov r9, qword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 0x18] ; mov rdx, r13 ; mov rdi, rbp ; call rbx
0x00000000000ad717 : mov r9, qword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 0x18] ; mov rdx, r14 ; mov rdi, rbp ; call rbx
0x0000000000027a84 : mov r9, qword ptr [rsp + 0x20] ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000025346 : mov r9, qword ptr [rsp + 0x20] ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000024d62 : mov r9, qword ptr [rsp + 0x28] ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000028189 : mov r9, qword ptr [rsp + 0x28] ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000023a19 : mov r9, qword ptr [rsp + 0x30] ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, qword ptr [rsp + 0x20] ; call r14
0x0000000000023f77 : mov r9, qword ptr [rsp + 0x30] ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000026c1a : mov r9, qword ptr [rsp + 0x30] ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000025cd7 : mov r9, qword ptr [rsp + 0x38] ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000000243dd : mov r9, qword ptr [rsp + 0x40] ; mov rsi, qword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000100822 : mov r9, rcx ; mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x00000000000d607a : mov r9, rdi ; xor eax, eax ; mov rdx, r8 ; jmp 0xd60a1
0x00000000000adb24 : mov r9d, dword ptr [rdi + rdx*4] ; test r9d, r9d ; jne 0xadaed ; mov rax, rdx ; ret
0x00000000000363dd : mov rax, -2 ; rol rax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000013dec4 : mov rax, qword ptr [r12 + 8] ; lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x00000000000204a6 : mov rax, qword ptr [r13 + 0x18] ; test rax, rax ; je 0x204c0 ; mov rdi, rbp ; call rax
0x0000000000137f70 : mov rax, qword ptr [r14 + 0x70] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x137f92 ; mov rdi, r12 ; call rax
0x000000000013b2a8 : mov rax, qword ptr [r15 + 8] ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000013d1e4 : mov rax, qword ptr [rax + 0x10] ; add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000013da3c : mov rax, qword ptr [rax + 0x18] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000012df6c : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12df86 ; mov rdi, rsp ; call rax
0x000000000012e057 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12e071 ; mov rdi, rsp ; call rax
0x000000000012e912 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12e92c ; mov rdi, rbp ; call rax
0x000000000012f975 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12f98f ; mov rdi, rbx ; call rax
0x000000000012fbf0 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12faa0 ; mov rdi, rbx ; call rax
0x000000000012fce7 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12fd01 ; mov rdi, rbx ; call rax
0x0000000000134aeb : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x134b0d ; lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x00000000001354e3 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x1354fd ; mov rdi, r12 ; call rax
0x00000000001356b4 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x1356d0 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000136a69 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x136998 ; mov rdi, rbx ; call rax
0x00000000001369a0 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x1369ba ; mov rdi, r12 ; call rax
0x000000000013699f : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x1369bb ; mov rdi, r12 ; call rax
0x0000000000136b91 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x136bab ; mov rdi, rbp ; call rax
0x0000000000136db1 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x136dcb ; mov rdi, rbp ; call rax
0x0000000000137888 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x1378a4 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000137f74 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x137f8e ; mov rdi, r12 ; call rax
0x00000000001382e8 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x138304 ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000013b874 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x13b890 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013bf8d : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x13bfa9 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000002e051 : mov rax, qword ptr [rax + 0x40] ; movzx eax, word ptr [rax + rdi*2 + 0x100] ; and eax, esi ; ret
0x000000000002de81 : mov rax, qword ptr [rax + 0x48] ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002de61 : mov rax, qword ptr [rax + 0x58] ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002de84 : mov rax, qword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002d98e : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x00000000000c800a : mov rax, qword ptr [rax] ; lea rdx, qword ptr [rdi + rdi*8] ; lea rax, qword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000002e04e : mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x40] ; movzx eax, word ptr [rax + rdi*2 + 0x100] ; and eax, esi ; ret
0x000000000002de7e : mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x48] ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002de5e : mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x58] ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002d98b : mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000002de7b : mov rax, qword ptr [rax] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x48] ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002de5b : mov rax, qword ptr [rax] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x58] ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002dd9b : mov rax, qword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002ddbb : mov rax, qword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002dcfb : mov rax, qword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002dd7b : mov rax, qword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002dc9b : mov rax, qword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002dd3b : mov rax, qword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002dcdb : mov rax, qword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002dd1b : mov rax, qword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000002de3b : mov rax, qword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000002dcbb : mov rax, qword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 2 ; movzx eax, ax ; ret
0x000000000002dd5b : mov rax, qword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 4 ; movzx eax, ax ; ret
0x000000000002dc7b : mov rax, qword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 8 ; movzx eax, ax ; ret
0x0000000000114eab : mov rax, qword ptr [rax] ; test rax, rax ; je 0x114edf ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x0000000000073467 : mov rax, qword ptr [rbp + 0x18] ; mov esi, r12d ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000001356b0 : mov rax, qword ptr [rbp + 0x18] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x1356d4 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013b870 : mov rax, qword ptr [rbp + 0x18] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x13b894 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013bf89 : mov rax, qword ptr [rbp + 0x18] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x13bfad ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000000738a3 : mov rax, qword ptr [rbp + 0x20] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000007366c : mov rax, qword ptr [rbp + 0x28] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000070bac : mov rax, qword ptr [rbp + 0x48] ; add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000007d39d : mov rax, qword ptr [rbx + 0x18] ; mov esi, dword ptr [rsp + 0xc] ; mov rdi, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000012e90e : mov rax, qword ptr [rbx + 0x20] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12e930 ; mov rdi, rbp ; call rax
0x00000000001382e4 : mov rax, qword ptr [rbx + 0x60] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x138308 ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x0000000000137884 : mov rax, qword ptr [rbx + 0x70] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x1378a8 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x000000000013d480 : mov rax, qword ptr [rbx + 8] ; lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000130e20 : mov rax, qword ptr [rbx + 8] ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000164006 : mov rax, qword ptr [rcx + 5] ; mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x0000000000164026 : mov rax, qword ptr [rcx + 6] ; mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x0000000000164046 : mov rax, qword ptr [rcx + 7] ; mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x0000000000163f36 : mov rax, qword ptr [rcx + 8] ; mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000163fc0 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000163fd0 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000163fe0 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000163ff0 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000164000 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, qword ptr [rcx + 5] ; mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x0000000000164020 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, qword ptr [rcx + 6] ; mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x0000000000164040 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, qword ptr [rcx + 7] ; mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x0000000000163f30 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, qword ptr [rcx + 8] ; mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000163ee0 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000000f7e04 : mov rax, qword ptr [rdi + 0x100] ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000cd56c : mov rax, qword ptr [rdi + 0x10] ; test rax, rax ; je 0xcd583 ; call rax
0x000000000013e6be : mov rax, qword ptr [rdi + 0x18] ; add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000013eac2 : mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000013e660 : mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000002c351 : mov rax, qword ptr [rdi + 0x20] ; mov rbx, rdi ; test rax, rax ; je 0x2c36b ; call rax
0x00000000000c8e70 : mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000001721b7 : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x1721d0 ; call rax
0x000000000007f760 : mov rax, qword ptr [rdi + 0x28] ; cmp qword ptr [rdi + 0x10], rax ; cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000078d90 : mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000078c80 : mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000076860 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007d21a : mov rax, qword ptr [rdi + 0x48] ; mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000007f160 : mov rax, qword ptr [rdi + 0x68] ; ret
0x00000000000f7287 : mov rax, qword ptr [rdi + 0x80] ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000740d0 : mov rax, qword ptr [rdi + 0xa0] ; cmp qword ptr [rax + 0x30], 0 ; je 0x740ee ; ret
0x000000000007b510 : mov rax, qword ptr [rdi + 8] ; cmp rax, qword ptr [rdi + 0x10] ; jae 0x7b52d ; movzx eax, byte ptr [rax] ; ret
0x000000000007f276 : mov rax, qword ptr [rdi + 8] ; cmp rax, rdx ; jae 0x7f2ac ; movzx eax, byte ptr [rax] ; ret
0x000000000013d375 : mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000013db00 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000130d50 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013dd80 : mov rax, qword ptr [rdi + 8] ; mov qword ptr [rsp + 8], r8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013d468 : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000012eba6 : mov rax, qword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x000000000016c810 : mov rax, qword ptr [rdi - 8] ; cmp rcx, rax ; jne 0x16ccd2 ; xor eax, eax ; ret
0x000000000016d9e0 : mov rax, qword ptr [rdi - 8] ; cmp rcx, rax ; jne 0x16db12 ; xor eax, eax ; ret
0x000000000016cc92 : mov rax, qword ptr [rdi - 8] ; mov rcx, qword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x16ccd2 ; xor eax, eax ; ret
0x000000000016dad2 : mov rax, qword ptr [rdi - 8] ; mov rcx, qword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x16db12 ; xor eax, eax ; ret
0x000000000007ee6e : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000116e44 : mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x000000000002cb1c : mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000001378e0 : mov rax, qword ptr [rdx] ; bswap eax ; mov dword ptr [rdi + 0x54], eax ; mov eax, 1 ; ret
0x00000000001379b0 : mov rax, qword ptr [rdx] ; bswap eax ; mov dword ptr [rdi + 0x58], eax ; mov eax, 1 ; ret
0x00000000000e8f57 : mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x0000000000137980 : mov rax, qword ptr [rdx] ; sub eax, 1 ; bswap eax ; mov dword ptr [rdi + 0x48], eax ; mov eax, 1 ; ret
0x000000000008681e : mov rax, qword ptr [rip + 0x33a6bb] ; mov qword ptr [rax], rdi ; ret
0x000000000010cc98 : mov rax, qword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000010cd18 : mov rax, qword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000010ca18 : mov rax, qword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000010cc18 : mov rax, qword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000010c818 : mov rax, qword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000010cb18 : mov rax, qword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000010ca98 : mov rax, qword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000010c898 : mov rax, qword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000010c918 : mov rax, qword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 2 ; movzx eax, ax ; ret
0x000000000010cb98 : mov rax, qword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 4 ; movzx eax, ax ; ret
0x000000000010c798 : mov rax, qword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 8 ; movzx eax, ax ; ret
0x000000000002deb0 : mov rax, qword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000002df00 : mov rax, qword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 2 ; movzx eax, ax ; ret
0x000000000002dfa0 : mov rax, qword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 4 ; movzx eax, ax ; ret
0x000000000002dec0 : mov rax, qword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 8 ; movzx eax, ax ; ret
0x000000000002e020 : mov rax, qword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e030 : mov rax, qword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000368a4 : mov rax, qword ptr [rsi] ; and rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000036b94 : mov rax, qword ptr [rsi] ; or rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000136b8c : mov rax, qword ptr [rsp + 0x38] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x136bb0 ; mov rdi, rbp ; call rax
0x000000000013699b : mov rax, qword ptr [rsp + 0x48] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x1369bf ; mov rdi, r12 ; call rax
0x000000000012df67 : mov rax, qword ptr [rsp + 8] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12df8b ; mov rdi, rsp ; call rax
0x000000000012e052 : mov rax, qword ptr [rsp + 8] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x12e076 ; mov rdi, rsp ; call rax
0x000000000010422d : mov rax, qword ptr [rsp + 8] ; mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x0000000000131a80 : mov rax, qword ptr [rsp + 8] ; mov rdx, rbx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000002d98a : mov rax, qword ptr fs:[rax] ; mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000002dd9a : mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002ddba : mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002dcfa : mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002dd7a : mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002dc9a : mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002dd3a : mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002dcda : mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002dd1a : mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000002de3a : mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000002dcba : mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 2 ; movzx eax, ax ; ret
0x000000000002dd5a : mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 4 ; movzx eax, ax ; ret
0x000000000002dc7a : mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 8 ; movzx eax, ax ; ret
0x000000000003af00 : mov rax, r8 ; mov qword ptr [rdi + 8], rdx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000003a910 : mov rax, rdi ; cqo ; idiv rsi ; ret
0x0000000000100825 : mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x00000000000a0926 : mov rax, rdi ; mov byte ptr [rdi + 6], 0 ; ret
0x0000000000071d72 : mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000108ec0 : mov rax, rdi ; movzx edi, dil ; shr rax, 0xc ; xor al, al ; or eax, edi ; ret
0x0000000000071d8d : mov rax, rdi ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009042c : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007fe63 : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004aacd : mov rax, rdi ; ret
0x000000000011aec9 : mov rax, rdi ; sar rax, 6 ; ret
0x000000000003a8c3 : mov rax, rdi ; sar rdx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x0000000000165b5e : mov rax, rdi ; sub r8, 0x10 ; lea rcx, qword ptr [rdx + 0x10] ; jne 0x1660c1 ; ret
0x0000000000165e5c : mov rax, rdi ; sub r8, 0xa ; lea rcx, qword ptr [rdx + 0xa] ; jne 0x1660c1 ; ret
0x0000000000165e7c : mov rax, rdi ; sub r8, 0xb ; lea rcx, qword ptr [rdx + 0xb] ; jne 0x1660c1 ; ret
0x0000000000165e9c : mov rax, rdi ; sub r8, 0xc ; lea rcx, qword ptr [rdx + 0xc] ; jne 0x1660c1 ; ret
0x0000000000165ebe : mov rax, rdi ; sub r8, 0xd ; lea rcx, qword ptr [rdx + 0xd] ; jne 0x1660c1 ; ret
0x0000000000165ede : mov rax, rdi ; sub r8, 0xe ; lea rcx, qword ptr [rdx + 0xe] ; jne 0x1660c1 ; ret
0x0000000000165efe : mov rax, rdi ; sub r8, 0xf ; lea rcx, qword ptr [rdx + 0xf] ; jne 0x1660c1 ; ret
0x0000000000165d54 : mov rax, rdi ; sub r8, 1 ; lea rcx, qword ptr [rdx + 1] ; jne 0x1660c1 ; ret
0x0000000000165d76 : mov rax, rdi ; sub r8, 2 ; lea rcx, qword ptr [rdx + 2] ; jne 0x1660c1 ; ret
0x0000000000165d9c : mov rax, rdi ; sub r8, 3 ; lea rcx, qword ptr [rdx + 3] ; jne 0x1660c1 ; ret
0x0000000000165db4 : mov rax, rdi ; sub r8, 4 ; lea rcx, qword ptr [rdx + 4] ; jne 0x1660c1 ; ret
0x0000000000165dda : mov rax, rdi ; sub r8, 5 ; lea rcx, qword ptr [rdx + 5] ; jne 0x1660c1 ; ret
0x0000000000165dfc : mov rax, rdi ; sub r8, 6 ; lea rcx, qword ptr [rdx + 6] ; jne 0x1660c1 ; ret
0x0000000000165e1a : mov rax, rdi ; sub r8, 7 ; lea rcx, qword ptr [rdx + 7] ; jne 0x1660c1 ; ret
0x0000000000165af6 : mov rax, rdi ; sub r8, 8 ; lea rcx, qword ptr [rdx + 8] ; jne 0x1660c1 ; ret
0x0000000000165e3c : mov rax, rdi ; sub r8, 9 ; lea rcx, qword ptr [rdx + 9] ; jne 0x1660c1 ; ret
0x000000000004aa7d : mov rax, rsi ; cmovae rax, rdi ; ret
0x000000000007af78 : mov rbp, qword ptr [rdi + 0x90] ; pop rbx ; sub rbp, rax ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000037b8a : mov rbp, qword ptr [rsp + 0x50] ; nop ; mov rsi, r13 ; mov rdi, r14 ; mov rdx, rbp ; call r15
0x00000000000c912c : mov rbp, r13 ; mov rdi, rbx ; call r12
0x0000000000104ace : mov rbp, rdi ; xor edx, edx ; xor esi, esi ; call rbx
0x000000000006efdb : mov rbp, rdx ; mov rbx, rdi ; sub rsp, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x00000000000e4c54 : mov rbp, rsi ; mov qword ptr [rsp + 0x28], rdi ; add rax, rdx ; jmp rax
0x0000000000037601 : mov rbx, rax ; lea r12, qword ptr [rsi + rbx] ; mov rdi, r12 ; call r15
0x00000000000721aa : mov rbx, rbp ; je 0x721a6 ; mov esi, r12d ; mov rdi, r15 ; call 0x7e41d
0x000000000006efde : mov rbx, rdi ; sub rsp, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000002c355 : mov rbx, rdi ; test rax, rax ; je 0x2c367 ; call rax
0x000000000016dc99 : mov rcx, qword ptr [rcx - 8] ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x00000000000ccf8b : mov rcx, qword ptr [rdi + 0x10] ; mov qword ptr [rdi + 0x10], rcx ; mov rcx, qword ptr [rdi + 0x18] ; mov qword ptr [rdi + 0x18], rcx ; ret
0x00000000000ccf93 : mov rcx, qword ptr [rdi + 0x18] ; mov qword ptr [rdi + 0x18], rcx ; ret
0x00000000000a78b4 : mov rcx, qword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a8704 : mov rcx, qword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a6244 : mov rcx, qword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a6224 : mov rcx, qword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000aa174 : mov rcx, qword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a7874 : mov rcx, qword ptr [rsi + 0xe] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a86c4 : mov rcx, qword ptr [rsi + 0xe] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a61e4 : mov rcx, qword ptr [rsi + 0xe] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000aa134 : mov rcx, qword ptr [rsi + 0xe] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a7894 : mov rcx, qword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a86e4 : mov rcx, qword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a6204 : mov rcx, qword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000aa154 : mov rcx, qword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000367b9 : mov rcx, qword ptr [rsi + rax*8] ; and rcx, qword ptr [rdx + rax*8] ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x0000000000036aa9 : mov rcx, qword ptr [rsi + rax*8] ; or rcx, qword ptr [rdx + rax*8] ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x00000000000914ae : mov rcx, qword ptr [rsi + rdx - 8] ; mov rsi, qword ptr [rsi] ; mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x00000000001554d0 : mov rcx, qword ptr [rsi - 0xa] ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001556b0 : mov rcx, qword ptr [rsi - 0xb] ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155890 : mov rcx, qword ptr [rsi - 0xc] ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155a80 : mov rcx, qword ptr [rsi - 0xd] ; mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155c80 : mov rcx, qword ptr [rsi - 0xe] ; mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155e80 : mov rcx, qword ptr [rsi - 0xf] ; mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015a9d4 : mov rcx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015a944 : mov rcx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015a8b4 : mov rcx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001552f0 : mov rcx, qword ptr [rsi - 9] ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a7700 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a60f0 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000000a8530 : mov rcx, qword ptr [rsi] ; mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a6dc0 : mov rcx, qword ptr [rsi] ; mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a9fa0 : mov rcx, qword ptr [rsi] ; mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a6100 : mov rcx, qword ptr [rsi] ; mov dx, word ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a7730 : mov rcx, qword ptr [rsi] ; mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a8570 : mov rcx, qword ptr [rsi] ; mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a6110 : mov rcx, qword ptr [rsi] ; mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a9fe0 : mov rcx, qword ptr [rsi] ; mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a7750 : mov rcx, qword ptr [rsi] ; mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a8590 : mov rcx, qword ptr [rsi] ; mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a6120 : mov rcx, qword ptr [rsi] ; mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000aa000 : mov rcx, qword ptr [rsi] ; mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x000000000015b354 : mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b2e4 : mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b274 : mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b204 : mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b194 : mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b124 : mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b0b4 : mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a6130 : mov rcx, qword ptr [rsi] ; mov rdx, qword ptr [rsi + 5] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a6140 : mov rcx, qword ptr [rsi] ; mov rdx, qword ptr [rsi + 6] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a6150 : mov rcx, qword ptr [rsi] ; mov rdx, qword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000131b8d : mov rcx, qword ptr [rsp + 8] ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000016dc98 : mov rcx, qword ptr ss:[rcx - 8] ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000118359 : mov rcx, r10 ; test r8b, r8b ; mov byte ptr [r9 + 3], r8b ; jne 0x118307 ; mov rax, rdi ; ret
0x000000000013a401 : mov rcx, r12 ; mov rdi, rbp ; xor eax, eax ; call 0x5665a
0x00000000000bb41b : mov rcx, r13 ; lea r9, qword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x0000000000076b83 : mov rcx, r13 ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x00000000000ad5e3 : mov rcx, r13 ; mov rdx, r12 ; lea r9, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rbx
0x00000000000ad8c3 : mov rcx, r13 ; mov rdx, r12 ; lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000768cc : mov rcx, r14 ; lea rsi, qword ptr [rbp + 0x50] ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000012ca39 : mov rcx, r14 ; mov rdi, r13 ; call r12
0x00000000000f541b : mov rcx, r14 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call 0xf169e
0x000000000013a4b8 : mov rcx, r14 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000001226d0 : mov rcx, r15 ; mov rdx, qword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x00000000000ad31a : mov rcx, r15 ; mov rdx, r12 ; lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000001199af : mov rcx, r9 ; test r8d, r8d ; mov dword ptr [rax + 0xc], r8d ; jne 0x119963 ; mov rax, rdi ; ret
0x00000000000a0514 : mov rcx, rax ; lea rdx, qword ptr [rcx + 1] ; mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x00000000000a0593 : mov rcx, rax ; lea rdx, qword ptr [rcx + 1] ; mov byte ptr [rcx], 0 ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x000000000012e64b : mov rcx, rbx ; add rdi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000013079e : mov rcx, rbx ; add rdi, 0x23b0 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000001307e4 : mov rcx, rbx ; pop rbx ; pop rbp ; add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x0000000000091840 : mov rcx, rdx ; movzx eax, sil ; mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000091491 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000135654 : mov rcx, rsi ; xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x00000000000c24e2 : mov rdi, qword ptr [r12 + 0x68] ; or eax, 8 ; mov byte ptr [rsp + 0x79], al ; jmp 0xc2509
0x00000000000391f8 : mov rdi, qword ptr [r12] ; call r14
0x000000000010427f : mov rdi, qword ptr [r12] ; call rbx
0x00000000000acc58 : mov rdi, qword ptr [r12] ; lea r9, qword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000103e89 : mov rdi, qword ptr [r13] ; call rbx
0x0000000000103df6 : mov rdi, qword ptr [r14] ; call rbx
0x0000000000103e37 : mov rdi, qword ptr [r15] ; call rbx
0x000000000003a25d : mov rdi, qword ptr [rax + 0x20] ; ror rdx, 0x11 ; xor rdx, qword ptr fs:[0x30] ; call rdx
0x00000000000bb423 : mov rdi, qword ptr [rax] ; call r14
0x0000000000104232 : mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x00000000000d0250 : mov rdi, qword ptr [rbp - 0x308] ; call r12
0x00000000001046ab : mov rdi, qword ptr [rbp - 0x40] ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000005722b : mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x0000000000103fbe : mov rdi, qword ptr [rbp] ; call rbx
0x00000000001224fc : mov rdi, qword ptr [rbx + 0x48] ; test rdi, rdi ; jne 0x1224fa ; pop rbx ; ret
0x00000000000cd569 : mov rdi, qword ptr [rbx] ; mov rax, qword ptr [rdi + 0x10] ; test rax, rax ; je 0xcd586 ; call rax
0x000000000012eba3 : mov rdi, qword ptr [rbx] ; mov rax, qword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x0000000000134b84 : mov rdi, qword ptr [rcx + 0x10] ; mov eax, 1 ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000137914 : mov rdi, qword ptr [rdi + 0x10] ; mov eax, 1 ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x00000000001724a5 : mov rdi, qword ptr [rdi + 0x10] ; test rdi, rdi ; jne 0x1724aa ; ret
0x00000000001724c7 : mov rdi, qword ptr [rdi + 0x10] ; test rdi, rdi ; jne 0x1724cc ; pop rbx ; ret
0x000000000013792c : mov rdi, qword ptr [rdi + 0x24] ; mov eax, 1 ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x00000000001381ec : mov rdi, qword ptr [rdi + 0x28] ; mov eax, 1 ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x00000000001381a4 : mov rdi, qword ptr [rdi + 0x38] ; mov eax, 1 ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x00000000001358d0 : mov rdi, qword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1358ea ; ret
0x000000000013ba70 : mov rdi, qword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x13ba8a ; ret
0x0000000000135650 : mov rdi, qword ptr [rdi + 0x40] ; mov rcx, rsi ; xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x000000000013bf30 : mov rdi, qword ptr [rdi + 0x48] ; mov rcx, rsi ; xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x0000000000048089 : mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000006efe5 : mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000006efa9 : mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x0000000000074677 : mov rdi, qword ptr [rdx + 0x40] ; jmp 0x74645
0x0000000000114eb3 : mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x0000000000172800 : mov rdi, qword ptr [rip + 0x252949] ; cmp rdi, 1 ; ja 0x17281d ; ret
0x0000000000029865 : mov rdi, qword ptr [rsp + 0x10] ; lea r8, qword ptr [rsp + 0x98] ; xor r9d, r9d ; call r15
0x000000000010431e : mov rdi, qword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000003761c : mov rdi, qword ptr [rsp + 0x18] ; call r15
0x0000000000023a23 : mov rdi, qword ptr [rsp + 0x20] ; call r14
0x00000000000238be : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x00000000000c984c : mov rdi, qword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000039271 : mov rdi, qword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x00000000001236c0 : mov rdi, qword ptr [rsp + 0x28] ; call 0x1f9bf
0x00000000000241b6 : mov rdi, qword ptr [rsp + 0x30] ; call r15
0x00000000000243e7 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000023f81 : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000023c43 : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000025350 : mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x000000000002667f : mov rdi, qword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000027dba : mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000025ce1 : mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000025840 : mov rdi, qword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000000e7a16 : mov rdi, qword ptr [rsp + 0x78] ; call 0x1f9c5
0x000000000007da7a : mov rdi, qword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000007dea0 : mov rdi, qword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x000000000007d3a5 : mov rdi, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000000e16a8 : mov rdi, qword ptr [rsp] ; lea rdx, qword ptr [rsp + 0x10] ; mov ecx, eax ; mov rsi, r13 ; call 0xdd950
0x000000000014616a : mov rdi, qword ptr [rsp] ; mov rax, qword ptr [rax + 0x128] ; jmp rax
0x0000000000075114 : mov rdi, r12 ; call 0x913b5
0x000000000013dece : mov rdi, r12 ; call qword ptr [rax]
0x00000000000393ff : mov rdi, r12 ; call r14
0x0000000000037608 : mov rdi, r12 ; call r15
0x00000000000877f5 : mov rdi, r12 ; call rax
0x00000000000768d8 : mov rdi, r12 ; call rbx
0x00000000000ca1c1 : mov rdi, r12 ; cmove rcx, rax ; xor eax, eax ; call 0x5648b
0x0000000000071d8a : mov rdi, r12 ; mov rax, rdi ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000021dd0 : mov rdi, r12 ; mov rcx, qword ptr [rbp - 0x60] ; call rcx
0x0000000000135011 : mov rdi, r12 ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x0000000000134df7 : mov rdi, r12 ; mov rcx, qword ptr [rsp + 0x30] ; call rcx
0x00000000000801c1 : mov rdi, r12 ; neg rdi ; call qword ptr [r15]
0x000000000006129e : mov rdi, r13 ; call 0x7d595
0x00000000001226dd : mov rdi, r13 ; call r12
0x000000000002f5fd : mov rdi, r13 ; call rax
0x0000000000104b1c : mov rdi, r13 ; call rbx
0x000000000012f0bd : mov rdi, r13 ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000008b195 : mov rdi, r13 ; mov rdx, rbp ; mov rsi, r12 ; call rax
0x000000000002f2a7 : mov rdi, r13 ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x000000000004b85e : mov rdi, r14 ; call rax
0x0000000000104b40 : mov rdi, r14 ; call rbx
0x000000000008417d : mov rdi, r14 ; mov qword ptr [rsp + 0x10], r14 ; call qword ptr [rax]
0x0000000000037b93 : mov rdi, r14 ; mov rdx, rbp ; call r15
0x00000000001142a9 : mov rdi, r14 ; xor eax, eax ; call 0x1105a7
0x00000000000721b2 : mov rdi, r15 ; call 0x7e415
0x000000000007bd47 : mov rdi, r15 ; call 0x97fc5
0x000000000013b2af : mov rdi, r15 ; call qword ptr [rax]
0x000000000013d14d : mov rdi, r15 ; call r14
0x00000000000757c3 : mov rdi, r15 ; call rax
0x0000000000104b60 : mov rdi, r15 ; call rbx
0x000000000012eef5 : mov rdi, r15 ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000013a96e : mov rdi, r15 ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x0000000000104b7b : mov rdi, r15 ; mov edx, 4 ; mov esi, 1 ; call rbx
0x0000000000076b86 : mov rdi, r15 ; xor r8d, r8d ; call rbx
0x000000000008a448 : mov rdi, r8 ; call rax
0x0000000000128dff : mov rdi, r8 ; lea r8, qword ptr [rdi + 1] ; movzx ecx, byte ptr [r8 - 1] ; test cl, cl ; jne 0x128e02 ; ret
0x00000000000ff0bf : mov rdi, r8 ; mov eax, 3 ; syscall ; mov eax, edx ; ret
0x000000000008b5ad : mov rdi, r9 ; call rcx
0x00000000000cd651 : mov rdi, r9 ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000125164 : mov rdi, rax ; call 0x91395
0x00000000001396d3 : mov rdi, rax ; call qword ptr [r10]
0x0000000000089ae9 : mov rdi, rax ; call rcx
0x000000000011c978 : mov rdi, rax ; jmp 0x11c849
0x00000000001397c5 : mov rdi, rax ; lea r9, qword ptr [rsp + 0x14] ; call qword ptr [r10]
0x00000000001395d6 : mov rdi, rax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x00000000001368bb : mov rdi, rax ; mov edx, dword ptr [rsi + 0x1c8] ; add rsi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000000ee9f1 : mov rdi, rax ; mov rax, qword ptr [rbp - 0xd8] ; call rax
0x00000000000881cd : mov rdi, rax ; mov rbx, rax ; call 0x844d8
0x000000000012de83 : mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000088e4f : mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x0000000000170dab : mov rdi, rbp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000013a3bc : mov rdi, rbp ; call 0x56655
0x00000000000c5187 : mov rdi, rbp ; call 0x913b5
0x00000000000f5424 : mov rdi, rbp ; call 0xf1695
0x00000000001309fd : mov rdi, rbp ; call qword ptr [rbx]
0x000000000013e99a : mov rdi, rbp ; call r12
0x000000000012e71c : mov rdi, rbp ; call r14
0x0000000000037646 : mov rdi, rbp ; call r15
0x00000000000204af : mov rdi, rbp ; call rax
0x00000000000ad325 : mov rdi, rbp ; call rbx
0x000000000013e870 : mov rdi, rbp ; call rcx
0x00000000001304f4 : mov rdi, rbp ; call rdx
0x000000000012f197 : mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013ddb0 : mov rdi, rbp ; mov edx, 0xffffffff ; xor eax, eax ; call r8
0x000000000013dd64 : mov rdi, rbp ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x00000000000c5502 : mov rdi, rbp ; mov esi, 0x30 ; add rbp, r14 ; call 0x9181d
0x000000000013846f : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x00000000000c519f : mov rdi, rbp ; mov rdx, r14 ; mov qword ptr [rsp + 0x10], r11 ; call 0x913bd
0x0000000000088232 : mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000013a404 : mov rdi, rbp ; xor eax, eax ; call 0x56657
0x000000000012fe0c : mov rdi, rbp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000021819 : mov rdi, rbx ; and r12, 0xfffffffffffffff0 ; mov qword ptr [r12], rbx ; call 0x8da3d
0x0000000000071023 : mov rdi, rbx ; call 0x7d305
0x00000000000cfa44 : mov rdi, rbx ; call qword ptr [r15]
0x0000000000130e27 : mov rdi, rbx ; call qword ptr [rax]
0x00000000000299b6 : mov rdi, rbx ; call r12
0x0000000000021766 : mov rdi, rbx ; call r14
0x000000000006da78 : mov rdi, rbx ; call r8
0x000000000006d771 : mov rdi, rbx ; call rax
0x000000000012476b : mov rdi, rbx ; jne 0x12476e ; mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000017232a : mov rdi, rbx ; jne 0x172321 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012ccc3 : mov rdi, rbx ; mov qword ptr [rsp], rax ; mov rcx, rax ; call r12
0x0000000000145d1a : mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000012fbdf : mov rdi, rbx ; mov rcx, qword ptr [rsp] ; call rcx
0x000000000012cdd5 : mov rdi, rbx ; mov rcx, r13 ; call r15
0x000000000007830b : mov rdi, rbx ; mov rdx, r14 ; mov rsi, r13 ; call 0x4d8a0
0x0000000000075f57 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x130] ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000103d79 : mov rdi, rbx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; jmp rax
0x0000000000070bb4 : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000007346e : mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000135e02 : mov rdi, rbx ; xor ebx, ebx ; call 0x1f9c3
0x0000000000070ec1 : mov rdi, rbx ; xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000007518c : mov rdi, rcx ; sub r8, rsi ; mov rdx, r8 ; mov qword ptr [rsp + 0x10], r8 ; call 0x913c0
0x000000000006dd7b : mov rdi, rdx ; jmp 0x6dd47
0x0000000000116e47 : mov rdi, rdx ; jmp rax
0x000000000004ac30 : mov rdi, rdx ; mov byte ptr [rsi], al ; jne 0x4ac1a ; mov rax, rsi ; ret
0x000000000014719e : mov rdi, rdx ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000fe831 : mov rdi, rdx ; syscall ; cmp rax, -0x1000 ; ja 0xfe84e ; ret
0x00000000000fe8e1 : mov rdi, rdx ; syscall ; cmp rax, -0x1000 ; ja 0xfe8fe ; ret
0x00000000000715d3 : mov rdi, rsp ; call 0x4d895
0x000000000012df75 : mov rdi, rsp ; call rax
0x000000000013d250 : mov rdi, rsp ; call rdx
0x00000000000757b7 : mov rdx, qword ptr [r15 + 0x40] ; sub rdx, rsi ; mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x000000000012ca30 : mov rdx, qword ptr [r15] ; mov qword ptr [rbx], rax ; mov r8, rbp ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000012caa0 : mov rdx, qword ptr [r15] ; mov qword ptr [rbx], rax ; xor r8d, r8d ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000007ee9f : mov rdx, qword ptr [rax + 8] ; jne 0x7eebe ; sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000010772c : mov rdx, qword ptr [rax] ; test rdx, rdx ; je 0x107751 ; cmp rdi, rdx ; jne 0x107739 ; mov rax, qword ptr [rax + 8] ; ret
0x000000000012fe04 : mov rdx, qword ptr [rbx + 0x28] ; add rsp, 8 ; mov rdi, rbp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x000000000007a34b : mov rdx, qword ptr [rbx + 0x40] ; sub rdx, rsi ; mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x0000000000074670 : mov rdx, qword ptr [rbx + 0xa0] ; mov rdi, qword ptr [rdx + 0x40] ; jmp 0x7464c
0x0000000000138293 : mov rdx, qword ptr [rdi + 0x90] ; bswap eax ; mov dword ptr [rdx + 0x10], eax ; mov eax, 1 ; ret
0x0000000000138173 : mov rdx, qword ptr [rdi + 0x90] ; bswap eax ; mov dword ptr [rdx + 0xc], eax ; mov eax, 1 ; ret
0x0000000000116e40 : mov rdx, qword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x00000000001304eb : mov rdx, qword ptr [rdx + 0x38] ; test rdx, rdx ; je 0x130505 ; mov rdi, rbp ; call rdx
0x00000000001381d3 : mov rdx, qword ptr [rdx + 8] ; mov qword ptr [rdi + 0x20], rax ; mov qword ptr [rdi + 0x28], rdx ; mov eax, 1 ; ret
0x000000000013818b : mov rdx, qword ptr [rdx + 8] ; mov qword ptr [rdi + 0x30], rax ; mov qword ptr [rdi + 0x38], rdx ; mov eax, 1 ; ret
0x00000000000e8f50 : mov rdx, qword ptr [rip + 0x2d8051] ; mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x00000000000f7ee6 : mov rdx, qword ptr [rsi + 0x78] ; mov qword ptr [rdi + 0x100], rdx ; ret
0x00000000000f7319 : mov rdx, qword ptr [rsi + 0x78] ; mov qword ptr [rdi + 0x80], rdx ; ret
0x000000000015b350 : mov rdx, qword ptr [rsi + 1] ; mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b2e0 : mov rdx, qword ptr [rsi + 2] ; mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b270 : mov rdx, qword ptr [rsi + 3] ; mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b200 : mov rdx, qword ptr [rsi + 4] ; mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a7773 : mov rdx, qword ptr [rsi + 5] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a85b3 : mov rdx, qword ptr [rsi + 5] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a6133 : mov rdx, qword ptr [rsi + 5] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000aa023 : mov rdx, qword ptr [rsi + 5] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x000000000015b190 : mov rdx, qword ptr [rsi + 5] ; mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a7793 : mov rdx, qword ptr [rsi + 6] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a85d3 : mov rdx, qword ptr [rsi + 6] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a6143 : mov rdx, qword ptr [rsi + 6] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000aa043 : mov rdx, qword ptr [rsi + 6] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x000000000015b120 : mov rdx, qword ptr [rsi + 6] ; mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a77b3 : mov rdx, qword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a85f3 : mov rdx, qword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a6153 : mov rdx, qword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000000aa063 : mov rdx, qword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x000000000015b0b0 : mov rdx, qword ptr [rsi + 7] ; mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015ab60 : mov rdx, qword ptr [rsi - 0xa] ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015aae0 : mov rdx, qword ptr [rsi - 0xb] ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015aa60 : mov rdx, qword ptr [rsi - 0xc] ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015a9d0 : mov rdx, qword ptr [rsi - 0xd] ; mov rcx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015a940 : mov rdx, qword ptr [rsi - 0xe] ; mov rcx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015a8b0 : mov rdx, qword ptr [rsi - 0xf] ; mov rcx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000155114 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155a68 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0x15], r11 ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155c68 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0x16], r11 ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155e68 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0x17], r11 ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001550f8 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0x18], r10 ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155a84 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155c84 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155e84 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155130 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000f8064 : mov rdx, qword ptr [rsi - 8] ; popcnt rdx, rdx ; add eax, edx ; cmp rdi, rsi ; ja 0xf8071 ; ret
0x000000000015abe0 : mov rdx, qword ptr [rsi - 9] ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000a76f0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a8520 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a60e0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a9f90 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000001226d3 : mov rdx, qword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x00000000000c9847 : mov rdx, qword ptr [rsp + 0x28] ; mov rdi, qword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000024fae : mov rdx, qword ptr [rsp + 0x30] ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000000238b4 : mov rdx, qword ptr [rsp + 0x38] ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000027db0 : mov rdx, qword ptr [rsp + 0x38] ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000000241ac : mov rdx, qword ptr [rsp + 0x48] ; mov rsi, qword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call r15
0x0000000000024bcf : mov rdx, qword ptr [rsp + 0x48] ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000023c39 : mov rdx, qword ptr [rsp + 0x48] ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000088478 : mov rdx, qword ptr [rsp + 0x68] ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000001304e6 : mov rdx, qword ptr [rsp + 8] ; mov rdx, qword ptr [rdx + 0x38] ; test rdx, rdx ; je 0x13050a ; mov rdi, rbp ; call rdx
0x00000000000391f0 : mov rdx, qword ptr [rsp + 8] ; mov rsi, qword ptr [r15] ; mov rdi, qword ptr [r12] ; call r14
0x00000000000393f7 : mov rdx, qword ptr [rsp + 8] ; mov rsi, r15 ; mov rdi, r12 ; call r14
0x000000000012515d : mov rdx, r10 ; mov qword ptr [r14 + 8], rax ; mov rdi, rax ; call 0x9139c
0x00000000000ad5e6 : mov rdx, r12 ; lea r9, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rbx
0x00000000000ad31d : mov rdx, r12 ; lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x0000000000089f25 : mov rdx, r12 ; mov rdi, r15 ; call rax
0x00000000000ad461 : mov rdx, r13 ; mov rdi, rbp ; call rbx
0x000000000003864b : mov rdx, r13 ; mov rsi, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call r15
0x0000000000037616 : mov rdx, r13 ; mov rsi, r12 ; mov rdi, qword ptr [rsp + 0x18] ; call r15
0x00000000000f541e : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call 0xf169b
0x0000000000037640 : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000131b92 : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000715cd : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rsp ; call 0x4d89b
0x000000000003765b : mov rdx, r13 ; mov rsi, rbx ; mov rdi, r12 ; call r15
0x00000000000ad721 : mov rdx, r14 ; mov rdi, rbp ; call rbx
0x00000000000c5180 : mov rdx, r14 ; mov rsi, qword ptr [rdi + rax*8] ; mov rdi, rbp ; call 0x913bc
0x00000000000c517f : mov rdx, r14 ; mov rsi, qword ptr [rdi + rax*8] ; mov rdi, rbp ; call 0x913bd
0x0000000000075111 : mov rdx, r15 ; mov rdi, r12 ; call 0x913b8
0x000000000008a445 : mov rdx, r15 ; mov rdi, r8 ; call rax
0x000000000011f6be : mov rdx, r15 ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000001142a6 : mov rdx, rax ; mov rdi, r14 ; xor eax, eax ; call 0x1105aa
0x000000000008ac76 : mov rdx, rbp ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000131a85 : mov rdx, rbx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000038043 : mov rdx, rbx ; mov rsi, r13 ; mov rdi, r12 ; call r15
0x0000000000073817 : mov rdx, rdi ; jbe 0x7374c ; mov eax, dword ptr [rsi] ; jmp 0x737f2
0x0000000000073816 : mov rdx, rdi ; jbe 0x7374d ; mov eax, dword ptr [rsi] ; jmp 0x737f3
0x000000000003a8c0 : mov rdx, rdi ; mov rax, rdi ; sar rdx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x0000000000091847 : mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000013d244 : mov rdx, rdi ; xor eax, eax ; mov dword ptr [rsp], 2 ; mov rdi, rsp ; call rdx
0x00000000000391f5 : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [r12] ; call r14
0x00000000001046a8 : mov rsi, qword ptr [rax] ; mov rdi, qword ptr [rbp - 0x40] ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000010431b : mov rsi, qword ptr [rbx] ; mov rdi, qword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000c5183 : mov rsi, qword ptr [rdi + rax*8] ; mov rdi, rbp ; call 0x913b9
0x00000000000c5182 : mov rsi, qword ptr [rdi + rax*8] ; mov rdi, rbp ; call 0x913ba
0x00000000000914b3 : mov rsi, qword ptr [rsi] ; mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000016dc96 : mov rsi, qword ptr [rsi] ; mov rcx, qword ptr [rcx - 8] ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000007da75 : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, qword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000003864e : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call r15
0x000000000012e717 : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x0000000000088229 : mov rsi, qword ptr [rsp + 0x18] ; add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x00000000000ad45c : mov rsi, qword ptr [rsp + 0x18] ; mov rdx, r13 ; mov rdi, rbp ; call rbx
0x00000000000ad71c : mov rsi, qword ptr [rsp + 0x18] ; mov rdx, r14 ; mov rdi, rbp ; call rbx
0x0000000000023a1e : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, qword ptr [rsp + 0x20] ; call r14
0x00000000000238b9 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x00000000000877f0 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, r12 ; call rax
0x000000000012fbd7 : mov rsi, qword ptr [rsp + 0x2a00] ; mov rdi, rbx ; mov rcx, qword ptr [rsp] ; call rcx
0x000000000013846a : mov rsi, qword ptr [rsp + 0x30] ; mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x00000000000241b1 : mov rsi, qword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call r15
0x00000000000243e2 : mov rsi, qword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000000bc19f : mov rsi, qword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000134df2 : mov rsi, qword ptr [rsp + 0x38] ; mov rdi, r12 ; mov rcx, qword ptr [rsp + 0x30] ; call rcx
0x0000000000023f7c : mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000023c3e : mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x000000000002534b : mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x000000000002667a : mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000027db5 : mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000025cdc : mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000002583b : mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000013500c : mov rsi, qword ptr [rsp + 0x50] ; mov rdi, r12 ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x00000000001226d8 : mov rsi, qword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x0000000000037619 : mov rsi, r12 ; mov rdi, qword ptr [rsp + 0x18] ; call r15
0x0000000000088e4c : mov rsi, r12 ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000000f5421 : mov rsi, r12 ; mov rdi, rbp ; call 0xf1698
0x0000000000037643 : mov rsi, r12 ; mov rdi, rbp ; call r15
0x000000000008847d : mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000012cdd2 : mov rsi, r12 ; mov rdi, rbx ; mov rcx, r13 ; call r15
0x0000000000070ebe : mov rsi, r12 ; mov rdi, rbx ; xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000000715d0 : mov rsi, r12 ; mov rdi, rsp ; call 0x4d898
0x0000000000038046 : mov rsi, r13 ; mov rdi, r12 ; call r15
0x0000000000037b90 : mov rsi, r13 ; mov rdi, r14 ; mov rdx, rbp ; call r15
0x000000000013ddad : mov rsi, r13 ; mov rdi, rbp ; mov edx, 0xffffffff ; xor eax, eax ; call r8
0x000000000013dd61 : mov rsi, r13 ; mov rdi, rbp ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x000000000008ac79 : mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000013e997 : mov rsi, r14 ; mov rdi, rbp ; call r12
0x0000000000057221 : mov rsi, r15 ; mov dword ptr [rbp - 0x510], r11d ; mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x00000000000393fc : mov rsi, r15 ; mov rdi, r12 ; call r14
0x000000000004b85b : mov rsi, r15 ; mov rdi, r14 ; call rax
0x000000000012ccc0 : mov rsi, r15 ; mov rdi, rbx ; mov qword ptr [rsp], rax ; mov rcx, rax ; call r12
0x0000000000145c1e : mov rsi, rax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000012e648 : mov rsi, rbp ; mov rcx, rbx ; add rdi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000013079b : mov rsi, rbp ; mov rcx, rbx ; add rdi, 0x23b0 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000001307e1 : mov rsi, rbp ; mov rcx, rbx ; pop rbx ; pop rbp ; add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x00000000000acc55 : mov rsi, rbp ; mov rdi, qword ptr [r12] ; lea r9, qword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000003926e : mov rsi, rbp ; mov rdi, qword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x000000000008b040 : mov rsi, rbp ; mov rdi, r12 ; call rax
0x00000000000881ca : mov rsi, rbp ; mov rdi, rax ; mov rbx, rax ; call 0x844db
0x000000000008a192 : mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000003765e : mov rsi, rbx ; mov rdi, r12 ; call r15
0x000000000013b2ac : mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000013d14a : mov rsi, rbx ; mov rdi, r15 ; call r14
0x0000000000089ae6 : mov rsi, rbx ; mov rdi, rax ; call rcx
0x000000000013e86d : mov rsi, rbx ; mov rdi, rbp ; call rcx
0x00000000000c519c : mov rsi, rbx ; mov rdi, rbp ; mov rdx, r14 ; mov qword ptr [rsp + 0x10], r11 ; call 0x913c0
0x000000000010ff70 : mov rsi, rdi ; mov edi, 0x20 ; call 0x7252f
0x0000000000146167 : mov rsi, rdi ; mov rdi, qword ptr [rsp] ; mov rax, qword ptr [rax + 0x128] ; jmp rax
0x00000000000c7c32 : mov rsi, rdi ; xor edi, edi ; call rax
0x0000000000135659 : mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x0000000000135679 : mov rsi, rdx ; mov dword ptr [rdi + 0x10], 2 ; add rdi, 0x10 ; jmp rcx
0x0000000000138129 : mov rsi, rdx ; mov dword ptr [rdi + 0x58], 2 ; add rdi, 0x58 ; jmp rcx
0x0000000000137849 : mov rsi, rdx ; mov dword ptr [rdi + 0x68], 2 ; add rdi, 0x68 ; jmp rcx
0x0000000000130e24 : mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x000000000016dcbb : mov si, word ptr [rsi] ; mov cx, word ptr [rcx - 2] ; mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x00000000001076e6 : mov ss, word ptr [rdi - 0x2708ffd5] ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000194dd5 : mov word ptr [rax], es ; add byte ptr [rsp + rdi*2 - 0x73330016], al ; add byte ptr [rax], al ; xchg eax, esp ; jl 0x194ddb ; jmp rsp
0x000000000013dec3 : mov word ptr [rcx - 0x75], cs ; and al, 8 ; lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x00000000000a77fc : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a864c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a618c : mov word ptr [rdi + 0x10], cx ; ret
0x00000000000aa0bc : mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a7904 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a8754 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a6274 : mov word ptr [rdi + 0x18], cx ; ret
0x00000000000aa1c4 : mov word ptr [rdi + 0x18], cx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000001ae8e4 : mov word ptr [rdi + 1], cs ; add byte ptr [rax - 0x51], ch ; cmc ; jmp qword ptr [rcx]
0x000000000015b5f7 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000003b5e2 : mov word ptr [rdi + 2], dx ; ret
0x000000000003b5dc : mov word ptr [rdi + 4], ax ; xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x00000000000a09b2 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a09c2 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a84f8 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a0922 : mov word ptr [rdi + 4], dx ; mov rax, rdi ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a08b2 : mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00000000000a60c8 : mov word ptr [rdi + 4], dx ; ret
0x00000000000a9f68 : mov word ptr [rdi + 4], dx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a0874 : mov word ptr [rdi + 4], r11w ; mov byte ptr [rdi + 6], r8b ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a0864 : mov word ptr [rdi + 4], r11w ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a855a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a771a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a610a : mov word ptr [rdi + 8], dx ; ret
0x00000000000a9fca : mov word ptr [rdi + 8], dx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x0000000000077ea0 : mov word ptr [rdi + rdi*8 - 0x76fc7401], cs ; ret 0xe283
0x000000000009193a : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; ret
0x0000000000150caf : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; vzeroupper ; ret
0x00000000000914d4 : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x00000000001556cc : mov word ptr [rdi - 2], cx ; ret
0x00000000001554e4 : mov word ptr [rdi - 2], dx ; ret
0x00000000001556c8 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x00000000000a7693 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a6093 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000a84b6 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a6d66 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000a9f26 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x000000000016e392 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000009193f : mov word ptr [rdi], cx ; ret
0x0000000000150cb4 : mov word ptr [rdi], cx ; vzeroupper ; ret
0x00000000000a7683 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a84a3 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a6083 : mov word ptr [rdi], dx ; ret
0x00000000000a68d3 : mov word ptr [rdi], dx ; sub r8, 2 ; lea rdi, qword ptr [rdi + 2] ; jne 0xa7181 ; ret
0x00000000000a9f13 : mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a0820 : mov word ptr [rdi], r9w ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a0830 : mov word ptr [rdi], r9w ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a0970 : mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a0980 : mov word ptr [rdi], si ; mov byte ptr [rdi + 2], 0 ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a08f0 : mov word ptr [rdi], si ; mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x00000000000a08e0 : mov word ptr [rdi], si ; mov rax, rdi ; ret
0x000000000016dcc2 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x00000000000914d9 : mov word ptr [rdi], si ; ret
0x00000000000f7350 : mov word ptr [rdi], si ; xor eax, eax ; ret
0x00000000000a2e3d : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00000000000a2ec1 : mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x00000000000a2de8 : mov word ptr [rdx], ax ; mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000000a2dd8 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000019b4b0 : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; ret
0x00000000001a8d60 : mov word ptr [rsi], es ; add qword ptr [rdi], 0x7b ; ret
0x00000000001adcc0 : mov word ptr [rsi], es ; add qword ptr [rdi], 2 ; cwde ; ret
0x0000000000035324 : mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x00000000000353ed : mov word ptr [rsp - 0x10], ax ; mov dword ptr [rdi], edx ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000914d3 : mov word ptr ss:[rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000016ba0f : movabs al, byte ptr [0xa096ef0f66000000] ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001860f4 : movabs al, byte ptr [0xc0fff20fb0fff20f] ; pslld mm7, mm7 ; ror byte ptr [rdi], 1 ; jmp rax
0x0000000000183cf4 : movabs al, byte ptr [0xc8c62d12fc87aa3c] ; lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000000258c2 : movabs al, byte ptr [0xff0000c2f7000005] ; dec dword ptr [rdi] ; test byte ptr [rbx - 0x8fffffb], ch ; ret 0
0x00000000001396ca : movabs byte ptr [0x9beffff95], al ; mov rdi, rax ; call qword ptr [r10]
0x00000000000038f7 : movabs dword ptr [0x7972d6f857775fc9], eax ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000193511 : movabs dword ptr [0xa631fffda631fffd], eax ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x000000000018209f : movabs eax, dword ptr [0xdbd7170d7733db8] ; shl dword ptr [rdi - 5], 1 ; ret
0x0000000000036358 : movabs rax, -0x180000001 ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000016c4a8 : movabs rbp, 0xf66d1ef0f66bdb2 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000108ef8 : movabs rsi, -0x100000000000 ; and rdi, rsi ; or rax, rdi ; ret
0x000000000016c5a8 : movabs rsp, 0xf66d1ef0f66bcb2 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000153cf6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x153d0e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153e46 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x153e5e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153f96 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x153fae ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001540e6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1540fe ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154236 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x15424e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154386 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x15439e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001544d6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1544ee ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154626 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x15463e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154776 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x15478e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001548c6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1548de ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154a16 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154a2e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154b66 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154b7e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154cb6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154cce ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154e06 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154e1e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154f56 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154f6e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001566c6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1566de ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156816 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x15682e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156966 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x15697e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ab6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156ace ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156c06 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156c1e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156d56 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156d6e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ea6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156ebe ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ff6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x15700e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157146 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x15715e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157296 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1572ae ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001573e6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1573fe ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157536 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x15754e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157686 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x15769e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001577d6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1577ee ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157926 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x15793e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153c52 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000153c4e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000153c48 : movaps xmmword ptr [rdi - 0x30], xmm3 ; jb 0x153c6a ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000153d98 : movaps xmmword ptr [rdi - 0x30], xmm3 ; jb 0x153dba ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000153ee8 : movaps xmmword ptr [rdi - 0x30], xmm3 ; jb 0x153f0a ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154038 : movaps xmmword ptr [rdi - 0x30], xmm3 ; jb 0x15405a ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154188 : movaps xmmword ptr [rdi - 0x30], xmm3 ; jb 0x1541aa ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001542d8 : movaps xmmword ptr [rdi - 0x30], xmm3 ; jb 0x1542fa ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154428 : movaps xmmword ptr [rdi - 0x30], xmm3 ; jb 0x15444a ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154576 : movaps xmmword ptr [rdi - 0x30], xmm3 ; jb 0x15459f ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001546c8 : movaps xmmword ptr [rdi - 0x30], xmm3 ; jb 0x1546ea ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154818 : movaps xmmword ptr [rdi - 0x30], xmm3 ; jb 0x15483a ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154968 : movaps xmmword ptr [rdi - 0x30], xmm3 ; jb 0x15498a ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154ab8 : movaps xmmword ptr [rdi - 0x30], xmm3 ; jb 0x154ada ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154c08 : movaps xmmword ptr [rdi - 0x30], xmm3 ; jb 0x154c2a ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154d58 : movaps xmmword ptr [rdi - 0x30], xmm3 ; jb 0x154d7a ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154ea8 : movaps xmmword ptr [rdi - 0x30], xmm3 ; jb 0x154eca ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000156618 : movaps xmmword ptr [rdi - 0x30], xmm3 ; jb 0x15663a ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000156768 : movaps xmmword ptr [rdi - 0x30], xmm3 ; jb 0x15678a ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001568b8 : movaps xmmword ptr [rdi - 0x30], xmm3 ; jb 0x1568da ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000156a08 : movaps xmmword ptr [rdi - 0x30], xmm3 ; jb 0x156a2a ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000156b58 : movaps xmmword ptr [rdi - 0x30], xmm3 ; jb 0x156b7a ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000156ca8 : movaps xmmword ptr [rdi - 0x30], xmm3 ; jb 0x156cca ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000156df8 : movaps xmmword ptr [rdi - 0x30], xmm3 ; jb 0x156e1a ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000156f46 : movaps xmmword ptr [rdi - 0x30], xmm3 ; jb 0x156f6f ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000157098 : movaps xmmword ptr [rdi - 0x30], xmm3 ; jb 0x1570ba ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001571e8 : movaps xmmword ptr [rdi - 0x30], xmm3 ; jb 0x15720a ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000157338 : movaps xmmword ptr [rdi - 0x30], xmm3 ; jb 0x15735a ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000157488 : movaps xmmword ptr [rdi - 0x30], xmm3 ; jb 0x1574aa ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001575d8 : movaps xmmword ptr [rdi - 0x30], xmm3 ; jb 0x1575fa ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000157728 : movaps xmmword ptr [rdi - 0x30], xmm3 ; jb 0x15774a ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000157878 : movaps xmmword ptr [rdi - 0x30], xmm3 ; jb 0x15789a ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000153cfc : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000000350c3 : movd mm0, eax ; mov dword ptr [rdi], edx ; ret
0x0000000000034bcf : movd mm1, eax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000034b98 : movd mm1, eax ; movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x0000000000034f38 : movd mm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x0000000000034f1d : movd mm1, eax ; movss dword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x0000000000034bce : movd mm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000034b97 : movd mm1, rax ; movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x0000000000034c3c : movd mm1, rdi ; movapd xmm0, xmm1 ; ret
0x00000000000350c2 : movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x0000000000034f37 : movd xmm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x0000000000034f1c : movd xmm1, eax ; movss dword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x000000000012ffde : movdqu xmm0, xmmword ptr [rdi + 0x20] ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x0000000000130016 : movdqu xmm0, xmmword ptr [rdi + 0x38] ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x00000000000a6e40 : movdqu xmm0, xmmword ptr [rsi] ; mov cl, byte ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a6180 : movdqu xmm0, xmmword ptr [rsi] ; mov cx, word ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a61c0 : movdqu xmm0, xmmword ptr [rsi] ; mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a61b0 : movdqu xmm0, xmmword ptr [rsi] ; mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a61a0 : movdqu xmm0, xmmword ptr [rsi] ; mov ecx, dword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a6220 : movdqu xmm0, xmmword ptr [rsi] ; mov rcx, qword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a61e0 : movdqu xmm0, xmmword ptr [rsi] ; mov rcx, qword ptr [rsi + 0xe] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a6200 : movdqu xmm0, xmmword ptr [rsi] ; mov rcx, qword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a8610 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a77d0 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a77e0 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a6170 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a6160 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000aa080 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a6324 : movdqu xmm2, xmmword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a62c4 : movdqu xmm2, xmmword ptr [rsi + 0xd] ; movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a62e4 : movdqu xmm2, xmmword ptr [rsi + 0xe] ; movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a6304 : movdqu xmm2, xmmword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000015b041 : movdqu xmmword ptr [rdi + 0x10], xmm0 ; lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000918a2 : movdqu xmmword ptr [rdi + 0x10], xmm0 ; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x00000000000a79bd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a880d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a7020 : movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000aa2a0 : movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a632d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000aa27d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a8a73 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a7263 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; ret
0x00000000000aa2f3 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000015b2cf : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b25f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b1ef : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b17f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a795d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a87ad : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a62cd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000aa21d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x000000000015b10f : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a797d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a87cd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a62ed : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000aa23d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x000000000015b09f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a799d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a87ed : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a630d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000aa25d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000015b6bf : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b64f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b5df : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b56f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b4ff : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b48f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b41f : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b3af : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b33f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000918a7 : movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x0000000000091834 : movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000918ad : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x000000000015a82b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000015a89b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015afd6 : movdqu xmmword ptr [rdi - 0x11], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015af56 : movdqu xmmword ptr [rdi - 0x12], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015aec6 : movdqu xmmword ptr [rdi - 0x13], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ae46 : movdqu xmmword ptr [rdi - 0x14], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015adc6 : movdqu xmmword ptr [rdi - 0x15], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ad46 : movdqu xmmword ptr [rdi - 0x16], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015acc6 : movdqu xmmword ptr [rdi - 0x17], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ac46 : movdqu xmmword ptr [rdi - 0x18], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015abc6 : movdqu xmmword ptr [rdi - 0x19], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ab46 : movdqu xmmword ptr [rdi - 0x1a], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015aac6 : movdqu xmmword ptr [rdi - 0x1b], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015aa46 : movdqu xmmword ptr [rdi - 0x1c], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a9b6 : movdqu xmmword ptr [rdi - 0x1d], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a926 : movdqu xmmword ptr [rdi - 0x1e], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a896 : movdqu xmmword ptr [rdi - 0x1f], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a821 : movdqu xmmword ptr [rdi - 0x20], xmm0 ; lddqu xmm0, xmmword ptr [rsi - 0x10] ; movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x00000000000a7120 : movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000a8614 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a77d4 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a8627 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a6e47 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000aa097 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a77e4 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a6174 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a7837 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a8687 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a7857 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a61c7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a86aa : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a6e9a : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000aa11a : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a61b7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000aa0f7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a7817 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a8667 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a61a7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000aa0d7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a78b8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a8708 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a78d8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a6248 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a6228 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000aa178 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a872b : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a6f1b : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000aa19b : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a791b : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a876b : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a628b : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000aa1db : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a793b : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a878b : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a62ab : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000aa1fb : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a78fc : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a874c : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a626c : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000aa1bc : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a7878 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a86c8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a61e8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000aa138 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a7898 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a86e8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a6208 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000aa158 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a77f8 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a8648 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a6188 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000aa0b8 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a79b9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a8809 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a701c : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000aa29c : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a6329 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000aa279 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a7959 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a87a9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a62c9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000aa219 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a7979 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a87c9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a62e9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000aa239 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a7999 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a87e9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a6309 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000aa259 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000009183a : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000aa084 : movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000015b0a4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000091833 : movdqu xmmword ptr fs:[rdi + rdx - 0x10], xmm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a2f22 : movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f42 : movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f62 : movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000a2dac : movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a5b93 : movlpd qword ptr [rdx + 8], xmm1 ; xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00000000000a2e99 : movlpd qword ptr [rdx], xmm0 ; mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x00000000000a2eb9 : movlpd qword ptr [rdx], xmm0 ; mov ax, word ptr [rcx + 8] ; mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x00000000000a2ed9 : movlpd qword ptr [rdx], xmm0 ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000a2ef9 : movlpd qword ptr [rdx], xmm0 ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000000a2d56 : movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000a2da8 : movlpd qword ptr [rdx], xmm0 ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f19 : movlpd qword ptr [rdx], xmm0 ; movlpd xmm1, qword ptr [rcx + 5] ; movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f39 : movlpd qword ptr [rdx], xmm0 ; movlpd xmm1, qword ptr [rcx + 6] ; movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f59 : movlpd qword ptr [rdx], xmm0 ; movlpd xmm1, qword ptr [rcx + 7] ; movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000a5aa9 : movlpd qword ptr [rdx], xmm0 ; movlpd xmm1, qword ptr [rcx + 8] ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a5b2a : movlpd qword ptr [rdx], xmm0 ; xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000a2e95 : movlpd xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x00000000000a2ed5 : movlpd xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000a2ef5 : movlpd xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000000a2d52 : movlpd xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000a5b26 : movlpd xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000a2f1d : movlpd xmm1, qword ptr [rcx + 5] ; movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f3d : movlpd xmm1, qword ptr [rcx + 6] ; movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f5d : movlpd xmm1, qword ptr [rcx + 7] ; movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000a5aad : movlpd xmm1, qword ptr [rcx + 8] ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a2da3 : movlpd xmm1, qword ptr [rcx + 8] ; movlpd qword ptr [rdx], xmm0 ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f23 : movlps qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f43 : movlps qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f63 : movlps qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000a2dad : movlps qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a5b94 : movlps qword ptr [rdx + 8], xmm1 ; xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00000000000a2e9a : movlps qword ptr [rdx], xmm0 ; mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x00000000000a2eba : movlps qword ptr [rdx], xmm0 ; mov ax, word ptr [rcx + 8] ; mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x00000000000a2eda : movlps qword ptr [rdx], xmm0 ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000a2efa : movlps qword ptr [rdx], xmm0 ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000000a2d57 : movlps qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000a2da9 : movlps qword ptr [rdx], xmm0 ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f1a : movlps qword ptr [rdx], xmm0 ; movlpd xmm1, qword ptr [rcx + 5] ; movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f3a : movlps qword ptr [rdx], xmm0 ; movlpd xmm1, qword ptr [rcx + 6] ; movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f5a : movlps qword ptr [rdx], xmm0 ; movlpd xmm1, qword ptr [rcx + 7] ; movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000a5aaa : movlps qword ptr [rdx], xmm0 ; movlpd xmm1, qword ptr [rcx + 8] ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a5b2b : movlps qword ptr [rdx], xmm0 ; xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000a2e96 : movlps xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x00000000000a2ed6 : movlps xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000a2ef6 : movlps xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000000a2d53 : movlps xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000a5b27 : movlps xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000a2f1e : movlps xmm1, qword ptr [rcx + 5] ; movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f3e : movlps xmm1, qword ptr [rcx + 6] ; movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000a2f5e : movlps xmm1, qword ptr [rcx + 7] ; movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000a5aae : movlps xmm1, qword ptr [rcx + 8] ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a5b8f : movlps xmm1, qword ptr [rcx + 8] ; movlpd qword ptr [rdx + 8], xmm1 ; xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00000000000a2da4 : movlps xmm1, qword ptr [rcx + 8] ; movlpd qword ptr [rdx], xmm0 ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a61ad : movnti dword ptr [rax + 0x66f0ff3], edx ; mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000016eec2 : movnti dword ptr [rsi - 0x70], esp ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi] ; ret
0x000000000012ffdf : movq mm0, qword ptr [rdi + 0x20] ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x0000000000130017 : movq mm0, qword ptr [rdi + 0x38] ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x00000000000a8621 : movq mm0, qword ptr [rsi] ; mov cl, byte ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a6e41 : movq mm0, qword ptr [rsi] ; mov cl, byte ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a6181 : movq mm0, qword ptr [rsi] ; mov cx, word ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a7831 : movq mm0, qword ptr [rsi] ; mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a8681 : movq mm0, qword ptr [rsi] ; mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a61c1 : movq mm0, qword ptr [rsi] ; mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a61b1 : movq mm0, qword ptr [rsi] ; mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a7811 : movq mm0, qword ptr [rsi] ; mov ecx, dword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a8661 : movq mm0, qword ptr [rsi] ; mov ecx, dword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a61a1 : movq mm0, qword ptr [rsi] ; mov ecx, dword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a6221 : movq mm0, qword ptr [rsi] ; mov rcx, qword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a61e1 : movq mm0, qword ptr [rsi] ; mov rcx, qword ptr [rsi + 0xe] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a6201 : movq mm0, qword ptr [rsi] ; mov rcx, qword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a6321 : movq mm0, qword ptr [rsi] ; movdqu xmm2, xmmword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a62c1 : movq mm0, qword ptr [rsi] ; movdqu xmm2, xmmword ptr [rsi + 0xd] ; movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a62e1 : movq mm0, qword ptr [rsi] ; movdqu xmm2, xmmword ptr [rsi + 0xe] ; movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a6301 : movq mm0, qword ptr [rsi] ; movdqu xmm2, xmmword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a8611 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a77d1 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a77e1 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a6171 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a6161 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000aa081 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a79b5 : movq mm2, qword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a8805 : movq mm2, qword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a6325 : movq mm2, qword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a7955 : movq mm2, qword ptr [rsi + 0xd] ; movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a87a5 : movq mm2, qword ptr [rsi + 0xd] ; movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a62c5 : movq mm2, qword ptr [rsi + 0xd] ; movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a7975 : movq mm2, qword ptr [rsi + 0xe] ; movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a87c5 : movq mm2, qword ptr [rsi + 0xe] ; movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a62e5 : movq mm2, qword ptr [rsi + 0xe] ; movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a7995 : movq mm2, qword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a87e5 : movq mm2, qword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a6305 : movq mm2, qword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000015b042 : movq qword ptr [rdi + 0x10], mm0 ; lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000918a3 : movq qword ptr [rdi + 0x10], mm0 ; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x00000000000a79be : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a880e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a7021 : movq qword ptr [rdi + 0x10], mm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000aa2a1 : movq qword ptr [rdi + 0x10], mm2 ; mov byte ptr [rdi + 0x20], cl ; xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a632e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000000aa27e : movq qword ptr [rdi + 0x10], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a8a74 : movq qword ptr [rdi + 0x30], mm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a7264 : movq qword ptr [rdi + 0x30], mm7 ; ret
0x00000000000aa2f4 : movq qword ptr [rdi + 0x30], mm7 ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000015b2d0 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b260 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b1f0 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b180 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a795e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a87ae : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a62ce : movq qword ptr [rdi + 0xd], mm2 ; ret
0x00000000000aa21e : movq qword ptr [rdi + 0xd], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x000000000015b110 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a797e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a87ce : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a62ee : movq qword ptr [rdi + 0xe], mm2 ; ret
0x00000000000aa23e : movq qword ptr [rdi + 0xe], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x000000000015b0a0 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a799e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a87ee : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a630e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00000000000aa25e : movq qword ptr [rdi + 0xf], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000015b6c0 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b650 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b5e0 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b570 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b500 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b490 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b420 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b3b0 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b340 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000918a8 : movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x0000000000091835 : movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000918ae : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000015a82c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x000000000015a89c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015afd7 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015af57 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015aec7 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ae47 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015adc7 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ad47 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015acc7 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ac47 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015abc7 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ab47 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015aac7 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015aa47 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a9b7 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a927 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a897 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a822 : movq qword ptr [rdi - 0x20], mm0 ; lddqu xmm0, xmmword ptr [rsi - 0x10] ; movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x00000000000a7121 : movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000a8615 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a77d5 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a8628 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a6e48 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000aa098 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a77e5 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a6175 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a7838 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a8688 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a7858 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a61c8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a86ab : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a6e9b : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000aa11b : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a61b8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000aa0f8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a7818 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a8668 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a61a8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000aa0d8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a78b9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a8709 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a78d9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a6249 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a6229 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000aa179 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a872c : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a6f1c : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000aa19c : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a791c : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a876c : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a628c : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000aa1dc : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a793c : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a878c : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a62ac : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000aa1fc : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a78fd : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a874d : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a626d : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000aa1bd : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a7879 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a86c9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a61e9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000aa139 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a7899 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a86e9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a6209 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000aa159 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a77f9 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a8649 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a6189 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000aa0b9 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a79ba : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a880a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a701d : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000aa29d : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a632a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000aa27a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a795a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a87aa : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a62ca : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000aa21a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a797a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a87ca : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a62ea : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000aa23a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a799a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a87ea : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a630a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000aa25a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000009183b : movq qword ptr [rdi], mm0 ; ret
0x00000000000a6a95 : movq qword ptr [rdi], mm0 ; sub r8, 0x10 ; lea rdi, qword ptr [rdi + 0x10] ; jne 0xa7181 ; ret
0x00000000000aa085 : movq qword ptr [rdi], mm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000015b0a5 : movq qword ptr [rdi], mm1 ; ret
0x0000000000034bcd : movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000034b96 : movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x0000000000034c3b : movq xmm1, rdi ; movapd xmm0, xmm1 ; ret
0x00000000001aa9fc : movsb byte ptr [rdi], byte ptr [rsi] ; adc byte ptr [rcx], al ; add byte ptr [rax + 0x16], al ; hlt ; jmp qword ptr [rcx]
0x00000000000b081d : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000d6ab4 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx], al ; setg dl ; jmp 0xd6a54
0x00000000000e7886 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x000000000007f9b8 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0xf08
0x0000000000132b5f : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; test eax, eax ; setne al ; add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000087110 : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000000001595a7 : movsb byte ptr [rdi], byte ptr [rsi] ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000198570 : movsb byte ptr [rdi], byte ptr [rsi] ; add edi, ecx ; jmp rsp
0x0000000000041a07 : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rbx - 0x76b2dbf4], cl ; ret
0x00000000000e7884 : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0xa4 ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x00000000001976c8 : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0xf7 ; jmp rsp
0x0000000000197e40 : movsb byte ptr [rdi], byte ptr [rsi] ; and bh, al ; jmp rsp
0x0000000000091415 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000036c0e : movsb byte ptr [rdi], byte ptr [rsi] ; cmp byte ptr [rax], al ; mov eax, edx ; ret
0x0000000000036bc3 : movsb byte ptr [rdi], byte ptr [rsi] ; cmp byte ptr [rax], al ; ret
0x000000000013bf10 : movsb byte ptr [rdi], byte ptr [rsi] ; cmp ch, dh ; dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fdbf1 : movsb byte ptr [rdi], byte ptr [rsi] ; cmp dword ptr [rsp - 0x2c], ecx ; je 0xfdc37 ; mov dword ptr fs:[r8], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001821e2 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000001b06fc : movsb byte ptr [rdi], byte ptr [rsi] ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rdx - 0xa], ah ; jmp qword ptr [rsi]
0x0000000000194da0 : movsb byte ptr [rdi], byte ptr [rsi] ; ja 0x194d90 ; call rsp
0x0000000000194d98 : movsb byte ptr [rdi], byte ptr [rsi] ; jb 0x194d90 ; call qword ptr [rbx + rcx*4]
0x0000000000194b3c : movsb byte ptr [rdi], byte ptr [rsi] ; jg 0x194b46 ; add ah, ah ; sub ebp, edx ; call rsp
0x00000000001950a8 : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x1950ae
0x0000000000197114 : movsb byte ptr [rdi], byte ptr [rsi] ; jnp 0x19711f ; add byte ptr [rbp + rbp*2 - 0xa], dh ; call rsp
0x000000000018343d : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x183496 ; jmp 0x1833d7
0x00000000001966d8 : movsb byte ptr [rdi], byte ptr [rsi] ; ljmp ptr [rdi + rsi + 0x42240001] ; call rsp
0x0000000000198948 : movsb byte ptr [rdi], byte ptr [rsi] ; mov edx, 0xe9cfff9 ; add al, byte ptr [rax] ; add al, 0xbb ; stc ; call rsp
0x0000000000195104 : movsb byte ptr [rdi], byte ptr [rsi] ; movabs eax, dword ptr [0xa1c4ffec23040000] ; add byte ptr [rax], al ; xchg eax, esp ; and ebp, esp ; jmp rsp
0x0000000000194920 : movsb byte ptr [rdi], byte ptr [rsi] ; or ch, dl ; call rsp
0x000000000019f8fc : movsb byte ptr [rdi], byte ptr [rsi] ; pop rdi ; add byte ptr [rax], al ; nop ; sbb ebp, ebp ; call rbx
0x0000000000196a8c : movsb byte ptr [rdi], byte ptr [rsi] ; push rax ; add dword ptr [rax], eax ; hlt ; and al, 0xf4 ; call rsp
0x00000000001993c4 : movsb byte ptr [rdi], byte ptr [rsi] ; push rsp ; add al, byte ptr [rax] ; adc al, 0xfb ; call rsp
0x00000000001b35fc : movsb byte ptr [rdi], byte ptr [rsi] ; pushfq ; add dword ptr [rax], eax ; xor byte ptr [rcx], 0xf7 ; jmp qword ptr [rsi]
0x0000000000091407 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001a5bfc : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x0000000000197460 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff6
0x0000000000197e84 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x00000000001a64fc : movsb byte ptr [rdi], byte ptr [rsi] ; retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x000000000019825c : movsb byte ptr [rdi], byte ptr [rsi] ; salc ; add dword ptr [rax], eax ; in al, 0x6a ; clc ; jmp rsp
0x0000000000196164 : movsb byte ptr [rdi], byte ptr [rsi] ; sgdt ptr [rax] ; push rsp ; ret
0x0000000000193541 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call rcx
0x00000000000ff71c : movsb byte ptr [rdi], byte ptr [rsi] ; sub al, 0 ; lea rax, qword ptr [rip + 0x2c4871] ; ret
0x0000000000198d5c : movsb byte ptr [rdi], byte ptr [rsi] ; sub al, byte ptr [rdx] ; add byte ptr [rsp + rdx*2 - 6], ah ; jmp rsp
0x0000000000106a7c : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, dword ptr [rax] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x106b8f ; call rax
0x0000000000198680 : movsb byte ptr [rdi], byte ptr [rsi] ; xor al, 0xf9 ; push qword ptr [rsp + rsi*8 + 1] ; add byte ptr [rsi + rsi], ah ; stc ; call rsp
0x00000000001995a0 : movsb byte ptr [rdi], byte ptr [rsi] ; xor al, 0xfb ; call rsp
0x0000000000084b8b : movsd dword ptr [rdi], dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77cfdb9], cl ; add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x0000000000076fdf : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000011b480 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4104
0x00000000000906b7 : movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000001b3f2d : movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; shr cl, 0xfb ; call rsi
0x0000000000159427 : movsd dword ptr [rdi], dword ptr [rsi] ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000005df9f : movsd dword ptr [rdi], dword ptr [rsi] ; call 0xffffffff8953dfb5
0x00000000001b92e9 : movsd dword ptr [rdi], dword ptr [rsi] ; clc ; call qword ptr [rbx]
0x00000000001990d9 : movsd dword ptr [rdi], dword ptr [rsi] ; cli ; jmp rsp
0x000000000005fa81 : movsd dword ptr [rdi], dword ptr [rsi] ; cmp al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000368b4 : movsd dword ptr [rdi], dword ptr [rsi] ; cmp byte ptr [rax], al ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x0000000000048e85 : movsd dword ptr [rdi], dword ptr [rsi] ; enter -0x76b4, 0x47 ; clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000048e11 : movsd dword ptr [rdi], dword ptr [rsi] ; enter -0x76b4, 7 ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000183a75 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000183331 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x0000000000144b4b : movsd dword ptr [rdi], dword ptr [rsi] ; mov qword ptr [rbp], rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000056898 : movsd dword ptr [rdi], dword ptr [rsi] ; nop dword ptr [rax] ; mov qword ptr [rdi], rcx ; mov eax, 0xffffffff ; ret
0x0000000000048e42 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000193331 : movsd dword ptr [rdi], dword ptr [rsi] ; sti ; push rax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sti ; inc dword ptr [rax - 0x58] ; sti ; call qword ptr [rax - 0x1f000457]
0x000000000012b793 : movsd dword ptr [rdi], dword ptr [rsi] ; sub dword ptr [rax], eax ; ror rdi, 0x11 ; xor rdi, qword ptr fs:[0x30] ; call rax
0x00000000000e98d4 : movsd dword ptr [rdi], dword ptr [rsi] ; sub eax, 0x36740000 ; xor eax, eax ; ret
0x000000000012a71c : movsd dword ptr [rdi], dword ptr [rsi] ; xor eax, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000034b51 : movsd qword ptr [rdi], xmm0 ; and rax, rdx ; movq xmm0, rax ; ret
0x0000000000034bd2 : movsd qword ptr [rdi], xmm1 ; ret
0x0000000000034b9b : movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x0000000000144b4a : movsq qword ptr [rdi], qword ptr [rsi] ; mov qword ptr [rbp], rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000145c25 : movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000012b792 : movsq qword ptr [rdi], qword ptr [rsi] ; sub dword ptr [rax], eax ; ror rdi, 0x11 ; xor rdi, qword ptr fs:[0x30] ; call rax
0x0000000000034f05 : movss dword ptr [rdi], xmm0 ; and eax, 0x80000000 ; movd xmm0, eax ; ret
0x0000000000034f4b : movss dword ptr [rdi], xmm0 ; je 0x34f71 ; mov eax, edx ; and eax, 0x80000000 ; movd xmm0, eax ; ret
0x0000000000034f3b : movss dword ptr [rdi], xmm1 ; ret
0x0000000000034f20 : movss dword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x00000000000a066d : movsx eax, byte ptr [rdi + rax] ; test r8b, r8b ; jne 0xa065a ; ret
0x00000000000a07ac : movsx eax, byte ptr [rdi] ; test r8b, r8b ; jne 0xa079a ; xor eax, eax ; ret
0x00000000000a06c4 : movsx ecx, byte ptr [rdi + rax] ; cmp ecx, edx ; je 0xa06cd ; cmp ecx, esi ; je 0xa06cd ; ret
0x00000000000a0614 : movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0xa0611 ; ret
0x00000000000a0754 : movsx ecx, byte ptr [rdi] ; test cl, cl ; jne 0xa0751 ; xor eax, eax ; ret
0x00000000000a05d0 : movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0xa05d1 ; ret
0x00000000000a066c : movsx r8d, byte ptr [rdi + rax] ; test r8b, r8b ; jne 0xa065b ; ret
0x00000000000a07ab : movsx r8d, byte ptr [rdi] ; test r8b, r8b ; jne 0xa079b ; xor eax, eax ; ret
0x00000000001536c0 : movsxd r9, dword ptr [r11 + rdx*4] ; add rsi, rdx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000000c3967 : movsxd rax, dword ptr [r8 + rdi*4] ; add rax, r8 ; jmp rax
0x000000000013044c : movsxd rax, dword ptr [rdi + 0x18] ; cmp eax, 3 ; jbe 0x13046e ; mov eax, 2 ; ret
0x00000000000c5a6a : movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x00000000000e4c50 : movsxd rax, dword ptr [rdx + rax*4] ; mov rbp, rsi ; mov qword ptr [rsp + 0x28], rdi ; add rax, rdx ; jmp rax
0x00000000000aac67 : movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x00000000000abcbc : movsxd rax, ebx ; nop ; mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xabd2c ; ret
0x000000000014d4c4 : movsxd rax, ecx ; add rax, rdi ; ret
0x000000000014d388 : movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x000000000014d5dd : movsxd rax, ecx ; add rax, rdi ; sub rax, rdx ; ret
0x00000000000367b7 : movsxd rax, ecx ; mov rcx, qword ptr [rsi + rax*8] ; and rcx, qword ptr [rdx + rax*8] ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x0000000000036aa7 : movsxd rax, ecx ; mov rcx, qword ptr [rsi + rax*8] ; or rcx, qword ptr [rdx + rax*8] ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x000000000014a6fb : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014e6a8 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000014dec8 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000014e2b8 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014dad8 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b25b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014aa3b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000014a21b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000014dc77 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014ad7b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a55b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000149d3b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000014af1b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000014e168 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d988 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ea98 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a07b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a1b1 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014aeb1 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a9d1 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014e069 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014e999 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014b1f1 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a4f1 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000014a011 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ad11 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000014e1b9 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014d9d9 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000036289 : movsxd rax, ecx ; shl rdx, cl ; shr rax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x000000000014d3a3 : movsxd rbx, ebx ; cmp cl, byte ptr [rax + 0x63] ; leave ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x000000000006da0d : movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x000000000014d379 : movsxd rcx, ebx ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x000000000014d3a7 : movsxd rcx, ecx ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x000000000003626c : movsxd rcx, ecx ; shr rcx, 6 ; test qword ptr [rdi + rcx*8], rax ; setne al ; movzx eax, al ; ret
0x00000000000e8d5a : movsxd rdi, dword ptr [r11 + rdi*4] ; add rdi, r11 ; jmp rdi
0x000000000007a609 : movsxd rdi, dword ptr [rbx + 0x70] ; syscall ; cmp rax, -0x1000 ; ja 0x7a62f ; pop rbx ; ret
0x000000000007aff0 : movsxd rdi, dword ptr [rdi + 0x70] ; xor eax, eax ; syscall ; cmp rax, -0x1000 ; ja 0x7b013 ; ret
0x0000000000124a90 : movsxd rdi, dword ptr [rdi] ; mov eax, 3 ; syscall ; ret
0x00000000001932a9 : movsxd rdi, ebx ; jmp qword ptr [rax]
0x00000000001932a5 : movsxd rdi, ebx ; push rax ; movsxd rdi, ebx ; jmp qword ptr [rax]
0x00000000000fd8d1 : movsxd rdi, edi ; mov eax, 0x11d ; syscall ; cmp rax, -0x1000 ; ja 0xfd8f9 ; ret
0x000000000002e025 : movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002d988 : movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000002dd98 : movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002ddb8 : movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002dcf8 : movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002dd78 : movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002dc98 : movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002dd38 : movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002dcd8 : movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002dd18 : movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000002de38 : movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000002dcb8 : movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 2 ; movzx eax, ax ; ret
0x000000000002dd58 : movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 4 ; movzx eax, ax ; ret
0x000000000002dc78 : movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 8 ; movzx eax, ax ; ret
0x000000000002dfe5 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002e005 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002df45 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002dfc5 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002dee5 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002df85 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002df25 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002df65 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000002deb5 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000002df05 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 2 ; movzx eax, ax ; ret
0x000000000002dfa5 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 4 ; movzx eax, ax ; ret
0x000000000002dec5 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 8 ; movzx eax, ax ; ret
0x00000000000a5fe1 : movsxd rdi, edi ; or eax, 0xc634900 ; xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000119336 : movsxd rdi, edi ; xor eax, eax ; syscall ; cmp rax, -0x1000 ; ja 0x11935f ; ret
0x0000000000119335 : movsxd rdi, edi ; xor eax, eax ; syscall ; cmp rax, -0x1000 ; ja 0x119360 ; ret
0x0000000000153bc9 : movsxd rdi, edx ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000008b4f1 : movsxd rdi, esi ; mov dword ptr [rbx + 0x30], eax ; mov qword ptr [rbx], rdi ; call rcx
0x0000000000193e69 : movsxd rdi, esp ; call qword ptr [rax]
0x0000000000033453 : movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x0000000000126882 : movsxd rdx, eax ; add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x0000000000126701 : movsxd rdx, edx ; mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x000000000008b5a1 : movsxd rsi, esi ; mov dword ptr [rbx + 0x30], eax ; mov qword ptr [rbx + 0x48], r9 ; mov qword ptr [rbx], rsi ; mov rdi, r9 ; call rcx
0x00000000000913c7 : movups xmm0, xmmword ptr [rsi] ; movups xmm1, xmmword ptr [rsi + rdx - 0x10] ; movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000000913ca : movups xmm1, xmmword ptr [rsi + rdx - 0x10] ; movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000091550 : movups xmmword ptr [rdi + 0x10], xmm1 ; movups xmmword ptr [rdi + rdx - 0x10], xmm2 ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x000000000009166a : movups xmmword ptr [rdi + 0x10], xmm5 ; movups xmmword ptr [rdi + 0x20], xmm6 ; movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000009166e : movups xmmword ptr [rdi + 0x20], xmm6 ; movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000091672 : movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000000913d2 : movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000091554 : movups xmmword ptr [rdi + rdx - 0x10], xmm2 ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x0000000000091559 : movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x000000000009152c : movups xmmword ptr [rdi + rdx - 0x20], xmm5 ; movups xmmword ptr [rdi + rdx - 0x30], xmm6 ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x0000000000091531 : movups xmmword ptr [rdi + rdx - 0x30], xmm6 ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x0000000000091536 : movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x0000000000034f06 : movups xmmword ptr [rdi], xmm0 ; and eax, 0x80000000 ; movd xmm0, eax ; ret
0x0000000000034b52 : movups xmmword ptr [rdi], xmm0 ; and rax, rdx ; movq xmm0, rax ; ret
0x0000000000034f4c : movups xmmword ptr [rdi], xmm0 ; je 0x34f70 ; mov eax, edx ; and eax, 0x80000000 ; movd xmm0, eax ; ret
0x000000000009154d : movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + 0x10], xmm1 ; movups xmmword ptr [rdi + rdx - 0x10], xmm2 ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x00000000000913cf : movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000034bd3 : movups xmmword ptr [rdi], xmm1 ; ret
0x0000000000034b9c : movups xmmword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x0000000000034f21 : movups xmmword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x00000000000ec241 : movzx eax, al ; neg eax ; cmp dword ptr [rdi + 0x10], ecx ; cmovb eax, edx ; ret
0x000000000004ac2b : movzx eax, byte ptr [r8 + rdi] ; mov rdi, rdx ; mov byte ptr [rsi], al ; jne 0x4ac1f ; mov rax, rsi ; ret
0x000000000004aba7 : movzx eax, byte ptr [r8 + rdx] ; test rdi, rdi ; mov byte ptr [rsi], al ; jne 0x4aba7 ; mov rax, rsi ; ret
0x00000000000d69b5 : movzx eax, byte ptr [r9 + rax] ; mov byte ptr [rdi + 8], 1 ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x0000000000098bd5 : movzx eax, byte ptr [r9] ; test al, al ; jne 0x98c4b ; mov rax, rdi ; ret
0x000000000004ac2c : movzx eax, byte ptr [rax + rdi] ; mov rdi, rdx ; mov byte ptr [rsi], al ; jne 0x4ac1e ; mov rax, rsi ; ret
0x00000000001329ae : movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x000000000004aba8 : movzx eax, byte ptr [rax + rdx] ; test rdi, rdi ; mov byte ptr [rsi], al ; jne 0x4aba6 ; mov rax, rsi ; ret
0x00000000000d69b6 : movzx eax, byte ptr [rcx + rax] ; mov byte ptr [rdi + 8], 1 ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x0000000000098bd6 : movzx eax, byte ptr [rcx] ; test al, al ; jne 0x98c4a ; mov rax, rdi ; ret
0x0000000000125dbc : movzx eax, byte ptr [rdi + 1] ; lea rax, qword ptr [rdi + rax + 2] ; cmp rdx, rax ; sbb eax, eax ; ret
0x0000000000126a66 : movzx eax, byte ptr [rdi + 1] ; shl eax, 3 ; cdqe ; shr rax, 4 ; ret
0x00000000000d6076 : movzx eax, byte ptr [rdi + rax] ; mov r9, rdi ; xor eax, eax ; mov rdx, r8 ; jmp 0xd60a5
0x0000000000147b3b : movzx eax, byte ptr [rdi + rcx] ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x00000000000a1352 : movzx eax, byte ptr [rdi + rdx] ; movzx ecx, byte ptr [rsi + rdx] ; test al, al ; jne 0xa1350 ; xor eax, eax ; sub eax, ecx ; ret
0x00000000000a10ff : movzx eax, byte ptr [rdi + rdx] ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000014877a : movzx eax, byte ptr [rdi + rdx] ; movzx edx, byte ptr [rsi + rdx] ; test r8d, r8d ; je 0x148798 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000014975f : movzx eax, byte ptr [rdi + rdx] ; movzx edx, byte ptr [rsi + rdx] ; test r8d, r8d ; je 0x14977d ; xchg eax, edx ; sub eax, edx ; ret
0x000000000008d438 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x00000000001701d0 : movzx eax, byte ptr [rdi - 0x10] ; movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x0000000000170230 : movzx eax, byte ptr [rdi - 0xa] ; movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x0000000000170220 : movzx eax, byte ptr [rdi - 0xb] ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000170210 : movzx eax, byte ptr [rdi - 0xc] ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000170200 : movzx eax, byte ptr [rdi - 0xd] ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x00000000001701f0 : movzx eax, byte ptr [rdi - 0xe] ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x00000000001701e0 : movzx eax, byte ptr [rdi - 0xf] ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000001706e2 : movzx eax, byte ptr [rdi - 1] ; cmp al, byte ptr [rsi - 1] ; jne 0x170710 ; xor eax, eax ; ret
0x000000000017058a : movzx eax, byte ptr [rdi - 1] ; cmp al, byte ptr [rsi - 1] ; jne 0x170714 ; xor eax, eax ; ret
0x000000000016c590 : movzx eax, byte ptr [rdi - 1] ; movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x000000000016c343 : movzx eax, byte ptr [rdi - 1] ; movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x00000000001701b7 : movzx eax, byte ptr [rdi - 9] ; movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x000000000016b6f0 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000090f70 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000008d453 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000091844 : movzx eax, dh ; mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000091843 : movzx eax, sil ; mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000002e055 : movzx eax, word ptr [rax + rdi*2 + 0x100] ; and eax, esi ; ret
0x000000000002dd9e : movzx eax, word ptr [rax + rdi*2] ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002ddbe : movzx eax, word ptr [rax + rdi*2] ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002dcfe : movzx eax, word ptr [rax + rdi*2] ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002dd7e : movzx eax, word ptr [rax + rdi*2] ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002dc9e : movzx eax, word ptr [rax + rdi*2] ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002dd3e : movzx eax, word ptr [rax + rdi*2] ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002dcde : movzx eax, word ptr [rax + rdi*2] ; and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002dd1e : movzx eax, word ptr [rax + rdi*2] ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000002de3e : movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000002dcbe : movzx eax, word ptr [rax + rdi*2] ; and eax, 2 ; movzx eax, ax ; ret
0x000000000002dd5e : movzx eax, word ptr [rax + rdi*2] ; and eax, 4 ; movzx eax, ax ; ret
0x000000000002dc7e : movzx eax, word ptr [rax + rdi*2] ; and eax, 8 ; movzx eax, ax ; ret
0x00000000000f7330 : movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x000000000008d434 : movzx ecx, byte ptr [rsi + rdx] ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x00000000000914a8 : movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000008d450 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00000000000914cc : movzx ecx, word ptr [rsi + rdx - 2] ; movzx esi, word ptr [rsi] ; mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x00000000000e8d56 : movzx edi, byte ptr [rdx + 8] ; movsxd rdi, dword ptr [r11 + rdi*4] ; add rdi, r11 ; jmp rdi
0x000000000010a462 : movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000c3964 : movzx edi, dl ; movsxd rax, dword ptr [r8 + rdi*4] ; add rax, r8 ; jmp rax
0x00000000000a0506 : movzx edx, byte ptr [rcx] ; test dl, dl ; jne 0xa0505 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00000000000a0584 : movzx edx, byte ptr [rcx] ; test dl, dl ; jne 0xa0576 ; pop rbx ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00000000001329a7 : movzx edx, byte ptr [rdi + 7] ; and edx, 0x7f ; movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x000000000008d751 : movzx edx, byte ptr [rdi] ; sub edx, 0x30 ; cmp edx, 9 ; mov edx, 0xffffffff ; cmovbe eax, edx ; ret
0x0000000000033ef7 : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x33edf ; ret
0x000000000015aff0 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000015b6d0 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000015af70 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000015b660 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000914d1 : movzx esi, word ptr [rsi] ; mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x00000000000d6075 : movzx r8d, byte ptr [rdi + rax] ; mov r9, rdi ; xor eax, eax ; mov rdx, r8 ; jmp 0xd60a6
0x00000000000858d8 : mul byte ptr [rdi + rax*8] ; or al, 0 ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x000000000008f837 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000009409d : neg dword ptr [rdi + rcx] ; add byte ptr [rdi + 0x63], cl ; or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000000ec244 : neg eax ; cmp dword ptr [rdi + 0x10], ecx ; cmovb eax, edx ; ret
0x00000000000ff0bd : neg edx ; mov rdi, r8 ; mov eax, 3 ; syscall ; mov eax, edx ; ret
0x00000000000801c4 : neg rdi ; call qword ptr [r15]
0x0000000000008fd0 : nop ; adc byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + rax], bl ; add byte ptr [rax], al ; ret
0x0000000000076a8e : nop ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x00000000000769ab : nop ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x0000000000138296 : nop ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; enter 0x4289, 0x10 ; mov eax, 1 ; ret
0x0000000000138176 : nop ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; enter 0x4289, 0xc ; mov eax, 1 ; ret
0x000000000016b9fc : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016b9f4 : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001a297d : nop ; add byte ptr [rax], al ; ror dl, 1 ; in eax, dx ; call rdi
0x00000000000a069f : nop ; add rax, 1 ; cmp byte ptr [rdi + rax], dl ; je 0xa06ab ; ret
0x00000000000a069e : nop ; add rax, 1 ; cmp byte ptr [rdi + rax], dl ; je 0xa06ac ; ret
0x00000000000a105f : nop ; add rsp, 8 ; mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000090dcf : nop ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x0000000000090e2f : nop ; bsf eax, eax ; sub rdx, rax ; jbe 0x90e5e ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000090e3f : nop ; bsf eax, eax ; sub rdx, rax ; jbe 0x90e5e ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000090e2e : nop ; bsf eax, eax ; sub rdx, rax ; jbe 0x90e5f ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000090e3e : nop ; bsf eax, eax ; sub rdx, rax ; jbe 0x90e5f ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000a0c1f : nop ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000a0daf : nop ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x00000000000ac78f : nop ; cmp edx, eax ; je 0xac811 ; add rdi, 4 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0xac7a1 ; xor eax, eax ; ret
0x00000000001258ff : nop ; lea eax, dword ptr [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00000000000d69df : nop ; mov byte ptr [rdi + 8], 0x1c ; mov eax, 2 ; ret
0x00000000000d691f : nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000001552ff : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001554df : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000001556bf : nop ; mov dx, word ptr [rsi - 3] ; mov cx, word ptr [rsi - 2] ; mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000163f9f : nop ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov ax, word ptr [rcx + 4] ; mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00000000000abcbf : nop ; mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xabd29 ; ret
0x00000000000abcbe : nop ; mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xabd2a ; ret
0x00000000000abd0f : nop ; mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xabd29 ; ret
0x00000000000abd0e : nop ; mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xabd2a ; ret
0x00000000001379bf : nop ; mov eax, dword ptr [rdi + 0x54] ; bswap eax ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x00000000000798ef : nop ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x00000000000a085f : nop ; mov eax, dword ptr [rsp + 0x10] ; mov word ptr [rdi + 4], r11w ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a84ef : nop ; mov ecx, dword ptr [rsi] ; mov dx, word ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000091a4f : nop ; mov edx, 0xffffffff ; bsf rax, rdi ; cmove rax, rdx ; add eax, 1 ; ret
0x000000000015589f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a769f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000163fbf : nop ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x00000000000c8e6f : nop ; mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000078d8f : nop ; mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000078c7f : nop ; mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x000000000013daff : nop ; mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00000000001378df : nop ; mov rax, qword ptr [rdx] ; bswap eax ; mov dword ptr [rdi + 0x54], eax ; mov eax, 1 ; ret
0x000000000003a90f : nop ; mov rax, rdi ; cqo ; idiv rsi ; ret
0x00000000000a075f : nop ; mov rax, rdi ; ret
0x00000000000a610f : nop ; mov rcx, qword ptr [rsi] ; mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a613f : nop ; mov rcx, qword ptr [rsi] ; mov rdx, qword ptr [rsi + 6] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a614f : nop ; mov rcx, qword ptr [rsi] ; mov rdx, qword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000009183f : nop ; mov rcx, rdx ; movzx eax, sil ; mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000001727ff : nop ; mov rdi, qword ptr [rip + 0x252949] ; cmp rdi, 1 ; ja 0x17281e ; ret
0x00000000001727fe : nop ; mov rdi, qword ptr [rip + 0x252949] ; cmp rdi, 1 ; ja 0x17281f ; ret
0x00000000000a76ef : nop ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a851f : nop ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000003763f : nop ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000037b8f : nop ; mov rsi, r13 ; mov rdi, r14 ; mov rdx, rbp ; call r15
0x000000000010ff6f : nop ; mov rsi, rdi ; mov edi, 0x20 ; call 0x72530
0x000000000010ff6e : nop ; mov rsi, rdi ; mov edi, 0x20 ; call 0x72531
0x00000000000f734f : nop ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x00000000000a6e4f : nop ; movdqu xmm0, xmmword ptr [rsi] ; mov cx, word ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a61af : nop ; movdqu xmm0, xmmword ptr [rsi] ; mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a615f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000193e68 : nop ; movsxd rdi, esp ; call qword ptr [rax]
0x00000000000f732f : nop ; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x000000000016ef55 : nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000016ef65 : nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000016ef75 : nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000016ef85 : nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000016ef95 : nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000016eed5 : nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000016eee5 : nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000016eef5 : nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000016ef05 : nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000016ef15 : nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000016ef25 : nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000016ef35 : nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000016ef45 : nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000ac655 : nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000ac675 : nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000ac665 : nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi - 8] ; ret
0x000000000016eec5 : nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi] ; ret
0x00000000000a7055 : nop ; nop word ptr cs:[rax + rax] ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000a7065 : nop ; nop word ptr cs:[rax + rax] ; mov dword ptr [rdi], edx ; ret
0x00000000000a6d45 : nop ; nop word ptr cs:[rax + rax] ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000007ee75 : nop ; nop word ptr cs:[rax + rax] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000000a70b5 : nop ; nop word ptr cs:[rax + rax] ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a70a5 : nop ; nop word ptr cs:[rax + rax] ; mov qword ptr [rdi], rdx ; ret
0x000000000007f165 : nop ; nop word ptr cs:[rax + rax] ; mov rax, rdi ; ret
0x0000000000193e9c : nop ; pop rdi ; cld ; call qword ptr [rax]
0x0000000000193e48 : nop ; push rdi ; cld ; call qword ptr [rax]
0x000000000007eeaf : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000007736f : nop ; test dword ptr [rdi], 0x2000 ; je 0x77399 ; mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x77399 ; ret
0x000000000013ea68 : nop dword ptr [rax + rax] ; add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x00000000000798d8 : nop dword ptr [rax + rax] ; and dword ptr [rdi], 0xffffffcf ; ret
0x000000000007715b : nop dword ptr [rax + rax] ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x0000000000090de8 : nop dword ptr [rax + rax] ; bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000097f68 : nop dword ptr [rax + rax] ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000000a0c28 : nop dword ptr [rax + rax] ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000013d36b : nop dword ptr [rax + rax] ; cmp eax, 1 ; jne 0x13d36f ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000016ef58 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000016ef68 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000016ef78 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000016ef88 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000016ef98 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000016eed8 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000016eee8 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000016eef8 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000016ef08 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000016ef18 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000016ef28 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000016ef38 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000016ef48 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000ac658 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000ac678 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000ac668 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi - 8] ; ret
0x000000000016eec8 : nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi] ; ret
0x0000000000163f48 : nop dword ptr [rax + rax] ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000163f58 : nop dword ptr [rax + rax] ; mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000000d6948 : nop dword ptr [rax + rax] ; mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x0000000000079d08 : nop dword ptr [rax + rax] ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000a7668 : nop dword ptr [rax + rax] ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000a6068 : nop dword ptr [rax + rax] ; mov byte ptr [rdi], dh ; ret
0x00000000000a7038 : nop dword ptr [rax + rax] ; mov byte ptr [rdi], dl ; ret
0x00000000000a080b : nop dword ptr [rax + rax] ; mov byte ptr [rdi], sil ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a6088 : nop dword ptr [rax + rax] ; mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000a8488 : nop dword ptr [rax + rax] ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a6d38 : nop dword ptr [rax + rax] ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000a9ef8 : nop dword ptr [rax + rax] ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x000000000013794b : nop dword ptr [rax + rax] ; mov dword ptr [rdi + 4], 1 ; mov eax, 1 ; ret
0x00000000000f7368 : nop dword ptr [rax + rax] ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000a7058 : nop dword ptr [rax + rax] ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000a0908 : nop dword ptr [rax + rax] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000a08bb : nop dword ptr [rax + rax] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x00000000000a08fb : nop dword ptr [rax + rax] ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00000000000a09ab : nop dword ptr [rax + rax] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a08ab : nop dword ptr [rax + rax] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00000000000a7078 : nop dword ptr [rax + rax] ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a7088 : nop dword ptr [rax + rax] ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a7068 : nop dword ptr [rax + rax] ; mov dword ptr [rdi], edx ; ret
0x00000000000a6078 : nop dword ptr [rax + rax] ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000a9f0b : nop dword ptr [rax + rax] ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x0000000000056843 : nop dword ptr [rax + rax] ; mov eax, 0xffffffff ; mov qword ptr [rdi], r10 ; ret
0x000000000016b668 : nop dword ptr [rax + rax] ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000000f7e2b : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi + 0x108] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000007ee78 : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000000abc98 : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0xabd30 ; ret
0x00000000000abce8 : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xabd30 ; ret
0x00000000000d8103 : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x00000000000f7358 : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000fd968 : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x0000000000078cb8 : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x00000000000a60a8 : nop dword ptr [rax + rax] ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000a6d8b : nop dword ptr [rax + rax] ; mov ecx, dword ptr [rsi] ; mov dx, word ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000015ae58 : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a84c8 : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a609b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000a9f38 : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x000000000013e69b : nop dword ptr [rax + rax] ; mov qword ptr [rdi + 0x18], rsi ; mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x00000000000a7098 : nop dword ptr [rax + rax] ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000a70b8 : nop dword ptr [rax + rax] ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a70d8 : nop dword ptr [rax + rax] ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a70e8 : nop dword ptr [rax + rax] ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a70f8 : nop dword ptr [rax + rax] ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a7108 : nop dword ptr [rax + rax] ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a70c8 : nop dword ptr [rax + rax] ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a70a8 : nop dword ptr [rax + rax] ; mov qword ptr [rdi], rdx ; ret
0x000000000011b1b8 : nop dword ptr [rax + rax] ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x0000000000130e1b : nop dword ptr [rax + rax] ; mov rax, qword ptr [rbx + 8] ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000163ed8 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000013e658 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000076858 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007f158 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000013d828 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013d463 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000002e02b : nop dword ptr [rax + rax] ; mov rax, qword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000007f168 : nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000000a60e8 : nop dword ptr [rax + rax] ; mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000155128 : nop dword ptr [rax + rax] ; mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000a60db : nop dword ptr [rax + rax] ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a7048 : nop dword ptr [rax + rax] ; mov word ptr [rdi], dx ; ret
0x00000000000a0818 : nop dword ptr [rax + rax] ; mov word ptr [rdi], r9w ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a096b : nop dword ptr [rax + rax] ; mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a08d8 : nop dword ptr [rax + rax] ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x00000000000a7118 : nop dword ptr [rax + rax] ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000a7128 : nop dword ptr [rax + rax] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000001266fb : nop dword ptr [rax + rax] ; movsxd rdx, edx ; mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x000000000017022b : nop dword ptr [rax + rax] ; movzx eax, byte ptr [rdi - 0xa] ; movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x000000000017021b : nop dword ptr [rax + rax] ; movzx eax, byte ptr [rdi - 0xb] ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000017020b : nop dword ptr [rax + rax] ; movzx eax, byte ptr [rdi - 0xc] ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000001701fb : nop dword ptr [rax + rax] ; movzx eax, byte ptr [rdi - 0xd] ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x00000000001701eb : nop dword ptr [rax + rax] ; movzx eax, byte ptr [rdi - 0xe] ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x00000000001701db : nop dword ptr [rax + rax] ; movzx eax, byte ptr [rdi - 0xf] ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000016b6e8 : nop dword ptr [rax + rax] ; movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008d448 : nop dword ptr [rax + rax] ; movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000015afe8 : nop dword ptr [rax + rax] ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000015af68 : nop dword ptr [rax + rax] ; movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000000f7327 : nop dword ptr [rax + rax] ; nop ; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000000a7031 : nop dword ptr [rax + rax] ; nop word ptr cs:[rax + rax] ; mov byte ptr [rdi], dl ; ret
0x00000000000a9ee8 : nop dword ptr [rax + rax] ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x0000000000078cc8 : nop dword ptr [rax + rax] ; xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x000000000013ea29 : nop dword ptr [rax] ; add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x0000000000037655 : nop dword ptr [rax] ; add rbx, r14 ; mov rdx, r13 ; mov rsi, rbx ; mov rdi, r12 ; call r15
0x00000000000ac62d : nop dword ptr [rax] ; and rax, 0x1f ; je 0xac6a1 ; test al, 0xf0 ; jne 0xac671 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000090dd9 : nop dword ptr [rax] ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000090df9 : nop dword ptr [rax] ; bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000090e1c : nop dword ptr [rax] ; bsf eax, eax ; sub rdx, rax ; jbe 0x90e61 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000000a0c39 : nop dword ptr [rax] ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x00000000000a0c49 : nop dword ptr [rax] ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x000000000007d7cd : nop dword ptr [rax] ; cmp qword ptr [rdi + 0x38], 0 ; je 0x7d7ea ; ret
0x0000000000050e65 : nop dword ptr [rax] ; lea eax, dword ptr [rdi - 1] ; xor edx, edx ; div ecx ; add r8d, eax ; mov eax, r8d ; ret
0x00000000000ac905 : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000ac8f5 : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000ac8fd : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000d6975 : nop dword ptr [rax] ; mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x00000000000a0949 : nop dword ptr [rax] ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000f7f0c : nop dword ptr [rax] ; mov dword ptr [rdi + 0x10c], esi ; xor eax, eax ; ret
0x000000000013795d : nop dword ptr [rax] ; mov dword ptr [rdi + 4], 0 ; mov eax, 1 ; ret
0x0000000000071d99 : nop dword ptr [rax] ; mov dword ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000a098c : nop dword ptr [rax] ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a8499 : nop dword ptr [rax] ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000116e29 : nop dword ptr [rax] ; mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0x116e4f ; ret
0x00000000000f7e1c : nop dword ptr [rax] ; mov eax, dword ptr [rdi + 0x10c] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000013ea39 : nop dword ptr [rax] ; mov eax, dword ptr [rdi + 0x28] ; ret
0x0000000000078ce9 : nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x000000000013793d : nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000c8f7d : nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; ret
0x00000000000798f9 : nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x00000000000f7f19 : nop dword ptr [rax] ; mov eax, dword ptr [rsi] ; mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x00000000000a083c : nop dword ptr [rax] ; mov eax, dword ptr [rsp + 0x10] ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000013e79c : nop dword ptr [rax] ; mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x13e7bd ; xor eax, eax ; ret
0x000000000013e7dc : nop dword ptr [rax] ; mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x13e7fd ; xor eax, eax ; ret
0x00000000000a60cd : nop dword ptr [rax] ; mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000015b509 : nop dword ptr [rax] ; mov edx, dword ptr [rsi + 1] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b499 : nop dword ptr [rax] ; mov edx, dword ptr [rsi + 2] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b429 : nop dword ptr [rax] ; mov edx, dword ptr [rsi + 3] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000000a6d6d : nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000056899 : nop dword ptr [rax] ; mov qword ptr [rdi], rcx ; mov eax, 0xffffffff ; ret
0x000000000013b2a4 : nop dword ptr [rax] ; mov rax, qword ptr [r15 + 8] ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000013dc3d : nop dword ptr [rax] ; mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000130db9 : nop dword ptr [rax] ; mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000010c894 : nop dword ptr [rax] ; mov rax, qword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000003a919 : nop dword ptr [rax] ; mov rax, rdi ; cqo ; idiv rsi ; ret
0x0000000000097c31 : nop dword ptr [rax] ; mov rax, rdi ; ret
0x00000000000a6dcd : nop dword ptr [rax] ; mov rcx, qword ptr [rsi] ; mov dx, word ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a611d : nop dword ptr [rax] ; mov rcx, qword ptr [rsi] ; mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a612d : nop dword ptr [rax] ; mov rcx, qword ptr [rsi] ; mov rdx, qword ptr [rsi + 5] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000001358cc : nop dword ptr [rax] ; mov rdi, qword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1358ee ; ret
0x000000000013ba6c : nop dword ptr [rax] ; mov rdi, qword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x13ba8e ; ret
0x00000000001236b9 : nop dword ptr [rax] ; mov rdi, qword ptr [rsp + 0x28] ; call 0x1f9c6
0x0000000000116e39 : nop dword ptr [rax] ; mov rdx, qword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x000000000015b3b9 : nop dword ptr [rax] ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000877ec : nop dword ptr [rax] ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, r12 ; call rax
0x0000000000090f6d : nop dword ptr [rax] ; movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000015b6c9 : nop dword ptr [rax] ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000015b659 : nop dword ptr [rax] ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000007f153 : nop dword ptr [rax] ; nop word ptr cs:[rax + rax] ; mov rax, qword ptr [rdi + 0x68] ; ret
0x00000000000a7043 : nop dword ptr [rax] ; nop word ptr cs:[rax + rax] ; mov word ptr [rdi], dx ; ret
0x00000000000a9ee3 : nop dword ptr [rax] ; nop word ptr cs:[rax + rax] ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x000000000006effd : nop dword ptr [rax] ; or dword ptr [rdi], 0x20 ; ret
0x000000000002c34c : nop dword ptr [rax] ; push rbx ; mov rax, qword ptr [rdi + 0x20] ; mov rbx, rdi ; test rax, rax ; je 0x2c370 ; call rax
0x00000000000a2dcd : nop dword ptr [rax] ; xor ah, ah ; mov byte ptr [rdx + 2], ah ; mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000078cd9 : nop dword ptr [rax] ; xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x0000000000034d7d : nop dword ptr [rax] ; xor ecx, ecx ; addsd xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x00000000000798d7 : nop dword ptr cs:[rax + rax] ; and dword ptr [rdi], 0xffffffcf ; ret
0x0000000000097f67 : nop dword ptr cs:[rax + rax] ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000016ef57 : nop dword ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000016ef67 : nop dword ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000016ef77 : nop dword ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000016ef87 : nop dword ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000016ef97 : nop dword ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000016eed7 : nop dword ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000016eee7 : nop dword ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000016eef7 : nop dword ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000016ef07 : nop dword ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000016ef17 : nop dword ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000016ef27 : nop dword ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000016ef37 : nop dword ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000016ef47 : nop dword ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000ac657 : nop dword ptr cs:[rax + rax] ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000ac677 : nop dword ptr cs:[rax + rax] ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000ac667 : nop dword ptr cs:[rax + rax] ; lea rax, qword ptr [rdi - 8] ; ret
0x000000000016eec7 : nop dword ptr cs:[rax + rax] ; lea rax, qword ptr [rdi] ; ret
0x0000000000163f47 : nop dword ptr cs:[rax + rax] ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000079d07 : nop dword ptr cs:[rax + rax] ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000a7667 : nop dword ptr cs:[rax + rax] ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000a6067 : nop dword ptr cs:[rax + rax] ; mov byte ptr [rdi], dh ; ret
0x00000000000a7037 : nop dword ptr cs:[rax + rax] ; mov byte ptr [rdi], dl ; ret
0x00000000000a8487 : nop dword ptr cs:[rax + rax] ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a6d37 : nop dword ptr cs:[rax + rax] ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000a7057 : nop dword ptr cs:[rax + rax] ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000a7077 : nop dword ptr cs:[rax + rax] ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a7087 : nop dword ptr cs:[rax + rax] ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a7067 : nop dword ptr cs:[rax + rax] ; mov dword ptr [rdi], edx ; ret
0x00000000000a6077 : nop dword ptr cs:[rax + rax] ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000007ee77 : nop dword ptr cs:[rax + rax] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000000abce7 : nop dword ptr cs:[rax + rax] ; mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xabd31 ; ret
0x00000000000f7357 : nop dword ptr cs:[rax + rax] ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000fd967 : nop dword ptr cs:[rax + rax] ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x00000000000a60a7 : nop dword ptr cs:[rax + rax] ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000015ae57 : nop dword ptr cs:[rax + rax] ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a84c7 : nop dword ptr cs:[rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a70b7 : nop dword ptr cs:[rax + rax] ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a70a7 : nop dword ptr cs:[rax + rax] ; mov qword ptr [rdi], rdx ; ret
0x000000000011b1b7 : nop dword ptr cs:[rax + rax] ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x000000000013e657 : nop dword ptr cs:[rax + rax] ; mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000076857 : nop dword ptr cs:[rax + rax] ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007f157 : nop dword ptr cs:[rax + rax] ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000007f167 : nop dword ptr cs:[rax + rax] ; mov rax, rdi ; ret
0x0000000000155127 : nop dword ptr cs:[rax + rax] ; mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000a7047 : nop dword ptr cs:[rax + rax] ; mov word ptr [rdi], dx ; ret
0x00000000000a7127 : nop dword ptr cs:[rax + rax] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000008d447 : nop dword ptr cs:[rax + rax] ; movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000015afe7 : nop dword ptr cs:[rax + rax] ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000015af67 : nop dword ptr cs:[rax + rax] ; movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000000a9ee7 : nop dword ptr cs:[rax + rax] ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x0000000000090de7 : nop word ptr [rax + rax] ; bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x00000000000a0c27 : nop word ptr [rax + rax] ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x00000000000a08ca : nop word ptr [rax + rax] ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000a080a : nop word ptr [rax + rax] ; mov byte ptr [rdi], sil ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a08ba : nop word ptr [rax + rax] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x00000000000a08aa : nop word ptr [rax + rax] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00000000000a9f0a : nop word ptr [rax + rax] ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x000000000016b667 : nop word ptr [rax + rax] ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000078cb7 : nop word ptr [rax + rax] ; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x00000000000a609a : nop word ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000a7097 : nop word ptr [rax + rax] ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000a70e7 : nop word ptr [rax + rax] ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a70f7 : nop word ptr [rax + rax] ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a70c7 : nop word ptr [rax + rax] ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a07b7 : nop word ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000000a08d7 : nop word ptr [rax + rax] ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x00000000001266fa : nop word ptr [rax + rax] ; movsxd rdx, edx ; mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x000000000008f6b7 : nop word ptr [rax + rax] ; movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00000000000798d6 : nop word ptr cs:[rax + rax] ; and dword ptr [rdi], 0xffffffcf ; ret
0x000000000016ef56 : nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000016ef66 : nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000016ef76 : nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000016ef86 : nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000016ef96 : nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000016eed6 : nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000016eee6 : nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000016eef6 : nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000016ef06 : nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000016ef16 : nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000016ef26 : nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000016ef36 : nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000016ef46 : nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000ac656 : nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000ac676 : nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000ac666 : nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi - 8] ; ret
0x000000000016eec6 : nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi] ; ret
0x0000000000163f46 : nop word ptr cs:[rax + rax] ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000079d06 : nop word ptr cs:[rax + rax] ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000a7666 : nop word ptr cs:[rax + rax] ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000a6066 : nop word ptr cs:[rax + rax] ; mov byte ptr [rdi], dh ; ret
0x00000000000a7036 : nop word ptr cs:[rax + rax] ; mov byte ptr [rdi], dl ; ret
0x00000000000a6d36 : nop word ptr cs:[rax + rax] ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000a7056 : nop word ptr cs:[rax + rax] ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000a7076 : nop word ptr cs:[rax + rax] ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a7086 : nop word ptr cs:[rax + rax] ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a7066 : nop word ptr cs:[rax + rax] ; mov dword ptr [rdi], edx ; ret
0x00000000000a6076 : nop word ptr cs:[rax + rax] ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000007ee76 : nop word ptr cs:[rax + rax] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000000f7356 : nop word ptr cs:[rax + rax] ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000a60a6 : nop word ptr cs:[rax + rax] ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000015ae56 : nop word ptr cs:[rax + rax] ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a70b6 : nop word ptr cs:[rax + rax] ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a70a6 : nop word ptr cs:[rax + rax] ; mov qword ptr [rdi], rdx ; ret
0x000000000011b1b6 : nop word ptr cs:[rax + rax] ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x0000000000076856 : nop word ptr cs:[rax + rax] ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007f156 : nop word ptr cs:[rax + rax] ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000007f166 : nop word ptr cs:[rax + rax] ; mov rax, rdi ; ret
0x00000000000a7046 : nop word ptr cs:[rax + rax] ; mov word ptr [rdi], dx ; ret
0x00000000000a7126 : nop word ptr cs:[rax + rax] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000015afe6 : nop word ptr cs:[rax + rax] ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000000a9ee6 : nop word ptr cs:[rax + rax] ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x0000000000034f18 : not eax ; and eax, edx ; movd xmm1, eax ; movss dword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x00000000000362b3 : not eax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x000000000007fa21 : not eax ; test rsi, rsi ; mov byte ptr [rdi], r8b ; je 0x7fa6f ; mov qword ptr [rsi], rdi ; ret
0x000000000007fa20 : not r8d ; test rsi, rsi ; mov byte ptr [rdi], r8b ; je 0x7fa70 ; mov qword ptr [rsi], rdi ; ret
0x00000000000362b2 : not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x0000000000002bd4 : or ah, byte ptr [rbp + 0xc] ; scasd eax, dword ptr [rdi] ; xbegin 0xfffffffff8c6efdc ; ret
0x000000000002d9d0 : or ah, byte ptr [rbx] ; ja 0x2d9f0 ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x00000000000559bd : or ah, byte ptr [rsi + 0x44] ; or dword ptr [rsi + 0xe], esp ; xor eax, eax ; mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007f271 : or al, 0 ; add byte ptr [rdx + rdx + 0x48], dh ; mov eax, dword ptr [rdi + 8] ; cmp rax, rdx ; jae 0x7f2b1 ; movzx eax, byte ptr [rax] ; ret
0x00000000000c5a66 : or al, 0 ; mov esi, edx ; movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x00000000000ca1bf : or al, 0 ; mov rdi, r12 ; cmove rcx, rax ; xor eax, eax ; call 0x5648d
0x00000000000c3962 : or al, 0 ; movzx edi, dl ; movsxd rax, dword ptr [r8 + rdi*4] ; add rax, r8 ; jmp rax
0x00000000001507b1 : or al, 0x16 ; cmp rdi, r9 ; jb 0x150991 ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000016e60c : or al, 0x16 ; cmp rdi, r9 ; jb 0x16e85c ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000091486 : or al, 0x16 ; cmp rdi, r9 ; jb 0x91604 ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000008d436 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000007a354 : or al, 0x24 ; mov rdi, rbx ; call rax
0x0000000000187ce4 : or al, 0x2f ; cmc ; push qword ptr [rdi - 0x14000ad1] ; cmc ; call rax
0x00000000001ad564 : or al, 0x3c ; add dword ptr [rax], eax ; clc ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000000a6a1f : or al, 0x48 ; lea edi, dword ptr [rdi + 0xc] ; jne 0xa717b ; ret
0x00000000000a80d3 : or al, 0x48 ; lea edi, dword ptr [rdi + 0xc] ; jne 0xa898b ; ret
0x00000000000a80f1 : or al, 0x49 ; sub eax, 0xd ; lea rdi, qword ptr [rdi + 0xd] ; jne 0xa898f ; ret
0x00000000000a80f0 : or al, 0x49 ; sub eax, 0xd ; lea rdi, qword ptr [rdi + 0xd] ; jne 0xa8990 ; ret
0x00000000001199b8 : or al, 0x75 ; cdq ; mov rax, rdi ; ret
0x00000000000e8d53 : or al, 0x77 ; jae 0xe8d74 ; mov dh, 0x7a ; or byte ptr [rcx + 0x63], cl ; cmp al, 0xbb ; add rdi, r11 ; jmp rdi
0x000000000016dca9 : or al, 0x8b ; mov ecx, dword ptr ss:[rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000000b1d75 : or al, 0x8d ; push rdi ; rol byte ptr [rbx - 0x6df0f506], 1 ; ret 0xb60f
0x000000000006da0f : or al, 0x8f ; add rcx, rdi ; jmp rcx
0x00000000001a2b64 : or al, 0x92 ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; std ; jmp rdi
0x00000000001536c2 : or al, 0x93 ; add rsi, rdx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000001a3c64 : or al, 0xa3 ; add byte ptr [rax], al ; pop rax ; outsd dx, dword ptr [rsi] ; out dx, al ; jmp qword ptr [rdi]
0x00000000000367bf : or al, 0xc2 ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x000000000016ef83 : or al, 0xc3 ; nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000367bb : or al, 0xc6 ; and rcx, qword ptr [rdx + rax*8] ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x0000000000036aab : or al, 0xc6 ; or rcx, qword ptr [rdx + rax*8] ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x0000000000035b73 : or al, 0xe8 ; push rdi ; adc cl, byte ptr [rsi] ; add byte ptr [rbx + 0x480c2444], cl ; add esp, 0x10 ; pop rbx ; ret
0x00000000000cd01c : or al, 0xe8 ; scasb al, byte ptr [rdi] ; popfq ; add al, 0 ; mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000002c177 : or al, 0xf ; xchg dword ptr [rdx], edx ; add dword ptr [rax], eax ; add byte ptr [rdi + 0x63], cl ; add al, 0x8b ; add r8, r11 ; jmp r8
0x000000000013ec51 : or al, 0xf3 ; dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000015b1f3 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000001a9164 : or al, 0xf8 ; add byte ptr [rax], al ; sbb byte ptr [rdi - 0xe], ah ; call qword ptr [rax]
0x000000000016ef63 : or al, bl ; nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000139df6 : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rax ; lea r9, qword ptr [rsp + 0x14] ; call qword ptr [r10]
0x00000000000ed26f : or al, byte ptr [rax] ; add byte ptr [rcx - 0x75], al ; add al, 0x85 ; ror byte ptr [rdi], 0x94 ; ret 0xf883
0x00000000000025ae : or al, byte ptr [rbx - 0x138f918d] ; scasd eax, dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x000000000008ac72 : or al, byte ptr [rcx] ; add byte ptr [rax], al ; mov rdx, rbp ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000076fd4 : or al, ch ; salc ; mov edx, edi ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000077c24 : or al, ch ; xchg byte ptr [rbp - 6], bh ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000006eeea : or bh, bl ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x00000000000a610d : or bl, al ; nop ; mov rcx, qword ptr [rsi] ; mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000016ef43 : or bl, al ; nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a70d6 : or bl, al ; nop dword ptr [rax + rax] ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000ac903 : or bl, al ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000013793b : or bl, al ; nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000a0808 : or bl, al ; nop word ptr [rax + rax] ; mov byte ptr [rdi], sil ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000048e0c : or bl, ch ; cmp ecx, dword ptr [rbp + 0xf] ; movsd dword ptr [rdi], dword ptr [rsi] ; enter -0x76b4, 7 ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000007d7ca : or bl, ch ; mov edx, 0x48001f0f ; cmp dword ptr [rdi + 0x38], 0 ; je 0x7d7ed ; ret
0x000000000015b3b3 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000003413d : or byte ptr [r11 + r9*4 + 0x4f], r9b ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000a2da6 : or byte ptr [r14 + 0xf], spl ; adc eax, dword ptr [rdx] ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a5ab0 : or byte ptr [r14 + 0xf], spl ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000000a5b91 : or byte ptr [r14 + 0xf], spl ; adc ecx, dword ptr [rdx + 8] ; xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x0000000000137900 : or byte ptr [r8 - 0x77], r9b ; push rdi ; adc byte ptr [rax + 1], bh ; ret
0x000000000004aac7 : or byte ptr [r8], r8b ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00000000000d6969 : or byte ptr [r9], r8b ; mov byte ptr [rdi], 0x5b ; mov eax, 1 ; ret
0x00000000000d69bb : or byte ptr [r9], r8b ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x0000000000034bc9 : or byte ptr [rax + 0x21], 0xd0 ; movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000075841 : or byte ptr [rax + 0x2b], cl ; adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000000895b6 : or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8949
0x00000000000e4de2 : or byte ptr [rax + rax - 0x7f172cb8], cl ; stc ; adc cl, byte ptr [rax - 9] ; ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x00000000000d69e2 : or byte ptr [rax + rdi*4], bl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000007594e : or byte ptr [rax - 0x3f], cl ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000000000acade : or byte ptr [rax - 0x73], cl ; pop rdi ; or al, 0x85 ; ror byte ptr [rcx - 0x528bf7b9], 0x48 ; mov eax, ebx ; pop rbx ; ret
0x0000000000090899 : or byte ptr [rax - 0x73], cl ; push rax ; add eax, ebp ; insd dword ptr [rdi], dx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000000acadd : or byte ptr [rax - 0x73], r9b ; pop rdi ; or al, 0x85 ; ror byte ptr [rcx - 0x528bf7b9], 0x48 ; mov eax, ebx ; pop rbx ; ret
0x0000000000137913 : or byte ptr [rax - 0x75], cl ; jg 0x137939 ; mov eax, 1 ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x00000000001381bb : or byte ptr [rax - 0x75], cl ; jg 0x1381e1 ; mov eax, 1 ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000134b83 : or byte ptr [rax - 0x75], cl ; jns 0x134ba9 ; mov eax, 1 ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000130edf : or byte ptr [rax - 0x75], cl ; pop rdi ; sbb byte ptr [rbx + 0x7eb5e83b], cl ; std ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00000000001381d6 : or byte ptr [rax - 0x77], cl ; and byte ptr [r8 - 0x77], r9b ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x00000000000d0d69 : or byte ptr [rax - 0x77], cl ; fimul dword ptr [rcx + 3] ; push rdi ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000131a84 : or byte ptr [rax - 0x77], cl ; fimul dword ptr [rcx + rcx*4 - 0x1a] ; mov rdi, rbp ; call rax
0x0000000000103ecf : or byte ptr [rax - 0x77], cl ; fsubp st(0) ; enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x00000000001059d8 : or byte ptr [rax - 0x77], cl ; fsubp st(0) ; mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x00000000000aa005 : or byte ptr [rax - 0x77], cl ; jns 0xffffffffed3aa871 ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a9fa5 : or byte ptr [rax - 0x77], cl ; js 0xffffffffed3aa811 ; mov byte ptr [rdi + 9], ch ; ret
0x000000000012e647 : or byte ptr [rax - 0x77], cl ; out dx, al ; mov rcx, rbx ; add rdi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000000a9fc6 : or byte ptr [rax - 0x77], cl ; pcmpgtd mm1, qword ptr [rcx - 0x12cff7a9] ; mov byte ptr [rdi + 0xa], ch ; ret
0x0000000000137901 : or byte ptr [rax - 0x77], cl ; push rdi ; adc byte ptr [rax + 1], bh ; ret
0x000000000013818e : or byte ptr [rax - 0x77], cl ; xor byte ptr [r8 - 0x77], r9b ; push rdi ; cmp byte ptr [rax + 1], bh ; ret
0x0000000000087e42 : or byte ptr [rax - 0x7d], cl ; js 0x87e84 ; add byte ptr [rdi], cl ; test dword ptr [rsi - 0x16000002], esi ; ret 0xfffe
0x00000000001ad546 : or byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; hlt ; cmp eax, dword ptr [rcx] ; add al, ah ; push rdi ; cmc ; jmp qword ptr [rcx]
0x00000000001ae93e : or byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; add qword ptr [r8], r8 ; clc ; scasd eax, dword ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b2f8d : or byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; cmp al, 0x96 ; add dword ptr [rax], eax ; add rdi, rsi ; call rsi
0x00000000001aab35 : or byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, 0x11 ; add dword ptr [rax], eax ; xor byte ptr [rdi], dl ; hlt ; call qword ptr [rdx]
0x00000000001b7ca5 : or byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rbx + 1], dl ; add byte ptr [rax], ah ; push rcx ; clc ; call rdi
0x00000000001a50ba : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr fs:[rax], al ; add byte ptr [rdi + rsi*4], ch ; add byte ptr [rax + 0x3d], cl ; out dx, eax ; jmp rsi
0x0000000000139d02 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x00000000001ad0fe : or byte ptr [rax], al ; add byte ptr [rax], r8b ; add byte ptr [rdi + rsi + 0x3c980001], ch ; cmc ; call qword ptr [rdi]
0x0000000000078c9c : or byte ptr [rax], al ; add byte ptr [rbp + 0x14], dh ; xor eax, eax ; cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x0000000000086696 : or byte ptr [rax], al ; add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x86669 ; ret
0x0000000000104ac6 : or byte ptr [rax], al ; je 0x1055af ; mov rbp, rdi ; xor edx, edx ; xor esi, esi ; call rbx
0x000000000004aac8 : or byte ptr [rax], al ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00000000001b6e48 : or byte ptr [rax], ch ; clc ; jmp rdi
0x00000000000a9fcd : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000aa00b : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a9fab : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x000000000007eea2 : or byte ptr [rbp + 0xb], dh ; sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000000aef08 : or byte ptr [rbp - 0x57c2fa9], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000004014c : or byte ptr [rbp - 0x57f2faa], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003ce07 : or byte ptr [rbp - 0x57f2faf], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000091918 : or byte ptr [rbx + 0xf], dh ; cmp dl, 4 ; jae 0x91944 ; cmp dl, 1 ; ja 0x9194b ; jb 0x9193a ; mov byte ptr [rdi], cl ; ret
0x000000000013acd6 : or byte ptr [rbx + 0xffff878], al ; test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x000000000003413e : or byte ptr [rbx + rcx*4 + 0x4f], cl ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x000000000012de7b : or byte ptr [rbx - 0x72b7a3a9], cl ; ja 0x12deda ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000012de7a : or byte ptr [rbx - 0x72b7a3a9], cl ; ja 0x12dedb ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000000e8d59 : or byte ptr [rcx + 0x63], cl ; cmp al, 0xbb ; add rdi, r11 ; jmp rdi
0x00000000001a8abb : or byte ptr [rcx + 0xb], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; int1 ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0xe], al ; call qword ptr [rdx]
0x00000000001199ad : or byte ptr [rcx + r9*4 - 0x37], r9b ; test r8d, r8d ; mov dword ptr [rax + 0xc], r8d ; jne 0x119965 ; mov rax, rdi ; ret
0x0000000000131b91 : or byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000001199ae : or byte ptr [rcx + rcx*4 - 0x37], cl ; test r8d, r8d ; mov dword ptr [rax + 0xc], r8d ; jne 0x119964 ; mov rax, rdi ; ret
0x00000000000393fb : or byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, r12 ; call r14
0x00000000000ac7e9 : or byte ptr [rcx - 0x75], al ; add dword ptr [rcx + 0x39], eax ; add dh, byte ptr [rbp + 0x7a] ; test eax, eax ; jne 0xac7e1 ; mov rax, rdi ; ret
0x0000000000128ea9 : or byte ptr [rcx - 0x77], cl ; shr ebx, 1 ; scasd eax, dword ptr [rdi] ; mov rdx, rax ; mov byte ptr [rdx], 0 ; ret
0x00000000000d696a : or byte ptr [rcx], al ; mov byte ptr [rdi], 0x5b ; mov eax, 1 ; ret
0x00000000000d69bc : or byte ptr [rcx], al ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000d80fc : or byte ptr [rcx], al ; rcr byte ptr [rbx + 0x5d], 0xeb ; xchg eax, edi ; nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x00000000000bb640 : or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x29], dh ; ret
0x000000000012cdcf : or byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; mov rcx, r13 ; call r15
0x0000000000183cfe : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000006da03 : or byte ptr [rdi + 0x32], dh ; lea rdi, qword ptr [rip + 0x118013] ; movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x00000000001af87a : or byte ptr [rdi + 0xb], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rdi + rbx*2], ch ; add dword ptr [rax], eax ; cmp bh, ah ; cmc ; jmp rsp
0x00000000001a4581 : or byte ptr [rdi + 0xb], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xor al, 0xac ; add byte ptr [rax], al ; push rax ; ret
0x000000000019df23 : or byte ptr [rdi + 0xe], al ; adc byte ptr [rbx + 0xa760202], al ; ret
0x00000000000e8d52 : or byte ptr [rdi + rsi*2], cl ; jae 0xe8d75 ; mov dh, 0x7a ; or byte ptr [rcx + 0x63], cl ; cmp al, 0xbb ; add rdi, r11 ; jmp rdi
0x00000000000271b5 : or byte ptr [rdi], 0x94 ; ret 0x8348
0x000000000002dc84 : or byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000007d660 : or byte ptr [rdi], cl ; mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079951 : or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000001358f5 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add eax, 1 ; ret
0x0000000000109058 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000131c69 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000000456c8 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000360a7 : or byte ptr [rdi], cl ; ret 0xc289
0x0000000000153cfb : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x00000000000e009d : or byte ptr [rdi], cl ; test byte ptr [rbx], bh ; add eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0f607], al ; pop rcx ; add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; ret
0x00000000000e0a17 : or byte ptr [rdi], cl ; test dl, dl ; add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0x53], cl ; or byte ptr [rbp - 0x75], cl ; or byte ptr [rax - 0x77], r9b ; ret 0x1bb
0x0000000000169e91 : or byte ptr [rdi], cl ; test dword ptr [rax + 6], ebp ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000109051 : or byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000010907b : or byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000005af8c : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd189
0x000000000002042b : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000016e371 : or byte ptr [rdx + 0xa], dh ; vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000019b83a : or byte ptr [rdx + 0xb], cl ; pop rdi ; ret
0x000000000016dc93 : or byte ptr [rdx + 0xf], dh ; mov rsi, qword ptr [rsi] ; mov rcx, qword ptr [rcx - 8] ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000019e04a : or byte ptr [rsi + 0xb], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add ah, bh ; add byte ptr [rax], r8b ; shr rdx, 1 ; jmp rdi
0x00000000001aafb3 : or byte ptr [rsi + 0xb], al ; add byte ptr [rax], al ; xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rsi + rdx + 1], ah ; add byte ptr [rax], dl ; jge 0x1aafc7 ; jmp rdi
0x00000000000a2e74 : or byte ptr [rsi + 0xf], ah ; adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000a2da7 : or byte ptr [rsi + 0xf], ah ; adc eax, dword ptr [rdx] ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a5ab1 : or byte ptr [rsi + 0xf], ah ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000000a5b92 : or byte ptr [rsi + 0xf], ah ; adc ecx, dword ptr [rdx + 8] ; xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x000000000006f02f : or byte ptr [rsi + rbx + 0x48], dh ; lea esi, dword ptr [rsp + 8] ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000016e391 : or byte ptr [rsi - 0x77], ah ; pcmpgtd mm1, qword ptr [rcx - 0x7f3c01b2] ; cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x0000000000193804 : or byte ptr [rsp + rdi*8 - 1], 0x80 ; cld ; inc dword ptr [rax + 0x10fffc50] ; cld ; call rax
0x0000000000078db6 : or ch, 0x80 ; cmp esi, 2 ; cmove edx, ecx ; mov dword ptr [rdi], edx ; ret
0x000000000006c3e9 : or ch, bl ; add ecx, dword ptr [rdi] ; mov cl, 0xa ; test eax, eax ; je 0x6c40f ; mov eax, 0x10 ; ret
0x00000000001b9fcd : or ch, byte ptr [rdi + 5] ; ret
0x0000000000165e62 : or cl, byte ptr [rax - 0x73] ; or cl, byte ptr [rdi] ; test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x000000000004018c : or cl, byte ptr [rbp - 0x57f2faa] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003cf47 : or cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000019eed2 : or cl, byte ptr [rdi + rax] ; or byte ptr [rcx + 0xb], al ; xor al, 0 ; add byte ptr [rax], al ; test byte ptr [rbp], dl ; add al, dh ; in al, dx ; jmp qword ptr [rax]
0x0000000000165e66 : or cl, byte ptr [rdi] ; test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x000000000016a257 : or cl, byte ptr [rdi] ; test dword ptr [rdx - 0x7ffffffe], esp ; cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x000000000003ce0d : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000140881 : or cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x000000000005457c : or cl, byte ptr [rdi] ; xchg eax, esp ; rol byte ptr [rax + rax*8 + 0x180850f], 0 ; add byte ptr [rbx + rcx*4 + 4], al ; and al, 0x83 ; ret
0x0000000000147b39 : or dh, al ; movzx eax, byte ptr [rdi + rcx] ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000015b2d3 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000007625f : or dh, byte ptr [rax + rdi*4 + 0x48] ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000d80d9 : or dh, byte ptr [rbp - 0x42] ; xor eax, eax ; cmp byte ptr [rdi + 0x65], 0 ; setne al ; add eax, eax ; ret
0x00000000000743e6 : or dh, byte ptr [rdi + rcx + 0x48] ; cmp esi, ecx ; jb 0x743eb ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000007e536 : or dh, byte ptr [rdi + rcx + 0x48] ; cmp esi, ecx ; jne 0x7e53b ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000007c879 : or dh, byte ptr [rsp + rdi*2 + 0x40] ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ab041 : or dword ptr [rax + 0xf], ecx ; mov esp, 0xc83948ca ; ja 0xab071 ; sub rdi, 0x10 ; add rax, rdi ; ret
0x0000000000165e42 : or dword ptr [rax - 0x73], ecx ; or qword ptr [rdi], rcx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x00000000001396cf : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rax ; call qword ptr [r10]
0x0000000000130012 : or dword ptr [rax], eax ; add byte ptr [rax], al ; movdqu xmm0, xmmword ptr [rdi + 0x38] ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x000000000004016c : or dword ptr [rbp - 0x57f2faa], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003cf27 : or dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000016cb16 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000008aa19 : or dword ptr [rbx + 0x67], edx ; fmul dword ptr [rax + 0x33] ; push rdi ; fmul dword ptr [rax + 0x39] ; ret 0x5a74
0x00000000000a7303 : or dword ptr [rcx - 0x73], 0xc ; or edi, edi ; loope 0xa7381 ; nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000000a8b13 : or dword ptr [rcx - 0x73], 0xc ; or edi, edi ; loope 0xa8b91 ; nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x0000000000079f6b : or dword ptr [rdi + 0x34], ebp ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x0000000000036293 : or dword ptr [rdi + rax*8], edx ; xor eax, eax ; ret
0x0000000000183555 : or dword ptr [rdi - 0x2a], 0x75 ; push rsp ; jle 0x183506 ; mov edi, 0x99b51319 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000087db0 : or dword ptr [rdi - 0x5f], esi ; movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000006f000 : or dword ptr [rdi], 0x20 ; ret
0x00000000000fda27 : or dword ptr [rdi], 0x80000000 ; xor eax, eax ; ret
0x00000000000363a6 : or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000000ffd29 : or dword ptr [rdi], ecx ; test dl, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000165e46 : or dword ptr [rdi], ecx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x000000000016a227 : or dword ptr [rdi], ecx ; test edx, edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x00000000000c193b : or dword ptr [rdi], ecx ; xchg dword ptr [rbp + rbp*8 - 1], edx ; dec dword ptr [rax - 0x7d] ; ret
0x000000000008d6d9 : or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x3145
0x000000000008d67f : or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xf631
0x00000000001035ba : or dword ptr [rdi], ecx ; xchg edi, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000103052 : or dword ptr [rdi], ecx ; xchg edi, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000104bd3 : or dword ptr [rip - 0x9cf0000], ecx ; mov rdi, r15 ; call rbx
0x00000000000558ee : or dword ptr [rsi + 0xe], ebp ; xor eax, eax ; mov qword ptr [rdi], r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000559c0 : or dword ptr [rsi + 0xe], esp ; xor eax, eax ; mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000559bf : or dword ptr [rsi + 0xe], r12d ; xor eax, eax ; mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000558ed : or dword ptr [rsi + 0xe], r13d ; xor eax, eax ; mov qword ptr [rdi], r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000139c53 : or dword ptr [rsi], esi ; add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000a6c81 : or eax, 0x1de88349 ; lea rdi, qword ptr [rdi + 0x1d] ; jne 0xa717f ; ret
0x000000000016ef93 : or eax, 0x2e6690c3 ; nop dword ptr [rax + rax] ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000fdef1 : or eax, 0x30 ; mov dword ptr [rdi + 8], eax ; ret
0x0000000000182315 : or eax, 0x381e4bdc ; shl dword ptr [rdi - 0x3ad6d59f], cl ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000001adcb7 : or eax, 0x38f4806 ; mov es, word ptr [rcx*4 + 0x48068c05] ; add dword ptr [rdi], 2 ; cwde ; ret
0x00000000001a8d57 : or eax, 0x38f4806 ; mov es, word ptr [rcx*4 + 0x4c068c05] ; add dword ptr [rdi], 0x7b ; ret
0x00000000000350bd : or eax, 0x3f000000 ; movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x00000000000353e8 : or eax, 0x3ffe ; mov word ptr [rsp - 0x10], ax ; mov dword ptr [rdi], edx ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000098002 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x00000000000b3bed : or eax, 0x590ff300 ; shl byte ptr [rdi + rax*8], 0x22 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000148586 : or eax, 0x633a0f66 ; add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000148562 : or eax, 0x633a0f66 ; add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000a7958 : or eax, 0x77f0ff3 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a87a8 : or eax, 0x77f0ff3 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a62c8 : or eax, 0x77f0ff3 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000aa218 : or eax, 0x77f0ff3 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x000000000003cf9b : or eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000401e0 : or eax, 0x80d0568d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000010a45a : or eax, 0xbe058d48 ; out 7, eax ; add byte ptr [rdi], cl ; mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000002b80 : or eax, 0xc8928a39 ; mov cl, 0xda ; fnsave dword ptr [rdx - 0x6b] ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x0000000000153c4d : or eax, 0xe067290f ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000000a8121 : or eax, 0xee88349 ; lea rdi, qword ptr [rdi + 0xe] ; jne 0xa898f ; ret
0x00000000000a8120 : or eax, 0xee88349 ; lea rdi, qword ptr [rdi + 0xe] ; jne 0xa8990 ; ret
0x000000000015b17a : or eax, 0xef00ff2 ; movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000104b5b : or eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x00000000001ba096 : or eax, 0xffff0000 ; add dword ptr [rax], ebp ; stosd dword ptr [rdi], eax ; add cl, al ; add dword ptr [rax], eax ; add al, bl ; add al, 5 ; ret 0xb
0x00000000000ea1d7 : or eax, 2 ; mov byte ptr [rdi + 0x38], al ; mov dword ptr [rsi], edx ; mov qword ptr [rsi + 8], rcx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x00000000001a8abc : or eax, dword ptr [r8] ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; int1 ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0xe], al ; call qword ptr [rdx]
0x00000000001aafb5 : or eax, dword ptr [rax] ; add byte ptr [rax + rax + 0x16640000], dl ; add dword ptr [rax], eax ; adc byte ptr [rbp - 0xc], bh ; jmp rdi
0x00000000001a8abd : or eax, dword ptr [rax] ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; int1 ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0xe], al ; call qword ptr [rdx]
0x00000000001b6943 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; hlt ; iretd ; add dword ptr [rax], eax ; adc byte ptr [rax + rdi*8], cl ; jmp qword ptr [rax]
0x00000000001b3f22 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, dl ; movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; shr cl, 0xfb ; call rsi
0x000000000019f3ba : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr fs:[rax], al ; add byte ptr [rdi + rax + 0x5180000], ch ; in eax, dx ; call qword ptr [rcx]
0x000000000019e04c : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, bh ; add byte ptr [rax], r8b ; shr rdx, 1 ; jmp rdi
0x00000000001af87c : or eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rsp ; add byte ptr [rax], al ; add byte ptr [rdi + rbx*2], ch ; add dword ptr [rax], eax ; cmp bh, ah ; cmc ; jmp rsp
0x0000000000036b98 : or eax, dword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000001aab32 : or eax, dword ptr [rsi + rcx + 8] ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, 0x11 ; add dword ptr [rax], eax ; xor byte ptr [rdi], dl ; hlt ; call qword ptr [rdx]
0x000000000016ef73 : or eax, ebx ; nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000098117 : or eax, ecx ; shl rdx, 0x30 ; or rax, rdx ; bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000009811e : or eax, edx ; bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000004a52f : or ebp, dword ptr [rcx] ; enter -0x2cb8, -0x1a ; mov qword ptr [rdi], rsi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000139cb1 : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; xchg eax, ebp ; ret 0x28
0x0000000000071d70 : or ebp, edx ; mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016ef53 : or ebx, eax ; nop ; nop word ptr cs:[rax + rax] ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000015b343 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000007c9c7 : or ecx, 0x20 ; mov dword ptr [rdi], ecx ; mov dword ptr fs:[rax], 9 ; mov eax, 0xffffffff ; ret
0x00000000000913fc : or ecx, dword ptr [rax - 0x73] ; adc al, 0xe ; cmp rdi, rdx ; jb 0x91415 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001724a4 : or ecx, dword ptr [rax - 0x75] ; jg 0x1724c4 ; test rdi, rdi ; jne 0x1724ab ; ret
0x0000000000071348 : or ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x0000000000158c49 : or ecx, dword ptr [rbp + rcx*4 + 0x1d] ; pop rdi ; lodsd eax, dword ptr [rsi] ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000401a8 : or ecx, dword ptr [rbp - 0x57f2faa] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003cf63 : or ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000737dd : or ecx, dword ptr [rdi] ; adc dword ptr [rbx - 1], -1 ; dec dword ptr [rbx - 0x3b7cb7fa] ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000016a287 : or ecx, dword ptr [rdi] ; test dword ptr [rdx + 2], esi ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000000a6a03 : or ecx, dword ptr [rdi] ; test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x0000000000036aae : or ecx, dword ptr [rdx + rax*8] ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x00000000000a6063 : or edi, edi ; loope 0xa60dc ; nop dword ptr cs:[rax + rax] ; mov byte ptr [rdi], dh ; ret
0x00000000000a7307 : or edi, edi ; loope 0xa737d ; nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000000a8b17 : or edi, edi ; loope 0xa8b8d ; nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000000a9143 : or edi, edi ; loope 0xa91bc ; nop dword ptr cs:[rax + rax] ; mov byte ptr [rdi], dh ; ret
0x00000000000a9c13 : or edi, edi ; loope 0xa9c8c ; nop dword ptr cs:[rax + rax] ; mov byte ptr [rdi], dh ; ret
0x0000000000034c39 : or edi, edx ; movq xmm1, rdi ; movapd xmm0, xmm1 ; ret
0x000000000007615e : or edx, 0x20 ; mov dword ptr [rdi], edx ; mov dword ptr fs:[rax], 9 ; mov eax, 0xffffffff ; ret
0x000000000008dbbf : or edx, ecx ; bsf rdx, rdx ; add rax, rdx ; sub rax, rdi ; ret
0x000000000008dd80 : or edx, ecx ; bts rdx, r11 ; bsf rdx, rdx ; add rax, rdx ; sub rax, rdi ; ret
0x00000000000913fa : or esi, dword ptr [rbx + rcx + 0x48] ; lea edx, dword ptr [rsi + rcx] ; cmp rdi, rdx ; jb 0x91417 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000061e81 : or esi, dword ptr [rdi - 0x77cffff] ; inc dword ptr [rcx - 0x77] ; ret 0x3075
0x000000000004a513 : or esi, eax ; mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x00000000000fd9be : or esi, eax ; xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x000000000013eda8 : or esi, ebx ; dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000091883 : or esi, ebx ; movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000015b263 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000000cfafe : or esi, esi ; rol dword ptr [rdi + rcx], -0x7b ; sahf ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x000000000003cf26 : or qword ptr [rbp - 0x57f2faf], rcx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000036292 : or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x00000000000363a5 : or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000165e45 : or qword ptr [rdi], rcx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x000000000016a226 : or qword ptr [rdi], rcx ; test edx, edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x000000000015b3b2 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x00000000000ac902 : or r11b, r8b ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a0807 : or r11b, r8b ; nop word ptr [rax + rax] ; mov byte ptr [rdi], sil ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000015b342 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000147b38 : or r14b, al ; movzx eax, byte ptr [rdi + rcx] ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000015b2d2 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b262 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000001af87b : or r8d, dword ptr [r8] ; add byte ptr [rax], al ; pop rsp ; add byte ptr [rax], al ; add byte ptr [rdi + rbx*2], ch ; add dword ptr [rax], eax ; cmp bh, ah ; cmc ; jmp rsp
0x00000000001aafb4 : or r8d, dword ptr [rax] ; add byte ptr [rax + rax + 0x16640000], dl ; add dword ptr [rax], eax ; adc byte ptr [rbp - 0xc], bh ; jmp rdi
0x00000000001b6942 : or r8d, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; hlt ; iretd ; add dword ptr [rax], eax ; adc byte ptr [rax + rdi*8], cl ; jmp qword ptr [rax]
0x000000000019e04b : or r8d, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, bh ; add byte ptr [rax], r8b ; shr rdx, 1 ; jmp rdi
0x000000000003cf9a : or rax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000036b97 : or rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000108f05 : or rax, rdi ; ret
0x000000000009811d : or rax, rdx ; bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000003cf62 : or rcx, qword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000016a286 : or rcx, qword ptr [rdi] ; test dword ptr [rdx + 2], esi ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000036aad : or rcx, qword ptr [rdx + rax*8] ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x0000000000034c38 : or rdi, rdx ; movq xmm1, rdi ; movapd xmm0, xmm1 ; ret
0x000000000008dbbe : or rdx, rcx ; bsf rdx, rdx ; add rax, rdx ; sub rax, rdi ; ret
0x000000000008dd7f : or rdx, rcx ; bts rdx, r11 ; bsf rdx, rdx ; add rax, rdx ; sub rax, rdi ; ret
0x000000000004a512 : or rsi, rax ; mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x00000000000559be : or word ptr [rsi + 0xe], r12w ; xor eax, eax ; mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000105e03 : out -0x18, eax ; scasd eax, dword ptr [rdi] ; wait ; int1 ; dec dword ptr [rax - 0x75] ; jge 0x105e17 ; call rbx
0x00000000001821e0 : out -0x31, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000015abca : out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000104ff5 : out -1, eax ; sal dword ptr [rcx], cl ; sar byte ptr [rsi + 1], cl ; mov rdi, rbp ; call rbx
0x00000000001870b4 : out -4, eax ; lcall ptr [rdi] ; out dx, al ; call qword ptr [rax]
0x000000000007fa53 : out -8, eax ; cmp rdx, rdi ; je 0x7f9e5 ; nop ; xor eax, eax ; ret
0x00000000000f71ed : out -8, eax ; sub rcx, rdi ; add ecx, 0x150 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000f6f7a : out -8, eax ; sub rcx, rdi ; add ecx, 0x50 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000362df : out -8, eax ; sub rcx, rdi ; sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000034c33 : out 0x34, eax ; and rdx, rax ; or rdi, rdx ; movq xmm1, rdi ; movapd xmm0, xmm1 ; ret
0x0000000000034179 : out 0x41, al ; mov eax, dword ptr [rcx + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x000000000003760a : out 0x41, eax ; call rdi
0x000000000004a534 : out 0x48, al ; mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000155346 : out 0x4c, al ; mov dword ptr [rdi - 0x12], ebx ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155176 : out 0x4c, eax ; mov dword ptr [rdi - 0x11], ebx ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155272 : out 0x4c, eax ; mov dword ptr [rdi - 0x11], ebx ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001551be : out 0x4c, eax ; mov dword ptr [rdi - 0x11], ebx ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000013ddac : out 0x4c, eax ; mov esi, ebp ; mov rdi, rbp ; mov edx, 0xffffffff ; xor eax, eax ; call r8
0x0000000000078db2 : out 0x7f, al ; mov ecx, edx ; or ch, 0x80 ; cmp esi, 2 ; cmove edx, ecx ; mov dword ptr [rdi], edx ; ret
0x0000000000104b16 : out 0xa, al ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000072cbf : out 0xe8, al ; cmp esp, dword ptr [rdi - 2] ; dec dword ptr [rax - 0x75] ; xchg eax, esp ; and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000001106d7 : out 0xe8, al ; ror dword ptr [rax + rdi*8], cl ; dec dword ptr [rax + 1] ; imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000170c11 : out 0xf, al ; je 0x170c40 ; mov eax, dword ptr [rdi - 8] ; cmp eax, dword ptr [rsi - 8] ; jne 0x170d30 ; ret
0x00000000000abbf1 : out 0xf, al ; je 0xabc20 ; mov eax, dword ptr [rdi + 8] ; cmp eax, dword ptr [rsi + 8] ; jne 0xabd30 ; ret
0x00000000000abc51 : out 0xf, al ; je 0xabc80 ; mov eax, dword ptr [rdi + 0x18] ; cmp eax, dword ptr [rsi + 0x18] ; jne 0xabd30 ; ret
0x00000000000abcb1 : out 0xf, al ; je 0xabccc ; mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xabd2c ; ret
0x00000000000abd01 : out 0xf, al ; je 0xabd1c ; mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xabd2c ; ret
0x000000000015ab4a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000198485 : out 1, eax ; add byte ptr [rdi + rcx*8], dh ; clc ; jmp rsp
0x000000000010a45f : out 7, eax ; add byte ptr [rdi], cl ; mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000019856d : out dx, al ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; add edi, ecx ; jmp rsp
0x0000000000098c0b : out dx, al ; add dword ptr [rbp - 0xf], esi ; xor edi, edi ; mov rax, rdi ; ret
0x00000000000794cf : out dx, al ; cmp qword ptr [rdi + 0x10], rax ; jb 0x794ce ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000001a3c6a : out dx, al ; jmp qword ptr [rdi]
0x000000000015af50 : out dx, al ; lddqu xmm1, xmmword ptr [rsi - 0x10] ; movdqu xmmword ptr [rdi - 0x12], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015534a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012e64a : out dx, al ; mov rcx, rbx ; add rdi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000013079d : out dx, al ; mov rcx, rbx ; add rdi, 0x23b0 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000001307e3 : out dx, al ; mov rcx, rbx ; pop rbx ; pop rbp ; add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x00000000000acc57 : out dx, al ; mov rdi, qword ptr [r12] ; lea r9, qword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000039270 : out dx, al ; mov rdi, qword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x0000000000038048 : out dx, al ; mov rdi, r12 ; call r15
0x000000000008b042 : out dx, al ; mov rdi, r12 ; call rax
0x0000000000037b92 : out dx, al ; mov rdi, r14 ; mov rdx, rbp ; call r15
0x00000000000881cc : out dx, al ; mov rdi, rax ; mov rbx, rax ; call 0x844d9
0x000000000013ddaf : out dx, al ; mov rdi, rbp ; mov edx, 0xffffffff ; xor eax, eax ; call r8
0x000000000013dd63 : out dx, al ; mov rdi, rbp ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x000000000008a194 : out dx, al ; mov rdi, rbx ; call rax
0x000000000015af5a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000c9845 : out dx, al ; push rdx ; mov rdx, qword ptr [rsp + 0x28] ; mov rdi, qword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000170dad : out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x0000000000153bc4 : out dx, eax ; and byte ptr [rbp + rcx*4 + 0x1d], cl ; movsxd rdi, edx ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001224fa : out dx, eax ; dec dword ptr [rax - 0x75] ; jnp 0x122554 ; test rdi, rdi ; jne 0x1224fc ; pop rbx ; ret
0x0000000000195e3a : out dx, eax ; dec dword ptr [rsi + rdi*8 - 0x6b2c0000] ; out dx, eax ; call rsp
0x0000000000195d42 : out dx, eax ; inc dword ptr [rax + rdi*8 + 0x6a140000] ; out dx, eax ; jmp rsp
0x0000000000195d7a : out dx, eax ; inc dword ptr [rdx + rdi*8 + 0x70e40000] ; out dx, eax ; lcall ptr [rdx + rdi*8 + 0x71940000] ; out dx, eax ; call rsp
0x00000000001870b1 : out dx, eax ; jmp rdi
0x0000000000195d82 : out dx, eax ; lcall ptr [rdx + rdi*8 + 0x71940000] ; out dx, eax ; call rsp
0x000000000015afd0 : out dx, eax ; lddqu xmm1, xmmword ptr [rsi - 0x10] ; movdqu xmmword ptr [rdi - 0x11], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015517a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155276 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001551c2 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000013dd60 : out dx, eax ; mov rsi, r13 ; mov rdi, rbp ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x000000000015afda : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000008f836 : out dx, eax ; mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000195e0a : out dx, eax ; push qword ptr [rbp + rdi*8 - 0x6e4c0000] ; out dx, eax ; dec esp ; std ; add byte ptr [rax], al ; in al, -0x6f ; out dx, eax ; jmp rsp
0x0000000000195e6a : out dx, eax ; push qword ptr [rdi + rdi*8 - 0x4d0c0000] ; out dx, eax ; dec esp ; inc dword ptr [rax] ; add byte ptr [rbx + rsi*4], dh ; out dx, eax ; jmp rsp
0x0000000000195d22 : out dx, eax ; push qword ptr [rdi + rsi*8 + 0x65240000] ; out dx, eax ; jmp rsp
0x000000000016b763 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016b778 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016b78d : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000013ebef : out dx, eax ; ror byte ptr [rdi], 0x11 ; and al, 0x28 ; call rdx
0x000000000016cc7c : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000016cc65 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000016cc4e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000016b70a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008c09d : out dx, eax ; wait ; str word ptr [rdi + 0x63] ; or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000016b9df : out dx, eax ; xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ba9c : out dx, eax ; xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016b9fa : out dx, eax ; xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ba4b : out dx, eax ; xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001874f8 : out dx, eax ; xor ah, 0xff ; stc ; xor ah, 0xff ; add eax, dword ptr [rcx - 0x7ef2000c] ; hlt ; call qword ptr [rdi]
0x0000000000193ca1 : outsb dx, byte ptr [rsi] ; cld ; push qword ptr [rdx + 0x22fffc6d] ; insd dword ptr [rdi], dx ; cld ; call qword ptr [rdx + 0x22fffc6c]
0x00000000000025b1 : outsb dx, byte ptr [rsi] ; jo 0x25ab ; scasd eax, dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x000000000000367d : outsb dx, byte ptr [rsi] ; stosb byte ptr [rdi], al ; stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x00000000001701b1 : outsb dx, byte ptr [rsi] ; test dl, 0x40 ; jne 0x170240 ; movzx eax, byte ptr [rdi - 9] ; movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x000000000009166c : outsd dx, dword ptr [rsi] ; adc byte ptr [rdi], cl ; adc dword ptr [rdi + 0x20], esi ; movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000016e0ec : outsd dx, dword ptr [rsi] ; cli ; vmovups zmmword ptr [rdi - 0x1c0], zmm14 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000016c7dd : outsd dx, dword ptr [rsi] ; fdiv dword ptr [rdx - 0x10f09928] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016c5dd : outsd dx, dword ptr [rsi] ; fdiv qword ptr [rdx - 0x10f09924] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016c75d : outsd dx, dword ptr [rsi] ; fnstenv dword ptr [rdx - 0x10f09927] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016c962 : outsd dx, dword ptr [rsi] ; lds r14, ptr [rdx - 0x10f0993b] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016c9f2 : outsd dx, dword ptr [rsi] ; les r14, ptr [rdx - 0x10f0993c] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016c4a7 : outsd dx, dword ptr [rsi] ; movabs rbp, 0xf66d1ef0f66bdb2 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016c5a7 : outsd dx, dword ptr [rsi] ; movabs rsp, 0xf66d1ef0f66bcb2 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001a3c69 : outsd dx, dword ptr [rsi] ; out dx, al ; jmp qword ptr [rdi]
0x000000000008f831 : outsd dx, dword ptr [rsi] ; pop rdi ; and byte ptr [rsi + 0xf], ah ; out dx, eax ; mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000016b75e : outsd dx, dword ptr [rsi] ; push rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016b773 : outsd dx, dword ptr [rsi] ; push rdi ; and byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016c6dd : outsd dx, dword ptr [rsi] ; push rdi ; fidiv dword ptr [rdx - 0x10f09926] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016c4dd : outsd dx, dword ptr [rsi] ; push rdi ; fnsave dword ptr [rdx - 0x10f09923] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016c7a7 : outsd dx, dword ptr [rsi] ; push rdi ; mov eax, 0xf66b8b2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016c627 : outsd dx, dword ptr [rsi] ; push rdi ; mov ebx, 0xf66bbb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016c727 : outsd dx, dword ptr [rsi] ; push rdi ; mov ecx, 0xf66b9b2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016c6a7 : outsd dx, dword ptr [rsi] ; push rdi ; mov edx, 0xf66bab2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ca7d : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000016cb1d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000016b788 : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008f83a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000000a79b6 : outsd dx, dword ptr [rsi] ; push rsi ; adc bl, dh ; movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a8806 : outsd dx, dword ptr [rsi] ; push rsi ; adc bl, dh ; movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a6326 : outsd dx, dword ptr [rsi] ; push rsi ; adc bl, dh ; movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000aa276 : outsd dx, dword ptr [rsi] ; push rsi ; adc bl, dh ; movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x000000000016c30d : outsd dx, dword ptr [rsi] ; push rsi ; fbstp dword ptr [rdx - 0x10f09921] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016c3dd : outsd dx, dword ptr [rsi] ; push rsi ; fidiv word ptr [rdx - 0x10f09922] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016c2d7 : outsd dx, dword ptr [rsi] ; push rsi ; mov edi, 0xf66bfb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016c3a7 : outsd dx, dword ptr [rsi] ; push rsi ; mov esi, 0xf66beb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000a7956 : outsd dx, dword ptr [rsi] ; push rsi ; or eax, 0x77f0ff3 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a87a6 : outsd dx, dword ptr [rsi] ; push rsi ; or eax, 0x77f0ff3 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a62c6 : outsd dx, dword ptr [rsi] ; push rsi ; or eax, 0x77f0ff3 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000aa216 : outsd dx, dword ptr [rsi] ; push rsi ; or eax, 0x77f0ff3 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a6306 : outsd dx, dword ptr [rsi] ; push rsi ; psllq mm1, qword ptr [rdi] ; jg 0xa6320 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a6fd6 : outsd dx, dword ptr [rsi] ; push rsi ; psllq mm1, qword ptr [rdi] ; jg 0xa6ff0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a7996 : outsd dx, dword ptr [rsi] ; push rsi ; psllq mm1, qword ptr [rdi] ; jg 0xa79b4 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a87e6 : outsd dx, dword ptr [rsi] ; push rsi ; psllq mm1, qword ptr [rdi] ; jg 0xa8804 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a93e6 : outsd dx, dword ptr [rsi] ; push rsi ; psllq mm1, qword ptr [rdi] ; jg 0xa9400 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a9eb6 : outsd dx, dword ptr [rsi] ; push rsi ; psllq mm1, qword ptr [rdi] ; jg 0xa9ed0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000aa256 : outsd dx, dword ptr [rsi] ; push rsi ; psllq mm1, qword ptr [rdi] ; jg 0xaa275 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000016cb3d : outsd dx, dword ptr [rsi] ; sal byte ptr [rdx - 0x10f0992e], cl ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016cc5e : outsd dx, dword ptr [rsi] ; sal byte ptr [rdx - 0x10f09930], 1 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000016ca9d : outsd dx, dword ptr [rsi] ; sal qword ptr [rdx - 0x10f0992d], cl ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016cbdd : outsd dx, dword ptr [rsi] ; sal qword ptr [rdx - 0x10f0992f], 1 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000abcb2 : pcmpeqb mm1, qword ptr [rbx] ; mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xabd2b ; ret
0x00000000000abd02 : pcmpeqb mm1, qword ptr [rbx] ; mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xabd2b ; ret
0x0000000000090dbf : pcmpeqb mm1, qword ptr [rdi + 0x10] ; pmovmskb eax, xmm1 ; test eax, eax ; jne 0x90e2f ; xor rax, rax ; ret
0x00000000000a0c10 : pcmpeqb mm1, qword ptr [rdi + 0x20] ; pmovmskb eax, xmm1 ; test eax, eax ; jne 0xa0c9e ; xor eax, eax ; ret
0x00000000000a0bd4 : pcmpeqb mm1, qword ptr [rdi] ; pmovmskb eax, xmm1 ; test eax, eax ; jne 0xa0c71 ; xor eax, eax ; ret
0x00000000000abc52 : pcmpeqb mm3, qword ptr [rbx] ; mov eax, dword ptr [rdi + 0x18] ; cmp eax, dword ptr [rsi + 0x18] ; jne 0xabd2f ; ret
0x00000000000abbf2 : pcmpeqb mm3, qword ptr [rbx] ; mov eax, dword ptr [rdi + 8] ; cmp eax, dword ptr [rsi + 8] ; jne 0xabd2f ; ret
0x0000000000170c12 : pcmpeqb mm3, qword ptr [rbx] ; mov eax, dword ptr [rdi - 8] ; cmp eax, dword ptr [rsi - 8] ; jne 0x170d2f ; ret
0x0000000000170be4 : pcmpeqb mm3, qword ptr [rcx] ; mov eax, dword ptr [rdi - 0x10] ; cmp eax, dword ptr [rsi - 0x10] ; jne 0x170d2f ; ret
0x0000000000090dbe : pcmpeqb xmm1, xmmword ptr [rdi + 0x10] ; pmovmskb eax, xmm1 ; test eax, eax ; jne 0x90e30 ; xor rax, rax ; ret
0x00000000000a0c0f : pcmpeqb xmm1, xmmword ptr [rdi + 0x20] ; pmovmskb eax, xmm1 ; test eax, eax ; jne 0xa0c9f ; xor eax, eax ; ret
0x00000000000a9fc9 : pcmpgtd mm1, qword ptr [rcx - 0x12cff7a9] ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a9f67 : pcmpgtd mm1, qword ptr [rcx - 0x12cffba9] ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a0921 : pcmpgtd mm1, qword ptr [rcx - 0x76b7fba9] ; clc ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000016e394 : pcmpgtd mm1, qword ptr [rcx - 0x7f3c01b2] ; cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x00000000000a0b65 : pcmpgtd mm1, qword ptr [rdi] ; xlatb ; ret 0xc085
0x00000000000a0bd6 : pcmpgtd mm1, qword ptr [rdi] ; xlatb ; rol dword ptr [rbp + 0x7d850fc0], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000014d3a0 : pcmpistri xmm3, xmm3, 0x3a ; movsxd rcx, ecx ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x000000000014d5d4 : pcmpistri xmm3, xmmword ptr [rdi], 0x12 ; jae 0x14d5e1 ; movsxd rax, ecx ; add rax, rdi ; sub rax, rdx ; ret
0x0000000000097ffc : pmovmskb eax, mm0 ; test eax, eax ; je 0x9801e ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x00000000000a0cf5 : pmovmskb eax, mm1 ; and eax, edx ; test eax, eax ; je 0xa0cdf ; bsr eax, eax ; add rax, rdi ; ret
0x0000000000090d1c : pmovmskb eax, mm1 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000a0b73 : pmovmskb eax, mm1 ; bsr eax, eax ; add rax, rdi ; ret
0x0000000000097ffb : pmovmskb eax, xmm0 ; test eax, eax ; je 0x9801f ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x00000000000a0cf4 : pmovmskb eax, xmm1 ; and eax, edx ; test eax, eax ; je 0xa0ce0 ; bsr eax, eax ; add rax, rdi ; ret
0x0000000000090d1b : pmovmskb eax, xmm1 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000a0b72 : pmovmskb eax, xmm1 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000001a3c5b : pop qword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rbx], cl ; add byte ptr [rax], al ; pop rax ; outsd dx, dword ptr [rsi] ; out dx, al ; jmp qword ptr [rdi]
0x00000000001b9262 : pop qword ptr [rbx] ; mov es, word ptr [rcx*4 + 0x45068c05] ; add dword ptr [rdi], 3 ; pop rbp ; add dword ptr [rdx], ecx ; ret
0x00000000001adcba : pop qword ptr [rbx] ; mov es, word ptr [rcx*4 + 0x48068c05] ; add dword ptr [rdi], 2 ; cwde ; ret
0x00000000001a8d5a : pop qword ptr [rbx] ; mov es, word ptr [rcx*4 + 0x4c068c05] ; add dword ptr [rdi], 0x7b ; ret
0x0000000000114408 : pop qword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001b9932 : pop qword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, -1 ; add dword ptr [rax], eax ; rol cl, 0xf8 ; call qword ptr [rdi]
0x0000000000183a6f : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000013812d : pop r8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x000000000013812e : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x0000000000106904 : pop rax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sub eax, dword ptr [rax] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x1069b8 ; call rax
0x000000000002de64 : pop rax ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000009042b : pop rax ; mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001a3c68 : pop rax ; outsd dx, dword ptr [rsi] ; out dx, al ; jmp qword ptr [rdi]
0x0000000000108d7b : pop rax ; pop rdi ; call rax
0x000000000018a04c : pop rax ; stosd dword ptr [rdi], eax ; cli ; dec dword ptr [rax - 0x77000554] ; lodsb al, byte ptr [rsi] ; cli ; jmp rax
0x000000000006d280 : pop rax ; test dword ptr [rcx], edx ; add byte ptr [rdi], cl ; mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000001307e8 : pop rbp ; add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x000000000005cdf7 : pop rbp ; jg 0x5ce1a ; add byte ptr [rdi], cl ; mov dh, 0xdb ; movsxd rax, dword ptr [rcx + rbx*4] ; add rax, rcx ; jmp rax
0x00000000000fe467 : pop rbp ; sub ch, byte ptr [rax + rax] ; mov qword ptr [rax], rdx ; xor eax, eax ; cmp rdi, rdx ; ja 0xfe4af ; ret
0x0000000000098687 : pop rbx ; dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a059d : pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00000000001307e7 : pop rbx ; pop rbp ; add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x00000000000a058b : pop rbx ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000003c581 : pop rcx ; shl byte ptr [rdi + rax*8], 0x22 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000153cf8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000000a0877 : pop rdi ; add al, 0x44 ; mov byte ptr [rdi + 6], al ; mov dword ptr [rdi], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000f85f2 : pop rdi ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000019f8fd : pop rdi ; add byte ptr [rax], al ; nop ; sbb ebp, ebp ; call rbx
0x00000000001af885 : pop rdi ; add dword ptr [rax], eax ; cmp bh, ah ; cmc ; jmp rsp
0x000000000014e94d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000008f832 : pop rdi ; and byte ptr [rsi + 0xf], ah ; out dx, eax ; mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000108d7c : pop rdi ; call rax
0x0000000000193e5d : pop rdi ; cld ; call qword ptr [rax + 0x10fffc60]
0x0000000000193e9d : pop rdi ; cld ; call qword ptr [rax]
0x0000000000187114 : pop rdi ; cld ; jmp qword ptr [rcx]
0x000000000003ae9c : pop rdi ; cmp byte ptr [rax], al ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x000000000002cacb : pop rdi ; cmp dword ptr [rax], eax ; mov byte ptr [rip + 0x395fa9], dl ; ret
0x000000000002cad1 : pop rdi ; cmp dword ptr [rax], eax ; ret
0x000000000004252b : pop rdi ; fmul st(0) ; ret
0x00000000000424a3 : pop rdi ; fmulp st(1) ; ret
0x0000000000155719 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155529 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000018335e : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000001a74f1 : pop rdi ; int1 ; call rbx
0x00000000000038f9 : pop rdi ; ja 0x395d ; clc ; salc ; jb 0x3983 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000103476 : pop rdi ; je 0x103496 ; pop rbx ; lea rax, qword ptr [rip + 0x2c0ddf] ; pop rbp ; pop r12 ; ret
0x000000000010553f : pop rdi ; jmp rax
0x0000000000158c4d : pop rdi ; lodsd eax, dword ptr [rsi] ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000182321 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x00000000000acae1 : pop rdi ; or al, 0x85 ; ror byte ptr [rcx - 0x528bf7b9], 0x48 ; mov eax, ebx ; pop rbx ; ret
0x0000000000155349 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155179 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155275 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001551c1 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000020a08 : pop rdi ; pop rbp ; ret
0x0000000000105c55 : pop rdi ; popfq ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000001fd7a : pop rdi ; ret
0x0000000000154578 : pop rdi ; sal byte ptr [rdx + 0x14], 1 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000153c4a : pop rdi ; sal byte ptr [rdx + 0xd], 1 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000130ee2 : pop rdi ; sbb byte ptr [rbx + 0x7eb5e83b], cl ; std ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x000000000012ae44 : pop rdi ; sub dword ptr [rax], eax ; mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x12ae5a ; ret
0x000000000012b0c4 : pop rdi ; sub dword ptr [rax], eax ; mov rax, qword ptr fs:[rax] ; ret
0x0000000000183a70 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000ac635 : pop rdx ; test al, 0xf0 ; jne 0xac669 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000d690d : pop rsi ; je 0xd6989 ; cmp cl, 0x2d ; jne 0xd694e ; mov byte ptr [rdi + 8], 0x16 ; mov eax, 1 ; ret
0x0000000000103475 : pop rsi ; pop rdi ; je 0x103497 ; pop rbx ; lea rax, qword ptr [rip + 0x2c0ddf] ; pop rbp ; pop r12 ; ret
0x0000000000196471 : pop rsi ; push qword ptr [rdi + 0x5e540001] ; jmp rsp
0x0000000000198709 : pop rsi ; stc ; inc dword ptr [rax + rdi*8 + 0x66240001] ; stc ; call rsp
0x00000000001a3c60 : pop rsp ; add byte ptr [rax], al ; add byte ptr [rbx], cl ; add byte ptr [rax], al ; pop rax ; outsd dx, dword ptr [rsi] ; out dx, al ; jmp qword ptr [rdi]
0x00000000001af880 : pop rsp ; add byte ptr [rax], al ; add byte ptr [rdi + rbx*2], ch ; add dword ptr [rax], eax ; cmp bh, ah ; cmc ; jmp rsp
0x000000000012de7e : pop rsp ; lea rsi, qword ptr [rdi + 0x48] ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000070bab : pop rsp ; mov rax, qword ptr [rbp + 0x48] ; add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000001a64b4 : pop rsp ; retf ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001869c0 : pop rsp ; scasb al, byte ptr [rdi] ; inc dword ptr [rdx] ; sahf ; jmp rdx
0x0000000000034175 : pop rsp ; xchg eax, ecx ; add al, 0x75 ; out 0x41, al ; mov eax, dword ptr [rcx + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x00000000000f8068 : popcnt rdx, rdx ; add eax, edx ; cmp rdi, rsi ; ja 0xf806d ; ret
0x00000000000bb603 : popfq ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; or eax, 1 ; ret
0x00000000001860f5 : pslld mm7, mm7 ; mov al, 0xf ; inc eax ; pslld mm7, mm7 ; ror byte ptr [rdi], 1 ; jmp rax
0x00000000001860f9 : pslld mm7, mm7 ; ror byte ptr [rdi], 0xf2 ; call rax
0x00000000001860fd : pslld mm7, mm7 ; ror byte ptr [rdi], 1 ; jmp rax
0x000000000015b0a3 : psllq mm1, qword ptr [rdi] ; jg 0x15b0bc ; ret
0x000000000015dbc3 : psllq mm1, qword ptr [rdi] ; jg 0x15dbdc ; ret
0x00000000000a61a6 : psllq mm1, qword ptr [rdi] ; jg 0xa61ba ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a61a5 : psllq mm1, qword ptr [rdi] ; jg 0xa61bb ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a6207 : psllq mm1, qword ptr [rdi] ; jg 0xa621c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a6206 : psllq mm1, qword ptr [rdi] ; jg 0xa621d ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a6308 : psllq mm1, qword ptr [rdi] ; jg 0xa631e ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a6e76 : psllq mm1, qword ptr [rdi] ; jg 0xa6e8a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a6e75 : psllq mm1, qword ptr [rdi] ; jg 0xa6e8b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a6ed7 : psllq mm1, qword ptr [rdi] ; jg 0xa6eec ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a6ed6 : psllq mm1, qword ptr [rdi] ; jg 0xa6eed ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a6fd8 : psllq mm1, qword ptr [rdi] ; jg 0xa6fee ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a7816 : psllq mm1, qword ptr [rdi] ; jg 0xa782e ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a7815 : psllq mm1, qword ptr [rdi] ; jg 0xa782f ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a7897 : psllq mm1, qword ptr [rdi] ; jg 0xa78b0 ; mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a7896 : psllq mm1, qword ptr [rdi] ; jg 0xa78b1 ; mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a7998 : psllq mm1, qword ptr [rdi] ; jg 0xa79b2 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a8666 : psllq mm1, qword ptr [rdi] ; jg 0xa867e ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a8665 : psllq mm1, qword ptr [rdi] ; jg 0xa867f ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a86e7 : psllq mm1, qword ptr [rdi] ; jg 0xa8700 ; mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a86e6 : psllq mm1, qword ptr [rdi] ; jg 0xa8701 ; mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a87e8 : psllq mm1, qword ptr [rdi] ; jg 0xa8802 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a9286 : psllq mm1, qword ptr [rdi] ; jg 0xa929a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a9285 : psllq mm1, qword ptr [rdi] ; jg 0xa929b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a92e7 : psllq mm1, qword ptr [rdi] ; jg 0xa92fc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a92e6 : psllq mm1, qword ptr [rdi] ; jg 0xa92fd ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a93e8 : psllq mm1, qword ptr [rdi] ; jg 0xa93fe ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a9d56 : psllq mm1, qword ptr [rdi] ; jg 0xa9d6a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a9d55 : psllq mm1, qword ptr [rdi] ; jg 0xa9d6b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a9db7 : psllq mm1, qword ptr [rdi] ; jg 0xa9dcc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a9db6 : psllq mm1, qword ptr [rdi] ; jg 0xa9dcd ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a9eb8 : psllq mm1, qword ptr [rdi] ; jg 0xa9ece ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000aa0d6 : psllq mm1, qword ptr [rdi] ; jg 0xaa0ef ; mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000aa0d5 : psllq mm1, qword ptr [rdi] ; jg 0xaa0f0 ; mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000aa157 : psllq mm1, qword ptr [rdi] ; jg 0xaa171 ; mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000aa156 : psllq mm1, qword ptr [rdi] ; jg 0xaa172 ; mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000aa258 : psllq mm1, qword ptr [rdi] ; jg 0xaa273 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000134c07 : push -0x777e48f1 ; add byte ptr [rax], al ; add byte ptr [rsi - 0x77], ah ; insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x0000000000046bb2 : push -0x7bfd49f1 ; ror byte ptr [rdi], 0x84 ; ret 0xfff9
0x0000000000076b7d : push 0 ; lea r9, qword ptr [rbp - 0x38] ; mov rcx, r13 ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x000000000007f163 : push 0x2e6690c3 ; nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x0000000000185de8 : push 0x78fff1aa ; stosb byte ptr [rdi], al ; int1 ; dec dword ptr [rax - 0x67000e56] ; stosb byte ptr [rdi], al ; int1 ; jmp qword ptr [rax]
0x0000000000185e80 : push 0x8fffcbf ; scasd eax, dword ptr [rdi] ; cld ; lcall ptr [rax] ; ret 0xfffc
0x0000000000198729 : push 0xf9 ; push qword ptr [rcx + rdi*8 + 0x6ac40001] ; stc ; jmp rsp
0x000000000013784e : push 2 ; add rdi, 0x68 ; jmp rcx
0x00000000001870af : push qword ptr [rax - 0x11] ; jmp rdi
0x00000000001860f7 : push qword ptr [rax - 0x3f000df1] ; pslld mm7, mm7 ; ror byte ptr [rdi], 1 ; jmp rax
0x00000000000a5a0f : push qword ptr [rax] ; leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000193343 : push qword ptr [rax] ; lodsb al, byte ptr [rsi] ; sti ; inc dword ptr [rax - 0x2f000453] ; scasb al, byte ptr [rdi] ; sti ; jmp qword ptr [rax]
0x000000000007413d : push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000195e0b : push qword ptr [rbp + rdi*8 - 0x6e4c0000] ; out dx, eax ; dec esp ; std ; add byte ptr [rax], al ; in al, -0x6f ; out dx, eax ; jmp rsp
0x00000000001721b4 : push qword ptr [rbp + rdx + 0x48] ; mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x1721d3 ; call rax
0x000000000003639a : push qword ptr [rbx + rdx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000199703 : push qword ptr [rbx + rdx - 0x61cbffff] ; cld ; dec esp ; adc eax, dword ptr [rcx] ; add byte ptr [rdi + rdi*4 - 4], dh ; jmp rsp
0x0000000000196713 : push qword ptr [rcx + rdi + 1] ; add byte ptr [rdx + rcx*2], al ; lcall ptr [rcx + rdi + 0x4a940001] ; call rsp
0x000000000019872b : push qword ptr [rcx + rdi*8 + 0x6ac40001] ; stc ; jmp rsp
0x000000000019354b : push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call rcx
0x000000000019362b : push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; dec dword ptr [rax] ; sbb edi, esp ; call rax
0x000000000019351b : push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x0000000000193547 : push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call rcx
0x0000000000193627 : push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; dec dword ptr [rax] ; sbb edi, esp ; call rax
0x0000000000193517 : push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x0000000000193543 : push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call rcx
0x0000000000193623 : push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; dec dword ptr [rax] ; sbb edi, esp ; call rax
0x0000000000193513 : push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x00000000000b7505 : push qword ptr [rcx] ; rol byte ptr [rbp - 0x3f6af037], 0x85 ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000135009 : push qword ptr [rcx] ; ror byte ptr [rax - 0x75], 0x74 ; and al, 0x50 ; mov rdi, r12 ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x00000000000d26eb : push qword ptr [rcx] ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x0000000000077828 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000022440 : push qword ptr [rcx] ; ror byte ptr [rcx - 0x7d], cl ; cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9e9
0x0000000000119337 : push qword ptr [rcx] ; ror byte ptr [rdi], 5 ; cmp rax, -0x1000 ; ja 0x11935e ; ret
0x00000000000ccf62 : push qword ptr [rdi + 0x13] ; cmp rax, 0xff ; mov edx, 0 ; cmove rax, rdx ; ret
0x00000000000fe371 : push qword ptr [rdi + 0x14] ; mov edx, 0x14 ; sub edx, eax ; test eax, eax ; cmovns eax, edx ; ret
0x0000000000036f38 : push qword ptr [rdi + 0x15] ; add rsp, 0x88 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011756c : push qword ptr [rdi + 0x1b] ; ret
0x00000000000f8c78 : push qword ptr [rdi + 0x35] ; ret
0x00000000000f8d1c : push qword ptr [rdi + 0x41] ; add rsp, 0x60 ; pop rbx ; ret
0x0000000000196473 : push qword ptr [rdi + 0x5e540001] ; jmp rsp
0x0000000000102bdf : push qword ptr [rdi + 0x5e] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000fce02 : push qword ptr [rdi + 0x73] ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000febf6 : push qword ptr [rdi + 0x77] ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fddf3 : push qword ptr [rdi + 0xa] ; ret
0x0000000000109bc2 : push qword ptr [rdi + 0xb] ; ret
0x0000000000035ae1 : push qword ptr [rdi + 0xc] ; ret
0x000000000012b11e : push qword ptr [rdi + 0xf] ; sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ce4ec : push qword ptr [rdi + 1] ; ret
0x0000000000035b2b : push qword ptr [rdi + 2] ; ret
0x00000000000f821a : push qword ptr [rdi + 3] ; ret
0x0000000000079f60 : push qword ptr [rdi + 5] ; ret
0x00000000000cd05f : push qword ptr [rdi + 6] ; ret
0x00000000000c9be6 : push qword ptr [rdi + 7] ; ret
0x0000000000035a75 : push qword ptr [rdi + 8] ; ret
0x000000000007a614 : push qword ptr [rdi + 9] ; pop rbx ; ret
0x00000000000bc82c : push qword ptr [rdi + 9] ; ret
0x00000000000e9936 : push qword ptr [rdi + rax - 0x48] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000019531b : push qword ptr [rdi + rbp*4 - 0x4afc0000] ; in eax, dx ; jmp rsp
0x0000000000195313 : push qword ptr [rdi + rbp*4] ; add byte ptr [rsp + rsi*4 - 0x504b0013], al ; add byte ptr [rax], al ; add al, 0xb5 ; in eax, dx ; jmp rsp
0x0000000000196153 : push qword ptr [rdi + rcx + 1] ; add ah, dl ; ret 0xfff0
0x000000000019554b : push qword ptr [rdi + rdi*4 - 0x1c0000] ; in eax, dx ; jmp rsp
0x0000000000195e6b : push qword ptr [rdi + rdi*8 - 0x4d0c0000] ; out dx, eax ; dec esp ; inc dword ptr [rax] ; add byte ptr [rbx + rsi*4], dh ; out dx, eax ; jmp rsp
0x0000000000195d23 : push qword ptr [rdi + rsi*8 + 0x65240000] ; out dx, eax ; jmp rsp
0x0000000000187ce7 : push qword ptr [rdi - 0x14000ad1] ; cmc ; call rax
0x000000000019847b : push qword ptr [rdi - 0x311bffff] ; clc ; dec esp ; out 1, eax ; add byte ptr [rdi + rcx*8], dh ; clc ; jmp rsp
0x0000000000117544 : push qword ptr [rdi - 0x33] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000193ca3 : push qword ptr [rdx + 0x22fffc6d] ; insd dword ptr [rdi], dx ; cld ; call qword ptr [rdx + 0x22fffc6c]
0x00000000000ad33b : push qword ptr [rdx + rsi*2 - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret 0xe883
0x00000000000243db : push r12 ; mov r9, qword ptr [rsp + 0x40] ; mov rsi, qword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000025344 : push r13 ; mov r9, qword ptr [rsp + 0x20] ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000028187 : push r13 ; mov r9, qword ptr [rsp + 0x28] ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000007d65b : push rax ; add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007994c : push rax ; add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x0000000000106118 : push rax ; add dword ptr [rax - 0x77], ecx ; push rdi ; sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009089c : push rax ; add eax, ebp ; insd dword ptr [rdi], dx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000013e6fd : push rax ; cld ; mov qword ptr [rdi + 0x18], rax ; mov eax, 1 ; ret
0x0000000000193333 : push rax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sti ; inc dword ptr [rax - 0x58] ; sti ; call qword ptr [rax - 0x1f000457]
0x000000000008b4ea : push rax ; dec byte ptr [rcx + rcx*4 + 0x43] ; movsxd rdi, esi ; mov dword ptr [rbx + 0x30], eax ; mov qword ptr [rbx], rdi ; call rcx
0x0000000000193e2c : push rax ; insb byte ptr [rdi], dx ; cld ; push rax ; cld ; call qword ptr [rax]
0x00000000000768d2 : push rax ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000025cd6 : push rax ; mov r9, qword ptr [rsp + 0x38] ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000135010 : push rax ; mov rdi, r12 ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x0000000000073815 : push rax ; mov rdx, rdi ; jbe 0x7374e ; mov eax, dword ptr [rsi] ; jmp 0x737f4
0x000000000002583a : push rax ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000001932a7 : push rax ; movsxd rdi, ebx ; jmp qword ptr [rax]
0x0000000000037b8e : push rax ; nop ; mov rsi, r13 ; mov rdi, r14 ; mov rdx, rbp ; call r15
0x000000000007eea1 : push rax ; or byte ptr [rbp + 0xb], dh ; sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000076b7c : push rax ; push 0 ; lea r9, qword ptr [rbp - 0x38] ; mov rcx, r13 ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x00000000000f6f81 : push rax ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000001ae470 : push rax ; stosb byte ptr [rdi], al ; cmc ; call qword ptr [rax]
0x000000000018a05f : push rax ; stosd dword ptr [rdi], eax ; cli ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; cli ; call qword ptr [rax]
0x00000000001ae570 : push rax ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x000000000012e893 : push rbp ; mov r14, rdi ; push r12 ; push rbp ; mov r13, rsi ; push rbx ; sub rsp, 0x60 ; call 0x13ab11
0x0000000000025345 : push rbp ; mov r9, qword ptr [rsp + 0x20] ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000028188 : push rbp ; mov r9, qword ptr [rsp + 0x28] ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000000038f6 : push rbp ; movabs dword ptr [0x7972d6f857775fc9], eax ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00000000000ba83e : push rbx ; adc byte ptr [rdi + rdx*8 + 0x48], dh ; add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000002057 : push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x000000000008aa1a : push rbx ; fmul dword ptr [eax + 0x33] ; push rdi ; fmul dword ptr [rax + 0x39] ; ret 0x5a74
0x000000000016e635 : push rbx ; jb 0x16e645 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000003a933 : push rbx ; je 0x3a97b ; xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x3a94b ; pop rbx ; ret
0x00000000000ac60c : push rbx ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000027a83 : push rbx ; mov r9, qword ptr [rsp + 0x20] ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000024d61 : push rbx ; mov r9, qword ptr [rsp + 0x28] ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000023f76 : push rbx ; mov r9, qword ptr [rsp + 0x30] ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000026c19 : push rbx ; mov r9, qword ptr [rsp + 0x30] ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x000000000002c350 : push rbx ; mov rax, qword ptr [rdi + 0x20] ; mov rbx, rdi ; test rax, rax ; je 0x2c36c ; call rax
0x00000000000a8a72 : push rbx ; movq qword ptr [rdi + 0x30], mm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a7262 : push rbx ; movq qword ptr [rdi + 0x30], mm7 ; ret
0x00000000000aa2f2 : push rbx ; movq qword ptr [rdi + 0x30], mm7 ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000007d65f : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000170da8 : push rbx ; std ; dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000007a34d : push rbx ; sub rdx, rsi ; mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x000000000006da6d : push rbx ; xor al, 0x48 ; lea ecx, dword ptr [rbx + 0x40] ; mov esi, 1 ; mov rdi, rbx ; call r8
0x000000000006d76a : push rbx ; xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000004c56b : push rcx ; adc esi, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000000a0519 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x00000000000a0598 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00000000001b7cb1 : push rcx ; clc ; call rdi
0x0000000000193540 : push rcx ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call rcx
0x0000000000075840 : push rcx ; or byte ptr [rax + 0x2b], cl ; adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000000367c : push rcx ; outsb dx, byte ptr [rsi] ; stosb byte ptr [rdi], al ; stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x00000000000ce423 : push rcx ; sub ch, byte ptr [rdi] ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000aa122 : push rdi ; adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a86b2 : push rdi ; adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x0000000000137904 : push rdi ; adc byte ptr [rax + 1], bh ; ret
0x00000000000aa2a3 : push rdi ; adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000aa1a1 : push rdi ; adc byte ptr [rax - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000d0d6f : push rdi ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000aa280 : push rdi ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x0000000000075949 : push rdi ; adc byte ptr [rcx + 0x2b], cl ; push rdi ; or byte ptr [rax - 0x3f], cl ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000000000aa201 : push rdi ; adc byte ptr [rcx - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000aa1e1 : push rdi ; adc byte ptr [rcx - 0x12cfe8b1], cl ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000016b75f : push rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000aa1c2 : push rdi ; adc byte ptr [rsi - 0x77], ah ; sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x0000000000035b75 : push rdi ; adc cl, byte ptr [rsi] ; add byte ptr [rbx + 0x480c2444], cl ; add esp, 0x10 ; pop rbx ; ret
0x00000000000a9f58 : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a9f6a : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a09b4 : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x00000000000a09c4 : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a84fa : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x000000000015b209 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00000000000a0924 : push rdi ; add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a08b4 : push rdi ; add al, 0x48 ; mov eax, edi ; ret
0x00000000000a695a : push rdi ; add al, 0x49 ; sub eax, 6 ; lea rdi, qword ptr [rdi + 6] ; jne 0xa7180 ; ret
0x000000000002d9ec : push rdi ; add al, 0x72 ; or bl, dh ; ret
0x00000000000a60ca : push rdi ; add al, 0xc3 ; nop dword ptr [rax] ; mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000000a7094 : push rdi ; add al, 0xc3 ; nop word ptr [rax + rax] ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000a6d6a : push rdi ; add al, bl ; nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000084587 : push rdi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x000000000019448d : push rdi ; add byte ptr [rax], al ; push rsp ; ret
0x00000000000a9f2a : push rdi ; add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000dc23b : push rdi ; add dword ptr [rax - 0x7d], ecx ; mov dword ptr [rcx], 0x24bc8948 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x0000000000196b4d : push rdi ; add dword ptr [rax], eax ; adc al, 0x76 ; hlt ; inc dword ptr [rdi + rdx*2 + 0x78640001] ; hlt ; call rsp
0x00000000001af06d : push rdi ; add dword ptr [rax], eax ; and bl, al ; cmc ; jmp qword ptr [rdi]
0x00000000001af085 : push rdi ; add dword ptr [rax], eax ; cmp bl, al ; cmc ; jmp rax
0x0000000000196b55 : push rdi ; add dword ptr [rax], eax ; js 0x196b55 ; call rsp
0x000000000008bbc1 : push rdi ; add dword ptr [rax], eax ; ret
0x000000000016e332 : push rdi ; add dword ptr [rdx - 0xf], esp ; jl 0x16e390 ; adc dword ptr [rsi - 2], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x00000000000a777c : push rdi ; add eax, 0xc478d48 ; ret
0x00000000000a85bc : push rdi ; add eax, 0xd478d48 ; ret
0x00000000000a6a3c : push rdi ; add eax, 0xde88349 ; lea rdi, qword ptr [rdi + 0xd] ; jne 0xa7180 ; ret
0x00000000000a60d8 : push rdi ; add eax, ebx ; nop dword ptr [rax + rax] ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a6978 : push rdi ; add ecx, dword ptr [rcx - 0x7d] ; call 0x7f97b198
0x00000000000a9f88 : push rdi ; add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x000000000007a132 : push rdi ; and byte ptr [rax - 0x75], cl ; sub byte ptr [r8 + 0x39], r9b ; ret 0x850f
0x000000000007a046 : push rdi ; and byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x000000000016b774 : push rdi ; and byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000198189 : push rdi ; clc ; inc dword ptr [rcx + rdx*8 + 0x58040001] ; clc ; call rsp
0x0000000000155008 : push rdi ; clc ; ret
0x00000000000038fb : push rdi ; clc ; salc ; jb 0x3981 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000193e49 : push rdi ; cld ; call qword ptr [rax]
0x0000000000155180 : push rdi ; cld ; ret
0x0000000000155ca7 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001ad509 : push rdi ; cmc ; jmp qword ptr [rcx]
0x000000000015aae9 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000a6ce0 : push rdi ; cmovns eax, dword ptr [rbx - 0x72b7e018] ; jg 0xa6d19 ; jne 0xa7180 ; ret
0x0000000000138195 : push rdi ; cmp byte ptr [rax + 1], bh ; ret
0x000000000002d13b : push rdi ; cmp dword ptr [rax], eax ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x00000000001801e8 : push rdi ; cmp ebp, ebx ; call qword ptr [rdi]
0x000000000016c6de : push rdi ; fidiv dword ptr [rdx - 0x10f09926] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008aa1f : push rdi ; fmul dword ptr [rax + 0x39] ; ret 0x5a74
0x000000000016c4de : push rdi ; fnsave dword ptr [rdx - 0x10f09923] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000015aa69 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155715 : push rdi ; in al, 0x4c ; mov dword ptr [rdi - 0x14], ebx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155525 : push rdi ; in eax, 0x4c ; mov dword ptr [rdi - 0x13], ebx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a7061 : push rdi ; inc ebx ; nop ; nop word ptr cs:[rax + rax] ; mov dword ptr [rdi], edx ; ret
0x00000000000a70a2 : push rdi ; inc ebx ; nop ; nop word ptr cs:[rax + rax] ; mov qword ptr [rdi], rdx ; ret
0x000000000015a8ba : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001558e6 : push rdi ; jrcxz 0x155943 ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015592e : push rdi ; jrcxz 0x15598b ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015596c : push rdi ; jrcxz 0x1559c9 ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001559a8 : push rdi ; jrcxz 0x155a05 ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001559e2 : push rdi ; jrcxz 0x155a3f ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155a1a : push rdi ; jrcxz 0x155a77 ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155a42 : push rdi ; jrcxz 0x155a9f ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001582b6 : push rdi ; jrcxz 0x158313 ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001582fe : push rdi ; jrcxz 0x15835b ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015833c : push rdi ; jrcxz 0x158399 ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158378 : push rdi ; jrcxz 0x1583d5 ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001583b2 : push rdi ; jrcxz 0x15840f ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001583ea : push rdi ; jrcxz 0x158447 ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158412 : push rdi ; jrcxz 0x15846f ; mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000f7317 : push rdi ; js 0xf736f ; mov edx, dword ptr [rsi + 0x78] ; mov qword ptr [rdi + 0x80], rdx ; ret
0x0000000000155ae6 : push rdi ; loop 0x155b43 ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155b2e : push rdi ; loop 0x155b8b ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155b6c : push rdi ; loop 0x155bc9 ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155ba4 : push rdi ; loop 0x155c01 ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155be2 : push rdi ; loop 0x155c3f ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155c1a : push rdi ; loop 0x155c77 ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155c42 : push rdi ; loop 0x155c9f ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001584b6 : push rdi ; loop 0x158513 ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001584fe : push rdi ; loop 0x15855b ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015853c : push rdi ; loop 0x158599 ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158574 : push rdi ; loop 0x1585d1 ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001585b2 : push rdi ; loop 0x15860f ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001585ea : push rdi ; loop 0x158647 ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158612 : push rdi ; loop 0x15866f ; mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000006cbfd : push rdi ; loop 0x6cc17 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000155ce6 : push rdi ; loope 0x155d43 ; mov dword ptr [rdi - 0x17], ebx ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155d2e : push rdi ; loope 0x155d8b ; mov dword ptr [rdi - 0x17], ebx ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155d6c : push rdi ; loope 0x155dc9 ; mov dword ptr [rdi - 0x17], ebx ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155da4 : push rdi ; loope 0x155e01 ; mov dword ptr [rdi - 0x17], ebx ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155de2 : push rdi ; loope 0x155e3f ; mov dword ptr [rdi - 0x17], ebx ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155e1a : push rdi ; loope 0x155e77 ; mov dword ptr [rdi - 0x17], ebx ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155e42 : push rdi ; loope 0x155e9f ; mov dword ptr [rdi - 0x17], ebx ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001586b6 : push rdi ; loope 0x158713 ; mov dword ptr [rdi - 0x17], ebx ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001586fe : push rdi ; loope 0x15875b ; mov dword ptr [rdi - 0x17], ebx ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015873c : push rdi ; loope 0x158799 ; mov dword ptr [rdi - 0x17], ebx ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158774 : push rdi ; loope 0x1587d1 ; mov dword ptr [rdi - 0x17], ebx ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001587b2 : push rdi ; loope 0x15880f ; mov dword ptr [rdi - 0x17], ebx ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001587ea : push rdi ; loope 0x158847 ; mov dword ptr [rdi - 0x17], ebx ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000158812 : push rdi ; loope 0x15886f ; mov dword ptr [rdi - 0x17], ebx ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153cf0 : push rdi ; loopne 0x153d4b ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x153d14 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153e40 : push rdi ; loopne 0x153e9b ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x153e64 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153f90 : push rdi ; loopne 0x153feb ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x153fb4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001540e0 : push rdi ; loopne 0x15413b ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154104 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154230 : push rdi ; loopne 0x15428b ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154254 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154380 : push rdi ; loopne 0x1543db ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1543a4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001544d0 : push rdi ; loopne 0x15452b ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1544f4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154620 : push rdi ; loopne 0x15467b ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154644 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154770 : push rdi ; loopne 0x1547cb ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154794 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001548c0 : push rdi ; loopne 0x15491b ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1548e4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154a10 : push rdi ; loopne 0x154a6b ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154a34 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154b60 : push rdi ; loopne 0x154bbb ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154b84 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154cb0 : push rdi ; loopne 0x154d0b ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154cd4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154e00 : push rdi ; loopne 0x154e5b ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154e24 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154f50 : push rdi ; loopne 0x154fab ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154f74 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001566c0 : push rdi ; loopne 0x15671b ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1566e4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156810 : push rdi ; loopne 0x15686b ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156834 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156960 : push rdi ; loopne 0x1569bb ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156984 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ab0 : push rdi ; loopne 0x156b0b ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156ad4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156c00 : push rdi ; loopne 0x156c5b ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156c24 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156d50 : push rdi ; loopne 0x156dab ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156d74 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ea0 : push rdi ; loopne 0x156efb ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156ec4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ff0 : push rdi ; loopne 0x15704b ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x157014 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157140 : push rdi ; loopne 0x15719b ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x157164 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157290 : push rdi ; loopne 0x1572eb ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1572b4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001573e0 : push rdi ; loopne 0x15743b ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x157404 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157530 : push rdi ; loopne 0x15758b ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x157554 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157680 : push rdi ; loopne 0x1576db ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1576a4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001577d0 : push rdi ; loopne 0x15782b ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1577f4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157920 : push rdi ; loopne 0x15797b ; lea edi, dword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x157944 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000008aa16 : push rdi ; loopne 0x8a9de ; or dword ptr [rbx + 0x67], edx ; fmul dword ptr [rax + 0x33] ; push rdi ; fmul dword ptr [rax + 0x39] ; ret 0x5a74
0x000000000016c7a8 : push rdi ; mov eax, 0xf66b8b2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016c4a3 : push rdi ; mov ebp, 0x4e6f0ff3 ; mov ebp, 0xf66bdb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016c628 : push rdi ; mov ebx, 0xf66bbb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016c728 : push rdi ; mov ecx, 0xf66b9b2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016c6a8 : push rdi ; mov edx, 0xf66bab2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016c5a3 : push rdi ; mov esp, 0x4e6f0ff3 ; mov esp, 0xf66bcb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000007d220 : push rdi ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000007d254 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000015a94a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000ac108 : push rdi ; mov r8d, dword ptr [rsi] ; test r8d, r8d ; mov dword ptr [rcx + 4], r8d ; jne 0xac0e6 ; ret
0x0000000000125930 : push rdi ; or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x00000000000a610c : push rdi ; or bl, al ; nop ; mov rcx, qword ptr [rsi] ; mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a70d5 : push rdi ; or bl, al ; nop dword ptr [rax + rax] ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000007594d : push rdi ; or byte ptr [rax - 0x3f], cl ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000000000a9fcc : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000aa00a : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a9faa : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000bb642 : push rdi ; or byte ptr [rbp - 0x29], dh ; ret
0x000000000004a49a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000004888a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000048891 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x0000000000079950 : push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000856ab : push rdi ; or dh, dh ; ret 0x7402
0x00000000000a7960 : push rdi ; or eax, 0x1c478d48 ; ret
0x00000000000a87b0 : push rdi ; or eax, 0x1d478d48 ; ret
0x00000000000a6c80 : push rdi ; or eax, 0x1de88349 ; lea rdi, qword ptr [rdi + 0x1d] ; jne 0xa7180 ; ret
0x0000000000155345 : push rdi ; out 0x4c, al ; mov dword ptr [rdi - 0x12], ebx ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155175 : push rdi ; out 0x4c, eax ; mov dword ptr [rdi - 0x11], ebx ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155271 : push rdi ; out 0x4c, eax ; mov dword ptr [rdi - 0x11], ebx ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001551bd : push rdi ; out 0x4c, eax ; mov dword ptr [rdi - 0x11], ebx ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000154ed5 : push rdi ; out 3, eax ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000195851 : push rdi ; out dx, al ; call rsp
0x0000000000195849 : push rdi ; out dx, al ; lcall ptr [rbx + rdx*8 + 0x57e40000] ; out dx, al ; call rsp
0x000000000012de7d : push rdi ; pop rsp ; lea rsi, qword ptr [rdi + 0x48] ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000000d15ac : push rdi ; ret
0x000000000016cb1e : push rdi ; ret 0xff3
0x000000000003b977 : push rdi ; ret 0xffef
0x00000000000aef0a : push rdi ; rol byte ptr [rbx - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000156795 : push rdi ; rol byte ptr [rbx], 1 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000154574 : push rdi ; ror byte ptr [rdi], 0x29 ; pop rdi ; sal byte ptr [rdx + 0x14], 1 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000153c46 : push rdi ; ror byte ptr [rdi], 0x29 ; pop rdi ; sal byte ptr [rdx + 0xd], 1 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000013e793 : push rdi ; sbb byte ptr [rax + 1], bh ; ret
0x00000000001110a2 : push rdi ; sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000155ea7 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001556ca : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000155aa7 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000ff53d : push rdi ; sub al, 0 ; add rsp, 8 ; ret
0x00000000001381dd : push rdi ; sub byte ptr [rax + 1], bh ; ret
0x00000000001064a6 : push rdi ; sub dh, al ; add byte ptr [rdx], cl ; add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000010611c : push rdi ; sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000757b9 : push rdi ; sub rdx, rsi ; mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x00000000000aa260 : push rdi ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000016b789 : push rdi ; xor byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008f83b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000100f8d : push rdi ; xor dword ptr [rax + rax], ebp ; add rsp, 0x98 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c9846 : push rdx ; mov rdx, qword ptr [rsp + 0x28] ; mov rdi, qword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000001381d5 : push rdx ; or byte ptr [rax - 0x77], cl ; and byte ptr [r8 - 0x77], r9b ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x000000000013818d : push rdx ; or byte ptr [rax - 0x77], cl ; xor byte ptr [r8 - 0x77], r9b ; push rdi ; cmp byte ptr [rax + 1], bh ; ret
0x000000000002caca : push rdx ; pop rdi ; cmp dword ptr [rax], eax ; mov byte ptr [rip + 0x395fa9], dl ; ret
0x00000000000a86a8 : push rsi ; adc al, 0xf3 ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a6e98 : push rsi ; adc al, 0xf3 ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000aa118 : push rsi ; adc al, 0xf3 ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a79b7 : push rsi ; adc bl, dh ; movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a8807 : push rsi ; adc bl, dh ; movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a6327 : push rsi ; adc bl, dh ; movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000aa277 : push rsi ; adc bl, dh ; movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a6286 : push rsi ; adc byte ptr [rbx + 0xff3174e], cl ; jg 0xa62a6 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a6f56 : push rsi ; adc byte ptr [rbx + 0xff3174e], cl ; jg 0xa6f76 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a9366 : push rsi ; adc byte ptr [rbx + 0xff3174e], cl ; jg 0xa9386 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a9e36 : push rsi ; adc byte ptr [rbx + 0xff3174e], cl ; jg 0xa9e56 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a62a6 : push rsi ; adc byte ptr [rbx + 0xff3184e], cl ; jg 0xa62c6 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a6f76 : push rsi ; adc byte ptr [rbx + 0xff3184e], cl ; jg 0xa6f96 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a9386 : push rsi ; adc byte ptr [rbx + 0xff3184e], cl ; jg 0xa93a6 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a9e56 : push rsi ; adc byte ptr [rbx + 0xff3184e], cl ; jg 0xa9e76 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a6f16 : push rsi ; adc byte ptr [rdx + 0xff3184e], cl ; jg 0xa6f36 ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a7017 : push rsi ; adc byte ptr [rdx + 0xff3204e], cl ; jg 0xa7038 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000a8827 : push rsi ; adc byte ptr [rdx + 0xff3204e], cl ; jg 0xa8848 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x000000000016b764 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000a9f24 : push rsi ; add ah, byte ptr [rsi - 0x77] ; js 0xffffffffed3aa192 ; mov byte ptr [rdi + 3], ch ; ret
0x000000000015b202 : push rsi ; add al, 0x48 ; mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a9f53 : push rsi ; add al, 0x89 ; js 0xffffffffed3aa3bf ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a9f64 : push rsi ; add al, 0x89 ; pcmpgtd mm1, qword ptr [rcx - 0x12cffba9] ; mov byte ptr [rdi + 6], ch ; ret
0x000000000015b4a1 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000015b511 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b192 : push rsi ; add eax, 0x480e8b48 ; mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a7775 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a85b5 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a6135 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x00000000000aa025 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x000000000015b431 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000a76e3 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a8513 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a9f83 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x000000000016b779 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000155116 : push rsi ; clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155a6a : push rsi ; clc ; mov qword ptr [rdi - 0x15], r11 ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155c6a : push rsi ; clc ; mov qword ptr [rdi - 0x16], r11 ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155e6a : push rsi ; clc ; mov qword ptr [rdi - 0x17], r11 ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001550fa : push rsi ; clc ; mov qword ptr [rdi - 0x18], r10 ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155a86 : push rsi ; clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155c86 : push rsi ; clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155e86 : push rsi ; clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000155132 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000f8066 : push rsi ; clc ; popcnt rdx, rdx ; add eax, edx ; cmp rdi, rsi ; ja 0xf806f ; ret
0x00000000001558a1 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001552d9 : push rsi ; cld ; mov qword ptr [rdi - 0x11], r11 ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001554b9 : push rsi ; cld ; mov qword ptr [rdi - 0x12], r11 ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155699 : push rsi ; cld ; mov qword ptr [rdi - 0x13], r11 ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155879 : push rsi ; cld ; mov qword ptr [rdi - 0x14], r11 ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015549d : push rsi ; cld ; mov qword ptr [rdi - 0x1a], r10 ; mov qword ptr [rdi - 0x12], r11 ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015567d : push rsi ; cld ; mov qword ptr [rdi - 0x1b], r10 ; mov qword ptr [rdi - 0x13], r11 ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015585d : push rsi ; cld ; mov qword ptr [rdi - 0x1c], r10 ; mov qword ptr [rdi - 0x14], r11 ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001554d5 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001556b5 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155895 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001552f5 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000155ca1 : push rsi ; cli ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015aae2 : push rsi ; cmc ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001552bd : push rsi ; dec dword ptr [rcx + rcx*4 + 0x57] ; out 0x4c, eax ; mov dword ptr [rdi - 0x11], ebx ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000016c30e : push rsi ; fbstp dword ptr [rdx - 0x10f09921] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016c3de : push rsi ; fidiv word ptr [rdx - 0x10f09922] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000015aa62 : push rsi ; hlt ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016e353 : push rsi ; inc ebx ; cmp dl, 0x20 ; jb 0x16e376 ; vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000015a8b2 : push rsi ; int1 ; mov rcx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000f7285 : push rsi ; jo 0xf72df ; mov eax, dword ptr [rdi + 0x80] ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000f7313 : push rsi ; jo 0xf736f ; mov dword ptr [rdi + 0x78], edx ; mov rdx, qword ptr [rsi + 0x78] ; mov qword ptr [rdi + 0x80], rdx ; ret
0x00000000000f7e02 : push rsi ; jo 0xf7e5c ; mov eax, dword ptr [rdi + 0x100] ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000f731b : push rsi ; js 0xf736f ; mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000f7ee8 : push rsi ; js 0xf7f3c ; mov dword ptr [rdi + 0x100], edx ; ret
0x000000000016e362 : push rsi ; loopne 0x16e334 ; vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000016c2d8 : push rsi ; mov edi, 0xf66bfb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016c3a8 : push rsi ; mov esi, 0xf66beb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000015a9d2 : push rsi ; mov rcx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015a942 : push rsi ; mov rcx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000aa004 : push rsi ; or byte ptr [rax - 0x77], cl ; jns 0xffffffffed3aa872 ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a9fa4 : push rsi ; or byte ptr [rax - 0x77], cl ; js 0xffffffffed3aa812 ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a9fc5 : push rsi ; or byte ptr [rax - 0x77], cl ; pcmpgtd mm1, qword ptr [rcx - 0x12cff7a9] ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000bb63f : push rsi ; or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x29], dh ; ret
0x00000000000a7957 : push rsi ; or eax, 0x77f0ff3 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a87a7 : push rsi ; or eax, 0x77f0ff3 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a62c7 : push rsi ; or eax, 0x77f0ff3 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000aa217 : push rsi ; or eax, 0x77f0ff3 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a6307 : push rsi ; psllq mm1, qword ptr [rdi] ; jg 0xa631f ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a6fd7 : push rsi ; psllq mm1, qword ptr [rdi] ; jg 0xa6fef ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a7997 : push rsi ; psllq mm1, qword ptr [rdi] ; jg 0xa79b3 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a87e7 : push rsi ; psllq mm1, qword ptr [rdi] ; jg 0xa8803 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a93e7 : push rsi ; psllq mm1, qword ptr [rdi] ; jg 0xa93ff ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a9eb7 : push rsi ; psllq mm1, qword ptr [rdi] ; jg 0xa9ecf ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000aa257 : push rsi ; psllq mm1, qword ptr [rdi] ; jg 0xaa274 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000155ea1 : push rsi ; stc ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001556c2 : push rsi ; std ; mov cx, word ptr [rsi - 2] ; mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000155aa1 : push rsi ; sti ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b78e : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001b7ca8 : push rsp ; add byte ptr [rax], al ; add byte ptr [rbx + 1], dl ; add byte ptr [rax], ah ; push rcx ; clc ; call rdi
0x00000000001226d5 : push rsp ; and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x0000000000145d12 : push rsp ; and al, 0x18 ; mov esi, 0x40 ; mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000000c9849 : push rsp ; and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000024fb0 : push rsp ; and al, 0x30 ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000000238b6 : push rsp ; and al, 0x38 ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000027db2 : push rsp ; and al, 0x38 ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000000241ae : push rsp ; and al, 0x48 ; mov rsi, qword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call r15
0x0000000000024bd1 : push rsp ; and al, 0x48 ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000023c3b : push rsp ; and al, 0x48 ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x000000000008847a : push rsp ; and al, 0x68 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000352cb : push rsp ; and al, 0xe8 ; fld xword ptr [rsp - 0x18] ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x00000000001304e8 : push rsp ; and al, 8 ; mov rdx, qword ptr [rdx + 0x38] ; test rdx, rdx ; je 0x130508 ; mov rdi, rbp ; call rdx
0x00000000000391f2 : push rsp ; and al, 8 ; mov rsi, qword ptr [r15] ; mov rdi, qword ptr [r12] ; call r14
0x00000000000393f9 : push rsp ; and al, 8 ; mov rsi, r15 ; mov rdi, r12 ; call r14
0x0000000000195924 : push rsp ; fld dword ptr [rax] ; add byte ptr [rdi + rsi*2 - 0x12], ah ; inc dword ptr [rcx + rbx*8 + 0x7ed40000] ; out dx, al ; call rsp
0x0000000000195e34 : push rsp ; inc byte ptr [rax] ; add byte ptr [rsp + rdx*4 - 0x11], al ; dec dword ptr [rsi + rdi*8 - 0x6b2c0000] ; out dx, eax ; call rsp
0x000000000019710c : push rsp ; jnp 0x19711f ; add byte ptr [rax + rbp*2], ah ; idiv bh ; movsb byte ptr [rdi], byte ptr [rsi] ; jnp 0x197127 ; add byte ptr [rbp + rbp*2 - 0xa], dh ; call rsp
0x00000000001b7cac : push rsp ; jrcxz 0x1b7cb7 ; add byte ptr [rax], ah ; push rcx ; clc ; call rdi
0x00000000000a0c7b : push rsp ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000023a18 : push rsp ; mov r9, qword ptr [rsp + 0x30] ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, qword ptr [rsp + 0x20] ; call r14
0x00000000000243dc : push rsp ; mov r9, qword ptr [rsp + 0x40] ; mov rsi, qword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000001990d8 : push rsp ; movsd dword ptr [rdi], dword ptr [rsi] ; cli ; jmp rsp
0x00000000001a47ac : push rsp ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; nop ; shr dh, 1 ; call qword ptr [rax]
0x00000000000038f4 : pushfq ; adc edx, dword ptr [rbp - 0x5d] ; leave ; pop rdi ; ja 0x3962 ; clc ; salc ; jb 0x3988 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00000000000038f3 : pushfq ; adc edx, dword ptr [rbp - 0x5d] ; leave ; pop rdi ; ja 0x3963 ; clc ; salc ; jb 0x3989 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00000000000038f2 : pushfq ; adc edx, dword ptr [rbp - 0x5d] ; leave ; pop rdi ; ja 0x3964 ; clc ; salc ; jb 0x398a ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000019e3f4 : pushfq ; add byte ptr [rax], al ; je 0x19e3ed ; call rdi
0x00000000001b1af4 : pushfq ; add dword ptr [rcx], 0xf6940800 ; call qword ptr [rdi]
0x0000000000198f94 : pushfq ; cmp al, byte ptr [rdx] ; add byte ptr [rdi + rcx*4 - 6], dh ; call rsp
0x0000000000193c6c : pushfq ; insb byte ptr [rdi], dx ; cld ; ljmp ptr [rsp + rbp*2] ; cld ; call rdx
0x000000000019584c : pushfq ; rol dword ptr [rax], cl ; add ah, ah ; push rdi ; out dx, al ; call rsp
0x0000000000197e34 : pushfq ; rol dword ptr [rcx], 0 ; and bh, al ; dec esp ; rol dword ptr [rcx], 0 ; movsb byte ptr [rdi], byte ptr [rsi] ; and bh, al ; jmp rsp
0x00000000001a47f4 : pushfq ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; pop rax ; shr esi, 1 ; call rcx
0x0000000000198edc : pushfq ; xor al, 2 ; add byte ptr [rdi + rsi*2], ah ; cli ; call rsp
0x0000000000097e03 : rcl bl, 0xf8 ; test eax, eax ; je 0x97e30 ; bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x00000000000f6f80 : rcl dword ptr [rax - 0x3f], -0x17 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x00000000001076b3 : rcl dword ptr [rdi - 0x2708ffd5], 0x64 ; mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000013d45f : rcr byte ptr [rbx + 0x5d], 0xc3 ; nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x00000000000d80fe : rcr byte ptr [rbx + 0x5d], 0xeb ; xchg eax, edi ; nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x000000000018335d : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000193ed4 : rcr byte ptr [rdi - 0x60af0004], 0xfc ; jmp rax
0x00000000001861ec : rcr byte ptr [rdi], 0xf2 ; jmp rax
0x00000000001940ec : rcr byte ptr [rsp + rdi*8 - 0x36d9f01], 0xff ; and byte ptr [rdx - 0x665f0004], bl ; cld ; call qword ptr [rax]
0x000000000014e169 : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d989 : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ea99 : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001432b3 : rcr ebx, 0x27 ; add byte ptr [rdi + rax*8], ah ; add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000091414 : rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000091406 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000144b49 : rep movsq qword ptr [rdi], qword ptr [rsi] ; mov qword ptr [rbp], rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000145c24 : rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000009184a : rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000126737 : rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x00000000000362ea : rep stosq qword ptr [rdi], rax ; ret
0x00000000001a6455 : retf 0 ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001a6425 : retf 0 ; sub byte ptr [rdi - 0x10], dh ; jmp qword ptr [rax]
0x00000000001a643d : retf 0 ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x00000000001a6485 : retf ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001a646d : retf ; add byte ptr [rax], al ; xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x000000000008a441 : retf ; add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, r8 ; call rax
0x0000000000187de4 : retf ; sub eax, 0x2dadfff5 ; cmc ; lcall ptr [rdi] ; mov edx, 0xba1ffff5 ; cmc ; jmp rsi
0x00000000000a0dac : rol bl, 0x66 ; nop ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x00000000000a075c : rol bl, 0x66 ; nop ; mov rax, rdi ; ret
0x00000000000a07b5 : rol bl, 0x66 ; nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x0000000000090dcd : rol bl, 0x90 ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000000a0c1d : rol bl, 0x90 ; bsr eax, eax ; add rax, rdi ; ret
0x000000000003a90d : rol bl, 1 ; nop ; mov rax, rdi ; cqo ; idiv rsi ; ret
0x000000000007eeac : rol bl, 1 ; nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000170229 : rol bl, 1 ; nop dword ptr [rax + rax] ; movzx eax, byte ptr [rdi - 0xa] ; movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x0000000000170219 : rol bl, 1 ; nop dword ptr [rax + rax] ; movzx eax, byte ptr [rdi - 0xb] ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000170209 : rol bl, 1 ; nop dword ptr [rax + rax] ; movzx eax, byte ptr [rdi - 0xc] ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000001701f9 : rol bl, 1 ; nop dword ptr [rax + rax] ; movzx eax, byte ptr [rdi - 0xd] ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x00000000001701e9 : rol bl, 1 ; nop dword ptr [rax + rax] ; movzx eax, byte ptr [rdi - 0xe] ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x00000000001701d9 : rol bl, 1 ; nop dword ptr [rax + rax] ; movzx eax, byte ptr [rdi - 0xf] ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000016ba4d : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ba45 : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001a5975 : rol byte ptr [rax], 0 ; clc ; jp 0x1a597b ; jmp qword ptr [rdi]
0x000000000003e6f9 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x00000000001354df : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x135501 ; mov rdi, r12 ; call rax
0x00000000000b7507 : rol byte ptr [rbp - 0x3f6af037], 0x85 ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x000000000011835e : rol byte ptr [rbp - 0x78], 0x41 ; add esi, dword ptr [rbp - 0x6d] ; mov rax, rdi ; ret
0x00000000000aac31 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x00000000001199b4 : rol byte ptr [rcx + rcx*4 + 0x40], 0xc ; jne 0x11995e ; mov rax, rdi ; ret
0x0000000000126702 : rol byte ptr [rcx + rcx*4 - 0x40], cl ; mov byte ptr [rdi + rdx], 0 ; ret
0x000000000006dd72 : rol byte ptr [rcx + rdi - 0x30], 0x7f ; jo 0x6ddca ; add eax, ebx ; mov rdi, rdx ; jmp 0x6dd50
0x0000000000047192 : rol byte ptr [rcx - 0x7d], 0xfe ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x540a
0x00000000000c2aad : rol byte ptr [rcx - 0x7d], cl ; clc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x00000000000d6936 : rol byte ptr [rcx], 0x3b ; jl 0xd69c0 ; mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00000000000ac6da : rol byte ptr [rcx], 0x44 ; mov eax, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0xac6bc ; ret
0x00000000000a066a : rol byte ptr [rcx], 0x44 ; movsx eax, byte ptr [rdi + rax] ; test r8b, r8b ; jne 0xa065d ; ret
0x00000000000aaaa6 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xda89
0x00000000000f806c : rol byte ptr [rcx], cl ; ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x000000000010c42d : rol byte ptr [rdi + rcx], 0xb7 ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000013e6f8 : rol byte ptr [rdi + rcx], 0xca ; mov dword ptr [rax - 4], edx ; mov qword ptr [rdi + 0x18], rax ; mov eax, 1 ; ret
0x000000000013e728 : rol byte ptr [rdi + rcx], 0xca ; mov dword ptr [rsi], edx ; mov qword ptr [rdi + 0x18], rax ; mov eax, 1 ; ret
0x00000000000ac092 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000bdbc1 : rol byte ptr [rdi], 0x39 ; ret 0x77e
0x00000000000bd939 : rol byte ptr [rdi], 0x39 ; ret 0x87e
0x0000000000108d77 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00000000001b9940 : rol cl, 0xf8 ; call qword ptr [rdi]
0x0000000000145c19 : rol dword ptr [rax + 0x48000001], -0x77 ; mov cl, 0xe9 ; add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000091842 : rol dword ptr [rax + 0xf], 1 ; mov dh, 0xc6 ; mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000019584d : rol dword ptr [rax], cl ; add ah, ah ; push rdi ; out dx, al ; call rsp
0x0000000000195845 : rol dword ptr [rax], cl ; add byte ptr [rdi + rdx*2 - 0x2c630012], al ; add byte ptr [rax], al ; in al, 0x57 ; out dx, al ; call rsp
0x0000000000098d62 : rol dword ptr [rbp + 0xf], -0x4a ; add dword ptr [rdi + rcx - 0x4a], eax ; adc dword ptr [rbp + 0x38], eax ; ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x000000000011835b : rol dword ptr [rbp - 0x7c], 1 ; rol byte ptr [rbp - 0x78], 0x41 ; add esi, dword ptr [rbp - 0x6d] ; mov rax, rdi ; ret
0x00000000000f8032 : rol dword ptr [rcx], -0x36 ; test rdi, rdi ; cmovne eax, edx ; cmp rbp, rsi ; ja 0xf7fe0 ; pop rbx ; pop rbp ; ret
0x0000000000197e35 : rol dword ptr [rcx], 0 ; and bh, al ; dec esp ; rol dword ptr [rcx], 0 ; movsb byte ptr [rdi], byte ptr [rsi] ; and bh, al ; jmp rsp
0x0000000000197e3d : rol dword ptr [rcx], 0 ; movsb byte ptr [rdi], byte ptr [rsi] ; and bh, al ; jmp rsp
0x0000000000098c07 : rol dword ptr [rcx], 0x48 ; sub esi, 1 ; jne 0x98c0d ; xor edi, edi ; mov rax, rdi ; ret
0x00000000000a0504 : rol dword ptr [rcx], 0xf ; mov dh, 0x11 ; test dl, dl ; jne 0xa0507 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00000000000a0582 : rol dword ptr [rcx], 0xf ; mov dh, 0x11 ; test dl, dl ; jne 0xa0578 ; pop rbx ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x0000000000198185 : rol dword ptr [rcx], 1 ; add byte ptr [rdi + rdx*2], dl ; clc ; inc dword ptr [rcx + rdx*8 + 0x58040001] ; clc ; call rsp
0x00000000000cfb00 : rol dword ptr [rdi + rcx], -0x7b ; sahf ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000001006a3 : rol dword ptr [rdi], 1 ; sub al, 0 ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000a81a9 : rol dword ptr [rdi], cl ; add byte ptr [rax], al ; ret
0x0000000000195844 : rol dword ptr fs:[rax], cl ; add byte ptr [rdi + rdx*2 - 0x2c630012], al ; add byte ptr [rax], al ; in al, 0x57 ; out dx, al ; call rsp
0x0000000000198184 : rol dword ptr fs:[rcx], 1 ; add byte ptr [rdi + rdx*2], dl ; clc ; inc dword ptr [rcx + rdx*8 + 0x58040001] ; clc ; call rsp
0x00000000000363e5 : rol eax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000363e4 : rol rax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000034b92 : ror byte ptr [rax + 0x21], cl ; shl byte ptr [rsi + 0x48], 1 ; movd mm1, eax ; movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x0000000000090e12 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x90e59 ; add rax, rdi ; ret
0x0000000000090e22 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x90e5b ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000090e32 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x90e5b ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000090e42 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x90e5b ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000090b9c : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x90e60 ; add rax, rdi ; add rax, rcx ; ret
0x00000000000f806e : ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x00000000000b4c69 : ror byte ptr [rax + 0x39], cl ; fmul dword ptr [rdi] ; xchg eax, edx ; ret 0x2948
0x00000000000aaf79 : ror byte ptr [rax + 0x39], cl ; ror byte ptr [rdi], 1 ; xchg ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000126883 : ror byte ptr [rax + 1], 1 ; xlatb ; mov qword ptr [r9], rdi ; ret
0x0000000000162a83 : ror byte ptr [rax - 0x73], 0x76 ; adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000162abf : ror byte ptr [rax - 0x73], 0x76 ; adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000a1940 : ror byte ptr [rax - 0x73], 0x76 ; adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x13
0x00000000000769a7 : ror byte ptr [rax - 0x73], 0xb5 ; nop ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000012e716 : ror byte ptr [rax - 0x75], 0x74 ; and al, 0x10 ; mov rdi, rbp ; call r14
0x0000000000138469 : ror byte ptr [rax - 0x75], 0x74 ; and al, 0x30 ; mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000134df1 : ror byte ptr [rax - 0x75], 0x74 ; and al, 0x38 ; mov rdi, r12 ; mov rcx, qword ptr [rsp + 0x30] ; call rcx
0x000000000013500b : ror byte ptr [rax - 0x75], 0x74 ; and al, 0x50 ; mov rdi, r12 ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x000000000008a43a : ror byte ptr [rax - 0x77], 0x45 ; add byte ptr [rdi], cl ; test bl, cl ; add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, r8 ; call rax
0x00000000000e9654 : ror byte ptr [rax - 0x77], 0x45 ; and byte ptr [rdi], cl ; test byte ptr [rcx - 0xa000000], dh ; ret
0x0000000000135658 : ror byte ptr [rax - 0x77], 0xd6 ; add rdi, 0x10 ; jmp rcx
0x0000000000135678 : ror byte ptr [rax - 0x77], 0xd6 ; mov dword ptr [rdi + 0x10], 2 ; add rdi, 0x10 ; jmp rcx
0x0000000000138128 : ror byte ptr [rax - 0x77], 0xd6 ; mov dword ptr [rdi + 0x58], 2 ; add rdi, 0x58 ; jmp rcx
0x0000000000137848 : ror byte ptr [rax - 0x77], 0xd6 ; mov dword ptr [rdi + 0x68], 2 ; add rdi, 0x68 ; jmp rcx
0x00000000000acc54 : ror byte ptr [rax - 0x77], 0xee ; mov rdi, qword ptr [r12] ; lea r9, qword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000011cebd : ror byte ptr [rax - 0x77], 5 ; and ebx, dword ptr [rcx + 0x2a] ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rdi], -0x7b ; ret
0x00000000000ba83b : ror byte ptr [rax - 0x77], cl ; push rbx ; adc byte ptr [rdi + rdx*8 + 0x48], dh ; add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000d26ed : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x00000000001039fa : ror byte ptr [rax - 0x7d], 0x3e ; add byte ptr [rdi + rax - 0xd], dh ; ret
0x0000000000130d49 : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx - 0x3d], bl ; mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x00000000000799d4 : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; pop rbx ; ret
0x00000000001358f1 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; add eax, 1 ; ret
0x0000000000109054 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000131c65 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000000456c4 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000006c2b4 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000013d458 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000013ec5a : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000f6f77 : ror byte ptr [rax - 0x7d], 0xe7 ; clc ; sub rcx, rdi ; add ecx, 0x50 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000362dc : ror byte ptr [rax - 0x7d], 0xe7 ; clc ; sub rcx, rdi ; sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000a0c62 : ror byte ptr [rax - 0x7d], 0xea ; add rdx, rax ; jl 0xa0cdd ; add rax, rdi ; ret
0x000000000007782a : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x000000000013acd5 : ror byte ptr [rax], 0x83 ; js 0x13acdf ; dec dword ptr [rdi] ; test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x00000000000a5f96 : ror byte ptr [rbp + rcx*4 + 0x1d], cl ; stosb byte ptr [rdi], al ; dec dword ptr [rip + 0xc634900] ; xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000004874a : ror byte ptr [rbp - 0x77], 1 ; fldpi ; adc r10, r11 ; mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x000000000004a35a : ror byte ptr [rbp - 0x77], 1 ; fldpi ; sbb r10, r11 ; mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x000000000008f6a3 : ror byte ptr [rcx + 0x29], cl ; sal dword ptr [rsi + 0xb], cl ; movzx ecx, byte ptr [rsi + rdx] ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000010081d : ror byte ptr [rcx + 0x49e475c2], 0x89 ; leave ; mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x000000000004a00e : ror byte ptr [rcx + 3], cl ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8949
0x00000000000bb41a : ror byte ptr [rcx + rcx*4 - 0x17], 0x4c ; lea ecx, dword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x00000000000ad5e2 : ror byte ptr [rcx + rcx*4 - 0x17], 0x4c ; mov edx, esp ; lea r9, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rbx
0x00000000000ad8c2 : ror byte ptr [rcx + rcx*4 - 0x17], 0x4c ; mov edx, esp ; lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x000000000012cdd1 : ror byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; mov rcx, r13 ; call r15
0x00000000000768cb : ror byte ptr [rcx + rcx*4 - 0xf], 0x48 ; lea esi, dword ptr [rbp + 0x50] ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000012ccbf : ror byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, rbx ; mov qword ptr [rsp], rax ; mov rcx, rax ; call r12
0x00000000000ad319 : ror byte ptr [rcx + rcx*4 - 7], 0x4c ; mov edx, esp ; lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x0000000000035224 : ror byte ptr [rcx - 0x24efdbbc], 1 ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x0000000000089f1a : ror byte ptr [rcx - 0x77], 0x45 ; add byte ptr [rdi], cl ; test bl, ch ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x000000000008b035 : ror byte ptr [rcx - 0x77], 0x45 ; add byte ptr [rdi], cl ; test byte ptr [rax + 0x48000000], cl ; mov esi, ebp ; mov rdi, r12 ; call rax
0x000000000008aea9 : ror byte ptr [rcx - 0x77], 4 ; and al, 0xf ; test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000008a187 : ror byte ptr [rcx - 0x77], 4 ; and al, 0xf ; test dh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x0000000000022442 : ror byte ptr [rcx - 0x7d], cl ; cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9e9
0x000000000013ebf0 : ror byte ptr [rdi], 0x11 ; and al, 0x28 ; call rdx
0x00000000000eabe4 : ror byte ptr [rdi], 0x1f ; add byte ptr [rbx + rcx*4 + 0x14], cl ; ret 0x8b4d
0x00000000000eabbc : ror byte ptr [rdi], 0x1f ; add byte ptr [rbx + rcx*4 + 0x24], cl ; ret 0x8b4d
0x0000000000168c3f : ror byte ptr [rdi], 0x28 ; fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39c9b64
0x0000000000169cbf : ror byte ptr [rdi], 0x28 ; fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39cabe4
0x0000000000153cf5 : ror byte ptr [rdi], 0x29 ; pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154575 : ror byte ptr [rdi], 0x29 ; pop rdi ; sal byte ptr [rdx + 0x14], 1 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000153c47 : ror byte ptr [rdi], 0x29 ; pop rdi ; sal byte ptr [rdx + 0xd], 1 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001074b0 : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x00000000001031c5 : ror byte ptr [rdi], 0x45 ; ret 0xc084
0x00000000000ec260 : ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x0000000000055bf0 : ror byte ptr [rdi], 0x48 ; ret 0xc148
0x000000000003a965 : ror byte ptr [rdi], 0x48 ; ret 0xc35b
0x00000000000fe37c : ror byte ptr [rdi], 0x49 ; ret 0xfc3
0x00000000000f4bab : ror byte ptr [rdi], 0x84 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000caff8 : ror byte ptr [rdi], 0x84 ; imul edi, edi, 0x3c6ffff ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000d5e85 : ror byte ptr [rdi], 0x84 ; mov edx, 0x8b000001 ; mov ah, 0x24 ; add byte ptr [rax], 0 ; add byte ptr [rcx + 0x63], cl ; ret 0x8b48
0x00000000000f464a : ror byte ptr [rdi], 0x84 ; movabs dword ptr [0x8024948b48000007], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000076fdc : ror byte ptr [rdi], 0x84 ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001010a9 : ror byte ptr [rdi], 0x84 ; nop ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x800008], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001309f6 : ror byte ptr [rdi], 0x84 ; out dx, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x000000000004b386 : ror byte ptr [rdi], 0x84 ; ret
0x000000000005a778 : ror byte ptr [rdi], 0x84 ; ret 0x10
0x0000000000046bb7 : ror byte ptr [rdi], 0x84 ; ret 0xfff9
0x0000000000111521 : ror byte ptr [rdi], 0x84 ; ret 2
0x00000000000f0576 : ror byte ptr [rdi], 0x84 ; ret 3
0x0000000000077c2c : ror byte ptr [rdi], 0x84 ; xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000054581 : ror byte ptr [rdi], 0x85 ; add byte ptr [rcx], 0 ; add byte ptr [rbx + rcx*4 + 4], al ; and al, 0x83 ; ret
0x0000000000162a8a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x00000000000872f5 : ror byte ptr [rdi], 0x85 ; in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000a0bdc : ror byte ptr [rdi], 0x85 ; jge 0xa0bea ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000088971 : ror byte ptr [rdi], 0x85 ; lock add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000090d88 : ror byte ptr [rdi], 0x85 ; mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000000a0b6b : ror byte ptr [rdi], 0x85 ; mov esi, 0x66000000 ; pmovmskb eax, mm1 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000a5001 : ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000000a3616 : ror byte ptr [rdi], 0x85 ; ret
0x000000000002b3b7 : ror byte ptr [rdi], 0x85 ; ret 0
0x00000000000a1947 : ror byte ptr [rdi], 0x85 ; ret 0x13
0x000000000011b70e : ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x00000000000433a2 : ror byte ptr [rdi], 0x87 ; ret
0x00000000000b1f41 : ror byte ptr [rdi], 0x88 ; movabs eax, dword ptr [0x294cea8948000008] ; fimul dword ptr [rax + 0x39] ; ret 0xf48
0x0000000000145a10 : ror byte ptr [rdi], 0x88 ; popfq ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; sub byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x0000000000088297 : ror byte ptr [rdi], 0x88 ; ret 1
0x000000000004e7d7 : ror byte ptr [rdi], 0x88 ; ret 3
0x00000000000459a0 : ror byte ptr [rdi], 0x8e ; imul eax, dword ptr [rcx], 0 ; add byte ptr [rbx + 0x28ba28f8], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8539
0x00000000000ce807 : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x000000000008a83d : ror byte ptr [rdi], 0x94 ; ret
0x00000000000ec640 : ror byte ptr [rdi], 0x94 ; ret 0x1589
0x0000000000139b70 : ror byte ptr [rdi], 0x94 ; ret 0x3d83
0x00000000000bc1bd : ror byte ptr [rdi], 0x94 ; ret 0x9438
0x000000000007134b : ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x00000000000ed277 : ror byte ptr [rdi], 0x94 ; ret 0xf883
0x00000000000fa05d : ror byte ptr [rdi], 0x94 ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x000000000012d6e7 : ror byte ptr [rdi], 0x94 ; ror byte ptr [rax - 0x7d], 0xc4 ; or bl, al ; mov eax, 1 ; ret
0x00000000000456c1 : ror byte ptr [rdi], 0x94 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000006c2b1 : ror byte ptr [rdi], 0x94 ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x00000000000ace18 : ror byte ptr [rdi], 0x94 ; ror byte ptr [rdi], 0xb6 ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; movzx eax, al ; ret
0x0000000000111701 : ror byte ptr [rdi], 0x95 ; ret
0x00000000000ba9eb : ror byte ptr [rdi], 0x95 ; ret 0xd121
0x00000000000bab0e : ror byte ptr [rdi], 0x95 ; ret 0xdae9
0x0000000000045f0d : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x00000000000ad33f : ror byte ptr [rdi], 0x95 ; ret 0xe883
0x00000000000ad625 : ror byte ptr [rdi], 0x95 ; ret 0xf883
0x00000000000799d1 : ror byte ptr [rdi], 0x95 ; ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; pop rbx ; ret
0x00000000001358ee : ror byte ptr [rdi], 0x95 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; add eax, 1 ; ret
0x0000000000131c62 : ror byte ptr [rdi], 0x95 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000001329ca : ror byte ptr [rdi], 0x95 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000013d455 : ror byte ptr [rdi], 0x95 ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000013626c : ror byte ptr [rdi], 0x95 ; ror byte ptr [rax - 0x7d], 0xc4 ; xor byte ptr [rbx + 0xf], bl ; mov dh, 0xc0 ; pop rbp ; pop r12 ; ret
0x00000000001308c8 : ror byte ptr [rdi], 0x95 ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000006c2e8 : ror byte ptr [rdi], 0x95 ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00000000000ace1b : ror byte ptr [rdi], 0xb6 ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; movzx eax, al ; ret
0x0000000000130dac : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001308cb : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000013e12a : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000010a01c : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7f], 0xc4 ; nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000cea45 : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 9], 0xd8 ; or rax, 0x20 ; ret
0x00000000000ce915 : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 9], 0xd8 ; or rax, 0x7f ; ret
0x00000000000ceb25 : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 9], 0xd8 ; or rax, 1 ; ret
0x00000000000ec25d : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x00000000000ec240 : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; cmp dword ptr [rdi + 0x10], ecx ; cmovb eax, edx ; ret
0x000000000010b3a9 : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; cmp qword ptr [rcx + 0x10], rsi ; cmovb eax, edx ; ret
0x00000000000488cc : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; or eax, 1 ; ret
0x000000000011071f : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006c2eb : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x0000000000132cdf : ror byte ptr [rdi], 0xb6 ; shr bl, 0xab ; nop dword ptr [rax] ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000fa24a : ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x00000000001860fc : ror byte ptr [rdi], 0xf2 ; call rax
0x0000000000091535 : ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x0000000000186100 : ror byte ptr [rdi], 1 ; jmp rax
0x0000000000033ef6 : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x33ee0 ; ret
0x000000000008270d : ror byte ptr [rdi], 1 ; test byte ptr [rsi + rax], bh ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000098d6d : ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x00000000000aaf7c : ror byte ptr [rdi], 1 ; xchg ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000119339 : ror byte ptr [rdi], 5 ; cmp rax, -0x1000 ; ja 0x11935c ; ret
0x000000000007aff5 : ror byte ptr [rdi], 5 ; cmp rax, -0x1000 ; ja 0x7b00e ; ret
0x00000000000258b3 : ror byte ptr [rdi], cl ; mov byte ptr [rcx - 0x8fffffd], ch ; ret 0xf800
0x000000000008d71b : ror byte ptr [rdi], cl ; mov dh, 0x14 ; adc dword ptr [rax + 0x437402fa], eax ; cmp dl, 3 ; je 0x8d751 ; movsx eax, dl ; ret
0x0000000000025d9c : ror byte ptr [rdi], cl ; mov dl, al ; add al, byte ptr [rax] ; add bh, dh ; ret 0xf800
0x00000000000a0cfd : ror byte ptr [rdi], cl ; mov ebp, 0xf80148c0 ; ret
0x000000000008dc6b : ror byte ptr [rdi], cl ; test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x000000000008daab : ror byte ptr [rdi], cl ; test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000029555 : ror byte ptr [rdi], cl ; test byte ptr [rsi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret 0x860f
0x00000000000b750e : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x000000000004265c : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe683
0x000000000013962b : ror byte ptr [rdi], cl ; xchg eax, ebp ; sal bh, 0xd8 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000365ad : ror byte ptr [rdi], cl ; xchg eax, esp ; rol bl, 0x66 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000104aca : ror byte ptr [rdx], cl ; add byte ptr [rax], al ; mov rbp, rdi ; xor edx, edx ; xor esi, esi ; call rbx
0x00000000001a2980 : ror dl, 1 ; in eax, dx ; call rdi
0x00000000001106d9 : ror dword ptr [rax + rdi*8], cl ; dec dword ptr [rax + 1] ; imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003628a : ror dword ptr [rax - 0x2d], -0x1e ; shr rax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x00000000000362aa : ror dword ptr [rax - 0x2d], 1 ; loopne 0x36308 ; shr edx, 6 ; not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000a0516 : ror dword ptr [rax - 0x73], 0x51 ; add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x00000000000a0595 : ror dword ptr [rax - 0x73], 0x51 ; add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x000000000013acd2 : ror dword ptr [rax - 0x7d], -0x40 ; or byte ptr [rbx + 0xffff878], al ; test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x000000000012672d : ror dword ptr [rcx + 0x3e8c1c8], -0x77 ; sal dword ptr [rcx], -0x40 ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x00000000000494f8 : ror dword ptr [rcx + rdx - 0x3e], 0x4e ; mov dword ptr [rdi + rbx*8 + 8], ecx ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000114407 : ror dword ptr [rdi - 0x76b7fff9], 1 ; ret 0x894c
0x00000000000a0b75 : ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x00000000000aaab8 : ror dword ptr [rdi], -0x51 ; ret 0x78e9
0x00000000000bb601 : ror dword ptr [rdi], -0x63 ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; or eax, 1 ; ret
0x00000000000488c9 : ror dword ptr [rdi], -0x6a ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; or eax, 1 ; ret
0x00000000000fd672 : ror dword ptr [rdi], -0x6e ; ret 0xcc80
0x00000000000d94bf : ror dword ptr [rdi], -0x6e ; ret 0xd138
0x00000000000d453f : ror dword ptr [rdi], -0x79 ; ret 0xfff1
0x000000000016c2b8 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016c9c4 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016c796 : ror dword ptr [rdi], -0x7b ; add eax, 0xc0310000 ; ret
0x000000000016d8c0 : ror dword ptr [rdi], -0x7b ; cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016c716 : ror dword ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000016ca54 : ror dword ptr [rdi], -0x7b ; je 0x16ca64 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016c54b : ror dword ptr [rdi], -0x7b ; jno 0x16c560 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016c613 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000003fb4e : ror dword ptr [rdi], -0x7b ; ret
0x000000000016c290 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000064245 : ror dword ptr [rdi], -0x7d ; ret 0xfffe
0x00000000000f7843 : ror dword ptr [rdi], 0x1f ; add byte ptr [rcx + 0xf], al ; mov bh, 4 ; and al, 0x89 ; ret 0xe283
0x00000000000ac249 : ror dword ptr [rdi], 0x4f ; ret 0x66c3
0x00000000000fa22c : ror dword ptr [rdi], 1 ; xchg eax, edx ; ret 0x970f
0x00000000000a0547 : ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x000000000010bf3b : ror dword ptr [rsi + 0x2b], 1 ; add byte ptr [rcx - 0x74b79b01], cl ; add byte ptr [rdi], cl ; mov bh, 4 ; js 0x10bede ; loopne 0x10bf5e ; ret
0x000000000002f5f1 : ror eax, 0x11 ; xor rax, qword ptr fs:[0x30] ; mov rdi, r13 ; call rax
0x000000000012b797 : ror edi, 0x11 ; xor rdi, qword ptr fs:[0x30] ; call rax
0x000000000002f5f0 : ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; mov rdi, r13 ; call rax
0x000000000012b796 : ror rdi, 0x11 ; xor rdi, qword ptr fs:[0x30] ; call rax
0x00000000001950a5 : sahf ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0x1950b1
0x00000000000cfb04 : sahf ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x0000000000199709 : sahf ; cld ; dec esp ; adc eax, dword ptr [rcx] ; add byte ptr [rdi + rdi*4 - 4], dh ; jmp rsp
0x00000000000bb61e : sahf ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; or eax, 1 ; ret
0x00000000000ec243 : sal bh, 0xd8 ; cmp dword ptr [rdi + 0x10], ecx ; cmovb eax, edx ; ret
0x0000000000144b48 : sal bl, 0x48 ; movsd dword ptr [rdi], dword ptr [rsi] ; mov qword ptr [rbp], rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000126736 : sal bl, 0x48 ; stosd dword ptr [rdi], eax ; mov eax, r8d ; ret
0x0000000000034f04 : sal bl, 1 ; movups xmmword ptr [rdi], xmm0 ; and eax, 0x80000000 ; movd xmm0, eax ; ret
0x0000000000098bd2 : sal byte ptr [rbp + 0x3a], 0x41 ; movzx eax, byte ptr [rcx] ; test al, al ; jne 0x98c4e ; mov rax, rdi ; ret
0x0000000000097f52 : sal byte ptr [rbp + 0x4b], 0x66 ; pmovmskb eax, mm1 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000013eab7 : sal byte ptr [rbp + 0x4e], 0x39 ; ja 0x13eaec ; jbe 0x13eadf ; add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a0c19 : sal byte ptr [rbp + 0x74], 0x31 ; rol bl, 0x90 ; bsr eax, eax ; add rax, rdi ; ret
0x000000000014d4c0 : sal byte ptr [rbp + rbx*8 + 0x48], cl ; movsxd rax, ecx ; add rax, rdi ; ret
0x00000000000a050a : sal byte ptr [rbp - 0x15], cl ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000007fa1d : sal byte ptr [rbp - 0x20], 1 ; not r8d ; test rsi, rsi ; mov byte ptr [rdi], r8b ; je 0x7fa73 ; mov qword ptr [rsi], rdi ; ret
0x00000000000a0588 : sal byte ptr [rbp - 0x23], cl ; pop rbx ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000006eeef : sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x00000000001177cf : sal byte ptr [rbx + rsi + 0x48], 0x8d ; jne 0x1177c4 ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x000000000014d384 : sal byte ptr [rcx + rbx*8 + 0x48], cl ; movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x00000000000abd9e : sal byte ptr [rdi + 0x48], 0x89 ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000013ddaa : sal byte ptr [rdi + 0x4c], 0x89 ; out dx, al ; mov rdi, rbp ; mov edx, 0xffffffff ; xor eax, eax ; call r8
0x00000000000708fa : sal byte ptr [rdi + rcx + 0x48], 0x89 ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000006efa6 : sal byte ptr [rdi + rcx + 0x48], 0x8b ; mov edi, 0xe0 ; jmp rax
0x000000000012683e : sal byte ptr [rdi + rcx*2 + 0x41], 0x38 ; ret 0x5a74
0x00000000000fe424 : sal byte ptr [rdi + rcx*8 + 0x5b], cl ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x00000000001273f6 : sal byte ptr [rdi + rdx + 0x48], 0x8d ; fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000112916 : sal byte ptr [rdi + rsi + 0x44], 0x29 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001932d8 : sal byte ptr [rdi - 5], 1 ; push qword ptr [rax + 0x79] ; sti ; call qword ptr [rax]
0x00000000001b7320 : sal byte ptr [rdi], 0xf8 ; call qword ptr [rbx]
0x0000000000154579 : sal byte ptr [rdx + 0x14], 1 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000153c4b : sal byte ptr [rdx + 0xd], 1 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000000abcd3 : sal byte ptr [rdx + rbp - 0x80], cl ; loop 0xabcf8 ; je 0xabd00 ; mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0xabd30 ; ret
0x000000000002d9ce : sal byte ptr [rdx + rcx + 0x23], cl ; ja 0x2d9f2 ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x00000000000f8103 : sal byte ptr [rdx + rcx*2 + 0x31], 0xd2 ; xor esi, esi ; mov rdi, rbx ; call rax
0x00000000000a15d3 : sal byte ptr [rdx + rdi - 0xa], cl ; ret 0x7501
0x000000000016cb3f : sal byte ptr [rdx - 0x10f0992e], cl ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016cc60 : sal byte ptr [rdx - 0x10f09930], 1 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000070ba9 : sal byte ptr [rsi + 0x5c], 0x48 ; mov eax, dword ptr [rbp + 0x48] ; add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000016b637 : sal byte ptr [rsi + rdx - 0x58], 1 ; jne 0x16b680 ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000010076d : sal byte ptr [rsp + rax + 0x48], 0x89 ; js 0x10078a ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000000d8b73 : sal byte ptr [rsp + rdi + 0x40], 0xf6 ; mov dword ptr [rdi + rcx], 0xe084 ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x000000000019398c : sal byte ptr [rsp + rdi*8], 1 ; jmp qword ptr [rax]
0x000000000002da19 : sal byte ptr [rsp + rdx*8 + 0x23], cl ; ja 0x2da3c ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x00000000000488c4 : sal dword ptr [rcx + rbp*8 + 0x48], 0x39 ; ror dword ptr [rdi], -0x6a ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; or eax, 1 ; ret
0x0000000000126734 : sal dword ptr [rcx], -0x40 ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x0000000000104ff7 : sal dword ptr [rcx], cl ; sar byte ptr [rsi + 1], cl ; mov rdi, rbp ; call rbx
0x00000000001096b3 : sal dword ptr [rdi + 0x2b], 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000016ca9f : sal dword ptr [rdx - 0x10f0992d], cl ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016cbdf : sal dword ptr [rdx - 0x10f0992f], 1 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008f6a6 : sal dword ptr [rsi + 0xb], cl ; movzx ecx, byte ptr [rsi + rdx] ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000091493 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000016ca9e : sal qword ptr [rdx - 0x10f0992d], cl ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016cbde : sal qword ptr [rdx - 0x10f0992f], 1 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001b6fdd : salc ; add dword ptr [rax], eax ; mov al, 0x2c ; clc ; jmp rdi
0x000000000013565b : salc ; add rdi, 0x10 ; jmp rcx
0x00000000001536c6 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000000038fd : salc ; jb 0x397f ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000013567b : salc ; mov dword ptr [rdi + 0x10], 2 ; add rdi, 0x10 ; jmp rcx
0x000000000013812b : salc ; mov dword ptr [rdi + 0x58], 2 ; add rdi, 0x58 ; jmp rcx
0x000000000013784b : salc ; mov dword ptr [rdi + 0x68], 2 ; add rdi, 0x68 ; jmp rcx
0x0000000000076fd6 : salc ; mov edx, edi ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000c5a69 : salc ; movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x00000000000c8f7c : salc ; nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; ret
0x00000000000bbae0 : sar byte ptr [rax + 0x35], 0x83 ; clc ; sbb dword ptr [rdi + 0x18], edi ; mov rax, rbx ; pop rbx ; ret
0x000000000006dd75 : sar byte ptr [rdi + 0x70], 1 ; add eax, r11d ; mov rdi, rdx ; jmp 0x6dd4d
0x0000000000129eab : sar byte ptr [rdi - 0x52], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001877b4 : sar byte ptr [rdi - 0xc], 1 ; call rax
0x00000000000ce353 : sar byte ptr [rdi - 0xe], 0x48 ; lea esp, dword ptr [rbp - 0x18] ; xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000013d144 : sar byte ptr [rdx - 1], 0x48 ; mov esi, ebx ; mov rdi, r15 ; call r14
0x000000000013e867 : sar byte ptr [rdx - 1], 0x48 ; mov esi, ebx ; mov rdi, rbp ; call rcx
0x000000000013e991 : sar byte ptr [rdx - 1], 0x4c ; mov esi, esi ; mov rdi, rbp ; call r12
0x000000000008be05 : sar byte ptr [rdx], 0x48 ; lea eax, dword ptr [rdi + rax] ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x0000000000104ff9 : sar byte ptr [rsi + 1], cl ; mov rdi, rbp ; call rbx
0x0000000000193bb4 : sar byte ptr [rsp + rdi*8 - 1], 0x50 ; jl 0x193bbe ; jmp rax
0x00000000000353c6 : sar dword ptr [rdi - 0x3f260001], -0x25 ; jl 0x35403 ; call 0x244812f3
0x0000000000104d6a : sar dword ptr [rdx + 1], cl ; mov esi, 1 ; mov rdi, r12 ; call rbx
0x0000000000104fe8 : sar dword ptr [rdx + 1], cl ; mov esi, 2 ; mov rdi, r12 ; call rbx
0x0000000000104c36 : sar dword ptr [rdx + 2], cl ; mov esi, 1 ; mov rdi, r13 ; call rbx
0x0000000000104d5b : sar dword ptr [rdx + 2], cl ; mov esi, 2 ; mov rdi, r13 ; call rbx
0x0000000000104bae : sar dword ptr [rdx + 3], cl ; mov esi, 1 ; mov rdi, r14 ; call rbx
0x0000000000104c27 : sar dword ptr [rdx + 3], cl ; mov esi, 2 ; mov rdi, r14 ; call rbx
0x0000000000097e04 : sar eax, cl ; test eax, eax ; je 0x97e2f ; bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x0000000000037612 : sbb al, 0x15 ; add byte ptr [rax], al ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, qword ptr [rsp + 0x18] ; call r15
0x000000000003763c : sbb al, 0x30 ; nop ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x00000000000a6c59 : sbb al, 0x48 ; lea edi, dword ptr [rdi + 0x1c] ; jne 0xa717b ; ret
0x00000000000a83ad : sbb al, 0x48 ; lea edi, dword ptr [rdi + 0x1c] ; jne 0xa898b ; ret
0x000000000013792b : sbb al, 0x48 ; mov edi, dword ptr [rdi + 0x24] ; mov eax, 1 ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x00000000000a83d5 : sbb al, 0x49 ; sub eax, 0x1d ; lea rdi, qword ptr [rdi + 0x1d] ; jne 0xa898f ; ret
0x00000000000a83d4 : sbb al, 0x49 ; sub eax, 0x1d ; lea rdi, qword ptr [rdi + 0x1d] ; jne 0xa8990 ; ret
0x00000000001261a6 : sbb al, 0x74 ; sbb dword ptr [rbx + 0x7ba14fe], eax ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xfc3
0x0000000000122220 : sbb al, 0x9b ; add byte ptr [rax], al ; test rax, rax ; je 0x12223a ; mov rdi, rbx ; call rax
0x00000000001a5974 : sbb al, 0xc0 ; add byte ptr [rax], al ; clc ; jp 0x1a597c ; jmp qword ptr [rdi]
0x000000000009409e : sbb al, 0xf ; add byte ptr [rdi + 0x63], cl ; or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000019867c : sbb al, 0xf4 ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; xor al, 0xf9 ; push qword ptr [rsp + rsi*8 + 1] ; add byte ptr [rsi + rsi], ah ; stc ; call rsp
0x00000000000566d1 : sbb al, ch ; cdq ; scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add rsp, 0xd8 ; ret
0x00000000000a872a : sbb bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a6f1a : sbb bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000aa19a : sbb bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a793a : sbb bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a878a : sbb bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a62aa : sbb bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000aa1fa : sbb bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a78fb : sbb bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a874b : sbb bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a626b : sbb bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000a8729 : sbb bl, r14b ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a6f19 : sbb bl, r14b ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a7939 : sbb bl, r14b ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a8789 : sbb bl, r14b ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a62a9 : sbb bl, r14b ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a626a : sbb bl, r14b ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000034141 : sbb byte ptr [r15], r9b ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x000000000007d250 : sbb byte ptr [r8 - 0x77], r9b ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000aa1a4 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000aa1c6 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000aa204 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x0000000000073469 : sbb byte ptr [r9 + rcx*4 - 0x1a], r8b ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000033ef0 : sbb byte ptr [rax + 0x21], cl ; enter 0x3148, -0x30 ; movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x33ee6 ; ret
0x0000000000078d88 : sbb byte ptr [rax - 0x3f], cl ; clc ; add al, bl ; nop ; mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000872ef : sbb byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000131b8c : sbb byte ptr [rax - 0x75], cl ; and al, 8 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000007d219 : sbb byte ptr [rax - 0x75], cl ; mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000ad86f : sbb byte ptr [rax - 0x75], cl ; sub byte ptr [r8 - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000007d249 : sbb byte ptr [rax - 0x77], cl ; adc byte ptr [r8 - 0x77], r9b ; sbb byte ptr [r8 - 0x77], r9b ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000007d251 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a0667 : sbb byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x44 ; movsx eax, byte ptr [rdi + rax] ; test r8b, r8b ; jne 0xa0660 ; ret
0x00000000001b8448 : sbb byte ptr [rax - 8], ah ; jmp qword ptr [rdi]
0x00000000000aa1a5 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000aa1c7 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000aa205 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000bb417 : sbb byte ptr [rbp + 0x31], al ; ror byte ptr [rcx + rcx*4 - 0x17], 0x4c ; lea ecx, dword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x000000000013a4b4 : sbb byte ptr [rbp - 0x77], cl ; clc ; mov rcx, r14 ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000ad460 : sbb byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x000000000007346a : sbb byte ptr [rcx + rcx*4 - 0x1a], al ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000b597f : sbb byte ptr [rcx + rcx*4 - 0x6c], cl ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov gs, word ptr [rbx - 0x7cfffff8] ; ret
0x00000000000ad720 : sbb byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbp ; call rbx
0x0000000000196215 : sbb byte ptr [rcx], al ; add byte ptr [rdi - 0xf], al ; jmp rsp
0x000000000012ccbd : sbb byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, rbx ; mov qword ptr [rsp], rax ; mov rcx, rax ; call r12
0x0000000000079654 : sbb byte ptr [rdi + 0x11], dh ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000f8f5c : sbb byte ptr [rdi + 0x2c], bh ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000795a7 : sbb byte ptr [rdi + 0xe], dh ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013eaf1 : sbb byte ptr [rdi + rdx + 0x44], dh ; add dword ptr [rbx + 0x28], esp ; mov qword ptr [rbx + 0x20], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001a9168 : sbb byte ptr [rdi - 0xe], ah ; call qword ptr [rax]
0x00000000001a2b68 : sbb byte ptr [rdi], al ; std ; jmp rdi
0x000000000006c2b8 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000013d45c : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000013ec5e : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000011074e : sbb byte ptr [rdi], cl ; mov esi, 0xc48348c3 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000034142 : sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x0000000000104317 : sbb byte ptr [rdx], al ; add byte ptr [rax], al ; mov rsi, qword ptr [rbx] ; mov rdi, qword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000001a2208 : sbb byte ptr [rsi + 0x200e4103], al ; add dword ptr [rax + rdi*2], 0xa ; ret
0x0000000000145d14 : sbb byte ptr [rsi + 0x40], bh ; mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000000c3960 : sbb byte ptr [rsp + rcx], dh ; add byte ptr [rdi], cl ; mov dh, 0xfa ; movsxd rax, dword ptr [r8 + rdi*4] ; add rax, r8 ; jmp rax
0x000000000004a00a : sbb byte ptr [rsp + rdx + 0x31], dh ; ror byte ptr [rcx + 3], cl ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8949
0x0000000000196214 : sbb byte ptr fs:[rcx], al ; add byte ptr [rdi - 0xf], al ; jmp rsp
0x00000000000909ea : sbb ch, byte ptr [rdi] ; xor eax, dword ptr [rax] ; add rsp, 0x100 ; ret
0x0000000000106115 : sbb cl, byte ptr [rax - 0x73] ; push rax ; add dword ptr [rax - 0x77], ecx ; push rdi ; sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000235da : sbb cl, byte ptr [rdi] ; mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000000a6bff : sbb cl, byte ptr [rdi] ; test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x000000000014858d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014a6fd : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014817d : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000147c89 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148499 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014e6aa : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000014deca : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000014e2ba : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014dada : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b25d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014aa3d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x0000000000147f0d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014a21d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000014824d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000148569 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014dc79 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000148639 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ad7d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a55d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000149d3d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000014af1d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x00000000001483ed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000147bdd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x0000000000147fdd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000014e16a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d98a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ea9a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001484bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000147cad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000014a07d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000147d4f : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001480ad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x000000000014a1b3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014aeb3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a9d3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014e06b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014e99b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014831d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014b1f3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a4f3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000014a013 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ad13 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000014e1bb : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014d9db : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000147d73 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000182314 : sbb cl, byte ptr [rip + 0x381e4bdc] ; shl dword ptr [rdi - 0x3ad6d59f], cl ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000001261a8 : sbb dword ptr [rbx + 0x7ba14fe], eax ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xfc3
0x00000000000365a0 : sbb dword ptr [rbx - 0x367af7b1], ecx ; jne 0x365cb ; mov edx, dword ptr [rdi] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x00000000000ac553 : sbb dword ptr [rcx], eax ; add byte ptr [rax], al ; test al, 0xf0 ; jne 0xac670 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000019443d : sbb dword ptr [rcx], eax ; add byte ptr [rbp + rdi*4 - 0x18], dh ; call rsp
0x00000000000bbae5 : sbb dword ptr [rdi + 0x18], edi ; mov rax, rbx ; pop rbx ; ret
0x0000000000159c69 : sbb dword ptr [rdi + 0x63490003], 0x14 ; xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000130463 : sbb dword ptr [rdi], eax ; sub dword ptr [rax], eax ; jmp qword ptr [rdx + rax*8]
0x00000000000a831e : sbb dword ptr [rdi], ecx ; test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x00000000000a5a0d : sbb eax, -1 ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000a8405 : sbb eax, 0x1ee88349 ; lea rdi, qword ptr [rdi + 0x1e] ; jne 0xa898f ; ret
0x00000000000a8404 : sbb eax, 0x1ee88349 ; lea rdi, qword ptr [rdi + 0x1e] ; jne 0xa8990 ; ret
0x0000000000182f34 : sbb eax, 0x89fd49fc ; cmc ; sub dword ptr [rdi], ecx ; push rbx ; xchg eax, edx ; jae 0x182f23 ; push rsi ; pop rdx ; je 0x182f18 ; ret 0xacfc
0x00000000001560a2 : sbb eax, 0x930c634d ; add rsi, rdx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000126504 : sbb eax, dword ptr [rax - 0xa] ; mov byte ptr [rdi], 0x75 ; adc eax, 0x8303eec1 ; out dx, al ; add dword ptr [rax - 0x78], eax ; ja 0x126527 ; ret
0x000000000018257d : sbb eax, dword ptr [rdx + 0x2ff463c7] ; hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x000000000004a361 : sbb edx, ebx ; mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x000000000004bd9c : sbb esi, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000004a360 : sbb r10, r11 ; mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000182f33 : sbb rax, -0x7602b604 ; cmc ; sub dword ptr [rdi], ecx ; push rbx ; xchg eax, edx ; jae 0x182f24 ; push rsi ; pop rdx ; je 0x182f19 ; ret 0xacfc
0x00000000000a5a0c : sbb rax, -1 ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001a47dd : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; adc al, 0xee ; jmp rbx
0x00000000001a483d : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; adc dl, dl ; out dx, al ; call qword ptr [rcx]
0x00000000001496e2 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001a47ad : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; nop ; shr dh, 1 ; call qword ptr [rax]
0x00000000001a47f5 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; pop rax ; shr esi, 1 ; call rcx
0x00000000000566d4 : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add rsp, 0xd8 ; ret
0x000000000014e6fe : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x00000000000dd490 : scasb al, byte ptr [rdi] ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0x3945
0x0000000000158965 : scasb al, byte ptr [rdi] ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000da73c : scasb al, byte ptr [rdi] ; add rax, rsi ; jmp rax
0x0000000000158b15 : scasb al, byte ptr [rdi] ; clc ; lea r11, qword ptr [rip + 0x3acd2] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000015895f : scasb al, byte ptr [rdi] ; clc ; lea r11, qword ptr [rip + 0x3ae88] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000156051 : scasb al, byte ptr [rdi] ; clc ; lea r11, qword ptr [rip + 0x3d5d6] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000155f77 : scasb al, byte ptr [rdi] ; clc ; lea r11, qword ptr [rip + 0x3d6b0] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001ae841 : scasb al, byte ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x00000000001869c1 : scasb al, byte ptr [rdi] ; inc dword ptr [rdx] ; sahf ; jmp rdx
0x00000000001869b9 : scasb al, byte ptr [rdi] ; inc dword ptr [rdx] ; sahf ; lcall ptr [rsi + rbp*4 - 0xd] ; inc dword ptr [rdx] ; sahf ; jmp rdx
0x00000000001098c6 : scasb al, byte ptr [rdi] ; jne 0x109901 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001095c6 : scasb al, byte ptr [rdi] ; js 0x109601 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000109fc6 : scasb al, byte ptr [rdi] ; outsb dx, byte ptr [rsi] ; sub eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000002fa4 : scasb al, byte ptr [rdi] ; outsd dx, dword ptr [rsi] ; mov byte ptr [rbx], cl ; and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000129ead : scasb al, byte ptr [rdi] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cd01e : scasb al, byte ptr [rdi] ; popfq ; add al, 0 ; mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000004b35e : scasb al, byte ptr [rdi] ; sbb eax, 0x8b4d0002 ; jl 0x4b395 ; and byte ptr [rax + 1], cl ; ret
0x000000000019334d : scasb al, byte ptr [rdi] ; sti ; jmp qword ptr [rax]
0x0000000000002faa : scasb al, byte ptr [rdi] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000100b7e : scasb al, byte ptr [rdi] ; xor al, 0x2c ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x000000000009c566 : scasd eax, dword ptr [rdi] ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret 0x8d44
0x000000000014e7fd : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000081f0d : scasd eax, dword ptr [rdi] ; add al, byte ptr [rax] ; add dh, dh ; ret
0x0000000000149a27 : scasd eax, dword ptr [rdi] ; add al, byte ptr [rax] ; mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000019531d : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add al, 0xb5 ; in eax, dx ; jmp rsp
0x00000000001a48cd : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; loopne 0x1a4926 ; cli ; call qword ptr [rax]
0x00000000001a492d : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; push rax ; shr esi, cl ; call qword ptr [rax]
0x00000000001a4945 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; shr rsi, cl ; jmp qword ptr [rsi]
0x00000000001329c6 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; test eax, eax ; setne al ; add rsp, 8 ; movzx eax, al ; ret
0x0000000000158c3b : scasd eax, dword ptr [rdi] ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000079dac : scasd eax, dword ptr [rdi] ; add rsp, 8 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001983d9 : scasd eax, dword ptr [rdi] ; clc ; jmp rsp
0x0000000000185e85 : scasd eax, dword ptr [rdi] ; cld ; lcall ptr [rax] ; ret 0xfffc
0x00000000001ae8b9 : scasd eax, dword ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x000000000012fd8d : scasd eax, dword ptr [rdi] ; fild dword ptr [rax] ; add byte ptr [rbp + 0x310b75c0], al ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000128eae : scasd eax, dword ptr [rdi] ; mov rdx, rax ; mov byte ptr [rdx], 0 ; ret
0x000000000007b7d3 : scasd eax, dword ptr [rdi] ; nop ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000007af7a : scasd eax, dword ptr [rdi] ; nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x48], bl ; sub ebp, eax ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000000646b1 : scasd eax, dword ptr [rdi] ; or byte ptr [rdx], dl ; add byte ptr [rax + 0x63], cl ; add al, 0x91 ; add rax, rcx ; jmp rax
0x00000000000895cb : scasd eax, dword ptr [rdi] ; push rdx ; or byte ptr [rcx - 0x7d], cl ; ret 0x4820
0x00000000000375ff : scasd eax, dword ptr [rdi] ; ret
0x000000000007584b : scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000000aaaba : scasd eax, dword ptr [rdi] ; ret 0x78e9
0x000000000003759e : scasd eax, dword ptr [rdi] ; ret 0x8949
0x0000000000034144 : scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000aaaa9 : scasd eax, dword ptr [rdi] ; ret 0xda89
0x00000000000aaab7 : scasd eax, dword ptr [rdi] ; ror dword ptr [rdi], -0x51 ; ret 0x78e9
0x0000000000070935 : scasd eax, dword ptr [rdi] ; sbb eax, 0x89480035 ; ret
0x000000000009d8e1 : scasd eax, dword ptr [rdi] ; sub dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x4a], al ; pop rsi ; add eax, 0x43b60f44 ; add dword ptr [rbp + 0x38], eax ; ret
0x0000000000105e05 : scasd eax, dword ptr [rdi] ; wait ; int1 ; dec dword ptr [rax - 0x75] ; jge 0x105e15 ; call rbx
0x0000000000002bd7 : scasd eax, dword ptr [rdi] ; xbegin 0xfffffffff8c6efd9 ; ret
0x000000000015a63d : scasd eax, dword ptr [rdi] ; xchg eax, ebp ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000025b4 : scasd eax, dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x0000000000075ef9 : scasd eax, dword ptr [rdi] ; xor al, 0 ; mov dword ptr fs:[rax], 9 ; mov eax, 0xffffffff ; ret
0x000000000014d4b8 : setb dl ; sete sil ; test edx, edx ; je 0x14d4b1 ; movsxd rax, ecx ; add rax, rdi ; ret
0x000000000014d380 : sete dh ; test edx, edx ; je 0x14d370 ; movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x000000000014d4bc : sete dh ; test edx, edx ; je 0x14d4ad ; movsxd rax, ecx ; add rax, rdi ; ret
0x000000000014d37f : sete sil ; test edx, edx ; je 0x14d371 ; movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x000000000014d4bb : sete sil ; test edx, edx ; je 0x14d4ae ; movsxd rax, ecx ; add rax, rdi ; ret
0x00000000000ec23e : setne al ; movzx eax, al ; neg eax ; cmp dword ptr [rdi + 0x10], ecx ; cmovb eax, edx ; ret
0x00000000000ff0ba : setne dl ; neg edx ; mov rdi, r8 ; mov eax, 3 ; syscall ; mov eax, edx ; ret
0x000000000003c582 : shl byte ptr [rdi + rax*8], 0x22 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000c8708 : shl byte ptr [rdi + rax*8], cl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rdx ; ret
0x0000000000034f31 : shl byte ptr [rip - 0x80000000], 1 ; movd xmm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x0000000000034bcc : shl byte ptr [rsi + 0x48], 1 ; movd mm1, eax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000034b95 : shl byte ptr [rsi + 0x48], 1 ; movd mm1, eax ; movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x000000000016cc4b : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000016cc62 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000016cb41 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000193748 : shl byte ptr [rsp + rdi*8], 1 ; call rax
0x0000000000112a3e : shl dword ptr [rax + rcx*2 - 0x75], 1 ; xor byte ptr [rdi], cl ; mov esi, 0xbe0f48cb ; ret
0x00000000000a0cf7 : shl dword ptr [rcx], -0x30 ; test eax, eax ; je 0xa0cdd ; bsr eax, eax ; add rax, rdi ; ret
0x000000000018231a : shl dword ptr [rdi - 0x3ad6d59f], cl ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000001820a8 : shl dword ptr [rdi - 5], 1 ; ret
0x0000000000146bbb : shl dword ptr [rdi], cl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000016cbc6 : shl dword ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016cc7d : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000016cc66 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000016cc4f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000016b70b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016cbe1 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016caa1 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000363a3 : shl eax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000362ac : shl eax, cl ; shr rdx, 6 ; not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x0000000000036423 : shl eax, cl ; test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x000000000008dbbb : shl ecx, 0x20 ; or rdx, rcx ; bsf rdx, rdx ; add rax, rdx ; sub rax, rdi ; ret
0x0000000000048e8c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000048e17 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000048de6 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000009811a : shl edx, 0x30 ; or rax, rdx ; bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000003628c : shl edx, cl ; shr rax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x000000000004a533 : shl esi, cl ; mov qword ptr [rdi], rsi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000048e8b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000048e16 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000048de5 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000363a2 : shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000362ab : shl rax, cl ; shr rdx, 6 ; not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x0000000000036422 : shl rax, cl ; test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x000000000008dbba : shl rcx, 0x20 ; or rdx, rcx ; bsf rdx, rdx ; add rax, rdx ; sub rax, rdi ; ret
0x0000000000098119 : shl rdx, 0x30 ; or rax, rdx ; bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000003628b : shl rdx, cl ; shr rax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x000000000004a532 : shl rsi, cl ; mov qword ptr [rdi], rsi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000048e84 : shld eax, ecx, cl ; mov qword ptr [rdi - 8], r8 ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000048e10 : shld eax, ecx, cl ; mov qword ptr [rdi], r8 ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000048e83 : shld r8, r9, cl ; mov qword ptr [rdi - 8], r8 ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000048e0f : shld r8, r9, cl ; mov qword ptr [rdi], r8 ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000004aa77 : shr bl, cl ; in eax, dx ; cmp rdi, rsi ; mov rax, rsi ; cmovae rax, rdi ; ret
0x00000000000bd73f : shr byte ptr [rbp + 1], 0 ; add byte ptr [rcx + 0x76bc2], al ; add byte ptr [rdi], cl ; ret 0xf8c1
0x00000000000c517e : shr byte ptr [rsi], 0x4c ; mov edx, esi ; mov rsi, qword ptr [rdi + rax*8] ; mov rdi, rbp ; call 0x913be
0x0000000000103a9d : shr dword ptr [rbx], cl ; add byte ptr [rdi + rax*8], ah ; or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000003b5d5 : shr eax, 0x20 ; shr rdx, 0x10 ; mov word ptr [rdi + 4], ax ; xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x00000000000375fb : shr eax, 1 ; imul rax, rbx ; mov rbx, rax ; lea r12, qword ptr [rsi + rbx] ; mov rdi, r12 ; call r15
0x0000000000126730 : shr eax, 3 ; mov ecx, eax ; xor eax, eax ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x000000000003628f : shr eax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000128eac : shr ebx, 1 ; scasd eax, dword ptr [rdi] ; mov rdx, rax ; mov byte ptr [rdx], 0 ; ret
0x0000000000145c21 : shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000362e7 : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000003626f : shr ecx, 6 ; test qword ptr [rdi + rcx*8], rax ; setne al ; movzx eax, al ; ret
0x0000000000048f9c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000048f21 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000048ef0 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000003b5d9 : shr edx, 0x10 ; mov word ptr [rdi + 4], ax ; xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x0000000000033eee : shr edx, 0x18 ; and rax, rcx ; xor rax, rdx ; movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x33ee8 ; ret
0x000000000019e059 : shr edx, 1 ; jmp rdi
0x00000000000362af : shr edx, 6 ; not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x000000000002d9e9 : shr edx, cl ; cmp edx, dword ptr [rdi + 4] ; jb 0x2da00 ; ret
0x000000000012650b : shr esi, 3 ; sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x0000000000048f9b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000048f20 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000048eef : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000003628e : shr rax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x000000000003626e : shr rcx, 6 ; test qword ptr [rdi + rcx*8], rax ; setne al ; movzx eax, al ; ret
0x000000000003b5d8 : shr rdx, 0x10 ; mov word ptr [rdi + 4], ax ; xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x000000000019e058 : shr rdx, 1 ; jmp rdi
0x00000000000362ae : shr rdx, 6 ; not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x0000000000048f94 : shrd eax, ecx, cl ; mov qword ptr [rdi + 8], r8 ; shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000048f1a : shrd eax, ecx, cl ; mov qword ptr [rdi], r8 ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000048f93 : shrd r8, r9, cl ; mov qword ptr [rdi + 8], r8 ; shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000048f19 : shrd r8, r9, cl ; mov qword ptr [rdi], r8 ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00000000000a09a1 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a0911 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x000000000000367b : sqrtps xmm5, xmmword ptr [rsi - 0x56] ; stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x00000000000e8429 : stc ; adc byte ptr [rdi + 0xc], dh ; movzx edx, cl ; movsxd rdx, dword ptr [r15 + rdx*4] ; add rdx, r15 ; jmp rdx
0x00000000000e4de9 : stc ; adc cl, byte ptr [rax - 9] ; ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x000000000017032f : stc ; adc dword ptr [rdi], ecx ; test byte ptr [rbx], bl ; add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000001b92e5 : stc ; add dword ptr [rax], eax ; clc ; movsd dword ptr [rdi], dword ptr [rsi] ; clc ; call qword ptr [rbx]
0x00000000001b931d : stc ; add dword ptr [rax], eax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; clc ; jmp qword ptr [rcx]
0x0000000000198725 : stc ; add dword ptr [rax], eax ; push 0xf9 ; push qword ptr [rcx + rdi*8 + 0x6ac40001] ; stc ; jmp rsp
0x0000000000126534 : stc ; add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x8341
0x00000000000470a5 : stc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x98e9
0x00000000000f71f1 : stc ; add ecx, 0x150 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000f6f7e : stc ; add ecx, 0x50 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000019897a : stc ; call qword ptr [rdi + rcx - 0x3c9bfffe]
0x0000000000198722 : stc ; dec dword ptr [rcx + rdi*8 + 1] ; add byte ptr [rdx + rbp*2 - 7], ah ; push qword ptr [rcx + rdi*8 + 0x6ac40001] ; stc ; jmp rsp
0x000000000012570c : stc ; dec dword ptr [rdi] ; test byte ptr [rsi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x0000000000124e23 : stc ; dec dword ptr [rdi] ; test ch, ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x000000000019870a : stc ; inc dword ptr [rax + rdi*8 + 0x66240001] ; stc ; call rsp
0x0000000000198702 : stc ; inc dword ptr [rax + rdi*8 + 1] ; add byte ptr [rsi + rbx*2], al ; stc ; inc dword ptr [rax + rdi*8 + 0x66240001] ; stc ; call rsp
0x000000000000367f : stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x000000000016e37f : stc ; jle 0x16e350 ; cmp dl, 4 ; jb 0x16e39a ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x00000000001aa819 : stc ; jmp qword ptr [rdi]
0x000000000019867a : stc ; lcall ptr [rsp + rsi*8] ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; xor al, 0xf9 ; push qword ptr [rsp + rsi*8 + 1] ; add byte ptr [rsi + rsi], ah ; stc ; call rsp
0x00000000001986a2 : stc ; ljmp ptr [rbp + rsi*8 + 1] ; add byte ptr [rcx + rdi], al ; stc ; inc dword ptr [rbp + rsi*8 + 0x45740001] ; stc ; call rsp
0x0000000000155ea8 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155ea2 : stc ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000ad456 : stc ; mov r9, qword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 0x18] ; mov rdx, r13 ; mov rdi, rbp ; call rbx
0x00000000001226d2 : stc ; mov rdx, qword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x00000000000ad31c : stc ; mov rdx, r12 ; lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000ea1d6 : stc ; or eax, 2 ; mov byte ptr [rdi + 0x38], al ; mov dword ptr [rsi], edx ; mov qword ptr [rsi + 8], rcx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x000000000019872a : stc ; push qword ptr [rcx + rdi*8 + 0x6ac40001] ; stc ; jmp rsp
0x00000000000362e3 : stc ; sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000016e0f4 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000001874fc : stc ; xor ah, 0xff ; add eax, dword ptr [rcx - 0x7ef2000c] ; hlt ; call qword ptr [rdi]
0x0000000000102af7 : std ; add bh, byte ptr [rdi + 0x3d] ; add rsp, 0x90 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000170da9 : std ; dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x00000000000302de : std ; dec dword ptr [rdi] ; test bl, ah ; add al, byte ptr [rax] ; add byte ptr [rcx], dh ; imul al ; ret
0x000000000019350e : std ; inc esi ; movabs dword ptr [0xa631fffda631fffd], eax ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x000000000019a99a : std ; jmp qword ptr [rdi]
0x00000000001a2b6a : std ; jmp rdi
0x00000000001556c3 : std ; mov cx, word ptr [rsi - 2] ; mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000182f37 : std ; mov ebp, esi ; sub dword ptr [rdi], ecx ; push rbx ; xchg eax, edx ; jae 0x182f20 ; push rsi ; pop rdx ; je 0x182f15 ; ret 0xacfc
0x0000000000182f36 : std ; mov ebp, esi ; sub dword ptr [rdi], ecx ; push rbx ; xchg eax, edx ; jae 0x182f21 ; push rsi ; pop rdx ; je 0x182f16 ; ret 0xacfc
0x00000000001556cb : std ; mov word ptr [rdi - 2], cx ; ret
0x000000000007625e : std ; or dh, byte ptr [rax + rdi*4 + 0x48] ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000007c878 : std ; or dh, byte ptr [rsp + rdi*2 + 0x40] ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019354a : std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call rcx
0x000000000019362a : std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; dec dword ptr [rax] ; sbb edi, esp ; call rax
0x000000000019351a : std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x0000000000193546 : std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call rcx
0x0000000000193626 : std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; dec dword ptr [rax] ; sbb edi, esp ; call rax
0x0000000000193516 : std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x0000000000193542 : std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call rcx
0x0000000000193622 : std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; dec dword ptr [rax] ; sbb edi, esp ; call rax
0x0000000000193512 : std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x0000000000091413 : std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000016e72a : std ; vmovdqu64 zmmword ptr [rdi + rdx - 0x100], zmm7 ; vzeroupper ; ret
0x0000000000075951 : sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000006eeeb : sti ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x0000000000193346 : sti ; inc dword ptr [rax - 0x2f000453] ; scasb al, byte ptr [rdi] ; sti ; jmp qword ptr [rax]
0x00000000001932a2 : sti ; inc dword ptr [rax] ; movsxd rdi, ebx ; push rax ; movsxd rdi, ebx ; jmp qword ptr [rax]
0x00000000001883f8 : sti ; inc ebx ; add dh, bh ; jmp rdi
0x0000000000155aa8 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000155aa2 : sti ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000c8009 : sti ; mov rax, qword ptr [rax] ; lea rdx, qword ptr [rdi + rdi*8] ; lea rax, qword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000193342 : sti ; push qword ptr [rax] ; lodsb al, byte ptr [rsi] ; sti ; inc dword ptr [rax - 0x2f000453] ; scasb al, byte ptr [rdi] ; sti ; jmp qword ptr [rax]
0x0000000000193332 : sti ; push rax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sti ; inc dword ptr [rax - 0x58] ; sti ; call qword ptr [rax - 0x1f000457]
0x00000000001932a6 : sti ; push rax ; movsxd rdi, ebx ; jmp qword ptr [rax]
0x00000000000b597e : sti ; sbb byte ptr [rcx + rcx*4 - 0x6c], cl ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov gs, word ptr [rbx - 0x7cfffff8] ; ret
0x000000000006efe0 : sti ; sub rsp, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x0000000000002318 : stosb byte ptr [rdi], al ; add al, 0xaa ; ret
0x0000000000090ba2 : stosb byte ptr [rdi], al ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000000f13cc : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000125f22 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001a43c5 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; mov bl, 0xee ; jmp rdx
0x0000000000158fa7 : stosb byte ptr [rdi], al ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001870cc : stosb byte ptr [rdi], al ; clc ; call qword ptr [rbx]
0x0000000000116a82 : stosb byte ptr [rdi], al ; cld ; sub al, byte ptr [rax] ; test eax, eax ; jne 0x116a9a ; xor eax, eax ; ret
0x0000000000182584 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00000000001ae471 : stosb byte ptr [rdi], al ; cmc ; call qword ptr [rax]
0x00000000001ae411 : stosb byte ptr [rdi], al ; cmc ; jmp qword ptr [rcx]
0x00000000000363b4 : stosb byte ptr [rdi], al ; cmp byte ptr [rax], al ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x0000000000036454 : stosb byte ptr [rdi], al ; cmp byte ptr [rax], al ; mov dword ptr fs:[rax], 0x26 ; mov eax, 0xffffffff ; ret
0x00000000000a5f9a : stosb byte ptr [rdi], al ; dec dword ptr [rip + 0xc634900] ; xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000001268dc : stosb byte ptr [rdi], al ; idiv bh ; add rsp, 8 ; lea eax, dword ptr [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x000000000018733c : stosb byte ptr [rdi], al ; in eax, dx ; jmp rax
0x0000000000185dfd : stosb byte ptr [rdi], al ; int1 ; call rsp
0x0000000000185ded : stosb byte ptr [rdi], al ; int1 ; dec dword ptr [rax - 0x67000e56] ; stosb byte ptr [rdi], al ; int1 ; jmp qword ptr [rax]
0x0000000000185df5 : stosb byte ptr [rdi], al ; int1 ; jmp qword ptr [rax]
0x0000000000185e01 : stosb byte ptr [rdi], al ; int1 ; jmp rsp
0x000000000002b052 : stosb byte ptr [rdi], al ; js 0x2b09f ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x0000000000050bb2 : stosb byte ptr [rdi], al ; mov edx, 0x2ebf000b ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000009184b : stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000004ea12 : stosb byte ptr [rdi], al ; out dx, al ; add byte ptr ss:[rax - 0x77], cl ; ret 0x2948
0x0000000000196a01 : stosb byte ptr [rdi], al ; push qword ptr [rsp + rcx*2 - 0x54fbffff] ; jmp rsp
0x000000000000231b : stosb byte ptr [rdi], al ; ret
0x000000000000367e : stosb byte ptr [rdi], al ; stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x00000000000bf0c7 : stosb byte ptr [rdi], al ; sti ; dec dword ptr [rax + 0x39] ; ret
0x0000000000193341 : stosb byte ptr [rdi], al ; sti ; push qword ptr [rax] ; lodsb al, byte ptr [rsi] ; sti ; inc dword ptr [rax - 0x2f000453] ; scasb al, byte ptr [rdi] ; sti ; jmp qword ptr [rax]
0x000000000012c932 : stosb byte ptr [rdi], al ; xchg eax, ebx ; sub dword ptr [rax], eax ; ror rdi, 0x11 ; xor rdi, qword ptr fs:[0x30] ; call rax
0x000000000018257b : stosb byte ptr [rdi], al ; xchg eax, esi ; sbb eax, dword ptr [rdx + 0x2ff463c7] ; hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000183cf6 : stosb byte ptr [rdi], al ; xchg esp, edi ; adc ch, byte ptr [rip + 0x8acc8c6] ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000172571 : stosd dword ptr [rdi], eax ; adc dword ptr [rip + 0x5be17500], esp ; ret
0x00000000000ae1fb : stosd dword ptr [rdi], eax ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x63] ; ret
0x00000000000727dd : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x72785
0x00000000001ba09d : stosd dword ptr [rdi], eax ; add cl, al ; add dword ptr [rax], eax ; add al, bl ; add al, 5 ; ret 0xb
0x0000000000158e2e : stosd dword ptr [rdi], eax ; add eax, dword ptr [rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000018a04d : stosd dword ptr [rdi], eax ; cli ; dec dword ptr [rax - 0x77000554] ; lodsb al, byte ptr [rsi] ; cli ; jmp rax
0x000000000018a059 : stosd dword ptr [rdi], eax ; cli ; dec dword ptr [rax - 0xf000554] ; stosd dword ptr [rdi], eax ; cli ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; cli ; call qword ptr [rax]
0x000000000018a061 : stosd dword ptr [rdi], eax ; cli ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; cli ; call qword ptr [rax]
0x000000000018a07d : stosd dword ptr [rdi], eax ; cli ; jmp rax
0x000000000018a049 : stosd dword ptr [rdi], eax ; cli ; lcall ptr [rax - 0x55] ; cli ; dec dword ptr [rax - 0x77000554] ; lodsb al, byte ptr [rsi] ; cli ; jmp rax
0x00000000001ae511 : stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rcx]
0x00000000000362f4 : stosd dword ptr [rdi], eax ; cmp byte ptr [rax], al ; mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x000000000008dd84 : stosd dword ptr [rdi], eax ; fimul dword ptr [rax + 0xf] ; mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x00000000000d9b3d : stosd dword ptr [rdi], eax ; je 0xd9bbf ; lea rsp, qword ptr [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000186989 : stosd dword ptr [rdi], eax ; jmp rsi
0x0000000000196a09 : stosd dword ptr [rdi], eax ; jmp rsp
0x0000000000126739 : stosd dword ptr [rdi], eax ; mov eax, r8d ; ret
0x0000000000132ce4 : stosd dword ptr [rdi], eax ; nop dword ptr [rax] ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000362ec : stosd dword ptr [rdi], eax ; ret
0x00000000000261b1 : stosd dword ptr [rdi], eax ; ret 0x16
0x000000000008dce5 : stosd dword ptr [rdi], eax ; sar rdx, cl ; test rdx, rdx ; je 0x8dd0d ; bsf rax, rdx ; ret
0x000000000008dce5 : stosd dword ptr [rdi], eax ; sar rdx, cl ; test rdx, rdx ; je 0x8dd0e ; bsf rax, rdx ; ret
0x00000000001a57c9 : stosd dword ptr [rdi], eax ; sti ; call qword ptr [rax]
0x00000000000fc509 : stosd dword ptr [rdi], eax ; xor al, 0xf2 ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000126738 : stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x00000000000362eb : stosq qword ptr [rdi], rax ; ret
0x000000000008c09f : str word ptr [rdi + 0x63] ; or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000183a71 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000001a7dc8 : sub al, 0 ; add byte ptr [rax], al ; je 0x1a7dbd ; add byte ptr [rax], al ; mov al, 0x10 ; jmp qword ptr [rdi]
0x000000000007bd43 : sub al, 0 ; add byte ptr [rax], al ; mov rdi, r15 ; call 0x97fc9
0x000000000019f8f8 : sub al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rdi ; add byte ptr [rax], al ; nop ; sbb ebp, ebp ; call rbx
0x00000000000fe469 : sub al, 0 ; mov qword ptr [rax], rdx ; xor eax, eax ; cmp rdi, rdx ; ja 0xfe4ad ; ret
0x0000000000100898 : sub al, 0 ; mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x00000000001a6484 : sub al, 0xcb ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001b6fe1 : sub al, 0xf8 ; jmp rdi
0x0000000000103097 : sub al, 0xff ; xor byte ptr [rdi], cl ; lahf ; ret 0xe883
0x000000000008f7f0 : sub al, 1 ; add byte ptr [rax], al ; bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x00000000001b6e49 : sub al, bh ; jmp rdi
0x00000000000abcd5 : sub al, byte ptr [rax + 0x15740fe2] ; mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0xabd2e ; ret
0x00000000000abbc5 : sub al, byte ptr [rax + 0x15740fe2] ; mov eax, dword ptr [rdi] ; cmp eax, dword ptr [rsi] ; jne 0xabd30 ; ret
0x000000000013f143 : sub al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmp al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007a042 : sub byte ptr [r8 - 0x75], r9b ; push rdi ; and byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x00000000000ad872 : sub byte ptr [r8 - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000000001381ef : sub byte ptr [rax + 1], bh ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x000000000013ea72 : sub byte ptr [rax + rdi*4], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000024d66 : sub byte ptr [rax - 0x75], cl ; je 0x24d9b ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000002818d : sub byte ptr [rax - 0x75], cl ; je 0x281c1 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000002912d : sub byte ptr [rax - 0x75], cl ; je 0x29161 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000007a043 : sub byte ptr [rax - 0x75], cl ; push rdi ; and byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x0000000000027daf : sub byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x38 ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000024bce : sub byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x48 ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000000ad873 : sub byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000013d1e0 : sub byte ptr [rax], al ; mov edx, ebx ; mov rax, qword ptr [rax + 0x10] ; add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000104d94 : sub byte ptr [rax], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000185e78 : sub byte ptr [rbp - 0x41b70004], bh ; cld ; ljmp ptr [rax - 0x41] ; cld ; dec dword ptr [rax] ; scasd eax, dword ptr [rdi] ; cld ; lcall ptr [rax] ; ret 0xfffc
0x0000000000121263 : sub byte ptr [rcx - 0x77], cl ; enter -0x72b4, 0xd ; insb byte ptr [rdi], dx ; ret
0x00000000001108f5 : sub byte ptr [rdi + 0x2000001], bh ; mov rdx, qword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000001a6458 : sub byte ptr [rdi - 0x10], dh ; call qword ptr [rdx]
0x00000000001a6428 : sub byte ptr [rdi - 0x10], dh ; jmp qword ptr [rax]
0x0000000000130e9c : sub byte ptr [rdi - 0x17], dh ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00000000000b187b : sub byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf883
0x000000000018a06c : sub byte ptr [rdx + rdi*8 - 0x553bf01], ch ; lcall ptr [rax - 0x54] ; cli ; push qword ptr [rax - 0x54] ; cli ; call qword ptr [rax]
0x00000000000fe468 : sub ch, byte ptr [rax + rax] ; mov qword ptr [rax], rdx ; xor eax, eax ; cmp rdi, rdx ; ja 0xfe4ae ; ret
0x00000000000ce394 : sub ch, byte ptr [rdi] ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000002b1d2 : sub dh, byte ptr [rdi + 0x39] ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x0000000000073466 : sub dword ptr [rax - 0x75], ecx ; sbb byte ptr [r9 + rcx*4 - 0x1a], r8b ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000125929 : sub dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x000000000009d8e2 : sub dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x4a], al ; pop rsi ; add eax, 0x43b60f44 ; add dword ptr [rbp + 0x38], eax ; ret
0x000000000012b794 : sub dword ptr [rax], eax ; ror rdi, 0x11 ; xor rdi, qword ptr fs:[0x30] ; call rax
0x000000000012aa65 : sub dword ptr [rax], eax ; test byte ptr [rax + 0x40], 8 ; je 0x12aa81 ; cmp dword ptr [rdi + 0x10], 2 ; je 0x12aa86 ; ret
0x00000000000d501e : sub dword ptr [rbx], ecx ; add byte ptr [rdi], cl ; mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000153cf7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x153d0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153e47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x153e5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153f97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x153fad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001540e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1540fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154237 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15424d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154387 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15439d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001544d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1544ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154627 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15463d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154777 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15478d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001548c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1548dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154a17 : sub dword ptr [rdi + 0x10], ebx ; jb 0x154a2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154b67 : sub dword ptr [rdi + 0x10], ebx ; jb 0x154b7d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154cb7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x154ccd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154e07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x154e1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154f57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x154f6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001566c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1566dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156817 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15682d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156967 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15697d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ab7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156acd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156c07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156c1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156d57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156d6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ea7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156ebd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ff7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15700d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157147 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15715d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157297 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1572ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001573e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1573fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157537 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15754d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157687 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15769d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001577d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1577ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157927 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15793d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000006d174 : sub dword ptr [rdi + 0x71], esi ; movzx eax, al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000ce1f3 : sub dword ptr [rdi + rbp], 0x64d8f700 ; mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000062ddb : sub dword ptr [rdi + rdi*8 - 0x1076b301], -0x18 ; test eax, 0x830001a7 ; clc ; inc dword ptr [rcx - 0x77] ; ret 0x850f
0x0000000000153c53 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153cef : sub dword ptr [rdi - 0x20], edx ; lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x153d15 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153e3f : sub dword ptr [rdi - 0x20], edx ; lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x153e65 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153f8f : sub dword ptr [rdi - 0x20], edx ; lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x153fb5 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001540df : sub dword ptr [rdi - 0x20], edx ; lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154105 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015422f : sub dword ptr [rdi - 0x20], edx ; lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154255 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015437f : sub dword ptr [rdi - 0x20], edx ; lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1543a5 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001544cf : sub dword ptr [rdi - 0x20], edx ; lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1544f5 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015461f : sub dword ptr [rdi - 0x20], edx ; lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154645 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015476f : sub dword ptr [rdi - 0x20], edx ; lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154795 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001548bf : sub dword ptr [rdi - 0x20], edx ; lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1548e5 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154a0f : sub dword ptr [rdi - 0x20], edx ; lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154a35 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154b5f : sub dword ptr [rdi - 0x20], edx ; lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154b85 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154caf : sub dword ptr [rdi - 0x20], edx ; lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154cd5 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154dff : sub dword ptr [rdi - 0x20], edx ; lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154e25 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154f4f : sub dword ptr [rdi - 0x20], edx ; lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x154f75 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001566bf : sub dword ptr [rdi - 0x20], edx ; lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1566e5 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015680f : sub dword ptr [rdi - 0x20], edx ; lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156835 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015695f : sub dword ptr [rdi - 0x20], edx ; lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156985 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156aaf : sub dword ptr [rdi - 0x20], edx ; lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156ad5 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156bff : sub dword ptr [rdi - 0x20], edx ; lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156c25 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156d4f : sub dword ptr [rdi - 0x20], edx ; lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156d75 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156e9f : sub dword ptr [rdi - 0x20], edx ; lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x156ec5 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156fef : sub dword ptr [rdi - 0x20], edx ; lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x157015 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015713f : sub dword ptr [rdi - 0x20], edx ; lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x157165 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015728f : sub dword ptr [rdi - 0x20], edx ; lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1572b5 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001573df : sub dword ptr [rdi - 0x20], edx ; lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x157405 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015752f : sub dword ptr [rdi - 0x20], edx ; lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x157555 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015767f : sub dword ptr [rdi - 0x20], edx ; lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1576a5 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001577cf : sub dword ptr [rdi - 0x20], edx ; lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1577f5 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015791f : sub dword ptr [rdi - 0x20], edx ; lea rdi, qword ptr [rdi - 0x40] ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x157945 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153c4f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000153c49 : sub dword ptr [rdi - 0x30], ebx ; jb 0x153c69 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000153d99 : sub dword ptr [rdi - 0x30], ebx ; jb 0x153db9 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000153ee9 : sub dword ptr [rdi - 0x30], ebx ; jb 0x153f09 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154039 : sub dword ptr [rdi - 0x30], ebx ; jb 0x154059 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154189 : sub dword ptr [rdi - 0x30], ebx ; jb 0x1541a9 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001542d9 : sub dword ptr [rdi - 0x30], ebx ; jb 0x1542f9 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154429 : sub dword ptr [rdi - 0x30], ebx ; jb 0x154449 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154577 : sub dword ptr [rdi - 0x30], ebx ; jb 0x15459e ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001546c9 : sub dword ptr [rdi - 0x30], ebx ; jb 0x1546e9 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154819 : sub dword ptr [rdi - 0x30], ebx ; jb 0x154839 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154969 : sub dword ptr [rdi - 0x30], ebx ; jb 0x154989 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154ab9 : sub dword ptr [rdi - 0x30], ebx ; jb 0x154ad9 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154c09 : sub dword ptr [rdi - 0x30], ebx ; jb 0x154c29 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154d59 : sub dword ptr [rdi - 0x30], ebx ; jb 0x154d79 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000154ea9 : sub dword ptr [rdi - 0x30], ebx ; jb 0x154ec9 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000156619 : sub dword ptr [rdi - 0x30], ebx ; jb 0x156639 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000156769 : sub dword ptr [rdi - 0x30], ebx ; jb 0x156789 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001568b9 : sub dword ptr [rdi - 0x30], ebx ; jb 0x1568d9 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000156a09 : sub dword ptr [rdi - 0x30], ebx ; jb 0x156a29 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000156b59 : sub dword ptr [rdi - 0x30], ebx ; jb 0x156b79 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000156ca9 : sub dword ptr [rdi - 0x30], ebx ; jb 0x156cc9 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000156df9 : sub dword ptr [rdi - 0x30], ebx ; jb 0x156e19 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000156f47 : sub dword ptr [rdi - 0x30], ebx ; jb 0x156f6e ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000157099 : sub dword ptr [rdi - 0x30], ebx ; jb 0x1570b9 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001571e9 : sub dword ptr [rdi - 0x30], ebx ; jb 0x157209 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000157339 : sub dword ptr [rdi - 0x30], ebx ; jb 0x157359 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000157489 : sub dword ptr [rdi - 0x30], ebx ; jb 0x1574a9 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001575d9 : sub dword ptr [rdi - 0x30], ebx ; jb 0x1575f9 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000157729 : sub dword ptr [rdi - 0x30], ebx ; jb 0x157749 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000157879 : sub dword ptr [rdi - 0x30], ebx ; jb 0x157899 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000000ce52f : sub dword ptr [rdi], 0xc8c14800 ; adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000ce484 : sub dword ptr [rdi], ebp ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000ce4f4 : sub dword ptr [rdi], ebp ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x0000000000182f3a : sub dword ptr [rdi], ecx ; push rbx ; xchg eax, edx ; jae 0x182f1d ; push rsi ; pop rdx ; je 0x182f12 ; ret 0xacfc
0x000000000006d8dd : sub dword ptr [rdi], ecx ; xchg dword ptr [rax + rax + 0x63480000], ecx ; add al, 0x86 ; add rax, rsi ; jmp rax
0x0000000000153cfd : sub dword ptr [rdi], esp ; jmp r9
0x0000000000198d3d : sub dword ptr [rdx], eax ; add byte ptr [rdi + rcx*2 - 6], dl ; jmp rsp
0x0000000000172804 : sub dword ptr [rip - 0x7cb800], esp ; add dword ptr [rdi + 3], esi ; ret
0x000000000016ca76 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x00000000000644dd : sub dword ptr [rsp + rdi*8], -1 ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000a725a : sub eax, 0x10 ; jb 0xa6827 ; movdqu xmmword ptr [rdi + 0x30], xmm7 ; ret
0x00000000000a6a99 : sub eax, 0x10 ; lea rdi, qword ptr [rdi + 0x10] ; jne 0xa717d ; ret
0x00000000000a817d : sub eax, 0x10 ; lea rdi, qword ptr [rdi + 0x10] ; jne 0xa898d ; ret
0x00000000000a6abc : sub eax, 0x11 ; lea rdi, qword ptr [rdi + 0x11] ; jne 0xa717d ; ret
0x00000000000a81a0 : sub eax, 0x11 ; lea rdi, qword ptr [rdi + 0x11] ; jne 0xa898d ; ret
0x00000000000a6ae1 : sub eax, 0x12 ; lea rdi, qword ptr [rdi + 0x12] ; jne 0xa717d ; ret
0x00000000000a81c5 : sub eax, 0x12 ; lea rdi, qword ptr [rdi + 0x12] ; jne 0xa898d ; ret
0x00000000000a6aff : sub eax, 0x13 ; lea rdi, qword ptr [rdi + 0x13] ; jne 0xa717d ; ret
0x00000000000a81f3 : sub eax, 0x13 ; lea rdi, qword ptr [rdi + 0x13] ; jne 0xa898d ; ret
0x00000000000a6b1f : sub eax, 0x14 ; lea rdi, qword ptr [rdi + 0x14] ; jne 0xa717d ; ret
0x00000000000a8223 : sub eax, 0x14 ; lea rdi, qword ptr [rdi + 0x14] ; jne 0xa898d ; ret
0x00000000000a6b42 : sub eax, 0x15 ; lea rdi, qword ptr [rdi + 0x15] ; jne 0xa717d ; ret
0x00000000000a8256 : sub eax, 0x15 ; lea rdi, qword ptr [rdi + 0x15] ; jne 0xa898d ; ret
0x00000000000a6b61 : sub eax, 0x16 ; lea rdi, qword ptr [rdi + 0x16] ; jne 0xa717d ; ret
0x00000000000a8285 : sub eax, 0x16 ; lea rdi, qword ptr [rdi + 0x16] ; jne 0xa898d ; ret
0x00000000000a6b81 : sub eax, 0x17 ; lea rdi, qword ptr [rdi + 0x17] ; jne 0xa717d ; ret
0x00000000000a82b5 : sub eax, 0x17 ; lea rdi, qword ptr [rdi + 0x17] ; jne 0xa898d ; ret
0x00000000000a6ba1 : sub eax, 0x18 ; lea rdi, qword ptr [rdi + 0x18] ; jne 0xa717d ; ret
0x00000000000a82e5 : sub eax, 0x18 ; lea rdi, qword ptr [rdi + 0x18] ; jne 0xa898d ; ret
0x00000000000a6bc4 : sub eax, 0x19 ; lea rdi, qword ptr [rdi + 0x19] ; jne 0xa717d ; ret
0x00000000000a8318 : sub eax, 0x19 ; lea rdi, qword ptr [rdi + 0x19] ; jne 0xa898d ; ret
0x00000000000a6bf9 : sub eax, 0x1a ; lea rdi, qword ptr [rdi + 0x1a] ; jne 0xa717d ; ret
0x00000000000a834d : sub eax, 0x1a ; lea rdi, qword ptr [rdi + 0x1a] ; jne 0xa898d ; ret
0x00000000000a6c27 : sub eax, 0x1b ; lea rdi, qword ptr [rdi + 0x1b] ; jne 0xa717d ; ret
0x00000000000a837b : sub eax, 0x1b ; lea rdi, qword ptr [rdi + 0x1b] ; jne 0xa898d ; ret
0x00000000000a6c57 : sub eax, 0x1c ; lea rdi, qword ptr [rdi + 0x1c] ; jne 0xa717d ; ret
0x00000000000a83ab : sub eax, 0x1c ; lea rdi, qword ptr [rdi + 0x1c] ; jne 0xa898d ; ret
0x00000000000a6c83 : sub eax, 0x1d ; lea rdi, qword ptr [rdi + 0x1d] ; jne 0xa717d ; ret
0x00000000000a83d7 : sub eax, 0x1d ; lea rdi, qword ptr [rdi + 0x1d] ; jne 0xa898d ; ret
0x00000000000a6cb3 : sub eax, 0x1e ; lea rdi, qword ptr [rdi + 0x1e] ; jne 0xa717d ; ret
0x00000000000a8407 : sub eax, 0x1e ; lea rdi, qword ptr [rdi + 0x1e] ; jne 0xa898d ; ret
0x00000000000a6ce3 : sub eax, 0x1f ; lea rdi, qword ptr [rdi + 0x1f] ; jne 0xa717d ; ret
0x00000000000a8437 : sub eax, 0x1f ; lea rdi, qword ptr [rdi + 0x1f] ; jne 0xa898d ; ret
0x00000000000a6d13 : sub eax, 0x20 ; lea rdi, qword ptr [rdi + 0x20] ; jne 0xa717d ; ret
0x00000000000a8467 : sub eax, 0x20 ; lea rdi, qword ptr [rdi + 0x20] ; jne 0xa898d ; ret
0x00000000000e8f55 : sub eax, 0x28b4800 ; mov qword ptr [rdx], rdi ; ret
0x0000000000187de5 : sub eax, 0x2dadfff5 ; cmc ; lcall ptr [rdi] ; mov edx, 0xba1ffff5 ; cmc ; jmp rsi
0x0000000000183cfa : sub eax, 0x8acc8c6 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000000a69df : sub eax, 0xa ; lea rdi, qword ptr [rdi + 0xa] ; jne 0xa717d ; ret
0x00000000000a8083 : sub eax, 0xa ; lea rdi, qword ptr [rdi + 0xa] ; jne 0xa898d ; ret
0x00000000000a69fd : sub eax, 0xb ; lea rdi, qword ptr [rdi + 0xb] ; jne 0xa717d ; ret
0x00000000000a80b1 : sub eax, 0xb ; lea rdi, qword ptr [rdi + 0xb] ; jne 0xa898d ; ret
0x00000000000a6a1d : sub eax, 0xc ; lea rdi, qword ptr [rdi + 0xc] ; jne 0xa717d ; ret
0x00000000000a80d1 : sub eax, 0xc ; lea rdi, qword ptr [rdi + 0xc] ; jne 0xa898d ; ret
0x00000000000a6a3f : sub eax, 0xd ; lea rdi, qword ptr [rdi + 0xd] ; jne 0xa717d ; ret
0x00000000000a80f3 : sub eax, 0xd ; lea rdi, qword ptr [rdi + 0xd] ; jne 0xa898d ; ret
0x00000000000a6a5f : sub eax, 0xe ; lea rdi, qword ptr [rdi + 0xe] ; jne 0xa717d ; ret
0x00000000000a8123 : sub eax, 0xe ; lea rdi, qword ptr [rdi + 0xe] ; jne 0xa898d ; ret
0x00000000000a6a7f : sub eax, 0xf ; lea rdi, qword ptr [rdi + 0xf] ; jne 0xa717d ; ret
0x00000000000a8153 : sub eax, 0xf ; lea rdi, qword ptr [rdi + 0xf] ; jne 0xa898d ; ret
0x0000000000137983 : sub eax, 1 ; bswap eax ; mov dword ptr [rdi + 0x48], eax ; mov eax, 1 ; ret
0x00000000000a68b3 : sub eax, 1 ; lea rdi, qword ptr [rdi + 1] ; jne 0xa717d ; ret
0x00000000000a7f56 : sub eax, 1 ; lea rdi, qword ptr [rdi + 1] ; jne 0xa898d ; ret
0x00000000000a68d7 : sub eax, 2 ; lea rdi, qword ptr [rdi + 2] ; jne 0xa717d ; ret
0x00000000000a7f7b : sub eax, 2 ; lea rdi, qword ptr [rdi + 2] ; jne 0xa898d ; ret
0x00000000000a68fa : sub eax, 3 ; lea rdi, qword ptr [rdi + 3] ; jne 0xa717d ; ret
0x00000000000a7f9e : sub eax, 3 ; lea rdi, qword ptr [rdi + 3] ; jne 0xa898d ; ret
0x000000000004a936 : sub eax, 4 ; cmp rdi, r8 ; jbe 0x4a939 ; ret
0x000000000004a996 : sub eax, 4 ; cmp rdi, r8 ; jbe 0x4a99c ; nop ; pop rbx ; ret
0x00000000000a6915 : sub eax, 4 ; lea rdi, qword ptr [rdi + 4] ; jne 0xa717d ; ret
0x00000000000a7fb9 : sub eax, 4 ; lea rdi, qword ptr [rdi + 4] ; jne 0xa898d ; ret
0x00000000000a6938 : sub eax, 5 ; lea rdi, qword ptr [rdi + 5] ; jne 0xa717d ; ret
0x00000000000a7fdc : sub eax, 5 ; lea rdi, qword ptr [rdi + 5] ; jne 0xa898d ; ret
0x00000000000a695d : sub eax, 6 ; lea rdi, qword ptr [rdi + 6] ; jne 0xa717d ; ret
0x00000000000a8001 : sub eax, 6 ; lea rdi, qword ptr [rdi + 6] ; jne 0xa898d ; ret
0x00000000000a697b : sub eax, 7 ; lea rdi, qword ptr [rdi + 7] ; jne 0xa717d ; ret
0x00000000000a801f : sub eax, 7 ; lea rdi, qword ptr [rdi + 7] ; jne 0xa898d ; ret
0x00000000000a6997 : sub eax, 8 ; lea rdi, qword ptr [rdi + 8] ; jne 0xa717d ; ret
0x00000000000a803b : sub eax, 8 ; lea rdi, qword ptr [rdi + 8] ; jne 0xa898d ; ret
0x00000000000a69ba : sub eax, 9 ; lea rdi, qword ptr [rdi + 9] ; jne 0xa717d ; ret
0x00000000000a805e : sub eax, 9 ; lea rdi, qword ptr [rdi + 9] ; jne 0xa898d ; ret
0x000000000010bf3d : sub eax, dword ptr [rax] ; mov edi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000007f76e : sub eax, dword ptr [rdi + 0x18] ; ret
0x0000000000078d95 : sub eax, dword ptr [rdi + 0x20] ; ret
0x00000000001104f5 : sub eax, dword ptr [rdi + 0x38] ; cmp rax, rsi ; jb 0x110515 ; mov eax, 1 ; ret
0x0000000000078c85 : sub eax, dword ptr [rdi + 0x38] ; ret
0x000000000004a530 : sub eax, ecx ; shl rsi, cl ; mov qword ptr [rdi], rsi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000145c16 : sub eax, esi ; add ecx, 0x180 ; mov rsi, rax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000ce2a4 : sub ebp, dword ptr [rdi] ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x000000000018231e : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x000000000019ae39 : sub ebp, ecx ; call qword ptr [rdi]
0x0000000000194b39 : sub ebp, edx ; jmp qword ptr [rdi + rdi*2 + 0x2be40000]
0x0000000000149785 : sub ebx, edx ; jbe 0x1497a2 ; movzx ecx, byte ptr [rsi + rdx] ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000153655 : sub ebx, edx ; jbe 0x153672 ; movzx ecx, byte ptr [rsi + rdx] ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000008f6a5 : sub ebx, edx ; jbe 0x8f6c2 ; movzx ecx, byte ptr [rsi + rdx] ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x00000000000362e4 : sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000007e531 : sub ecx, 1 ; cmp byte ptr [rcx], 0xa ; je 0x7e558 ; cmp rsi, rcx ; jne 0x7e540 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000743e1 : sub ecx, 4 ; cmp dword ptr [rcx], 0xa ; je 0x74408 ; cmp rsi, rcx ; jb 0x743f0 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000f71f0 : sub ecx, edi ; add ecx, 0x150 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000f6f7d : sub ecx, edi ; add ecx, 0x50 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000362e2 : sub ecx, edi ; sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000130e79 : sub ecx, esi ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00000000000ab04c : sub edi, 0x10 ; add rax, rdi ; ret
0x00000000000a0cb4 : sub edx, 0x10 ; add rdx, rax ; jl 0xa0cdd ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000a0c94 : sub edx, 0x20 ; add rdx, rax ; jl 0xa0cdd ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00000000000a0c74 : sub edx, 0x30 ; add rdx, rax ; jl 0xa0cdd ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000000a0c64 : sub edx, 0x40 ; add rdx, rax ; jl 0xa0cdb ; add rax, rdi ; ret
0x00000000000744fc : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x000000000007eeb0 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000007eea5 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000074511 : sub edx, dword ptr [rax + 8] ; mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x0000000000090e14 : sub edx, eax ; jbe 0x90e57 ; add rax, rdi ; ret
0x0000000000090e24 : sub edx, eax ; jbe 0x90e59 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000090e34 : sub edx, eax ; jbe 0x90e59 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000090e44 : sub edx, eax ; jbe 0x90e59 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000090b9e : sub edx, eax ; jbe 0x90e5e ; add rax, rdi ; add rax, rcx ; ret
0x000000000004a49d : sub edx, eax ; mov qword ptr [rdi + 8], r10 ; mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000006dd6f : sub edx, ebx ; add eax, eax ; cmp eax, r10d ; jg 0x6ddf8 ; add eax, r11d ; mov rdi, rdx ; jmp 0x6dd53
0x00000000000757bc : sub edx, esi ; mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x000000000007a350 : sub edx, esi ; mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x0000000000098c0a : sub esi, 1 ; jne 0x98c0a ; xor edi, edi ; mov rax, rdi ; ret
0x000000000012650e : sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x000000000006efe2 : sub esp, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x0000000000172803 : sub qword ptr [rip - 0x7cb800], rsp ; add dword ptr [rdi + 3], esi ; ret
0x000000000004a49c : sub r10, rax ; mov qword ptr [rdi + 8], r10 ; mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000006dd6e : sub r10d, r11d ; add eax, eax ; cmp eax, r10d ; jg 0x6ddf9 ; add eax, r11d ; mov rdi, rdx ; jmp 0x6dd54
0x0000000000149784 : sub r11, rdx ; jbe 0x1497a3 ; movzx ecx, byte ptr [rsi + rdx] ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000153654 : sub r11, rdx ; jbe 0x153673 ; movzx ecx, byte ptr [rsi + rdx] ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000008f6a4 : sub r11, rdx ; jbe 0x8f6c3 ; movzx ecx, byte ptr [rsi + rdx] ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x00000000000a7259 : sub r8, 0x10 ; jb 0xa6828 ; movdqu xmmword ptr [rdi + 0x30], xmm7 ; ret
0x00000000000a6a98 : sub r8, 0x10 ; lea rdi, qword ptr [rdi + 0x10] ; jne 0xa717e ; ret
0x00000000000a817c : sub r8, 0x10 ; lea rdi, qword ptr [rdi + 0x10] ; jne 0xa898e ; ret
0x00000000000a6abb : sub r8, 0x11 ; lea rdi, qword ptr [rdi + 0x11] ; jne 0xa717e ; ret
0x00000000000a819f : sub r8, 0x11 ; lea rdi, qword ptr [rdi + 0x11] ; jne 0xa898e ; ret
0x00000000000a6ae0 : sub r8, 0x12 ; lea rdi, qword ptr [rdi + 0x12] ; jne 0xa717e ; ret
0x00000000000a81c4 : sub r8, 0x12 ; lea rdi, qword ptr [rdi + 0x12] ; jne 0xa898e ; ret
0x00000000000a6afe : sub r8, 0x13 ; lea rdi, qword ptr [rdi + 0x13] ; jne 0xa717e ; ret
0x00000000000a81f2 : sub r8, 0x13 ; lea rdi, qword ptr [rdi + 0x13] ; jne 0xa898e ; ret
0x00000000000a6b1e : sub r8, 0x14 ; lea rdi, qword ptr [rdi + 0x14] ; jne 0xa717e ; ret
0x00000000000a8222 : sub r8, 0x14 ; lea rdi, qword ptr [rdi + 0x14] ; jne 0xa898e ; ret
0x00000000000a6b41 : sub r8, 0x15 ; lea rdi, qword ptr [rdi + 0x15] ; jne 0xa717e ; ret
0x00000000000a8255 : sub r8, 0x15 ; lea rdi, qword ptr [rdi + 0x15] ; jne 0xa898e ; ret
0x00000000000a6b60 : sub r8, 0x16 ; lea rdi, qword ptr [rdi + 0x16] ; jne 0xa717e ; ret
0x00000000000a8284 : sub r8, 0x16 ; lea rdi, qword ptr [rdi + 0x16] ; jne 0xa898e ; ret
0x00000000000a6b80 : sub r8, 0x17 ; lea rdi, qword ptr [rdi + 0x17] ; jne 0xa717e ; ret
0x00000000000a82b4 : sub r8, 0x17 ; lea rdi, qword ptr [rdi + 0x17] ; jne 0xa898e ; ret
0x00000000000a6ba0 : sub r8, 0x18 ; lea rdi, qword ptr [rdi + 0x18] ; jne 0xa717e ; ret
0x00000000000a82e4 : sub r8, 0x18 ; lea rdi, qword ptr [rdi + 0x18] ; jne 0xa898e ; ret
0x00000000000a6bc3 : sub r8, 0x19 ; lea rdi, qword ptr [rdi + 0x19] ; jne 0xa717e ; ret
0x00000000000a8317 : sub r8, 0x19 ; lea rdi, qword ptr [rdi + 0x19] ; jne 0xa898e ; ret
0x00000000000a6bf8 : sub r8, 0x1a ; lea rdi, qword ptr [rdi + 0x1a] ; jne 0xa717e ; ret
0x00000000000a834c : sub r8, 0x1a ; lea rdi, qword ptr [rdi + 0x1a] ; jne 0xa898e ; ret
0x00000000000a6c26 : sub r8, 0x1b ; lea rdi, qword ptr [rdi + 0x1b] ; jne 0xa717e ; ret
0x00000000000a837a : sub r8, 0x1b ; lea rdi, qword ptr [rdi + 0x1b] ; jne 0xa898e ; ret
0x00000000000a6c56 : sub r8, 0x1c ; lea rdi, qword ptr [rdi + 0x1c] ; jne 0xa717e ; ret
0x00000000000a83aa : sub r8, 0x1c ; lea rdi, qword ptr [rdi + 0x1c] ; jne 0xa898e ; ret
0x00000000000a6c82 : sub r8, 0x1d ; lea rdi, qword ptr [rdi + 0x1d] ; jne 0xa717e ; ret
0x00000000000a83d6 : sub r8, 0x1d ; lea rdi, qword ptr [rdi + 0x1d] ; jne 0xa898e ; ret
0x00000000000a6cb2 : sub r8, 0x1e ; lea rdi, qword ptr [rdi + 0x1e] ; jne 0xa717e ; ret
0x00000000000a8406 : sub r8, 0x1e ; lea rdi, qword ptr [rdi + 0x1e] ; jne 0xa898e ; ret
0x00000000000a6ce2 : sub r8, 0x1f ; lea rdi, qword ptr [rdi + 0x1f] ; jne 0xa717e ; ret
0x00000000000a8436 : sub r8, 0x1f ; lea rdi, qword ptr [rdi + 0x1f] ; jne 0xa898e ; ret
0x00000000000a6d12 : sub r8, 0x20 ; lea rdi, qword ptr [rdi + 0x20] ; jne 0xa717e ; ret
0x00000000000a8466 : sub r8, 0x20 ; lea rdi, qword ptr [rdi + 0x20] ; jne 0xa898e ; ret
0x00000000000a69de : sub r8, 0xa ; lea rdi, qword ptr [rdi + 0xa] ; jne 0xa717e ; ret
0x00000000000a8082 : sub r8, 0xa ; lea rdi, qword ptr [rdi + 0xa] ; jne 0xa898e ; ret
0x00000000000a69fc : sub r8, 0xb ; lea rdi, qword ptr [rdi + 0xb] ; jne 0xa717e ; ret
0x00000000000a80b0 : sub r8, 0xb ; lea rdi, qword ptr [rdi + 0xb] ; jne 0xa898e ; ret
0x00000000000a6a1c : sub r8, 0xc ; lea rdi, qword ptr [rdi + 0xc] ; jne 0xa717e ; ret
0x00000000000a80d0 : sub r8, 0xc ; lea rdi, qword ptr [rdi + 0xc] ; jne 0xa898e ; ret
0x00000000000a6a3e : sub r8, 0xd ; lea rdi, qword ptr [rdi + 0xd] ; jne 0xa717e ; ret
0x00000000000a80f2 : sub r8, 0xd ; lea rdi, qword ptr [rdi + 0xd] ; jne 0xa898e ; ret
0x00000000000a6a5e : sub r8, 0xe ; lea rdi, qword ptr [rdi + 0xe] ; jne 0xa717e ; ret
0x00000000000a8122 : sub r8, 0xe ; lea rdi, qword ptr [rdi + 0xe] ; jne 0xa898e ; ret
0x00000000000a6a7e : sub r8, 0xf ; lea rdi, qword ptr [rdi + 0xf] ; jne 0xa717e ; ret
0x00000000000a8152 : sub r8, 0xf ; lea rdi, qword ptr [rdi + 0xf] ; jne 0xa898e ; ret
0x00000000000a68b2 : sub r8, 1 ; lea rdi, qword ptr [rdi + 1] ; jne 0xa717e ; ret
0x00000000000a7f55 : sub r8, 1 ; lea rdi, qword ptr [rdi + 1] ; jne 0xa898e ; ret
0x00000000000a68d6 : sub r8, 2 ; lea rdi, qword ptr [rdi + 2] ; jne 0xa717e ; ret
0x00000000000a7f7a : sub r8, 2 ; lea rdi, qword ptr [rdi + 2] ; jne 0xa898e ; ret
0x00000000000a68f9 : sub r8, 3 ; lea rdi, qword ptr [rdi + 3] ; jne 0xa717e ; ret
0x00000000000a7f9d : sub r8, 3 ; lea rdi, qword ptr [rdi + 3] ; jne 0xa898e ; ret
0x000000000004a935 : sub r8, 4 ; cmp rdi, r8 ; jbe 0x4a93a ; ret
0x000000000004a995 : sub r8, 4 ; cmp rdi, r8 ; jbe 0x4a99d ; nop ; pop rbx ; ret
0x00000000000a6914 : sub r8, 4 ; lea rdi, qword ptr [rdi + 4] ; jne 0xa717e ; ret
0x00000000000a7fb8 : sub r8, 4 ; lea rdi, qword ptr [rdi + 4] ; jne 0xa898e ; ret
0x00000000000a6937 : sub r8, 5 ; lea rdi, qword ptr [rdi + 5] ; jne 0xa717e ; ret
0x00000000000a7fdb : sub r8, 5 ; lea rdi, qword ptr [rdi + 5] ; jne 0xa898e ; ret
0x00000000000a695c : sub r8, 6 ; lea rdi, qword ptr [rdi + 6] ; jne 0xa717e ; ret
0x00000000000a8000 : sub r8, 6 ; lea rdi, qword ptr [rdi + 6] ; jne 0xa898e ; ret
0x00000000000a697a : sub r8, 7 ; lea rdi, qword ptr [rdi + 7] ; jne 0xa717e ; ret
0x00000000000a801e : sub r8, 7 ; lea rdi, qword ptr [rdi + 7] ; jne 0xa898e ; ret
0x00000000000a6996 : sub r8, 8 ; lea rdi, qword ptr [rdi + 8] ; jne 0xa717e ; ret
0x00000000000a803a : sub r8, 8 ; lea rdi, qword ptr [rdi + 8] ; jne 0xa898e ; ret
0x00000000000a69b9 : sub r8, 9 ; lea rdi, qword ptr [rdi + 9] ; jne 0xa717e ; ret
0x00000000000a805d : sub r8, 9 ; lea rdi, qword ptr [rdi + 9] ; jne 0xa898e ; ret
0x000000000010bf3c : sub r8, qword ptr [rax] ; mov edi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000007f76d : sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000078d94 : sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000001104f4 : sub rax, qword ptr [rdi + 0x38] ; cmp rax, rsi ; jb 0x110516 ; mov eax, 1 ; ret
0x00000000001104f3 : sub rax, qword ptr [rdi + 0x38] ; cmp rax, rsi ; jb 0x110517 ; mov eax, 1 ; ret
0x00000000001104f2 : sub rax, qword ptr [rdi + 0x38] ; cmp rax, rsi ; jb 0x110518 ; mov eax, 1 ; ret
0x0000000000078c84 : sub rax, qword ptr [rdi + 0x38] ; ret
0x000000000008dbc8 : sub rax, rdi ; ret
0x000000000019ae38 : sub rbp, rcx ; call qword ptr [rdi]
0x000000000007e530 : sub rcx, 1 ; cmp byte ptr [rcx], 0xa ; je 0x7e559 ; cmp rsi, rcx ; jne 0x7e541 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000743e0 : sub rcx, 4 ; cmp dword ptr [rcx], 0xa ; je 0x74409 ; cmp rsi, rcx ; jb 0x743f1 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000f71ef : sub rcx, rdi ; add ecx, 0x150 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000f6f7c : sub rcx, rdi ; add ecx, 0x50 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000362e1 : sub rcx, rdi ; sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000130e78 : sub rcx, rsi ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00000000000ab04b : sub rdi, 0x10 ; add rax, rdi ; ret
0x00000000000a0cb3 : sub rdx, 0x10 ; add rdx, rax ; jl 0xa0cde ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000a0c93 : sub rdx, 0x20 ; add rdx, rax ; jl 0xa0cde ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00000000000a0c73 : sub rdx, 0x30 ; add rdx, rax ; jl 0xa0cde ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000000a0c63 : sub rdx, 0x40 ; add rdx, rax ; jl 0xa0cdc ; add rax, rdi ; ret
0x00000000000744fb : sub rdx, qword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x0000000000074510 : sub rdx, qword ptr [rax + 8] ; mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x0000000000090e13 : sub rdx, rax ; jbe 0x90e58 ; add rax, rdi ; ret
0x0000000000090e23 : sub rdx, rax ; jbe 0x90e5a ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000090e33 : sub rdx, rax ; jbe 0x90e5a ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000090e43 : sub rdx, rax ; jbe 0x90e5a ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000090b9d : sub rdx, rax ; jbe 0x90e5f ; add rax, rdi ; add rax, rcx ; ret
0x00000000000757bb : sub rdx, rsi ; mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x000000000007a34f : sub rdx, rsi ; mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x0000000000098c09 : sub rsi, 1 ; jne 0x98c0b ; xor edi, edi ; mov rax, rdi ; ret
0x000000000006efe1 : sub rsp, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x00000000000ce5ae : sub word ptr [rdi], 0x4800 ; ror eax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000116d3a : syscall ; mov eax, edx ; xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x116d41 ; pop rdx ; pop r10 ; ret
0x000000000016eeb6 : test ah, 0x40 ; jne 0x16efad ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000ac600 : test ah, 0xf0 ; jne 0xac691 ; test ah, ah ; jne 0xac681 ; test al, 0xf0 ; jne 0xac671 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000c9127 : test ah, ah ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x13], cl ; mov rdi, rbx ; call r12
0x00000000000ac605 : test ah, ah ; jne 0xac67c ; test al, 0xf0 ; jne 0xac66c ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000008aeaf : test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x00000000000eb597 : test ah, bl ; add eax, dword ptr [rax] ; add bh, al ; test dword ptr [rdi + rdi*8 - 1], edi ; inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000bc19b : test al, 0 ; add byte ptr [rax], al ; mov rsi, qword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000074136 : test al, 0x28 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x000000000016ee64 : test al, 0x40 ; jne 0x16ef3c ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000016ed4c : test al, 0x40 ; jne 0x16ef41 ; test dl, 0x40 ; jne 0x16ed21 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000002bcf : test al, 0xed ; mov byte ptr [rbp + 7], ah ; or ah, byte ptr [rbp + 0xc] ; scasd eax, dword ptr [rdi] ; xbegin 0xfffffffff8c6efe1 ; ret
0x00000000001070d0 : test al, 0xf ; xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000000ac609 : test al, 0xf0 ; jne 0xac668 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac608 : test al, 0xf0 ; jne 0xac669 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac4f5 : test al, 0xf0 ; jne 0xac66c ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000016b63a : test al, 1 ; jne 0x16b67d ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000016ed7a : test al, 4 ; jne 0x16ef01 ; test dl, 4 ; jne 0x16ed21 ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000016b636 : test al, al ; je 0x16b661 ; test al, 1 ; jne 0x16b681 ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000098bd1 : test al, al ; jne 0x98c1e ; movzx eax, byte ptr [r9] ; test al, al ; jne 0x98c4f ; mov rax, rdi ; ret
0x0000000000098bd9 : test al, al ; jne 0x98c47 ; mov rax, rdi ; ret
0x000000000011835d : test al, al ; mov byte ptr [r9 + 3], r8b ; jne 0x118303 ; mov rax, rdi ; ret
0x00000000000ddc7c : test bh, cl ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7af7db8c], cl ; div byte ptr [rdi - 0xa] ; ret
0x0000000000105224 : test bh, dl ; add eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x0000000000089f20 : test bl, ch ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x000000000008a440 : test bl, cl ; add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, r8 ; call rax
0x00000000001554d9 : test byte ptr [r9 - 0x6f3c03a9], 0x66 ; mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000012aa67 : test byte ptr [rax + 0x40], 8 ; je 0x12aa7f ; cmp dword ptr [rdi + 0x10], 2 ; je 0x12aa84 ; ret
0x000000000008b03b : test byte ptr [rax + 0x48000000], cl ; mov esi, ebp ; mov rdi, r12 ; call rax
0x000000000019947c : test byte ptr [rax + 2], bl ; add byte ptr [rdi + rbx], ah ; sti ; ljmp ptr [rax + rbx*2 + 0x1fd40002] ; sti ; call rsp
0x000000000010518b : test byte ptr [rax + 5], dh ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000001051ab : test byte ptr [rax + 6], dh ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000013ebe7 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; ror byte ptr [rdi], 0x11 ; and al, 0x28 ; call rdx
0x00000000001321af : test byte ptr [rax + rdi*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x000000000013ea6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x00000000000798da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x0000000000090dea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000097f6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000000a0c2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000016ef5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000016ef6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000016ef7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000016ef8a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000016ef9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000016eeda : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000016eeea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000016eefa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000016ef0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000016ef1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000016ef2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000016ef3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000016ef4a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000ac65a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000ac67a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000ac66a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x000000000016eeca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x0000000000163f4a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000163f5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000000d694a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x0000000000079d0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000a766a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000a606a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000a703a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00000000000a608a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000a848a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a6d3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000a9efa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000f736a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000a705a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000a099a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a090a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000a095a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a707a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a708a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a706a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00000000000a767a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a607a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000016b66a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000007ee7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000000abc9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0xabd2e ; ret
0x00000000000abcea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xabd2e ; ret
0x00000000000f735a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000fd96a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x0000000000078cba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x00000000000a60aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000a6d7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000015ae5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a84ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a9f3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a709a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000a70ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a70da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a70ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a70fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a710a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a70ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a70aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000011b1ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x0000000000163eda : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000013e65a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000007685a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007f15a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000013d82a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000002e01a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000007f16a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000000a60ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000015512a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000a704a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x00000000000a081a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], r9w ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a097a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], si ; mov byte ptr [rdi + 2], 0 ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a08ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], si ; mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x00000000000a08da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x00000000000a711a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000a712a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000124a8a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movsxd rdi, dword ptr [rdi] ; mov eax, 3 ; syscall ; ret
0x00000000001701ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 0x10] ; movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x000000000016b6ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008d44a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000015afea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000015af6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000001258f9 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; lea eax, dword ptr [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00000000000798e8 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x00000000000f7329 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000000a9eea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x0000000000078cca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000166266 : test byte ptr [rbp + 0x48fffffb], ah ; mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000002820d : test byte ptr [rbp + rdi*8 - 0x7cb70001], dh ; jl 0x28248 ; add byte ptr [rsi + rbx*2 - 0xa], sil ; ret
0x0000000000104e50 : test byte ptr [rbx + 0xa], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000001052c0 : test byte ptr [rbx + 3], bl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x000000000004709e : test byte ptr [rbx + rsi*8 - 0x7cbe0001], ch ; stc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x98e9
0x00000000001554b7 : test byte ptr [rbx - 0x76b303aa], 0x5f ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001039f4 : test byte ptr [rcx + 0x31000000], dh ; ror byte ptr [rax - 0x7d], 0x3e ; add byte ptr [rdi + rax - 0xd], dh ; ret
0x000000000008f7ef : test byte ptr [rcx + rax], ch ; add byte ptr [rax], al ; bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x00000000001554da : test byte ptr [rcx - 0x6f3c03a9], 0x66 ; mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000008b5a2 : test byte ptr [rcx - 0x76b3cfbd], 0x4b ; mov qword ptr [rbx], rsi ; mov rdi, r9 ; call rcx
0x0000000000104bd2 : test byte ptr [rcx], cl ; or eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x0000000000196b54 : test byte ptr [rdi + 1], dl ; add byte ptr [rax + rdi*2 - 0xc], ah ; call rsp
0x0000000000104edc : test byte ptr [rdi + 7], bh ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000104efc : test byte ptr [rdi + 9], bl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000008792c : test byte ptr [rdi + rax - 8], 1 ; je 0x8794b ; sub rax, 8 ; ret
0x00000000000b42e1 : test byte ptr [rdi + rcx], dl ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000000d26be : test byte ptr [rdi + rdi*8 - 1], bl ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000195848 : test byte ptr [rdi - 0x12], dl ; lcall ptr [rbx + rdx*8 + 0x57e40000] ; out dx, al ; call rsp
0x00000000000313b6 : test byte ptr [rdi - 0x17000004], dl ; jo 0x31394 ; add eax, 0xc7834900 ; or byte ptr [rax + 1], cl ; ret
0x000000000013acdc : test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x0000000000195544 : test byte ptr [rdi - 0x9c0000], bh ; in eax, dx ; push qword ptr [rdi + rdi*4 - 0x1c0000] ; in eax, dx ; jmp rsp
0x00000000000d09b8 : test byte ptr [rdi - 0x9fffff4], bl ; ret
0x0000000000081f0c : test byte ptr [rdi - 0x9fffffe], ch ; ret
0x000000000009c671 : test byte ptr [rdi], 0x84 ; cdq ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; ret 0x5a8d
0x00000000001039f2 : test byte ptr [rdi], 0x84 ; mov cl, 0 ; add byte ptr [rax], al ; xor eax, eax ; cmp qword ptr [rsi], 0 ; je 0x103a18 ; ret
0x00000000000b081a : test byte ptr [rdi], 0x84 ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000b6eee : test byte ptr [rdi], 0x84 ; ret
0x000000000010419a : test byte ptr [rdi], 0x84 ; ret 0
0x000000000003eb35 : test byte ptr [rdi], 0x84 ; xchg eax, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000084b88 : test byte ptr [rdi], 0x85 ; movsd dword ptr [rdi], dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77cfdb9], cl ; add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x00000000000b8b26 : test byte ptr [rdi], 0x85 ; ret
0x0000000000076d81 : test byte ptr [rdi], 0x88 ; cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 0xe], dh ; mov edx, dword ptr [rdi + 0xc0] ; mov eax, edx ; ret
0x00000000000eff9f : test byte ptr [rdi], 0x94 ; ret
0x00000000000e7c9a : test byte ptr [rdi], 0x94 ; ret 0xd108
0x0000000000112a02 : test byte ptr [rdi], 0x95 ; ret 0xc031
0x0000000000078cd2 : test byte ptr [rdi], 4 ; sete al ; ret
0x00000000000748c0 : test byte ptr [rdi], 8 ; je 0x748df ; cmp esi, 0xff ; je 0x748df ; mov eax, 0xffffffff ; ret
0x0000000000078ce2 : test byte ptr [rdi], 8 ; sete al ; ret
0x000000000019646c : test byte ptr [rdi], ah ; add dword ptr [rax], eax ; add al, 0x5e ; push qword ptr [rdi + 0x5e540001] ; jmp rsp
0x00000000000a69e8 : test byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x0000000000195710 : test byte ptr [rdi], bh ; out dx, al ; jmp rsp
0x0000000000198bbc : test byte ptr [rdi], bl ; add al, byte ptr [rax] ; mov ah, 0x14 ; cli ; call rsp
0x00000000000c8a0c : test byte ptr [rdi], ch ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000ce261 : test byte ptr [rdi], ch ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x000000000007578c : test byte ptr [rdi], dh ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000082fe9 : test byte ptr [rdi], dl ; or byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000000ce2d0 : test byte ptr [rdi], r13b ; add byte ptr [rax - 0x3f], cl ; enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x000000000008f761 : test byte ptr [rdx + 0x48000001], bh ; bsr eax, eax ; add rax, rdi ; ret
0x0000000000105429 : test byte ptr [rdx + 3], dh ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000104b59 : test byte ptr [rdx], ah ; or eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x00000000000f224e : test byte ptr [rip - 0x7a000001], ah ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000001050ff : test byte ptr [rsi + rax], bh ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000014004f : test byte ptr [rsi + rdi*8 - 0x38b60001], bl ; ret
0x000000000010501d : test byte ptr [rsi], bh ; add eax, 0xf6310000 ; mov rdi, r12 ; call rbx
0x0000000000198944 : test byte ptr [rsi], cl ; add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; mov edx, 0xe9cfff9 ; add al, byte ptr [rax] ; add al, 0xbb ; stc ; call rsp
0x0000000000104cf7 : test byte ptr [rsp + rcx], al ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000012e710 : test ch, ch ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x75], 0x74 ; and al, 0x10 ; mov rdi, rbp ; call r14
0x000000000016edd7 : test dh, 0x40 ; jne 0x16ed1d ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000170266 : test dh, 0x40 ; jne 0x17023f ; movzx eax, byte ptr [rdi - 9] ; movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x000000000016ee1d : test dh, 4 ; jne 0x16ed1d ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000126506 : test dh, 7 ; jne 0x12652f ; shr esi, 3 ; sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x0000000000111517 : test dh, cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 2
0x000000000008a18d : test dh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x00000000001b6fdc : test dh, dl ; add dword ptr [rax], eax ; mov al, 0x2c ; clc ; jmp rdi
0x000000000016ed54 : test dl, 0x40 ; jne 0x16ed19 ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000001701b2 : test dl, 0x40 ; jne 0x17023f ; movzx eax, byte ptr [rdi - 9] ; movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x000000000016ed82 : test dl, 4 ; jne 0x16ed19 ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000195d7c : test dl, bh ; add byte ptr [rax], al ; in al, 0x70 ; out dx, eax ; lcall ptr [rdx + rdi*8 + 0x71940000] ; out dx, eax ; call rsp
0x00000000000abcd2 : test dl, dl ; je 0xabd11 ; and dl, 0xf ; je 0xabd01 ; mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0xabd31 ; ret
0x00000000000a0509 : test dl, dl ; jne 0xa0502 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00000000000a0587 : test dl, dl ; jne 0xa0573 ; pop rbx ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000016ee5f : test dword ptr [rax + rax + 0x40a80000], edi ; jne 0x16ef41 ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000ac5bf : test dword ptr [rax + rax - 0xf580000], ebp ; jne 0xac671 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000001056a6 : test dword ptr [rax - 0x4100000b], edi ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000195d1d : test dword ptr [rax], 0xef643400 ; push qword ptr [rdi + rsi*8 + 0x65240000] ; out dx, eax ; jmp rsp
0x0000000000105706 : test dword ptr [rbp - 0x41000006], eax ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000105826 : test dword ptr [rbp - 0x41000007], eax ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000000ac4f0 : test dword ptr [rbx + 1], edi ; add byte ptr [rax], al ; test al, 0xf0 ; jne 0xac671 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac4f8 : test dword ptr [rbx + 1], esp ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000002b8b : test dword ptr [rbx - 0x2e], ebp ; cmp dl, byte ptr [rdi] ; ret
0x00000000001057a6 : test dword ptr [rbx - 0x41000004], eax ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000001052e5 : test dword ptr [rbx], 0xf6310000 ; mov rdi, r14 ; call rbx
0x00000000000a2d4d : test dword ptr [rbx], eax ; add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x0000000000088969 : test dword ptr [rbx], esi ; add byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; lock add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000016c389 : test dword ptr [rcx + 9], eax ; add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 1] ; movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x0000000000105746 : test dword ptr [rcx - 0x41000007], edi ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x000000000006d281 : test dword ptr [rcx], edx ; add byte ptr [rdi], cl ; mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000006f7de : test dword ptr [rdi + rax*8], esp ; add eax, 0x48000000 ; mov eax, edx ; pop rbx ; ret
0x00000000000a6a67 : test dword ptr [rdi + rax], eax ; add byte ptr [rax], al ; ret
0x00000000000a6a47 : test dword ptr [rdi + rax], esp ; add byte ptr [rax], al ; ret
0x000000000005a103 : test dword ptr [rdi + rbp*8 - 1], ecx ; call qword ptr [rax]
0x0000000000036273 : test dword ptr [rdi + rcx*8], eax ; setne al ; movzx eax, al ; ret
0x00000000000c3913 : test dword ptr [rdi + rdi*8 - 1], ebx ; inc dword ptr [rcx - 0x77] ; ret 0x2e9
0x00000000000eb59d : test dword ptr [rdi + rdi*8 - 1], edi ; inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000051a32 : test dword ptr [rdi + rdi*8 - 1], esi ; dec dword ptr [rdi] ; mov dh, 0x53 ; or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x00000000001057c6 : test dword ptr [rdi - 0x41000005], esi ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000105786 : test dword ptr [rdi*8 + 0x3beffff], ebx ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x000000000009c64a : test dword ptr [rdi], 0x11c884 ; add byte ptr [rbp - 0x77], cl ; ret 0x8d44
0x0000000000077370 : test dword ptr [rdi], 0x2000 ; je 0x77398 ; mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x77398 ; ret
0x0000000000036426 : test dword ptr [rdi], eax ; setne al ; movzx eax, al ; ret
0x00000000000ef9d6 : test dword ptr [rdi], edi ; add eax, 0x418b0000 ; or al, 0x8b ; push rbx ; adc al, 0x39 ; ret 0x850f
0x000000000012a9e7 : test dword ptr [rdi], esi ; hlt ; dec dword ptr [rax - 0x75] ; jl 0x12aa1d ; sub al, ch ; ret
0x00000000000d0ee7 : test dword ptr [rdi], esi ; idiv bh ; push rsi ; ret
0x000000000016c58b : test dword ptr [rdx + 7], ecx ; add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 1] ; movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x00000000000e263a : test dword ptr [rdx + rdi*8 - 1], ecx ; dec dword ptr [rbx + 0x438d044d] ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000105626 : test dword ptr [rdx - 0x41000004], ebx ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00000000001058a6 : test dword ptr [rdx - 0x4100000b], ebp ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000000ac59d : test dword ptr [rsi + 0x48000000], edi ; lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000000a0b6d : test dword ptr [rsi + 0x66000000], edi ; pmovmskb eax, mm1 ; bsr eax, eax ; add rax, rdi ; ret
0x000000000016ed7d : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; test dl, 4 ; jne 0x16ed1e ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000105567 : test dword ptr [rsi - 0x41000006], esi ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000105866 : test dword ptr [rsi - 0x4100000a], edx ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000001883f6 : test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x000000000014d982 : test eax, 0xe3c4c9eb ; jns 0x14d9fd ; rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014e162 : test eax, 0xe3c4c9eb ; jns 0x14e1dd ; rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ea92 : test eax, 0xe3c4c9eb ; jns 0x14eb0d ; rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000ac571 : test eax, 1 ; je 0xac4e4 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac621 : test eax, 1 ; je 0xac69b ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000010076c : test eax, eax ; je 0x100783 ; mov qword ptr [rax + 8], rdi ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000114eaf : test eax, eax ; je 0x114edb ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x00000000001177ce : test eax, eax ; je 0x117814 ; lea rsi, qword ptr [rbp - 0x20] ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x0000000000122225 : test eax, eax ; je 0x122235 ; mov rdi, rbx ; call rax
0x000000000012251d : test eax, eax ; je 0x12252d ; mov rdi, rbx ; call rax
0x000000000012262d : test eax, eax ; je 0x122645 ; lea rdi, qword ptr [rip + 0x2a3068] ; call rax
0x000000000012df71 : test eax, eax ; je 0x12df81 ; mov rdi, rsp ; call rax
0x000000000012e05c : test eax, eax ; je 0x12e06c ; mov rdi, rsp ; call rax
0x000000000012e917 : test eax, eax ; je 0x12e927 ; mov rdi, rbp ; call rax
0x000000000012f97a : test eax, eax ; je 0x12f98a ; mov rdi, rbx ; call rax
0x000000000012fbf5 : test eax, eax ; je 0x12fa9b ; mov rdi, rbx ; call rax
0x000000000012fcec : test eax, eax ; je 0x12fcfc ; mov rdi, rbx ; call rax
0x00000000001309f5 : test eax, eax ; je 0x130af6 ; mov rdi, rbp ; call qword ptr [rbx]
0x0000000000134af0 : test eax, eax ; je 0x134b08 ; lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x00000000001354e8 : test eax, eax ; je 0x1354f8 ; mov rdi, r12 ; call rax
0x00000000001356b9 : test eax, eax ; je 0x1356cb ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000136a6e : test eax, eax ; je 0x136993 ; mov rdi, rbx ; call rax
0x00000000001369a5 : test eax, eax ; je 0x1369b5 ; mov rdi, r12 ; call rax
0x0000000000136b96 : test eax, eax ; je 0x136ba6 ; mov rdi, rbp ; call rax
0x0000000000136db6 : test eax, eax ; je 0x136dc6 ; mov rdi, rbp ; call rax
0x000000000013788d : test eax, eax ; je 0x13789f ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000137f79 : test eax, eax ; je 0x137f89 ; mov rdi, r12 ; call rax
0x00000000001382ed : test eax, eax ; je 0x1382ff ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000013b879 : test eax, eax ; je 0x13b88b ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013bf92 : test eax, eax ; je 0x13bfa4 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000000204ab : test eax, eax ; je 0x204bb ; mov rdi, rbp ; call rax
0x000000000006efa5 : test eax, eax ; je 0x6efc3 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006f075 : test eax, eax ; je 0x6f093 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x0000000000097e06 : test eax, eax ; je 0x97e2d ; bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x0000000000097fff : test eax, eax ; je 0x9801b ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x00000000000a0cfa : test eax, eax ; je 0xa0cda ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000a0d59 : test eax, eax ; je 0xa0ce1 ; bsr eax, eax ; add rax, rdi ; add rax, r8 ; ret
0x00000000000ac30b : test eax, eax ; je 0xac347 ; mov eax, dword ptr [rsi + 8] ; mov dword ptr [rdi + 0xc], eax ; mov rax, rbx ; pop rbx ; ret
0x00000000000c7c2e : test eax, eax ; je 0xc7c50 ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000f8102 : test eax, eax ; je 0xf815b ; xor edx, edx ; xor esi, esi ; mov rdi, rbx ; call rax
0x000000000013eab6 : test eax, eax ; jne 0x13eb18 ; cmp dword ptr [rdi + 0x20], esi ; jbe 0x13eae0 ; add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000097f51 : test eax, eax ; jne 0x97fb0 ; pmovmskb eax, xmm1 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000ac7f2 : test eax, eax ; jne 0xac7d8 ; mov rax, rdi ; ret
0x00000000000fd982 : test eax, eax ; js 0xfd99c ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x00000000001199b3 : test eax, eax ; mov dword ptr [rax + 0xc], r8d ; jne 0x11995f ; mov rax, rdi ; ret
0x00000000000acae3 : test eax, eax ; mov dword ptr [rdi + 8], eax ; je 0xacaa2 ; mov rax, rbx ; pop rbx ; ret
0x000000000010081c : test eax, eax ; mov edx, eax ; jne 0x100817 ; mov r9, rcx ; mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x000000000013e862 : test ebx, ebx ; je 0x13e899 ; xor eax, eax ; mov edx, 0xffffffff ; mov rsi, rbx ; mov rdi, rbp ; call rcx
0x00000000000cd565 : test ebx, ebx ; je 0xcd513 ; mov rdi, qword ptr [rbx] ; mov rax, qword ptr [rdi + 0x10] ; test rax, rax ; je 0xcd58a ; call rax
0x0000000000124769 : test ebx, ebx ; mov rdi, rbx ; jne 0x124770 ; mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000172328 : test ebx, ebx ; mov rdi, rbx ; jne 0x172323 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001166e5 : test ecx, ecx ; jne 0x1166fa ; cmp qword ptr [rdi], 0 ; je 0x116703 ; ret
0x00000000000365a4 : test ecx, ecx ; jne 0x365c7 ; mov edx, dword ptr [rdi] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x00000000001721b3 : test edi, edi ; je 0x1721d9 ; mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x1721d4 ; call rax
0x0000000000036399 : test edi, edi ; je 0x363c1 ; mov eax, 1 ; shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000003aa0c : test edi, edi ; je 0x3aa7d ; mov dword ptr [rdi], 0 ; xor eax, eax ; pop rbx ; ret
0x00000000000ace11 : test edi, edi ; je 0xace2e ; mov eax, dword ptr [rdi] ; test eax, eax ; sete al ; movzx eax, al ; ret
0x000000000003a931 : test edi, edi ; push rbx ; je 0x3a97d ; xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x3a94d ; pop rbx ; ret
0x0000000000116741 : test edx, edx ; cmove rdx, rax ; xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x0000000000107730 : test edx, edx ; je 0x10774d ; cmp rdi, rdx ; jne 0x107735 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000001304f0 : test edx, edx ; je 0x130500 ; mov rdi, rbp ; call rdx
0x000000000014d383 : test edx, edx ; je 0x14d36d ; movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x000000000014d4bf : test edx, edx ; je 0x14d4aa ; movsxd rax, ecx ; add rax, rdi ; ret
0x000000000002d9cd : test edx, edx ; je 0x2d9ea ; and esi, dword ptr [rdi + 0x10] ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000002da18 : test edx, edx ; je 0x2d9fe ; and esi, dword ptr [rdi + 0x10] ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000004ac29 : test edx, edx ; movzx eax, byte ptr [r8 + rdi] ; mov rdi, rdx ; mov byte ptr [rsi], al ; jne 0x4ac21 ; mov rax, rsi ; ret
0x00000000001b1569 : test esi, esi ; jmp rdi
0x000000000007fa24 : test esi, esi ; mov byte ptr [rdi], r8b ; je 0x7fa6c ; mov qword ptr [rsi], rdi ; ret
0x00000000000fda20 : test esi, esi ; mov dword ptr [rdi + 0x34], esi ; jne 0xfda15 ; or dword ptr [rdi], 0x80000000 ; xor eax, eax ; ret
0x00000000000c9124 : test esp, esp ; je 0xc921f ; mov rbp, r13 ; mov rdi, rbx ; call r12
0x00000000000d0248 : test esp, esp ; je 0xd035f ; mov rdi, qword ptr [rbp - 0x308] ; call r12
0x0000000000036272 : test qword ptr [rdi + rcx*8], rax ; setne al ; movzx eax, al ; ret
0x000000000009c649 : test qword ptr [rdi], 0x11c884 ; add byte ptr [rbp - 0x77], cl ; ret 0x8d44
0x0000000000036425 : test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x00000000000c9123 : test r12, r12 ; je 0xc9220 ; mov rbp, r13 ; mov rdi, rbx ; call r12
0x00000000000d0247 : test r12, r12 ; je 0xd0360 ; mov rdi, qword ptr [rbp - 0x308] ; call r12
0x000000000011835c : test r8b, r8b ; mov byte ptr [r9 + 3], r8b ; jne 0x118304 ; mov rax, rdi ; ret
0x00000000001199b2 : test r8d, r8d ; mov dword ptr [rax + 0xc], r8d ; jne 0x119960 ; mov rax, rdi ; ret
0x00000000000ac570 : test rax, 1 ; je 0xac4e5 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac620 : test rax, 1 ; je 0xac69c ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000010076b : test rax, rax ; je 0x100784 ; mov qword ptr [rax + 8], rdi ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000010076a : test rax, rax ; je 0x100785 ; mov qword ptr [rax + 8], rdi ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000114eae : test rax, rax ; je 0x114edc ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x00000000001177cd : test rax, rax ; je 0x117815 ; lea rsi, qword ptr [rbp - 0x20] ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x0000000000122224 : test rax, rax ; je 0x122236 ; mov rdi, rbx ; call rax
0x000000000012251c : test rax, rax ; je 0x12252e ; mov rdi, rbx ; call rax
0x000000000012262c : test rax, rax ; je 0x122646 ; lea rdi, qword ptr [rip + 0x2a3068] ; call rax
0x000000000012df70 : test rax, rax ; je 0x12df82 ; mov rdi, rsp ; call rax
0x000000000012e05b : test rax, rax ; je 0x12e06d ; mov rdi, rsp ; call rax
0x000000000012e916 : test rax, rax ; je 0x12e928 ; mov rdi, rbp ; call rax
0x000000000012f979 : test rax, rax ; je 0x12f98b ; mov rdi, rbx ; call rax
0x000000000012fbf4 : test rax, rax ; je 0x12fa9c ; mov rdi, rbx ; call rax
0x000000000012fceb : test rax, rax ; je 0x12fcfd ; mov rdi, rbx ; call rax
0x0000000000134aef : test rax, rax ; je 0x134b09 ; lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x00000000001354e7 : test rax, rax ; je 0x1354f9 ; mov rdi, r12 ; call rax
0x00000000001356b8 : test rax, rax ; je 0x1356cc ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000136a6d : test rax, rax ; je 0x136994 ; mov rdi, rbx ; call rax
0x00000000001369a4 : test rax, rax ; je 0x1369b6 ; mov rdi, r12 ; call rax
0x0000000000136b95 : test rax, rax ; je 0x136ba7 ; mov rdi, rbp ; call rax
0x0000000000136db5 : test rax, rax ; je 0x136dc7 ; mov rdi, rbp ; call rax
0x000000000013788c : test rax, rax ; je 0x1378a0 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000137f78 : test rax, rax ; je 0x137f8a ; mov rdi, r12 ; call rax
0x00000000001382ec : test rax, rax ; je 0x138300 ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000013b878 : test rax, rax ; je 0x13b88c ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013bf91 : test rax, rax ; je 0x13bfa5 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000000204aa : test rax, rax ; je 0x204bc ; mov rdi, rbp ; call rax
0x000000000006efa4 : test rax, rax ; je 0x6efc4 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006f074 : test rax, rax ; je 0x6f094 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x00000000000c7c2d : test rax, rax ; je 0xc7c51 ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000f8101 : test rax, rax ; je 0xf815c ; xor edx, edx ; xor esi, esi ; mov rdi, rbx ; call rax
0x00000000000cd564 : test rbx, rbx ; je 0xcd514 ; mov rdi, qword ptr [rbx] ; mov rax, qword ptr [rdi + 0x10] ; test rax, rax ; je 0xcd58b ; call rax
0x0000000000124768 : test rbx, rbx ; mov rdi, rbx ; jne 0x124771 ; mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000172327 : test rbx, rbx ; mov rdi, rbx ; jne 0x172324 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f8035 : test rdi, rdi ; cmovne eax, edx ; cmp rbp, rsi ; ja 0xf7fdd ; pop rbx ; pop rbp ; ret
0x00000000001721b2 : test rdi, rdi ; je 0x1721da ; mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x1721d5 ; call rax
0x000000000003aa0b : test rdi, rdi ; je 0x3aa7e ; mov dword ptr [rdi], 0 ; xor eax, eax ; pop rbx ; ret
0x0000000000098334 : test rdi, rdi ; je 0x9831a ; mov rsi, qword ptr [r12] ; test rsi, rsi ; jne 0x9835b ; jmp 0x98315
0x00000000000ace10 : test rdi, rdi ; je 0xace2f ; mov eax, dword ptr [rdi] ; test eax, eax ; sete al ; movzx eax, al ; ret
0x0000000000122500 : test rdi, rdi ; jne 0x1224f6 ; pop rbx ; ret
0x00000000001224ff : test rdi, rdi ; jne 0x1224f7 ; pop rbx ; ret
0x000000000012ae89 : test rdi, rdi ; jne 0x12ae83 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001724a9 : test rdi, rdi ; jne 0x1724a6 ; ret
0x00000000001724cb : test rdi, rdi ; jne 0x1724c8 ; pop rbx ; ret
0x000000000004abac : test rdi, rdi ; mov byte ptr [rsi], al ; jne 0x4aba2 ; mov rax, rsi ; ret
0x000000000003a930 : test rdi, rdi ; push rbx ; je 0x3a97e ; xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x3a94e ; pop rbx ; ret
0x0000000000116740 : test rdx, rdx ; cmove rdx, rax ; xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x000000000010772f : test rdx, rdx ; je 0x10774e ; cmp rdi, rdx ; jne 0x107736 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000001304ef : test rdx, rdx ; je 0x130501 ; mov rdi, rbp ; call rdx
0x000000000007fa23 : test rsi, rsi ; mov byte ptr [rdi], r8b ; je 0x7fa6d ; mov qword ptr [rsi], rdi ; ret
0x0000000000126505 : test sil, 7 ; jne 0x126530 ; shr esi, 3 ; sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x00000000000ac647 : test spl, spl ; jne 0xac67d ; test al, 0xf0 ; jne 0xac66d ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000002b8a : test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x000000000016e37e : vmovd ecx, xmm0 ; cmp dl, 4 ; jb 0x16e39b ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000016dc81 : vmovdqu xmm1, xmmword ptr [rcx - 0x10] ; vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000001507e2 : vmovdqu xmm1, xmmword ptr [rsi + rdx - 0x10] ; vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000150c8b : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; vmovdqu xmmword ptr [rdi], xmm0 ; vzeroupper ; ret
0x00000000001507ec : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000016dc86 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000001507e8 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000016e365 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000150c91 : vmovdqu xmmword ptr [rdi], xmm0 ; vzeroupper ; ret
0x000000000016dc6d : vmovdqu ymm1, ymmword ptr [rcx - 0x20] ; vmovdqu ymmword ptr [rdi], ymm0 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000150b7b : vmovdqu ymmword ptr [edi + edx - 0x20], ymm0 ; vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x000000000016dc52 : vmovdqu ymmword ptr [rdi + 0x20], ymm1 ; vmovdqu ymmword ptr [r9 - 0x40], ymm2 ; vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x0000000000150a1a : vmovdqu ymmword ptr [rdi + 0x60], ymm7 ; vmovdqu ymmword ptr [r11], ymm8 ; vzeroupper ; ret
0x0000000000150bf5 : vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0 ; vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0 ; vzeroupper ; ret
0x0000000000150b7c : vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0 ; vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x0000000000150735 : vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x00000000001508bd : vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm2 ; vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3 ; vzeroupper ; ret
0x0000000000150bfb : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0 ; vzeroupper ; ret
0x00000000001508c3 : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3 ; vzeroupper ; ret
0x000000000015088f : vmovdqu ymmword ptr [rdi + rdx - 0x60], ymm6 ; vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7 ; vzeroupper ; ret
0x0000000000150895 : vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7 ; vzeroupper ; ret
0x000000000016dc72 : vmovdqu ymmword ptr [rdi], ymm0 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000150731 : vmovdqu ymmword ptr [rdi], ymm0 ; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x0000000000150b82 : vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x000000000016e35b : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000016e901 : vmovdqu64 zmmword ptr [rdi + 0xc0], zmm7 ; vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x000000000016e72b : vmovdqu64 zmmword ptr [rdi + rdx - 0x100], zmm7 ; vzeroupper ; ret
0x000000000016eaf5 : vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0 ; vmovdqu64 zmmword ptr [rdi], zmm0 ; vzeroupper ; ret
0x000000000016e57e : vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm1 ; vzeroupper ; ret
0x000000000016eb8e : vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm0 ; vzeroupper ; ret
0x000000000016e769 : vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm3 ; vzeroupper ; ret
0x000000000016e578 : vmovdqu64 zmmword ptr [rdi], zmm0 ; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm1 ; vzeroupper ; ret
0x000000000016eafd : vmovdqu64 zmmword ptr [rdi], zmm0 ; vzeroupper ; ret
0x000000000016e374 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000016e0ee : vmovups zmmword ptr [rdi - 0x1c0], zmm14 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000016e0f5 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000016e348 : vmovups zmmword ptr [rdi], zmm2 ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x0000000000183a6c : wait ; adc byte ptr [rdi], dl ; pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000122221 : wait ; add byte ptr [rax], al ; test rax, rax ; je 0x122239 ; mov rdi, rbx ; call rax
0x0000000000198381 : wait ; clc ; ljmp ptr [rdi + rbx*8 - 0x636bffff] ; clc ; call rsp
0x0000000000002fa3 : wait ; scasb al, byte ptr [rdi] ; outsd dx, dword ptr [rsi] ; mov byte ptr [rbx], cl ; and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000008c09e : wait ; str word ptr [rdi + 0x63] ; or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000000aa0dd : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000aa15f : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000aa261 : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000881f1 : xchg bh, bh ; dec dword ptr [rax - 0x77] ; out dx, al ; mov rdi, rax ; mov rbx, rax ; call 0x844de
0x00000000000f3a38 : xchg byte ptr [rax + rax], al ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x0000000000077c26 : xchg byte ptr [rbp - 6], bh ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000258ad : xchg byte ptr [rcx - 0x7afffffd], dh ; ror byte ptr [rdi], cl ; mov byte ptr [rcx - 0x8fffffd], ch ; ret 0xf800
0x0000000000159a26 : xchg byte ptr [rdi + 0x63490003], bl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000147fdf : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000014e16c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d98c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000c8874 : xchg byte ptr [rdi], ch ; add byte ptr [rcx], dh ; shl byte ptr [rdi + rax*8], cl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rdx ; ret
0x000000000014ea9c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000003cf1f : xchg byte ptr [rdx + 0xf000000], ah ; mov dh, 0x48 ; or dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040164 : xchg byte ptr [rdx + 0xf000000], ah ; mov dh, 0x70 ; or dword ptr [rbp - 0x57f2faa], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003cf3f : xchg byte ptr [rdx + 0xf000000], al ; mov dh, 0x48 ; or cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040184 : xchg byte ptr [rdx + 0xf000000], al ; mov dh, 0x70 ; or cl, byte ptr [rbp - 0x57f2faa] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003ce1f : xchg byte ptr [rdx + 0xf000001], ah ; mov dh, 0x48 ; add dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040064 : xchg byte ptr [rdx + 0xf000001], ah ; mov dh, 0x70 ; add dword ptr [rbp - 0x57f2faa], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003ce3f : xchg byte ptr [rdx + 0xf000001], al ; mov dh, 0x48 ; add cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040084 : xchg byte ptr [rdx + 0xf000001], al ; mov dh, 0x70 ; add cl, byte ptr [rbp - 0x57f2faa] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000003ce9f : xchg byte ptr [rdx], ah ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x48 ; add eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000400e4 : xchg byte ptr [rdx], ah ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x70 ; add eax, 0x80d0568d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000001a5cb9 : xchg byte ptr [rsp + rcx*4], al ; add ecx, dword ptr [rbp + 0x4c0002] ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x000000000003ceff : xchg dl, al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x48 ; or byte ptr [rbp - 0x57f2faf], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000040144 : xchg dl, al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x70 ; or byte ptr [rbp - 0x57f2faa], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000007510c : xchg dword ptr [rax + 1], edi ; add byte ptr [rax], al ; mov rdx, r15 ; mov rdi, r12 ; call 0x913bd
0x0000000000116d3e : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x116d3d ; pop rdx ; pop r10 ; ret
0x00000000000c8704 : xchg dword ptr [rdi], ebp ; add byte ptr [rcx], dh ; shl byte ptr [rdi + rax*8], cl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rdx ; ret
0x000000000016047d : xchg dword ptr [rdx + 2], ebx ; add byte ptr [rdi + 0x63], cl ; or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000001728c5 : xchg dword ptr [rdx + rdi*8 - 1], eax ; add rsp, 0x80 ; add rsp, 8 ; ret
0x000000000002c179 : xchg dword ptr [rdx], edx ; add dword ptr [rax], eax ; add byte ptr [rdi + 0x63], cl ; add al, 0x8b ; add r8, r11 ; jmp r8
0x000000000007951f : xchg eax, ebp ; cli ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; lea esp, dword ptr [rdx + rdi*8 - 1] ; xor eax, eax ; pop rbx ; ret
0x0000000000130e1a : xchg eax, ebp ; nop dword ptr [rax + rax] ; mov rax, qword ptr [rbx + 8] ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000799d3 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; pop rbx ; ret
0x00000000001358f0 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; add eax, 1 ; ret
0x0000000000109053 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000131c64 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x0000000000100d84 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000010907d : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000013d457 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000001308ca : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000cea44 : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 9], 0xd8 ; or rax, 0x20 ; ret
0x00000000000ce914 : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 9], 0xd8 ; or rax, 0x7f ; ret
0x00000000000ceb24 : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 9], 0xd8 ; or rax, 1 ; ret
0x00000000000ec25c : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x00000000000ec23f : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; cmp dword ptr [rdi + 0x10], ecx ; cmovb eax, edx ; ret
0x000000000011071e : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006c2ea : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x0000000000002b89 : xchg eax, ebp ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x0000000000003675 : xchg eax, ebp ; xor al, 0x71 ; cmp eax, 0x6e510fa3 ; stosb byte ptr [rdi], al ; stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x00000000000418a1 : xchg eax, ebx ; adc al, 0 ; lea rdi, qword ptr [rip + 0x14932c] ; mov edx, 0x559 ; call 0x2dbc1
0x00000000001536c3 : xchg eax, ebx ; add rsi, rdx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000000d69d4 : xchg eax, ebx ; mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x0000000000118364 : xchg eax, ebx ; mov rax, rdi ; ret
0x000000000012c933 : xchg eax, ebx ; sub dword ptr [rax], eax ; ror rdi, 0x11 ; xor rdi, qword ptr fs:[0x30] ; call rax
0x00000000000d501d : xchg eax, ebx ; sub dword ptr [rbx], ecx ; add byte ptr [rdi], cl ; mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000034176 : xchg eax, ecx ; add al, 0x75 ; out 0x41, al ; mov eax, dword ptr [rcx + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x00000000001883f2 : xchg eax, ecx ; add dh, dh ; ljmp ptr [rcx - 0x3c000500] ; add dh, bh ; jmp rdi
0x00000000000fa0e3 : xchg eax, ecx ; insd dword ptr [rdi], dx ; sub al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000016b9d8 : xchg eax, edi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000122629 : xchg eax, edi ; add byte ptr [rax], al ; test rax, rax ; je 0x122649 ; lea rdi, qword ptr [rip + 0x2a3068] ; call rax
0x0000000000033456 : xchg eax, edi ; add rdx, rdi ; jmp rdx
0x00000000000f7ee1 : xchg eax, edi ; clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsi ; js 0xf7f43 ; mov dword ptr [rdi + 0x100], edx ; ret
0x000000000016ba95 : xchg eax, edi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ba0e : xchg eax, edi ; movabs al, byte ptr [0xa096ef0f66000000] ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000138295 : xchg eax, edi ; nop ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; enter 0x4289, 0x10 ; mov eax, 1 ; ret
0x0000000000138175 : xchg eax, edi ; nop ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; enter 0x4289, 0xc ; mov eax, 1 ; ret
0x000000000016b9f3 : xchg eax, edi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000d8102 : xchg eax, edi ; nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x000000000016ba44 : xchg eax, edi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000ce806 : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x000000000010b3a8 : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; cmp qword ptr [rcx + 0x10], rsi ; cmovb eax, edx ; ret
0x00000000000fa249 : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x00000000000fd671 : xchg eax, edi ; ror dword ptr [rdi], -0x6e ; ret 0xcc80
0x00000000000d94be : xchg eax, edi ; ror dword ptr [rdi], -0x6e ; ret 0xd138
0x00000000001a2b65 : xchg eax, edx ; add byte ptr [rax], al ; sbb byte ptr [rdi], al ; std ; jmp rdi
0x0000000000002b83 : xchg eax, edx ; enter -0x254f, -0x23 ; jb 0x2b2d ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x0000000000193cac : xchg eax, edx ; insb byte ptr [rdi], dx ; cld ; jmp qword ptr [rdx]
0x00000000000dff24 : xchg eax, edx ; lea rdi, qword ptr [rax + rsi*4] ; shl rdx, 2 ; xor esi, esi ; call 0x9181f
0x000000000016b9e0 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001b2f95 : xchg eax, esi ; add dword ptr [rax], eax ; add rdi, rsi ; call rsi
0x000000000016ba9d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016b9fb : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ba4c : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000488cb : xchg eax, esi ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; or eax, 1 ; ret
0x000000000018257c : xchg eax, esi ; sbb eax, dword ptr [rdx + 0x2ff463c7] ; hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00000000000bf0c6 : xchg eax, esi ; stosb byte ptr [rdi], al ; sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000001990d4 : xchg eax, esp ; add al, byte ptr [rax] ; push rsp ; movsd dword ptr [rdi], dword ptr [rsi] ; cli ; jmp rsp
0x00000000001aafb8 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rsi + rdx + 1], ah ; add byte ptr [rax], dl ; jge 0x1aafc2 ; jmp rdi
0x00000000000b5982 : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov gs, word ptr [rbx - 0x7cfffff8] ; ret
0x00000000001b40ec : xchg eax, esp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; push rax ; jl 0x1b40f1 ; call rcx
0x00000000001a74ec : xchg eax, esp ; fild dword ptr [rax] ; add byte ptr [rax], ah ; pop rdi ; int1 ; call rbx
0x0000000000195e39 : xchg eax, esp ; out dx, eax ; dec dword ptr [rsi + rdi*8 - 0x6b2c0000] ; out dx, eax ; call rsp
0x0000000000047191 : xchg eax, esp ; rol byte ptr [rcx - 0x7d], 0xfe ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x540a
0x000000000013d1b7 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000000456c3 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000006c2b3 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000013ec59 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000ace1a : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; movzx eax, al ; ret
0x0000000000130dab : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000013e129 : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000010a01b : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7f], 0xc4 ; nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000194b38 : xchg eax, esp ; sub ebp, edx ; jmp qword ptr [rdi + rdi*2 + 0x2be40000]
0x0000000000183cf7 : xchg esp, edi ; adc ch, byte ptr [rip + 0x8acc8c6] ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000017e4d9 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000105225 : xlatb ; add eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x0000000000091403 : xlatb ; jb 0x9140e ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000011460f : xlatb ; lea eax, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000126886 : xlatb ; mov qword ptr [r9], rdi ; ret
0x0000000000034c3a : xlatb ; movq xmm1, rdi ; movapd xmm0, xmm1 ; ret
0x0000000000097e02 : xlatb ; rcl bl, 0xf8 ; test eax, eax ; je 0x97e31 ; bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x0000000000162a82 : xlatb ; ror byte ptr [rax - 0x73], 0x76 ; adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000162abe : xlatb ; ror byte ptr [rax - 0x73], 0x76 ; adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000a193f : xlatb ; ror byte ptr [rax - 0x73], 0x76 ; adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x13
0x0000000000168c3e : xlatb ; ror byte ptr [rdi], 0x28 ; fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39c9b65
0x0000000000169cbe : xlatb ; ror byte ptr [rdi], 0x28 ; fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39cabe5
0x00000000000a0b74 : xlatb ; ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x00000000000a0cf6 : xlatb ; shl dword ptr [rcx], -0x30 ; test eax, eax ; je 0xa0cde ; bsr eax, eax ; add rax, rdi ; ret
0x00000000001874fd : xor ah, 0xff ; add eax, dword ptr [rcx - 0x7ef2000c] ; hlt ; call qword ptr [rdi]
0x00000000001877b1 : xor ah, 0xff ; sar byte ptr [rdi - 0xc], 1 ; call rax
0x00000000001874f9 : xor ah, 0xff ; stc ; xor ah, 0xff ; add eax, dword ptr [rcx - 0x7ef2000c] ; hlt ; call qword ptr [rdi]
0x00000000000a5b98 : xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00000000000a2dc0 : xor ah, ah ; mov byte ptr [rdx + 1], ah ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000000a2dd0 : xor ah, ah ; mov byte ptr [rdx + 2], ah ; mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000000a2e00 : xor ah, ah ; mov byte ptr [rdx + 4], ah ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000000a5b2e : xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000a2e70 : xor ah, ah ; mov byte ptr [rdx + 8], ah ; movlpd xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000301ca : xor ah, byte ptr [rdi] ; cmp dword ptr [rax], eax ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x00000000001a74e8 : xor al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; fild dword ptr [rax] ; add byte ptr [rax], ah ; pop rdi ; int1 ; call rbx
0x000000000007fe5b : xor al, 0 ; jne 0x7fe59 ; add rsp, 8 ; mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000079ffb : xor al, 0 ; mov qword ptr [rbx + 0xd8], rcx ; mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x0000000000002055 : xor al, 0x39 ; push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x0000000000034c34 : xor al, 0x48 ; and edx, eax ; or rdi, rdx ; movq xmm1, rdi ; movapd xmm0, xmm1 ; ret
0x00000000000a0c9b : xor al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x000000000006da6e : xor al, 0x48 ; lea ecx, dword ptr [rbx + 0x40] ; mov esi, 1 ; mov rdi, rbx ; call r8
0x0000000000195d20 : xor al, 0x64 ; out dx, eax ; push qword ptr [rdi + rsi*8 + 0x65240000] ; out dx, eax ; jmp rsp
0x0000000000003676 : xor al, 0x71 ; cmp eax, 0x6e510fa3 ; stosb byte ptr [rdi], al ; stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x0000000000199708 : xor al, 0x9e ; cld ; dec esp ; adc eax, dword ptr [rcx] ; add byte ptr [rdi + rdi*4 - 4], dh ; jmp rsp
0x000000000006d76b : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000000c3961 : xor al, 0xc ; add byte ptr [rdi], cl ; mov dh, 0xfa ; movsxd rax, dword ptr [r8 + rdi*4] ; add rax, r8 ; jmp rax
0x00000000000c5185 : xor al, 0xc7 ; mov rdi, rbp ; call 0x913b7
0x0000000000198edd : xor al, 2 ; add byte ptr [rdi + rsi*2], ah ; cli ; call rsp
0x00000000001441ea : xor bl, byte ptr [rdi] ; sub byte ptr [rax], al ; mov eax, 1 ; add rsp, 8 ; ret
0x0000000000138191 : xor byte ptr [r8 - 0x77], r9b ; push rdi ; cmp byte ptr [rax + 1], bh ; ret
0x000000000008b5a4 : xor byte ptr [r9 + r9*4 + 0x4b], cl ; mov qword ptr [rbx], rsi ; mov rdi, r9 ; call rcx
0x00000000000790ff : xor byte ptr [rax + 0x39], cl ; adc byte ptr [r10 + 0x2a], r14b ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000e4c4f : xor byte ptr [rax + 0x63], cl ; add al, 0x82 ; mov rbp, rsi ; mov qword ptr [rsp + 0x28], rdi ; add rax, rdx ; jmp rax
0x0000000000078c78 : xor byte ptr [rax - 0x3f], cl ; clc ; add al, bl ; nop ; mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x000000000008681d : xor byte ptr [rax - 0x75], cl ; add eax, 0x33a6bb ; mov qword ptr [rax], rdi ; ret
0x0000000000023f7b : xor byte ptr [rax - 0x75], cl ; je 0x23fb0 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000024fb2 : xor byte ptr [rax - 0x75], cl ; je 0x24fe7 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000026c1e : xor byte ptr [rax - 0x75], cl ; je 0x26c53 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00000000001381a3 : xor byte ptr [rax - 0x75], cl ; jg 0x1381f1 ; mov eax, 1 ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x00000000000238b3 : xor byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x38 ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000023c38 : xor byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x48 ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000073812 : xor byte ptr [rax - 0x77], cl ; push rax ; mov rdx, rdi ; jbe 0x73751 ; mov eax, dword ptr [rsi] ; jmp 0x737f7
0x0000000000138192 : xor byte ptr [rax - 0x77], cl ; push rdi ; cmp byte ptr [rax + 1], bh ; ret
0x0000000000122edc : xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rdi, qword ptr [rip + 0x2a2815] ; call rax
0x000000000002f5f9 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x000000000006efa0 : xor byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x6efc8 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006f070 : xor byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x6f098 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x00000000000c7c29 : xor byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0xc7c55 ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000f80fd : xor byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0xf8160 ; xor edx, edx ; xor esi, esi ; mov rdi, rbx ; call rax
0x00000000000aa2f7 : xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000004004c : xor byte ptr [rbp - 0x57f2faa], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000171bcb : xor byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x0000000000193370 : xor byte ptr [rbx + rdi*8 - 0x4424f01], bh ; push qword ptr [rax] ; mov edi, 0xc0b0fffb ; sti ; push qword ptr [rax] ; ret 0xfffb
0x0000000000193344 : xor byte ptr [rbx + rdi*8 - 0x4527f01], ch ; call rax
0x00000000001a5cb6 : xor byte ptr [rbx - 0x73fb79fb], al ; add ecx, dword ptr [rbp + 0x4c0002] ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x000000000008b5a5 : xor byte ptr [rcx + rcx*4 + 0x4b], cl ; mov qword ptr [rbx], rsi ; mov rdi, r9 ; call rcx
0x000000000013e98f : xor byte ptr [rcx], dh ; sar byte ptr [rdx - 1], 0x4c ; mov esi, esi ; mov rdi, rbp ; call r12
0x00000000001a6440 : xor byte ptr [rdi - 0x10], dh ; call qword ptr [rax]
0x0000000000193378 : xor byte ptr [rdi - 0x3f4f0005], bh ; sti ; push qword ptr [rax] ; ret 0xfffb
0x00000000000cddac : xor byte ptr [rdi], ch ; add byte ptr [rdi + rax*8], ah ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000187b90 : xor byte ptr [rdi], ch ; cmc ; call rax
0x0000000000103099 : xor byte ptr [rdi], cl ; lahf ; ret 0xe883
0x0000000000112a42 : xor byte ptr [rdi], cl ; mov esi, 0xbe0f48cb ; ret
0x0000000000073130 : xor byte ptr [rdi], cl ; ret 0x4389
0x00000000000af297 : xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf883
0x00000000001aab40 : xor byte ptr [rdi], dl ; hlt ; call qword ptr [rdx]
0x0000000000097582 : xor byte ptr [rdx + 0xd], 0x2a ; cmp rdi, 0xd ; je 0x975a6 ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x000000000016b78f : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016b78a : xor byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000003763d : xor byte ptr [rsi - 0x70], ah ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x00000000001942e0 : xor byte ptr [rsp + rdi*8 - 0x36c5f01], dl ; call qword ptr [rax]
0x0000000000193894 : xor byte ptr [rsp + rdi*8 - 1], al ; adc byte ptr [rsi - 4], al ; push rax ; cld ; call rax
0x00000000000aa088 : xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000aa09e : xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000aa0c0 : xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000aa0de : xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000aa0fe : xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000aa124 : xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000aa140 : xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000aa160 : xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000aa180 : xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000aa1a6 : xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000aa1c8 : xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000aa1e6 : xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000aa206 : xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000aa222 : xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000aa242 : xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000aa262 : xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000aa282 : xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000aa2a8 : xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000aa2f8 : xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a9fce : xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a9fec : xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000aa00c : xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000aa02e : xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000aa04e : xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000aa06e : xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a9f04 : xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a9f16 : xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a9f2c : xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a9f44 : xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a9f5a : xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a9f6c : xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a9f8a : xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a9f96 : xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000a9fac : xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a9ef0 : xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x000000000006da05 : xor cl, byte ptr [rax - 0x73] ; cmp eax, 0x118013 ; movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x00000000000a5a10 : xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000034b50 : xor dl, 0xf ; adc dword ptr [rdi], eax ; and rax, rdx ; movq xmm0, rax ; ret
0x00000000000025af : xor dword ptr [rbx + 0x6e], 0x70 ; in al, dx ; scasd eax, dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x00000000000865db : xor dword ptr [rbx + rdi*8], ecx ; call qword ptr [rax - 0x72b71077]
0x0000000000108f43 : xor dword ptr [rdi + 0x2b], edi ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x0000000000109743 : xor dword ptr [rdi + 0x2b], esi ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000147aa9 : xor dword ptr [rdi + 0x634f0004], 0xc ; mov ah, byte ptr [rsi + 0xf] ; je 0x147a87 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000013764b : xor dword ptr [rdi - 0x11], ebp ; dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x0000000000198e55 : xor dword ptr [rdx], eax ; add ah, al ; insd dword ptr [rdi], dx ; cli ; call rsp
0x0000000000193544 : xor dword ptr [rsi - 0x59ce0003], esp ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call rcx
0x0000000000193624 : xor dword ptr [rsi - 0x59ce0003], esp ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; dec dword ptr [rax] ; sbb edi, esp ; call rax
0x0000000000193514 : xor dword ptr [rsi - 0x59ce0003], esp ; std ; push qword ptr [rcx] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rax
0x0000000000100895 : xor eax, 0x2c3836 ; mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x000000000016e613 : xor eax, 0x48000002 ; mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000013a3b1 : xor eax, 0x53a7b ; mov r8, rbx ; mov ecx, r12d ; mov rdi, rbp ; call 0x56660
0x000000000016ec35 : xor eax, 0x7701fa80 ; cmp dh, byte ptr [rdx + 2] ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000001142a1 : xor eax, 0x7910c ; mov rdx, rax ; mov rdi, r14 ; xor eax, eax ; call 0x1105af
0x00000000000ca1bc : xor eax, 0xc1f5f ; mov rdi, r12 ; cmove rcx, rax ; xor eax, eax ; call 0x56490
0x00000000000aac62 : xor eax, 0xdb859 ; movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x0000000000122ed9 : xor eax, dword ptr [0x30] ; lea rdi, qword ptr [rip + 0x2a2815] ; call rax
0x000000000002f5f6 : xor eax, dword ptr [0x30] ; mov rdi, r13 ; call rax
0x00000000000c7c26 : xor eax, dword ptr [0x30] ; test rax, rax ; je 0xc7c58 ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000001507d0 : xor eax, dword ptr [rax + 0x3b7701fa] ; jb 0x1507ea ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000086823 : xor eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x0000000000086819 : xor eax, dword ptr [rax] ; mov qword ptr [rax], rsi ; mov rax, qword ptr [rip + 0x33a6bb] ; mov qword ptr [rax], rdi ; ret
0x0000000000084176 : xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rcx ; mov rdi, r14 ; mov qword ptr [rsp + 0x10], r14 ; call qword ptr [rax]
0x000000000014ee39 : xor eax, dword ptr [rbp + 4] ; add byte ptr [rdi + 0x63], cl ; or al, 0x8a ; vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000013e124 : xor eax, dword ptr [rbx - 0x6bf0fd08] ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000196635 : xor eax, dword ptr [rcx] ; add byte ptr [rdx + rdi*4 - 0xe], al ; jmp rsp
0x00000000000d80dc : xor eax, eax ; cmp byte ptr [rdi + 0x65], 0 ; setne al ; add eax, eax ; ret
0x000000000003a936 : xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x3a948 ; pop rbx ; ret
0x0000000000078ca1 : xor eax, eax ; cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x00000000000fe46e : xor eax, eax ; cmp rdi, rdx ; ja 0xfe4a8 ; ret
0x0000000000116747 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x00000000000769a6 : xor eax, eax ; lea rsi, qword ptr [rbp + 0x90] ; lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x000000000012592d : xor eax, eax ; mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00000000000fd9c0 : xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x000000000013d247 : xor eax, eax ; mov dword ptr [rsp], 2 ; mov rdi, rsp ; call rdx
0x000000000013e990 : xor eax, eax ; mov edx, 0xffffffff ; mov rsi, r14 ; mov rdi, rbp ; call r12
0x000000000013d143 : xor eax, eax ; mov edx, 0xffffffff ; mov rsi, rbx ; mov rdi, r15 ; call r14
0x000000000013e866 : xor eax, eax ; mov edx, 0xffffffff ; mov rsi, rbx ; mov rdi, rbp ; call rcx
0x000000000003aef2 : xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x00000000000559c3 : xor eax, eax ; mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000558f1 : xor eax, eax ; mov qword ptr [rdi], r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bb419 : xor eax, eax ; mov rcx, r13 ; lea r9, qword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x00000000000ad5e1 : xor eax, eax ; mov rcx, r13 ; mov rdx, r12 ; lea r9, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rbx
0x00000000000ad8c1 : xor eax, eax ; mov rcx, r13 ; mov rdx, r12 ; lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000768ca : xor eax, eax ; mov rcx, r14 ; lea rsi, qword ptr [rbp + 0x50] ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000012caa7 : xor eax, eax ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x00000000000ad318 : xor eax, eax ; mov rcx, r15 ; mov rdx, r12 ; lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x000000000012e715 : xor eax, eax ; mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x000000000012fbd5 : xor eax, eax ; mov rsi, qword ptr [rsp + 0x2a00] ; mov rdi, rbx ; mov rcx, qword ptr [rsp] ; call rcx
0x0000000000138468 : xor eax, eax ; mov rsi, qword ptr [rsp + 0x30] ; mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000134df0 : xor eax, eax ; mov rsi, qword ptr [rsp + 0x38] ; mov rdi, r12 ; mov rcx, qword ptr [rsp + 0x30] ; call rcx
0x000000000013500a : xor eax, eax ; mov rsi, qword ptr [rsp + 0x50] ; mov rdi, r12 ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x0000000000135657 : xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x0000000000135677 : xor eax, eax ; mov rsi, rdx ; mov dword ptr [rdi + 0x10], 2 ; add rdi, 0x10 ; jmp rcx
0x0000000000138127 : xor eax, eax ; mov rsi, rdx ; mov dword ptr [rdi + 0x58], 2 ; add rdi, 0x58 ; jmp rcx
0x0000000000137847 : xor eax, eax ; mov rsi, rdx ; mov dword ptr [rdi + 0x68], 2 ; add rdi, 0x68 ; jmp rcx
0x000000000003b5e0 : xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x0000000000144b47 : xor eax, eax ; rep movsq qword ptr [rdi], qword ptr [rsi] ; mov qword ptr [rbp], rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000126735 : xor eax, eax ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x0000000000078cd0 : xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000078ce0 : xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x00000000001166e3 : xor eax, eax ; test ecx, ecx ; jne 0x1166fc ; cmp qword ptr [rdi], 0 ; je 0x116705 ; ret
0x0000000000033ef5 : xor eax, edx ; movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x33ee1 ; ret
0x00000000001177d1 : xor ecx, dword ptr [rax - 0x73] ; jne 0x1177c2 ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x0000000000034d80 : xor ecx, ecx ; addsd xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x0000000000098c0f : xor edi, edi ; mov rax, rdi ; ret
0x000000000003f78c : xor edx, dword ptr [rip + 0x590ff200] ; shl byte ptr [rdi + rax*8], 0x22 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000104ff8 : xor edx, edx ; mov esi, 1 ; mov rdi, rbp ; call rbx
0x00000000000a050d : xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000012cdd0 : xor edx, edx ; mov rsi, r12 ; mov rdi, rbx ; mov rcx, r13 ; call r15
0x000000000012ccbe : xor edx, edx ; mov rsi, r15 ; mov rdi, rbx ; mov qword ptr [rsp], rax ; mov rcx, rax ; call r12
0x00000000000f8106 : xor edx, edx ; xor esi, esi ; mov rdi, rbx ; call rax
0x0000000000104af5 : xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000104b1a : xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000104b3e : xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000104b5e : xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000f8108 : xor esi, esi ; mov rdi, rbx ; call rax
0x0000000000187501 : xor esp, 0xf4810dff ; call qword ptr [rdi]
0x00000000000bb418 : xor r8d, r8d ; mov rcx, r13 ; lea r9, qword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x00000000000ad5e0 : xor r8d, r8d ; mov rcx, r13 ; mov rdx, r12 ; lea r9, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rbx
0x00000000000ad8c0 : xor r8d, r8d ; mov rcx, r13 ; mov rdx, r12 ; lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x000000000012caa6 : xor r8d, r8d ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x00000000000ad317 : xor r8d, r8d ; mov rcx, r15 ; mov rdx, r12 ; lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x0000000000122ed8 : xor rax, qword ptr [0x30] ; lea rdi, qword ptr [rip + 0x2a2815] ; call rax
0x000000000002f5f5 : xor rax, qword ptr [0x30] ; mov rdi, r13 ; call rax
0x0000000000122ed7 : xor rax, qword ptr fs:[0x30] ; lea rdi, qword ptr [rip + 0x2a2815] ; call rax
0x000000000002f5f4 : xor rax, qword ptr fs:[0x30] ; mov rdi, r13 ; call rax
0x0000000000033ef4 : xor rax, rdx ; movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x33ee2 ; ret
0x000000000012b79b : xor rdi, qword ptr [0x30] ; call rax
0x000000000012b79a : xor rdi, qword ptr fs:[0x30] ; call rax
0x00000000000f8105 : xor rdx, rdx ; xor esi, esi ; mov rdi, rbx ; call rax
0x00000000001877b0 : xor spl, 0xff ; sar byte ptr [rdi - 0xc], 1 ; call rax
